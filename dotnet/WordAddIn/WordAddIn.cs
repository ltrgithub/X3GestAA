using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Xml.Linq;
using Word = Microsoft.Office.Interop.Word;
using Office = Microsoft.Office.Core;
using Microsoft.Office.Tools.Word;
using Microsoft.Office.Tools.Word.Extensions;
using System.Windows.Forms;

namespace WordAddIn
{
    public partial class WordAddIn
    {
        public BrowserDialog browserDialog = null;

        private void ThisAddIn_Startup(object sender, System.EventArgs e)
        {
            this.Application.DocumentChange += new Word.ApplicationEvents4_DocumentChangeEventHandler(on_document_changed);

            // Bevor merging starts (Only called on user interaction)
            this.Application.MailMergeBeforeMerge += new Word.ApplicationEvents4_MailMergeBeforeMergeEventHandler(on_merge_start);
            this.Application.MailMergeDataSourceLoad += new Word.ApplicationEvents4_MailMergeDataSourceLoadEventHandler(on_datasource_load);
        }

        private void ThisAddIn_Shutdown(object sender, System.EventArgs e)
        {
        }

        // Called when ever a document is opend by word or one is activated
        public void on_document_changed()
        {
            Word.Document doc = this.Application.ActiveDocument;
            SyracuseOfficeCustomData customData = SyracuseOfficeCustomData.getFromDocument(doc);
            if (customData != null) // Document generated by X3 and supplied with additional data
            {
                if (customData.isForceRefresh())
                {
                    CreateMailMerge(doc);
                    customData.setForceRefresh(false);
                    customData.writeDictionaryToDocument();
                }
            }
        }

        public void on_datasource_load(Word.Document doc) 
        {
            //MessageBox.Show("LOAD");
        }

        public void on_merge_start(Word.Document doc, int StartRecord, int EndRecord, ref bool Cancel)
        {
            //MessageBox.Show("START");
        }

        public void connect()
        {
            if (browserDialog == null)
            {
                browserDialog = new BrowserDialog();
                browserDialog.connect("http://localhost:8124");
            }
        }

        public void serverSettings()
        {
            ServerSettings settings = new ServerSettings();
            if (settings.ShowDialog() == DialogResult.OK)
            {
                String connectUrl = settings.GetConnectUrl();
            }
        }

        // Add MailMerge DS to active Document after selecting DS
        public void CreateMailMerge(Word.Document doc)
        {
            if (!connectedToServer())
            {
                return;
            }
            browserDialog.createMailMergeDocument(doc);
        }
        /*
        public void RefreshDataSource(Word.Document doc)
        {
            if (!connectedToServer())
            {
                return;
            }
            browserDialog.refreshDataSource(doc);
        }
        */

        public Boolean connectedToServer() 
        {
            if (browserDialog == null)
            {
                connect();
            }
            return true;
        }
        
        #region Von VSTO generierter Code

        /// <summary>
        /// Erforderliche Methode für die Designerunterstützung.
        /// Der Inhalt der Methode darf nicht mit dem Code-Editor geändert werden.
        /// </summary>
        private void InternalStartup()
        {
            this.Startup += new System.EventHandler(ThisAddIn_Startup);
            this.Shutdown += new System.EventHandler(ThisAddIn_Shutdown);
        }
        
        #endregion
    }
}
