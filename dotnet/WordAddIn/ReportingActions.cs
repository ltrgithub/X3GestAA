using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using Microsoft.Office.Interop.Word;
using System.Windows.Forms;

namespace WordAddIn
{
    public class ReportingActions
    {
        public const string rpt_build_tpl   = "rpt_build_tpl";
        public const string rpt_is_tpl      = "rpt_is_tpl";
        public const string rpt_fill_tpl    = "rpt_fill_tpl";
        public const string rpt_refresh_tpl = "rpt_refresh_tpl";

        public BrowserDialog browserDialog = null;

        public ReportingActions(BrowserDialog browserDialog)
        {
            this.browserDialog = browserDialog;
        }

        public static Boolean isReportingDocument(Document doc)
        {
            SyracuseOfficeCustomData customData = SyracuseOfficeCustomData.getFromDocument(doc);
            if (customData != null)
            {
                String mode = customData.getCreateMode();
                if (rpt_build_tpl.Equals(mode) || rpt_fill_tpl.Equals(mode) || rpt_is_tpl.Equals(mode))
                {
                    return true;
                }
            }
            return false;
        }

        public void ActiveDocumentChanged(Document doc)
        {
            SyracuseOfficeCustomData customData = SyracuseOfficeCustomData.getFromDocument(doc);
            if (customData != null) // Document generated by X3 and supplied with additional data
            {
                String mode = customData.getCreateMode();
                if (rpt_build_tpl.Equals(mode))
                {
                    if (customData.isForceRefresh())
                    {
                        CreateWordReportTemplate(doc, customData);
                    }
                    Globals.Ribbons.Ribbon.buttonPreview.Enabled = true;
                    Globals.Ribbons.Ribbon.checkBoxShowTemplatePane.Enabled = true;
                }
                else if (rpt_fill_tpl.Equals(mode))
                {
                    if (customData.isForceRefresh())
                    {
                        PopulateWordReportTemplate(doc, customData);
                    }
                }
                else if (rpt_is_tpl.Equals(mode))
                {
                    if (customData.isForceRefresh())
                    {
                        RefreshWordReportTemplate(doc, customData);
                    }
                    Globals.Ribbons.Ribbon.buttonPreview.Enabled = true;
                    Globals.Ribbons.Ribbon.checkBoxShowTemplatePane.Enabled = true;
                }
                if ((customData.getDocumentTemplateUrl() != null) && (Globals.Ribbons.Ribbon.buttonSave.Enabled == true))
                {
                    Globals.Ribbons.Ribbon.buttonRefreshReport.Enabled = true;
                }
                else
                {
                    Globals.Ribbons.Ribbon.buttonRefreshReport.Enabled = false;
                }
            }
        }

        public void CreateWordReportTemplate(Document doc, SyracuseOfficeCustomData customData)
        {
            customData.setForceRefresh(false);
            customData.writeDictionaryToDocument();
            browserDialog.loadPage("/msoffice/lib/word/ui/main.html?url=%3Frepresentation%3Dwordhome.%24dashboard", customData);
        }

        public void RefreshWordReportTemplate(Document doc, SyracuseOfficeCustomData customData)
        {
            customData.setForceRefresh(false);
            customData.writeDictionaryToDocument();
            browserDialog.loadPage("/msoffice/lib/word/ui/main.html?url=%3Frepresentation%3Dwordhome.%24dashboard", customData);
        }

        public void PopulateWordReportTemplate(Document doc, SyracuseOfficeCustomData customData)
        {
            // save templateUrl within document for refresh
            customData.setDocumentTemplateUrl(customData.getDocumentUrl());

            // Remove document URL, this has to be done because a template opened from collab. space has already an url stored inside the
            // document. But after the population of the template it is a new independent document!
            customData.setDocumentUrl("");
            customData.setDocumentTitle("");
            customData.setForceRefresh(false);
            customData.writeDictionaryToDocument();
            browserDialog.loadPage("/msoffice/lib/word/ui/main.html?url=%3Frepresentation%3Dwordhome.%24dashboard", customData);
        }

        public void RefreshReport()
        {
            Document doc = Globals.WordAddIn.getActiveDocument();
            if (doc == null)
            {
                return;
            }
            SyracuseOfficeCustomData customData = SyracuseOfficeCustomData.getFromDocument(doc);
            if (customData == null)
            {
                return;
            }

            customData.setCreateMode("rpt_refresh_tpl");
            customData.writeDictionaryToDocument();

            browserDialog.loadPage("/msoffice/lib/word/ui/main.html?url=%3Frepresentation%3Dwordhome.%24dashboard", customData);
        }

        public void CreateWordReportPreview()
        {
            Document doc = Globals.WordAddIn.getActiveDocument();
            if (doc == null)
            {
                return;
            }
            SyracuseOfficeCustomData customData = SyracuseOfficeCustomData.getFromDocument(doc);
            if (customData == null)
            {
                return;
            }
            String mode = customData.getCreateMode();
            if (!rpt_is_tpl.Equals(mode))
            {
                return;
            }

            doc.Range().Copy();
            doc = Globals.WordAddIn.Application.Documents.Add();
            doc.Range().Paste();
            
            SyracuseOfficeCustomData customDataPreview = SyracuseOfficeCustomData.getFromDocument(doc, true);
            customDataPreview.setForceRefresh(false);
            customDataPreview.setResourceUrl(customData.getResourceUrl());
            customDataPreview.setServerUrl(customData.getServerUrl());
            customDataPreview.writeDictionaryToDocument();
            customDataPreview.setCreateMode(rpt_fill_tpl);

            PopulateWordReportTemplate(doc, customDataPreview);
        }
    }
}
