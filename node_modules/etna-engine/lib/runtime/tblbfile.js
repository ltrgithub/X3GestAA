"use strict";
var X3Error = require('./errors').X3Error;
var helpers = require('syracuse-core/lib/helpers');
var util = require('./util');

var Blbfile = helpers.defineClass(function(v) { // constructor
    var self = this;
    if (v instanceof Buffer) {
      self.value = v ;
    }
    else throw util.badOperand(v) ;
  }, null, { // Pass null if no parent class - public methods follow

  valueOf : function() {
    var self = this;
    return self.value ;
  },
  // more public methods
  x3IsNumeric : function() {
    return false ;
  },
  x3AssertOverflow : function ( type ) {
    return true ;    
  },

  x3Minus : function( ) {
    throw util.badOperand(v) ;
  },

  x3ToDouble : function() {
    throw util.badOperand(v) ;
  },

  x3ToString : function() {
    throw util.badOperand(v) ;
  },

  x3ToBCD : function() {
    throw util.badOperand(v) ;
  },

  x3ToInteger : function() {
    throw util.badOperand(v) ;
  },

  x3ToDate : function() {
    throw util.badOperand(v) ;
  },

  x3ToDatetime : function() {
    throw util.badOperand(v) ;
  },

  x3IsZero : function() {
    throw util.badOperand(v) ;
  },

  x3IsEmpty : function( ) {
    throw util.badOperand(v) ;
  },

  x3Length : function( ) {
    var self = this;
    return self.value.length ;
  },

  x3Compare : function( b ) {
    var self = this;
      if (!util.x3IsBlbfile( b ))
        throw util.badOperand(b) ;

    if (self.value.length < b.value.length) return -1 ;
    else if (self.value.length > b.value.length) return 1 ;
    else {
      for (var i = 0; i < this.value.length; i++) {
        if (self.value[i] < b.value[i]) return -1 ;
        else if (self.value[i] > b.value[i]) return 1 ;
      }
      return 0 ;
    }
  },

  x3Add : function( b ) {
    throw util.badOperand(b);    
  },

  x3Sub : function( b ) {
    throw util.badOperand(b);    
  },

  x3Mul : function( b ) {
    throw util.badOperand(b);    
  },

  x3Div : function( b ) {
    throw util.badOperand(b);    
  },

  x3Mod : function( b ) {
    throw util.badOperand(b);    
  },

  x3Pow : function( b ) {
    throw util.badOperand(b);
  },

  x3Xor : function( b ) {
    throw util.badOperand(b);
  },

  x3Abs : function() {
    throw util.badOperand(b);
  },

  x3Truncate : function() {
    throw util.badOperand(b);
  },

});

exports.Blbfile = Blbfile ;