"use strict";
var X3Error = require('./errors').X3Error;
var util = require('./util');
var bcd = require('./bcd');


exports.isUUID = function(val) {
	return val instanceof UUID ;
}

var UUID = (function() {
	function UUID( v ) {

    } ;

  	UUID.prototype.toUUID = function() {
    	return this ;
  	} ;

  	UUID.prototype.toString = function( v ) {
    	return ""+this.value ;
  	} ;

   	UUID.prototype.toDouble = function() {
    	return new Double( this ) ;
  	} ;
	
   	UUID.prototype.toBCD = function() {
    	return new BCD( this ) ;
  	} ;

	UUID.prototype.toDate = function() {
    	throw util.badOperand(this.value) ;
  	} ; 	

  UUID.prototype.toDatetime = function() {
      throw util.badOperand(this.value) ;
    } ;       

	UUID.prototype.isNumeric = function() {
		return false ;
	} ;

  	UUID.prototype.isZero = function() {
		return (this.value === 0)?true : false ;
	} ;	

  	UUID.prototype.compare = function( b ) {

  	} ;	

	UUID.prototype.add = function( v ) {
    
  	} ;

	UUID.prototype.sub = function( v ) {
    
  	} ;

	UUID.prototype.mul = function( v ) {
    
  	} ;

	UUID.prototype.div = function( v ) {
    
  	} ;

	UUID.prototype.mod = function( v ) {
    
  	} ;

	UUID.prototype.pow = function( v ) {
    
  	} ;

  	UUID.prototype.xor = function( v ) {
    
  	} ;

  	UUID.prototype.abs = function( ) {
    	return new UUID( Math.abs( this.value )) ;
  	} ;

  	UUID.prototype.truncate = function( v ) {
  		return new UUID( this.value ) ;
  	} ;

})( ) ;

exports.UUID = UUID ;