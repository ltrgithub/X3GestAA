"use strict";
var X3Error = require('./errors').X3Error;
var util = require('./util');
var bcd = require('./bcd');

exports.isDouble = function(val) {
	return val instanceof Double ;
}

var Double = (function() {
	function Double( v ) {

    } ;

  	Double.prototype.toDouble = function() {
    	return this ;
  	} ;

  	Double.prototype.toString = function( v ) {
    	return ""+this.value ;
  	} ;

   	Double.prototype.toDouble = function() {
    	return new Double( this ) ;
  	} ;
	
   	Double.prototype.toBCD = function() {
    	return new BCD( this ) ;
  	} ;

	Double.prototype.toDate = function() {
    	throw util.badOperand(this.value) ;
  	} ; 	

  Double.prototype.toDatetime = function() {
      throw util.badOperand(this.value) ;
    } ;   

	Double.prototype.isNumeric = function() {
		return true ;
	} ;

  	Double.prototype.isZero = function() {
		return (this.value === 0)?true : false ;
	} ;	

  	Double.prototype.compare = function( b ) {

  	} ;	

	Double.prototype.add = function( v ) {
    
  	} ;

	Double.prototype.sub = function( v ) {
    
  	} ;

	Double.prototype.mul = function( v ) {
    
  	} ;

	Double.prototype.div = function( v ) {
    
  	} ;

	Double.prototype.mod = function( v ) {
    
  	} ;

	Double.prototype.pow = function( v ) {
    
  	} ;

  	Double.prototype.xor = function( v ) {
    
  	} ;

  	Double.prototype.abs = function( ) {
    	return new Double( Math.abs( this.value )) ;
  	} ;

  	Double.prototype.truncate = function( v ) {
  		return new Double( this.value ) ;
  	} ;

})( ) ;

exports.Double = Double ;