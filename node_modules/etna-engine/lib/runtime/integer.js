"use strict";
var X3Error = require('./errors').X3Error;
var util = require('./util');
var bcd = require('./bcd');


function make( v ) {
	return new Number( (v >= 0)? Math.floor(v):Math.ceil(v) ) ;
}

exports.isInteger = function(val) {
	return val instanceof Number ;
}


var fromString = exports.fromString = function(str) {
	return make (parseInt( str )) ;
}

var toString = exports.toString = function(val) {
	return ""+val.valueOf( ) ;
}

var fromDouble = exports.fromDouble = function(v) {
	return make (v) ;
}

var toDouble = exports.toDouble = function(v) {
	return v.valueOf( ) ;
}

var toString = exports.fromBCD = function(val) {
	return make(bcd.toInt32(val)) ;
}

var compare = exports.compare = function(a, b) {
	if (a.valueOf( ) ===  b.valueOf( )) return 0 ;
	if (a.valueOf( ) < b.valueOf( )) return -1 ;
	else return 1 ;
}

var isZero = exports.isZero = function(v) {
	return (v.valueOf( ) === 0)?1:0 ;
}

var add = exports.add = function(a, b) {
	return make( a.valueOf()+b.valueOf()) ;
}

var sub = exports.sub = function(a, b) {
	return make( a.valueOf()-b.valueOf()) ;
}

var multiply = exports.multiply = function(a, b) {
	return make( a.valueOf()*b.valueOf()) ;
}

var divide = exports.divide = function(a, b) {
	return make( a.valueOf()/b.valueOf()) ;
}

var isModulo = exports.isModulo = function(a, b) {
	return  (a.valueOf()%b.valueOf() === 0)?1 : 0 ;
}

var pow = exports.pow = function(a, b) {
	return  make( Math.pow( a.valueOf(), b.valueOf()) ) ;
}

var abs = exports.abs = function( a ) {
	return  make( Math.abs( a ) ) ;
}

var minus = exports.minus = function( a ) {
	return  make( -a.valueOf() ) ;
}

exports.instructions = {
	INTEGER: function( v ) {
		return util.instructions.C( make(v) ) ;
	}
};
