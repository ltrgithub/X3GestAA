"use strict";

var helpers = require('syracuse-core/lib/helpers');
var tracer = require("syracuse-trace/lib/helper").getTracer("etna.engine");
var X3Error = require('./errors').X3Error;

// --------------------------------------------------------------
function VGClass(tbl) {
	this.table = tbl;
}

Object.defineProperty(VGClass.prototype, "ADXFNAME", {
	get: function() {
		return this.table.desc.name;
	},
	set: function() {
		throw new X3Error(26, "Property adxfname is readonly");
	},
	enumerable: false,
});


Object.defineProperty(VGClass.prototype, "NBZON", {
	get: function() {
		return Object.keys(this.table.desc.columns).length;
	},
	set: function() {
		throw new X3Error(26, "Property nbzon is readonly");
	},
	enumerable: false,
});

Object.defineProperty(VGClass.prototype, "KEYNAME", {
	get: function() {
		return this.table.keys.reduce(function(t, k) {
			if (!k.hidden) t.push(k.name);
			return t;
		}, []);
	},
	set: function() {
		throw new X3Error(26, "Property keyname is readonly");
	},
	enumerable: false,
});

Object.defineProperty(VGClass.prototype, "KEYUNIQ", {
	get: function() {
		return this.table.keys.reduce(function(t, k) {
			if (!k.hidden) t.push((k.unique) ? 1 : 0);
			return t;
		}, []);
	},
	set: function() {
		throw new X3Error(26, "Property keyname is readonly");
	},
	enumerable: false,
});
// --------------------------------------------------------------


// --------------------------------------------------------------
var GClass = helpers.defineClass(function(tbl) {
	var self = this;
	self.values = new VGClass(tbl);
	self.types = {
		ADXFNAME: " S",
		NBZON: " I",
		KEYNAME: " S",
		KEYUNIQ: " I",
	};
	return self;
}, null, {

});
// --------------------------------------------------------------


exports.GClass = GClass;