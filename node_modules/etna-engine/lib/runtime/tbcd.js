"use strict";
var X3Error = require('./errors').X3Error;
var util = require('./util');
var bcd = require('./bcd');

exports.isBCD = function(val) {
  return val instanceof BCD ;
}

var BCD = (function() {
  function BCD( v ) {

    } ;

    BCD.prototype.toBCD = function() {
      return this ;
    } ;

    BCD.prototype.toString = function( v ) {
      return ""+this.value ;
    } ;

    BCD.prototype.toInteger = function() {
      return new BCD( this ) ;
    } ;
  
    BCD.prototype.toDouble = function() {
      return new BCD( this ) ;
    } ;

    BCD.prototype.toDate = function() {
      throw util.badOperand(this.value) ;
    } ;   

    BCD.prototype.toDatetime = function() {
      throw util.badOperand(this.value) ;
    } ;   

  BCD.prototype.isNumeric = function() {
    return true ;
  } ;

    BCD.prototype.isZero = function() {
    return (this.value === 0)?true : false ;
  } ; 

    BCD.prototype.compare = function( b ) {

    } ; 

  BCD.prototype.add = function( v ) {
    
    } ;

  BCD.prototype.sub = function( v ) {
    
    } ;

  BCD.prototype.mul = function( v ) {
    
    } ;

  BCD.prototype.div = function( v ) {
    
    } ;

  BCD.prototype.mod = function( v ) {
    
    } ;

  BCD.prototype.pow = function( v ) {
    
    } ;

    BCD.prototype.xor = function( v ) {
    
    } ;

    BCD.prototype.abs = function( ) {
      return new BCD( Math.abs( this.value )) ;
    } ;

    BCD.prototype.truncate = function( v ) {
      return new BCD( this.value ) ;
    } ;

})( ) ;

exports.BCD = BCD ;