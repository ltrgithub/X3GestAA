#<AdxTL>@(#)0.0.0.0 $Revision$
Call OUVRE_TRACE("QLFAR_TSTRING") From LECFIC
Call TESTSUITE()

Call FERME_TRACE From LECFIC
GTRACE = "QLFAR_TSTRING_"+GUSER
Call LEC_TRACE From LECFIC
End

Funprog TESTSUITE_()
Call SET_LOCALE("fr-FR") From ASYRQLF

Call TESTSUITE_START("TSTRING", "TSTRING") From AXUNIT
EX=0
Onerrgo ERROR

Local Clbfile  SUITE_RESULT
SUITE_RESULT = func AXUNIT.RUN_TESTSUITE("TSTRING", "TSTRING")
End SUITE_RESULT


Funprog TESTSUITE()
Call SET_LOCALE("fr-FR") From ASYRQLF

Call TESTSUITE_START("TSTRING", "TSTRING") From AXUNIT
EX=0
Onerrgo ERROR

local integer NBTEST : NBTEST = 9
Call ADD_TESTCASE("TEST_TSTRING","Test",NBTEST) From AXUNIT

#########################

Local Clbfile  SUITE_RESULT
SUITE_RESULT = func AXUNIT.RUN_TESTSUITE("TSTRING", "TSTRING")
End SUITE_RESULT

$ERROR
Call CHECK_EQUAL(errn, EX)
EX = 0
Resume

Subprog CHECK_EVAL(STR, RESULT)
Call CHECK_EQUAL(evalue(STR), RESULT)
End

Subprog CHECK_EQUAL(GOT, EXPECT)
Call CHECK_EQUAL(GOT, EXPECT) From AXUNIT
End
#########################

Subprog TEST_TSTRING
Local Char A(20)
A="ABCD"
Local Char B(20)
B="EFGH"
Local Date D
Call CHECK_EQUAL((A="ABCD"), 1)
Call CHECK_EQUAL((A>"A"), 1)
Call CHECK_EQUAL((A>="A"), 1)
Call CHECK_EQUAL((B="EFGH"), 1)
Call CHECK_EQUAL((B<"Z"), 1)
Call CHECK_EQUAL((B<="Z"), 1)
Call CHECK_EQUAL(A+B,"ABCDEFGH")
Call CHECK_EQUAL(A-B,"ABCD EFGH")
Call CHECK_EQUAL(A+D,"ABCD000000")


End
