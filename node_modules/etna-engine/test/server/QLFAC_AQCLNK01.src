Local Clbfile TMP_CLBFILE(2)
TMP_CLBFILE= func TESTSUITE()
Call FERME_TRACE From LECFIC

GTRACE = "QLFAC_AQCLNK01_"+GACTX.USER
Call LEC_TRACE From LECFIC
End

#**
#* Subprog SETUP called at the beginning of the unit test suite to clean then environment
#*!c
Subprog SETUP
Local Instance INS Using C_AQCLNK01
INS = NewInstance C_AQCLNK01 AllocGroup null

# Create a simple instance
Callmet INS.AINIT()
INS.FIELD01 =  "F3_001" : Callmet INS.ADELETE()
INS.FIELD01 =  "F3_002" : Callmet INS.ADELETE()

End

Subprog TEARDOWN
End

#**
#* The main entry point of the unit test suite
#*
#*!
Funprog TESTSUITE()

Call TESTSUITE_START("AQCLNK01", "Test suite for Class AQCLNK01") From AXUNIT
Call ADD_TESTCASE("AQCLNK01_BASIC","AINSERT + AREAD + AUPDATE + ADELETE",30) From AXUNIT

#Call ADD_TESTCASE("AQCLNK01_CONTROLS","AINSERT CONTROLS",10) From AXUNIT
Call ADD_TESTCASE("AQCLNK01_CONTROLS","AINSERT CONTROLS",5) From AXUNIT

Call ADD_TESTCASE("AQCLNK01_OPERATIONS1","OPERATIONS CONTROLS 1/4",21) From AXUNIT
Call ADD_TESTCASE("AQCLNK01_OPERATIONS2","OPERATIONS CONTROLS 2/4",45) From AXUNIT
Call ADD_TESTCASE("AQCLNK01_OPERATIONS3","OPERATIONS CONTROLS 3/4",13) From AXUNIT
Call ADD_TESTCASE("AQCLNK01_OPERATIONS4","OPERATIONS CONTROLS 4/4",17) From AXUNIT

Call ADD_TESTCASE("AQCLNK01_METHODES1","METHODES CONTROLS 1/3",39) From AXUNIT
Call ADD_TESTCASE("AQCLNK01_METHODES2","METHODES CONTROLS 2/3",12) From AXUNIT
Call ADD_TESTCASE("AQCLNK01_METHODES3","METHODES CONTROLS 3/3",14) From AXUNIT

#Call ADD_TESTCASE("AQCLNK01_RMETHODES1","METHODES REP CONTROLS 1/3",39) From AXUNIT
#Call ADD_TESTCASE("AQCLNK01_RMETHODES2","METHODES REP CONTROLS 2/3",12) From AXUNIT
#Call ADD_TESTCASE("AQCLNK01_RMETHODES3","METHODES REP CONTROLS 3/3",14) From AXUNIT
Local Clbfile SUITE_RESULT
SUITE_RESULT = func AXUNIT.RUN_TESTSUITE("AQCLNK01", "SYRA_AQCLNK01")
End SUITE_RESULT


$ERROR
Call CHECK_EQUAL(errn, EX) From AXUNIT
Call CHECK_EQUAL("errmes$="+errmes$(errn), "errmes$="+mess(EX,9014,1)) From AXUNIT
Call CHECK_NOTEQUAL(errp-"("+num$(errl)+")"+"\"+errm,"")  From AXUNIT
EX = 0
Resume

#**
#* Write errors to log
#*!
$WRITE_ERRORS
If dim(WNBERR)>0
Call CHECK_NOTEQUAL(num$(WNBERR)-"errors to ckeck","") From AXUNIT
Endif
Local Integer I,WCOUNT
Local Char WMES(20)
For I=1 To maxtab(INS.AERROR)
 If  INS.AERROR(I)<>null & INS.AERROR(I).STA=[V]CST_AERROR & INS.AERROR(I).DEL<>2
   #Call LOG_LINE(INS.AERROR(I).PRO-":"-INS.AERROR(I).MES) From AXUNIT
   WCOUNT+=1
   WMES="Error"
   If dim(WNBERR)>0
    WMES-=num$(WCOUNT)
   Endif
   WMES-=" -->"
   Call CHECK_NOTEQUAL(WMES-INS.AERROR(I).PRO-":"-INS.AERROR(I).MES,"") From AXUNIT
 Endif
Next I
If dim(WNBERR)>0
   Call CHECK_EQUAL(WCOUNT,WNBERR) From AXUNIT
Endif
Callmet INS.ADELETEERROR(CST_ALLERRORS)
Return


#**
#* AQCLNK01_BASIC
#*
#*!
Subprog AQCLNK01_BASIC()
Gosub SETUP From AQCPROR01_CSTD
Local Integer MY_STATUS,WNBERR
Local Instance INS Using C_AQCLNK01
INS = NewInstance C_AQCLNK01 AllocGroup null
# Create a simple instance
[L]MY_STATUS = fmet INS.AINIT()
INS.FIELD01 = "F3_001"
INS.FIELD02 = "F4_001"
INS.FIELD3="R01P01_01"
INS.FIELD4=INS.FIELD3
INS.FIELD5=INS.FIELD3
INS.FIELD6=INS.FIELD3

#TEST AINSERT
Call CHECK_NOTEQUAL("AQCLNK01.AINSERT('F3_001')","") From AXUNIT
[L]MY_STATUS = fmet INS.AINSERT()
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT
WNBERR=0
Gosub WRITE_ERRORS

#TEST AREAD
Call CHECK_NOTEQUAL("AQCLNK01.AREAD('F3_001')","") From AXUNIT
[L]MY_STATUS = fmet INS.AREAD("F3_001")
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT
Call CHECK_EQUAL(INS.FIELD01, "F3_001") From AXUNIT
Call CHECK_EQUAL(INS.FIELD02, "F4_001") From AXUNIT
Call CHECK_EQUAL(INS.FIELD3, "R01P01_01") From AXUNIT
Call CHECK_EQUAL(INS.ACCESS, "") From AXUNIT
WNBERR=0
Gosub WRITE_ERRORS


#Try to insert twice the same record
Call CHECK_NOTEQUAL("AQCLNK01.AINSERT('F3_001') twice","") From AXUNIT
[L]MY_STATUS = fmet INS.AINSERT()
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AERROR) From AXUNIT
WNBERR=1
Gosub WRITE_ERRORS

#TEST AUPDATE
INS.FIELD02 =  "F5_001"
INS.FIELD3="R01P01_03"
Call CHECK_NOTEQUAL("AQCLNK01.AUPDATE('F3_001')","") From AXUNIT
[L]MY_STATUS = fmet INS.AUPDATE()
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT

[L]MY_STATUS = fmet INS.AREAD("F3_001")
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT
Call CHECK_EQUAL(INS.FIELD01, "F3_001") From AXUNIT
Call CHECK_EQUAL(INS.FIELD02, "F5_001") From AXUNIT
Call CHECK_EQUAL(INS.FIELD3, "R01P01_03") From AXUNIT
WNBERR=0
Gosub WRITE_ERRORS

#TEST ADELETE
[L]MY_STATUS = fmet INS.ADELETE()
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT
WNBERR=0
Gosub WRITE_ERRORS

[L]MY_STATUS = fmet INS.AREAD("F3_001")
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AERROR) From AXUNIT :#NOT FOUND

#Try to delete twice
[L]MY_STATUS = fmet INS.ADELETE()
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AERROR) From AXUNIT

FreeGroup INS
End

#**
#* AQCLNK01_CONTROLS
#*
#*!
Subprog AQCLNK01_CONTROLS()
Gosub SETUP From AQCPROR01_CSTD
Local Integer MY_STATUS,WNBERR
Local Instance INS Using C_AQCLNK01
INS = NewInstance C_AQCLNK01 AllocGroup null

# Create a simple instance
[L]MY_STATUS = fmet INS.AINIT()

#Try to insert with no key
Call CHECK_NOTEQUAL("AQCLNK01.AINSERT('')","") From AXUNIT
#Note that FIELD01 in the class AQCLNK01 has to be mandatory
[L]MY_STATUS = fmet INS.AINSERT()
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AERROR) From AXUNIT
WNBERR=1
Gosub WRITE_ERRORS

#Try to insert a record whose access code isn't defined
#INS.FIELD01 = "F3_002"
#INS.FIELD02 = "F4_002"
#INS.FIELD3="R01P01_02"
#INS.FIELD4=INS.FIELD3
#INS.FIELD5=INS.FIELD3
#INS.FIELD6=INS.FIELD3
#INS.ACCESS ="01234567890123456789"
#[L]MY_STATUS = fmet INS.AINSERT()
#Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AERROR) From AXUNIT
#Call CHECK_EQUAL(INS.ACCESS, "0123456789") From AXUNIT
#WNBERR=1
#Gosub WRITE_ERRORS
#TODO Control OTHERS on reference Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AERROR) From AXUNIT

FreeGroup INS
End

#**
#* AQCLNK01_OPERATIONS1
#*
#*!
Subprog AQCLNK01_OPERATIONS1()
Local Integer MY_STATUS,WNBERR
Local Integer EX
Local Char FIELD01 (50)
Local Instance INS Using C_AQCLNK01
INS = NewInstance C_AQCLNK01 AllocGroup null

#reset data
Call CHECK_NOTEQUAL("AQCLNK01.CLEAN()","") From AXUNIT
[L]MY_STATUS = fmet INS.CLEAN()
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT

[L]MY_STATUS = fmet INS.AREAD("F1_001")
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AERROR) From AXUNIT :#NOT FOUND

#insert data
Call CHECK_NOTEQUAL("AQCLNK01.SETUP()","") From AXUNIT
[L]MY_STATUS = fmet INS.SETUP()
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT

[L]MY_STATUS = fmet INS.AREAD("F1_001")
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT

#reset data
Call CHECK_NOTEQUAL("AQCLNK01.CLEAN('')","") From AXUNIT
[L]MY_STATUS = fmet INS.CLEAN('')
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT

[L]MY_STATUS = fmet INS.AREAD("F1_001")
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AERROR) From AXUNIT :#NOT FOUND

#insert data
Call CHECK_NOTEQUAL("AQCLNK01.SETUP('')","") From AXUNIT
EX=69
Onerrgo ERROR
[L]MY_STATUS = fmet INS.SETUP('')
Onerrgo
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AERROR) From AXUNIT :#ERROR

[L]MY_STATUS = fmet INS.AREAD("F1_001")
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AERROR) From AXUNIT :#NOT FOUND

#reset data
Call CHECK_NOTEQUAL("AQCLNK01.CLEAN('F1')","") From AXUNIT
[L]MY_STATUS = fmet INS.CLEAN("F1")
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT

[L]MY_STATUS = fmet INS.AREAD("F1_001")
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AERROR) From AXUNIT :#NOT FOUND

#insert data
Call CHECK_NOTEQUAL("AQCLNK01.SETUP(FIELD01,PARAM1,PARAM2,APARAM3)","") From AXUNIT
[L]MY_STATUS = fmet INS.SETUP("F1","P1",2,"P3")
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT

[L]MY_STATUS = fmet INS.AREAD("F1_001")
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT

FreeGroup INS
End

#**
#* AQCLNK01_OPERATIONS2
#*
#*!
Subprog AQCLNK01_OPERATIONS2()
Local Integer MY_STATUS,WNBERR,I
Local Char FIELD01 (50)
Local Instance INS Using C_AQCLNK01
INS = NewInstance C_AQCLNK01 AllocGroup null

[L]MY_STATUS = fmet INS.AREAD("F1_001")
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT

# #Fmethod Opérateurs 1
Call CHECK_NOTEQUAL("AQCLNK01 Fmethod OP1(FIELD01)","") From AXUNIT
Local Date ARET_VALUE1
[L]ARET_VALUE1 = fmet INS.OP1("")
Call CHECK_EQUAL([L]ARET_VALUE1,[0/0/0]) From AXUNIT
[L]ARET_VALUE1 = fmet INS.OP1("F1_001")
Call CHECK_EQUAL([L]ARET_VALUE1,[31/05/2015]) From AXUNIT
[L]ARET_VALUE1 = fmet INS.OP1("F1_060")
Call CHECK_EQUAL([L]ARET_VALUE1,[0/0/0]) From AXUNIT

# #Fmethod Opérateurs 2
Call CHECK_NOTEQUAL("AQCLNK01 Fmethod OP2(FIELD01) 1/3","") From AXUNIT
Local Char ARET_VALUE2(250),RESU2(250)
FIELD01=""
RESU2=FIELD01-string$(250-len(FIELD01-"My'Return"+'"Value&Char'),'x')+"My'Return"+'"Value&Char'
[L]ARET_VALUE2 = fmet INS.OP2(FIELD01)
Call CHECK_EQUAL([L]ARET_VALUE2,RESU2) From AXUNIT
RESU2=' xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
RESU2+="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
RESU2+="xxxxxxxxxxxxxxxxxxxxxxxxxxMy'Return"
RESU2+='"Value&Char'
Call CHECK_EQUAL([L]ARET_VALUE2,RESU2) From AXUNIT


Call CHECK_NOTEQUAL("AQCLNK01 Fmethod OP2(FIELD01) 2/3","") From AXUNIT
FIELD01="F1_001"
RESU2=FIELD01-string$(250-len(FIELD01-"My'Return"+'"Value&Char'),'x')+"My'Return"+'"Value&Char'
[L]ARET_VALUE2 = fmet INS.OP2(FIELD01)
Call CHECK_EQUAL([L]ARET_VALUE2,RESU2) From AXUNIT
RESU2='F1_001 xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
RESU2+="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
RESU2+="xxxxxxxxxxxxxxxxxxxxxxxxxxMy'Return"
RESU2+='"Value&Char'
Call CHECK_EQUAL([L]ARET_VALUE2,RESU2) From AXUNIT

Call CHECK_NOTEQUAL("AQCLNK01 Fmethod OP2(FIELD01) 3/3","") From AXUNIT
FIELD01="F1_060"
RESU2=FIELD01-"My'Return"+'"Value&Char'
[L]ARET_VALUE2 = fmet INS.OP2(FIELD01)
Call CHECK_EQUAL([L]ARET_VALUE2,RESU2) From AXUNIT
RESU2="F1_060 My'Return"
RESU2+='"Value&Char'
Call CHECK_EQUAL([L]ARET_VALUE2,RESU2) From AXUNIT

# #Fmethod Opérateurs 3
Call CHECK_NOTEQUAL("AQCLNK01 Fmethod OP3(FIELD01)","") From AXUNIT
Local Integer ARET_VALUE3
FIELD01=""
[L]ARET_VALUE3 = fmet INS.OP3(FIELD01)
Call CHECK_EQUAL([L]ARET_VALUE3,val(right$(FIELD01,4))*2) From AXUNIT
Call CHECK_EQUAL([L]ARET_VALUE3,0) From AXUNIT
FIELD01="F1_001"
[L]ARET_VALUE3 = fmet INS.OP3(FIELD01)
Call CHECK_EQUAL([L]ARET_VALUE3,val(right$(FIELD01,4))*2) From AXUNIT
Call CHECK_EQUAL([L]ARET_VALUE3,2) From AXUNIT
FIELD01="F1_060"
[L]ARET_VALUE3 = fmet INS.OP3(FIELD01)
Call CHECK_EQUAL([L]ARET_VALUE3,val(right$(FIELD01,4))*2) From AXUNIT
Call CHECK_EQUAL([L]ARET_VALUE3,120) From AXUNIT

# #Fmethod Opérateurs 4
Call CHECK_NOTEQUAL("AQCLNK01 Fmethod OP4(FIELD01)","") From AXUNIT
Local Decimal ARET_VALUE4
FIELD01=""
[L]ARET_VALUE4 = fmet INS.OP4(FIELD01)
Call CHECK_EQUAL([L]ARET_VALUE4,val(right$(FIELD01,4))*1.35) From AXUNIT
Call CHECK_EQUAL([L]ARET_VALUE4,0) From AXUNIT
FIELD01="F1_001"
[L]ARET_VALUE4 = fmet INS.OP4(FIELD01)
Call CHECK_EQUAL([L]ARET_VALUE4,val(right$(FIELD01,4))*1.35) From AXUNIT
Call CHECK_EQUAL([L]ARET_VALUE4,1.35) From AXUNIT
FIELD01="F1_059"
[L]ARET_VALUE4 = fmet INS.OP4(FIELD01)
Call CHECK_EQUAL([L]ARET_VALUE4,val(right$(FIELD01,4))*1.35) From AXUNIT
Call CHECK_EQUAL([L]ARET_VALUE4,79.65) From AXUNIT
FIELD01="F1_060"
[L]ARET_VALUE4 = fmet INS.OP4(FIELD01)
Call CHECK_EQUAL([L]ARET_VALUE4,val(right$(FIELD01,4))*1.35) From AXUNIT
Call CHECK_EQUAL([L]ARET_VALUE4,81) From AXUNIT

# #Fmethod Opérateurs 5
Call CHECK_NOTEQUAL("AQCLNK01 Fmethod OP5(FIELD01) 1/2","") From AXUNIT
Local Clbfile ARET_VALUE5, RESU5
Local Instance WATB Using C_ATABLE
FIELD01="F1_001"
WATB=NewInstance C_ATABLE AllocGroup null
MY_STATUS=fmet WATB.AREAD("AQCLNK01")
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT
[L]RESU5="AQCLNK01 CFG="+WATB.FICCFG
[L]ARET_VALUE5 = fmet INS.OP5(FIELD01)
Call CHECK_EQUAL([L]ARET_VALUE5,[L]RESU5) From AXUNIT
FreeGroup WATB

Call CHECK_NOTEQUAL("AQCLNK01 Fmethod OP5(FIELD01) 2/2","") From AXUNIT
FIELD01="F1_060"
Raz RESU5
Append RESU5,[L]FIELD01+"="
For I = 0 To 50
 Append RESU5, chr$(ascii('A')+I)
Next I
Call CHECK_EQUAL(len(RESU5),51+len(FIELD01)+1) From AXUNIT
[L]ARET_VALUE5 = fmet INS.OP5(FIELD01)
Call CHECK_EQUAL(len(ARET_VALUE5),51+len(FIELD01)+1) From AXUNIT
Call CHECK_EQUAL([L]ARET_VALUE5,[L]RESU5) From AXUNIT

# #Fmethod Opérateurs
Call CHECK_NOTEQUAL("AQCLNK01 Fmethod OP6(FIELD01) 1/2","") From AXUNIT
Local Blbfile ARET_VALUE6,RESU6
Local Instance WAUS Using C_AUTILIS
FIELD01="F1_001"
WAUS=NewInstance C_AUTILIS AllocGroup null
MY_STATUS=fmet WAUS.AREAD(INS.CREUSR)
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT
[L]RESU6=WAUS.AUSPIC
[L]ARET_VALUE6 = fmet INS.OP6(FIELD01)
Call CHECK_EQUAL([L]ARET_VALUE6=[L]RESU6,1) From AXUNIT
Call CHECK_EQUAL([L]ARET_VALUE6<>[L]RESU6,0) From AXUNIT
FreeGroup WAUS

Call CHECK_NOTEQUAL("AQCLNK01 Fmethod OP6(FIELD01) 2/2","") From AXUNIT
Local Char IMG64(250)
Local Clbfile GOT
Local Integer DUMMY
FIELD01="F1_060"
Raz RESU6
IMG64 = "R0lGODlhBgAJAJECAPj3+NXt/wAAAAAAACH5BAEAAAIALAAAAAAGAAkAAAINlC+AqQfREmygOrYiKgA7"
DUMMY = b64Decode(IMG64, RESU6)
[L]ARET_VALUE6 = fmet INS.OP6(FIELD01)
Call CHECK_EQUAL([L]ARET_VALUE6=[L]RESU6,1) From AXUNIT
Call CHECK_EQUAL([L]ARET_VALUE6<>[L]RESU6,0) From AXUNIT
DUMMY = b64Encode([L]ARET_VALUE6, GOT)
Call CHECK_EQUAL(GOT,IMG64) From AXUNIT

FreeGroup INS
End


#**
#* AQCLNK01_OPERATIONS3
#*
#*!
Subprog AQCLNK01_OPERATIONS3()
Local Integer MY_STATUS,WNBERR
Local Char FIELD01 (50)
Local Instance INS Using C_AQCLNK01
INS = NewInstance C_AQCLNK01 AllocGroup null

# #Fmethod Catégorie 1
Call CHECK_NOTEQUAL("AQCLNK01 Fmethod OPP1(FIELD01,P1,P2,P3,P4,P7,P8,P11,P12)","") From AXUNIT
Local Tinyint P1
Local Shortint P2
Local Integer P3
Local Decimal P4
Local Char P7 (100)
Local Date P8
Local Uuident P11
Local Datetime P12
Local Char ARET_VALUEP1(250),RESUP1(250)

#' 0 0 0 0 00/00/0000 00000000-0000-0000-0000-000000000000 0000-00-00T00:00:00Z'
Call CHECK_NOTEQUAL("AQCLNK01.OPP1 ==============> FIELD01=''","") From AXUNIT
FIELD01=''
RESUP1=FIELD01-num$(P1)-num$(P2)-num$(P3)-num$(P4)-P7-num$(P8)-num$(P11)-num$(P12)
[L]ARET_VALUEP1 = fmet INS.OPP1(FIELD01,P1,P2,P3,P4,P7,P8,P11,P12)
Call CHECK_EQUAL([L]ARET_VALUEP1,RESUP1) From AXUNIT
Call CHECK_EQUAL([L]ARET_VALUEP1,' 0 0 0 0 00/00/0000 00000000-0000-0000-0000-000000000000 0000-00-00T00:00:00Z') From AXUNIT

Call CHECK_NOTEQUAL("AQCLNK01.OPP1 ==============> FIELD01=' '","") From AXUNIT
FIELD01=' '
P12=gdatetime$('')
RESUP1=FIELD01-num$(P1)-num$(P2)-num$(P3)-num$(P4)-P7-num$(P8)-num$(P11)-num$(P12)
[L]ARET_VALUEP1 = fmet INS.OPP1(FIELD01,P1,P2,P3,P4,P7,P8,P11,P12)
Call CHECK_EQUAL([L]ARET_VALUEP1,RESUP1) From AXUNIT
Call CHECK_EQUAL([L]ARET_VALUEP1,' 0 0 0 0 00/00/0000 00000000-0000-0000-0000-000000000000 0000-00-00T00:00:00Z') From AXUNIT

Call CHECK_NOTEQUAL("AQCLNK01.OPP1 ==============> FIELD01='F1_001'","") From AXUNIT
#'F1_001 1 1 1 1 F1_001 31/12/2015 00000000-0000-0000-0000-000000000000 2015-12-31T00:00:00Z'
FIELD01='F1_001'
P1=1
P2=1
P3=1
P4=1
P7=FIELD01
P8=[31/12/2015]
P11=NullUuid
P12=gdatetime$([31/12/2015])
RESUP1=FIELD01-num$(P1)-num$(P2)-num$(P3)-num$(P4)-P7-num$(P8)-num$(P11)-num$(P12)
[L]ARET_VALUEP1 = fmet INS.OPP1(FIELD01,P1,P2,P3,P4,P7,P8,P11,P12)
Call CHECK_EQUAL([L]ARET_VALUEP1,RESUP1) From AXUNIT
Call CHECK_EQUAL([L]ARET_VALUEP1,'F1_001 1 1 1 1 F1_001 31/12/2015 00000000-0000-0000-0000-000000000000 2015-12-31T00:00:00Z') From AXUNIT

Call CHECK_NOTEQUAL("AQCLNK01.OPP1 ==============> FIELD01='F1_060'","") From AXUNIT
#'F1_060 1 2 3 1.35 F1_060 12/10/2015 d8ab538f-2e83-43ad-a4d4-66b43db9d33c 2015-10-12T14:18:09Z'
FIELD01='F1_060'
P1=1
P2=2
P3=3
P4=1.35
P7=FIELD01
P8=date$
P11=getUuid
P12=datetime$
RESUP1=FIELD01-num$(P1)-num$(P2)-num$(P3)-num$(P4)-P7-num$(P8)-num$(P11)-num$(P12)
[L]ARET_VALUEP1 = fmet INS.OPP1(FIELD01,P1,P2,P3,P4,P7,P8,P11,P12)
Call CHECK_EQUAL([L]ARET_VALUEP1,RESUP1) From AXUNIT
Call CHECK_EQUAL(left$([L]ARET_VALUEP1,25),'F1_060 1 2 3 1.35 F1_060 ') From AXUNIT


FreeGroup INS
End

#**
#* AQCLNK01_OPERATIONS4
#*
#*!
Subprog AQCLNK01_OPERATIONS4()
Local Integer MY_STATUS,WNBERR
Local Char FIELD01 (50)
Local Instance INS Using C_AQCLNK01
INS = NewInstance C_AQCLNK01 AllocGroup null

# #Fmethod Catégorie 2
Call CHECK_NOTEQUAL("AQCLNK01 Fmethod OPP2(FIELD01,P1,P2,P3,P4,P7,P8,P11,P12)","") From AXUNIT
Local Tinyint P1
Local Shortint P2
Local Integer P3
Local Decimal P4
Local Char P7 (100)
Local Date P8
Local Uuident P11
Local Datetime P12
Local Char ARET_VALUEP2(250),RESUP2(250)

Call CHECK_NOTEQUAL("AQCLNK01.OPP2 ==============> FIELD01=''","") From AXUNIT
#' 1 1 1 1 X 01/01/1600 00000000-0000-0000-0000-000000000000 1600-01-01T00:00:00Z'
FIELD01=''
RESUP1=FIELD01-num$(P1)-num$(P2)-num$(P3)-num$(P4)-P7-num$(P8)-num$(P11)-num$(P12)
[L]ARET_VALUEP2 = fmet INS.OPP2(FIELD01,P1,P2,P3,P4,P7,P8,P11,P12)
RESUP2=FIELD01-num$(P1)-num$(P2)-num$(P3)-num$(P4)-P7-num$(P8)-num$(P11)-num$(P12)
Call CHECK_NOTEQUAL(RESUP1,RESUP2) From AXUNIT
Call CHECK_EQUAL([L]ARET_VALUEP2,RESUP2) From AXUNIT
Call CHECK_EQUAL([L]ARET_VALUEP2,' 1 1 1 1 X 01/01/1600 00000000-0000-0000-0000-000000000000 1600-01-01T00:00:00Z') From AXUNIT

Call CHECK_NOTEQUAL("AQCLNK01.OPP2 ==============> FIELD01=' '","") From AXUNIT
#' 2 2 2 2 XX 02/01/1600 00000000-0000-0000-0000-000000000000 1600-01-02T00:00:00Z'
FIELD01=' '
RESUP1=FIELD01-num$(P1)-num$(P2)-num$(P3)-num$(P4)-P7-num$(P8)-num$(P11)-num$(P12)
[L]ARET_VALUEP2 = fmet INS.OPP2(FIELD01,P1,P2,P3,P4,P7,P8,P11,P12)
RESUP2=FIELD01-num$(P1)-num$(P2)-num$(P3)-num$(P4)-P7-num$(P8)-num$(P11)-num$(P12)
Call CHECK_NOTEQUAL(RESUP1,RESUP2) From AXUNIT
Call CHECK_EQUAL([L]ARET_VALUEP2,RESUP2) From AXUNIT
Call CHECK_EQUAL([L]ARET_VALUEP2,' 2 2 2 2 XX 02/01/1600 00000000-0000-0000-0000-000000000000 1600-01-02T00:00:00Z') From AXUNIT

Call CHECK_NOTEQUAL("AQCLNK01.OPP2 ==============> FIELD01='F1_001'","") From AXUNIT
#'F1_001 2 2 2 2 F1_001X 01/01/2016 00000000-0000-0000-0000-000000000000 2016-01-01T00:00:00Z'
FIELD01='F1_001'
P1=1
P2=1
P3=1
P4=1
P7=FIELD01
P8=[31/12/2015]
P11=NullUuid
P12=gdatetime$([31/12/2015])
RESUP1=FIELD01-num$(P1)-num$(P2)-num$(P3)-num$(P4)-P7-num$(P8)-num$(P11)-num$(P12)
[L]ARET_VALUEP2 = fmet INS.OPP2(FIELD01,P1,P2,P3,P4,P7,P8,P11,P12)
RESUP2=FIELD01-num$(P1)-num$(P2)-num$(P3)-num$(P4)-P7-num$(P8)-num$(P11)-num$(P12)
Call CHECK_NOTEQUAL(RESUP1,RESUP2) From AXUNIT
Call CHECK_EQUAL([L]ARET_VALUEP2,RESUP2) From AXUNIT
Call CHECK_EQUAL([L]ARET_VALUEP2,'F1_001 2 2 2 2 F1_001X 01/01/2016 00000000-0000-0000-0000-000000000000 2016-01-01T00:00:00Z') From AXUNIT

Call CHECK_NOTEQUAL("AQCLNK01.OPP2 ==============> FIELD01='F1_060'","") From AXUNIT
#'F1_060 2 3 4 2.35 F1_060X 13/10/2015 50bb2342-f8c5-4496-8308-fce7269653e8 2015-10-13T14:18:09Z'
FIELD01='F1_060'
P1=1
P2=2
P3=3
P4=1.35
P7=FIELD01
P8=date$
P11=getUuid
P12=datetime$
RESUP1=FIELD01-num$(P1)-num$(P2)-num$(P3)-num$(P4)-P7-num$(P8)-num$(P11)-num$(P12)
[L]ARET_VALUEP2 = fmet INS.OPP2(FIELD01,P1,P2,P3,P4,P7,P8,P11,P12)
RESUP2=FIELD01-num$(P1)-num$(P2)-num$(P3)-num$(P4)-P7-num$(P8)-num$(P11)-num$(P12)
Call CHECK_NOTEQUAL(RESUP1,RESUP2) From AXUNIT
Call CHECK_EQUAL([L]ARET_VALUEP2,RESUP2) From AXUNIT
Call CHECK_EQUAL(left$([L]ARET_VALUEP2,26),'F1_060 2 3 4 2.35 F1_060X ') From AXUNIT

FreeGroup INS
End


#**
#* AQCLNK01_METHODES1
#*
#*!
Subprog AQCLNK01_METHODES1()
Local Integer MY_STATUS,WNBERR,I
Local Char FIELD01 (50)
Local Instance INS Using C_AQCLNK01
INS = NewInstance C_AQCLNK01 AllocGroup null

# #Fmethod Opérateurs 1
Call CHECK_NOTEQUAL("AQCLNK01 Fmethod MGETDAT()","") From AXUNIT
Local Date ARET_VALUE1

FIELD01="F1_001"
FreeGroup INS : INS = NewInstance C_AQCLNK01 AllocGroup null
[L]MY_STATUS = fmet INS.AREAD(FIELD01)
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT
[L]ARET_VALUE1 = fmet INS.MGETDAT()
Call CHECK_EQUAL([L]ARET_VALUE1,[31/05/2015]) From AXUNIT
Call CHECK_EQUAL(INS.RES1,[31/05/2015]) From AXUNIT

FIELD01="F1_060"
FreeGroup INS : INS = NewInstance C_AQCLNK01 AllocGroup null
[L]MY_STATUS = fmet INS.AREAD(FIELD01)
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT
[L]ARET_VALUE1 = fmet INS.MGETDAT()
Call CHECK_EQUAL([L]ARET_VALUE1,[0/0/0]) From AXUNIT
Call CHECK_EQUAL(INS.RES1,[0/0/0]) From AXUNIT

# #Fmethod Opérateurs 2
Call CHECK_NOTEQUAL("AQCLNK01 Fmethod MGETCH() 1/2","") From AXUNIT
Local Char ARET_VALUE2(250),RESU2(250)
FIELD01="F1_001"
FreeGroup INS : INS = NewInstance C_AQCLNK01 AllocGroup null
[L]MY_STATUS = fmet INS.AREAD(FIELD01)
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT
RESU2=FIELD01-string$(250-len(FIELD01-"My'Return"+'"Value&Char'),'x')+"My'Return"+'"Value&Char'
[L]ARET_VALUE2 = fmet INS.MGETCH()
Call CHECK_EQUAL([L]ARET_VALUE2,RESU2) From AXUNIT
RESU2='F1_001 xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
RESU2+="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
RESU2+="xxxxxxxxxxxxxxxxxxxxxxxxxxMy'Return"
RESU2+='"Value&Char'
Call CHECK_EQUAL([L]ARET_VALUE2,RESU2) From AXUNIT
Call CHECK_EQUAL(INS.RES2,RESU2) From AXUNIT

Call CHECK_NOTEQUAL("AQCLNK01 Fmethod MGETCH() 2/2","") From AXUNIT
FIELD01="F1_060"
FreeGroup INS : INS = NewInstance C_AQCLNK01 AllocGroup null
[L]MY_STATUS = fmet INS.AREAD(FIELD01)
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT
RESU2=FIELD01-"My'Return"+'"Value&Char'
[L]ARET_VALUE2 = fmet INS.MGETCH()
Call CHECK_EQUAL([L]ARET_VALUE2,RESU2) From AXUNIT
RESU2="F1_060 My'Return"
RESU2+='"Value&Char'
Call CHECK_EQUAL([L]ARET_VALUE2,RESU2) From AXUNIT
Call CHECK_EQUAL(INS.RES2,RESU2) From AXUNIT

# #Fmethod Opérateurs 3
Call CHECK_NOTEQUAL("AQCLNK01 Fmethod MGETINT(FIELD01)","") From AXUNIT
Local Integer ARET_VALUE3
FIELD01="F1_001"
FreeGroup INS : INS = NewInstance C_AQCLNK01 AllocGroup null
[L]MY_STATUS = fmet INS.AREAD(FIELD01)
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT
[L]ARET_VALUE3 = fmet INS.MGETINT()
Call CHECK_EQUAL([L]ARET_VALUE3,val(right$(FIELD01,4))*2) From AXUNIT
Call CHECK_EQUAL([L]ARET_VALUE3,2) From AXUNIT
Call CHECK_EQUAL(INS.RES3,2) From AXUNIT
FIELD01="F1_060"
FreeGroup INS : INS = NewInstance C_AQCLNK01 AllocGroup null
[L]MY_STATUS = fmet INS.AREAD(FIELD01)
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT
[L]ARET_VALUE3 = fmet INS.MGETINT()
Call CHECK_EQUAL([L]ARET_VALUE3,val(right$(FIELD01,4))*2) From AXUNIT
Call CHECK_EQUAL([L]ARET_VALUE3,120) From AXUNIT
Call CHECK_EQUAL(INS.RES3,120) From AXUNIT

# #Fmethod Opérateurs 4
Call CHECK_NOTEQUAL("AQCLNK01 Fmethod MGETRATE(FIELD01)","") From AXUNIT
Local Decimal ARET_VALUE4
FIELD01="F1_001"
FreeGroup INS : INS = NewInstance C_AQCLNK01 AllocGroup null
[L]MY_STATUS = fmet INS.AREAD(FIELD01)
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT
[L]ARET_VALUE4 = fmet INS.MGETRATE()
Call CHECK_EQUAL([L]ARET_VALUE4,val(right$(FIELD01,4))*1.35) From AXUNIT
Call CHECK_EQUAL([L]ARET_VALUE4,1.35) From AXUNIT
Call CHECK_EQUAL(INS.RES4,1.35) From AXUNIT
FIELD01="F1_059"
FreeGroup INS : INS = NewInstance C_AQCLNK01 AllocGroup null
[L]MY_STATUS = fmet INS.AREAD(FIELD01)
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT
[L]ARET_VALUE4 = fmet INS.MGETRATE()
Call CHECK_EQUAL([L]ARET_VALUE4,val(right$(FIELD01,4))*1.35) From AXUNIT
Call CHECK_EQUAL([L]ARET_VALUE4,79.65) From AXUNIT
Call CHECK_EQUAL(INS.RES4,79.65) From AXUNIT
FIELD01="F1_060"
FreeGroup INS : INS = NewInstance C_AQCLNK01 AllocGroup null
[L]MY_STATUS = fmet INS.AREAD(FIELD01)
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT
[L]ARET_VALUE4 = fmet INS.MGETRATE()
Call CHECK_EQUAL([L]ARET_VALUE4,val(right$(FIELD01,4))*1.35) From AXUNIT
Call CHECK_EQUAL([L]ARET_VALUE4,81) From AXUNIT
Call CHECK_EQUAL(INS.RES4,81) From AXUNIT


FreeGroup INS
End


#**
#* AQCLNK01_METHODES2
#*
#*!
Subprog AQCLNK01_METHODES2()
Local Integer MY_STATUS,WNBERR
Local Char FIELD01 (50)
Local Instance INS Using C_AQCLNK01
INS = NewInstance C_AQCLNK01 AllocGroup null

# #Fmethod Catégorie 1
Call CHECK_NOTEQUAL("AQCLNK01 Fmethod METH1(P1,P2,P3,P4,P7,P8,P11,P12)","") From AXUNIT
Local Tinyint P1
Local Shortint P2
Local Integer P3
Local Decimal P4
Local Char P7 (100)
Local Date P8
Local Uuident P11
Local Datetime P12
Local Char ARET_VALUEP1(250),RESUP1(250)

Call CHECK_NOTEQUAL("AQCLNK01.METH1 ==============> FIELD01='F1_001'","") From AXUNIT
#'F1_001 1 1 1 1 F1_001 31/12/2015 00000000-0000-0000-0000-000000000000 2015-12-31T00:00:00Z'
FIELD01='F1_001'
FreeGroup INS : INS = NewInstance C_AQCLNK01 AllocGroup null
[L]MY_STATUS = fmet INS.AREAD(FIELD01)
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT
P1=1
P2=1
P3=1
P4=1
P7=FIELD01
P8=[31/12/2015]
P11=NullUuid
P12=gdatetime$([31/12/2015])
RESUP1=FIELD01-num$(P1)-num$(P2)-num$(P3)-num$(P4)-P7-num$(P8)-num$(P11)-num$(P12)
[L]ARET_VALUEP1 = fmet INS.METH1(P1,P2,P3,P4,P7,P8,P11,P12)
Call CHECK_EQUAL([L]ARET_VALUEP1,RESUP1) From AXUNIT
Call CHECK_EQUAL([L]ARET_VALUEP1,'F1_001 1 1 1 1 F1_001 31/12/2015 00000000-0000-0000-0000-000000000000 2015-12-31T00:00:00Z') From AXUNIT
Call CHECK_EQUAL(INS.RES2,'F1_001 1 1 1 1 F1_001 31/12/2015 00000000-0000-0000-0000-000000000000 2015-12-31T00:00:00Z') From AXUNIT

Call CHECK_NOTEQUAL("AQCLNK01.METH1 ==============> FIELD01='F1_060'","") From AXUNIT
#'F1_060 1 2 3 1.35 F1_060 12/10/2015 d8ab538f-2e83-43ad-a4d4-66b43db9d33c 2015-10-12T14:18:09Z'
FIELD01='F1_060'
FreeGroup INS : INS = NewInstance C_AQCLNK01 AllocGroup null
[L]MY_STATUS = fmet INS.AREAD(FIELD01)
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT
P1=1
P2=2
P3=3
P4=1.35
P7=FIELD01
P8=date$
P11=getUuid
P12=datetime$
RESUP1=FIELD01-num$(P1)-num$(P2)-num$(P3)-num$(P4)-P7-num$(P8)-num$(P11)-num$(P12)
[L]ARET_VALUEP1 = fmet INS.METH1(P1,P2,P3,P4,P7,P8,P11,P12)
Call CHECK_EQUAL([L]ARET_VALUEP1,RESUP1) From AXUNIT
Call CHECK_EQUAL(left$([L]ARET_VALUEP1,25),'F1_060 1 2 3 1.35 F1_060 ') From AXUNIT
Call CHECK_EQUAL(INS.RES2,RESUP1) From AXUNIT
Call CHECK_EQUAL(left$(INS.RES2,25),'F1_060 1 2 3 1.35 F1_060 ') From AXUNIT


FreeGroup INS
End

#**
#* AQCLNK01_METHODES3
#*
#*!
Subprog AQCLNK01_METHODES3()
Local Integer MY_STATUS,WNBERR
Local Char FIELD01 (50)
Local Instance INS Using C_AQCLNK01
INS = NewInstance C_AQCLNK01 AllocGroup null

# #Fmethod Catégorie 2
Call CHECK_NOTEQUAL("AQCLNK01 Fmethod METH2(P1,P2,P3,P4,P7,P8,P11,P12)","") From AXUNIT
Local Tinyint P1
Local Shortint P2
Local Integer P3
Local Decimal P4
Local Char P7 (100)
Local Date P8
Local Uuident P11
Local Datetime P12
Local Char ARET_VALUEP2(250),RESUP2(250)

Call CHECK_NOTEQUAL("AQCLNK01.METH2 ==============> FIELD01='F1_001'","") From AXUNIT
#'F1_001 2 2 2 2 F1_001X 01/01/2016 00000000-0000-0000-0000-000000000000 2016-01-01T00:00:00Z'
FIELD01='F1_001'
FreeGroup INS : INS = NewInstance C_AQCLNK01 AllocGroup null
[L]MY_STATUS = fmet INS.AREAD(FIELD01)
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT
P1=1
P2=1
P3=1
P4=1
P7=FIELD01
P8=[31/12/2015]
P11=NullUuid
P12=gdatetime$([31/12/2015])
RESUP1=FIELD01-num$(P1)-num$(P2)-num$(P3)-num$(P4)-P7-num$(P8)-num$(P11)-num$(P12)
[L]ARET_VALUEP2 = fmet INS.METH2(P1,P2,P3,P4,P7,P8,P11,P12)
RESUP2=FIELD01-num$(P1)-num$(P2)-num$(P3)-num$(P4)-P7-num$(P8)-num$(P11)-num$(P12)
Call CHECK_NOTEQUAL(RESUP1,RESUP2) From AXUNIT
Call CHECK_EQUAL([L]ARET_VALUEP2,RESUP2) From AXUNIT
Call CHECK_EQUAL([L]ARET_VALUEP2,'F1_001 2 2 2 2 F1_001X 01/01/2016 00000000-0000-0000-0000-000000000000 2016-01-01T00:00:00Z') From AXUNIT
Call CHECK_EQUAL(INS.RES2,'F1_001 2 2 2 2 F1_001X 01/01/2016 00000000-0000-0000-0000-000000000000 2016-01-01T00:00:00Z') From AXUNIT

Call CHECK_NOTEQUAL("AQCLNK01.METH2 ==============> FIELD01='F1_060'","") From AXUNIT
#'F1_060 2 3 4 2.35 F1_060X 13/10/2015 50bb2342-f8c5-4496-8308-fce7269653e8 2015-10-13T14:18:09Z'
FIELD01='F1_060'
FreeGroup INS : INS = NewInstance C_AQCLNK01 AllocGroup null
[L]MY_STATUS = fmet INS.AREAD(FIELD01)
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT
P1=1
P2=2
P3=3
P4=1.35
P7=FIELD01
P8=date$
P11=getUuid
P12=datetime$
RESUP1=FIELD01-num$(P1)-num$(P2)-num$(P3)-num$(P4)-P7-num$(P8)-num$(P11)-num$(P12)
[L]ARET_VALUEP2 = fmet INS.METH2(P1,P2,P3,P4,P7,P8,P11,P12)
RESUP2=FIELD01-num$(P1)-num$(P2)-num$(P3)-num$(P4)-P7-num$(P8)-num$(P11)-num$(P12)
Call CHECK_NOTEQUAL(RESUP1,RESUP2) From AXUNIT
Call CHECK_EQUAL([L]ARET_VALUEP2,RESUP2) From AXUNIT
Call CHECK_EQUAL(left$([L]ARET_VALUEP2,26),'F1_060 2 3 4 2.35 F1_060X ') From AXUNIT
Call CHECK_EQUAL(INS.RES2,RESUP2) From AXUNIT
Call CHECK_EQUAL(left$(INS.RES2,26),'F1_060 2 3 4 2.35 F1_060X ') From AXUNIT

FreeGroup INS
End


#**
#* AQCLNK01_RMETHODES1
#*
#*!
Subprog AQCLNK01_RMETHODES1()
Local Integer MY_STATUS,WNBERR,I
Local Char FIELD01 (50)
Local Instance INS Using R_AQCLNK01
INS = NewInstance R_AQCLNK01 AllocGroup null

# #Fmethod Opérateurs 1
Call CHECK_NOTEQUAL("AQCLNK01 REP Fmethod MGETDAT()","") From AXUNIT
Local Date ARET_VALUE1

FIELD01="F1_001"
FreeGroup INS : INS = NewInstance R_AQCLNK01 AllocGroup null
[L]MY_STATUS = fmet INS.AREAD(FIELD01)
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT
[L]ARET_VALUE1 = fmet INS.MGETDAT()
Call CHECK_EQUAL([L]ARET_VALUE1,[31/05/2015]) From AXUNIT
Call CHECK_EQUAL(INS.AQX01.RES1,[31/05/2015]) From AXUNIT

FIELD01="F1_060"
FreeGroup INS : INS = NewInstance R_AQCLNK01 AllocGroup null
[L]MY_STATUS = fmet INS.AREAD(FIELD01)
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT
[L]ARET_VALUE1 = fmet INS.MGETDAT()
Call CHECK_EQUAL([L]ARET_VALUE1,[0/0/0]) From AXUNIT
Call CHECK_EQUAL(INS.AQX01.RES1,[0/0/0]) From AXUNIT

# #Fmethod Opérateurs 2
Call CHECK_NOTEQUAL("AQCLNK01 REP Fmethod MGETCH() 1/2","") From AXUNIT
Local Char ARET_VALUE2(250),RESU2(250)
FIELD01="F1_001"
FreeGroup INS : INS = NewInstance R_AQCLNK01 AllocGroup null
[L]MY_STATUS = fmet INS.AREAD(FIELD01)
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT
RESU2=FIELD01-string$(250-len(FIELD01-"My'Return"+'"Value&Char'),'x')+"My'Return"+'"Value&Char'
[L]ARET_VALUE2 = fmet INS.MGETCH()
Call CHECK_EQUAL([L]ARET_VALUE2,RESU2) From AXUNIT
RESU2='F1_001 xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
RESU2+="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
RESU2+="xxxxxxxxxxxxxxxxxxxxxxxxxxMy'Return"
RESU2+='"Value&Char'
Call CHECK_EQUAL([L]ARET_VALUE2,RESU2) From AXUNIT
Call CHECK_EQUAL(INS.AQX01.RES2,RESU2) From AXUNIT

Call CHECK_NOTEQUAL("AQCLNK01 REP Fmethod MGETCH() 2/2","") From AXUNIT
FIELD01="F1_060"
FreeGroup INS : INS = NewInstance R_AQCLNK01 AllocGroup null
[L]MY_STATUS = fmet INS.AREAD(FIELD01)
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT
RESU2=FIELD01-"My'Return"+'"Value&Char'
[L]ARET_VALUE2 = fmet INS.MGETCH()
Call CHECK_EQUAL([L]ARET_VALUE2,RESU2) From AXUNIT
RESU2="F1_060 My'Return"
RESU2+='"Value&Char'
Call CHECK_EQUAL([L]ARET_VALUE2,RESU2) From AXUNIT
Call CHECK_EQUAL(INS.AQX01.RES2,RESU2) From AXUNIT

# #Fmethod Opérateurs 3
Call CHECK_NOTEQUAL("AQCLNK01 REP Fmethod MGETINT(FIELD01)","") From AXUNIT
Local Integer ARET_VALUE3
FIELD01="F1_001"
FreeGroup INS : INS = NewInstance R_AQCLNK01 AllocGroup null
[L]MY_STATUS = fmet INS.AREAD(FIELD01)
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT
[L]ARET_VALUE3 = fmet INS.MGETINT()
Call CHECK_EQUAL([L]ARET_VALUE3,val(right$(FIELD01,4))*2) From AXUNIT
Call CHECK_EQUAL([L]ARET_VALUE3,2) From AXUNIT
Call CHECK_EQUAL(INS.AQX01.RES3,2) From AXUNIT
FIELD01="F1_060"
FreeGroup INS : INS = NewInstance R_AQCLNK01 AllocGroup null
[L]MY_STATUS = fmet INS.AREAD(FIELD01)
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT
[L]ARET_VALUE3 = fmet INS.MGETINT()
Call CHECK_EQUAL([L]ARET_VALUE3,val(right$(FIELD01,4))*2) From AXUNIT
Call CHECK_EQUAL([L]ARET_VALUE3,120) From AXUNIT
Call CHECK_EQUAL(INS.AQX01.RES3,120) From AXUNIT

# #Fmethod Opérateurs 4
Call CHECK_NOTEQUAL("AQCLNK01 REP Fmethod MGETRATE(FIELD01)","") From AXUNIT
Local Decimal ARET_VALUE4
FIELD01="F1_001"
FreeGroup INS : INS = NewInstance R_AQCLNK01 AllocGroup null
[L]MY_STATUS = fmet INS.AREAD(FIELD01)
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT
[L]ARET_VALUE4 = fmet INS.MGETRATE()
Call CHECK_EQUAL([L]ARET_VALUE4,val(right$(FIELD01,4))*1.35) From AXUNIT
Call CHECK_EQUAL([L]ARET_VALUE4,1.35) From AXUNIT
Call CHECK_EQUAL(INS.AQX01.RES4,1.35) From AXUNIT
FIELD01="F1_059"
FreeGroup INS : INS = NewInstance R_AQCLNK01 AllocGroup null
[L]MY_STATUS = fmet INS.AREAD(FIELD01)
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT
[L]ARET_VALUE4 = fmet INS.MGETRATE()
Call CHECK_EQUAL([L]ARET_VALUE4,val(right$(FIELD01,4))*1.35) From AXUNIT
Call CHECK_EQUAL([L]ARET_VALUE4,79.65) From AXUNIT
Call CHECK_EQUAL(INS.AQX01.RES4,79.65) From AXUNIT
FIELD01="F1_060"
FreeGroup INS : INS = NewInstance R_AQCLNK01 AllocGroup null
[L]MY_STATUS = fmet INS.AREAD(FIELD01)
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT
[L]ARET_VALUE4 = fmet INS.MGETRATE()
Call CHECK_EQUAL([L]ARET_VALUE4,val(right$(FIELD01,4))*1.35) From AXUNIT
Call CHECK_EQUAL([L]ARET_VALUE4,81) From AXUNIT
Call CHECK_EQUAL(INS.AQX01.RES4,81) From AXUNIT


FreeGroup INS
End


#**
#* AQCLNK01_RMETHODES2
#*
#*!
Subprog AQCLNK01_RMETHODES2()
Local Integer MY_STATUS,WNBERR
Local Char FIELD01 (50)
Local Instance INS Using R_AQCLNK01
INS = NewInstance R_AQCLNK01 AllocGroup null

# #Fmethod Catégorie 1
Call CHECK_NOTEQUAL("AQCLNK01 REP Fmethod METH1(P1,P2,P3,P4,P7,P8,P11,P12)","") From AXUNIT
Local Tinyint P1
Local Shortint P2
Local Integer P3
Local Decimal P4
Local Char P7 (100)
Local Date P8
Local Uuident P11
Local Datetime P12
Local Char ARET_VALUEP1(250),RESUP1(250)

Call CHECK_NOTEQUAL("AQCLNK01.REP.METH1 ==============> FIELD01='F1_001'","") From AXUNIT
#'F1_001 1 1 1 1 F1_001 31/12/2015 00000000-0000-0000-0000-000000000000 2015-12-31T00:00:00Z'
FIELD01='F1_001'
FreeGroup INS : INS = NewInstance R_AQCLNK01 AllocGroup null
[L]MY_STATUS = fmet INS.AREAD(FIELD01)
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT
P1=1
P2=1
P3=1
P4=1
P7=FIELD01
P8=[31/12/2015]
P11=NullUuid
P12=gdatetime$([31/12/2015])
RESUP1=FIELD01-num$(P1)-num$(P2)-num$(P3)-num$(P4)-P7-num$(P8)-num$(P11)-num$(P12)
[L]ARET_VALUEP1 = fmet INS.METH1(P1,P2,P3,P4,P7,P8,P11,P12)
Call CHECK_EQUAL([L]ARET_VALUEP1,RESUP1) From AXUNIT
Call CHECK_EQUAL([L]ARET_VALUEP1,'F1_001 1 1 1 1 F1_001 31/12/2015 00000000-0000-0000-0000-000000000000 2015-12-31T00:00:00Z') From AXUNIT
Call CHECK_EQUAL(INS.AQX01.RES2,'F1_001 1 1 1 1 F1_001 31/12/2015 00000000-0000-0000-0000-000000000000 2015-12-31T00:00:00Z') From AXUNIT

Call CHECK_NOTEQUAL("AQCLNK01.REP.METH1 ==============> FIELD01='F1_060'","") From AXUNIT
#'F1_060 1 2 3 1.35 F1_060 12/10/2015 d8ab538f-2e83-43ad-a4d4-66b43db9d33c 2015-10-12T14:18:09Z'
FIELD01='F1_060'
FreeGroup INS : INS = NewInstance R_AQCLNK01 AllocGroup null
[L]MY_STATUS = fmet INS.AREAD(FIELD01)
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT
P1=1
P2=2
P3=3
P4=1.35
P7=FIELD01
P8=date$
P11=getUuid
P12=datetime$
RESUP1=FIELD01-num$(P1)-num$(P2)-num$(P3)-num$(P4)-P7-num$(P8)-num$(P11)-num$(P12)
[L]ARET_VALUEP1 = fmet INS.METH1(P1,P2,P3,P4,P7,P8,P11,P12)
Call CHECK_EQUAL([L]ARET_VALUEP1,RESUP1) From AXUNIT
Call CHECK_EQUAL(left$([L]ARET_VALUEP1,25),'F1_060 1 2 3 1.35 F1_060 ') From AXUNIT
Call CHECK_EQUAL(INS.AQX01.RES2,RESUP1) From AXUNIT
Call CHECK_EQUAL(left$(INS.AQX01.RES2,25),'F1_060 1 2 3 1.35 F1_060 ') From AXUNIT


FreeGroup INS
End

#**
#* AQCLNK01_RMETHODES3
#*
#*!
Subprog AQCLNK01_RMETHODES3()
Local Integer MY_STATUS,WNBERR
Local Char FIELD01 (50)
Local Instance INS Using R_AQCLNK01
INS = NewInstance R_AQCLNK01 AllocGroup null

# #Fmethod Catégorie 2
Call CHECK_NOTEQUAL("AQCLNK01 REP Fmethod METH2(P1,P2,P3,P4,P7,P8,P11,P12)","") From AXUNIT
Local Tinyint P1
Local Shortint P2
Local Integer P3
Local Decimal P4
Local Char P7 (100)
Local Date P8
Local Uuident P11
Local Datetime P12
Local Char ARET_VALUEP2(250),RESUP2(250)

Call CHECK_NOTEQUAL("AQCLNK01.REP.METH2 ==============> FIELD01='F1_001'","") From AXUNIT
#'F1_001 2 2 2 2 F1_001X 01/01/2016 00000000-0000-0000-0000-000000000000 2016-01-01T00:00:00Z'
FIELD01='F1_001'
FreeGroup INS : INS = NewInstance R_AQCLNK01 AllocGroup null
[L]MY_STATUS = fmet INS.AREAD(FIELD01)
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT
P1=1
P2=1
P3=1
P4=1
P7=FIELD01
P8=[31/12/2015]
P11=NullUuid
P12=gdatetime$([31/12/2015])
RESUP1=FIELD01-num$(P1)-num$(P2)-num$(P3)-num$(P4)-P7-num$(P8)-num$(P11)-num$(P12)
[L]ARET_VALUEP2 = fmet INS.METH2(P1,P2,P3,P4,P7,P8,P11,P12)
RESUP2=FIELD01-num$(P1)-num$(P2)-num$(P3)-num$(P4)-P7-num$(P8)-num$(P11)-num$(P12)
Call CHECK_NOTEQUAL(RESUP1,RESUP2) From AXUNIT
Call CHECK_EQUAL([L]ARET_VALUEP2,RESUP2) From AXUNIT
Call CHECK_EQUAL([L]ARET_VALUEP2,'F1_001 2 2 2 2 F1_001X 01/01/2016 00000000-0000-0000-0000-000000000000 2016-01-01T00:00:00Z') From AXUNIT
Call CHECK_EQUAL(INS.AQX01.RES2,'F1_001 2 2 2 2 F1_001X 01/01/2016 00000000-0000-0000-0000-000000000000 2016-01-01T00:00:00Z') From AXUNIT

Call CHECK_NOTEQUAL("AQCLNK01.REP.METH2 ==============> FIELD01='F1_060'","") From AXUNIT
#'F1_060 2 3 4 2.35 F1_060X 13/10/2015 50bb2342-f8c5-4496-8308-fce7269653e8 2015-10-13T14:18:09Z'
FIELD01='F1_060'
FreeGroup INS : INS = NewInstance R_AQCLNK01 AllocGroup null
[L]MY_STATUS = fmet INS.AREAD(FIELD01)
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT
P1=1
P2=2
P3=3
P4=1.35
P7=FIELD01
P8=date$
P11=getUuid
P12=datetime$
RESUP1=FIELD01-num$(P1)-num$(P2)-num$(P3)-num$(P4)-P7-num$(P8)-num$(P11)-num$(P12)
[L]ARET_VALUEP2 = fmet INS.METH2(P1,P2,P3,P4,P7,P8,P11,P12)
RESUP2=FIELD01-num$(P1)-num$(P2)-num$(P3)-num$(P4)-P7-num$(P8)-num$(P11)-num$(P12)
Call CHECK_NOTEQUAL(RESUP1,RESUP2) From AXUNIT
Call CHECK_EQUAL([L]ARET_VALUEP2,RESUP2) From AXUNIT
Call CHECK_EQUAL(left$([L]ARET_VALUEP2,26),'F1_060 2 3 4 2.35 F1_060X ') From AXUNIT
Call CHECK_EQUAL(INS.AQX01.RES2,RESUP2) From AXUNIT
Call CHECK_EQUAL(left$(INS.AQX01.RES2,26),'F1_060 2 3 4 2.35 F1_060X ') From AXUNIT

FreeGroup INS
End
