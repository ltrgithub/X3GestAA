#<AdxTL>@(#)0.0.0.0 $Revision$
Local Integer MY_STATUS
Local Instance MY_LOG Using C_ALOG
MY_LOG = NewInstance C_ALOG AllocGroup null
[L]MY_STATUS = fmet MY_LOG.ASETNAME("QLFAC_TABLAN_"+GACTX.USER)
[L]MY_STATUS = fmet MY_LOG.ABEGINLOG("QLFAC_TABLAN")

Local Clbfile RESULT
RESULT =  func TESTSUITE()
FreeGroup MY_LOG

End


#**
#* Subprog SETUP called at the beginning of the unit test suite
#*!
Subprog SETUP
# Database cleaning
If clalev([F:TLA])=0 : Local File TABLAN [TLA] : Endif
If clalev([F:AXX])=0 : Local File ATEXTRA  [AXX] : Endif
Onerrgo ERROR_SETUP_NOTFOUND
Trbegin [TLA]
Delete [TLA]TLA0 = "ZTL"
Delete [AXX] Where CODFIC="TABLAN" & IDENT1="ZTL"
Commit
Onerrgo
Call LOG_LINE("SETUP : Database cleaning (fstat="+num$(fstat)+")") From AXUNIT
End

$ERROR_SETUP_NOTFOUND
Resume
#**
#* The main entry point of the unit test suite
#*
#*!
Funprog TESTSUITE()

Call TESTSUITE_START("TABLAN", "Test suite for Class TABLAN") From AXUNIT

Call ADD_TESTCASE("TABLAN_CREATION","Creation of TABLAN ZTL",4) From AXUNIT
Call ADD_TESTCASE("TABLAN_READ","Read TABLAN ZTL",1) From AXUNIT
Call ADD_TESTCASE("TABLAN_UPDATE","Update TABLAN ZTL",2) From AXUNIT
Call ADD_TESTCASE("TABLAN_DELETE","Deletion of TABLAN ZTL",2) From AXUNIT

Local Clbfile SUITE_RESULT
SUITE_RESULT = func AXUNIT.RUN_TESTSUITE("TABLAN", "QLFAC_TABLAN")

End SUITE_RESULT

#**
#* Creation of a TABLAN
#*
#*!
Subprog TABLAN_CREATION()
Local Integer MY_STATUS

Local Instance QLFTLA Using C_TABLAN
QLFTLA = NewInstance C_TABLAN AllocGroup null

[L]MY_STATUS = fmet QLFTLA.AINIT()
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT

# Invalid language
QLFTLA.LAN    = ""

# Expect error mandatory fields not supplied.
[L]MY_STATUS = fmet QLFTLA.AINSERT()
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AERROR) From AXUNIT

# Write errors
Local Integer I
For I=1 To maxtab(QLFTLA.AERROR)
 If  QLFTLA.AERROR(I)<>null &  QLFTLA.AERROR(I).STA=[V]CST_AERROR & QLFTLA.AERROR(I).DEL<>2
   Call LOG_LINE(QLFTLA.AERROR(I).PRO-":"-QLFTLA.AERROR(I).MES) From AXUNIT
 Endif
Next I

FreeGroup QLFTLA

QLFTLA = NewInstance C_TABLAN AllocGroup null

[L]MY_STATUS = fmet QLFTLA.AINIT()
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT

# Load mandatory values
QLFTLA.LAN       = "ZTL"
QLFTLA.LANCNV    = 1
QLFTLA.LANSTD    = 1
QLFTLA.LANISO    = "pt-PT"
QLFTLA.LANUNI    = 1
QLFTLA.LANCON    = 1
QLFTLA.LANRPL    = " "
QLFTLA.INTSHO    = "English"
QLFTLA.INTDES    = "American English"

# Expect OK
[L]MY_STATUS = fmet QLFTLA.AINSERT()
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT
# Write errors
Local Integer I
For I=1 To maxtab(QLFTLA.AERROR)
 If  QLFTLA.AERROR(I)<>null &  QLFTLA.AERROR(I).STA=[V]CST_AERROR & QLFTLA.AERROR(I).DEL<>2
   Call LOG_LINE(QLFTLA.AERROR(I).PRO-":"-QLFTLA.AERROR(I).MES) From AXUNIT
 Endif
Next I

FreeGroup QLFTLA
End


#**
#* Read a TABLAN
#*!
Subprog TABLAN_READ()
Local Integer MY_STATUS

Local Instance QLFTLA Using C_TABLAN
QLFTLA = NewInstance C_TABLAN AllocGroup null

[L]MY_STATUS = fmet QLFTLA.AREAD("ZTL")
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT

FreeGroup QLFTLA
End

#**
#* Update a TABLAN
#*!
Subprog TABLAN_UPDATE()
Local Integer MY_STATUS
Local Instance QLFTLA Using C_TABLAN
QLFTLA = NewInstance C_TABLAN AllocGroup null

[L]MY_STATUS = fmet QLFTLA.AREAD("ZTL")
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT

QLFTLA.INTDES = "Language Description"
QLFTLA.INTSHO = "Upd SHO"
If [L]MY_STATUS = [V]CST_AOK
  [L]MY_STATUS = fmet QLFTLA.AUPDATE()
  Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT
Endif

FreeGroup QLFTLA
End

#**
#* Delete a TABLAN
#*!
Subprog TABLAN_DELETE()
Local Integer MY_STATUS
Local Instance QLFTLA Using C_TABLAN
QLFTLA = NewInstance C_TABLAN AllocGroup null

[L]MY_STATUS = fmet QLFTLA.AREAD("ZTL")
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT

If [L]MY_STATUS = [V]CST_AOK
  [L]MY_STATUS = fmet QLFTLA.ADELETE()
  Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT
Endif

FreeGroup QLFTLA
End
