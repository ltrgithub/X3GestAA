Call OUVRE_TRACE("QLFAR_ASSIGN") From LECFIC
Call TESTSUITE()

Call FERME_TRACE From LECFIC
GTRACE = "QLFAR_ASSIGN_"+GUSER
Call LEC_TRACE From LECFIC
End

Funprog TESTSUITE()
Call SET_LOCALE("fr-FR") From ASYRQLF

Call TESTSUITE_START("ASSIGN", "ASSIGN") From AXUNIT
Call ADD_TESTCASE("TC_ASSIGN","TC_ASSIGN", 0) From AXUNIT


Local Clbfile  SUITE_RESULT
SUITE_RESULT = func AXUNIT.RUN_TESTSUITE("FUNCTIONS", "FUNCTIONS")
End SUITE_RESULT


Subprog TC_ASSIGN()
Local Integer A
Call CHECK_EQUAL(A,0) From AXUNIT
Assign "A" With 1
Call CHECK_EQUAL(A,1) From AXUNIT
Assign "A" With 10
Call CHECK_EQUAL(A,10) From AXUNIT

Local Char B(26)
Call CHECK_EQUAL(len(B),0) From AXUNIT
Assign "B" With "A"
Call CHECK_EQUAL(len(B),1) From AXUNIT
Call CHECK_EQUAL(B,"A") From AXUNIT

Assign "B" With "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
Call CHECK_EQUAL(len(B),26) From AXUNIT
Call CHECK_EQUAL(B,"ABCDEFGHIJKLMNOPQRSTUVWXYZ") From AXUNIT

Local Char C(10)
Call CHECK_EQUAL(len(C),0) From AXUNIT
Assign "C" With "A"
Call CHECK_EQUAL(len(C),1) From AXUNIT
Call CHECK_EQUAL(C,"A") From AXUNIT

Assign "C" With "123456789012345679801234567980"
Call CHECK_EQUAL(len(C),10) From AXUNIT
Call CHECK_EQUAL(C,"1234567890") From AXUNIT

Assign "C" With evalue("chr$(65)")
Call CHECK_EQUAL(len(C),1) From AXUNIT
Call CHECK_EQUAL(C,"A") From AXUNIT

Assign "C" With num$(evalue("ascii('A')"))
Call CHECK_EQUAL(len(C),2) From AXUNIT
Call CHECK_EQUAL(C,"65") From AXUNIT

End
