Call OUVRE_TRACE("QLFAR_ADXVAR - ADX variables") From LECFIC
Call TESTSUITE()

Call FERME_TRACE From LECFIC
GTRACE = "QLFAR_ADXVAR_"+GACTX.USER
Call LEC_TRACE From LECFIC
End

Funprog TESTSUITE()
ASTATUS = fmet GACTX.ACTX_SET_LANISO("fr-FR")

Call TESTSUITE_START("ADXVAR", "ADXVAR") From AXUNIT
Call ADD_TESTCASE("TC_ADXVAR_10","TC_ADXVAR_10", 18) From AXUNIT
Call ADD_TESTCASE("TC_ADXVAR_20","TC_ADXVAR_20", 18) From AXUNIT
Call ADD_TESTCASE("TC_ADXVAR_30","TC_ADXVAR_30", 35) From AXUNIT
Call ADD_TESTCASE("TC_ADXVAR_40","TC_ADXVAR_40", 18) From AXUNIT
Call ADD_TESTCASE("TC_ADXVAR_50","TC_ADXVAR_50", 22) From AXUNIT

Local Clbfile  SUITE_RESULT
SUITE_RESULT = func AXUNIT.RUN_TESTSUITE("ADXVAR", "ADXVAR")
End SUITE_RESULT


Subprog TC_ADXVAR_10()
Local Char TC(255)
#Variable=[adxsca] type=[(20)  STRING OF 10 CHARACTERS MAXIMUM With A LENGTH OF 6: adxsca(EXAMPLE: ..,.**$_.)]
TC="adxsca - Store internal formatting values"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL([S]adxsca, "?? .#*???") From AXUNIT

#TODO #Variable=[adxuprec] type=[(4)  LONG Integer 0(EXAMPLE: 10)]
#TODO TC="adxuprec - number of rows processed by last 'update' statement"
#TODO Call CHECK_EQUAL(TC,TC) From AXUNIT
#TODO Local File COMPANY [CPY]
#TODO Trbegin [CPY]
#TODO Update [CPY] Where 1=1 With UPDDATTIM=datetime$
#TODO Call CHECK_EQUAL([S]adxuprec,nbrecord([CPY])) From AXUNIT
#TODO Rollback
#TODO ##LogicClose File [CPY]
#TODO Close File [CPY]

#Variable=[adxlig] type=[(2)  SHORT Integer 0(EXAMPLE: 200)]
TC="adxlig - transfer first adxlig lines to the client"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL([S]adxlig,200) From AXUNIT

#Variable=[adxmda] type=[(1)  TINY Integer 0(EXAMPLE: 0)]
TC="adxmda - determines the current angular mode degrees or radians. "
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL([S]adxmda,0) From AXUNIT

#Variable=[adxcpw] type=[(74)  STRING OF 64 CHARACTERS MAXIMUM With A LENGTH OF 6: adxcpw(EXAMPLE: CRYPT:TGRSEQKSGRTXURE)]
TC="adxcpw - encrypted password"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL([S]adxcpw,"CRYPT:tgrseQksgrTxure") From AXUNIT

#Variable=[adxkpg] type=[(265)  STRING OF 255 CHARACTERS MAXIMUM With A LENGTH OF 6: adxkpg(EXAMPLE: CALCULETTE)]
TC="adxkpg - name of program that is used as calculator"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL([S]adxkpg,"CALCULETTE") From AXUNIT

#Variable=[adxksp] type=[(265)  STRING OF 255 CHARACTERS MAXIMUM With A LENGTH OF 6: adxksp(EXAMPLE: CALCULETTE)]
TC="adxksp - name of subprogram to execute in calculator"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL([S]adxksp,"CALCULETTE") From AXUNIT

#Variable=[adxmso] type=[(4)  LONG Integer 0(EXAMPLE: 10)]
TC = "adxmso - max files that can be opened by openi, openo, openio"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL([S]adxmso,10) From AXUNIT

#Variable=[adxlog] type=[(4)  LONG Integer 0(EXAMPLE: 0)]
TC="adxlog - database transaction in progress"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL([S]adxlog,0) From AXUNIT

#Variable=[adxses] type=[(4)  LONG Integer 0(EXAMPLE: 1)]
TC="adxses - unknown"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL([S]adxses,1) From AXUNIT
End

Subprog TC_ADXVAR_20()
Local Char TC(255)
#Variable=[adxtul] type=[(11)  STRING OF 1 CHARACTERS MAXIMUM With A LENGTH OF 6: adxtul(EXAMPLE: C)]
TC="adxtul - deprecated - formatting in format$"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL([S]adxtul, "c") From AXUNIT

#Variable=[adxtut] type=[(27)  STRING OF 17 CHARACTERS MAXIMUM With A LENGTH OF 6: adxtut(EXAMPLE: A#)]
TC="adxtut - deprecated - formatting in format$"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL([S]adxtut, "A#") From AXUNIT

#Variable=[adxtuc] type=[(43)  STRING OF 33 CHARACTERS MAXIMUM With A LENGTH OF 6: adxtuc(EXAMPLE: -/_,)]
TC="adxtuc - deprecated - formatting in format$"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL([S]adxtuc, "-/_,") From AXUNIT

#TODO #Variable=[adxSqlRec] type=[(4)  LONG Integer 0(EXAMPLE: 0)]
#TODO TC="adxSqlRec - return number of rows processed in execsql statement"
#TODO Call CHECK_EQUAL(TC,TC) From AXUNIT
#TODO Local File COMPANY [CPY]
#TODO Execsql From "O" Sql  "Update COMPANY set UPDUSR_0='TST'"
#TODO Call CHECK_EQUAL([S]adxSqlRec,nbrecord([CPY])) From AXUNIT
#TODO #LogicClose File [CPY]
#TODO Close File [CPY]

#Variable=[ADXDWEEK] type=[(4)  LONG Integer 0(EXAMPLE: 0)]
TC="ADXDWEEK - unknown"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL([S]ADXDWEEK, 0) From AXUNIT

#Variable=[adxmto] type=[(4)  LONG Integer 0(EXAMPLE: 200)]
TC="adxmto - maximum concurrent tables that can be opened"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL([S]adxmto,200) From AXUNIT

#Variable=[adxtct] type=[(264)  STRING OF 254 CHARACTERS MAXIMUM With A LENGTH OF 6: adxtct(EXAMPLE: APLCOM)]
TC="adxtct - name of sequence definition table"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL([S]adxtct, "APLCOM") From AXUNIT

#Variable=[adxtlk] type=[(264)  STRING OF 254 CHARACTERS MAXIMUM With A LENGTH OF 6: adxtlk(EXAMPLE: APLLCK)]
TC="adxtlk - name of logical lock table"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL([S]adxtlk, "APLLCK") From AXUNIT

#Variable=[adxmua] type=[(4)  LONG Integer 0(EXAMPLE: 2047)]
TC="adxmua - max concurrent users"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL([S]adxmua, 2047) From AXUNIT

#Variable=[adxdcs] type=[(4)  LONG Integer 0(EXAMPLE: 1950)
TC="adxdcs - pivot year used to determine century"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL([S]adxdcs, 1950) From AXUNIT

End
Subprog TC_ADXVAR_30()
Local Char TC(255)

#Variable=[adxfmt2] type=[(265)  STRING OF 255 CHARACTERS MAXIMUM With A LENGTH OF 7: adxfmt2(EXAMPLE: D:DD[/]MM[/]YYYY)]
TC="adxfmt2 - unknown"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL([S]adxfmt2, "D:DD[/]MM[/]YYYY") From AXUNIT

#Variable=[adxfmt] type=[(265)  STRING OF 255 CHARACTERS MAXIMUM With A LENGTH OF 6: adxfmt(EXAMPLE: ##)]
TC="adxfmt - default format for native datatypes"
Call CHECK_EQUAL(TC,TC) From AXUNIT
TC="adxfmt(0) - Tinyint or Libelle"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL([S]adxfmt(0), "##") From AXUNIT

TC="adxfmt(1) - Short Integer"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL([S]adxfmt(1), "5#") From AXUNIT

TC="adxfmt(2) - Long Integer"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL([S]adxfmt(2), "9#") From AXUNIT

TC="adxfmt(3) - Decimal"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL([S]adxfmt(3), "9.2") From AXUNIT

TC="adxfmt(4) - Deprecated - Floating"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL([S]adxfmt(4), "5.2") From AXUNIT

TC="adxfmt(5) - Double Precision "
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL([S]adxfmt(5), "9.2") From AXUNIT

TC="adxfmt(6) - Alphanumeric"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL([S]adxfmt(6), "X") From AXUNIT

TC="adxfmt(7) - Alphanumeric"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL([S]adxfmt(7), "DD[/]MM[/]YYYYYY[-]MM[-]DD[T]hh[:]mm[:]ss[Z]") From AXUNIT

#Variable=[adxmxl] type=[(2)  SHORT Integer 0(EXAMPLE: 250)]
TC="adxmxl - number of elements in a left  list box"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL([S]adxmxl, 250) From AXUNIT

#Variable=[adxrob] type=[(264)  STRING OF 254 CHARACTERS MAXIMUM With A LENGTH OF 6: adxrob(EXAMPLE: ECR)]
TC="adxrob - identifies directory for screen and menus"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL([S]adxrob, "ECR") From AXUNIT

#Variable=[adxmbm] type=[(4)  LONG Integer 0(EXAMPLE: 512)]
TC="adxmbm - number of buffers allocated to saving applicaiton"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL([S]adxmbm, 512) From AXUNIT

#Variable=[adxmpr] type=[(4)  LONG Integer 0(EXAMPLE: 200)]
TC="adxmpr - number of processes kept in memory"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL([S]adxmpr, 200) From AXUNIT

#Variable=[adxtms] type=[(264)  STRING OF 254 CHARACTERS MAXIMUM With A LENGTH OF 6: adxtms(EXAMPLE: APLSTD)]
TC="adxtms - identifies the table where messages (mess) are stored"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL([S]adxtms, "APLSTD") From AXUNIT

#Variable=[adxftl] type=[(4)  LONG Integer 0(EXAMPLE: 20)]
TC="adxftl - performance - buffered reads"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL([S]adxftl, 20) From AXUNIT

#Variable=[adxwrb] type=[(4)  LONG Integer 0(EXAMPLE: 1)]
TC="adxwrb - performance - buffered writes"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL([S]adxwrb, 1) From AXUNIT

#Variable=[adxusr] type=[(265)  STRING OF 255 CHARACTERS MAXIMUM With A LENGTH OF 6: adxusr(EXAMPLE: RBU)]
TC="adxusr - X3 connection user"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL(toupper([S]adxusr), toupper(GACTX.USER)) From AXUNIT

End


Subprog TC_ADXVAR_40()
Local Char TC(255)

#Variable=[adxctx] type=[(265)  STRING OF 255 CHARACTERS MAXIMUM With A LENGTH OF 6: adxctx(EXAMPLE: )]
TC="adxctx - Internal - workflow context"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL([S]adxctx,"") From AXUNIT

#Variable=[adxgtb] type=[(2)  SHORT Integer 0(EXAMPLE: 0)]
TC="adxgtb - Deprecated - unknown"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL(adxgtb,0 ) From AXUNIT

#Variable=[adxdir] type=[(264)  STRING OF 254 CHARACTERS MAXIMUM With A LENGTH OF 6: adxdir(EXAMPLE: /SAGE/SAGEDEV/SUPDVLP/RUNTIME)]
TC="adxdir - X3 runtime directory"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_NOTEQUAL(len([S]adxdir), 0) From AXUNIT

#Variable=[adxium] type=[(1)  TINY Integer 0(EXAMPLE: 0)]
TC="adxium - Text file coding method (ASCII, UCS2, UTF8...)"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL(adxium,0 ) From AXUNIT

#Variable=[adxifs] type=[(11)  STRING OF 1 CHARACTERS MAXIMUM With A LENGTH OF 6: adxifs(EXAMPLE: )]
TC="adxifs - X3 field separator"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL(adxifs,"") From AXUNIT

#Variable=[adxirs] type=[(12)  STRING OF 2 CHARACTERS MAXIMUM With A LENGTH OF 6: adxirs(EXAMPLE: )]
TC="adxirs - text file end of record separator"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL(ascii(adxirs), 10) From AXUNIT

#TODO #Variable=[adxdlrec] type=[(4)  LONG Integer 0(EXAMPLE: 1)]
#TODO TC="adxdlrec - number of records processed by last delete instruction"
#TODO Call CHECK_EQUAL(TC,TC) From AXUNIT
#TODO Local Integer CNT
#TODO Local File COMPANY [CPY]
#TODO [L]CNT=nbrecord([CPY])
#TODO Trbegin [CPY]
#TODO Delete [CPY] Where 1=1
#TODO Call CHECK_EQUAL([S]adxdlrec, [L]CNT) From AXUNIT
#TODO Rollback
#TODO #LogicClose File [CPY]
#TODO Close File [CPY]

#Variable=[adxovs] type=[(265)  STRING OF 255 CHARACTERS MAXIMUM With A LENGTH OF 6: adxovs(EXAMPLE: ACLAVAL)]
TC="adxovs - internal - unknown"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL(adxovs, "ACLAVAL" ) From AXUNIT

#Variable=[adxovf] type=[(265)  STRING OF 255 CHARACTERS MAXIMUM With A LENGTH OF 6: adxovf(EXAMPLE: VALID_ONDEMAND)]
TC="adxovf - internal - unknown"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL(toupper([S]adxovf),"VALID_ONDEMAND" ) From AXUNIT

#Variable=[adxmother] type=[(23)  STRING OF 13 CHARACTERS MAXIMUM With A LENGTH OF 9: adxmother(EXAMPLE: SUPERV)]
TC="adxmother - X3 parent reference"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL(toupper([S]adxmother),"SUPERV" ) From AXUNIT

End

Subprog TC_ADXVAR_50()
Local Char TC(255)

#Variable=[adxtrp] type=[(264)  STRING OF 254 CHARACTERS MAXIMUM With A LENGTH OF 6: adxtrp(EXAMPLE: ATRIFIL)]
TC="adxtrp - internal - unknown"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL(adxtrp, "ATRIFIL" ) From AXUNIT

#Variable=[adxtrl] type=[(265)  STRING OF 255 CHARACTERS MAXIMUM With A LENGTH OF 6: adxtrl(EXAMPLE: ATRIOPE)]
TC="adxtrl - internal - unknown"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL(adxtrl, "ATRIOPE" ) From AXUNIT

#Variable=[adxtro] type=[(12)  STRING OF 2 CHARACTERS MAXIMUM With A LENGTH OF 6: adxtro(EXAMPLE: )]
TC="adxtro - internal - unknown"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL(adxtro, "" ) From AXUNIT

#Variable=[adxcus] type=[(74)  STRING OF 64 CHARACTERS MAXIMUM With A LENGTH OF 6: adxcus(EXAMPLE: RBURNS)]
TC="adxcus - internal - connection user"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_NOTEQUAL(tolower(adxcus), "" ) From AXUNIT

#Variable=[adxsax] type=[(264)  STRING OF 254 CHARACTERS MAXIMUM With A LENGTH OF 6: adxsax(EXAMPLE: )]
TC="adxsax - internal - unknown"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL(adxsax, "" ) From AXUNIT

#Variable=[adxdpg] type=[(137)  STRING OF 127 CHARACTERS MAXIMUM With A LENGTH OF 6: adxdpg(EXAMPLE: DEBUGGER)]
TC="adxdpg - internal - unknown"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL(toupper(adxdpg), "DEBUGGER" ) From AXUNIT

#Variable=[adxdbo] type=[(137)  STRING OF 127 CHARACTERS MAXIMUM With A LENGTH OF 6: adxdbo(EXAMPLE: INIDBG)]
TC="adxdbo - internal - unknown"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL(toupper(adxdbo), "INIDBG" ) From AXUNIT

#Variable=[adxdbx] type=[(137)  STRING OF 127 CHARACTERS MAXIMUM With A LENGTH OF 6: adxdbx(EXAMPLE: ENDDBG)]
TC="adxdbx - internal - unknown"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL(toupper(adxdbx), "ENDDBG" ) From AXUNIT

#Variable=[adxdbc] type=[(137)  STRING OF 127 CHARACTERS MAXIMUM With A LENGTH OF 6: adxdbc(EXAMPLE: INPDBG)]
TC="adxdbc - internal - unknown"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL(toupper(adxdbc), "INPDBG"  ) From AXUNIT

#Variable=[adxmpgpro] type=[(137)  STRING OF 127 CHARACTERS MAXIMUM With A LENGTH OF 9: adxmpgpro(EXAMPLE: ACTLMASKFOL)]
TC="adxmpgpro - deprecated - unknown"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL(toupper(adxmpgpro), "ACTLMASKFOL" ) From AXUNIT

#Variable=[adxmpgtrt] type=[(137)  STRING OF 127 CHARACTERS MAXIMUM With A LENGTH OF 9: adxmpgtrt(EXAMPLE: GESECRAN)]
TC="adxmpgtrt - deprecated - unknown"
Call CHECK_EQUAL(TC,TC) From AXUNIT
Call CHECK_EQUAL(toupper(adxmpgtrt), "GESECRAN"  ) From AXUNIT

End
