#<AdxTL>@(#)0.0.0.0 $Revision$
Call OUVRE_TRACE("QLFAC_ACPYFCY") From LECFIC
Local Clbfile RESULT

RESULT =  func TESTSUITE()
Call FERME_TRACE From LECFIC
GTRACE = "QLFAC_ACPYFCY_"+GACTX.USER
Call LEC_TRACE From LECFIC
End

#Test from ZROSCH
#**
#* Subprog SETUP called at the beginning of the unit test suite
#*!
Subprog SETUP
  # Database cleaning
#  Onerrgo ERROR_SETUP_NOTFOUND
#  Trbegin [GAC]
#    Delete [GAC]GAC0 = "300ZUT"
#  Commit
#  Onerrgo
#
#  Call LOG_LINE("SETUP : Database cleaning (fstat="+num$(fstat)+")") From AXUNIT
End

$ERROR_SETUP_NOTFOUND
Resume


#**
#* The main entry point of the unit test suite
#*
#*!
Funprog TESTSUITE()

  # Start the test suite
  Call TESTSUITE_START("ACPYFCY", "Company/Site testing") From AXUNIT

  Call ADD_TESTCASE( "ACPYFCY_AREAD_SITE"    , "Read ACPYFCY record for site TOR"             , 1 ) From AXUNIT
  #TODO Call ADD_TESTCASE( "ACPYFCY_AREAD_COMPANY" , "Read ACPYFCY record for company GRE"          , 1 ) From AXUNIT
  Call ADD_TESTCASE( "ACPYFCY_AREAD_INVALID" , "Read ACPYFCY record for invalid company/site" , 1 ) From AXUNIT

  # Run the test and return the result
  Local Clbfile RESULT_SUITE
  RESULT_SUITE=func AXUNIT.RUN_TESTSUITE("ACPYFCY","ACPYFCY test")

End RESULT_SUITE


#**
#* Write errors to log
#*!
$WRITE_ERRORS
  Local Integer I
  For I=1 To maxtab(PLACE.AERROR)
    If  PLACE.AERROR(I)<>null & PLACE.AERROR(I).STA=[V]CST_AERROR & PLACE.AERROR(I).DEL<>2
      Call LOG_LINE(PLACE.AERROR(I).PRO-":"-PLACE.AERROR(I).MES) From AXUNIT
    Endif
  Next I
Return

####################################################################################################

Subprog ACPYFCY_AREAD_SITE()
  Local Integer ASTATUS
  Local Instance PLACE Using C_ACPYFCY

  PLACE = NewInstance C_ACPYFCY ALLOCGROUP null

  [L]ASTATUS = fmet PLACE.AREAD("TOR")
  Call LOG_LINE("Read site record TOR from class") From AXUNIT
  Call CHECK_EQUAL([L]ASTATUS,[V]CST_AOK) From AXUNIT
  Gosub WRITE_ERRORS

  FREEGROUP PLACE
  PLACE = null
End

Subprog ACPYFCY_AREAD_COMPANY()
  Local Integer ASTATUS
  Local Instance PLACE Using C_ACPYFCY

  PLACE = NewInstance C_ACPYFCY ALLOCGROUP null

  [L]ASTATUS = fmet PLACE.AREAD("GRE")
  Call LOG_LINE("Read site record GRE from class") From AXUNIT
  Call CHECK_EQUAL([L]ASTATUS,[V]CST_AOK) From AXUNIT
  Gosub WRITE_ERRORS

  FREEGROUP PLACE
  PLACE = null
End

Subprog ACPYFCY_AREAD_INVALID()
  Local Integer ASTATUS
  Local Instance PLACE Using C_ACPYFCY

  PLACE = NewInstance C_ACPYFCY ALLOCGROUP null

  [L]ASTATUS = fmet PLACE.AREAD("OZQ")
  Call LOG_LINE("Read invalid company/site record from class") From AXUNIT
  Call CHECK_EQUAL([L]ASTATUS,[V]CST_AERROR) From AXUNIT
  Gosub WRITE_ERRORS

  FREEGROUP PLACE
  PLACE = null
End
