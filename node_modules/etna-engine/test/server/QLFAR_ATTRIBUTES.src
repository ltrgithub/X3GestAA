Call OUVRE_TRACE("QLFAR_ATTRIBUTES") From LECFIC
Call TESTSUITE()

Call FERME_TRACE From LECFIC

GTRACE = "QLFAR_ATTRIBUTES_"+GUSER
Call LEC_TRACE From LECFIC
End

$ERROR
Call CHECK_EQUAL(errn, EX) From AXUNIT
EX = 0
Resume

Funprog TESTSUITE()
Call SET_LOCALE("fr-FR") From ASYRQLF

Call TESTSUITE_START("ATTRIBUTES", "ATTRIBUTES") From AXUNIT
Call ADD_TESTCASE("TC_GETATTRIBUTE","TC_GETATTRIBUTE",5) From AXUNIT

Local Clbfile  SUITE_RESULT
SUITE_RESULT = func AXUNIT.RUN_TESTSUITE("ATTRIBUTES", "ATTRIBUTES")
End SUITE_RESULT


Subprog TC_GETATTRIBUTE
Local Char USER1(50)
USER1 = GACTX.USER
Call CHECK_EQUAL([V]GACTX.USER,USER1) From AXUNIT

Local Integer IS_READONLY

Callmet GACTX.USER.ASETATTR("$isReadonly",[V]CST_ATRUE)
[L]IS_READONLY = Fmet GACTX.USER.AGETATTR("$isReadonly")
Call CHECK_EQUAL([L]IS_READONLY,[V]CST_ATRUE) From AXUNIT

Callmet GACTX.USER.ASETATTR("$isReadonly",[V]CST_AFALSE)
[L]IS_READONLY = Fmet GACTX.USER.AGETATTR("$isReadonly")
Call CHECK_EQUAL([L]IS_READONLY,[V]CST_AFALSE) From AXUNIT

Callmet GACTX.USER.ASETATTR("$isReadonly",[V]CST_ATRUE)
[L]IS_READONLY = Fmet GACTX.USER.AGETATTR("$isReadonly")
Call CHECK_EQUAL([L]IS_READONLY,[V]CST_ATRUE) From AXUNIT

Callmet GACTX.USER.ASETATTR("$isReadonly",[V]CST_AFALSE)
[L]IS_READONLY = Fmet GACTX.USER.AGETATTR("$isReadonly")
Call CHECK_EQUAL([L]IS_READONLY,[V]CST_AFALSE) From AXUNIT
End
