#<AdxTL>@(#)8.0.0.0 $Revision$
Local Clbfile TOTO
TOTO =  func TESTSUITE()
Call FERME_TRACE From LECFIC
GTRACE = "QLFAR_89609_"+GUSER
Call LEC_TRACE From LECFIC

End

# ---------- TEST_SUITE function tosdata----------------------------
# ------------------------------------------------------------------

Funprog TESTSUITE()
  Call ADD_TESTCASE("TEST_LITERALS", "Literals tests", 11) From AXUNIT
  Call ADD_TESTCASE("TEST_OPERATORS", "Operators tests", 26) From AXUNIT
  Call ADD_TESTCASE("TEST_FUNCTIONS", "Functions tests", 16) From AXUNIT
  Call ADD_TESTCASE("TEST_CONVERT", "Field convertion tests", 9) From AXUNIT
  Call ADD_TESTCASE("TEST_CONSTANT", "Constant criterias", 10) From AXUNIT
  Call ADD_TESTCASE("TEST_MISC", "Miscellaneous tests", 2) From AXUNIT

End func AXUNIT.RUN_TESTSUITE("Instances", "Common")

# --------------------------------------------------------------
Subprog TEST_LITERALS
Local Char RES(50)
Local Char TOOL0(50)
Local Char TOOL1(50)
Local Datetime DTM
Local Datetime DTZ
Local Char T0(20)(1..)
Local Char T1(20)(1..)

# integer
RES = TOSDATA(T0, T1, "TOTO = 5")
Call CHECK_EQUAL( RES, "(TOTO eq 5)") From AXUNIT

#decimals
RES = TOSDATA(T0, T1, "TOTO = 10.52")
Call CHECK_EQUAL( RES, "(TOTO eq 10.52)") From AXUNIT

RES = TOSDATA(T0, T1, "TOTO = 0.5254546465")
Call CHECK_EQUAL( RES, "(TOTO eq 0.5254546465)") From AXUNIT

#strings
RES = TOSDATA(T0, T1, "TOTO = 'TRALALA'")
Call CHECK_EQUAL( RES, '(TOTO eq "TRALALA")') From AXUNIT

TOOL0 = "'"+'TRA"LALA'+"'"
RES = TOSDATA(T0, T1, "TOTO = "+TOOL0)
Call CHECK_EQUAL( RES, "(TOTO eq "+ TOOL0+")") From AXUNIT

#date
RES = TOSDATA(T0, T1, "TOTO = [18/03/1992]")
Call CHECK_EQUAL( RES, "(TOTO eq @1992-03-18@)") From AXUNIT

#date nulle
RES = TOSDATA(T0, T1, "TOTO = [0/0/0]")
Call CHECK_EQUAL( RES, "(TOTO eq @@)") From AXUNIT


#datetime
DTM = datetime$
TOOL1 = num$(DTM)
TOOL0 = "gdatetime$('"+num$(DTM)+"')"
RES = TOSDATA(T0, T1, "TOTO = "+TOOL0)
Call CHECK_EQUAL( RES, "(TOTO eq @"+TOOL1+"@)") From AXUNIT

#null datetime
TOOL0 = "gdatetime$('"+num$(DTZ)+"')"
RES = TOSDATA(T0, T1, "toto="+TOOL0)
Call CHECK_EQUAL( RES, "(TOTO eq @@)") From AXUNIT

#special literal
RES = TOSDATA(T0, T1, "5")
Call CHECK_EQUAL( RES, "(1 eq 1)") From AXUNIT

RES = TOSDATA(T0, T1, "0")
Call CHECK_EQUAL( RES, "(1 eq 0)") From AXUNIT

Onerrgo OPERAT
RES = TOSDATA(T0, T1, "TOTO")
Onerrgo

#several 'operator required'
Onerrgo OPERAT
RES = TOSDATA(T0, T1, "TATA = 1 and I")
Onerrgo



End

# --------------------------------------------------------------
Subprog TEST_OPERATORS
Local Char T0(20)(1..)
Local Char T1(20)(1..)

# unary
RES = TOSDATA(T0, T1, "-TOTO = 5")
Call CHECK_EQUAL( RES, "( - TOTO eq 5)") From AXUNIT

RES = TOSDATA(T0, T1, "!(TOTO = 5)")
Call CHECK_EQUAL( RES, " not (TOTO eq 5)") From AXUNIT

# multiplicative
RES = TOSDATA(T0, T1, "TOTO*7 = 35")
Call CHECK_EQUAL( RES, "((TOTO mul 7) eq 35)") From AXUNIT

RES = TOSDATA(T0, T1, "TOTO/7 = 5")
Call CHECK_EQUAL( RES, "((TOTO div 7) eq 5)") From AXUNIT

RES = TOSDATA(T0, T1, "mod(TOTO, 5) = 3")
Call CHECK_EQUAL( RES, "((TOTO mod 5) eq 3)") From AXUNIT

# additive
RES = TOSDATA(T0, T1, "TOTO+7 = 35")
Call CHECK_EQUAL( RES, "((TOTO + 7) eq 35)") From AXUNIT

RES = TOSDATA(T0, T1, "TOTO-7 = 35")
Call CHECK_EQUAL( RES, "((TOTO - 7) eq 35)") From AXUNIT

# comparison
RES = TOSDATA(T0, T1, "TOTO = 5")
Call CHECK_EQUAL( RES, "(TOTO eq 5)") From AXUNIT

RES = TOSDATA(T0, T1, "TOTO <> 5")
Call CHECK_EQUAL( RES, "(TOTO ne 5)") From AXUNIT

RES = TOSDATA(T0, T1, "TOTO < 5")
Call CHECK_EQUAL( RES, "(TOTO lt 5)") From AXUNIT

RES = TOSDATA(T0, T1, "TOTO <= 5")
Call CHECK_EQUAL( RES, "(TOTO le 5)") From AXUNIT

RES = TOSDATA(T0, T1, "TOTO > 5")
Call CHECK_EQUAL( RES, "(TOTO gt 5)") From AXUNIT

RES = TOSDATA(T0, T1, "TOTO >= 5")
Call CHECK_EQUAL( RES, "(TOTO ge 5)") From AXUNIT

RES = TOSDATA(T0, T1, "pat(TOTO, 'A*') <> 0")
Call CHECK_EQUAL( RES, '(TOTO like "A%")') From AXUNIT

Onerrgo OPERAT
RES = TOSDATA(T0, T1, "pat(TOTO, 'A*')")
Onerrgo

RES = TOSDATA(T0, T1, "pat(TOTO, 'A*') = 0")
Call CHECK_EQUAL( RES, '(TOTO not like "A%")') From AXUNIT

RES = TOSDATA(T0, T1, "pat(TOTO, 'A*') > 0")
Call CHECK_EQUAL( RES, '(TOTO like "A%")') From AXUNIT

RES = TOSDATA(T0, T1, "pat(TOTO, 'A_P') <> 0")
Call CHECK_EQUAL( RES, '(TOTO like "A_P")') From AXUNIT

RES = TOSDATA(T0, T1, "find(TOTO, 5,6,7) <> 0")
Call CHECK_EQUAL( RES, '(TOTO in (5, 6, 7))') From AXUNIT

RES = TOSDATA(T0, T1, "find(TOTO, 5,6,7) > 0")
Call CHECK_EQUAL( RES, '(TOTO in (5, 6, 7))') From AXUNIT

RES = TOSDATA(T0, T1, "find(TOTO, 5,6,7) = 0")
Call CHECK_EQUAL( RES, '(TOTO not in (5, 6, 7))') From AXUNIT

Onerrgo OPERAT
RES = TOSDATA(T0, T1, "find(TOTO, 5,6,7)")
Onerrgo

# logicals
RES = TOSDATA(T0, T1, "(I = 5) and (J = 3)")
Call CHECK_EQUAL( RES, '((I eq 5) and (J eq 3))') From AXUNIT

RES = TOSDATA(T0, T1, "I = 5 and J = 3")
Call CHECK_EQUAL( RES, '((I eq 5) and (J eq 3))') From AXUNIT

RES = TOSDATA(T0, T1, "I = 5 or J = 3")
Call CHECK_EQUAL( RES, '((I eq 5) or (J eq 3))') From AXUNIT

RES = TOSDATA(T0, T1, "(I = 5) or (J = 3)")
Call CHECK_EQUAL( RES, '((I eq 5) or (J eq 3))') From AXUNIT

End

# --------------------------------------------------------------
Subprog TEST_FUNCTIONS( )
Local Char T0(20)(1..)
Local Char T1(20)(1..)
Local Date DT


RES = TOSDATA(T0, T1, "left$(TOTO, 5) = 'début'")
Call CHECK_EQUAL( RES, '(left(TOTO, 5) eq "début")') From AXUNIT

RES = TOSDATA(T0, T1, "right$(TOTO, 3) = 'fin'")
Call CHECK_EQUAL( RES, '(right(TOTO, 3) eq "fin")') From AXUNIT

RES = TOSDATA(T0, T1, "seg$(TOTO, 3, 6) = 'seg$'")
Call CHECK_EQUAL( RES, '(substring(TOTO, 3, 4) eq "seg$")') From AXUNIT

RES = TOSDATA(T0, T1, "mid$(TOTO, 3, 6) = '123456'")
Call CHECK_EQUAL( RES, '(substring(TOTO, 3, 6) eq "123456")') From AXUNIT

RES = TOSDATA(T0, T1, "toupper(TOTO) = 'UPPER'")
Call CHECK_EQUAL( RES, '(upper(TOTO) eq "UPPER")') From AXUNIT

RES = TOSDATA(T0, T1, "tolower(TOTO) = 'lower'")
Call CHECK_EQUAL( RES, '(lower(TOTO) eq "lower")') From AXUNIT

RES = TOSDATA(T0, T1, "len(TOTO) = 6")
Call CHECK_EQUAL( RES, '(length(TOTO) eq 6)') From AXUNIT

RES = TOSDATA(T0, T1, "ascii(TOTO) = 32")
Call CHECK_EQUAL( RES, '(ascii(TOTO) eq 32)') From AXUNIT

RES = TOSDATA(T0, T1, "chr$(TOTO) = 'a'")
Call CHECK_EQUAL( RES, '(char(TOTO) eq "a")') From AXUNIT

RES = TOSDATA(T0, T1, "abs(TOTO) = 3")
Call CHECK_EQUAL( RES, '(abs(TOTO) eq 3)') From AXUNIT

RES = TOSDATA(T0, T1, "arr(TOTO,2) = 3")
Call CHECK_EQUAL( RES, '(round(TOTO, 2) eq 3)') From AXUNIT

RES = TOSDATA(T0, T1, "TOTO^2 = 64")
Call CHECK_EQUAL( RES, '(pow(TOTO, 2) eq 64)') From AXUNIT

RES = TOSDATA(T0, T1, "year(TOTO) = 1992")
Call CHECK_EQUAL( RES, '(year(TOTO) eq 1992)') From AXUNIT

RES = TOSDATA(T0, T1, "month(TOTO) = 5")
Call CHECK_EQUAL( RES, '(month(TOTO) eq 5)') From AXUNIT

RES = TOSDATA(T0, T1, "day(TOTO) = 5")
Call CHECK_EQUAL( RES, '(day(TOTO) eq 5)') From AXUNIT

DT = datesyst
CHR = format$("D:[@]YYYY[-]MM[-]DD[@]", datesyst )
RES = TOSDATA(T0, T1, "TOTO = datesyst")
Call CHECK_EQUAL( RES, '(TOTO eq '+CHR+')') From AXUNIT



End

Subprog TEST_CONVERT( )
Local Char T0(20)(1..)
Local Char T1(20)(1..)


T0(1) = "AAA" : T1(1) = "CNV_A"
T0(2) = "BBB" : T1(2) = "CNV_B"
T0(3) = "CCC" : T1(3) = "CNV_C"

RES = TOSDATA(T0, T1, "day(NOTPRESENT) = 5")
Call CHECK_EQUAL( RES, '(day(NOTPRESENT) eq 5)') From AXUNIT

RES = TOSDATA(T0, T1, "day([ABV]BBB) = 5")
Call CHECK_EQUAL( RES, '(day([ABV]BBB) eq 5)') From AXUNIT

RES = TOSDATA(T0, T1, "day([F:ABV]BBB) = 5")
Call CHECK_EQUAL( RES, '(day([F:ABV]BBB) eq 5)') From AXUNIT

RES = TOSDATA(T0, T1, "day(BBB) = 5")
Call CHECK_EQUAL( RES, '(day(CNV_B) eq 5)') From AXUNIT

T0(2) = "[ABV]BBB" : T1(2) = "CNV_B"

RES = TOSDATA(T0, T1, "day(BBB) = 5")
Call CHECK_EQUAL( RES, '(day(BBB) eq 5)') From AXUNIT

RES = TOSDATA(T0, T1, "day([ABC]BBB) = 5")
Call CHECK_EQUAL( RES, '(day([ABC]BBB) eq 5)') From AXUNIT

RES = TOSDATA(T0, T1, "day([ABV]BBB) = 5")
Call CHECK_EQUAL( RES, '(day(CNV_B) eq 5)') From AXUNIT

RES = TOSDATA(T0, T1, "day(AAA) = 5")
Call CHECK_EQUAL( RES, '(day(CNV_A) eq 5)') From AXUNIT

RES = TOSDATA(T0, T1, "day(CCC) = 5")
Call CHECK_EQUAL( RES, '(day(CNV_C) eq 5)') From AXUNIT

End

Subprog TEST_CONSTANT( )
Local Char T0(20)(1..)
Local Char T1(20)(1..)

RES = TOSDATA(T0, T1, "5")
Call CHECK_EQUAL( RES, "(1 eq 1)") From AXUNIT

RES = TOSDATA(T0, T1, "5.25")
Call CHECK_EQUAL( RES, "(1 eq 1)") From AXUNIT

RES = TOSDATA(T0, T1, "0")
Call CHECK_EQUAL( RES, "(1 eq 0)") From AXUNIT

RES = TOSDATA(T0, T1, "0.00")
Call CHECK_EQUAL( RES, "(1 eq 0)") From AXUNIT

RES = TOSDATA(T0, T1, "TOTO = 6 and 5=1 ")
Call CHECK_EQUAL( RES, "(1 eq 0)") From AXUNIT

RES = TOSDATA(T0, T1, "TOTO = 6 and 5=5 ")
Call CHECK_EQUAL( RES, "(TOTO eq 6)") From AXUNIT

RES = TOSDATA(T0, T1, "TOTO = 6 or 5=1 ")
Call CHECK_EQUAL( RES, "(TOTO eq 6)") From AXUNIT

RES = TOSDATA(T0, T1, "TOTO = 6 or 5=5 ")
Call CHECK_EQUAL( RES, "(1 eq 1)") From AXUNIT

RES = TOSDATA(T0, T1, "TOTO = 6 or 5<6 ")
Call CHECK_EQUAL( RES, "(1 eq 1)") From AXUNIT

RES = TOSDATA(T0, T1, "TOTO = 6 or 5>6 ")
Call CHECK_EQUAL( RES, "(TOTO eq 6)") From AXUNIT


End

Subprog TEST_MISC( )
Local Char T0(20)(1..)
Local Char T1(20)(1..)

T0(1) = "CHP0" : T1(1) = "CNV0"
T0(2) = "CHP1" : T1(2) = "CNV1"
T0(3) = "CHP2" : T1(3) = "CNV2"
T0(4) = "CHP3" : T1(4) = "CNV3"
T0(5) = "CHP4" : T1(5) = "CNV4"
T0(6) = "CHP5" : T1(6) = "CNV5"

RES = TOSDATA(T0, T1, "(CHP0 = 5 and CHP1 = 'STR') or (CHP2 = 55.3 and pat(CHP3, 'M*' ) > 0)")
Call CHECK_EQUAL( RES, '(((CNV0 eq 5) and (CNV1 eq "STR")) or ((CNV2 eq 55.3) and (CNV3 like "M%")))') From AXUNIT


RES = TOSDATA(T0, T1, "(CHP0 = 5 and CHP1 = 'STR') or (CHP2 = [02/06/2007] and pat(CHP3, 'M*' ) >0 and find(CHP4, 8,9,10) > 0)")
Call CHECK_EQUAL( RES, '(((CNV0 eq 5) and (CNV1 eq "STR")) or (((CNV2 eq @2007-06-02@) and (CNV3 like "M%")) and (CNV4 in (8, 9, 10))))') From AXUNIT
End

OPERAT
Call CHECK_EQUAL( errn, 168) From AXUNIT
Resume
