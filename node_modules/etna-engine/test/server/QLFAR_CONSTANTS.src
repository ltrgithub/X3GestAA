Local Clbfile TOTO
TOTO =  func TESTSUITE()
Call FERME_TRACE From LECFIC
GTRACE = "QLFAR_CONSTANTS_"+GUSER
Call LEC_TRACE From LECFIC

End

# ---------- TC_SUITE uni function       -------------------------
# ------------------------------------------------------------------

Funprog TESTSUITE()
    Call ADD_TESTCASE("TC_INTEGER", "Integer contants", 20) From AXUNIT
End func AXUNIT.RUN_TESTSUITE("Constants", "Constants")

# -----------------------TC_LOCALL_INTEGER ---------------------------------
# #####################################################################

Subprog TC_INTEGER( )
Local Integer A
[L]A =[V]CST_AOK
Call CHECK_EQUAL([V]CST_AOK,0 ) From AXUNIT
Call CHECK_EQUAL([L]A,0 ) From AXUNIT

[L]A =[V]CST_ASUCCESS
Call CHECK_EQUAL([V]CST_ASUCCESS,1 ) From AXUNIT
Call CHECK_EQUAL([L]A,1 ) From AXUNIT

[L]A =[V]CST_AINFO
Call CHECK_EQUAL([V]CST_AINFO,2 ) From AXUNIT
Call CHECK_EQUAL([L]A,2 ) From AXUNIT

[L]A =[V]CST_AWARNING
Call CHECK_EQUAL([V]CST_AWARNING,3 ) From AXUNIT
Call CHECK_EQUAL([L]A,3 ) From AXUNIT

[L]A =[V]CST_AERROR
Call CHECK_EQUAL([V]CST_AERROR,4 ) From AXUNIT
Call CHECK_EQUAL([L]A,4 ) From AXUNIT

[L]A =[V]CST_AFATAL
Call CHECK_EQUAL([V]CST_AFATAL,5 ) From AXUNIT
Call CHECK_EQUAL([L]A,5 ) From AXUNIT

[L]A =[V]CST_AFALSE
Call CHECK_EQUAL( [V]CST_AFALSE , 0) From AXUNIT
Call CHECK_EQUAL( [L]A , 0) From AXUNIT

[L]A =[V]CST_ATRUE
Call CHECK_EQUAL( [V]CST_ATRUE  ,1) From AXUNIT
Call CHECK_EQUAL( [L]A  ,1) From AXUNIT

[L]A =[V]CST_ANO
Call CHECK_EQUAL( [V]CST_ANO ,1) From AXUNIT
Call CHECK_EQUAL( [L]A  ,1) From AXUNIT

[L]A =[V]CST_AYES
Call CHECK_EQUAL([V]CST_AYES , 2) From AXUNIT
Call CHECK_EQUAL( [L]A  ,2) From AXUNIT
End
