"use strict";
QUnit.module(module.id);

var bcd = require("etna-engine/lib/runtime/bcd");

function roundtrip(from, to, isZero) {
	strictEqual(bcd.toString(bcd.fromString(from)), to == null ? from : to)
	if (!isZero) strictEqual(bcd.toString(bcd.fromString('-' + from)), '-' + (to == null ? from : to));
}
test('string roundtrip', 44, function() {
	// note: we lose one digit of precision when scale is odd because we track by pairs of digits rather than by digits.
	roundtrip('', '0', true);
	roundtrip('0', '0', true);
	roundtrip('1');
	roundtrip('10');
	roundtrip('100');
	roundtrip('1000');
	roundtrip('1000.1');
	roundtrip('1000.01');
	roundtrip('1000.001');
	roundtrip('12345678901234567890123456789012');
	roundtrip('12345678901234567890.123456789012');
	roundtrip('123456789012345678901.23456789012', '123456789012345678901.2345678901'); // odd scale
	roundtrip('10000000000000000000000000000000');
	roundtrip('99999999999999999999999999999999');
	roundtrip('0.1');
	roundtrip('0.01');
	roundtrip('0.001');
	roundtrip('0.12345678901234567890123456789012');
	roundtrip('0.99999999999999999999999999999999');
	roundtrip('0.012345678901234567890123456789012', '0.01234567890123456789012345678901'); // odd scale
	roundtrip('0.0012345678901234567890123456789012');
	roundtrip('0.10000000000000000000000000000009', '0.10000000000000000000000000000009');
	roundtrip('0.100000000000000000000000000000009', '0.1'); // parse does not round but truncates instead!
});