#<AdxTL>@(#)3.0.0.0 $Revision$
Call OUVRE_TRACE("QLFAR_ARRAY1") From LECFIC
Call TESTSUITE()

Call FERME_TRACE From LECFIC
GTRACE = "QLFAR_ARRAY1_"+GUSER
Call LEC_TRACE From LECFIC
End

Funprog TESTSUITE_()
Callmet GACTX.ACTX_SET_LANISO("fr-FR")

Call TESTSUITE_START("ARRAY1", "ARRAY1") From AXUNIT

NBTEST=29
Call ADD_TESTCASE("TC_INTEGER0","TC_INTEGER0"-"Integer array(0..)",NBTEST) From AXUNIT

Local Clbfile  SUITE_RESULT
SUITE_RESULT = func AXUNIT.RUN_TESTSUITE("ARRAY1", "ARRAY1")
End SUITE_RESULT


Funprog TESTSUITE()
Callmet GACTX.ACTX_SET_LANISO("fr-FR")

Call TESTSUITE_START("ARRAY1", "ARRAY1") From AXUNIT

EX=0
Onerrgo ERROR

NBTEST=65
Call ADD_TESTCASE("TC_INTEGER0_5","TC_INTEGER0_5"-"Integer array(0..5)",NBTEST) From AXUNIT
Call ADD_TESTCASE("TC_INTEGER0","TC_INTEGER0"-"Integer array(0..)",NBTEST+1) From AXUNIT
Call ADD_TESTCASE("TC_INTEGER1_6","TC_INTEGER1_6"-"Integer array(1..6)",NBTEST+2) From AXUNIT
Call ADD_TESTCASE("TC_INTEGER1","TC_INTEGER1"-"Integer array(1..)",NBTEST+1) From AXUNIT
Call ADD_TESTCASE("TC_INTEGER6","TC_INTEGER6"-"Integer array(6)",NBTEST) From AXUNIT

Call ADD_TESTCASE("TC_SHORTINT0_5","TC_SHORTINT0_5"-"Shortint array(0..5)",NBTEST) From AXUNIT
Call ADD_TESTCASE("TC_SHORTINT0","TC_SHORTINT0"-"Shortint array(0..)",NBTEST+1) From AXUNIT
Call ADD_TESTCASE("TC_SHORTINT1_6","TC_SHORTINT1_6"-"Shortint array(1..6)",NBTEST+2) From AXUNIT
Call ADD_TESTCASE("TC_SHORTINT1","TC_SHORTINT1"-"Shortint array(1..)",NBTEST+1) From AXUNIT
Call ADD_TESTCASE("TC_SHORTINT6","TC_SHORTINT6"-"Shortint array(6)",NBTEST) From AXUNIT

Call ADD_TESTCASE("TC_TINYINT0_5","TC_TINYINT0_5"-"Tinyint array(0..5)",NBTEST) From AXUNIT
Call ADD_TESTCASE("TC_TINYINT0","TC_TINYINT0"-"Tinyint array(0..)",NBTEST+1) From AXUNIT
Call ADD_TESTCASE("TC_TINYINT1_6","TC_TINYINT1_6"-"Tinyint array(1..6)",NBTEST+2) From AXUNIT
Call ADD_TESTCASE("TC_TINYINT1","TC_TINYINT1"-"Tinyint array(1..)",NBTEST+1) From AXUNIT
Call ADD_TESTCASE("TC_TINYINT6","TC_TINYINT6"-"Tinyint array(6)",NBTEST) From AXUNIT

Call ADD_TESTCASE("TC_DECIMAL0_5","TC_DECIMAL0_5"-"Decimal array(0..5)",NBTEST) From AXUNIT
Call ADD_TESTCASE("TC_DECIMAL0","TC_DECIMAL0"-"Decimal array(0..)",NBTEST+1) From AXUNIT
Call ADD_TESTCASE("TC_DECIMAL1_6","TC_DECIMAL1_6"-"Decimal array(1..6)",NBTEST+2) From AXUNIT
Call ADD_TESTCASE("TC_DECIMAL1","TC_DECIMAL1"-"Decimal array(1..)",NBTEST+1) From AXUNIT
Call ADD_TESTCASE("TC_DECIMAL6","TC_DECIMAL6"-"Decimal array(6)",NBTEST) From AXUNIT

NBTEST=24
Call ADD_TESTCASE("TC_DATE0_5","TC_DATE0_5"-"Date array(0..5)",NBTEST) From AXUNIT
Call ADD_TESTCASE("TC_DATE0","TC_DATE0"-"Date array(0..)",NBTEST) From AXUNIT
Call ADD_TESTCASE("TC_DATE1_6","TC_DATE1_6"-"Date array(1..6)",NBTEST+2) From AXUNIT
Call ADD_TESTCASE("TC_DATE1","TC_DATE1"-"Date array(1..)",NBTEST) From AXUNIT
Call ADD_TESTCASE("TC_DATE6","TC_DATE6"-"Date array(6)",NBTEST) From AXUNIT

Local Clbfile  SUITE_RESULT
SUITE_RESULT = func AXUNIT.RUN_TESTSUITE("ARRAY1", "ARRAY1")
End SUITE_RESULT

$ERROR
Call CHECK_EQUAL(errn, EX)
EX = 0
Resume

Subprog CHECK_EVAL(STR, RESULT)
Call CHECK_EQUAL(evalue(STR), RESULT)
End

Subprog CHECK_EQUAL(GOT, EXPECT)
Call CHECK_EQUAL(GOT, EXPECT) From AXUNIT
End


#####################################################

Subprog TC_INTEGER0
WCAS="Integer"
Gosub CAS0
End
Subprog TC_SHORTINT0
WCAS="Shortint"
Gosub CAS0
End
Subprog TC_TINYINT0
WCAS="Tinyint"
Gosub CAS0
End
Subprog TC_DECIMAL0
WCAS="Decimal"
Gosub CAS0
End

$DEF_NUMBERS
I=BASE
AI(I) =  3 : I+= 1
AI(I) =  5 : I+= 1
AI(I) =  2 : I+= 1
AI(I) =  7 : I+= 1
AI(I) =  9 : I+= 1
AI(I) =  8 : I+= 1
NBELT=6
Return

$CHECK_NUMBERS
#Check all values
I=BASE
Call CHECK_EQUAL(AI(I), 3) : I+= 1
Call CHECK_EQUAL(AI(I), 5) : I+= 1
Call CHECK_EQUAL(AI(I), 2) : I+= 1
Call CHECK_EQUAL(AI(I), 7) : I+= 1
Call CHECK_EQUAL(AI(I), 9) : I+= 1
Call CHECK_EQUAL(AI(I), 8) : I+= 1
Return

$CHECK_SORT_NUMBERS
#Check all values after sort
I=BASE
Call CHECK_EQUAL(AI(I), 2) : I+= 1
Call CHECK_EQUAL(AI(I), 3) : I+= 1
Call CHECK_EQUAL(AI(I), 5) : I+= 1
Call CHECK_EQUAL(AI(I), 7) : I+= 1
Call CHECK_EQUAL(AI(I), 8) : I+= 1
Call CHECK_EQUAL(AI(I), 9) : I+= 1
Return

$CAS0
If WCAS="Integer"
Local Integer AI(0..)
Elsif WCAS="Shortint"
Local Shortint AI(0..)
Elsif WCAS="Tinyint"
Local Tinyint AI(0..)
Elsif WCAS="Decimal"
Local Decimal AI(0..)
Endif
Local Integer NBELT,BASE,I : NBELT=6 :  BASE=0
Call CHECK_EQUAL(maxtab(AI), BASE)
Gosub DEF_NUMBERS
Call CHECK_EQUAL(dim(AI),32767)
Call CHECK_EQUAL(maxtab(AI), 5)
Call CHECK_EQUAL(min(AI), 2)
Call CHECK_EQUAL(max(AI), 9)
Call CHECK_EQUAL(find(5,AI), 2)
Call CHECK_EQUAL(find(4,AI), 0)
#Check all values
Gosub CHECK_NUMBERS
#
If pat(ver$(0),"etna*")<=0
Local Integer EX : EX=69
Onerrgo ERROR
Else
Call CHECK_EQUAL("Error 69 not check in ETNA", "Error 69 not check in ETNA")
Endif
#  Error(69) - Mauvais nombre de paramÃ¨tres
Sorta AI
If pat(ver$(0),"etna*")<=0
#Check all values after sort (not happened)
#Check all values
Gosub CHECK_NUMBERS
Else
#Check all values after sort
Gosub CHECK_SORT_NUMBERS
Endif
#
Gosub DEF_NUMBERS
#Check all values
Gosub CHECK_NUMBERS
#
Sorta NBELT AI
#Check all values after sort
Gosub CHECK_SORT_NUMBERS
#
Call CHECK_EQUAL(find(2,AI), 1)
Call CHECK_EQUAL(find(7,AI), 4)
Dela 2,1 AI : #delete 5
Call CHECK_EQUAL(find(7,AI), 3)
Call CHECK_EQUAL(dim(AI),32767)
Call CHECK_EQUAL(maxtab(AI), 5)
Insa 2,1 AI
AI(2)=4
Call CHECK_EQUAL(find(7,AI), 4)
Call CHECK_EQUAL(find(4,AI), 3)
Call CHECK_EQUAL(dim(AI),32767)
Call CHECK_EQUAL(maxtab(AI), 6)
Insa 2,2 AI
AI(2)=98
AI(3)=99
Call CHECK_EQUAL(find(7,AI), 6)
Call CHECK_EQUAL(find(4,AI), 5)
Call CHECK_EQUAL(dim(AI),32767)
Call CHECK_EQUAL(maxtab(AI), 8)
Call CHECK_EQUAL(find(99,AI), 4)
Dela 2,3 AI
Call CHECK_EQUAL(find(7,AI), 3)
Call CHECK_EQUAL(dim(AI),32767)
Call CHECK_EQUAL(maxtab(AI), 8)
#STAT
Call CHECK_EQUAL(sum(AI), 29)
Call CHECK_EQUAL(max(AI), 9)
Call CHECK_EQUAL(min(AI), 0)
Call CHECK_EQUAL(avg(AI), 3.222222222222222222222222222222)
Call CHECK_EQUAL(prd(AI), 0)
Call CHECK_EQUAL(uni(AI), 7)
Call CHECK_EQUAL(var(AI), 12.617283950617283950617283950622)
#STAT
Call CHECK_EQUAL(AI(2), 7)
Call CHECK_EQUAL(AI(3), 8)
Call CHECK_EQUAL(AI(4), 9)
Call CHECK_EQUAL(sum(AI(2..4)), 24)
Call CHECK_EQUAL(max(AI(2..4)), 9)
Call CHECK_EQUAL(min(AI(2..4)), 7)
Call CHECK_EQUAL(avg(AI(2..4)), 8)
Call CHECK_EQUAL(prd(AI(2..4)), 504)
Call CHECK_EQUAL(uni(AI(2..4)), 0)
Call CHECK_EQUAL(var(AI(2..4)), 2/3)
Return

Subprog TC_INTEGER0_5
WCAS="Integer"
Gosub CAS0_5
End
Subprog TC_SHORTINT0_5
WCAS="Shortint"
Gosub CAS0_5
End
Subprog TC_TINYINT0_5
WCAS="Tinyint"
Gosub CAS0_5
End
Subprog TC_DECIMAL0_5
WCAS="Decimal"
Gosub CAS0_5
End

$CAS0_5
If WCAS="Integer"
Local Integer AI(0..5)
Elsif WCAS="Shortint"
Local Shortint AI(0..5)
Elsif WCAS="Tinyint"
Local Tinyint AI(0..5)
Elsif WCAS="Decimal"
Local Decimal AI(0..5)
Endif
Local Integer NBELT,BASE,I : NBELT=6 :  BASE=0
Call CHECK_EQUAL(maxtab(AI), NBELT)
Gosub DEF_NUMBERS
Call CHECK_EQUAL(dim(AI), 6)
Call CHECK_EQUAL(maxtab(AI), 6)
Call CHECK_EQUAL(min(AI), 2)
Call CHECK_EQUAL(max(AI), 9)
Call CHECK_EQUAL(find(5,AI), 2)
Call CHECK_EQUAL(find(4,AI), 0)
#Check all values
Gosub CHECK_NUMBERS
#
Sorta NBELT AI
#Check all values after sort
Gosub CHECK_SORT_NUMBERS
#
Gosub DEF_NUMBERS
#Check all values
Gosub CHECK_NUMBERS
#
Sorta AI
#Check all values after sort
Gosub CHECK_SORT_NUMBERS
#
Call CHECK_EQUAL(find(2,AI), 1)
Call CHECK_EQUAL(find(7,AI), 4)
Dela 2,1 AI : #delete 5
Call CHECK_EQUAL(dim(AI), 6)
Call CHECK_EQUAL(maxtab(AI), 6)
Call CHECK_EQUAL(find(7,AI), 3)
Insa 2,1 AI
AI(2)=4
Call CHECK_EQUAL(find(7,AI), 4)
Call CHECK_EQUAL(find(4,AI), 3)
Call CHECK_EQUAL(dim(AI), 6)
Call CHECK_EQUAL(maxtab(AI), 6)
Insa 2,2 AI
AI(2)=98
AI(3)=99
Call CHECK_EQUAL(find(7,AI), 6)
Call CHECK_EQUAL(find(4,AI), 5)
Call CHECK_EQUAL(dim(AI),6)
Call CHECK_EQUAL(maxtab(AI), 6)
Call CHECK_EQUAL(find(99,AI), 4)
Dela 2,3 AI
Call CHECK_EQUAL(dim(AI), 6)
Call CHECK_EQUAL(maxtab(AI), 6)
Call CHECK_EQUAL(find(7,AI), 3)
#STAT
Call CHECK_EQUAL(sum(AI), 12)
Call CHECK_EQUAL(max(AI), 7)
Call CHECK_EQUAL(min(AI), 0)
Call CHECK_EQUAL(avg(AI), 2)
Call CHECK_EQUAL(prd(AI), 0)
Call CHECK_EQUAL(uni(AI), 5)
Call CHECK_EQUAL(var(AI), 6.333333333333333333333333333333)
#STAT
For I=0 To 5
 If AI(I)=0 : AI(I)=I : Endif
Next I
Call CHECK_EQUAL(AI(2), 7)
Call CHECK_EQUAL(AI(3), 3)
Call CHECK_EQUAL(AI(4), 4)
Call CHECK_EQUAL(sum(AI(2..4)), 14)
Call CHECK_EQUAL(max(AI(2..4)), 7)
Call CHECK_EQUAL(min(AI(2..4)), 3)
Call CHECK_EQUAL(avg(AI(2..4)),4.666666666666666666666666666667)
Call CHECK_EQUAL(prd(AI(2..4)), 84)
Call CHECK_EQUAL(uni(AI(2..4)), 0)
Call CHECK_EQUAL(var(AI(2..4)), 2.888888888888888888888888888889)
Return

Subprog TC_INTEGER6
WCAS="Integer"
Gosub CAS6
End
Subprog TC_SHORTINT6
WCAS="Shortint"
Gosub CAS6
End
Subprog TC_TINYINT6
WCAS="Tinyint"
Gosub CAS6
End
Subprog TC_DECIMAL6
WCAS="Decimal"
Gosub CAS6
End

$CAS6
If WCAS="Integer"
Local Integer AI(6)
Elsif WCAS="Shortint"
Local Shortint AI(6)
Elsif WCAS="Tinyint"
Local Tinyint AI(6)
Elsif WCAS="Decimal"
Local Decimal AI(6)
Endif
Local Integer NBELT,BASE,I : NBELT=6 :  BASE=0
Call CHECK_EQUAL(maxtab(AI), NBELT)
Gosub DEF_NUMBERS
Call CHECK_EQUAL(dim(AI), 6)
Call CHECK_EQUAL(maxtab(AI), 6)
Call CHECK_EQUAL(min(AI), 2)
Call CHECK_EQUAL(max(AI), 9)
Call CHECK_EQUAL(find(5,AI), 2)
Call CHECK_EQUAL(find(4,AI), 0)
#Check all values
Gosub CHECK_NUMBERS
#
Sorta NBELT AI
#Check all values after sort
Gosub CHECK_SORT_NUMBERS
#
Gosub DEF_NUMBERS
#Check all values
Gosub CHECK_NUMBERS
#
Sorta AI
#Check all values after sort
Gosub CHECK_SORT_NUMBERS
#
Call CHECK_EQUAL(find(2,AI), 1)
Call CHECK_EQUAL(find(7,AI), 4)
Dela 2,1 AI : #delete 5
Call CHECK_EQUAL(dim(AI), 6)
Call CHECK_EQUAL(maxtab(AI), 6)
Call CHECK_EQUAL(find(7,AI), 3)
Insa 2,1 AI
AI(2)=4
Call CHECK_EQUAL(find(7,AI), 4)
Call CHECK_EQUAL(find(4,AI), 3)
Call CHECK_EQUAL(dim(AI), 6)
Call CHECK_EQUAL(maxtab(AI), 6)
Insa 2,2 AI
AI(2)=98
AI(3)=99
Call CHECK_EQUAL(find(7,AI), 6)
Call CHECK_EQUAL(find(4,AI), 5)
Call CHECK_EQUAL(dim(AI),6)
Call CHECK_EQUAL(maxtab(AI), 6)
Call CHECK_EQUAL(find(99,AI), 4)
Dela 2,3 AI
Call CHECK_EQUAL(dim(AI), 6)
Call CHECK_EQUAL(maxtab(AI), 6)
Call CHECK_EQUAL(find(7,AI), 3)
#STAT
Call CHECK_EQUAL(sum(AI), 12)
Call CHECK_EQUAL(max(AI), 7)
Call CHECK_EQUAL(min(AI), 0)
Call CHECK_EQUAL(avg(AI), 2)
Call CHECK_EQUAL(prd(AI), 0)
Call CHECK_EQUAL(uni(AI), 5)
Call CHECK_EQUAL(var(AI), 6.333333333333333333333333333333)
#STAT
For I=0 To 5
 If AI(I)=0 : AI(I)=I : Endif
Next I
Call CHECK_EQUAL(AI(2), 7)
Call CHECK_EQUAL(AI(3), 3)
Call CHECK_EQUAL(AI(4), 4)
Call CHECK_EQUAL(sum(AI(2..4)), 14)
Call CHECK_EQUAL(max(AI(2..4)), 7)
Call CHECK_EQUAL(min(AI(2..4)), 3)
Call CHECK_EQUAL(avg(AI(2..4)),  4.666666666666666666666666666667)
Call CHECK_EQUAL(prd(AI(2..4)), 84)
Call CHECK_EQUAL(uni(AI(2..4)), 0)
Call CHECK_EQUAL(var(AI(2..4)), 2.888888888888888888888888888889)
Return

Subprog TC_INTEGER1
WCAS="Integer"
Gosub CAS1
End
Subprog TC_SHORTINT1
WCAS="Shortint"
Gosub CAS1
End
Subprog TC_TINYINT1
WCAS="Tinyint"
Gosub CAS1
End
Subprog TC_DECIMAL1
WCAS="Decimal"
Gosub CAS1
End

$CAS1
If WCAS="Integer"
Local Integer AI(1..)
Elsif WCAS="Shortint"
Local Shortint AI(1..)
Elsif WCAS="Tinyint"
Local Tinyint AI(1..)
Elsif WCAS="Decimal"
Local Decimal AI(1..)
Endif
Local Integer NBELT,BASE,I : NBELT=6 :  BASE=1
Call CHECK_EQUAL(maxtab(AI), 0)
Gosub DEF_NUMBERS
Call CHECK_EQUAL(dim(AI),32767)
Call CHECK_EQUAL(maxtab(AI), 6)
Call CHECK_EQUAL(min(AI), 2)
Call CHECK_EQUAL(max(AI), 9)
Call CHECK_EQUAL(find(5,AI), 2)
Call CHECK_EQUAL(find(4,AI), 0)
#Check all values
Gosub CHECK_NUMBERS
#
If pat(ver$(0),"etna*")<=0
Local Integer EX : EX=69
Onerrgo ERROR
Else
Call CHECK_EQUAL("Error 69 not check in ETNA", "Error 69 not check in ETNA")
Endif
#  Error(69) - Mauvais nombre de paramÃ¨tres
Sorta AI
If pat(ver$(0),"etna*")<=0
#Check all values after sort (not happened)
#Check all values
Gosub CHECK_NUMBERS
Else
#Check all values after sort
Gosub CHECK_SORT_NUMBERS
Endif
#
Gosub DEF_NUMBERS
#Check all values
Gosub CHECK_NUMBERS
#
Sorta NBELT AI
#Check all values after sort
Gosub CHECK_SORT_NUMBERS
#
Call CHECK_EQUAL(find(2,AI), 1)
Call CHECK_EQUAL(find(7,AI), 4)
Dela 3,1 AI : #delete 5
Call CHECK_EQUAL(find(7,AI), 3)
Call CHECK_EQUAL(dim(AI),32767)
Call CHECK_EQUAL(maxtab(AI), 6)
Insa 3,1 AI
AI(3)=4
Call CHECK_EQUAL(find(7,AI), 4)
Call CHECK_EQUAL(find(4,AI), 3)
Call CHECK_EQUAL(dim(AI),32767)
Call CHECK_EQUAL(maxtab(AI), 7)
Insa 3,2 AI
AI(3)=98
AI(4)=99
Call CHECK_EQUAL(find(7,AI), 6)
Call CHECK_EQUAL(find(4,AI), 5)
Call CHECK_EQUAL(dim(AI),32767)
Call CHECK_EQUAL(maxtab(AI), 9)
Call CHECK_EQUAL(find(99,AI), 4)
Dela 3,3 AI
Call CHECK_EQUAL(find(7,AI), 3)
Call CHECK_EQUAL(dim(AI),32767)
Call CHECK_EQUAL(maxtab(AI), 9)
#STAT
Call CHECK_EQUAL(sum(AI), 29)
Call CHECK_EQUAL(max(AI), 9)
Call CHECK_EQUAL(min(AI), 0)
Call CHECK_EQUAL(avg(AI), 3.222222222222222222222222222222)
Call CHECK_EQUAL(prd(AI), 0)
Call CHECK_EQUAL(uni(AI), 7)
Call CHECK_EQUAL(var(AI), 12.617283950617283950617283950622)
#STAT
Call CHECK_EQUAL(AI(2), 3)
Call CHECK_EQUAL(AI(3), 7)
Call CHECK_EQUAL(AI(4), 8)
Call CHECK_EQUAL(sum(AI(2..4)), 18)
Call CHECK_EQUAL(max(AI(2..4)), 8)
Call CHECK_EQUAL(min(AI(2..4)), 3)
Call CHECK_EQUAL(avg(AI(2..4)), 6)
Call CHECK_EQUAL(prd(AI(2..4)), 168)
Call CHECK_EQUAL(uni(AI(2..4)), 0)
Call CHECK_EQUAL(var(AI(2..4)),  4.666666666666666666666666666667)
Return

Subprog TC_INTEGER1_6
WCAS="Integer"
Gosub CAS1_6
End
Subprog TC_SHORTINT1_6
WCAS="Shortint"
Gosub CAS1_6
End
Subprog TC_TINYINT1_6
WCAS="Tinyint"
Gosub CAS1_6
End
Subprog TC_DECIMAL1_6
WCAS="Decimal"
Gosub CAS1_6
End

$CAS1_6
If WCAS="Integer"
Local Integer AI(1..6)
Elsif WCAS="Shortint"
Local Shortint AI(1..6)
Elsif WCAS="Tinyint"
Local Tinyint AI(1..6)
Elsif WCAS="Decimal"
Local Decimal AI(1..6)
Endif
Local Integer NBELT,BASE,I : NBELT=6 :  BASE=1
Call CHECK_EQUAL(maxtab(AI), NBELT)
Gosub DEF_NUMBERS
Call CHECK_EQUAL(dim(AI), 6)
Call CHECK_EQUAL(maxtab(AI), 6)
Call CHECK_EQUAL(min(AI), 2)
Call CHECK_EQUAL(max(AI), 9)
Call CHECK_EQUAL(find(5,AI), 2)
Call CHECK_EQUAL(find(4,AI), 0)
#Check all values
Gosub CHECK_NUMBERS
#
Sorta NBELT AI
#Check all values after sort
Gosub CHECK_SORT_NUMBERS
#
Gosub DEF_NUMBERS
#Check all values
Gosub CHECK_NUMBERS
#
Sorta AI
#Check all values after sort
Gosub CHECK_SORT_NUMBERS
#
Call CHECK_EQUAL(find(2,AI), 1)
Call CHECK_EQUAL(find(7,AI), 4)
Dela 3,1 AI : #delete 5
Call CHECK_EQUAL(find(7,AI), 3)
Call CHECK_EQUAL(find(2,AI), 1)
Call CHECK_EQUAL(find(0,AI), 6)
Call CHECK_EQUAL(dim(AI), 6)
Call CHECK_EQUAL(maxtab(AI), 6)
Insa 3,1 AI
AI(3)=4
Call CHECK_EQUAL(find(7,AI), 4)
Call CHECK_EQUAL(find(4,AI), 3)
Call CHECK_EQUAL(dim(AI), 6)
Call CHECK_EQUAL(maxtab(AI), 6)
Insa 3,2 AI
AI(3)=98
AI(4)=99
Call CHECK_EQUAL(find(7,AI), 6)
Call CHECK_EQUAL(find(4,AI), 5)
Call CHECK_EQUAL(dim(AI), 6)
Call CHECK_EQUAL(maxtab(AI), 6)
Call CHECK_EQUAL(find(99,AI), 4)
Dela 3,3 AI
Call CHECK_EQUAL(find(7,AI), 3)
Call CHECK_EQUAL(dim(AI), 6)
Call CHECK_EQUAL(maxtab(AI), 6)
#STAT
Call CHECK_EQUAL(sum(AI), 12)
Call CHECK_EQUAL(max(AI), 7)
Call CHECK_EQUAL(min(AI), 0)
Call CHECK_EQUAL(avg(AI), 2)
Call CHECK_EQUAL(prd(AI), 0)
Call CHECK_EQUAL(uni(AI), 5)
Call CHECK_EQUAL(var(AI), 6.333333333333333333333333333333)
#STAT
Call CHECK_EQUAL(AI(1), 2)
Call CHECK_EQUAL(AI(2), 3)
Call CHECK_EQUAL(AI(3), 7)
Call CHECK_EQUAL(sum(AI(1..3)), 12)
Call CHECK_EQUAL(max(AI(1..3)), 7)
Call CHECK_EQUAL(min(AI(1..3)), 2)
Call CHECK_EQUAL(avg(AI(1..3)), 4)
Call CHECK_EQUAL(prd(AI(1..3)), 42)
Call CHECK_EQUAL(uni(AI(1..3)), 0)
Call CHECK_EQUAL(var(AI(1..3)),  4.666666666666666666666666666667)
Return

#####################################################
$DEF_DATE
I=BASE
AI(I) =  [03/06/2014]
I+= 1 : AI(I) =  [05/06/2014]
I+= 1 : AI(I) =  [02/06/2014]
I+= 1 : AI(I) =  [07/06/2014]
I+= 1 : AI(I) =  [09/06/2014]
I+= 1 : AI(I) =  [08/06/2014]
NBELT=6
Return

Subprog TC_DATE0
Local Date AI(0..)
Local Integer NBELT,BASE,I
Call CHECK_EQUAL(maxtab(AI), BASE)
Gosub DEF_DATE
Call CHECK_EQUAL(dim(AI),32767)
Call CHECK_EQUAL(maxtab(AI), 5)
Call CHECK_EQUAL(min(AI), [02/06/2014])
Call CHECK_EQUAL(max(AI), [09/06/2014])
Call CHECK_EQUAL(find([05/06/2014],AI), 2)
Call CHECK_EQUAL(find([04/06/2014],AI), 0)
Sorta NBELT AI
Call CHECK_EQUAL(find([02/06/2014],AI), 1)
Call CHECK_EQUAL(find([07/06/2014],AI), 4)
Dela 2,1 AI : #delete 5
Call CHECK_EQUAL(find([07/06/2014],AI), 3)
Call CHECK_EQUAL(dim(AI),32767)
Call CHECK_EQUAL(maxtab(AI), 5)
Insa 2,1 AI
AI(2) =  [04/06/2014]
Call CHECK_EQUAL(find([07/06/2014],AI), 4)
Call CHECK_EQUAL(find([04/06/2014],AI), 3)
Call CHECK_EQUAL(dim(AI),32767)
Call CHECK_EQUAL(maxtab(AI), 6)
Insa 2,2 AI
AI(2)=[28/06/2014]
AI(3)=[29/06/2014]
Call CHECK_EQUAL(find([07/06/2014],AI), 6)
Call CHECK_EQUAL(find([04/06/2014],AI), 5)
Call CHECK_EQUAL(dim(AI),32767)
Call CHECK_EQUAL(maxtab(AI), 8)
Call CHECK_EQUAL(find([29/06/2014],AI), 4)
Dela 2,3 AI
Call CHECK_EQUAL(find([07/06/2014],AI), 3)
Call CHECK_EQUAL(dim(AI),32767)
Call CHECK_EQUAL(maxtab(AI), 8)
End

Subprog TC_DATE0_5
Local Date AI(0..5)
Local Integer NBELT,BASE,I : NBELT=6 : BASE=0
Call CHECK_EQUAL(maxtab(AI), NBELT)
Gosub DEF_DATE
Call CHECK_EQUAL(dim(AI), 6)
Call CHECK_EQUAL(maxtab(AI), 6)
Call CHECK_EQUAL(min(AI), [02/06/2014])
Call CHECK_EQUAL(max(AI), [09/06/2014])
Call CHECK_EQUAL(find([05/06/2014],AI), 2)
Call CHECK_EQUAL(find([04/06/2014],AI), 0)
Sorta AI
Call CHECK_EQUAL(find([02/06/2014],AI), 1)
Call CHECK_EQUAL(find([07/06/2014],AI), 4)
Dela 2,1 AI : #delete 5
Call CHECK_EQUAL(dim(AI), 6)
Call CHECK_EQUAL(maxtab(AI), 6)
Call CHECK_EQUAL(find([07/06/2014],AI), 3)
Insa 2,1 AI
AI(2) =  [04/06/2014]
Call CHECK_EQUAL(find([07/06/2014],AI), 4)
Call CHECK_EQUAL(find([04/06/2014],AI), 3)
Call CHECK_EQUAL(dim(AI), 6)
Call CHECK_EQUAL(maxtab(AI), 6)
Insa 2,2 AI
AI(2)=[28/06/2014]
AI(3)=[29/06/2014]
Call CHECK_EQUAL(find([07/06/2014],AI), 6)
Call CHECK_EQUAL(find([04/06/2014],AI), 5)
Call CHECK_EQUAL(dim(AI),6)
Call CHECK_EQUAL(maxtab(AI), 6)
Call CHECK_EQUAL(find([29/06/2014],AI), 4)
Dela 2,3 AI
Call CHECK_EQUAL(dim(AI), 6)
Call CHECK_EQUAL(maxtab(AI), 6)
Call CHECK_EQUAL(find([07/06/2014],AI), 3)
End

Subprog TC_DATE6
Local Date AI(6)
Local Integer NBELT,BASE,I : NBELT=6 : BASE=0
Call CHECK_EQUAL(maxtab(AI), NBELT)
Gosub DEF_DATE
Call CHECK_EQUAL(dim(AI), 6)
Call CHECK_EQUAL(maxtab(AI), 6)
Call CHECK_EQUAL(min(AI), [02/06/2014])
Call CHECK_EQUAL(max(AI), [09/06/2014])
Call CHECK_EQUAL(find([05/06/2014],AI), 2)
Call CHECK_EQUAL(find([04/06/2014],AI), 0)
Sorta AI
Call CHECK_EQUAL(find([02/06/2014],AI), 1)
Call CHECK_EQUAL(find([07/06/2014],AI), 4)
Dela 2,1 AI : #delete 5
Call CHECK_EQUAL(dim(AI), 6)
Call CHECK_EQUAL(maxtab(AI), 6)
Call CHECK_EQUAL(find([07/06/2014],AI), 3)
Insa 2,1 AI
AI(2) =  [04/06/2014]
Call CHECK_EQUAL(find([07/06/2014],AI), 4)
Call CHECK_EQUAL(find([04/06/2014],AI), 3)
Call CHECK_EQUAL(dim(AI), 6)
Call CHECK_EQUAL(maxtab(AI), 6)
Insa 2,2 AI
AI(2)=[28/06/2014]
AI(3)=[29/06/2014]
Call CHECK_EQUAL(find([07/06/2014],AI), 6)
Call CHECK_EQUAL(find([04/06/2014],AI), 5)
Call CHECK_EQUAL(dim(AI),6)
Call CHECK_EQUAL(maxtab(AI), 6)
Call CHECK_EQUAL(find([29/06/2014],AI), 4)
Dela 2,3 AI
Call CHECK_EQUAL(dim(AI), 6)
Call CHECK_EQUAL(maxtab(AI), 6)
Call CHECK_EQUAL(find([07/06/2014],AI), 3)
End

Subprog TC_DATE1
Local Date AI(1..)
Local Integer NBELT,BASE,I : NBELT=6 :  BASE=1
Call CHECK_EQUAL(maxtab(AI), 0)
Gosub DEF_DATE
Call CHECK_EQUAL(dim(AI),32767)
Call CHECK_EQUAL(maxtab(AI), 6)
Call CHECK_EQUAL(min(AI), [02/06/2014])
Call CHECK_EQUAL(max(AI), [09/06/2014])
Call CHECK_EQUAL(find([05/06/2014],AI), 2)
Call CHECK_EQUAL(find([04/06/2014],AI), 0)
Sorta NBELT AI
Call CHECK_EQUAL(find([02/06/2014],AI), 1)
Call CHECK_EQUAL(find([07/06/2014],AI), 4)
Dela 3,1 AI : #delete 5
Call CHECK_EQUAL(find([07/06/2014],AI), 3)
Call CHECK_EQUAL(dim(AI),32767)
Call CHECK_EQUAL(maxtab(AI), 6)
Insa 3,1 AI
AI(3) =  [04/06/2014]
Call CHECK_EQUAL(find([07/06/2014],AI), 4)
Call CHECK_EQUAL(find([04/06/2014],AI), 3)
Call CHECK_EQUAL(dim(AI),32767)
Call CHECK_EQUAL(maxtab(AI), 7)
Insa 3,2 AI
AI(3)=[28/06/2014]
AI(4)=[29/06/2014]
Call CHECK_EQUAL(find([07/06/2014],AI), 6)
Call CHECK_EQUAL(find([04/06/2014],AI), 5)
Call CHECK_EQUAL(dim(AI),32767)
Call CHECK_EQUAL(maxtab(AI), 9)
Call CHECK_EQUAL(find([29/06/2014],AI), 4)
Dela 3,3 AI
Call CHECK_EQUAL(find([07/06/2014],AI), 3)
Call CHECK_EQUAL(dim(AI),32767)
Call CHECK_EQUAL(maxtab(AI), 9)
End

Subprog TC_DATE1_6
Local Date AI(1..6)
Local Integer NBELT,BASE,I : NBELT=6 :  BASE=1
Call CHECK_EQUAL(maxtab(AI), NBELT)
Gosub DEF_DATE
Call CHECK_EQUAL(dim(AI), 6)
Call CHECK_EQUAL(maxtab(AI), 6)
Call CHECK_EQUAL(min(AI), [02/06/2014])
Call CHECK_EQUAL(max(AI), [09/06/2014])
Call CHECK_EQUAL(find([05/06/2014],AI), 2)
Call CHECK_EQUAL(find([04/06/2014],AI), 0)
Sorta AI
Call CHECK_EQUAL(find([02/06/2014],AI), 1)
Call CHECK_EQUAL(find([07/06/2014],AI), 4)
Dela 3,1 AI : #delete 5
Call CHECK_EQUAL(find([07/06/2014],AI), 3)
Call CHECK_EQUAL(find([02/06/2014],AI), 1)
Call CHECK_EQUAL(find([00/00/00],AI), 6)
Call CHECK_EQUAL(dim(AI), 6)
Call CHECK_EQUAL(maxtab(AI), 6)
Insa 3,1 AI
AI(3) =  [04/06/2014]
Call CHECK_EQUAL(find([07/06/2014],AI), 4)
Call CHECK_EQUAL(find([04/06/2014],AI), 3)
Call CHECK_EQUAL(dim(AI), 6)
Call CHECK_EQUAL(maxtab(AI), 6)
Insa 3,2 AI
AI(3)=[28/06/2014]
AI(4)=[29/06/2014]
Call CHECK_EQUAL(find([07/06/2014],AI), 6)
Call CHECK_EQUAL(find([04/06/2014],AI), 5)
Call CHECK_EQUAL(dim(AI), 6)
Call CHECK_EQUAL(maxtab(AI), 6)
Call CHECK_EQUAL(find([29/06/2014],AI), 4)
Dela 3,3 AI
Call CHECK_EQUAL(find([07/06/2014],AI), 3)
Call CHECK_EQUAL(dim(AI), 6)
Call CHECK_EQUAL(maxtab(AI), 6)
End
