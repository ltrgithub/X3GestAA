#<AdxTL>@(#)0.0.0.0 $Revision$
Local Clbfile RESULT
RESULT = func TESTSUITE()

Call FERME_TRACE From LECFIC
GTRACE = "QLFAR_COMPILE_"+GUSER
Call LEC_TRACE From LECFIC

End

Funprog TESTSUITE()
Local Integer EX

Call SET_LOCALE("en-EN") From ASYRQLF
Call TESTSUITE_START("COMPILE", "Compile X3 script") From AXUNIT
Call ADD_TESTCASE("TC_QUOTE", "Quotes errors", 4) From AXUNIT
Call ADD_TESTCASE("TC_PARENS", "Parenthesis errors", 4) From AXUNIT
Call ADD_TESTCASE("TC_IF", "If errors", 4) From AXUNIT
Call ADD_TESTCASE("TC_CASE", "Case errors", 8) From AXUNIT
Call ADD_TESTCASE("TC_FOR", "For errors", 6) From AXUNIT
Call ADD_TESTCASE("TC_WHILE", "While errors", 4) From AXUNIT
Call ADD_TESTCASE("TC_UNTIL", "Until errors", 4) From AXUNIT
Call ADD_TESTCASE("TC_LABELS", "Label errors", 12) From AXUNIT
Call ADD_TESTCASE("TC_VARIABLES", "Variable errors", 8) From AXUNIT

Local Clbfile  SUITE_RESULT
SUITE_RESULT = func AXUNIT.RUN_TESTSUITE("COMPILE", "Compile X3 script")
End SUITE_RESULT

$ERROR
Local Char TT(255),TT1(255)
TT=num$(errn)-errmes$(errn)
TT1=num$(EX)-errmes$(EX)
Call CHECK_EQUAL(TT, TT1) From AXUNIT
EX = 0
Resume

Subprog TC_QUOTE
Local Char TT(255)
Local Integer EX
Onerrgo ERROR

TT="Missing end quote"
Call CHECK_EQUAL(TT,TT) From AXUNIT
EX=20
Call TEST From QLFAR_COMPILE_QUOTE1

TT="Mismatched quotes"
Call CHECK_EQUAL(TT,TT) From AXUNIT
EX=20
Call TEST From QLFAR_COMPILE_QUOTE2
Onerrgo
End

Subprog TC_PARENS
Local Char TT(255)
Local Integer EX
Onerrgo ERROR

Local Char TT(255)
TT="Missing parenthesis"
Call CHECK_EQUAL(TT,TT) From AXUNIT
EX=20
Call TEST From QLFAR_COMPILE_PARENS1

Local Char TT(255)
TT="Mismatched parenthesis"
Call CHECK_EQUAL(TT,TT) From AXUNIT
EX=20
Call TEST From QLFAR_COMPILE_PARENS2
Onerrgo
End

Subprog TC_IF
Local Char TT(255)
Local Integer EX
Onerrgo ERROR

TT="Missing endif"
Call CHECK_EQUAL(TT,TT) From AXUNIT
EX=20
Call TEST From QLFAR_COMPILE_IF1

TT="Missing If"
Call CHECK_EQUAL(TT,TT) From AXUNIT
EX=20
Call TEST From QLFAR_COMPILE_IF2
Onerrgo
End


Subprog TC_CASE
Local Char TT(255)
Local Integer EX
Onerrgo ERROR

TT="Missing endcase"
Call CHECK_EQUAL(TT,TT) From AXUNIT
EX=20
Call TEST From QLFAR_COMPILE_CASE1

TT="Missing case "
Call CHECK_EQUAL(TT,TT) From AXUNIT
EX=20
Call TEST From QLFAR_COMPILE_CASE2


TT="Missing case and endcase "
Call CHECK_EQUAL(TT,TT) From AXUNIT
EX=20
Call TEST From QLFAR_COMPILE_CASE3

TT="First line after case is a comment "
Call CHECK_EQUAL(TT,TT) From AXUNIT
EX=20
Call TEST From QLFAR_COMPILE_CASE4
Onerrgo
End



Subprog TC_LABELS
Local Char TT(255)
Local Integer EX
Onerrgo ERROR

TT="Missing goto label"
Call CHECK_EQUAL(TT,TT) From AXUNIT
EX=20
Call TEST From QLFAR_COMPILE_LABEL1

TT="Missing call label"
Call CHECK_EQUAL(TT,TT) From AXUNIT
EX=20
Call TEST From QLFAR_COMPILE_LABEL2


TT="Missing gosub label"
Call CHECK_EQUAL(TT,TT) From AXUNIT
EX=20
Call TEST From QLFAR_COMPILE_LABEL3


TT="Missing onerrgo label"
Call CHECK_EQUAL(TT,TT) From AXUNIT
EX=20
Call TEST From QLFAR_COMPILE_LABEL4

TT="Duplicate label"
Call CHECK_EQUAL(TT,TT) From AXUNIT
EX=20
Call TEST From QLFAR_COMPILE_LABEL5

TT="Duplicate label 2"
Call CHECK_EQUAL(TT,TT) From AXUNIT
EX=20
Call TEST From QLFAR_COMPILE_LABEL6
Onerrgo
End

Subprog TC_FOR
Local Char TT(255)
Local Integer EX
Onerrgo ERROR

TT="Missing next"
Call CHECK_EQUAL(TT,TT) From AXUNIT
EX=20
Call TEST From QLFAR_COMPILE_FOR1

TT="Missing for"
Call CHECK_EQUAL(TT,TT) From AXUNIT
EX=20
Call TEST From QLFAR_COMPILE_FOR2

TT="Missing iternation variable"
Call CHECK_EQUAL(TT,TT) From AXUNIT
EX=20
Call TEST From QLFAR_COMPILE_FOR3
Onerrgo
End

Subprog TC_WHILE
Local Char TT(255)
Local Integer EX
Onerrgo ERROR

TT="Missing wend"
Call CHECK_EQUAL(TT,TT) From AXUNIT
EX=20
Call TEST From QLFAR_COMPILE_WHILE1

TT="Missing while"
Call CHECK_EQUAL(TT,TT) From AXUNIT
EX=20
Call TEST From QLFAR_COMPILE_WHILE2

Onerrgo
End

Subprog TC_UNTIL
Local Char TT(255)
Local Integer EX
Onerrgo ERROR

TT="Missing until"
Call CHECK_EQUAL(TT,TT) From AXUNIT
EX=20
Call TEST From QLFAR_COMPILE_UNTIL1

TT="Missing repeat"
Call CHECK_EQUAL(TT,TT) From AXUNIT
EX=20
Call TEST From QLFAR_COMPILE_UNTIL2
Onerrgo
End

Subprog TC_VARIABLES
Local Char TT(255)
Local Integer EX
Onerrgo ERROR

# Waiting on answer from Eric on whether oversized variables should compile without error
#TT="Variable length too long until-max length 64 characters"
#Call CHECK_EQUAL(TT,TT) From AXUNIT
#EX=20
#Call TEST From QLFAR_COMPILE_VAR1

TT="Date in invalid format [yyyy/mm/dd]"
Call CHECK_EQUAL(TT,TT) From AXUNIT
EX=20
Call TEST From QLFAR_COMPILE_VAR2

TT="Valid Date format with invalid year"
Call CHECK_EQUAL(TT,TT) From AXUNIT
EX=20
Call TEST From QLFAR_COMPILE_VAR3

TT="Valid Date format with invalid year"
Call CHECK_EQUAL(TT,TT) From AXUNIT
EX=20
Call TEST From QLFAR_COMPILE_VAR4

TT="Valid Date format with invalid day"
Call CHECK_EQUAL(TT,TT) From AXUNIT
EX=20
Call TEST From QLFAR_COMPILE_VAR5
Onerrgo
End
