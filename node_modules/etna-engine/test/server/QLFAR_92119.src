#<AdxTL>@(#)0.0.0.0 $Revision$

Local Clbfile SUITE_RESULT
Local Char FIC(255)
SUITE_RESULT = func TESTSUITE()

Call FERME_TRACE From LECFIC
GTRACE = "QLFAR_92119_"+GUSER
Call LEC_TRACE From LECFIC




End

# ---------- TEST_SUITE NewIntance AllocGroup----------- -----------
# ------------------------------------------------------------------

Funprog TESTSUITE()
  Local Char RES(255)

  Call ADD_TESTCASE("TEST_NEW", "Test Newinstance Null/Not Null", 4) From AXUNIT
  Call ADD_TESTCASE("TEST_FREEGROUP", "Test FreeGroup", 3) From AXUNIT

  RES = func AXUNIT.RUN_TESTSUITE("Instances", "Common")
End RES

Subprog SETUP
  IRS =   adxirs
  adxirs = chr$(10)

  Call CREATE_TST( )
  adxmpr=adxmpr
  adxirs = IRS

End

Subprog TEARDOWN
 Call DELETE_TST( )
 adxmpr=adxmpr
End



# ########### FREE_NEW #######################
# ############################################

Subprog TEST_NEW( )
Local Instance RF0 Using ZXCELL
Local Instance RF1 Using ZXCELL
Local Instance RF2 Using ZXCELL
Local Instance RF3 Using ZXCELL

Local Integer M0,M1
Local Char ABV(20)

M0 = maxheap
RF0 = NewInstance [GABV], ZXCELL

RF1 = NewInstance  ZXCELL ALLOCGROUP RF0

Call CHECK_EQUAL( RF1.AllocGrp, "GABV" ) From AXUNIT

RF2 = NewInstance  ZXCELL ALLOCGROUP null
ABV =  RF2.AllocGrp

RF3 = NewInstance  ZXCELL ALLOCGROUP RF2
Call CHECK_EQUAL( RF3.AllocGrp, ABV )  From AXUNIT


FreeInstance  [GABV]
FreeInstance  =ABV

RF1 = NewInstance  ZXCELL ALLOCGROUP func GETNULL( )
RF2 = NewInstance  ZXCELL ALLOCGROUP func GETREF( )
ABV =  RF2.AllocGrp
RF3 = NewInstance  ZXCELL ALLOCGROUP evalue("RF2")
Call CHECK_EQUAL( RF3.AllocGrp, ABV )  From AXUNIT

FREEINSTANCE  RF1
FREEGROUP  RF2

M1 = maxheap

Call CHECK_EQUAL( M0, M1 ) From AXUNIT
End

# ########### FREE_GROUP #####################
# ############################################
Subprog TEST_FREEGROUP( )
Local Instance RF0 Using ZXCELL
Local Instance RF1 Using ZXCELL
Local Instance RF2 Using ZXCELL
Local Instance RF3 Using ZXCELL

Local Integer M0,M1
Local Char ABV(20)

M0 = maxheap

RF0 = NewInstance  ZXCELL ALLOCGROUP null
ABV = RF0.AllocGrp

RF1 = NewInstance  ZXCELL ALLOCGROUP RF0
Call CHECK_EQUAL( RF1.AllocGrp, ABV ) From AXUNIT
RF2 = NewInstance  ZXCELL ALLOCGROUP RF0
Call CHECK_EQUAL( RF2.AllocGrp, ABV ) From AXUNIT

FREEGROUP RF0

RF1 = NewInstance  ZXCELL ALLOCGROUP func GETNULL( )
RF2 = NewInstance  ZXCELL ALLOCGROUP func GETREF( )

FREEGROUP RF1
FREEGROUP evalue("RF2")

M1 = maxheap

Call CHECK_EQUAL( M0, M1 ) From AXUNIT

End

# CREATE_TST
# #########################################################
Subprog CREATE_TST
Local Integer I
Local Char STC(255)

STC = filpath("STC","ZXCELL","stc", nomap(0))
Openo STC Using [FST]
Wrseq "#<AdxTL>@(#)4.0.0.0 $Revision$" Using [FST]
Wrseq "Integer NO" Using [FST]
Wrseq "Char NAME(20)" Using [FST]
Wrseq "INSTANCE NXCELL Using ZXCELL" Using [FST]
Wrseq "" Using [FST]
Wrseq "%%" Using [FST]
Wrseq " " Using [FST]
Wrseq "METHOD CONSTRUCTOR( )" Using [FST]
Wrseq "" Using [FST]
Wrseq "End" Using [FST]
Wrseq "" Using [FST]
Openo Using [FST]

VV = "valstc "-nomap(0)-"ZXCELL"
System RS = VV
End

# DELETE_TST
# #########################################################
Subprog DELETE_TST
Local Char FIC(255)
Local Integer J

FIC = filpath("STC","ZXCELL","stc", nomap(0))
J = Delfile( FIC )
FIC = filpath("STC","ZXCELL","adx", nomap(0))
J = Delfile( FIC )
System FIC= "archive -d"-nomap(0)-"-o -e"-'"ZXCELL"'
End

# GET NULL
# #########################################################
Funprog GETNULL( )
End null

# GETREF
# #########################################################
Funprog GETREF( )
Local Instance RF5 Using ZXCELL
RF5 = NewInstance  ZXCELL ALLOCGROUP null
End RF5
