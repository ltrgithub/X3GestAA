#<AdxTL>@(#)5.0.0.0 $Revision$

Local Clbfile SUITE_RESULT
SUITE_RESULT = func TESTSUITE()
Call FERME_TRACE From LECFIC
GTRACE = "QLFAR_FREEZE_"+GUSER
Call LEC_TRACE From LECFIC

End

# ---------- TEST_SUITE freeze -----------
# ------------------------------------------------------------------

Funprog TESTSUITE()
  Local Char RES(255)
  Local Char OVF(255)

  Call ADD_TESTCASE("TEST_GROUP", "Classic FreeGroup", 4) From AXUNIT
  Call ADD_TESTCASE("TEST_FREEZE", "Classic FreezeInstance", 4) From AXUNIT

  RES = func AXUNIT.RUN_TESTSUITE("FreeInstance", "Common")
End RES

Subprog SETUP
  IRS =   adxirs
  adxirs = chr$(10)

  Call CREATE_TST( )
  adxmpr=adxmpr
  adxirs = IRS
End

Subprog TEARDOWN
 Call DELETE_TST( )
 adxmpr=adxmpr
End

# -----------------TEST_GROUP-----------------
Subprog TEST_GROUP( )

Local Instance RF0 Using ZXFREEZE
Local Instance RF1 Using ZXFREEZE
Local Integer HEAP0, HEAP1

HEAP0 = freeheap

RF0 = NewInstance ZXFREEZE AllocGroup null
RF1 = NewInstance ZXFREEZE AllocGroup RF0

FreeGroup RF1

HEAP1 = freeheap

Call CHECK_EQUAL( HEAP0, HEAP1 ) From AXUNIT

End

# -----------------TEST_FREEZE-----------------
Subprog TEST_FREEZE( )

Local Instance RF0 Using ZXFREEZE
Local Instance RF1 Using ZXFREEZE
Local Integer HEAP0, HEAP1

HEAP0 = freeheap

RF0 = NewInstance ZXFREEZE AllocGroup null
RF1 = NewInstance ZXFREEZE AllocGroup RF0

RF0.NAME = "TOTO"

FreezeInstance RF0

Onerrgo ERRCASE
FreeInstance RF0
Onerrgo

Call CHECK_EQUAL( RF0.NAME, "TOTO" ) From AXUNIT
Call CHECK_NOTEQUAL( HEAP0, HEAP1 ) From AXUNIT


FreeGroup RF0

Call CHECK_EQUAL( RF0.NAME, "TOTO" ) From AXUNIT
Call CHECK_NOTEQUAL( HEAP0, HEAP1 ) From AXUNIT

End



# CREATE_TST
# #########################################################
Subprog CREATE_TST
Local Integer I
Local Char STC(255)

STC = filpath("STC","ZXFREEZE","stc", nomap(0))
Openo STC Using [FST]
Wrseq "#<AdxTL>@(#)4.0.0.0 $Revision$" Using [FST]
Wrseq "Integer NO" Using [FST]
Wrseq "Char NAME(20)" Using [FST]
Wrseq "INSTANCE NXCELL Using ZXFREEZE" Using [FST]
Wrseq "" Using [FST]
Wrseq "%%" Using [FST]
Wrseq " " Using [FST]
Wrseq "METHOD CONSTRUCTOR( )" Using [FST]
Wrseq "" Using [FST]
Wrseq "End" Using [FST]
Wrseq "" Using [FST]
Openo Using [FST]

VV = "valstc "-nomap(0)-"ZXFREEZE"
System RS = VV
End

# DELETE_TST
# #########################################################
Subprog DELETE_TST
Local Char FIC(255)
Local Integer J

FIC = filpath("STC","ZXFREEZE","stc", nomap(0))
J = Delfile( FIC )
FIC = filpath("STC","ZXFREEZE","adx", nomap(0))
J = Delfile( FIC )
System FIC= "archive -d"-nomap(0)-"-o -e"-'"ZXFREEZE"'
End

$ERRCASE
Resume
