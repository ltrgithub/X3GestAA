#<AdxTL>@(#)8.0.0.0 $Revision$
TOTO = func TESTSUITE()
Infbox TOTO

End

# ---------- TEST_SUITE uni function       -------------------------
# ------------------------------------------------------------------

Funprog TESTSUITE()

    Call ADD_TESTCASE("TEST_WR_READ", "Test base", 15) From AXUNIT
    Call ADD_TESTCASE("TEST_WR_READ_NULL", "Test Null", 13) From AXUNIT
	Call ADD_TESTCASE("TEST_WR_READ_LOB", "Test lob", 1) From AXUNIT
    Call ADD_TESTCASE("TEST_WR_READ_WHER", "Test filter", 1) From AXUNIT    
	Call ADD_TESTCASE("TEST_BASIC_FOR", "Test For basic", 20) From AXUNIT
	Call ADD_TESTCASE("TEST_FOR_FUNC", "Test For with functions", 36) From AXUNIT
	Call ADD_TESTCASE("TEST_FOR_POSTEVA", "Test post evaluation", 2) From AXUNIT	
	Call ADD_TESTCASE("TEST_FOR_EVALUE", "Test For with evalue", 4) From AXUNIT
	Call ADD_TESTCASE("TEST_BASIC_LINK", "Test Link basic", 1) From AXUNIT
	Call ADD_TESTCASE("TEST_ORDER_BY", "Test order by key", 2) From AXUNIT


End func AXUNIT.RUN_TESTSUITE("Types", "Common")

# -----------------------TEST_WR_READ -------------------------------------
# #########################################################################

Subprog TEST_WR_READ( )
Local Integer I
dbgetna
Local File AQCDBTYPES [ABV]
Local File AQCITEML [ITM]

trbegin [ABV]
delete [ABV]
commit

[ABV]IDX = 201
[ABV]C5 = 15126
[ABV]A10 = "A2"
[ABV]A250 = "A121545"
#[ABV]DTM = [04/02/2015]
[ABV]L8 = 154654
[ABV]DCB9_2 = 124521.215112
[ABV]CREDATTIM = gdatetime$("2015-07-01T10:30:32Z")
[ABV]UPDDATTIM = gdatetime$("2015-07-01T10:30:32Z")
[ABV]CREUSR = "AQCOR"
[ABV]UPDUSR = "AQCOR"
[ABV]AUUID = touuid("288eadf8-43a6-4a15-8659-5330411430ea")

Trbegin [ABV]
Write [ABV]
Commit
Call CHECK_EQUAL( fstat, 0 ) From AXUNIT

Read [ABV]CODE=201
Call CHECK_EQUAL( fstat, 0 ) From AXUNIT

#Filter [ABV] Where [ABV]DCB9_2 = 124521.215112
#Read [ABV] First

#Call CHECK_EQUAL( fstat, 0 ) From AXUNIT

# test value.....
Call CHECK_EQUAL( [ABV]IDX, 201 ) From AXUNIT
Call CHECK_EQUAL( [ABV]C5, 15126 ) From AXUNIT
Call CHECK_EQUAL( [ABV]A10, "A2" ) From AXUNIT
Call CHECK_EQUAL( [ABV]A250, "A121545" ) From AXUNIT
#Call CHECK_EQUAL( [ABV]DTM, [04/02/2015] ) From AXUNIT
Call CHECK_EQUAL( [ABV]L8, 154654 ) From AXUNIT
Call CHECK_EQUAL( [ABV]DCB9_2, 124521.215112 ) From AXUNIT
Call CHECK_EQUAL( [ABV]CREDATTIM, gdatetime$("2015-07-01T10:30:32Z") ) From AXUNIT
Call CHECK_EQUAL( [ABV]UPDDATTIM, gdatetime$("2015-07-01T10:30:32Z") ) From AXUNIT
Call CHECK_EQUAL( [ABV]CREUSR, "AQCOR" ) From AXUNIT
Call CHECK_EQUAL( [ABV]UPDUSR, "AQCOR" ) From AXUNIT
Call CHECK_EQUAL( [ABV]AUUID, touuid("288eadf8-43a6-4a15-8659-5330411430ea") ) From AXUNIT

Read [ABV]CODE=202
Call CHECK_EQUAL( fstat, 5 ) From AXUNIT

[ABV]IDX = 202
Trbegin [ABV]
Write [ABV]
Commit
Call CHECK_EQUAL( fstat, 0 ) From AXUNIT
Close Local File [ABV]


#Read [ITM]AQCITML0="ART5"
#Call CHECK_EQUAL( fstat, 0 ) From AXUNIT
#[ITM]YITMREF = "ZART5"
#Trbegin [ITM]
#Write [ITM]
#Commit
#Call CHECK_EQUAL( fstat, 0 ) From AXUNIT

End

# -----------------------TEST_WR_READ_NULL---------------------------------
# #########################################################################


Subprog TEST_WR_READ_NULL( )
Local Integer I
Local File AQCDBTYPES [ABV]

trbegin [ABV]
delete [ABV]
commit

[ABV]IDX = 201

Trbegin [ABV]
Write [ABV]
Commit
Call CHECK_EQUAL( fstat, 0 ) From AXUNIT

Read [ABV]CODE=201
Call CHECK_EQUAL( fstat, 0 ) From AXUNIT

# test value.....
Call CHECK_EQUAL( [ABV]IDX, 201 ) From AXUNIT
Call CHECK_EQUAL( [ABV]C5, 0 ) From AXUNIT
Call CHECK_EQUAL( [ABV]A10, "" ) From AXUNIT
Call CHECK_EQUAL( [ABV]A250, "" ) From AXUNIT
#Call CHECK_EQUAL( [ABV]DTM, [04/02/2015] ) From AXUNIT
Call CHECK_EQUAL( [ABV]L8, 0 ) From AXUNIT
Call CHECK_EQUAL( [ABV]DCB9_2, 0 ) From AXUNIT
#Call CHECK_EQUAL( [ABV]CREDATTIM, gdatetime$("0000-00-00T00:00:00Z") ) From AXUNIT
#Call CHECK_EQUAL( [ABV]UPDDATTIM, gdatetime$("2015-07-01T10:30:32Z") ) From AXUNIT
Call CHECK_EQUAL( [ABV]CREUSR, "USER" ) From AXUNIT
Call CHECK_EQUAL( [ABV]UPDUSR, "USER" ) From AXUNIT
Call CHECK_EQUAL( [ABV]AUUID, touuid("00000000-0000-0000-0000-000000000000") ) From AXUNIT
									  
Read [ABV]CODE=202
Call CHECK_EQUAL( fstat, 5 ) From AXUNIT

[ABV]IDX = 202
Trbegin [ABV]
Write [ABV]
Commit
Call CHECK_EQUAL( fstat, 0 ) From AXUNIT
Close Local File [ABV]
End

# -----------------------TEST_WR_READ_LOB---------------------------------
# #########################################################################

Subprog TEST_WR_READ_LOB( )
Local File ABLOB[ABV]

Read [ABV]ABB0="PJ_AMK";"ZZK5";""
Call CHECK_EQUAL( fstat, 0 ) From AXUNIT

#Trbegin [ABV]
#[ABV]IDENT2 = "A2"
#[ABV]IDENT3 = "Z3"
#[ABV]CREDAT = [00/00/0000]
#Write [ABV]
#Commit
#Call CHECK_EQUAL( fstat, 0 ) From AXUNIT

#Read [ABV]ABB0="PJ_AMK";"ZZK5";"A2";"Z3"
#Call CHECK_EQUAL( fstat, 0 ) From AXUNIT
#Infbox num$([ABV]CREDAT)
End


# -----------------------TEST_WR_READ_WHER---------------------------------
# #########################################################################

Subprog TEST_WR_READ_WHER( )
Local Integer I
Local File AQCDBTYPES [ABV]

trbegin [ABV]
delete [ABV]
commit

[ABV]IDX = 201
[ABV]C5 = 15126
[ABV]A10 = "A2"
[ABV]A250 = "A121545"
#[ABV]DTM = [04/02/2015]
[ABV]L8 = 154654
[ABV]DCB9_2 = 124521.215112
[ABV]CREDATTIM = gdatetime$("2015-07-01T10:30:32Z")
[ABV]UPDDATTIM = gdatetime$("2015-07-01T10:30:32Z")
[ABV]CREUSR = "AQCOR"
[ABV]UPDUSR = "AQCOR"
[ABV]AUUID = touuid("288eadf8-43a6-4a15-8659-5330411430ea")

Trbegin [ABV]
Write [ABV]
Commit
Call CHECK_EQUAL( fstat, 0 ) From AXUNIT

#Filter [ABV] Where [ABV]DCB9_2 = 124521.215112

#Read [ABV] First
#Call CHECK_EQUAL( fstat, 0 ) From AXUNIT

End

# -----------------------TEST BASIC FOR  ---------------------------------
# #########################################################################


Subprog TEST_BASIC_FOR( )
Local Integer I
LOCAL INTEGER MYIDX
LOCAL INTEGER MYC5
Local INTEGER AINT
Local File AQCDBTYPES [ABV]
Local File AABREV[ABB]

trbegin [ABV]
delete [ABV] Where 1=1
commit


Trbegin [ABV]
[ABV]IDX = 201
[ABV]C5 = 15126
[ABV]A10 = "A2"
[ABV]A250 = "A121545"
#[ABV]DTM = [04/02/2015]
[ABV]L8 = 154654
[ABV]DCB9_2 = 124521.215112
[ABV]CREDATTIM = gdatetime$("2015-07-01T10:30:32Z")
[ABV]UPDDATTIM = gdatetime$("2015-07-01T10:30:32Z")
[ABV]CREUSR = "AQCOR"
[ABV]UPDUSR = "AQCOR"
[ABV]AUUID = touuid("288eadf8-43a6-4a15-8659-5330411430ea")


Write [ABV]

[ABV]IDX = 202
[ABV]C5 = 15127
[ABV]A10 = "A3"
[ABV]A250 = "A121545"
#[ABV]DTM = [04/02/2015]
[ABV]L8 = 154654
[ABV]DCB9_2 = 124521.215112
[ABV]CREDATTIM = gdatetime$("2015-07-01T10:30:32Z")
[ABV]UPDDATTIM = gdatetime$("2015-07-01T10:30:32Z")
[ABV]CREUSR = "AQCOR"
[ABV]UPDUSR = "AQCOR"
[ABV]AUUID = touuid("288eadf8-43a6-4a15-8659-5330411430ea")

Write [ABV]
Commit

I = 0
MYIDX = 201
MYC5 = 15126

For [ABV] Where (([ABV]C5 >= 1) Or ([ABV]CREUSR >= "A")) And ([ABV]IDX >= 0)
	Call CHECK_EQUAL( [ABV]IDX, MYIDX+I ) From AXUNIT
	Call CHECK_EQUAL( [ABV]C5, MYC5+I ) From AXUNIT
	I += 1
Next
I=0
AINT = 1
For [ABV] Where (([ABV]C5 >= AINT) Or ([ABV]CREUSR >= "A")) And ([ABV]IDX >= 0)
	Call CHECK_EQUAL( [ABV]IDX, MYIDX+I ) From AXUNIT
	Call CHECK_EQUAL( [ABV]C5, MYC5+I ) From AXUNIT
	I += 1
Next

I=0
AINT = 1
For [ABV] Where (([ABV]C5 >= [L]AINT) Or ([ABV]CREUSR >= "A")) And ([ABV]IDX >= 0)
	Call CHECK_EQUAL( [ABV]IDX, MYIDX+I ) From AXUNIT
	Call CHECK_EQUAL( [ABV]C5, MYC5+I ) From AXUNIT
	I += 1
Next

I=0
[ABB]ABREV = "A"
For [ABV] Where (([ABV]C5 >= [L]AINT) Or ([ABV]CREUSR >= [ABB]ABREV)) And ([ABV]IDX >= 0)
	Call CHECK_EQUAL( [ABV]IDX, MYIDX+I ) From AXUNIT
	Call CHECK_EQUAL( [ABV]C5, MYC5+I ) From AXUNIT
	I += 1
Next

I = 0

For [ABV] Where (([ABV]C5 >= INT(1)) Or ([ABV]CREUSR >= "A")) And ([ABV]IDX >= 0)
	Call CHECK_EQUAL( [ABV]IDX, MYIDX+I ) From AXUNIT
	Call CHECK_EQUAL( [ABV]C5, MYC5+I ) From AXUNIT
	I += 1
Next


End


# -----------------------TEST BASIC FUNC  ---------------------------------
# #########################################################################


Subprog TEST_FOR_FUNC( )
Local Integer I
LOCAL INTEGER MYIDX
LOCAL INTEGER MYC5
Local INTEGER AINT
Local File AQCDBTYPES [ABV]
Local File AABREV[ABB]
local Integer TAB(1..2)

trbegin [ABV]
delete [ABV] Where 1=1
commit


Trbegin [ABV]
[ABV]IDX = 201
[ABV]C5 = 15126
[ABV]A10 = "A2"
[ABV]A250 = "A121"
#[ABV]DTM = [04/02/2015]
[ABV]L8 = 154654
[ABV]DCB9_2 = 124521.215112
[ABV]CREDATTIM = gdatetime$("2015-07-01T10:30:32Z")
[ABV]UPDDATTIM = gdatetime$("2015-07-01T10:30:32Z")
[ABV]CREUSR = "AQCOR"
[ABV]UPDUSR = "AQCOR"
[ABV]AUUID = touuid("288eadf8-43a6-4a15-8659-5330411430ea")


Write [ABV]

[ABV]IDX = 202
[ABV]C5 = 15127
[ABV]A10 = "A3"
[ABV]A250 = "A121545"
#[ABV]DTM = [04/02/2015]
[ABV]L8 = 154654
[ABV]DCB9_2 = 124521.215112
[ABV]CREDATTIM = gdatetime$("2015-07-01T10:30:32Z")
[ABV]UPDDATTIM = gdatetime$("2015-07-01T10:30:32Z")
[ABV]CREUSR = "AQCOR"
[ABV]UPDUSR = "AQCOR"
[ABV]AUUID = touuid("288eadf8-43a6-4a15-8659-5330411430ea")

Write [ABV]
Commit

[ABV]IDX = 203
[ABV]C5 = 15128
[ABV]A10 = "A3"
[ABV]A250 = "A121545"
#[ABV]DTM = [04/02/2015]
[ABV]L8 = 154654
[ABV]DCB9_2 = 124521.215112
[ABV]CREDATTIM = gdatetime$("2015-07-01T10:30:32Z")
[ABV]UPDDATTIM = gdatetime$("2015-07-01T10:30:32Z")
[ABV]CREUSR = "AQCOR"
[ABV]UPDUSR = "AQCOR"
[ABV]AUUID = touuid("288eadf8-43a6-4a15-8659-5330411430ea")

Write [ABV]
Commit

I = 0
MYIDX = 202
MYC5 = 15127
####   length
For [ABV]CODE Where len([ABV]A250) >= 5
	Call CHECK_EQUAL( [ABV]IDX, MYIDX+I ) From AXUNIT
	Call CHECK_EQUAL( [ABV]C5, MYC5+I ) From AXUNIT
	I += 1
Next
I=0
For [ABV]CODE Where tolower([ABV]A250) = "a121545"
	Call CHECK_EQUAL( [ABV]IDX, MYIDX+I ) From AXUNIT
	Call CHECK_EQUAL( [ABV]C5, MYC5+I ) From AXUNIT
	I += 1
Next

I=0
For [ABV]CODE Where left$([ABV]A250, 5) = "A1215"
	Call CHECK_EQUAL( [ABV]IDX, MYIDX+I ) From AXUNIT
	Call CHECK_EQUAL( [ABV]C5, MYC5+I ) From AXUNIT
	I += 1
Next

I=0
For [ABV]CODE Where mid$([ABV]A250, 1, 5) = "A1215"
	Call CHECK_EQUAL( [ABV]IDX, MYIDX+I ) From AXUNIT
	Call CHECK_EQUAL( [ABV]C5, MYC5+I ) From AXUNIT
	I += 1
Next

I=0
For [ABV]CODE Where pat([ABV]A250, "A1215*")
	Call CHECK_EQUAL( [ABV]IDX, MYIDX+I ) From AXUNIT
	Call CHECK_EQUAL( [ABV]C5, MYC5+I ) From AXUNIT
	I += 1
Next

I=0
For [ABV]CODE Where pat([ABV]A250, "A1215*") <> 0
	Call CHECK_EQUAL( [ABV]IDX, MYIDX+I ) From AXUNIT
	Call CHECK_EQUAL( [ABV]C5, MYC5+I ) From AXUNIT
	I += 1
Next

I=0
MYIDX = 201
MYC5 = 15126
For [ABV]CODE Where pat([ABV]A250, "A1215*") = 0
	Call CHECK_EQUAL( [ABV]IDX, MYIDX+I ) From AXUNIT
	Call CHECK_EQUAL( [ABV]C5, MYC5+I ) From AXUNIT
	I += 1
Next

I=0
MYIDX = 201
MYC5 = 15126
For [ABV]CODE Where find([ABV]IDX, 201, 202)
	Call CHECK_EQUAL( [ABV]IDX, MYIDX+I ) From AXUNIT
	Call CHECK_EQUAL( [ABV]C5, MYC5+I ) From AXUNIT
	I += 1
Next


I=0
TAB(1) = 201
TAB(2) = 202
MYIDX = 201
MYC5 = 15126
#dbgetna
For [ABV]CODE Where find([ABV]IDX, TAB)
	Call CHECK_EQUAL( [ABV]IDX, MYIDX+I ) From AXUNIT
	Call CHECK_EQUAL( [ABV]C5, MYC5+I ) From AXUNIT
	I += 1
Next

I=0
MYIDX = 201
MYC5 = 15126

For [ABV]CODE Where find([ABV]IDX, 201, 202) <> 0
	Call CHECK_EQUAL( [ABV]IDX, MYIDX+I ) From AXUNIT
	Call CHECK_EQUAL( [ABV]C5, MYC5+I ) From AXUNIT
	I += 1
Next

I=0
MYIDX = 203
MYC5 = 15128

For [ABV]CODE Where find([ABV]IDX, 201, 202) = 0
	Call CHECK_EQUAL( [ABV]IDX, MYIDX+I ) From AXUNIT
	Call CHECK_EQUAL( [ABV]C5, MYC5+I ) From AXUNIT
	I += 1
Next

End

# -----------------------TEST BASIC LINK  ---------------------------------
# #########################################################################

Subprog TEST_BASIC_LINK( )
Local File ATABLE [ATB]
Local File ATEXTE [ATX]
Local Integer N

#dbgetna
Link [ATB]  With [ATX]NUMERO="FRA";[ATB]INTITFIC As [LNK]

For [LNK] Where [ATB]CODFIC = "ATABLE"
	Call CHECK_EQUAL( [ATB]CODFIC, "ATABLE" ) From AXUNIT
Next

End

# -----------------------TEST BASIC EVALUE  ---------------------------------
# #########################################################################

Subprog TEST_FOR_EVALUE( )
Local Integer I
LOCAL INTEGER MYIDX
LOCAL INTEGER MYC5
Local INTEGER AINT
Local File AQCDBTYPES [ABV]
Local File AABREV[ABB]
Local Char STR(250)

trbegin [ABV]
delete [ABV] Where 1=1
commit


Trbegin [ABV]
[ABV]IDX = 201
[ABV]C5 = 15126
[ABV]A10 = "A2"
[ABV]A250 = "A121545"
#[ABV]DTM = [04/02/2015]
[ABV]L8 = 154654
[ABV]DCB9_2 = 124521.215112
[ABV]CREDATTIM = gdatetime$("2015-07-01T10:30:32Z")
[ABV]UPDDATTIM = gdatetime$("2015-07-01T10:30:32Z")
[ABV]CREUSR = "AQCOR"
[ABV]UPDUSR = "AQCOR"
[ABV]AUUID = touuid("288eadf8-43a6-4a15-8659-5330411430ea")

Write [ABV]

[ABV]IDX = 202
[ABV]C5 = 15127
[ABV]A10 = "A3"
[ABV]A250 = "A121545"
#[ABV]DTM = [04/02/2015]
[ABV]L8 = 154654
[ABV]DCB9_2 = 124521.215112
[ABV]CREDATTIM = gdatetime$("2015-07-01T10:30:32Z")
[ABV]UPDDATTIM = gdatetime$("2015-07-01T10:30:32Z")
[ABV]CREUSR = "AQCOR"
[ABV]UPDUSR = "AQCOR"
[ABV]AUUID = touuid("288eadf8-43a6-4a15-8659-5330411430ea")

Write [ABV]
Commit

I = 0
MYIDX = 201
MYC5 = 15126

STR = "(([ABV]C5 >= 1) Or ([ABV]CREUSR >= 'A')) And ([ABV]IDX >= 0)"

#dbgetna
For [ABV] Where evalue(STR)
	Call CHECK_EQUAL( [ABV]IDX, MYIDX+I ) From AXUNIT
	Call CHECK_EQUAL( [ABV]C5, MYC5+I ) From AXUNIT
	I += 1
Next

End


# -----------------------TEST POST EVALUATION  ----------------------------
# #########################################################################


Subprog TEST_FOR_POSTEVA( )
Local Integer I
LOCAL INTEGER MYIDX
LOCAL INTEGER MYC5
Local INTEGER AINT
Local File AQCDBTYPES [ABV]
Local File AABREV[ABB]

trbegin [ABV]
delete [ABV] Where 1=1
commit


Trbegin [ABV]
[ABV]IDX = 201
[ABV]C5 = 15126
[ABV]A10 = "A2"
[ABV]A250 = "A121"
#[ABV]DTM = [04/02/2015]
[ABV]L8 = 154654
[ABV]DCB9_2 = 124521.215112
[ABV]CREDATTIM = gdatetime$("2015-07-01T10:30:32Z")
[ABV]UPDDATTIM = gdatetime$("2015-07-01T10:30:32Z")
[ABV]CREUSR = "AQCOR"
[ABV]UPDUSR = "AQCOR"
[ABV]AUUID = touuid("288eadf8-43a6-4a15-8659-5330411430ea")

#
Write [ABV]

[ABV]IDX = 202
[ABV]C5 = 15127
[ABV]A10 = "A3"
[ABV]A250 = "A121545"
#[ABV]DTM = [04/02/2015]
[ABV]L8 = 154654
[ABV]DCB9_2 = 124521.215112
[ABV]CREDATTIM = gdatetime$("2015-07-01T10:30:32Z")
[ABV]UPDDATTIM = gdatetime$("2015-07-01T10:30:32Z")
[ABV]CREUSR = "AQCOR"
[ABV]UPDUSR = "AQCOR"
[ABV]AUUID = touuid("288eadf8-43a6-4a15-8659-5330411430ea")

Write [ABV]
Commit

[ABV]IDX = 203
[ABV]C5 = 15128
[ABV]A10 = "A4"
[ABV]A250 = "A122545"
#[ABV]DTM = [04/02/2015]
[ABV]L8 = 154654
[ABV]DCB9_2 = 124521.215112
[ABV]CREDATTIM = gdatetime$("2015-07-01T10:30:32Z")
[ABV]UPDDATTIM = gdatetime$("2015-07-01T10:30:32Z")
[ABV]CREUSR = "AQCOR"
[ABV]UPDUSR = "AQCOR"
[ABV]AUUID = touuid("288eadf8-43a6-4a15-8659-5330411430ea")

Write [ABV]
Commit

I = 0
MYIDX = 202
MYC5 = 15127
For [ABV]CODE Where len([ABV]A250) >= 5  and SEG$([ABV]A250,2,4) = "121" and [ABV]IDX > 201
	Call CHECK_EQUAL( [ABV]IDX, MYIDX+I ) From AXUNIT#
	Call CHECK_EQUAL( [ABV]C5, MYC5+I ) From AXUNIT
	I += 1
Next

End

# -----------------------TEST POST EVALUATION  ----------------------------
# #########################################################################


Subprog TEST_ORDER_BY( )

Local Integer I
LOCAL INTEGER MYIDX
LOCAL INTEGER MYC5
Local INTEGER AINT
Local File AQCDBTYPES [ABV]
Local File AABREV[ABB]

trbegin [ABV]
delete [ABV] Where 1=1
commit


Trbegin [ABV]
[ABV]IDX = 201
[ABV]C5 = 15126
[ABV]A10 = "A2"
[ABV]A250 = "A121"
#[ABV]DTM = [04/02/2015]
[ABV]L8 = 154654
[ABV]DCB9_2 = 124521.215112
[ABV]CREDATTIM = gdatetime$("2015-07-01T10:30:32Z")
[ABV]UPDDATTIM = gdatetime$("2015-07-01T10:30:32Z")
[ABV]CREUSR = "AQCOR"
[ABV]UPDUSR = "AQCOR"
[ABV]AUUID = touuid("288eadf8-43a6-4a15-8659-5330411430ea")

#
Write [ABV]

[ABV]IDX = 202
[ABV]C5 = 15127
[ABV]A10 = "A3"
[ABV]A250 = "A121545"
#[ABV]DTM = [04/02/2015]
[ABV]L8 = 154654
[ABV]DCB9_2 = 124521.215112
[ABV]CREDATTIM = gdatetime$("2015-07-01T10:30:32Z")
[ABV]UPDDATTIM = gdatetime$("2015-07-01T10:30:32Z")
[ABV]CREUSR = "AQCOR"
[ABV]UPDUSR = "AQCOR"
[ABV]AUUID = touuid("288eadf8-43a6-4a15-8659-5330411430ea")

Write [ABV]
Commit

[ABV]IDX = 203
[ABV]C5 = 15128
[ABV]A10 = "A4"
[ABV]A250 = "A122545"
#[ABV]DTM = [04/02/2015]
[ABV]L8 = 154654
[ABV]DCB9_2 = 124521.215112
[ABV]CREDATTIM = gdatetime$("2015-07-01T10:30:32Z")
[ABV]UPDDATTIM = gdatetime$("2015-07-01T10:30:32Z")
[ABV]CREUSR = "AQCOR"
[ABV]UPDUSR = "AQCOR"
[ABV]AUUID = touuid("288eadf8-43a6-4a15-8659-5330411430ea")

Write [ABV]
Commit

I = 0
MYIDX = 202
MYC5 = 15127
Filter [ABV] Where len([ABV]A250) >= 5  and SEG$([ABV]A250,2,4) = "121" and [ABV]IDX > 201 Order By Key CLE1=IDX;C5

For [ABV] 
	Call CHECK_EQUAL( [ABV]IDX, MYIDX+I ) From AXUNIT#
	Call CHECK_EQUAL( [ABV]C5, MYC5+I ) From AXUNIT
	I += 1
Next

End