"use strict";
var fs = require("fs");

var X3SON = require("etna-engine/lib/x3son");
var date = require('etna-engine/lib/runtime/tdate');
var datetime = require('etna-engine/lib/runtime/tdatetime');
var bcd = require('etna-engine/lib/runtime/tbcd');
var Clbfile = require('etna-engine/lib/runtime/tclbfile').Clbfile;
var Blbfile = require('etna-engine/lib/runtime/tblbfile').Blbfile;
var uuid = require('etna-engine/lib/runtime/tuuid');

var done;
QUnit.module(module.id, {
	setup: function() {},
	teardown: function() {
		if (done) {
			setTimeout(function() {
				process.kill(process.pid);
			}, 500);
		}
	}
});

function T(_, v, r) {
	var r1 = X3SON.stringify(_, v);
	strictEqual(r1, r);
	var v1 = X3SON.parse(_, r1);
	if (Array.isArray(v)) {
		strictEqual(v1.length, v.length);
	} else {
		if (v1.x3Compare) ok(v1.x3Compare(v) === 0, v);
	}
}

asyncTest("BASIC", function(_) {
	T(_, 123, "I123;");
	T(_, bcd.fromString("123.45"), "N123.45;");
	T(_, "hello world", "S11!hello world;");
	T(_, new Clbfile("hello world"), "C11!hello world;");
	var image = new Buffer("R0lGODlhBgAJAJECAPj3+NXt/wAAAAAAACH5BAEAAAIALAAAAAAGAAkAAAINlC+AqQfREmygOrYiKgA7", 'base64');
	T(_, new Blbfile(image), "B!R0lGODlhBgAJAJECAPj3+NXt/wAAAAAAACH5BAEAAAIALAAAAAAGAAkAAAINlC+AqQfREmygOrYiKgA7;");
	T(_, date.make(2015, 10, 29), "D2015-10-29;");
	T(_, datetime.x3Parse("2015-10-29T10:20:00Z"), "T2015-10-29T10:20:00Z;");
	T(_, uuid.x3ToUuid("a8929d10-44ed-4651-b4e6-91235d0a9f0d"), "Ua8929d1044ed4651b4e691235d0a9f0d;");
	T(_, {
		P1: 5,
		P2: 12
	}, "O!{P1:I5;P2:I12;};");
	start();
});

asyncTest("Arrays", function(_) {
	//T([1,2,3], "I[1;2;3;];");
	start();
});

test("stop", function() {
	done = true;
	start();
});