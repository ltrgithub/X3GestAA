if (typeof(requireScript)==='undefined'){var requireScript=function(cb,name){require(name);cb();}};var z = require('etna-engine/lib/runtime').instructions,r=requireScript,e=exports,p=[],B=z.B,NL=z.NL,A=z.A,PROG=z.PROG,DECL=z.DECL,SET=z.SET,V=z.V,C=z.C,END=z.END,GO=z.GO,IF=z.IF,LT=z.LT,DIM=z.DIM,BOX=z.BOX,SUB=z.SUB,EQ=z.EQ,ADD=z.ADD,F=z.F,PLUSEQ=z.PLUSEQ,OR=z.OR,NE=z.NE,NOT=z.NOT,EVALUE=z.EVALUE,AND=z.AND,MINUSEQ=z.MINUSEQ;z.BEGIN(module);NL(0);/*z.MAIN(e);*/e.MAIN=B();PROG(e,'INITALL',[],B(
NL(1),DECL('VI','SILENT','')
,NL(1),SET(V('SILENT'),C(1))
,NL(1),END())); 
PROG(e,'INIT',['TRT','COUNT'],B(
NL(2),IF(LT(DIM(V('SILENT')),C(0)),p,1,B(DECL('VI','SILENT',''),GO(p,1)))));p[1]=B(
NL(1),DECL('VI','SUCCESS',''),DECL('VI','FAILURE',''),DECL('VI','TESTCOUNT','')
,NL(1),SET(V('TESTCOUNT'),V('COUNT'))
,NL(1),BOX('error',[SUB(C('RUNNING'),V('TRT'))])
,NL(1),END()); 
PROG(e,'CHECK_EQUAL',['NAME','GOT','EXPECT'],B(
NL(2),DECL('BS','NAME',''),DECL('BS','GOT',''),DECL('BS','EXPECT','')
,NL(1),DECL('LS','TEXT','')
,NL(1),IF(EQ(V('GOT'),V('EXPECT')),p,2,B(SET(V('TEXT'),ADD(ADD(ADD(C('OK: '),V('NAME')),C(': ')),F('NUM$',[V('GOT')]))),PLUSEQ(V('SUCCESS'),C(1))
,GO(p,3)))));p[2]=B(NL(1),SET(V('TEXT'),ADD(ADD(ADD(ADD(ADD(C('FAILED:'),V('NAME')),C(': expected ')),F('NUM$',[V('EXPECT')])),C(', got ')),F('NUM$',[V('GOT')]))),PLUSEQ(V('FAILURE'),C(1))
,GO(p,3));p[3]=B(
NL(2),IF(OR(NE(V('GOT'),V('EXPECT')),NOT(V('SILENT'))),p,4,B(BOX('error',[V('TEXT')]),GO(p,4))));p[4]=B(
NL(1),END()); 
PROG(e,'CHECK2',['EXPR','EXPECT'],B(

NL(3),DECL('LS','TEXT','')
,NL(1),SET(V('GOT'),EVALUE(r, e, V('EXPR')))
,NL(1),DECL('LS','TEXT','')
,NL(1),IF(EQ(V('GOT'),V('EXPECT')),p,5,B(SET(V('TEXT'),ADD(ADD(ADD(C('OK: '),V('EXPR')),C(': ')),F('NUM$',[V('GOT')]))),PLUSEQ(V('SUCCESS'),C(1))
,GO(p,6)))));p[5]=B(NL(1),SET(V('TEXT'),ADD(ADD(ADD(ADD(ADD(C('FAILED:'),V('EXPR')),C(': expected ')),F('NUM$',[V('EXPECT')])),C(', got ')),F('NUM$',[V('GOT')]))),PLUSEQ(V('FAILURE'),C(1))
,GO(p,6));p[6]=B(
NL(2),IF(OR(NE(V('GOT'),V('EXPECT')),NOT(V('SILENT'))),p,7,B(BOX('error',[V('TEXT')]),GO(p,7))));p[7]=B(
NL(1),END()); 

PROG(e,'CHECKERR',['GOT','EXPECT','MSG'],B(
NL(3),DECL('BI','GOT',''),DECL('BI','EXPECT','')
,NL(1),DECL('BS','MSG','')
,NL(1),DECL('LS','TEXT','')
,NL(1),IF(AND(NE(V('EXPECT'),C(0)),EQ(V('GOT'),V('EXPECT'))),p,8,B(SET(V('TEXT'),ADD(C('OK: error test returned: '),F('NUM$',[V('GOT')]))),PLUSEQ(V('SUCCESS'),C(1))
,GO(p,9)))));p[8]=B(NL(1),SET(V('TEXT'),ADD(ADD(ADD(C('ERROR TEST FAILED: expected '),F('NUM$',[V('EXPECT')])),C(', got ')),F('NUM$',[V('GOT')]))),PLUSEQ(V('FAILURE'),C(1))
,GO(p,9));p[9]=B(
NL(2),IF(OR(NE(V('GOT'),V('EXPECT')),NOT(V('SILENT'))),p,10,B(BOX('error',[V('TEXT')]),GO(p,10))));p[10]=B(
NL(1),END()); 
PROG(e,'FINISH',[],B(
NL(2),DECL('LS','TEST','')
,NL(1),IF(AND(EQ(V('SUCCESS'),V('TESTCOUNT')),EQ(V('FAILURE'),C(0))),p,11,B(SET(V('TEXT'),SUB(C('ALL TESTS PASSED:'),F('NUM$',[V('SUCCESS')])))
,GO(p,12)))));p[11]=B(
NL(2),SET(V('TEXT'),C('ERROR:'))
,NL(1),IF(NE(ADD(V('SUCCESS'),V('FAILURE')),V('TESTCOUNT')),p,13,B(MINUSEQ(V('TEXT'),SUB(F('NUM$',[SUB(SUB(V('TESTCOUNT'),V('SUCCESS')),V('FAILURE'))]),C('tests DID NOT RUN!'))),GO(p,13))),GO(p,12));p[13]=B(
NL(1),IF(NE(V('FAILURE'),C(0)),p,14,B(MINUSEQ(V('TEXT'),SUB(F('NUM$',[V('FAILURE')]),C('tests FAILED!'))),GO(p,14))));p[14]=B(
NL(1),MINUSEQ(V('TEXT'),SUB(ADD(C('('),F('NUM$',[V('SUCCESS')])),C('tests passed)')))
);p[12]=B(
NL(2),BOX('error',[V('TEXT')])
,NL(1),END()); 
