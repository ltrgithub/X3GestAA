"use strict";

var locale = require("syracuse-core/lib/locale");
// standard file store
function OsFileStore(fileName) {
	this.fileName = fileName;
}

var osFileProto = OsFileStore.prototype;
osFileProto.getProperties = function(_) {
}
osFileProto.fileExists = function(_) {
}
osFileProto.setFile = function(_, fileName) {
}
osFileProto.read = function(_, len) {
}
osFileProto.write = function(_, buffer, options) {
}
osFileProto.deleteFile = function(_) {
}
osFileProto.close = function(_) {
}


//rest file store
function RestFileStore(fileName) {
	this.fileName = fileName;
}

var restFileProto = RestFileStore.prototype;
restFileProto.getProperties = function(_) {
}
restFileProto.fileExists = function(_) {
}
restFileProto.setFile = function(_, fileName) {
}
restFileProto.read = function(_, len) {
}
restFileProto.write = function(_, buffer, options) {
}
restFileProto.deleteFile = function(_) {
}
restFileProto.close = function(_) {
}



var _propertyStoreMap = {
	"db_file": function(instance, property) {
		// compat, change of storage type
		if(typeof instance._data[property.name] === "string")
			return instance._db.getFileStore(instance._data[property.name]);
		else
			return instance._db.getFileStore((instance._data[property.name] && instance._data[property.name].$uuid) || "");
	},
	"file": function(instance, property) {
		return new OsFileStore((instance._data[property.name] && instance._data[property.name].$uuid) || "");
	},
	"rest": function(instance, property) {
		return new RestFileStore((instance._data[property.name] && instance._data[property.name].$uuid) || "");
	}
}

exports.createFileStore = function(instance, property, storeType) {
	return _propertyStoreMap[storeType] && _propertyStoreMap[storeType](instance, property);
}