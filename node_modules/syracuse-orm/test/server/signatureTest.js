"use strict";
var s = require('syracuse-orm/lib/checksum')

QUnit.module(module.id);

test('Object signature', 17, function() {
	var test = [];
	s.sign(test);
	strictEqual(s.verify(test), true, "empty array")
	var test = [];
	test.push(test);
	s.sign(test);
	strictEqual(s.verify(test), true, "recursive array")
	var test = [null];
	s.sign(test);
	strictEqual(s.verify(test), true, "recursive array")
	test[0] = 2;
	strictEqual(s.verify(test), false, "changed recursive array")
	var test = [undefined];
	s.sign(test);
	strictEqual(s.verify(test), true, "array with undefined")
	var test = {
		a: 5,
		b: 7
	};
	s.sign(test);
	strictEqual(s.verify(test), true, "simple object")
	var test = {
		"$creDate": 55,
		"$updDate": 77
	};
	s.sign(test);
	strictEqual(s.verify(test), true, "object with $creDate")
	test.$creDate = 44;
	strictEqual(s.verify(test), true, "change $creDate")
	test.$updDate = 44;
	strictEqual(s.verify(test), true, "change $updDate")
	var test = {
		"hallo": [55],
		"u": 7
	};
	s.sign(test, ["hallo"]);
	strictEqual(s.verify(test, ["hallo"]), true, "object with restrictions")
	strictEqual(s.verify(test), false, "test without restrictions")
	test.hallo = ""
	strictEqual(s.verify(test, ["hallo"]), true, "changed restricted value")
	test.u = 6
	strictEqual(s.verify(test, ["hallo"]), false, "change other value")
	var d = new Date();
	var test = {
		dat: d,
		bool: new Boolean(true),
		num: new Number(2),
		str: new String("8")
	};
	s.sign(test);
	strictEqual(s.verify(test), true, "object with date, boolean, number, String")
	test.bool = true;
	strictEqual(s.verify(test), false, "Boolean replaced by boolean")
	test.bool = new Boolean(false);
	strictEqual(s.verify(test), false, "different Boolean")
	test.bool = new Boolean(true);
	strictEqual(s.verify(test), true, "original Boolean")
});