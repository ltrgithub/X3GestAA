"use strict";

var helpers = require('syracuse-core/lib/helpers');
var tracer = require("syracuse-trace/lib/helper").getTracer("notifications");
var globals = require('streamline/lib/globals');
var uuid = require('syracuse-core/lib/helpers').uuid;
var util = require('util');
var adminHelper = require("syracuse-collaboration/lib/helpers").AdminHelper;
var mongodb = require('streamline-mongodb');

var db;

var Event = helpers.defineClass(function(_, type, data, from, to, severity, link) {

	this.type = type;
	this.from = from;
	this.to = to;
	this.severity = severity;
	this.data = data;
	this.link = link;

}, null, {
	serialize: function() {
		var res = {
			_id: uuid.generate(),
			type: this.type,
			stamp: new Date().now,
			to: this.to,
			from: this.from,
			severity: this.severity,
			data: this.data
		};
		if (this.link) res.link = this.link;
		return res;
	}
});


var EventMessage = helpers.defineClass(function(_, type, title, message, from, to, severity, link) {
	Event.call(this, _, type, {
			thumbnail: null,
			title: title,
			message: message
		},
		from, to, severity, link);
}, Event, {});

function getEventCollection(_) {
	db = db || adminHelper.getCollaborationOrm(_);
	return db.db.collection("NotificationEvent", _);
}


exports.createMessage = function(_, type, title, message, from, to, severity, link) {
	tracer.info && tracer.info("Create message");
	var evt = new EventMessage(_, type, title, message, from, to, severity, link).serialize();
	getEventCollection(_).insert(evt, _);
	return evt;
};

exports.getEvents = function(_, count) {
	tracer.info && tracer.info("Get events");
	var events = getEventCollection(_).find({}).toArray(_);
	//console.log("Events1: "+JSON.stringify(events,null,2));
	return events;
};