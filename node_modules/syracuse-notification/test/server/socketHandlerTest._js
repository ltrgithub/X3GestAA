"use strict";

var baseUrl = "http://localhost:3004";
var port = 3004;
var config = require('config'); // must be first syracuse require
var sys = require("util");
var socketIoHandler = require('syracuse-notification/lib/socketHandler').SocketHandler;
var socketeIo = require("socket.io");
var socketIoClient = require('socket.io-client');

QUnit.module(module.id, {
	setup: function() {},
	teardown: function() {
		if (doStop) {
			setTimeout(function() {
				process.kill(process.pid);
			}, 100);
		}
	}
});

function _getModel() {
	return dataModel.make(registry.applications.syracuse.contracts.collaboration, "mongodb_convdemo");
}

asyncTest("init database", 1, function(_) {
	var server = new mongodb.Server(endPoint.datasets["mongodb_convdemo"].hostname, endPoint.datasets["mongodb_convdemo"].port, {});
	var db = adminTestFixtures.newMongoDb(endPoint.datasets["mongodb_convdemo"].database, server, {});
	db = db.open(_);
	db.dropDatabase(_);

	ok(true, "mongodb initialized");
	start();
});

//start syracuse server
asyncTest("initialize syracuse test server", 1, function(_) {
	require('syracuse-main/lib/syracuse').startServers(_, port);
	ok(true, "server initialized");
	var db = dataModel.getOrm(_, _getModel(), endPoint.datasets.mongodb_convdemo);
	jsonImport.jsonImport(_, db, "syracuse-admin-demo.json", {});
	start();
});

asyncTest("register a push server serivce ", 0, function(_) {
	// register nothin
	socketIoHandler.register("nothin", {});

	socketIoClient.connect();
});

asyncTest("stop  tests", 0, function(_) {
	doStop = true;
	start();
});