var fs = require('fs');
var mongodb = require('mongodb')
var util = require('util');
var licenseFile = 'license.json';
var nodelocalFile = 'nodelocal.js'
var config = require("../../nodelocal").config || {}	
	

exports.load = function(name) {
	var filename = __dirname+"/"+process.platform+"_"+process.arch+"/"+name+".node";
	if (fs.existsSync(filename))
		return require(filename);
	else {
		filename = __dirname+"/"+process.platform+"/"+name+".node";
		if (fs.existsSync(filename))
			return require(filename);
		console.log("Native module "+name+".node cannot be found");
	}	
}



exports.register2 = function(callback, options) {
	var l = exports.load("license");
	if (l) {
		if (fs.existsSync(licenseFile)) { // read license from file
			var lic = fs.readFileSync(licenseFile).toString("utf8"); // read file into buffer to preserve line endings
			if (l.register(require, {"": lic}, options)) {
				return exports.insertLicense("", lic, function (error, data) {
					var renamed = licenseFile.replace(/\w+$/, "bbb");
					console.log("License file renamed to "+renamed);
					try { // remove renamed file if existent 
						fs.unlinkSync(renamed);
					} catch (e) {}
					fs.renameSync(licenseFile, renamed);
					return callback(error, data); // insert license into database				
				})
			} else {
				return callback("No valid license")
			}				
		} else { // read license from database
			return exports.readLicenses(function(error, data) { 
				if (error)
					return callback(error);
				if (data && ("" in data))
					console.log("License from database");
				return callback(null, l.register(require, data, options))});
		}
	} else {
		return callback(null, false);
	}
}


exports.insertLicense = function(name, license, callback) {
	if (!config.license)
		callback("No config");
	var db = new mongodb.Db(config.license.database, new mongodb.Server(config.license.hostname, config.license.port, {}), {});
	// Establish connection to db
	db.open(function(err, db) {
		if (err) 
			return callback(err);
		db.createCollection('license', function(err, collection) {
			if (err) {
				db.close();
				return callback(err);
			}
			collection.update({_id:name}, {_id:name, text:license}, {upsert:true, safe:true}, function(err, result) {
				db.close();
				return callback(err, true);
			});
		});
	});
}    

exports.readLicenses = function(callback) {
	if (!config.license)
		callback("No config");
	var db = new mongodb.Db(config.license.database, new mongodb.Server(config.license.hostname, config.license.port, {}), {});
	// Establish connection to db
	db.open(function(err, db) {
		if (err) 
			return callback(err);
		db.createCollection('license', function(err, collection) {
			if (err) {
				db.close();
				return callback(err);
			}
			collection.find().toArray(function(err, docs) {
				db.close();
				var result = {};
				for (var i=docs.length-1; i>= 0; i--)
					result[docs[i]._id] = docs[i].text;
				return callback(err, result);
			});
		});
	});
}    

