Call INIT(trtcou, 19) From XUNIT

Calljs frame createTestTable("{" 
& + '	"name": "ZDBTEST1",'
& + '	"columns": {'
& + '		"S1": { "type": "string", "maxLength": 32, "nullable": false},'
& + '		"S2": { "type": "string", "maxLength": 32, "nullable": false},'
& + '		"J1": { "type": "string", "maxLength": 32, "nullable": false},'
& + '		"J2": { "type": "string", "maxLength": 32, "nullable": false},'
& + '		"I1": { "type": "number", "scale": 0 },'
& + '		"I2": { "type": "number", "scale": 0 }'
& + '	},'
& + '	"indexes" : {'
& + '		"S1": { "columns": ["+S1"], "unique": true },'
& + '		"I1": { "columns": ["+I1"], "unique": true },'
& + '		"S2I1": { "columns": ["+S2","+I1"], "unique": true },'
& + '		"S2MI2": { "columns": ["+S2","-I2"], "unique": false }'
& + '	},'
& + '	"abbrev": "TST"'
& + '}')
& From "x3-engine/lib/runtime/dbTest"

#File ATABLE [ATA] Where '' + [ATA]CODFIC >= 'C'  And len([ATA]CODFIC) < 8 And [ATA]CODFIC < 'E'
#For [ATA]CODFIC
#  Errbox [ATA]CODFIC
#Next

Local Char R(32)

File ZDBTEST1 

S1 = "A" : S2 = "L" : J1 = "A" : J2 = "B" : I1 = 9 : I2 = 0 : Write [TST]
S1 = "B" : S2 = "L" : J1 = "A" : J2 = "C" : I1 = 8 : I2 = 1 : Write [TST]
S1 = "C" : S2 = "M" : J1 = "C" : J2 = " " : I1 = 7 : I2 = 1 : Write [TST]
S1 = "D" : S2 = "N" : J1 = "D" : J2 = "D" : I1 = 6 : I2 = 2 : Write [TST]
S1 = "E" : S2 = "N" : J1 = "D" : J2 = "L" : I1 = 5 : I2 = 3 : Write [TST]
S1 = "F" : S2 = "N" : J1 = "D" : J2 = "M" : I1 = 4 : I2 = 3 : Write [TST]
S1 = "G" : S2 = "O" : J1 = "A" : J2 = "M" : I1 = 3 : I2 = 3 : Write [TST]
S1 = "H" : S2 = "P" : J1 = "J" : J2 = " " : I1 = 2 : I2 = 3 : Write [TST]
S1 = "I" : S2 = "P" : J1 = "J" : J2 = "P" : I1 = 1 : I2 = 4 : Write [TST]
S1 = "J" : S2 = "Q" : J1 = "J" : J2 = "I" : I1 = 0 : I2 = 4 : Write [TST]

R = "" : For [TST]S1 : R += S1 : Next
Call CHECK_EQUAL("For", R, "ABCDEFGHIJ") From XUNIT

R = "" : For [TST]S1 Where S1 > 'C' : R += S1 : Next
Call CHECK_EQUAL("Where >", R, "DEFGHIJ") From XUNIT

R = "" : For [TST]S1 Where S1 >= 'C' : R += S1 : Next
Call CHECK_EQUAL("Where >=", R, "CDEFGHIJ") From XUNIT

R = "" : For [TST]S1 Where S1 <= 'C' : R += S1 : Next
Call CHECK_EQUAL("Where <=", R, "ABC") From XUNIT

R = "" : For [TST]S1 Where S1 < 'C' : R += S1 : Next
Call CHECK_EQUAL("Where <", R, "AB") From XUNIT

R = "" : For [TST]S1 Where S1 = 'C' : R += S1 : Next
Call CHECK_EQUAL("Where =", R, "C") From XUNIT

R = "" : For [TST]S1 Where S1 <> 'C' : R += S1 : Next
Call CHECK_EQUAL("Where <>", R, "ABDEFGHIJ") From XUNIT

R = "" : For [TST]S1 Where find(S1, 'B', 'C', 'G') <> 0 : R += S1 : Next
Call CHECK_EQUAL("Where find <> 0", R, "BCG") From XUNIT

R = "" : For [TST]S1 Where find(S1, 'B', 'C', 'G') = 0 : R += S1 : Next
Call CHECK_EQUAL("Where find = 0", R, "ADEFHIJ") From XUNIT

R = "" : For [TST]S1 Where S1 <> 'B' AND S1 <> 'C' AND S1 <> 'G' : R += S1 : Next
Call CHECK_EQUAL("Where and", R, "ADEFHIJ") From XUNIT

R = "" : For [TST]S1 Where S1 = 'B' OR S1 = 'C' OR S1 = 'G' : R += S1 : Next
Call CHECK_EQUAL("Where or", R, "BCG") From XUNIT

R = "" : For [TST]S1 Where J1 = 'A' AND J2 = 'B' OR J1 = 'D' AND J2 = 'M' : R += S1 : Next
Call CHECK_EQUAL("Where and or", R, "AF") From XUNIT

R = "" : For [TST]S1 Where (J1 = 'A' OR J1 = 'D') AND (J2 = 'B' OR J2 = 'M') : R += S1 : Next
Call CHECK_EQUAL("Where or and", R, "AFG") From XUNIT

R = "" : For [TST]S1 Where J1 = 'A' OR J1 = 'D' AND J2 = 'B' OR J2 = 'M' : R += S1 : Next
Call CHECK_EQUAL("Where or and no paren", R, "ABFG") From XUNIT

Filter [TST] Order By S1: R = "" : For [TST]S1 : R += S1 : Next
Call CHECK_EQUAL("Order S1", R, "ABCDEFGHIJ") From XUNIT

Filter [TST] Order By S1 Desc: R = "" : For [TST]S1 : R += S1 : Next
Call CHECK_EQUAL("Order S1 Desc", R, "JIHGFEDCBA") From XUNIT

Filter [TST] Order By S1 Desc: R = "" : For [TST]S1 : R += S1 : Next
Call CHECK_EQUAL("Order S1 Desc", R, "JIHGFEDCBA") From XUNIT

Filter [TST] Order By S2 Desc; S1 Asc : R = "" : For [TST]S1 : R += S1 : Next
Call CHECK_EQUAL("Order S2 Desc, S1 Asc", R, "JHIGDEFCAB") From XUNIT

File ZDBTEST1 [TST2] : Link [TST2] WITH [TST]I1 = 9 - I1 AS [LNK2]
R = "" : For [LNK2]S1 : R += [TST]S1 + [TST2]S1 + "-" : Next
Call CHECK_EQUAL("Link unique 1-1", R, "JA-IB-HC-GD-FE-EF-DG-CH-BI-AJ-") From XUNIT

Call FINISH From XUNIT
Return "db test done"

