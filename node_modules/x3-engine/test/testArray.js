var z = require('x3-engine/lib/runtime').instructions,r=require,e=exports,p=[],B=z.B,NL=z.NL,A=z.A,REQ=z.REQ,C=z.C,CALL=z.CALL,F=z.F,RET=z.RET,GO=z.GO,ONERRGO=z.ONERRGO,DECL=z.DECL,SET=z.SET,V=z.V,WHILE=z.WHILE,FORV=z.FORV,INDEX=z.INDEX,ADD=z.ADD,CALLJS=z.CALLJS,SUB=z.SUB,END=z.END,PROG=z.PROG,SIGMA=z.SIGMA,USUB=z.USUB,RANGE=z.RANGE,SORTA=z.SORTA,GOSUB=z.GOSUB,INSA=z.INSA,DELA=z.DELA;z.BEGIN(module);NL(0);z.MAIN(e);e.MAIN=B(CALL(REQ(r,C('XUNIT')),C('INIT'),[F('TRTCOU'),C(38)])
,NL(1),CALL(C(e),C('SIMPLE_TEST'),[])
,NL(1),CALL(C(e),C('SORT_TEST'),[])
,NL(1),CALL(C(e),C('INSERT_TEST'),[])
,NL(1),CALL(C(e),C('DELETE_TEST'),[])
,NL(1),CALL(REQ(r,C('XUNIT')),C('FINISH'),[])
,NL(1),RET(C("That's all folks"))); 

e.FILL=B(
NL(3),ONERRGO(C(e),'ERROR')
,NL(1),DECL('VS','STRINGS',A([C(1)]),A([C(10)]))
,NL(1),DECL('VI','INTS',A([C(10)]))
,NL(1),DECL('VS','LETTERS'),DECL('VS','DIGITS'),DECL('VS','LSORT'),DECL('VS','DSORT'),DECL('VS','LBYD'),DECL('VS','DBYL')
,NL(1),SET(V('LETTERS'),C('DAAFBCBBAF'))
,NL(1),SET(V('DIGITS'),C('5531244153'))
,NL(1),SET(V('LSORT'),C('AAABBBCDFF'))
,NL(1),SET(V('DSORT'),C('1123344555'))
,NL(1),SET(V('LBYD'),C('BFBAFBCAAD'))
,NL(1),SET(V('DBYL'),C('3551244513'))
,NL(1),SET(V('LSORTPART'),C('DAABBCFBAF'))
,NL(1),SET(V('ISORTPART'),C('5532441153'))

,NL(2),FORV('I',C(0),C(9),null,p,1,B(SET(INDEX(V('STRINGS'),[V('I')]),F('MID$',[V('LETTERS'),ADD(V('I'),C(1)),C(1)])),SET(INDEX(V('INTS'),[V('I')]),F('VAL',[F('MID$',[V('DIGITS'),ADD(V('I'),C(1)),C(1)])])))));p[1]=B(
NL(1),RET()); 

e.ERROR=B(
NL(3),CALLJS('sync',C('x3-engine/lib/helpers'),'print',A([SUB(C('ERROR'),F('ERRM'))]))
,NL(1),END()); 

PROG(e,'DUMP_S',['AR'],B(
NL(3),DECL('AS','AR',A([C(null)]),A([C(null)]))
,NL(1),END(SIGMA('INDCUM',[F('DIM',[V('AR'),USUB(C(1))]),SUB(ADD(F('DIM',[V('AR'),USUB(C(1))]),F('DIM',[V('AR'),C(1)])),C(1)),INDEX(V('AR'),[V('INDCUM')])])))); 

PROG(e,'DUMP_I',['AR'],B(
NL(3),DECL('AI','AR',A([C(null)]))
,NL(1),END(SIGMA('INDCUM',[F('DIM',[V('AR'),USUB(C(1))]),SUB(ADD(F('DIM',[V('AR'),USUB(C(1))]),F('DIM',[V('AR'),C(1)])),C(1)),F('NUM$',[INDEX(V('AR'),[V('INDCUM')])])])))); 

PROG(e,'SLICE_NOBASE',['S1','S2','I1','I2'],B(
NL(3),DECL('AS','S1',A([C(null)]),A([C(null)])),DECL('AS','S2',A([C(null)]),A([C(null)]))
,NL(1),DECL('AI','I1',A([C(null)])),DECL('AI','I2',A([C(null)]))
,NL(1),CALL(REQ(r,C('XUNIT')),C('CHECK_EQUAL'),[C('Char slice 3..5'),CALL(C(e),C('DUMP_S'),[V('S1')]),F('MID$',[V('LETTERS'),C(4),C(3)])])
,NL(1),CALL(REQ(r,C('XUNIT')),C('CHECK_EQUAL'),[C('Char slice 3..'),CALL(C(e),C('DUMP_S'),[V('S2')]),F('RIGHT$',[V('LETTERS'),C(4)])])
,NL(1),CALL(REQ(r,C('XUNIT')),C('CHECK_EQUAL'),[C('Integer slice 3..5'),CALL(C(e),C('DUMP_I'),[V('I1')]),F('MID$',[V('DIGITS'),C(4),C(3)])])
,NL(1),CALL(REQ(r,C('XUNIT')),C('CHECK_EQUAL'),[C('Integer slice 3..'),CALL(C(e),C('DUMP_I'),[V('I2')]),F('RIGHT$',[V('DIGITS'),C(4)])])
,NL(1),END())); 

PROG(e,'SLICE_BASE',['S1','S2'],B(
NL(3),DECL('AS','S1',A([C(null)]),A([RANGE(C(1))])),DECL('AS','S2',A([C(null)]),A([RANGE(C(3))]))
,NL(1),CALL(REQ(r,C('XUNIT')),C('CHECK_EQUAL'),[C('Char slice 3..5'),CALL(C(e),C('DUMP_S'),[V('S1')]),F('MID$',[V('LETTERS'),C(4),C(3)])])
,NL(1),CALL(REQ(r,C('XUNIT')),C('CHECK_EQUAL'),[C('Char slice 3..'),CALL(C(e),C('DUMP_S'),[V('S2')]),F('RIGHT$',[V('LETTERS'),C(4)])])
,NL(1),CALL(REQ(r,C('XUNIT')),C('CHECK_EQUAL'),[C('S1(1)'),INDEX(V('S1'),[C(1)]),F('MID$',[V('LETTERS'),C(4),C(1)])])
,NL(1),CALL(REQ(r,C('XUNIT')),C('CHECK_EQUAL'),[C('S1(3)'),INDEX(V('S1'),[C(3)]),F('MID$',[V('LETTERS'),C(6),C(1)])])
,NL(1),CALL(REQ(r,C('XUNIT')),C('CHECK_EQUAL'),[C('S2(3)'),INDEX(V('S2'),[C(3)]),F('MID$',[V('LETTERS'),C(4),C(1)])])
,NL(1),CALL(REQ(r,C('XUNIT')),C('CHECK_EQUAL'),[C('S2(9)'),INDEX(V('S2'),[C(9)]),F('MID$',[V('LETTERS'),C(10),C(1)])])
,NL(1),END())); 

PROG(e,'SORT_BASE',['S','I'],B(
NL(3),DECL('AS','S',A([C(null)]),A([RANGE(C(4))])),DECL('AS','I',A([C(null)]),A([RANGE(C(2))]))
,NL(1),CALL(REQ(r,C('XUNIT')),C('CHECK_EQUAL'),[C('S indexing'),INDEX(V('S'),[C(4)]),C('D')])
,NL(1),CALL(REQ(r,C('XUNIT')),C('CHECK_EQUAL'),[C('S indexing'),INDEX(V('S'),[C(13)]),C('F')])
,NL(1),CALL(REQ(r,C('XUNIT')),C('CHECK_EQUAL'),[C('I indexing'),INDEX(V('I'),[C(2)]),C(5)])
,NL(1),CALL(REQ(r,C('XUNIT')),C('CHECK_EQUAL'),[C('I indexing'),INDEX(V('I'),[C(11)]),C(3)])
,NL(1),SORTA(C(null),[V('S'),V('I')],[])
,NL(1),CALL(REQ(r,C('XUNIT')),C('CHECK_EQUAL'),[C('Sorta S,D'),CALL(C(e),C('DUMP_S'),[V('STRINGS')]),V('LSORT')])
,NL(1),CALL(REQ(r,C('XUNIT')),C('CHECK_EQUAL'),[C('Sorta S,D'),CALL(C(e),C('DUMP_I'),[V('INTS')]),V('DBYL')])
,NL(1),CALL(REQ(r,C('XUNIT')),C('CHECK_EQUAL'),[C('S indexing'),INDEX(V('S'),[C(4)]),C('A')])
,NL(1),CALL(REQ(r,C('XUNIT')),C('CHECK_EQUAL'),[C('S indexing'),INDEX(V('S'),[C(13)]),C('F')])
,NL(1),CALL(REQ(r,C('XUNIT')),C('CHECK_EQUAL'),[C('I indexing'),INDEX(V('I'),[C(2)]),C(3)])
,NL(1),CALL(REQ(r,C('XUNIT')),C('CHECK_EQUAL'),[C('I indexing'),INDEX(V('I'),[C(11)]),C(3)])
,NL(1),SORTA(C(null),[V('I'),V('S')],[])
,NL(1),CALL(REQ(r,C('XUNIT')),C('CHECK_EQUAL'),[C('I indexing'),INDEX(V('I'),[C(2)]),C(1)])
,NL(1),CALL(REQ(r,C('XUNIT')),C('CHECK_EQUAL'),[C('I indexing'),INDEX(V('I'),[C(11)]),C(5)])
,NL(1),END())); 

PROG(e,'SIMPLE_TEST',[],B(
NL(3),GOSUB(C(e),'FILL')
,NL(1),CALL(REQ(r,C('XUNIT')),C('CHECK2'),[C('func DUMP_S(STRINGS) From testArray'),V('LETTERS')])
,NL(1),CALL(REQ(r,C('XUNIT')),C('CHECK2'),[C('func DUMP_I(INTS) From testArray'),V('DIGITS')])
,NL(1),CALL(C(e),C('SLICE_NOBASE'),[INDEX(V('STRINGS'),[RANGE(C(3),C(5))]),INDEX(V('STRINGS'),[RANGE(C(3))]),INDEX(V('INTS'),[RANGE(C(3),C(5))]),INDEX(V('INTS'),[RANGE(C(3))])])
,NL(1),CALL(C(e),C('SLICE_BASE'),[INDEX(V('STRINGS'),[RANGE(C(3),C(5))]),INDEX(V('STRINGS'),[RANGE(C(3))])])
,NL(1),END())); 

PROG(e,'SORT_TEST',[],B(
NL(3),GOSUB(C(e),'FILL')
,NL(1),SORTA(C(null),[V('STRINGS'),V('INTS')],[])
,NL(1),CALL(REQ(r,C('XUNIT')),C('CHECK_EQUAL'),[C('Sorta S,D'),CALL(C(e),C('DUMP_S'),[V('STRINGS')]),V('LSORT')])
,NL(1),CALL(REQ(r,C('XUNIT')),C('CHECK_EQUAL'),[C('Sorta S,D'),CALL(C(e),C('DUMP_I'),[V('INTS')]),V('DBYL')])
,NL(1),SORTA(C(null),[V('INTS'),V('STRINGS')],[])
,NL(1),CALL(REQ(r,C('XUNIT')),C('CHECK_EQUAL'),[C('Sorta D,S'),CALL(C(e),C('DUMP_I'),[V('INTS')]),V('DSORT')])
,NL(1),CALL(REQ(r,C('XUNIT')),C('CHECK_EQUAL'),[C('Sorta D,S'),CALL(C(e),C('DUMP_S'),[V('STRINGS')]),V('LBYD')])
,NL(1),GOSUB(C(e),'FILL')
,NL(1),CALL(C(e),C('SORT_BASE'),[V('STRINGS'),V('INTS')])
,NL(1),GOSUB(C(e),'FILL')
,NL(1),SORTA(C(null),[INDEX(V('STRINGS'),[RANGE(C(2),C(6))]),INDEX(V('INTS'),[RANGE(C(2),C(6))])],[])
,NL(1),CALL(REQ(r,C('XUNIT')),C('CHECK_EQUAL'),[C('Sorta partial'),CALL(C(e),C('DUMP_S'),[V('STRINGS')]),V('LSORTPART')])
,NL(1),CALL(REQ(r,C('XUNIT')),C('CHECK_EQUAL'),[C('Sorta partial'),CALL(C(e),C('DUMP_I'),[V('INTS')]),V('ISORTPART')])
,NL(1),END())); 

PROG(e,'INSERT_TEST',[],B(
NL(3),GOSUB(C(e),'FILL')
,NL(1),INSA([C(2),C(3)],[V('STRINGS'),V('INTS')])
,NL(1),SET(INDEX(V('STRINGS'),[C(2)]),C('X')),SET(INDEX(V('STRINGS'),[C(3)]),C('Y')),SET(INDEX(V('STRINGS'),[C(4)]),C('Z'))
,NL(1),CALL(REQ(r,C('XUNIT')),C('CHECK_EQUAL'),[C('Insa S'),CALL(C(e),C('DUMP_S'),[V('STRINGS')]),ADD(ADD(F('LEFT$',[V('LETTERS'),C(2)]),C('XYZ')),F('MID$',[V('LETTERS'),C(3),C(5)]))])
,NL(1),CALL(REQ(r,C('XUNIT')),C('CHECK_EQUAL'),[C('Insa I'),CALL(C(e),C('DUMP_I'),[V('INTS')]),ADD(ADD(F('LEFT$',[V('DIGITS'),C(2)]),C('000')),F('MID$',[V('DIGITS'),C(3),C(5)]))])
,NL(1),GOSUB(C(e),'FILL')
,NL(1),INSA([C(2),C(3),C(7)],[V('STRINGS'),V('INTS')])
,NL(1),SET(INDEX(V('STRINGS'),[C(2)]),C('X')),SET(INDEX(V('STRINGS'),[C(3)]),C('Y')),SET(INDEX(V('STRINGS'),[C(4)]),C('Z'))
,NL(1),CALL(REQ(r,C('XUNIT')),C('CHECK_EQUAL'),[C('Insa S'),CALL(C(e),C('DUMP_S'),[V('STRINGS')]),ADD(ADD(ADD(F('LEFT$',[V('LETTERS'),C(2)]),C('XYZ')),F('MID$',[V('LETTERS'),C(3),C(3)])),F('RIGHT$',[V('LETTERS'),C(9)]))])
,NL(1),CALL(REQ(r,C('XUNIT')),C('CHECK_EQUAL'),[C('Insa I'),CALL(C(e),C('DUMP_I'),[V('INTS')]),ADD(ADD(ADD(F('LEFT$',[V('DIGITS'),C(2)]),C('000')),F('MID$',[V('DIGITS'),C(3),C(3)])),F('RIGHT$',[V('DIGITS'),C(9)]))])
,NL(1),END())); 

PROG(e,'DELETE_TEST',[],B(
NL(3),GOSUB(C(e),'FILL')
,NL(1),DELA([C(2),C(3)],[V('STRINGS'),V('INTS')])
,NL(1),SET(INDEX(V('STRINGS'),[C(7)]),C('X')),SET(INDEX(V('STRINGS'),[C(8)]),C('Y')),SET(INDEX(V('STRINGS'),[C(9)]),C('Z'))
,NL(1),CALL(REQ(r,C('XUNIT')),C('CHECK_EQUAL'),[C('Dela S'),CALL(C(e),C('DUMP_S'),[V('STRINGS')]),ADD(ADD(F('LEFT$',[V('LETTERS'),C(2)]),F('RIGHT$',[V('LETTERS'),C(6)])),C('XYZ'))])
,NL(1),CALL(REQ(r,C('XUNIT')),C('CHECK_EQUAL'),[C('Dela I'),CALL(C(e),C('DUMP_I'),[V('INTS')]),ADD(ADD(F('LEFT$',[V('DIGITS'),C(2)]),F('RIGHT$',[V('DIGITS'),C(6)])),C('000'))])
,NL(1),GOSUB(C(e),'FILL')
,NL(1),DELA([C(2),C(3),C(7)],[V('STRINGS'),V('INTS')])
,NL(1),SET(INDEX(V('STRINGS'),[C(5)]),C('X')),SET(INDEX(V('STRINGS'),[C(6)]),C('Y')),SET(INDEX(V('STRINGS'),[C(7)]),C('Z'))
,NL(1),CALL(REQ(r,C('XUNIT')),C('CHECK_EQUAL'),[C('Dela S'),CALL(C(e),C('DUMP_S'),[V('STRINGS')]),ADD(ADD(ADD(F('LEFT$',[V('LETTERS'),C(2)]),F('MID$',[V('LETTERS'),C(6),C(3)])),C('XYZ')),F('RIGHT$',[V('LETTERS'),C(9)]))])
,NL(1),CALL(REQ(r,C('XUNIT')),C('CHECK_EQUAL'),[C('Dela I'),CALL(C(e),C('DUMP_I'),[V('INTS')]),ADD(ADD(ADD(F('LEFT$',[V('DIGITS'),C(2)]),F('MID$',[V('DIGITS'),C(6),C(3)])),C('000')),F('RIGHT$',[V('DIGITS'),C(9)]))])
,NL(1),END())); 
