"use strict";

var syracuse = require('syracuse-main/lib/syracuse');
var helpers = require('syracuse-core/lib/helpers');
var globals = require('streamline/lib/globals');
var adminHelper = require("syracuse-collaboration/lib/helpers").AdminHelper;
var flows = require("streamline/lib/util/flows");

var qmodule = QUnit.module;

globals.context = globals.context || {};
globals.context.session = {
       id: helpers.uuid.generate(),
       getUserLogin: function(_) { return "guest" },
       getUserProfile: function(_) { 
             return {
                    user: function(_) {
                           var db = adminHelper.getCollaborationOrm(_);
                           return db.fetchInstance(_, db.model.getEntity("user"), {jsonWhere: {login: "guest"}});
                    }
             }
       }
}

var doStop = false; 

qmodule("msoffice", {
	setup: function() {},
	teardown: function() {
		if (doStop) {
			setTimeout(function() { process.kill(process.pid); }, 100)
		}
	}
});

asyncTest("No testcase, used to create some test data!", 0, function(_) {
/* uncomment to create 100 users	
	var db = adminHelper.getCollaborationOrm(_);
	var entity = db.model.getEntity("user");
	for (var i = 0; i < 100; i++) {
		var user = entity.createInstance(_, db, null);
		user.login(_, "tst_" + i);
		user.lastName(_, "test data user " + i);
		user.password(_, "x3");
		user.save(_);
		
		//var diagnoses = [];
		//user.getAllDiagnoses(_, diagnoses)
		//console.log(diagnoses);
	}
*/	
	start();
});


asyncTest("stop tests", 0, function(_) {
	doStop = true;
	start();
});