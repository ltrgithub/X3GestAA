"use strict";

var fs = require('fs');
var zip = require('streamline-zip');
var excelDefines = require("../helpers").defines;
var helpers = require("syracuse-core/lib/helpers");

exports.render = function(_, response, url) {
	new zip.Zip(response, {
		filter: function(_, name, entry) {
			return name !== '.svn'; 
		},
		transform: function(_, contents, entry) {
			if (entry.name !== 'xl/sharedStrings.xml') return contents;
			var parts = (url.split("?")[0] || "").split("/");
			var repr = url.match(/\?.*representation=(.*)\./);
			var connectUrl = parts.slice(0, 3).join('/');
			var resourceUrl = url.substring(connectUrl.length);
			var dsName = excelDefines.x3CustomPropDsPrefix+"."+url.split("?")[0].split('/').slice(-2).join('_');
			var datasources = {};
			var dsUuid = helpers.uuid.generate();
			datasources[dsUuid] = {
				$uuid: dsUuid,
				dsName: dsName,
				title: dsName,
				application: parts[4],
				contract: parts[5],
				endpoint: parts[6],
				entity: parts[7],
				representation: (repr && repr[1]) || "",
				$url: resourceUrl,
				$mustRefresh: true
			}
			//
			return new Buffer(contents.toString('utf8').
				replace("___dictionnary___", JSON.stringify({
					serverUrlAddress: excelDefines.serverUrlAddress,
					documentUrlAddress: excelDefines.documentUrlAddress,
					documentTitleAddress: excelDefines.documentTitleAddress,
					datasourcesAddress: excelDefines.datasourcesAddress
				})).
				replace("___serverUrl___", connectUrl).
				replace("___documentUrl___", "").
				replace("___documentTitle___", "").
				replace("___datasources___", JSON.stringify(datasources))
				);
		}		
	}).add(_, {
		path: __dirname + "/template",
	}).finish(_);
};
