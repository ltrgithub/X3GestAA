"use strict";

// Used be excelInterface if excel is opened

var helpers = require('syracuse-core/lib/helpers');
var msofficeHelpers = require('msoffice/lib/helpers');
var base64 = require("msoffice/lib/Base64").Base64;

function ExcelInterfaceImpl() {}

exports.ExcelInterfaceImpl = helpers.defineClass(ExcelInterfaceImpl, null, {

	getResourceUrl: function() {
		return external.getSyracuseOfficeCustomData().getResourceUrl();
	},
	attachResourceUrl: function(url) {
		external.getSyracuseOfficeCustomData().setResourceUrl(url);
	},
	createDatasource: function(mailMergeData, url) {
		external.createDatasource(JSON.stringify(mailMergeData));
	},
	createExcelTemplate: function(layoutBoxes, data, refreshOnly) {
		var jsonData = JSON.stringify({
			"layout": layoutBoxes,
			"data": data,
			"refreshOnly": refreshOnly
		});
		external.createExcelTemplate(jsonData); // add data to the template to be able to generate a preview
	},
	populateExcelTemplate: function(proto, data) {
		external.populateExcelTemplate(JSON.stringify({
			"data": data,
			"proto": proto
		}));
	},
	// Used for saving doc to syracuse
	getDocumentContent: function() {
		return base64.raw_decode(external.GetDocumentContent());
	},
	getDocumentTitle: function() {
		return external.getSyracuseOfficeCustomData().getDocumentTitle();
	},
	setDocumentTitle: function(value) {
		external.getSyracuseOfficeCustomData().setDocumentTitle(value);
		external.getSyracuseOfficeCustomData().writeDictionaryToDocument();
	},
	getDocumentUrl: function() {
		return external.getSyracuseOfficeCustomData().getDocumentUrl();
	},
	setDocumentUrl: function(value) {
		external.getSyracuseOfficeCustomData().setDocumentUrl(value);
		external.getSyracuseOfficeCustomData().writeDictionaryToDocument();
	},
	getDocumentRepresentation: function() {
		return external.getSyracuseOfficeCustomData().getDocumentRepresentation();
	},
	getDocumentLocale: function() {
		return external.getDocumentLocale();
	},
	getOriginalFileName: function() {
		return external.getSyracuseOfficeCustomData().getOriginalFileName();
	},
	notifySaveDocumentDone: function(value) {
		// Just notify user
		external.NotifySaveDocumentDone();
	},
	getSyracuseDocumentType: function() {
		//return "excel-mailmerge";
		// return "excel-report";
		// return "excel-report-tpl";		
		return external.getSyracuseDocumentType();
	},
	getDocumentFilename: function() {
		return external.getDocumentFilename();
	},
	expectedVersion: function(value) {
		if ("expectedVersion" in external) {
			external.expectedVersion(value);
		}
	},
	signalError: function(closeBrowser, errorText) {
		external.signalError(closeBrowser, errorText);
	}
});