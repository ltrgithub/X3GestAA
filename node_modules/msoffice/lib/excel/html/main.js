"use strict";
var _site = require('syracuse-ui/lib/site/site');
var _reactField = require('syracuse-ui/lib/field/reactField');
var _siteLoader = require('msoffice/lib/siteLoader');
var ExcelReportPage = require("msoffice/lib/excel/html/excelReportPage").ExcelReportPage;
var ExcelPage = require("msoffice/lib/excel/html/excelPage").ExcelPage;
var ExcelDocument = require('msoffice/lib/excel/html/excelDocument').ExcelDocument;
var ExcelDatasourcePage = require("msoffice/lib/excel/html/excelDataSourcePage").ExcelDatasourcePage;
var ExcelInterface = require('msoffice/lib/excel/html/excelInterface').ExcelInterface;
var _locale = require('streamline-locale');

exports.main = function(){
    try {
        var site = _site.create();
        var root = document.createElement("div");
        root.id = "s_app_slot";
        site.layoutSlot = site.siteApp = document.body.appendChild(root);
        syra_pageBuilder.types.excelDatasource = ExcelDatasourcePage;
        syra_pageBuilder.types.worksheet = ExcelPage;
        syra_pageBuilder.types.excelreport = ExcelReportPage;
        _siteLoader.initialize(site);
        site.isExcelLoaded = !!(external && external.Application);
        site.isOfficeSite = true;
        site.isExcelOfficeConfig = document.location.href.indexOf("excelconfig") >= 0;
        
        site.office_checkLogon = function(end){
            var self = this;
            if (!self.office_logon_done) {
                if (self.isExcelOfficeConfig) {
                    self.excelDocument = new ExcelDocument();
                    self.onMainPageChange = function($itemPage){
                        this.newAddinLink = null;
                        _site.Site.prototype.onMainPageChange.apply(this, arguments);
                        this._addNewAddinLink();
                        this.mainPage.onSelectRecord = function(result){
                            if (Object.keys(result).length) {
                                var first = result[Object.keys(result)[0]];
                                external.onSelectRecord(JSON.stringify(first.$prototype), JSON.stringify(first.dataset));
                            }
                        };
                        var excelDatasourceScreen = this.isExcelOfficeConfig && $itemPage && $itemPage.urlSeg.params.source === "excelDataSource";
                        if (!excelDatasourceScreen && this.$facet != "$query") {
                            this.excelDocument.autoLoad();
                        }
                        return this.mainPage;
                    };
                    window.syra_office_local = _locale.resources(module)();
                    self.isExcelLoaded && external.onLogon();
                    syra_ajax.get({
                        url: "/sdata/syracuse/collaboration/syracuse/moduleVersions('officeAddin')?representation=moduleVersion.$details",
                        success: function(data, response){
                            if (data && data.version) {
                                if (!self.isExcelOfficeConfig) {
                                    external.expectedVersion && external.expectedVersion(data.version);
                                }
                                self._hasNewAddin = (self.isExcelLoaded && (external.GetAddinVersion() < data.version)) || !self.isExcelLoaded;
                                //self._addNewAddinLink();
                            }
                        }
                    });
                }
                else {
                    self.excelInterface = new ExcelInterface();
                    self.drawPage = function(){
                        var self = this;
                        syra_pageBuilder.types.excelreport = ExcelReportPage;
                        self.body = document.createElement("div");
                        self.body.id = "s-site-body";
                        self.layoutSlot.appendChild(self.body);
                        self.logon(function(){
                            self._onAfterLogon();
                        });
                    };
                    window.syra_office_local = _locale.resources(module)();
                    var title = document.createElement("div");
                    title.className = "s-page-title";
                    title.textContent = syra_office_local.connecting;
                    self.body.appendChild(title);
                    self.excelInterface.onLogin();
                }
				self.office_logon_done = true;				
            }
			end();
        }        
        site._addNewAddinLink = function(){
            if (this._hasNewAddin && !this.newAddinLink) {
                this.newAddinLink = syra_button.add({
                    parent: this,
                    text: syra_office_local.new_addin,
                    css: "s-office-new-addin-link",
                    fontIcon: "diagnose"
                });
                this.newAddinLink.link.href = "/msoffice/lib/general/addIn/SyracuseOfficeAddinsSetup.EXE";
                if (this.header) {
                    this.header.appendChild(this.newAddinLink.link);
                }
                else {
                    this.body.insertBefore(this.newAddinLink.link, this.body.firstChild);
                }
                this.resizeItem();
            }
        }
        
        site.load();
        site.addReactField = function(slot, $prototype, $dataset, $bind){
            _reactField.add(slot, $prototype, $dataset, $bind);
        }
        loadReactSite();
    } 
    catch (error) {
        console.log(error);
    }
};
function loadReactSite(){
    var wf = document.createElement('script');
    wf.src = "/syracuse-react/dist/js/" + (document.location.href.indexOf("/main_debug.html") >= 0 ? "app_debug.js" : "app.js");
    wf.type = 'text/javascript';
    wf.async = 'true';
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(wf, s);
}

if (require.main == module) 
    exports.main();
