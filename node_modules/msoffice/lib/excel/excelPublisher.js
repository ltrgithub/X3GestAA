"use strict"

var helpers = require('syracuse-core/lib/helpers');
var forEachKey = helpers.object.forEachKey;

exports.getPrototype = function(facetName, onSuccess, onError) {
	var result = {};
	if(facetName == "$details") {
        var docUrl = document.site.excelDocument.documentUrl;
        // test stub >>>
//        var docUrl = "/sdata/syracuse/collaboration/syracuse/documents('1d1bb656-da30-4bbe-95ae-343b8412d3f6')?representation=documentExcel.$details";
//        var docUrl = "/sdata/syracuse/collaboration/syracuse/documents('67d5337a-e56e-4e75-8e7e-2e162122c798')?representation=documentExcel.$details";
        // test <<<
        if(docUrl) {
            document.controller.loadRepresentation(null, docUrl, function(response){
                var repr = response.$representation;
                repr.$prototype = repr.$prototype || {};
                // excel specific prototype and article hack
                repr.$article = {
                    $layout: {
                    	$items: [{
                    		$category: "section",
                    		$layout: {
		                        $items: [{
		                            "$category": "block",
		                            "$expression": "{description} published by {owner} on {documentDate}, shared with {teams}"
		                        }]
		                	}
                    	}]
                   }
                }
                //
                onSuccess(repr);
            });
		} else {
			result.$prototype = {
	            $: {
	            },
	            $links: {
                    $edit: {
                        $title: "Publish",
                        $type: "application/json;vnd.sage=syracuse",
                        $url: "/sdata/syracuse/collaboration/syracuse/documents/$template/$workingCopies?representation=documentExcel.$edit",
                        $method: "POST"
                    }
                }
	        }
		    onSuccess(result);
		}
    }
}

var _actions = {
	$saveDocument: function(resource) {
		document.site.excelDocument.publishDocument("",
        		null, null, function(data, response) {
        			// show diagnoses as server doesn't send diagnoses in this case
        			document.site.showDiagnoses({
        				$diagnoses: [{severity: "info", message: "The document has been saved"}]
        			});
        		});	
	}
}

function _applyActions(resource) {
	var result = {};
	if(resource.$actions)
		forEachKey(resource.$actions, function(key, action) {
			if(!action.$isRequested)
				return;
			result = _actions[key] && _actions[key](resource);
			action.$isRequested = false;
		}); 
	return result;
}

exports.dispatcher = {
	GET: function(excelQuery, id, data, onSuccess, onError) {
        var docUrl = document.site.excelDocument.documentUrl;
        //		alert("drawbox enter:" + docUrl);
        // test stub >>>
//        var docUrl = "/sdata/syracuse/collaboration/syracuse/documents('1d1bb656-da30-4bbe-95ae-343b8412d3f6')?representation=documentExcel.$details";
//        var docUrl = "/sdata/syracuse/collaboration/syracuse/documents('67d5337a-e56e-4e75-8e7e-2e162122c798')?representation=documentExcel.$details";
        // test <<<
        if(docUrl)
        	document.controller.sendRequest(null, {$location: {$url: docUrl}}, onSuccess, onError);
    },
    PUT: function(excelQuery, id, data, onSuccess, onError) {
    	var result = null;
    	// only actions for now
    	if(data) {
    		_applyActions(data);
    	}
    	onSuccess(result);
    }
}