"use strict";

var fs = require('fs');
var zip = require('streamline-zip');
var excelDefines = require("../helpers").defines;
var helpers = require("syracuse-core/lib/helpers");

exports.render = function(_, response, url) {
	new zip.Zip(response, {
		filter: function(_, name, entry) {
			return name !== '.svn'; 
		},
		transform: function(_, contents, entry) {

			if (entry.name !== 'customXml/item1.xml') return contents;

			var parts = (url.split("?")[0] || "").split("/");
			var repr = url.match(/\?.*representation=(.*)\./);
			var connectUrl = parts.slice(0, 3).join('/');
			var resourceUrl = url.substring(connectUrl.length);
			// TODO: Maybe change to generic structure
			var dsName = excelDefines.x3CustomPropDsPrefix+"."+url.split("?")[0].split('/').slice(-2).join('_');
			var datasources = {};
			var dsUuid = helpers.uuid.generate();
			datasources[dsUuid] = {
				$uuid: dsUuid,
				dsName: dsName,
				title: dsName,
				application: parts[4],
				contract: parts[5],
				endpoint: parts[6],
				entity: parts[7],
				representation: (repr && repr[1]) || "",
				$url: resourceUrl,
				$mustRefresh: true
			}
				
			var customData = JSON.stringify({
				/*
				serverUrlAddress: excelDefines.serverUrlAddress,
				documentUrlAddress: excelDefines.documentUrlAddress,
				documentTitleAddress: excelDefines.documentTitleAddress,
				datasourcesAddress: excelDefines.datasourcesAddress,
				*/
				serverUrl: connectUrl,
				documentUrl: "",
				documentTitle: "", 
				datasources: datasources});
			
			var template = contents.toString('utf8');
			var document = template.replace("___SYRACUSE_XML_DATA___", customData);
			return new Buffer(document);					
		}		
	}).add(_, {
		path: __dirname + "/template",
	}).finish(_);
};
