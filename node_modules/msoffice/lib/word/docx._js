"use strict";

var fs = require('fs');
var zip = require('streamline-zip');
var helpers = require("syracuse-core/lib/helpers");

exports.render = function(_, response, url, urlRep) {
	var parts 		= (urlRep.split("?")[0] || "").split("/");
	var connectUrl 	= parts.slice(0, 3).join('/');
	var resourceUrl = urlRep.substring(connectUrl.length);
	
	var createMode 	= url.match(/\?.*createMode=(.*?)\./);
	var doc_uuid 	= url.match(/\?.*doc_uuid=(.*?)\./);

	/* Modes: 
	 * 1 create new blank file
	 * 2 create file by word wizard
	 * 3 create file by template from doc storage
	 */
	createMode = createMode && createMode[1] || "1";
	
	/* When createMode == 3
	 * uuid of the document to use as template
	 */
	doc_uuid   = doc_uuid && doc_uuid[1] || "";
	
	var customData = JSON.stringify({
		"serverUrl":   connectUrl,
		"resourceUrl": resourceUrl,
		"createMode":  createMode,
		"forceRefresh": "1",
		"dataSourceUuid": ""
	});

	customData = customData.replace("&", "&amp;");
	
	if (createMode != "3") {
		new zip.Zip(response, {
			filter: function(_, name, entry) {	return name !== '.svn';	},
			transform: function(_, contents, entry) {
				if (entry.name !== 'customXml/item1.xml') return contents;
				var template = contents.toString('utf8');
				var template = template.replace("___SYRACUSE_XML_DATA___", customData);
				return new Buffer(template);					
			}		
		}).add(_, { path: __dirname + "/templates/new_doc"}).finish(_);
	}
	else if (createMode == "3")
	{
		// TODO: Do not read a local fake template but a document from storage
		new zip.Zip(response, {
			filter: function(_, name, entry) {	return name !== '.svn';	},
			transform: function(_, contents, entry) {
				if (entry.name !== 'customXml/item1.xml') return contents;
				var template = contents.toString('utf8');
				var template = template.replace("___SYRACUSE_XML_DATA___", customData);
				return new Buffer(template);					
			}		
		}).add(_, {	path: __dirname + "/templates/template_1"}).finish(_);
	}
};
