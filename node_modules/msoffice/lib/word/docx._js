"use strict";

var fs = require('fs');
var zip = require('streamline-zip');
var unzip = require('streamline-zip/lib/unzip/unzip');
var helpers = require("syracuse-core/lib/helpers");
var httpHelper = require('syracuse-sdata/lib/httpHelper');
var docxHelper = require("./docxHelper").DocxHelper;

exports.render = function(_, ctx, result,  proto, headers, statusCode) {
	
	_docx_set_headers(_, ctx, result, proto, headers, statusCode);

	var format = ctx && ctx.parameters && ctx.parameters.format;

	// for testing
	// ------->
	var v6_doc_url = ctx && ctx.parameters && ctx.parameters.v6_doc_url;
	if (v6_doc_url) {
		return _docx_serve_v6_doc(_, ctx);
	}
	// <--------
	
	if (format.indexOf(httpHelper.mediaTypes.word_mailmerge) > -1) {
		return _docx_mailmerge(_, ctx, result, proto);
	} else if (format.indexOf(httpHelper.mediaTypes.word_report) > -1) {
		return _docx_word_report(_, ctx, result, proto);
	} 
};

function _docx_mailmerge(_, ctx, result, proto) {
	var createMode 	= (ctx.parameters && ctx.parameters.createMode) || "1";
	var doc_uuid 	= (ctx.parameters && ctx.parameters.doc_uuid) || "";

	switch (createMode) {
		case "use_tpl": 
			// 3 create file by template from doc storage
			createMode = "3";
			break;
		case "new_empty_doc": 
			// 1 create new blank file
			createMode = "1";
			break;
		case "new_word_tpl": 
			// 2 create file by word wizard
			createMode = "2";
			break;
		default:
			createMode = "1";
	}

	if ((createMode == "3") && (doc_uuid == "{document}")) {
		createMode = "1";	
	}

	var customData =  _docx_build_custom_data(_, ctx, result, createMode, "1");
	if (createMode != "3") {
		_docx_serve_empty_template(_, ctx, customData);
	}
	else if (createMode == "3")
	{
		_docx_serve_template(_, ctx, doc_uuid, customData);
	}
}

function _docx_word_report(_, ctx, result, prototype) {
	var reportMode = ctx && ctx.parameters && ctx.parameters.reportMode;
	if (reportMode === "new_tpl")
		return _docx_report_tpl(_, ctx, result, prototype);
	if (reportMode === "mod_tpl")
		return _docx_report_mod_tpl(_, ctx, result, prototype);
	return _docx_report(_, ctx, result, prototype);
}

function _docx_report_tpl(_, ctx, result, prototype) {
	_docx_serve_empty_template(_, ctx, _docx_build_custom_data(_, ctx, result, "rpt_build_tpl", "1"));
}

function _docx_report_mod_tpl(_, ctx, result, prototype) {
	var doc_uuid 	= (ctx.parameters && ctx.parameters.doc_uuid) || "";
	_docx_serve_template(_, ctx, doc_uuid, _docx_build_custom_data(_, ctx, result, "rpt_is_tpl", "1"));
}

function _docx_report(_, ctx, result, prototype) {
	var doc_uuid 	= (ctx.parameters && ctx.parameters.doc_uuid) || "";
	_docx_serve_template(_, ctx, doc_uuid, _docx_build_custom_data(_, ctx, result, "rpt_fill_tpl", "1"));
}

function _docx_build_custom_data_xml(customDataObj) {
	var customData = JSON.stringify(customDataObj);
	var customDataXml =
		"<SyracuseOfficeCustomData>" +
		customData.replace(/&/g, "&amp;") +
		"</SyracuseOfficeCustomData>";
	return customDataXml;
}

function _docx_build_custom_data(_, ctx, result, mode, refresh) {
	var urlRep = ctx.url + "?representation=" + ctx.parameters.representation;

	var parts 		= (urlRep.split("?")[0] || "").split("/");
	var connectUrl 	= parts.slice(0, 3).join('/');
	var resourceUrl = urlRep.substring(connectUrl.length);

	var queryParts = {};
	if (result && result.$url)
		queryParts = helpers.url.parseQueryString(result.$url.split("?")[1] || "");
	
	if(queryParts.where) resourceUrl += "&where=" + encodeURIComponent(queryParts.where); 
	if(queryParts.orderBy) resourceUrl += "&orderBy=" + encodeURIComponent(queryParts.orderBy); 
	
	return {
		"serverUrl":      connectUrl,
		"resourceUrl":    resourceUrl,
		"createMode":     mode,
		"forceRefresh":   refresh,
		"documentRepresentation": ctx.parameters.representation,
		"originalFileName": "",
		"supportedLocales": docxHelper.get_supported_locales(_),
		"documentUrl": "::documentUrl::"
	};
}

function _docx_set_headers(_, ctx, result, proto, headers, statusCode) {
	var filename;

	function format(expression, proto, res) {
		res = res || {};
		var value = expression && expression.replace(/\{(.*?)\}/g, function(match, p1) {
			return res[p1] || proto[p1] || p1;
		});
		return value;
	}

	filename = format(proto.$title + (proto.$description ? (" - " + proto.$description): ""), proto, result);

	headers["content-disposition"] = "attachment; filename=\"" + filename + ".docx\"";
	headers["content-type"] = httpHelper.mediaTypes.docx;
	headers["cache-control"] = "no-cache,must-revalidate";

	ctx.response.writeHead(statusCode, headers);
}

function _docx_serve_empty_template(_, ctx, customDataObj, test_template) {
	var tplPath = "/templates/new_doc";
	if (test_template && !test_template.indexOf("/") > -1) 
	{
		tplPath = "/templates/" + test_template;
	}
	
	var customDataXml = _docx_build_custom_data_xml(customDataObj);
	customDataXml = customDataXml.replace(/::documentUrl::/, "");
	docxHelper.serve_docx_dir(_, ctx.response, tplPath, customDataXml);
}

function _docx_serve_template(_, ctx, doc_uuid, customDataObj) {
	var documentUrl;
	var doc;

	if (ctx.parameters && ctx.parameters.test_template)
	{
		return _docx_serve_empty_template(_, ctx, customDataObj, ctx.parameters.test_template);
	}

	doc = docxHelper.get_template(_, doc_uuid);
	customDataObj.originalFileName = doc.originalFileName;
	
	return docxHelper.serve_docx_buffer(_, ctx.response, doc.content, 
		function(_, xmlData) {
			// Preserve old document url (for modifying templates)
			documentUrl = xmlData.match(/"documentUrl":"(.*?)"/);
			documentUrl = documentUrl && documentUrl[1];
		}, 
		function(_) {
			var customDataXml = _docx_build_custom_data_xml(customDataObj);
			documentUrl = documentUrl || "";
			customDataXml = customDataXml.replace(/::documentUrl::/, documentUrl);
			return customDataXml;
		});
}

function _docx_serve_v6_doc(_, ctx, x3BlobURL) {
	var customDataXml;
	var documentUrl;
	var document;
	var doc;

	// FOR TESTING
	// --------> 
	// v6
	//http://localhost:8124/sdata/syracuse/collaboration/syracuse/documents(%276cf3628d-3ef8-4149-9723-11b991381a24%27)/content?format=application/syracuse-word-report&v6_doc_url
	// v7
	//http://localhost:8124/sdata/syracuse/collaboration/syracuse/documents(%27e908a9f1-9139-45f8-98aa-6876b512dc5a%27)/content?format=application/syracuse-word-report&v6_doc_url
	// TODO: Buffer with document content
	var docUUID = ctx.url.match(/documents\('(.*?)'\)/);
	document = docxHelper.get_doc(_, docUUID[1]);
	// <-------------
	
	var isZipFile = docxHelper.is_docx_format(_, document.content);
	
	if (isZipFile == false) {
		var customDataObj = _docx_build_custom_data(_, ctx, null, "v6_doc_download", "1");
		customDataXml = _docx_build_custom_data_xml(customDataObj);
		customDataXml = customDataXml.replace(/::documentUrl::/, x3BlobURL);
		
		return docxHelper.serve_docx_dir(_, ctx.response, "/templates/new_doc", customDataXml);
	}
	else {
		docxHelper.serve_docx_buffer(_, ctx.response, document.content, 
			function(_, xmlData) {
				// Preserve old document url (for modifying templates)
				customDataXml 	= xmlData;
				documentUrl 	= xmlData.match(/"documentUrl":"(.*?)"/);
				documentUrl 	= documentUrl && documentUrl[1];
			}, 
			function(_) {
				if (!customDataXml) {
					var customDataObj = _docx_build_custom_data(_, ctx, null, "v6_doc", "1");
					var customDataXml = _docx_build_custom_data_xml(customDataObj);
					documentUrl = documentUrl || x3BlobURL;
					customDataXml = customDataXml.replace(/::documentUrl::/, documentUrl);
				}
				return customDataXml;
			});
	}
}
