"use strict";

var util = require("util");
var streams = require('streamline/lib/streams/streams');
var Template = require('syracuse-core/lib/resource/resourceProxy').Template;
var restUtils = require('./restUtils');


exports.getPrototype = function(_, context, entityName, type){
	var url = context.baseUrl.replace("/soap/", "/sdata/") + "/$prototypes('" + entityName + "." + type + "')";
	return restUtils.sendRequest(_, context, "GET", url);
}


exports.getRepresentation = function(_, context, $url, $resource){
	if (!$resource)
		$resource = {};
	$resource.$baseUrl =  context.baseUrl.replace("/soap/", "/sdata/");
	var url = (new Template($url)).resolve($resource);
	return restUtils.sendRequest(_, context, "GET", url);
}

exports.sendRequest = function(_, context, method, url){
	var header = {
	  host: context.request.headers.host,
	  accept: "application/json",
	  cookie: context.request.headers.cookie,
	  authorization: context.request.headers.authorization,
	  connection: context.request.headers.connection
	}
	
	var response = streams.httpRequest({
		method: method,
		url: url,
		headers: header
	}).end().response(_);

	var body = response.readAll(_);

	return {
		statusCode: response.statusCode,
		header: response.headers,
		body: body != null ? JSON.parse(body) : null
	}
}