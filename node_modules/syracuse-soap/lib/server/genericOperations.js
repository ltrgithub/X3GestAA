"use strict";

exports.get = function(entity) {

	var title = entity.charAt(0).toUpperCase() + entity.slice(1);
	var ns = entity + ":";
	var operations = {};

	// CREATE OPERATION
	var $create = {
		$title: "create" + title,
		$request: {
			$nokey: true,
			$type: "application/x-reference",
			$properties: {}
		},
		$response: {
			$nokey: true,
			$type: "application/x-reference",
			$properties: {
				$key: {
					$type: "application/x-string",
					$isMandatory: true
				}
			}
		}
	}
	$create.$request.$properties[entity] = {
		$type: ns + entity + "-edit--type",
		$isMandatory: true
	}

	// READ OPERATION
	var $read = {
		$title: "read" + title,
		$request: {
			$nokey: true,
			$type: "application/x-reference",
			$properties: {
				$key: {
					$isMandatory: true,
					$type: "xs:string"
				},
				$binary: {
					$type: "xs:boolean",
					$default: "false"
				}
			}
		},
		$response: {
			$nokey: true,
			$type: "application/x-reference",
			$properties: {}
		}
	}
	$read.$response.$properties[entity] = {
		$type: ns + entity + "-details--type"
	}

	// UPDATE OPERATION
	var $update = {
		$title: "update" + title,
		$request: {
			$nokey: true,
			$type: "application/x-reference",
			$properties: {}
		},
		$response: {
			$nokey: true,
			$type: "application/x-reference",
			$properties: {
				$key: {
					$type: "application/x-string",
					$isMandatory: true
				}
			}
		}
	}
	$update.$request.$properties[entity] = {
		$type: ns + entity + "-edit--type",
		$isMandatory: true
	}

	// DELETE OPERATION
	var $delete = {
		$title: "delete" + title,
		$request: {
			$nokey: true,
			$type: "application/x-reference",
			$properties: {
				$key: {
					$isMandatory: true,
					$type: "xs:string"
				}
			}
		},
		$response: {
			$nokey: true,
			$type: "application/x-reference",
			$properties: {
				deleted: {
					$type: "xs:boolean"
				}
			}
		}
	}

	// LIST OPERATION
	var $list = {
		$title: "list" + title,
		$request: {
			$nokey: true,
			$type: "application/x-reference",
			$properties: {
				$binary: {
					$type: "xs:boolean",
					$default: "false"
				},
				$count: {
					$type: "xs:integer",
					$default: "20"
				},
				$sdataWhere: {
					$type: "xs:string"
				},
				$orderBy: {
					$type: ns + "orderBy--list"
				},
				$pageInfo: {
					$type: "xs:string"
				}
			}
		},
		$response: {
			$nokey: true,
			$type: "application/x-reference",
			$properties: {
				$itemsPerPage: {
					$type: "xs:integer"
				},
				$pageInfo: {
					$type: "xs:string"
				},
				$first: {
					$type: "xs:string"
				},
				$previous: {
					$type: "xs:string"
				},
				$next: {
					$type: "xs:string"
				},
				$last: {
					$type: "xs:string"
				},
				$totalResults: {
					$type: "xs:integer"
				}
			}
		},
		$orderBy: {
			$nokey: true,
			$type: "application/x-reference",
			$properties: {
				$binding: {
					$type: "xs:string"
				},
				$descending: {
					$type: "xs:boolean",
					$default: "false"
				}
			}
		}
	}

	$list.$response.$properties[entity + "List"] = {
		$type: ns + entity + "-query--list"
	}

	return {
		$create: $create,
		$read: $read,
		$update: $update,
		$delete: $delete,
		$list: $list
	}

}