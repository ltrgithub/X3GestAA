"use strict";

var adminHelper = require("syracuse-collaboration/lib/helpers").AdminHelper;
var locale = require("syracuse-core/lib/locale");

exports.getSoapWebServices = function(_){
	var db = adminHelper.getCollaborationOrm(_);
	var soapWSEntity = db.getEntity(_, "soapWebService");
	var instances = db.fetchInstances(_, soapWSEntity);
	
	var insts = [];
	for (var i in instances){
		var instance = instances[i];
		var serializedInstance = instance.serializeInstance(_);
		insts.push(serializedInstance);
	}
	//console.log("INSTANCES="+JSON.stringify(insts, null,2));
	return insts;
};

exports.getSoapWebService = function(_, serviceName, context){
	var db = adminHelper.getCollaborationOrm(_);
	var model = db.model;
	var soapWSEntity = model.getEntity("soapWebService");
	if (!soapWSEntity)
		throw context.notFound("Entity not found: soapWebService");
	var filter = {sdataWhere: "name eq '"+serviceName + "'"};
	var instances = db.fetchInstances(_, soapWSEntity, filter);
	
	// Must not append
	if (instances.length > 1)
		throw context.notFound(locale.format(module, "severalWS", serviceName));

	if (instances.length !== 1)
		throw context.notFound(locale.format(module, "wsNotFound", serviceName));

	
	return db.fetchInstance(_, soapWSEntity, instances[0].$key);
};