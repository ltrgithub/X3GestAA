"use strict";

var poolManager = require("syracuse-soap/lib/generic/poolManager");
var nannyHelper = require("syracuse-soap/lib/generic/nannyHelper");

exports.statusEntity = {
	$titleTemplate: "Pool status: {alias}",
	$valueTemplate: "",
	$isPersistent: false,
	$canSave: false,
	$capabilities: "",
	$properties: {
		alias: {
			$title: "Alias",
			$isReadOnly: true,
		},
	},
	$relations: {
		infos: {
			$title: "Information",
			$type: "soapClassicPoolInfos",
			$capabilities: "append,sort,reorder",
			$isReadOnly: true,
			$isChild: true
		}
	},
	$init: function(_, instance, context) {
		function addInfosLine(_, infos) {
			var infosLine = instance.infos(_).add(_);
			infosLine.port(_, infos.port);
			infosLine.maxSize(_, infos.maxSize);
			infosLine.autoStart(_, infos.autoStart);
			infosLine.initSize(_, infos.initSize);
			infosLine.created(_, infos.created);
			infosLine.available(_, infos.available > 0 ? infos.available : 0);
		}
		var uuid = context && context.parameters && context.parameters.uuid;
		var alias = context && context.parameters && context.parameters.alias;
		if (uuid) {
			var result = nannyHelper._propagate(_, "POST", "getInfos", {
				uuid: uuid
			});
			if (!result) {
				var pool = poolManager.getPool(alias);
				if (!pool) throw new Error("Pool '" + alias + "' is not available");

				result = [pool.getInfo()];
			}
			instance.alias(_, alias);
			result.forEach_(_, function(_, i) {
				addInfosLine(_, i);
			});
			instance.infos(_).refresh(_);

		} else {
			throw new Error("No pool information (uuid and alias) provided");
		}
	}
};

exports.infoEntity = {
	$titleTemplate: "Pool infos: {alias}",
	$valueTemplate: "",
	$isPersistent: false,
	$canSave: false,
	$capabilities: "",
	$properties: {
		port: {
			$title: "Port",
			$isReadOnly: true,
			$isDefined: function(_, instance) {
				return instance.port(_) != null;
			}
		},
		maxSize: {
			$title: "Maximum size",
			$isReadOnly: true,
			$type: "integer"
		},
		autoStart: {
			$title: "Auto start",
			$isReadOnly: true,
			$type: "boolean"
		},
		initSize: {
			$title: "Initialization size",
			$isReadOnly: true,
			$type: "integer"
		},
		created: {
			$title: "Nb clients created",
			$isReadOnly: true,
			$type: "integer"
		},
		available: {
			$title: "Nb clients available",
			$isReadOnly: true,
			$type: "integer"
		},
	}
};