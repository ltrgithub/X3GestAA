"use strict";

var helpers = require('syracuse-core/lib/helpers');
var events = require('events');

exports.WritableBufferStream = helpers.defineClass(function() {
	this.buffers = [];
	this.buffer = null;
	this.writable = true;
}, events.EventEmitter, {
	write: function(data, encoding) {
		if (!this.writable) {
			throw new Error('Stream is not writable.');
		}
		if (typeof data == 'string') {
			data = new Buffer(data, encoding || 'utf8');
		} else if (!Buffer.isBuffer(data)) {
			throw new Error('First argument must be a buffer or a string.');
		}
		if (data.length) this.buffers.push(data);
		return true;
	},
	end: function(data, encoding) {
		if (data) {
			this.write(data, encoding);
		}
		this.buffer = Buffer.concat(this.buffers);
		this.buffers = null;
		this.writable = false;
		this.emit('close');
	},
	getBuffer: function() {
		if (this.buffer) return this.buffer;
		if (this.buffers.length !== 0) return Buffer.concat(this.buffers);
		return new Buffer(0);
	},
	toString: function(enc) {
		return this.getBuffer().toString(enc);
	}
});