var types = require("syracuse-core/lib/types/allTypes");

exports.parseValue = function(prop, val) {
	if (val == null)
		return val;

	switch (prop.type) {
		case "date":
		case "datetime":
		case "time":
			return types[prop.type].parse(val);
		case "decimal":
			return types.decimal.make(val, prop.scale);
		case "integer":
			if(typeof val === "object") return parseInt(val.toString(),10);
			if(typeof val === "string") return parseInt(val,10);
			else return val;
		default:
			return val;
	}
};
exports.formatValue = function(prop, val, name) {
	if (val == null)
		return val;

	switch (prop.type) {
		case "date":
		case "time":
		case "datetime":
		case "decimal":
			return val.toString();
		default:
			return val;
	}
};
exports.compare = function(prop, a, b) {
	switch (prop.type) {
		case "date":
		case "time":
		case "datetime":
			return a.compare(b);
		default:
			return a.compareTo(b);
	}
}