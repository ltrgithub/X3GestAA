"use strict";
exports.validate = function(value, constraints, errors) {
	if (value == null) {
		if (constraints.$isMandatory) 
			return errors.push("value is mandatory");
		// for string, check nullable only
//		if (!constraints.$isNullable) 
//			return errors.push("value cannot be null");
		return;
	}
	if (typeof value !== "string") {
		errors.push("value must be a string")
		return;
	}
	if (constraints.$enum != null && !constraints.$enum.some(function(elt){ return elt.$value == value})) 
		errors.push("value ("+value+") must be one of the values in enum array");
	if (constraints.$minLength !== null  && value.length < constraints.$minLength)
		errors.push("length must be at least " + constraints.$minLength);
	if (constraints.$maxLength  != null && value.length > constraints.$maxLength)
		errors.push("length must be at most " + constraints.$maxLength);
	if (constraints.$pattern  != null && !value.match(constraints.$pattern)) 
		errors.push("value ("+value+") does not match the regex pattern " + constraints.$pattern);
	if (constraints.$isMandatory) {
		if (value == "")
			errors.push("value is mandatory");
	}
};