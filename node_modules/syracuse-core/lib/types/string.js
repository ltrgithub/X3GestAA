"use strict";

var locale = require("syracuse-core/lib/locale");

exports.validate = function(value, constraints, errors) {
	if (value == null) {
		if (constraints.$isMandatory) return errors.push("value is mandatory");
		// for string, check nullable only
		//		if (!constraints.$isNullable) 
		//			return errors.push("value cannot be null");
		return;
	}
	if (typeof value !== "string") {
		errors.push(locale.format(module, "typeCheck", value, typeof value));
		return;
	}
	if (constraints.$enum != null && !constraints.$enum.some(function(elt) {
		return elt.$value == value;
	})) errors.push(locale.format(module, "enumCheck", value));
	if (constraints.$minLength !== null && value.length < constraints.$minLength) errors.push(locale.format(module, "minLength", constraints.$minLength));
	if (constraints.$maxLength != null && value.length > constraints.$maxLength) errors.push(locale.format(module, "maxLength", constraints.$maxLength));
	if (constraints.$pattern != null && !value.match(constraints.$pattern)) errors.push(constraints.$patternMessage || locale.format(module, "regexp", value, constraints.$pattern));
	if (constraints.$isMandatory) {
		if (value == "") errors.push(locale.format(module, "mandatory"));
	}
};