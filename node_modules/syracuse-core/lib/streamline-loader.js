"use strict";
var fs = require('fs');
var fsp = require('path');

module.exports = function(options) {
	var transformList = JSON.parse(fs.readFileSync(fsp.join(__dirname, '../../../shadow-modules/transform-list.json'), 'utf8'));
	var generatorsOk = (function() {
		try {
			eval("(function*(){})");
			return true;
		} catch (ex) {
			return false;
		}
	})();

	if (options.runtime === 'await') require('es6-promise');
	require("babel-plugin-streamline");
	require("babel-plugin-flow-comments");
	var options = {
		plugins: ['flow-comments', 'streamline'],
		extensions: [".js", "._js"],
		// don't transform files that we don't own!
		// ignore dependencies but not shadow-modules 
		ignore: function(path) {
			if (/\/node_modules\/fibers\//.test(path)) return true;
			if (/\/deps\//.test(path)) return true;
			var segs = path.split('/node_modules/');
			if (/\/shadow-modules$/.test(segs[0])) {
				var name = segs[1].split('/')[0];
				return transformList.indexOf(name) < 0 || segs.length > 3;
			} else {
				return segs.length >= 3;
			}
		},
		extra: {
			streamline: {
				cache: options.cache,
				verbose: options.verbose,
				runtime: options.runtime || "fibers",
			}
		}
	};
	if (generatorsOk) options.blacklist = ['regenerator'];
	require("babel/register")(options);
};