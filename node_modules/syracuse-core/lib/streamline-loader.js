"use strict";
var fs = require('fs');
var fsp = require('path');


module.exports = function(options) {
	var transformList = JSON.parse(fs.readFileSync(fsp.join(__dirname, '../../../shadow-modules/transform-list.json'), 'utf8'));

	// don't transform files that we don't own!
	// ignore dependencies but not shadow-modules 
	function ignore(path) {
		if (/[\\\/]node_modules[\\\/]fibers[\\\/]/.test(path)) return true;
		if (/[\\\/]deps[\\\/]/.test(path)) return true;
		if (/[\\\/]shadow-modules[\\\/]/.test(path)) return true;
		/*
		var segs = path.split('/node_modules/');
		if (/[\\\/]shadow-modules$/.test(segs[0])) {
			var name = segs[1].split('/')[0];
			return transformList.indexOf(name) < 0 || segs.length > 3;
		} else {
			return segs.length >= 3;
		}*/
		return false;
	}

	require("babel-plugin-streamline");
	require("babel-plugin-flow-comments");
	var babelOptions = {
		plugins: ['flow-comments', 'streamline'],
	};
	if (options.runtime !== "callbacks") babelOptions.blacklist = ['regenerator'];
	require("streamline").register({
		cache: options.cache,
		verbose: options.verbose,
		runtime: options.runtime || "fibers",
		map: true,
		babel: babelOptions,
		extensions: [".js", "._js"],
		ignore: ignore,
	});

	// register .es5 extension to be able to test customer image before encryption
	require.extensions['.es5'] = function(module, filename, code) {
		if (!code) code = fs.readFileSync(filename, "utf8");
		module._compile(code, filename);
	};
};