"use strict";
QUnit.module(module.id);

var helpers = require("syracuse-core/lib/helpers");

test('Object extend helper', 8, function() {
	var src = {
		a: "aaa",
		c: "ccc"
	};
	var ext = {
		b: "bbb",
		c: "c-c"
	};
	deepEqual(helpers.object.extend(src, ext), {
		a: "aaa",
		c: "ccc",
		b: "bbb"
	}, "extend (override not set)");

	src = {
		a: "aaa",
		c: "ccc"
	};
	deepEqual(helpers.object.extend(src, ext, false), {
		a: "aaa",
		c: "ccc",
		b: "bbb"
	}, "extend (override set to false)");

	src = {
		a: "aaa",
		c: "ccc"
	};
	deepEqual(helpers.object.extend(src, ext, true), {
		a: "aaa",
		c: "c-c",
		b: "bbb"
	}, "extend overriding with a string");

	src = {
		a: "aaa",
		c: "ccc"
	};
	ext = {
		b: "bbb",
		c: {
			c1: "ccc"
		}
	};
	deepEqual(helpers.object.extend(src, ext, true), {
		a: "aaa",
		c: {
			c1: "ccc"
		},
		b: "bbb"
	}, "extend overriding with an object");

	src = {
		a: "aaa",
		c: "ccc"
	};
	ext = {
		b: "bbb",
		c: {
			c1: "cc1",
			c2: "cc2"
		}
	};
	deepEqual(helpers.object.extend(src, ext, true), {
		a: "aaa",
		c: {
			c1: "cc1",
			c2: "cc2"
		},
		b: "bbb"
	}, "extend overriding with an object property");

	src = {
		a: "aaa",
		c: {
			c1: "cc1",
			c2: "cc2",
			c3: "cc3"
		}
	};
	ext = {
		b: "bbb",
		c: {
			c1: "cc1",
			c2: "c-2"
		}
	};
	deepEqual(helpers.object.extend(src, ext, true), {
		a: "aaa",
		c: {
			c1: "cc1",
			c2: "c-2"
		},
		b: "bbb"
	}, "extend overriding with an object property (deep mode not set)");

	src = {
		a: "aaa",
		c: {
			c1: "cc1",
			c2: "cc2",
			c3: "cc3"
		}
	};
	ext = {
		b: "bbb",
		c: {
			c1: "cc1",
			c2: "c-2"
		}
	};
	deepEqual(helpers.object.extend(src, ext, true, false), {
		a: "aaa",
		c: {
			c1: "cc1",
			c2: "c-2"
		},
		b: "bbb"
	}, "extend overriding with an object property (deep mode set to false)");

	src = {
		a: "aaa",
		c: {
			c1: "cc1",
			c2: "cc2",
			c3: "cc3"
		}
	};
	deepEqual(helpers.object.extend(src, ext, true, true), {
		a: "aaa",
		c: {
			c1: "cc1",
			c2: "c-2",
			c3: "cc3"
		},
		b: "bbb"
	}, "extend overriding with an object property (deep mode set to true)");
});

test('Object isFunction helper', 6, function() {
	ok(helpers.object.isFunction(function() {}), "Function");
	ok(!helpers.object.isFunction("hello"), "'hello' String is not a Function");
	ok(!helpers.object.isFunction(123), "123 Number is not a Function");
	ok(!helpers.object.isFunction({}), "Object is not a Function");
	ok(!helpers.object.isFunction([1, 2, 3]), "Array is not a Function");
	ok(!helpers.object.isFunction(/abc/), "RegEx is not a Function");
});

test('Object traverse helper', function() {
	function localizationExists(json, search) {
		var found;
		helpers.object.traverse(json, function(key, val) {
			if (found || key === "$localization") return false;

			if (typeof(val) === "string" && search === val) {
				found = key;
				return false;
			}
			return true;
		});

		return found;
	}

	var json = {
		key1: {
			subkey1: "description_80f24f88-88f3-485f-b65c-4f0ba4c34cfd"
		},
		key2: {
			subkey2: "val-subkey-2"
		},
		"$localization": {
			"en-us": {
				"description_80f24f88-88f3-485f-b65c-4f0ba4c34cfd": "Sage Intelligence reports",
				"description_22788243-a3df-4e87-8d6d-2c2fd3963ea4": "Sage Intelligence templates",
				"description_cd87a599-ed76-47f0-b1df-98b66cf2bb84": "Standard storage volume",
				"description_e7389c3d-c112-49f6-b5e0-909612726384": "Word templates for mail merge",
				"description_7f4c8f18-f4d4-413d-9ec1-40d70ae8c947": "Word templates for reporting",
			},
			"fr-fr": {
				"description_80f24f88-88f3-485f-b65c-4f0ba4c34cfd": "Etats Sage Intelligence",
				"description_22788243-a3df-4e87-8d6d-2c2fd3963ea4": "Modèles Sage Intelligence",
				"description_cd87a599-ed76-47f0-b1df-98b66cf2bb84": "Volume standard",
				"description_e7389c3d-c112-49f6-b5e0-909612726384": "Modèles word pour publipostage",
				"description_7f4c8f18-f4d4-413d-9ec1-40d70ae8c947": "Modèles word pour publication",
			}
		}
	};
	ok(localizationExists(json, "description_80f24f88-88f3-485f-b65c-4f0ba4c34cfd"), "Localization found");
	ok(!localizationExists(json, "description_22788243-a3df-4e87-8d6d-2c2fd3963ea4"), "Localization not found");
});

asyncTest('Asynchronous constructors and prototype chains (issue #3261)', 1, function(_) {
	var flows = require('streamline-runtime').flows;
	var SyncBase = helpers.defineClass(function(a) {
		this.result = "/SyncBase:" + a;
	});
	var AsyncBase = helpers.defineClass(function(_, a) {
		SyncBase.call(this, a);
		flows.sleep(_, 1);
		this.result += "/AsyncBase:" + a;
	}, SyncBase, {});

	var Class = helpers.defineClass(function(_, a) {
		AsyncBase.call(this, _, a);
		flows.sleep(_, 1);
		this.result += "/Class:" + a;
		var s = this.f1(_, a);
		this.result += s;
	}, AsyncBase, {
		f1: function(_, a) {
			flows.sleep(_, 1);
			this.result += "/F1a:" + a;
			return "/F1b:" + a;
		}
	});
	var result = new Class(_, 1).result;
	strictEqual(result, "/SyncBase:1/AsyncBase:1/Class:1/F1a:1/F1b:1");
	start();
});

//Test for relNumberCmp
test("relNumberCmp", 5, function() {
	strictEqual(helpers.relNumberCmp("2", "11") < 0, true, "Release number 2 smaller than 11");
	strictEqual(helpers.relNumberCmp("11.", "11") > 0, true, "Release number 11. bigger 11");
	strictEqual(helpers.relNumberCmp("2..1", "2.1") === 0, true, "Release number 2..1 equals 2.1");
	strictEqual(helpers.relNumberCmp("2.4.1", "3.0") < 0, true, "Release number 2.4.1 smaller than 3.0");
	strictEqual(helpers.relNumberCmp("2..4", "2.4.0") < 0, true, "Release number 2.4 smaller than 2.4.0");
});