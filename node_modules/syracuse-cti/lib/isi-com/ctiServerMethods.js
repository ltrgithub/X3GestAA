"use strict";
var tracer = require('syracuse-core').getTracer("cti");

var controlSequence = require('./ctiCommon').controlSequence;
module.exports = {
	Synchro: 0,
	Deprecated_MakeCall: 1,
	SendIdentification: 2,
	Deprecated_StartMode: 3,
	MakeCall: 4,
	ConsultCall: 5,
	ReconnectCall: 6,
	ClearCall: 7,
	TransferCall: 8,
	AnswerCall: 9,
	TransferData: 10,
	ChangeAgentState: 11,
	HoldCall: 12,
	RetrieveCall: 13,
	RedirectCall: 14,
	SynchroSocket: 21,
	Deprecated_AskSupervision: 27,
	EndAutomateCall: 28, // Suivi du numéro de ticket // V11.10
	AckAutomatePreviewCall: 29, // Suivi du numéro de ticket // V11.10
	ChangeAgent: 30, // Agent , code , poste
	AbortAutomateCall: 31, // PGS 29 06 2006
	LogonAutomateCampaign: 32, // icc 6.31.00 le 27/05/2008
	LogoutAutomateCampaign: 33, // icc 6.31.00 le 27/05/2008
	ConsultCallWithData: 34, // V7.10 (HelvyreMedia)
	RedirectAcd: 35, // V7.20 (GFC) : Redirige l'appel sur un ACD (id_acd)
	EndTask: 36, // V7.20 (SEM) : voir Event OpenTask
	SetQualifDetail: 37, // V7.20 (SEM) : voir Event OpenTask / ViewTask
	RelaunchTask: 38, // V7.20 (SEM) : voir Event OpenTask
	DisableFunction: 39, // V7.21 (SEM) :
	RegisterAgent: 80, // 01/07/2011 Register agent to CTI Server
	UnregisterAgent: 81, // 01/07/2011 Unregister agent to CTI Server
	RegisterAgentState: 82, // 01/07/2011 Register agentStates (only states) to CTI Server
	UnregisterAgentState: 83, // 01/07/2011 Unregister agentStates (only states) to CTI Server
	_RegisterAll: 84, // 28/02/2012 Register all events to external application
	_UnregisterAll: 85, // 28/02/2012 Unregister all events to external application
	RegisterLogonWindows: 86, // 10/03/2014 Register agent to CTI Server from his windows session logon
	UnregisterLogonWindows: 87, // 10/03/2011 Unregister agent to CTI Server from his windows session logon
	DisconnectAgent: 98, // Deconnecter l'agent et quitter le PCB
	Deprecated_Quit: 99, // Quitter le PCB (for old Citrix) use DisconnectAgent instead

	// Added server methods
	srvSendIdentification: 42,
	srvMakeCall: 44,
	srvConsultCall: 45,
	srvReconnectCall: 46,
	srvClearCall: 47,
	srvTransferCall: 48,
	srvAnswerCall: 49,
	srvTransferData: 50,
	srvChangeAgentState: 51,
	srvHoldCall: 52,
	srvRetrieveCall: 53,
	srvRedirectCall: 54,
	srvEndAutomateCall: 58,
	srvAckAutomatePreviewCall: 59,
	srvChangeAgent: 60,
	srvAbortAutomateCall: 61,
	srvLogonAutomateCampaign: 62,
	srvLogoutAutomateCampaign: 63,
	srvConsultCallWithData: 64, // PDZ : 2012-11-20
	srvRedirectAcd: 65, // V7.20 : Redirige l'appel sur un ACD (id_acd)
	srvEndTask: 66, // V7.20 (SEM) : voir Event OpenTask / ViewTask / RelaunchTask
	srvSetQualifDetail: 67, // V7.20 (SEM) : voir Event OpenTask / ViewTask / RelaunchTask
	srvRelaunchTask: 68, // V7.20 (SEM) : voir Event OpenTask / ViewTask / RelaunchTask
	srvDisableFunction: 69, // V7.21 (SEM) :
	srvDisconnectAgent: 88,
	srvDeprecated_Quit: 89,

	pad2: function(n) {
		return (n < 10) ? ("0" + n) : n;
	},
	pad3: function(n) {
		return (n < 10) ? ("00" + n) : ((n < 100) ? ("0" + n) : n);
	},
	GetMessageCommand: function(opcode, parameters) {
		// STX,1,LENGTH(3 char),opcode,|,[param0,|],[param1,|],[param2,|],...
		var ret = controlSequence.STX + "1";
		var temp = this.pad2(opcode) + controlSequence.ISI_SEPARATOR;
		if (parameters != undefined)
			temp += parameters.join(controlSequence.ISI_SEPARATOR);
		tracer.debug && tracer.debug("=> " + ret + this.pad3(temp.length) + temp);
		// Fix : need to return a "binary" buffer to send it properly using the socket
		//return ret + this.pad3(temp.length) + temp;
		return new Buffer(ret + this.pad3(temp.length) + temp, 'binary');
	}
};