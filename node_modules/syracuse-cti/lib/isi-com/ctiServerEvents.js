"use strict";

module.exports = {
	IncomingCall: 1,
	IncomingCallWithData: 2,
	IdentificationAsked: 3,
	DialingResult: 4, // 0:in progress, 1:answered, 2: busy, 3: refused, 4:Aborted, 5:Ended
	LostCall: 5, // a call i lost, might have been queued or not answered
	EstablishedCall: 6,
	EstablishedCallWithData: 7,
	EndOfCall: 8,
	CSTAEvent: 9,
	AgentState: 10,
	OutgoingCall: 11,
	ManuallyShowData: 12,
	AgentInformations: 13,
	EvtSynchroSocket: 14,
	EvtNortelPCBInitialized: 15,
	EvtNortelPCBNotInitialized: 16,
	Terminated: 17,
	EvtNortelPCBShutDown: 18,
	EvtNortelLogOn: 19,
	EvtNortelLogOff: 20,
	EvtNortelReady: 21,
	EvtNortelNotReady: 22,
	EvtNortelTapiErr: 23,
	Supervision: 24,
	AutomateCall: 25, // V11.10
	AutomatePreviewCall: 26, // V11.10
	AutomatePreviewResult: 27, // V12.12 etat
	IncomingScript: 28, // V12.12 id_script | id_stat | id_acd | name ACD |
	AcdCallInformations: 29, // Version PCB 15.10 nom acd + temps attente
	ManuallyShowDataWebcallback: 30, // version PCB 16_8 pour le webcall
	Recall: 31, // version PCB 17.05
	Qualification: 32, // version PCB 17.05
	OpenTask: 33, // Interact 7.20 (SEM)
	ViewTask: 34, // Interact 7.20 (SEM)

	Disconnected: 70, // CtiServer - service stopped

	GetOpcode: function(s) {
		//So...the line is actually STXabcdef|...
		//where a is 1 or 2 (although always 1) [1=message, 2=ACK]
		//bcd is length of packet from after d
		//ef is the opcode, length can be 1 (abcde) or 2 (abcdef)
		var value;
		if (s.length == 7)
			value = s.substring(s.length - 2);
		if (s.length == 6)
			value = s.substring(s.length - 1);
		for (var k in this) {
			if (this.hasOwnProperty(k)) {
				if (this[k] == value) {
					return k;
				}
			}
		}
		return undefined;
	},
	GetIntOpcode: function(s) {
		if (s.length == 7)
			return parseInt(s.substring(s.length - 2), 10);
		if (s.length == 6)
			return parseInt(s.substring(s.length - 1), 10);
		return -1;
	},
};