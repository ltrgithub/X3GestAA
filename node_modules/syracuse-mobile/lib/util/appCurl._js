// Build curl command lines to get JSON of all mobile apps
// use:
// _node appCurl._js
//
// result:
// creates a curl.sh which will dump metadata of all mobile apps to a fine named mobile.json

var host = "http://10.72.100.30:8124";
var endpoint = "GX3APP";
var user = "mawal:erp";
var file = "mobile.json";

var serviceParameters = {
		"baseURL": host + "/sdata/x3/erp/" + endpoint,
		"applicationName": "x3",
		"contractName": "erp",
		"endpointName": endpoint}

var mongodb = require('mongodb');
var fs = require('fs');

try {
	var config = require('../../../../nodelocal').config;
} catch (e) {
	console.error("Error when reading configuration: " + e);
	process.exit(1);
}
config.collaboration = config.collaboration || {};
if (config.collaboration.driver && config.collaboration.driver !== "mongodb") {
	console.error("Only MongoDB supported at the moment");
	process.exit(1);
}

var db = new mongodb.Db(config.collaboration.dataset || "syracuse", new mongodb.Server(config.collaboration.hostname || "localhost", config.collaboration.port || 27017, {}), {
	w: "majority"
});


function finish(err) {
	db.close();
	if (err) {
		console.error("" + err);
		process.exit(1);
	}
}

db.open(_);
var dashboardDef = db.collection("DashboardDef");
var portlet = db.collection("Portlet");
var cmd = [];
var popComma = false;	
cmd.push('echo "{" >' + file);
var items = dashboardDef.find({mobile: true}).toArray(_);
items.forEach_(_, function(_, item) {
	if (item.variants.length == 1) {
		var variant = item.variants[0];
		if (true || variant.isFactory === true && variant.code === 'DEFAULT')  {
			variant.vignettes.forEach_(_, function(_, vignette) {
				var portletData = portlet.findOne({"_id": vignette.portlet._uuid, "type": "$menu"}, _);
				if (portletData !== null) {
					var desc = portletData && portletData.title && portletData.title["default"];

					var curl = "";
					var url = host + "/sdata/syracuse/collaboration/syracuse/portlets('" + portletData._id + "')/\\$service/representation?device=phone";
					curl += "echo '" + JSON.stringify(serviceParameters) + "' | curl --data @- --user " + user + " -X POST \"" + url + "\" --header \"Content-Type:application/json\" >>" + file;
					
					cmd.push('echo \'"' + desc + '":\' >>' + file);
					cmd.push(curl);
					cmd.push('echo \',\' >>' + file);
					
					popComma = true;
				} else {
					console.log("No $menu portlet!");								
				}
			});
		} else {
			console.log("Dashboard variant not DEFAULT and not Factory!");
		}
	} else {
		console.log("Dashboard with more that 1 variant is ignored!");
	}
});

if (popComma)
	cmd.pop();
cmd.push('echo "}" >>' + file);
cmd.push('');

fs.writeFileSync('./curl.sh', cmd.join("\n"));

console.log("File created: curl.sh");
finish();
