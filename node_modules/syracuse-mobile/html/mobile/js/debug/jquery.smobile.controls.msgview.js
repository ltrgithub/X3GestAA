"use strict";

(function($) {
	var that = $.smobile || {};
	$.smobile = that;
	var $helpers = $.helpers; // = require

	that.controls.MsgView = {
		_additem: function(cd, html) {
			cd.data = cd.data || {};
			html.push('<li');
			var css = [],
				type = $helpers.error2Type(cd.type);
			css.push("ui-li-has-icon");
			css.push($helpers.ui.consts.normal_icon);
			css.push('s-error-' + type);
			if (css.length)
				html.push(' class="' + css.join(" ") + '"');
			html.push('>');
			html.push('<div class="s-error-ttl">' + $helpers.htmlEncode(cd.title) + '</div>');

			cd.data.message = cd.data.message || "";
			if (cd.data.message.length > 0) {
				var msg = cd.origin ? ["ORIGIN : " + $helpers.error2Origine(cd.origin).toUpperCase()] : [];
				msg = msg.concat(cd.data.message.replace(/\r\n/g, '\n').split(
					"\n"));
				html
					.push('<div data-role="collapsible" data-mini="true" data-theme="t">');
				html.push('<h3><span class="s-m-error">' + $helpers.locale().ui.msg_detail + '</span></h3>');
				html.push('<p class="s-m-error">');
				msg.forEach(function(m) {
					html.push($helpers.htmlEncode(m) + ("<br />"));
				});
				html.push('</p>');
				html.push('</div>');
			}
			if (cd.data.solution) {
				html.push("<p class=\"s-m-info\">");
				html.push($helpers.htmlEncode(cd.data.solution));
				html.push("</p>");
			}
			html.push("</li>");
		},
		sync: true,
		handler: function(c, after) {
			var controller = this,
				html = [],
				buttons = [],
				options = c.data || {};
			var data = $helpers.allMessages();
			var errormsgs = data && data.filter(function(msg) {
				return (msg.type === $helpers.ERRORS.error || msg.type === $helpers.ERRORS.fatal || msg.type === $helpers.ERRORS.warning);
			}) || [];
			var infomsgs = data && data.filter(function(msg) {
				return (msg.type === $helpers.ERRORS.info || msg.type === $helpers.ERRORS.success);
			}) || [];

			//options.errorPage = controller.pageInfo.pageName.indexOf("apperror") == 0 || controller.pageInfo.pageName.indexOf("errors") == 0;
			//var errPage = options.errorPage;
			html.push('<ul id="' + c.id + '" data-theme="g" data-role="listview"');
			html.push(' data-inset="true" class="s-m-error-view"');
			html.push('>');
			controller.errorViewHasErrors = errormsgs.length;
			controller.errorViewHasInfo = infomsgs.length;

			if (controller.errorViewHasInfo && !controller.errorViewHasErrors) {
				data.forEach(function(cd) {
					that.controls.MsgView._additem(cd, html, buttons);
				});

				that.controls.MsgView.autoClose(c.id);
			}
			html.push('</ul>');
			controller.hasMsgView = true;

			after({
				html: html.join(''),
				bind: true
			});
		},
		autoClose: function(id) {
			window.setTimeout(function() {
				$('#' + id).empty();
			}, 2500);
		},
		refresh: function(controller, options, $c, id) {

			// FDB - TEMP - We display messages in MsgView
			var data = $helpers.allMessages();
			var errormsgs = data && data.filter(function(msg) {
				return (msg.type === $helpers.ERRORS.error || msg.type === $helpers.ERRORS.fatal || msg.type === $helpers.ERRORS.warning);
			}) || [];
			var infomsgs = data && data.filter(function(msg) {
				return (msg.type === $helpers.ERRORS.info || msg.type === $helpers.ERRORS.success);
			}) || [];
			controller.errorViewHasErrors = errormsgs.length;
			controller.errorViewHasInfo = infomsgs.length;

			if (controller.errorViewHasErrors && !controller.errorViewHasErrors) {
				var html = [],
					buttons = [];
				data.forEach(function(cd) {
					that.controls.MsgView._additem(cd, html, buttons);
				});

				$c.html(html.join(''));
				buttons.forEach(function(bid) {
					$("#" + bid).button();
				});
				$c.listview('refresh');
				$helpers.clearInfos(); // clear infos
				that.controls.MsgView.autoClose(id);
			} else {
				$c.html('');
			}
			$c.find("div:jqmData(role='collapsible')").each(function(index) {
				var $cc = $(this);
				$cc.collapsible();
			});
			$c.listview("refresh");
			$helpers.clearErrors();
			$helpers.clearInfos();

			if (controller.errorViewHasInfo) {
				// make $c visible
				controller.errorInView($c);
			};
			// Return null - No error message because already handled by this
			// control
			return null;
		},
		events: function($c, c) {
			$c.click(function(e) {
				var target = $helpers.getTarget(e);
				if (target) {
					var p = $(target).attr("data-action");
					if (p === "closeerrors") {
						$c.empty();

					}
				}
			});
		}
	};
})(jQuery);