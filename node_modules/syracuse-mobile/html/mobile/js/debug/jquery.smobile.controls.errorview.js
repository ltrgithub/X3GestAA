"use strict";
(function($) {
	var that = $.smobile || {};
	$.smobile = that;
	var $helpers = $.helpers; // = require
	var _error2Type = function(value) {
		switch (value) {
			case $helpers.ERRORS.fatal:
				return "fatal";
				break;
			case $helpers.ERRORS.error:
				return "error";
				break;
			case $helpers.ERRORS.warning:
				return "warning";
				break;
			case $helpers.ERRORS.success:
				return "success";
				break;
			default:
				//case $helpers.ERRORS.info:
				return "info";
				break;
		}
	};

	var _error2Origine = function(value) {
		switch (value) {
			case $helpers.ERRORS.http:
				return "http";
				break;
			case $helpers.ERRORS.db:
				return "db";
				break;
			default:
				//case $helpers.ERRORS.exception:
				return "app";
				break;
		}
	};

	that.controls.ErrorView = {
		_additem: function(cd, html, mail) {
			cd.data = cd.data || {};
			html.push('<li');
			var css = [],
				type = _error2Type(cd.type);
			css.push("ui-li-has-icon");
			css.push($helpers.ui.consts.normal_icon);
			css.push('s-error-' + type);
			if (css.length) html.push(' class="' + css.join(" ") + '"');
			html.push('>');
			if (type != "success") {
				html.push('<div class="' + $helpers.ui.consts.normal_icon_size + ' s-error-icon"></div>');
			}
			html.push('<div class="s-error-ttl">' + $helpers.htmlEncode(cd.title) + '</div>');
			if (mail && (cd.type != $helpers.ERRORS.info) && (cd.type != $helpers.ERRORS.success)) mail.push(cd.title);
			cd.data.message = cd.data.message || "";
			if (cd.data.message.length > 0) {
				var msg = cd.origin ? ["ORIGIN : " + _error2Origine(cd.origin).toUpperCase()] : [];
				msg = msg.concat(cd.data.message.replace(/\r\n/g, '\n').split("\n"));
				html.push('<div data-role="collapsible" data-mini="true" data-theme="t">');
				html.push('<h3><span class="s-m-error">' + $helpers.locale().ui.msg_detail + '</span></h3>');
				html.push('<p class="s-m-error">');
				msg.forEach(function(m) {
					if (mail) mail.push(m);
					html.push($helpers.htmlEncode(m) + ("<br />"));
				});
				html.push('</p>');
				html.push('</div>');
			}
			if (cd.data.solution) {
				html.push("<p class=\"s-m-info\">");
				html.push($helpers.htmlEncode(cd.data.solution));
				html.push("</p>");
			}
			html.push("</li>");
		},
		_setCloseBox: function(data, id, html, buttons) {
			var cbId = id + '-close';
			buttons.push(cbId);
			var html = html || [];
			html.push('<li class="iconBar"><div>');
			html.push('<a id="' + cbId + '" data-role="button" data-icon="delete"  data-inline="true" data-action="closeerrors" data-iconpos="notext" data-theme="c"></a></div></li>');
			return cbId;
		},
		_addMail: function(html, mail, id, buttons) {
			if (mail) {
				id = id + "-mail";
				var body = "",
					subject = $helpers.locale().errmailsubject;
				mail.forEach(function(m) {
					body += m + "\n";
				});
				body = body.substring(0, 2000);
				body = encodeURIComponent(body);
				html.push('<a id="' + id + '" href="mailto:?subject=' + encodeURIComponent(subject) + '&body=' + body + '" data-icon="forward" data-role="button">Send mail</a>');
				buttons.push(id);
			}
		},
		sync: true,
		handler: function(c, after) {
			var controller = this,
				html = [],
				buttons = [],
				options = c.data || {};
			var data = $helpers.allMessages();
			options.errorPage = controller.pageInfo.pageName.indexOf("apperror") == 0 || controller.pageInfo.pageName.indexOf("errors") == 0;
			var errPage = options.errorPage;
			html.push('<ul id="' + c.id + '" data-theme="g" data-role="listview"');
			html.push(' data-inset="true" class="s-m-error-view"');
			html.push('>');
			controller.errorViewHasErrors = data && data.length;
			if (controller.errorViewHasErrors) {
				var mail = [];
				// add close button
				if (!options.errorPage) that.controls.ErrorView._setCloseBox(data, c.id, html, buttons);
				// add errors
				data.forEach(function(cd) {
					that.controls.ErrorView._additem(cd, html, mail, buttons);
				});
				// add send mail
				if (mail.length > 0) that.controls.ErrorView._addMail(html, mail, c.id, buttons);
				$helpers.clearErrors();

			}
			html.push('</ul>');
			controller.hasErrorView = true;
			after({
				html: html.join(''),
				bind: true
			});
		},
		removeSuccess: function(data, id) {
			if (data.length == 1 && data[0].type == $helpers.ERRORS.success) {
				window.setTimeout(function() {
					$('#' + id).empty();
				}, 3000);
			}
		},
		refresh: function(controller, options, $c, id) {
			// FDB - TEMP - We display messages in ErrorView
			var data = $helpers.allMessages();
			controller.errorViewHasErrors = data && data.length;
			if (controller.errorViewHasErrors) {
				var html = [],
					mail = [],
					buttons = [];
				that.controls.ErrorView._setCloseBox(data, id, html, buttons);
				data.forEach(function(cd) {
					that.controls.ErrorView._additem(cd, html, mail, buttons);
				});
				if (mail.length > 0) that.controls.ErrorView._addMail(html, mail, id, buttons);
				$c.html(html.join(''));
				buttons.forEach(function(bid) {
					$("#" + bid).button();
				});
				$c.listview('refresh');
				$helpers.clearInfos(); // clear infos
				that.controls.ErrorView.removeSuccess(data, id);
			} else {
				$c.html('');
			}
			$c.find("div:jqmData(role='collapsible')").each(function(index) {
				var $cc = $(this);
				$cc.collapsible();
			});
			$c.listview("refresh");
			$helpers.clearErrors();
			return controller.errorViewHasErrors ? {
				$element: $c,
				id: id,
				uiClass: "ErrorView"
			} : null;
		},
		events: function($c, c) {
			$c.click(function(e) {
				var target = $helpers.getTarget(e);
				if (target) {
					var p = $(target).attr("data-action");
					if (p === "closeerrors") {
						$c.empty();

					}
				}
			});
		}
	};
})(jQuery);