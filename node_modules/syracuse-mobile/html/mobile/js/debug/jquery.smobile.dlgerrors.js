"use strict";

(function($) {
	var that = $.smobile;
	var $helpers = $.helpers;
	that.controls = that.controls || {};

	function _errorUi(controller, title, diag, last) {
		var res = {
			"$css": "dlogErrors",
			"$title": title,
			"content": {
				"Messages": {
					"uiClass": "Messages",
					"data": {
						"diagnoses": []
					}
				}
			},
			roptions: {
				nopanel: true
			}
		};
		res.hbuttons = [{
			title: $helpers.locale().ui.mail,
			url: 'mailto:?subject=' + encodeURIComponent($helpers.locale().errmailsubject) + '&body=' + that.controls.Messages.getBody(diag),
			linkType: "$external",
			"jmdata": {
				"data-icon": "s-mail",
				"data-transition": "none"
			}
		}, {
			title: $helpers.locale().ui.nextDiagnose,
			action: "nextDiagnose",
			$isHidden: last,
			"jmdata": {
				"data-icon": "arrow-r",
				"data-transition": "fade"
			}
		}];
		res.actions = {
			nextDiagnose: function(after) {
				_processDlog(this, false);
				// Mandatory - enable the controller
				if (after) after(true);
			}
		};
		return res;
	}

	function _processDlog(controller, start) {
		var allmsgs, idx;
		if (start) {
			allmsgs = $helpers.allMessages();
			idx = 0;
		} else {
			var data = controller.getValue();
			allmsgs = data.messages;
			idx = data.idx + 1;
		}
		var diag = allmsgs[idx];
		var ui = _errorUi(controller, (idx + 1) + '/' + allmsgs.length + " " + $helpers.locale().ui.messages + " ", diag, (idx + 1) == allmsgs.length);
		that.createDetail(ui, {
			$title: "",
			diagnose: diag,
			messages: allmsgs,
			idx: idx
		}, controller, function(diagControler, $page) {
			diagControler.data.idx = idx;
			var h = $("#" + diagControler.prefix + "headerTab");
			var type = $helpers.error2Type(diag.type);
			h.addClass("diag_" + type);
		});
	}


	that.openErrorDlg = function(controller) {
		_processDlog(controller, true);
	};

	that.controls.Messages = {
		getBody: function(diag) {
			var diagnose = diag;
			var data = diagnose && diagnose.data || {};
			var message = data.message || "";
			var body = diagnose.title + "\n";
			body += (diagnose.origin) ? "ORIGIN : " + $helpers.error2Origine(diagnose.origin).toUpperCase() + "\n" : "";
			body = body + message;
			if (data.stackTrace)
				body += data.stackTrace;

			body = body.substring(0, 2000);
			body = encodeURIComponent(body);

			return body;
		},
		createMessages: function(controller, c) {
			var options = c.data || {};
			var cd = controller.getValue();
			var html = [];
			var diagnose = cd.diagnose;
			var data = diagnose && diagnose.data || {};
			$helpers.addJqmData(options, html);
			html.push('<div class="s-m-error-bkg">');
			html.push('<div id="' + c.id + '">');
			// Display error title
			html.push('<p class="s-error-ttl">' + $helpers.htmlEncode(diagnose.title) + '<\p>');
			var message = data.message || "";
			if (message.length > 0) {
				var msg = diagnose.origin ? ["ORIGIN : " + $helpers.error2Origine(diagnose.origin).toUpperCase()] : [];
				msg = msg.concat(message.replace(/\r\n/g, '\n').split("\n"));
				if (data.stackTrace) {
					msg = msg.concat(data.stackTrace.replace(/\r\n/g, '\n').split("\n"));
				}
				html.push('<div   data-role="collapsible" data-mini="true" data-iconpos="right" data-collapsed-icon="s-rpanel-alt" data-expanded-icon="s-rpanel-alt" data-theme="d">');
				html.push('<h3><span class="s-m-error-detail-r">' + $helpers.locale().ui.msg_detail + '</span></h3>');
				html.push('<p class="s-m-error-detail">');
				msg.forEach(function(m) {
					html.push($helpers.htmlEncode(m) + ("<br />"));
				});
				html.push('</p>');
			}
			html.push('</div>');
			html.push('</div>');
			return {
				html: html.join(''),
				bind: " ",
				action: options.action,
				options: options
			};
		},
		handler: function(c, after) {
			return after(that.controls.Messages.createMessages(this, c));
		},
		refresh: function(controller, options, $c, id) {},

		events: function($c, c) {}
	};

})(jQuery);