"use strict";
//
// Filter control
//
(function($) {
	var that = $.smobile;
	var $helpers = $.helpers;

	that.controls = that.controls || {};

	function _errorUi(controller, title) {
		var res = {
			"$title": title,

			"content": {
				"Messages": {
					"uiClass": "Messages",
					"data": {
						"diagnoses": []
					}
				}
			}
		};
		res.roptions = {
			nopanel: true
		};
		res.hbuttons = [{
				title: $helpers.locale().ui.mail,
				action: "Send e-mail",
				"jmdata": {
					"data-icon": "s-mail", //email
					"data-transition": "none"
				}
			}, {
				title: $helpers.locale().ui.nextDiagnose,
				action: "nextDiagnose",
				"jmdata": {
					"data-icon": "arrow-r", //email
					"data-transition": "none"
				}
			}

		];
		res.actions = {
			nextDiagnose: function(after) {
				var controller = this;
				if (controller) {

					var dd = controller.getValue();
					var msgs = dd.mesgs;
					var allmsgs = dd.allmsgs;
					var ui = _errorUi(controller, (allmsgs.length - msgs.length + 1) + '/' + allmsgs.length + " Messages ");
					//var nextmsgs=msgs.splice(0, 1) ;
					that.createDetail(ui, {
						$title: "",
						isError: true,
						diagnose: msgs[0],
						mesgs: msgs.splice(0, 1),
						allmsgs: allmsgs
					}, controller);
					/*var pcontroller = controller.parent;
					pcontroller.extraData.filters = dd.filters;
					pcontroller.saveFilter({
						filters: dd.filters
					});*/
					/*if (that.controls.SDataList) {
						return that.controls.SDataList.applyFilter(pcontroller, function() {
							$.smobile.doBack(controller);
						}, true);
					}*/
				}
				//$.smobile.changePage(controller);
			}

		};

		return res;
	}

	function _errorOpen(controller) {
		var msgs = $helpers.allMessages();
		if (msgs.length) {
			var ui = _errorUi(controller, (1) + '/' + msgs.length + " Messages ");
			var allmsgs = msgs.slice(0);
			msgs.splice(0, 1);
			that.createDetail(ui, {
				$title: "",
				isError: true,
				diagnose: allmsgs[0],
				mesgs: msgs,
				allmsgs: allmsgs
			}, controller);
		}
	}

	var _error2Origine = function(value) {
		switch (value) {
			case $helpers.ERRORS.http:
				return "http";
			case $helpers.ERRORS.db:
				return "db";
			default:
				//case $helpers.ERRORS.exception:
				return "app";
		}
	};

	that.openErrorDlg = _errorOpen;


	that.controls.Messages = {

		createMessages: function(controller, c) {
			var options = c.data || {};
			var cd = controller.getValue();

			var html = [];
			var diagnose = cd.diagnose;
			var data = diagnose && diagnose.data || {};
			var message = data.message || "";

			$helpers.addJqmData(options, html);

			html.push('<div class="s-m-error-bkg">') // id="' + c.id + '">';
			if (message.length > 0) {

				html.push('<div class="s-error-ttl" id="' + c.id + '">' + message + ' - ' + diagnose.title);
				var msg = diagnose.origin ? ["ORIGIN : " + _error2Origine(diagnose.origin).toUpperCase()] : [];

				if (data.stackTrace)
					msg = msg.concat(data.stackTrace.replace(/\r\n/g, '\n').split("\n"));
				html.push('<div   data-role="collapsible" data-mini="true" data-iconpos="right" data-collapsed-icon="s-rpanel-alt" data-expanded-icon="s-rpanel-alt" data-theme="d">');
				html.push('<h3><span class="s-m-error-detail-r">' + $helpers.locale().ui.msg_detail + '</span></h3>');
				html.push('<p class="s-m-error-detail">');

				msg.forEach(function(m) {
					//if (mail) mail.push(m);
					html.push($helpers.htmlEncode(m) + ("<br />"));
				});
				html.push('</p>');

				html.push('</div>');
			}
			html.push('</div>');


			return {
				html: html.join(''),
				bind: " ",
				action: options.action,
				options: options
			};
		},

		handler: function(c, after) {
			return after(that.controls.Messages.createMessages(this, c));
		},
		refresh: function(controller, options, $c, id) {

			var html = [];
			var data = $helpers.allMessages();

			var $ul = $('#' + id + '_items');
			var $items = $ul.children(".filter_item");
			$items.remove();
			var toolbar = $('#' + id + '_footer');
			toolbar.before(html.join(''));

			$ul.listview("refresh");

		},


		events: function($c, c) {
			var controller = this;
			var $ul = $c;


		}
	};

})(jQuery);