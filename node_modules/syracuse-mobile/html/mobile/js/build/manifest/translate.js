var fs = require('fs');
var async = require('./async');

function translate(params, after){
	var aFileList = [];
	fs.readFile(params.src+ './js/debug/jquery.smobile.resources.js', function (err, data) {
		if (err) {
			console.log(err);
			return;
			
		}
		var start = '//#START';
		var end = '//#END';
		var content = data.toString();
		var si = content.indexOf(start);
		var ei = content.indexOf(end);
		if (si && ei && (ei > si)) {
			var before= content.substring(0, si+start.length) + "\n\r";
			
			var jsonContent = content.substring(si+1+start.length, ei);
			var locale = JSON.parse(jsonContent);
			var afterjson = content.substring(ei);
			async.each(params.languages, function (lang, callback) {	
				var filename = params.src+ './js/locale/mobile-'+lang+".json";
				fs.exists(filename, function (exists) {
					if (exists) {
						fs.readFile(filename, function (err, data) {
							if (err) {
								console.log("Reading file " + filename);
								console.log(err);
								return callback(null, "");
							}
							try {
								var json = JSON.parse(data.toString());
								if (lang === "en") {
									fs.writeFile(filename, JSON.stringify(json, null, '\t'), function (err) {
										console.log('Writting file "/js/locale/mobile-'+lang+'.json" ... done.');
										callback(null, "");
									});
									
								} else {
									var nlocale = JSON.parse(JSON.stringify(locale));
									
									Object.keys(nlocale).forEach(function(key) {
										var eno = nlocale[key];
										var old = json[key];
										if (typeof old !== "undefined") {
											if ((typeof eno === "object") && (typeof old === "object")) {
												Object.keys(eno).forEach(function(prop) {
													var tv = old[prop];
													if (typeof tv !== "undefined") {
														eno[prop] = tv;
													}
												});
											} else 
												nlocale[key] = old;
										}
									});		
									fs.writeFile(filename, JSON.stringify(nlocale, null, '\t'), function (err) {
										console.log('Writting file "/js/locale/mobile-'+lang+'.json" ... done.');
										 callback(null, "");
									});
								}
							} catch (ex) {
								console.log(ex);
							}
						})
					} else  callback(null, "");
				});
				
			}, function(err, results){
				if (after) after();
			})			
		}
		//console.log(data.toString());
	  //console.log(data);
	  //after();
	});	

}

exports.translate = translate;