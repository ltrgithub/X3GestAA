"use strict";

/*
 * 
 * Script was used only one time to convert the objects in mobile-xx.json to flat key value pairs.
 * Also, resources from jquery.smobile.resources.js are merged with mobile-en.json since both files 
 * contained different texts and also differed from mobile-fr.json
 * 
 */

var fs = require('fs');
var languages = ['en', 'fr'];

languages.forEach(function(language) {
	console.log(language);
	var file = __dirname + '/mobile-' + language + '.json';
	
	fs.readFile(__dirname + '/mobile.json', 'utf8', function (err1, data1) {
		
		fs.readFile(file, 'utf8', function (err, data) {
			if (err) {
				console.log('Error: ' + err);
				return;
			}
			createNewFile(language, data, data1);
		});
	});
});

function createNewFile(l, data, global) {
	var flatData = {};
	var flatData1 = {};
	procObj(flatData, JSON.parse(data), "");

	if (l === 'en')
	{
		procObj(flatData1, JSON.parse(global), "");
		Object.keys(flatData1).forEach(function(k) {
			if (flatData[k] == null) {
				console.log(k + " in resource only, will be merged");
				flatData[k] = flatData1[k];
			}
		});
		Object.keys(flatData).forEach(function(k) {
			if (flatData1[k] == null) {
				console.log(k + " in en only, will be merged");
			}
		});
	}
	var j = stringify(flatData);
	fs.writeFile("../../resources/strings-" + l + ".json", j);
}

// only works for flat objects, simplified to have sorted keys to be able to compare files
function stringify(data) {
	var keys = Object.keys(data);
	var json = "{\n";
	keys.sort();
	keys.forEach(function(k) {
		var v = data[k];
		v = v.replace(/"/g, "\\\"").replace(/\n/g, '\\n');
		json += "    \"" + k + "\": \"" + v + "\",\n";
	});
	json += "}";
	return json;
}
function procObj(flatData, data, pfx) {
	Object.keys(data).forEach(function(k) {
		var key = k;
		var value = data[k];
		if (key.indexOf(".") > -1)
			console.log("Invalid key!");
		if (typeof value !== "string")
			procObj(flatData, value, pfx + key + ".");
		else
			flatData[pfx + key] = value;
	});
}