"use strict";

var templates = require('syracuse-tablet/html/js/helpers/templating');
var _testId = 0;

var _padNum = function(n, len) {
	len = len || 3;
	return (1e15 + n + "").slice(-len);
};

var _getId = function() {
	_testId = _testId + 1;
	return _testId;
};

var _countersHtml = templates.execSync("tmplcounters", {});

var _createHtml = function(tmplId, data) {
	data = data || {};
	// Add title html
	data.titleHtml = templates.execSync("tmpltitle", data);
	return templates.execSync("tmpl" + tmplId, data);
};

var _setStatusError = function($parent) {
	var $status = $parent.find(".teststatus");
	$status.removeClass("glyphicon-ok");
	$status.addClass("glyphicon-remove");
};

var _addCounters = function(_self, $root, countSize) {
	_self.countSize = countSize || 3;
	var zero = _padNum(0, _self.countSize);
	_self.$success = $root.find(".badge.success").html(zero);
	_self.$errors = $root.find(".badge.error").html(zero);
	_self.$warnings = $root.find(".badge.warning").html(zero);
	_self.$counts = $root.find(".badge.counts").html(zero);
	_self.nbSuccess = 0;
	_self.nbErrors = 0;
	_self.nbWarnings = 0;
	_self.counts = 0;
	_self.$header = $root.find(".panel-heading");
	_self.$panel = $root.hasClass("panel") ? $root : $root.find(".panel");
};

var _updtCounters = function(_self, status) {
	_self.counts++;
	if (status === "success") _self.nbSuccess++;
	if (status === "warning") _self.nbWarnings++;
	if (status === "error") _self.nbErrors++;
	_self.$success.html(_padNum(_self.nbSuccess, _self.countSize));
	_self.$warnings.html(_padNum(_self.nbWarnings, _self.countSize));
	_self.$errors.html(_padNum(_self.nbErrors, _self.countSize));
	_self.$counts.html(_padNum(_self.counts, _self.countSize));
};

var _updtPanel = function(_self, status) {
	_updtCounters(_self, status);
	if (_self.nbErrors > 0) {
		_setStatusError(_self.$header);
		if (_self.$panel.hasClass("panel-success")) {
			_self.$panel.removeClass("panel-success").addClass("panel-danger");
		}
	}
};

var _testCase = function(testSet, $html, data) {
	var _self = this;
	_self.data = data;
	_self.$root = $html;
	_self.$resultGroup = $html.find(".list-group");
	_self.testSet = testSet;
	_addCounters(_self, $html);

	// status accepts a boolean or "success", "warning", "error"
	_self.addResult = function(title, status, message) {
		// Tests
		if (false) {
			var m = _self.counts % 3;
			status = m == 0 ? "success" : m == 1 ? "warning" : "error";
			message = status + " - " + _self.counts;
		}
		status = typeof status == "string" ? status : status === true ? "success" : "error";
		_updtPanel(_self, status);
		var ok = status == "success" || status == "warning";
		message = message ? message.trim() : "";
		var $html = $(_createHtml("teststatus", {
			icon: ok ? "ok" : "remove",
			title: title,
			message: message.length > 0 ? message : null,
			status: status
		}));
		$html.appendTo(_self.$resultGroup.show());
		_self.testSet.update(status);
		return {
			$root: $html
		};
	};
};

var _testSet = function($html, data) {
	var _self = this;
	var _cases = 0;
	_self.data = data;
	_self.$root = $html;
	_self.$casesGroup = $html.find(".panel-body").find(".list-group");
	_addCounters(_self, $html);

	_self.update = function(ok) {
		_updtPanel(_self, ok);
		_testRoot.update(ok);
	};

	_self.addTestcase = function(title, data) {
		var data = {
			id: _getId(),
			title: title,
			klass: _cases++ % 2 == 0 ? "even" : "odd",
			data: data || {}
		};
		var $html = $(_createHtml("testcase", data));
		$html.appendTo(_self.$casesGroup.show()).show();
		return new _testCase(_self, $html, data);
	};
};

var _testRoot = new(function() {
	var _self = this;
	_self.$root = $(_createHtml("testroot", {
		title: "Test sets"
	}));
	_addCounters(_self, _self.$root, 4);
	_self.$root.appendTo("#testscontent");

	_self.update = function(ok) {
		_updtPanel(_self, ok);
	};
	_self.addTestset = function(title) {
		var data = {
			id: _getId(),
			title: title
		};
		var $html = $(_createHtml("testset", data));
		$html.appendTo(_self.$root).show();
		return new _testSet($html, data);
	};

});

exports.addTestset = function(title) {
	return _testRoot.addTestset(title);
};

exports.addTestcase = function(testset, title) {
	return testset.addTestcase(title);
};

exports.addResult = function(testcase, title, status, error) {
	return testcase.addResult(title, status, error);
};