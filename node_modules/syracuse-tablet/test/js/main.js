"use strict";

var modal = require('syracuse-tablet/html/js/ui/modal');
var localStorage = require('syracuse-tablet/html/js/storage/localStorage');
var log = require('syracuse-tablet/html/js/helpers/logger').getLogger("storage");
var locale = require('syracuse-tablet/html/js/helpers/locale');
var globals = require('syracuse-tablet/html/js/helpers/globals');
var appFactoryDeps = require('syracuse-tablet/html/js/application/appFactoryDeps');
var storage = require('syracuse-tablet/html/js/storage/storage');
var sdataCache = require('syracuse-tablet/html/js/sdata/sdataCache');

var _runModules;

var _globalCtx = null;
var Ctx = function() {
	var _self = this;
	var _data = null;
	_self.$rootHeader = $("#testsheader");
	_self.$rootContent = $("#testscontent");
	_self.$dropDownMenu = $("#run_dropdown");
	_self.save = function() {
		localStorage.setItem("smTestContext", JSON.stringify(_data));
	};
	_self.getLogin = function() {
		return $.extend({}, _data.login);
	};
	_self.setLogin = function(user, pwd) {
		_data.login = {
			user: user,
			password: pwd
		};
		_self.save();
	};
	_self.setEndpoint = function(type, value) {
		type = type || "";
		value = value || "";
		if (type.length == 0 || value.length == 0) return;
		_data.endpoints[type] = value;
		_self.save();
	};
	_self.getEndpoint = function(type) {
		return _data.endpoints[type];
	};
	_data = localStorage.getItem("smTestContext");
	if (_data != null && typeof _data == "string") {
		try {
			_data = JSON.parse(_data);
		} catch (e) {
			log && log("Error parsing global context");
			_data = null;
		}
	} else {
		_data = null;
	}
	if (_data == null) {
		_data = {
			login: {
				user: "guest",
				password: "guest"
			},
			endpoints: {
				DVLP: "SUPERV"
			}
		};
	}
	window.globalCtx = _self;
	_self.$rootHeader.find("#nav-login-info").html("Login: " + _data.login.user + "/" + _data.login.password + " - Enpoint: " + _self.getEndpoint("DVLP"));
	log && log("global context initialized");
};

var _doSettings = function() {
	var ctx = _globalCtx.getLogin();
	ctx.endpoint = _globalCtx.getEndpoint("DVLP");
	modal.modal("settings", ctx, function(act, modal, params) {
		var pref = "login-";
		var login = _globalCtx.getLogin();
		var user = modal.find("#" + pref + "user"),
			pwd = modal.find("#" + pref + "password"),
			dvlp = modal.find("#" + pref + "endpoint-dvlp");
		if (act === "shown.bs.modal") {
			user.val(login.user);
			pwd.val(login.password);
			dvlp.val(_globalCtx.getEndpoint("DVLP"));
		} else if (act === "save") {
			_globalCtx.setLogin(user.val(), pwd.val());
			_globalCtx.setEndpoint("DVLP", dvlp.val());
		}

	});
};
var _bindEvents = function() {
	$(document).delegate(_globalCtx.$rootContent, "click", function(evt) {
		var target = $(evt.target);
		var elmt = target.closest("[data-action]");
		var options = {};
		if (elmt.length > 0) {
			var attr = elmt.attr("data-action");
			var params = elmt.attr("data-param");
			evt.preventDefault();
			evt.stopPropagation();
			if (attr === "settings") {
				_doSettings();
			} else if (attr === "run") {
				_run(params);
			}
		}
	});
};
var _runCpt = 0;
var _run = function(modulename) {
	var $runBtn = _globalCtx.$rootHeader.find("#testsrun");
	$runBtn.button('loading');
	_globalCtx.$rootContent.unbind();
	_globalCtx.$rootContent.empty();
	window.setTimeout(function() {
		_runCpt++;
		try {
			var modules = $.extend([], _runModules);
			var modsToRun = [];
			modules.forEach(function(m) {
				if (modulename === 'all' || m.modulename === modulename) {
					modsToRun.push(m);
				}
			});

			var execTest = function() {
				var curTest = modsToRun.pop();
				if (curTest) {
					curTest.test().then(function() {
						execTest();
					}, function(e) {
						$runBtn.button('reset');
						modulename = modulename || "noName";
						log && log("RUNTEST STOP - EXCEPTION - Module " + modulename);
						log && log(e);
						modal.error("Run test exception - Module " + modulename, e);
					});
				} else {
					$runBtn.button('reset');
					log && log("RUNTEST STOP - OK");
				}
			};

			execTest();
		} catch (e) {
			$runBtn.button('reset');
			modal.error("Run test error", e);
		}
	}, _runCpt == 0 ? 0 : 300);
};

var _initModules = function(lang, rsrc) {
	var st;
	var cache;
	return locale.setLocale(lang, rsrc)
		.then(function() {
			st = storage.getStorage();
			return st.init();
		})
		.then(function() {
			cache = new sdataCache.SDataCache(st);
		})
		.then(function() {
			return globals.init(true, st, cache);
		})
		.then(function() {
			return appFactoryDeps.init();
		})
		.then(function() {
			modal.init();
		});
};

var _init = function(lang, rsrc) {
	try {
		_initModules(lang, rsrc)
			.then(function() {
				_globalCtx = new Ctx();
				_runModules = [
					require('syracuse-tablet/test/js/storage/testStorage'),
					require('syracuse-tablet/test/js/testAjax'),
					require('syracuse-tablet/test/js/testGeoLoc'),
					require('syracuse-tablet/test/js/sdata/testCache'),
					require('syracuse-tablet/test/js/sdata/where/testWhere'),
					require('syracuse-tablet/test/js/sdata/testStateless'),
					require('syracuse-tablet/test/js/sdata/testStatelessCRUD'),
					require('syracuse-tablet/test/js/sdata/testDispatch'),
					require('syracuse-tablet/test/js/testUtils'),
					require('syracuse-tablet/test/js/articles/testArticleParser')
				];

				_runModules.forEach(function(m) {
					if (m && m.modulename) {
						$('<li><a data-action="run"  data-param="' + m.modulename + '" href="#">Test ' + m.modulename + '</a></li>').appendTo(_globalCtx.$dropDownMenu);
					}
				});
				// To avoid bootstrap transitions (collapse)
				$.support.transition = false;
				_bindEvents();
				var param = /runTest=(.*)/.exec(document.location.href);
				if (param && param[1]) {
					_run(param[1]);
				}
			});
	} catch (e) {
		console.log(e);
		alert("Runtest error\n" + e.message);
	}
};

exports.main = function(lang, rsrc) {
	$(document).ready(function() {
		if (document.location.href.indexOf("?circular") > -1) {
			xrayquire.showCycles(undefined, true);
		} else {
			_init(lang, rsrc);
		}
	});
};