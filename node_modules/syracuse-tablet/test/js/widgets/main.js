"use strict";

var widgetsLibrary = require('syracuse-tablet/html/js/widgets/widgetsLibrary');
var layout = require('syracuse-tablet/html/js/widgets/layout').Layout;
var utils = require('syracuse-tablet/html/js/helpers/utils');
var eventListener = require('syracuse-tablet/html/js/widgets/eventListener');

var resources = require("./resources");

exports.main = function() {
	$("a[data-sm-menu]")
		.bind(
			"click",
			function(event) {

				var bodyLayout = document
					.getElementById("sm-site-body-layout");

				// widget-test-fields"
				switch (event.target.getAttribute("data-sm-menu")) {
					case "widget-test-fields":
						var listItemParent = event.target.parentNode;
						if (listItemParent.className.indexOf("active") < 0) {
							// == clean body ==
							utils.empty(bodyLayout);

							// == remove active state from other links in
							// navbar ==
							var navBarDom = $(".nav.navbar-nav")[0];
							for (var ii = 0, jj = navBarDom.children.length; ii < jj; ii++) {
								utils.toggleClass(navBarDom.children[ii],
									"active");
							}

							// == remove active state from other links in sub menus list ==
							var ulDom = $(".dropdown-menu")[0];
							for (var ii = 0, jj = ulDom.children.length; ii < jj; ii++) {
								utils.toggleClass(ulDom.children[ii],
									"active");
							}

							// == append widget ==
							// sample data
							var $item = {
								$title: "Test title"
							};
							var dataValueSample = "Test data";

							// init widget
							var item = widgetsLibrary.categories["field"]
								.create($item);
							bodyLayout.appendChild(item.render());

							// set data value
							item.setDataValue(dataValueSample);

							// == set active state in nav bar ==
							utils.toggleClass(listItemParent, "active",
								true);
						}
						break;
					case "widget-test-diagnoses":
						break;
					case "widget-test-layout-1":
					case "widget-test-layout-2":
					case "widget-test-layout-3":
					case "widget-test-layout-4":

						if (event.target.parentNode.className
							.indexOf("active") < 0) {
							// == clean body ==
							utils.empty(bodyLayout);

							var sampleNumber = event.target.getAttribute(
								"data-sm-menu").match(/\d/g);

							// == remove active state from other links in
							// navbar
							// ==
							var navBarDom = $(".nav.navbar-nav")[0];
							for (var ii = 0, jj = navBarDom.children.length; ii < jj; ii++) {
								utils.toggleClass(navBarDom.children[ii],
									"active");
							}

							// == remove active state from other links in
							// sub
							// menus list ==
							var ulDom = event.target.parentNode.parentNode;
							for (var ii = 0, jj = ulDom.children.length; ii < jj; ii++) {
								utils.toggleClass(ulDom.children[ii],
									"active");
							}

							// == set active state in nav bar ==
							utils
								.toggleClass(
									event.target.parentNode.parentNode.parentNode,
									"active", true);

							// == set active state in sub menus list ==
							utils.toggleClass(event.target.parentNode,
								"active", true);

							// == append widget ==
							var sampleLayout = new layout();
							sampleLayout = sampleLayout
								.buildLayout(resources["$articleSample" + sampleNumber]);
							//debugger;
							bodyLayout.appendChild(sampleLayout);

						}

						break;
					default:
						break;

				}

			});
	eventListener.bindEvents();
};