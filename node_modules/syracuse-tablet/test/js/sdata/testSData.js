"use strict";
var log = require('syracuse-tablet/html/js/helpers/logger').log;
var testUtil = require('syracuse-tablet/test/js/testUtil');

var parser = require('syracuse-tablet/html/js/sdata/parser').Parser;
var sdataUtil = require('syracuse-tablet/html/js/sdata/sdataUtil');

var resources = require('./resources');

exports.test = function() {
	var deferred = new $.Deferred();

	// building test UI framework
	var testSetParams = resources.testSet;
	var testset = testUtil.addTestset(testSetParams.title);
	var testCasesArr = [];
	for (var ii = 0, jj = testSetParams.testCases.length; ii < jj; ii++) {
		testCasesArr.push(testUtil.addTestcase(testset,
			testSetParams.testCases[ii].title));
	}

	// run test and add results
	for (var ii = 0, jj; ii < jj; ii++) {
		var testCaseParams = testSetParams.testCases[ii];
		for (var mm = 0, pp = testCaseParams.testUnits.length; mm < pp; mm++) {
			var testUnitData = testCaseParams.testUnits[mm];
			var res = false;
			switch (testCaseParams.testTag) {
				case "parse":
					res = JSON.stringify(testCaseParams.func(testUnitData.input)) === JSON
						.stringify(testUnitData.expectedOutput);
					break;
				case "execwhere":
					res = testCaseParams.func(testUnitData.input,
						testUnitData.utilArg) === testUnitData.expectedOutput;
					break;
			}

			testUtil.addResult(testCasesArr[ii], testCaseParams.resultTitle
				.replace("{input}", JSON.stringify(testUnitData.input)).replace(
					"{expectedOutput}", testUnitData.expectedOutput),
				res);
		}
	}

	// test end
	deferred.resolve();
	return deferred.promise();
};