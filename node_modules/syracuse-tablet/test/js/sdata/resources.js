"use strict";

var input1 = "(login ge 'D') and (firstName ge 'G')";
var expectedOutput1 = {
	"children": [{
		"children": [{
			"children": null,
			"type": "identifier",
			"value": "login"
		}, {
			"children": null,
			"type": "literal",
			"value": "D"
		}],
		"type": "operator",
		"value": {
			"code": ">=",
			"text": "ge",
			"precedence": 5,
			"isPrefix": false,
			"isInfix": true,
			"isAssociative": false,
			"isPredicate": true
		}
	}, {
		"children": [{
			"children": null,
			"type": "identifier",
			"value": "firstName"
		}, {
			"children": null,
			"type": "literal",
			"value": "G"
		}],
		"type": "operator",
		"value": {
			"code": ">=",
			"text": "ge",
			"precedence": 5,
			"isPrefix": false,
			"isInfix": true,
			"isAssociative": false,
			"isPredicate": true
		}
	}],
	"type": "operator",
	"value": {
		"code": "and",
		"text": "and",
		"precedence": 6,
		"isPrefix": false,
		"isInfix": true,
		"isAssociative": true,
		"isPredicate": true
	}
};

var input2 = "(((VLYDAT ge @2014-06-16@) or (VLYDAT eq @@)) and (QUOSTA ne 3))";
var expectedOutput2 = {
	"children": [{
		"children": [{
			"children": [{
				"children": null,
				"type": "identifier",
				"value": "VLYDAT"
			}, {
				"children": null,
				"type": "literal",
				"value": {
					"_value": 20140616
				}
			}],
			"type": "operator",
			"value": {
				"code": ">=",
				"text": "ge",
				"precedence": 5,
				"isPrefix": false,
				"isInfix": true,
				"isAssociative": false,
				"isPredicate": true
			}
		}, {
			"children": [{
				"children": null,
				"type": "identifier",
				"value": "VLYDAT"
			}, {
				"children": null,
				"type": "literal",
				"value": null
			}],
			"type": "operator",
			"value": {
				"code": "=",
				"text": "eq",
				"precedence": 5,
				"isPrefix": false,
				"isInfix": true,
				"isAssociative": false,
				"isPredicate": true
			}
		}],
		"type": "operator",
		"value": {
			"code": "or",
			"text": "or",
			"precedence": 7,
			"isPrefix": false,
			"isInfix": true,
			"isAssociative": true,
			"isPredicate": true
		}
	}, {
		"children": [{
			"children": null,
			"type": "identifier",
			"value": "QUOSTA"
		}, {
			"children": null,
			"type": "literal",
			"value": 3
		}],
		"type": "operator",
		"value": {
			"code": "<>",
			"text": "ne",
			"precedence": 5,
			"isPrefix": false,
			"isInfix": true,
			"isAssociative": false,
			"isPredicate": true
		}
	}],
	"type": "operator",
	"value": {
		"code": "and",
		"text": "and",
		"precedence": 6,
		"isPrefix": false,
		"isInfix": true,
		"isAssociative": true,
		"isPredicate": true
	}
};

var dataContext1 = {
	"login": "ABC",
	"firstName": "GHI"
};

var dataContext2 = {
	"login": "DA",
	"firstName": "GHI"
};

var expectedMatch1 = false;
var expectedMatch2 = true;

exports.input1 = input1;
exports.expectedOutput1 = expectedOutput1;
exports.input2 = input2;
exports.expectedOutput2 = expectedOutput2;
exports.dataContext1 = dataContext1;
exports.dataContext2 = dataContext2;
exports.expectedMatch1 = expectedMatch1;
exports.expectedMatch2 = expectedMatch2;