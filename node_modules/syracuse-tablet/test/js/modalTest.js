"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');

var _templates = {
	settings: '\
		<div class="modal fade"> \
			<div class="modal-dialog"> \
				<div class="modal-content"> \
					<div class="modal-header"> \
						<h4 class="modal-title">Unit tests settings</h4> \
					</div> \
					<div class="modal-body"> \
						<div class="well"> \
							<div class="form-group"> \
								<label>X3 User</label> <input type="text" id="login-user" class="form-control"> \
							</div> \
							<div class="form-group"> \
								<label>X3 Password</label><input type="text"  id="login-password" class="form-control"> \
							</div> \
							<div class="form-group"> \
								<label>Dvlp Endpoint</label><input type="text" id="login-endpoint-dvlp" class="form-control"> \
							</div> \
						</div> \
					</div> \
					<div class="modal-footer"> \
						<button type="button" data-action="save" class="btn btn-primary">Save changes</button> \
						<button type="button" data-action="close" class="btn btn-default" data-dismiss="modal">Cancel</button> \
					</div> \
				</div> \
			</div> \
		</div>'
};

var _getHtml = function(name, ctx) {
	var key = name + "compiled";
	var tmpl = _templates[key];
	if (!tmpl) {
		tmpl = _templates[key] = Handlebars.compile(_templates[name]);
	}
	return tmpl(ctx);
};

/* First param : cb - Second msg - Third data ...*/
var _execCb = function(cb, msg, data) {
	if (!cb || arguments.length == 0) return;
	try {
		var cb = arguments[0];
		var args = Array.prototype.slice.call(arguments, 1);
		cb.apply(null, args);
	} catch (e) {
		alert("Error calling modal callback\n" + JSON.stringify(e));
	}
};

var _modal = function(id, context, cb) {
	/* Always to retry read template and display alert if not found */
	var h = $(_getHtml(id, context)).modal({
		keyboard: true,
		backdrop: "static"
	});
	var done = false;
	// Use <button data-dismiss"modal" for close action
	// Use <button data-action"myaction" for action other than
	// close
	h.on("shown.bs.modal", function() {
		_execCb(cb, "shown.bs.modal", h);
	});
	h.on("hidden.bs.modal", function() {
		// Called when dialog is close - data-dismiss = "modal"
		// or m.modal('hide')
		h.unbind();
		h.remove();
		// Call cb only if no click action
		if (!done && cb) _execCb(cb, "hidden.bs.modal", h);
	});
	// For dialogs with option
	h.delegate("button[data-action]", "click", function(evt) {
		var t = $(evt.target);
		var act = t.attr("data-action");
		if (act) {
			done = true;
			evt.preventDefault();
			evt.stopPropagation();
			_execCb(cb, act, h, t.attr("data-params"));
		}
		// Close modal
		h.modal('hide');
	});
};

exports.settings = function(context, cb) {
	_modal("settings", context, cb);
};