"use strict";

var driver = require("./driver");
var UT = require("./ut");

/**
 * Point browser to app url
 * options: {
 *    testPageUrl: sdata url of page to open after login
 *              E.g.: http://localhost:8124/mobile2/x3/erp/GX3APP/AQMDEVICE?representation=AQMCRUDM.$query 
 * }
 *
 */
exports.loadApp = function(options) {
	var url = UT.Config.url; // Url to load client from
	UT.log("Loading app from: " + url);

	var testPageUrl = options && options.testPageUrl;
	if (testPageUrl) {
		UT.log("Loading test page: " + testPageUrl);
		if (url.indexOf("?") > -1) {
			url = url + "&url=" + encodeURIComponent(testPageUrl);
		} else {
			url = url + "?url=" + encodeURIComponent(testPageUrl);
		}
	}
	return UT.Driver.Browser().get(url);
};

/**
 * Ensure user is logged in and sitting on the given page
 * options: {
 *    testPageUrl: sdata url of page to open after login
 *              E.g.: http://localhost:8124/mobile2/x3/erp/GX3APP/AQMDEVICE?representation=AQMCRUDM.$query 

 * @returns
 */
exports.ensureLogin = function(options) {
	var defaultPage = "html://HOME";
	var page = _getPageNameFromUrl(options && options.testPageUrl || defaultPage);

	return UT.Dom.waitLocated([
			UT.Sel.Page(page),
			UT.Sel.Page("login")
		], 5000)
		.then(function(matchedPage) {
			return true;
		})
		.then(function(isLogin) {
			if (isLogin) {
				return UT.Dom.setValue(UT.Sel.Id('login-user'), UT.Config.user)
					.then(function() {
						return UT.Dom.setValue(UT.Sel.Id('login-password'), UT.Config.password);
					})
					.then(function() {
						return UT.Dom.click(UT.Sel.Id('login-login'));
					})
			}
		})
		.then(function() {

			// Wait for one or the other
			return UT.Dom.waitLocated([
				UT.Sel.Page(page)
			], 5000);
		});
};

/**
 * Open change profile modal
 */
exports.openChangeProfile = function() {
	var $$$switchContext = UT.Sel.DataAction("switchContext");

	return UT.Dom.click(UT.Sel.DataAction("openGlobalPanel")).then(function() {
			return UT.Dom.waitVisible($$$switchContext, 500);
		})
		.then(function() {
			return UT.Dom.click($$$switchContext);
		})
		.then(function() {
			return UT.App.waitModal("select-context", 1000);
		});
};

/**
 * Open design page mode
 */
exports.openDesignPage = function() {
	var $$$designPage = UT.Sel.DataAction("designPage");
	//Ltr the varaible $$$designPage is still null , because the icon "openGlobalPanel" is not opened yet !
	return UT.Dom.click(UT.Sel.DataAction("openGlobalPanel")).then(function() {
			return UT.Dom.waitVisible($$$designPage, 500);
		})
		.then(function() {
			return UT.Dom.click($$$designPage);
		})
		.then(function() {
			return UT.Dom.waitLocated(UT.Sel.Id("authPanelControlType"), 1000);
		});
};

/**
 * Close design page
 */
exports.closeDesignPage = function() {
	var $$$closeDesignPage = UT.Sel.Id("auth-btn-close-id");
	return UT.Dom.click($$$closeDesignPage)
		.then(function() {
			return exports.confirm("yes");
		});
};

/**
 * Wait for confirm modal to show up and confirm with "option"
 * either "yes" or "no"
 */
exports.confirm = function(option) {
	return UT.App.waitModal("confirm")
		.then(function() {
			return UT.Dom.click(UT.Sel.DataAction(option));
		});
};

/**
 * Select element in authoring tree left side
 */
exports.selectAuthTreeElement = function(id) {
	// to click
	var $$$item = UT.Sel.Attr("data-s-ut-auth-elmt-id", id);
	// wait for selection properties showing up on right panel
	var $$$sel = UT.Sel.Attr("data-s-ut-auth-selected-elmt", id);

	return UT.Dom.waitLocated($$$item, 3000)
		.then(function() {
			return UT.Dom.click($$$item, null, UT.Dom.waitLocated$($$$sel));
		});
};

/**
 * Expand an authoring option in the right panel
 */
exports.authExpandOption = function(option) {
	// to click
	var $$$item = UT.Sel.Attr("aria-controls", "collapse_auth_prop_" + option);
	return UT.Dom.waitLocated($$$item, 1000)
		.then(function() {
			return UT.Dom.click($$$item, null, UT.sleep$(200));
		});
};

/**
 * Expand and select an authoring option
 */
exports.authSelectOption = function(option, value) {
	// to click
	var $$$item = UT.Sel.Id("auth_opt_" + option + "_" + value);

	return exports.authExpandOption(option)
		.then(function() {
			return UT.Dom.click($$$item, null, UT.sleep$(200));
		});
};

/** 
 * Wait for a page to open up, default timeout is 10000ms
 * Return is a promise with parameter beeing the found webelement
 */
exports.waitPage = function(pageName, timeout) {
	timeout = timeout != null ? timeout : 10000;
	UT.log("Waiting for page: " + pageName);
	return UT.Dom.waitLocated(UT.Sel.Page(pageName), timeout);
};
exports.waitPage$ = function(pageName, timeout) {
	return function() {
		return exports.waitPage(pageName, timeout);
	};
};

/** 
 * Wait for a modal to open up, default timeout is 10000ms
 * Return is a promise with parameter beeing the found webelement
 */
exports.waitModal = function(modalName, timeout) {
	timeout = timeout != null ? timeout : 10000;
	UT.log("Waiting for modal: " + modalName);
	return UT.Dom.waitLocated(UT.Sel.Modal(modalName), timeout);
};

exports.waitModal$ = function(modalName, timeout) {
	return function() {
		return exports.waitModal(modalName, timeout);
	};
};

/**
 * selector: has to be a webelement or a selector of a grid control with search capability
 * text: text to execute search for
 * parent: Optional parent if grid is a selector
 */
exports.searchInGrid = function(selector, text, parent) {
	return UT.Dom.find(selector, parent)
		.then(function($$grid) {
			return UT.Dom.find(UT.Sel.Css(".s-m-search input"), $$grid)
				.then(function($$search) {
					return UT.Dom.setValue($$search, text);
				})
				.then(function() {
					return UT.Dom.click(UT.Sel.DataAction("actionArray", "search"), $$grid);
				})
				.then(function() {
					return $$grid.getAttribute("id");
				})
				.then(function(gridId) {
					// Wait for table header signaling a match 
					return UT.Dom.waitLocated(UT.Sel.Css("#" + gridId + " thead th.s-m-search"), 5000);
				});
		});
};

/**
 * Open action panel and execute an item inside of the panel
 */
exports.executeActionPanelItem = function(selector) {
	return UT.Dom.click(UT.Sel.Attr("data-menuitem-id", "openActionsPanel"))
		.then(function() {
			return UT.Dom.waitLocated(UT.Sel.Css(".s-m-side-panel"), 500);
		})
		.then(function($$panel) {
			return UT.Dom.click(selector, $$panel);
		})
}

/**
 * Returns rep and facet if any
 */
function _getReprInfoFromUrl(url) {
	var repr = /representation=(\S+?)\.(\$[a-zA-Z]+)/.exec(url);
	if (repr && repr.length > 2) {
		return {
			representation: repr[1],
			facet: repr[2]
		}
	}
	return null;
}

function _getPageNameFromUrl(url) {
	if (url.indexOf("html://") > -1) {
		return url.substr(7);
	}

	var repr = _getReprInfoFromUrl(url);
	if (repr) {
		return repr.representation + "." + repr.facet;
	}
}

//================================= Woco branch ====================================
//================================= Ltr 20/10/2016 =================================
//==================================BEGIN===========================================
//==================================================================================
exports.language = function(param) {
	return UT.Dom.waitLocated(UT.Sel.Id('login-select-language'), 8000)
		.then(function() {
			return UT.Dom.click(UT.Sel.Id('login-select-language'))
				.then(function() {
					return UT.Dom.setValue(UT.Sel.Id('login-select-language'), param)
						.then(function() {
							return UT.Dom.click(UT.Sel.DataAction2("$validate"));
						})
				})

		})
};
exports.logout = function() {
	var $$$logout = UT.Sel.DataAction("logout");
	//UT.log("logout: " + $$$logout);
	return UT.Dom.waitLocated(UT.Sel.DataAction("openGlobalPanel"), 8000)
		.then(function() {
			return UT.Dom.click(UT.Sel.DataAction("openGlobalPanel")).then(function() {
					return UT.Dom.waitVisible($$$logout, 5000);
				})
				.then(function() {
					return UT.Dom.click($$$logout);
				});
		});
};

exports.back = function() {
	return UT.Dom.click(UT.Sel.DataAction("historyBack"));
};
//------------- keyword enter to search --------------------------------------------------------------------
exports.search = function(keySearch, queryPage) {
	return UT.Dom.waitLocated(UT.Sel.Xpath("//input[@type='text'][@value='']"), 1000)
		.then(function() {
			return UT.Dom.setValue(UT.Sel.Xpath("//input[@type='text'][@value='']"), keySearch)
				.then(function() {
					return UT.Dom.click(UT.Sel.DataAction("actionArray", "search"))
						.then(function() {
							// Wait for $query page to become visible again
							return UT.App.waitPage(queryPage);
						});

				});
		});
};
/**
 * Open design page 2 mode
 */
exports.openDesignPage2 = function() {
	return UT.Dom.click(UT.Sel.DataAction("openGlobalPanel")).then(function() {
			return UT.Dom.waitVisible(UT.Sel.DataAction("designPage"), 500);
		})
		.then(function() {
			return UT.Dom.click(UT.Sel.DataAction("designPage"));
		})
		.then(function() {
			return UT.Dom.waitLocated(UT.Sel.Id("authPanelControlType"), 1000);
		});
};

exports.authSeriesOptions = function(option) {
	//------------- Display link click --------------------------------------------------------
	return UT.Dom.click(UT.Sel.Xpath("//a[@aria-controls='collapse_auth_prop_seriesOptions']"))
		.then(function() {
			//--- Card/table/carousel link click -------------------------------------------------
			return UT.Dom.waitLocated(UT.Sel.Id(option), 1000)
				.then(function() {
					return UT.Dom.click(UT.Sel.Id(option))
						.then(function() {
							// Simulate an error in order to click on next event
							return UT.App.waitPage("[To improve]", 1500);
						})
				});
		});

};
//--- type = arrayDisplay, arrayOptions, chartStyle, chartOptions, axisLabel , etc
exports.authExpSelectOption = function(type, option) {
	//------------- Link click --------------------------------------------------------
	return UT.Dom.click(UT.Sel.Xpath("//a[@aria-controls='collapse_auth_prop_" + type + "']"))
		.then(function() {
			//--- Card/table/carousel link click ------------------------------------------------
			var $$woption = "auth_opt_" + type + "_" + option;
			return UT.Dom.waitLocated(UT.Sel.Id($$woption), 1000)
				.then(function() {
					return UT.Dom.click(UT.Sel.Id($$woption))
						.then(function() {
							// Simulate an error in order to click on next event
							return UT.App.waitPage("[To improve]", 1500);
						})
				});
		});

};
//-- Pagination $next, $last ...
//-- page = $next, $previous, $last, $first
exports.pagination = function(page) {
	return UT.Dom.waitLocated(UT.Sel.DataAction("pagination", page), 1000)
		.then(function() {
			return UT.Dom.click(UT.Sel.DataAction("pagination", page))
				.then(function() {
					UT.log("pagination found " + page);
					// Simulate an error in order to click on next event
					//--- this produces an error on the black screen. 
					//--  We can now, click on "$previous" otherwise
					//--  error:  "Element is not clickable at point(x,y)
					return UT.App.waitPage("[To improve]", 1700);
				});
		});
};
//-- Sort&ilter small Burger Icon -------
exports.panelSortFilter = function() {
	return UT.Dom.waitLocated(UT.Sel.DataAction("actionArray", "panelfiltersort"), 10000)
		.then(function() {
			return UT.Dom.click(UT.Sel.DataAction("actionArray", "panelfiltersort"))
				.then(function() {
					// Simulate an error in order to click on next event
					return UT.App.waitPage("[To improve]", 1000);
				});
		});
};
//-- Click on icon validate of the filter panel --------------------------
exports.validateFilter = function() {
	return UT.Dom.waitLocated(UT.Sel.DataParams("apply"), 1000)
		.then(function() {
			//--- Valide filter --------------------------------------------
			return UT.Dom.click(UT.Sel.DataParams("apply"))
				.then(function() {
					// Simulate an error in order to click on nex event
					return UT.App.waitPage("[To improve]", 1000);
				});
		});
};
// ================= Authoring button close Not Save authoring ===========================
exports.closeAuthNotSave = function() {
	return UT.Dom.waitLocated(UT.Sel.Id("auth-btn-close-id"), 800).then(function() {
		//-- Close button "auth-btn-close-id" -------------------------------------- 	        
		return UT.Dom.click(UT.Sel.Id("auth-btn-close-id")).then(function() {
			//----Eventuality - Modal Question yes/no : yes : quit no Save -------------------
			return UT.Dom.waitLocated(UT.Sel.DataAction2("yes"), 1000).then(function() {
				return UT.Dom.click(UT.Sel.DataAction2("yes")).then(function() {
					return UT.App.waitPage("[To improve]", 1000);
				});
			});
		});
	});
};

// =======================================================================================
// ==================================  For login and Page Wait different =================
// =======================================================================================
/**
 * Ensure user is logged in and sitting on the given page
 * options: {
 *    testPageUrl: sdata url of page to open after login
 *              E.g.: testPageUrl: "{$hostPort}/mobile2/$client/$local/$dataset/mobileDashboard('GRAPHIC-SUBLEVEL')"
 *     pagewait:   data-s-ut-page-is-current="$graphicsDashboard.$mobileDashboard" 
 *     see the files:   authoringRequest.js or authoringStatistic.js
 *     testPageUrl is different the Page wait  
 * }
 * @returns
 */
exports.ensureLoginPageWait = function(options) {
	var defaultPage = "html://HOME";
	var page = _getPageNameFromUrl(options && options.testPageUrl || defaultPage);
	UT.log("==>ensureLoginPageWait, options.pagewait: " + options.pagewait);
	return UT.Dom.waitLocated([
			UT.Sel.Page(options.pagewait),
			UT.Sel.Page("login")
		], 5000)
		.then(function(matchedPage) {
			return true;
		})
		.then(function(isLogin) {
			if (isLogin) {
				return UT.Dom.setValue(UT.Sel.Id('login-user'), UT.Config.user)
					.then(function() {
						return UT.Dom.setValue(UT.Sel.Id('login-password'), UT.Config.password);
					})
					.then(function() {
						return UT.Dom.click(UT.Sel.Id('login-login'));
					})
			}
		})
		.then(function() {
			if (options.pagewait != "?") {
				// Wait for one or the other
				return UT.Dom.waitLocated([
					//--- change here: enter by options
					UT.Sel.Page(options.pagewait)
				], 5000);
			} else {
				return UT.Dom.waitLocated(UT.Sel.Xpath("//button[@data-action='$validate']"), 2000).then(function() {
					return UT.Dom.click(UT.Sel.Xpath("//button[@data-action='$validate']"));
				});
			}
		});
};
// ==================================  End Login and Page Wait ===========================
//================================= Woco branch ==========================================
//================================= Ltr 20/10/2016 =======================================
//==================================END===================================================