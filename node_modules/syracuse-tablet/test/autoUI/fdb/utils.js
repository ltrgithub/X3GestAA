"use strict";

var webdriver = require('selenium-webdriver');


var until = webdriver.until;
var By = webdriver.By;
var until = webdriver.until;
var _browsers = ["chrome", "MicrosoftEdge"];
var _browserName = _browsers[0];
var _log = console.log;

const _waitTO = 10000;
const _user = "guest";
const _pwd = "guest";
const _endPoint = "x3.erp.SUPERV";
const _role = "Super administrator";
const _lang = "en-US";
const _welcomePage = "$welcomeDashboard.$mobileDashboard";

//var browser = new webdriver.Builder().usingServer().withCapabilities({'browserName': 'chrome' }).build();
var browser = new webdriver.Builder().usingServer().withCapabilities({
	'browserName': _browserName
}).build();

/**
 * Accept
 */



var _untilPageLoaded = function(pageName) {
	var selector = "data-ut-page-loaded";
	if (pageName) {
		selector += '="' + pageName + '"';
	}
	return until.elementLocated(By.css('[' + selector + ']'));
};
var _untilModal = function() {
	return until.elementLocated(By.css('.modal-dialog'));
};
var _untilCss = function(selector) {
	return until.elementLocated(By.css(selector));
};
var _clickAndWait = function(selector, until) {
	return browser.findElement(selector).then(function(elmt) {
		return elmt.click().then(function() {
			return browser.wait(until, _waitTO);
		});
	});
};
var _sendKeys = function(values) {
	var deferred = new webdriver.promise.Deferred();
	values.forEach(function(v, idx) {
		browser.findElement(v.locator).then(function(elmt) {
			elmt.sendKeys(v.value);
			if (idx === values.length - 1) {
				deferred.fulfill();
				return;
			}
		}).thenCatch(function(e) {
			deferred.reject();
		});
	});
	return deferred.promise;
};
var _login = function() {
	return _sendKeys([{
		locator: By.id('login-user'),
		value: _user
	}, {
		locator: By.id('login-password'),
		value: _pwd
	}]).then(function(elmt) {
		return _clickAndWait(By.id('login-login'), _untilCss("#modal-endpoint"));
	}).then(function() {
		_sendKeys([{
			locator: By.id('login-select-role'),
			value: _role
		}, {
			locator: By.id('login-select-endpoint'),
			value: _endPoint
		}, {
			locator: By.id('login-select-language'),
			value: _lang
		}]);
	}).then(function() {
		return _clickAndWait(By.css('[data-action="$validate"]'), _untilPageLoaded(_welcomePage));
	}).then(function() {
		return _getCurrentPage();
	});
};

var _getCurrentPage = function() {
	var locator = By.css('[data-ut-page-loaded]');
	return browser.findElement(locator).then(function(elmt) {
		return elmt.getAttribute("data-ut-page-loaded");
	}).then(function(page) {
		_log && _log("CURRENT PAGE: " + page);
		return page;
	}).thenCatch(function(e) {
		_log && _log(e);
		_log && _log("NO CURRENT PAGE FOUND");
		return null;
	});
};
var _logCapabilities = function(driver) {
	driver.getCapabilities().then(function(c) {
		_log && _log(c);
	});
};

var _stop = function() {
	_log && _log("STOP");
	//browser.quit();
};
var _start = function(debug) {
	_log && _log("START");
	var url = 'http://localhost:8124/syracuse-tablet/';
	url += debug ? 'html/index_debug.html' : 'dist/index.html';
	//_logCapabilities(browser);
	return browser.manage().deleteAllCookies().then(function() {
		return browser.get(url);
	}).then(function() {
		return browser.wait(_untilPageLoaded(), _waitTO);
	}).then(function() {
		return _getCurrentPage();
	}).then(function(pageName) {
		_log && _log("CURRENT PAGE is: " + pageName);
		if (pageName === "login") {
			return _login();
		} else {
			return pageName;
		}
	}).then(function(pageName) {
		if (pageName !== _welcomePage) {
			throw new Error "Expected " + _welcomePage + " instead of " + pageName + " page";
		}
		_log && _log(pageName);
	});
};
exports.start = _start;
exports.stop = _stop;