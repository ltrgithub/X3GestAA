"use strict";
var UT = require("./../lib/ut");

// Search on a table and remove Search
describe("AQMCRUDM Search mechanism", function() {
	UT.defaultBeforeAndAfter({
		testPageUrl: "{$hostPort}/mobile2/x3/erp/GX3APP/AQMDEVICE?representation=AQMCRUDM.$query"
	});
	// ===============================================================================
	it("Test set search keyword EUR", function() {
		this.timeout(10000);
		//-- search EUR ---------------------------------------------------------------
		return UT.App.search(UT.Config.search_eur, "AQMCRUDM.$query").then(function() {
			//--- this produces an error on the black screen. 
			//--  We can now click on "removeSearch" otherwise
			//--  error:  "Element is not clickable at point(x,y)
			return UT.App.waitPage("[To improve]", 1000);
		});

	});

	it("removeSearch for navigation", function() {
		return UT.Dom.click(UT.Sel.DataAction("actionArray", "removeSearch"))
			.then(function() {
				// Wait for the word inexistant:  kind of sleep: allow to go to next click
				return UT.App.waitPage("[To improve]", 1000);
			});
	});

	it("set search keyword AUD", function() {
		//---- doesn't work ---------------------
		//return UT.App.searchInGrid (UT.Sel.Xpath("//input[@type='text'][@value='']"),UT.Config.search_aud)
		//.then(function() {
		// Wait for the word inexistant:  kind of sleep: allow to go to next click
		//	return UT.App.waitPage("[To improve]", 1000);
		//});
		// --------------------------------------
		//-- search AUD ---------------------------------------------------------------
		return UT.App.search(UT.Config.search_aud, "AQMCRUDM.$query").then(function() {
			//--- this produces an error on the black screen. 
			//--  We can now click on "removeSearch" otherwise
			//--  error:  "Element is not clickable at point(x,y)
			return UT.App.waitPage("[To improve]", 1000);
		});
	});

	it("removeSearch for navigation", function() {
		return UT.Dom.click(UT.Sel.DataAction("actionArray", "removeSearch"))
			.then(function() {
				// Wait for the word inexistant:  kind of sleep: allow to go to next click
				return UT.App.waitPage("[To improve]", 1000);
			});
	});

	// ---------------------------------------------------------------------
	//------ Logout with span.fa.fa-bars: Burger  icon ---------------------
	// ---------------------------------------------------------------------
	it("Logout for navigation", function() {
		return UT.App.logout();
	});
});