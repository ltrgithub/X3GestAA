"use strict";

var UT = require("./../lib/ut");

// Test if changing a working copy by setting a field value will sync with the server and merge the changes
describe("AQMCRUDM working copy sync test", function() {
	UT.defaultBeforeAndAfter({
		testPageUrl: "{$hostPort}/mobile2/x3/erp/GX3APP/AQMDEVICE('10')/$workingCopies?representation=AQMCRUDM.$edit"
	});

	it("Test edit facet working copy", function() {
		this.timeout(12000);
		var TEXTAXX;
		var TEXTE;
		var currentCyle;

		return UT.Dom.getValue(UT.Sel.X3Field("TEXTAXX"))
			.then(function(text) {
				TEXTAXX = text;
				UT.log("TEXTAXX: " + text);
				return UT.Dom.getValue(UT.Sel.X3Field("TEXTE"))
			})
			.then(function(text) {
				TEXTE = text;
				UT.log("TEXTE: " + text);
				UT.assertEquals(false, (text || "").indexOf("Unit test") > -1, "Dependent field MUST NOT contain text 'Unit test' before setting a value");
				return UT.Dom.getPageCycle(UT.Sel.Page("AQMCRUDM.$edit"));
			})
			.then(function(cycle) {
				currentCyle = cycle;
				UT.log("CYCLE: " + cycle);

				// Setting TEXTAXX to a value should update TEXTE on server side to contain the value that was set on TEXTAXX
				return UT.Dom.setValue(UT.Sel.X3Field("TEXTAXX"), "Unit test");
			})
			.then(function() {
				return UT.Dom.waitPageCycleChange(UT.Sel.Page("AQMCRUDM.$edit"), null, currentCyle);
			})
			.then(function(text) {
				return UT.Dom.getValue(UT.Sel.X3Field("TEXTE"))
			})
			.then(function(text) {
				UT.log("TEXTE: " + text);
				UT.assertEquals(true, (text || "").indexOf("Unit test") > -1, "Dependent field contains text 'Unit test'");
			});
	});
	//-- Ltr 24/11/2016 ----- if not error on the next script --
	it("Logout edit facet working copy", function() {
		this.timeout(12000);
		return UT.App.logout();
	});

});