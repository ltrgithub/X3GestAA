"use strict";

var mock = require("syracuse-tablet/test/qunit/tests/fixtures/datasetFixtures");
var sdataReq = require("syracuse-tablet/html/js/wc/sdata/sdataRequester");
var Controller = require("syracuse-tablet/html/js/wc/controllers/sdataController").SdataController;

function _getDataset(name, dataName, protoName) {
	var data = $.extend(true, {}, mock.fixtures[name][dataName]);
	var proto = $.extend(true, {}, mock.fixtures[name][protoName]);
	var pageData = sdataReq.createPageDataJson(data, proto);
	return pageData.dataset;
}

QUnit.module("Mock-Dataset, controller", function() {
	QUnit.test("Simple controller, test action parameters", function(assert) {
		var ds;
		var ct;

		var nextResponse;
		var checkNextRequest;
		return $.smResolve()
			.then(function() {

				sdataReq.__testInjectAjax({
					request: function(url, method, data, headers, options) {
						// Method to check generated request
						checkNextRequest && checkNextRequest(url, method, data);

						return $.smResolve()
							.then(function() {
								// Method to generate simulated response
								return nextResponse && nextResponse();
							});
					}
				})
			})
			.then(function() {
				ds = _getDataset("AQTCRUDM.$edit", "CODE=10", "prototype");
				ct = new Controller(ds, null, true);

				// Function to check ajax result
				checkNextRequest = function(url, method, data) {
					assert.equal(method, "PUT", "Method ok");
					assert.notEqual(data, null, "Data set");
					assert.equal(data.$actions.WPARAMS_LIG44444.$isRequested, true, "Action is requested");

					assert.equal(data.$actions.WPARAMS_LIG44444.$parameters.PARAM1, "9", "Parameter 1 value");
					assert.equal(data.$actions.WPARAMS_LIG44444.$parameters.PARAM2, "2016-01-25", "Parameter 2 value");
					assert.equal(data.$actions.WPARAMS_LIG44444.$parameters.PARAM3, "039144", "Parameter 3 value");
					assert.equal(data.$actions.WPARAMS_LIG44444.$parameters.PARAM4, "10", "Parameter 4 value");
				};

				// Fake ajax response
				nextResponse = function() {
					return {
						success: true,
						status: 200,
						data: {
							"$diagnoses": [{
								"$severity": "info",
								"$message": "=>>param1 Decimal=9 param2 Date=20160125 Param3 alphanum=039144 Param4 entier=10"
							}]
						}
					};
				};
				return ct.triggerAction("WPARAMS_LIG44444");
			})
			.always(function() {
				sdataReq.__testRestoreAjax();
			});
	});

});