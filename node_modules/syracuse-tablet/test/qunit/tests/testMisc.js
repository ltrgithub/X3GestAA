"use strict";

QUnit.module("Promises, Misc", function() {

	/*
	 * Test promise chain with failure
	 */
	QUnit.test("Dataset creation, Promise with failure 1", function(assert) {
		try {
			$.smResolve().then(function() {
				return $.smResolve().then(function() {
					assert.ok(ok, "Throws error");
					throw new Error("Failure")
				}).then(function(e) {
					assert.ok(false, "then 1 - Should'nt be called");
				}).fail(function(e) {
					assert.ok(e.message === "Failure", "First fail must be called");
				}).then(function(e) {
					assert.ok(false, "then 2 - Should'nt be called");
				}).fail(function(e) {
					assert.ok(e.message === "Failure", "Second fail must be called");
				})
			}).then(function() {
				assert.ok(false, "then 3 - Should'nt be called");
			}).fail(function(e) {
				assert.ok(e.message === "Failure", "Last fail must be called");
			})
		} catch (e) {
			assert.ok(false, "Unexpected catched error " + e.message);
		}
	});

});