"use strict";
(function($) {
	if (!$.smobile) $.smobile = {};
	var _log = $.smobile.log;
	var exports = $.smobile.mockup = {};
	var _consts = {
		tmplPage: "pages/",
		tmplDefHeader: "pages/default/header",
		tmplRoot: "templates/pages/",
		dataFile: "/data.json",
		tmplHead: "header",
		tmplMain: "main"
	};
	var _defInfo = {
		home: false,
		type: "static",
		cached: false,
		refreshed: false,
		appId: "site",
		changeHash: false
	};
	var _pages = {
		"home": {
			home: true,
			type: "dashboard"
		},
		"about": {
			type: "static"
		},
		"settings": {
			type: "static"
		},
		"setup": {
			type: "static"
		},
		"login": {
			type: "static"
		},
		"customers.home": {
			appId: "customers",
			type: "appdashboard",
			cached: true
		},
		"customers.detail": {
			appId: "customers",
			type: "appdashboard",
			cached: true
		},
		"detail": {
			type: "syracuse",
			cached: true
		},
		"lookup": {
			type: "syracuse"
		},
		"query": {
			type: "syracuse"
		},
		"edit": {
			type: "syracuse",
			cached: true
		}
	};

	for (var p in _pages) {
		_pages[p] = $.extend(true, {}, _defInfo, _pages[p]);
	}

	var _rooturl = (function() {
		var url = window.location.href.split('/');
		url[url.length - 1] = _consts.tmplRoot;
		return url.join('/');
	})();

	exports.loadData = function(state) {
		var deferred = $.Deferred();
		var url = _rooturl + state.name + _consts.dataFile;
		if (state.detailid) {
			// If the link has a data-detailid attribute we expect a data.detaild.json file
			url = url.replace(".json", "." + state.detailid + ".json");
		}
		$.ajax({
			url: url,
			async: true
		}).complete(function(jqXHR, textStatus) {
			var data = null;
			try {
				var json = null;
				if (jqXHR.status === 200) {
					json = JSON.parse(jqXHR.responseText ? jqXHR.responseText.trim() : "{}");
				} else if (jqXHR.status === 404) {
					json = {};
				} else if (json === null) {
					throw new Error("Unexpected http status");
				}
				deferred.resolve(json);
			} catch (e) {
				deferred.reject($.smobile.helpers.toDiagnose({
					message: "Error loading [" + state.name + "] - Status[" + jqXHR.status + "]",
					exception: e,
					where: "mockup.loadData"
				}));
			}
		});
		return deferred.promise();
	};

	exports.buildHtml = function(state, data) {
		var deferred = $.Deferred();
		try {
			var root = _consts.tmplPage + state.name + "/";
			$.when($.stemplates.exec(root + _consts.tmplMain, data), $.stemplates.exec(root + _consts.tmplHead, data, {
				failNotFound: false
			})).then(function(content, header) {
				if (header == null) {
					$.stemplates.exec(_consts.tmplDefHeader, data).then(function(header) {
						_log && _log("Mockup default templates loaded");
						deferred.resolve({
							content: content,
							header: header
						});
					}, function(e) {
						_log && _log($.smobile.helpers.toDiagnose({
							message: "Error loading mockup page[" + state.name + "]",
							exception: e,
							where: "mockup.init"
						}));
						deferred.resolve({
							content: content,
							header: {}
						});
					});
				} else {
					deferred.resolve({
						content: content,
						header: header
					});
				}
			}, function(e) {
				deferred.reject(e);
			});
		} catch (e) {
			deferred.reject($.smobile.helpers.toDiagnose({
				exception: e,
				where: "mockup.buildHtml"
			}));
		}
		return deferred.promise();
	};


	exports.init = function(page, data) {
		//Load default template in parallel
		$.when($.stemplates.exec(_consts.tmplDefHeader, {})).then(function(content, header) {
			_log && _log("mockup.init", "Default templates loaded");
		}, function(e) {
			_log && _log($.smobile.helpers.toDiagnose({
				message: "Default templates loading error",
				exception: e,
				where: "mockup.init	"
			}));
		});
	};

	exports.pageInfo = function(id) {
		return _pages[id];
	};

	exports.createPage = function($parent, historyState) {
		return null;
	};

})(jQuery);