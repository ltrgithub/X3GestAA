"use strict";
(function($) {
	if (!$.smobile) $.smobile = {};

	var _output = console.info ? console.info.bind(console) : console.log.bind(console);
	var _log = $.smobile.log = function() {
		var tmp = Array.prototype.join.call(arguments, " - ");
		_output(tmp);
	};

	var exports = $.smobile.helpers = {};

	exports.UUID = function() {
		return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,
			function(c) {
				var r = Math.random() * 16 | 0,
					v = c == 'x' ? r : (r & 0x3 | 0x8);
				return v.toString(16);
			});
	};

	exports.domId = function(id) {
		return id.replace(/\\|\/|\./g, "_");
	};
	var _uidCpt = 0;
	exports.uid = function() {
		return exports.domId($.camelCase((arguments.length > 0 ? Array.prototype.join.call(arguments, '-') + '-' : "") + _uidCpt++));
	};


	exports.defineClass = function(constructor, parent, members) {
		function _addMembers(proto, members) {
			for (var name in members || {}) {
				var member = members[name];
				if (typeof member.get === "function" || typeof member.set === "function") {
					Object.defineProperty(proto, name, member);
				} else {
					proto[name] = member;
				}
			}
		}

		if (parent) constructor.prototype = Object.create(parent.prototype);
		constructor.prototype.constructor = constructor;
		_addMembers(constructor.prototype, members);
		return constructor;
	};

	var _stackRegexp = (function() {
		var url = window.location.href.split('/');
		url.splice(url.length - 1, 1);
		return new RegExp(url.join('/'), "g");
	})();

	exports.cleanStack = function(stack) {
		return stack ? stack.replace(_stackRegexp, "") : "";
	};
	exports.toDiagnose = function(o, parent) {
		if (!parent) parent = {
			$diagnoses: []
		};
		if (!o) return prarent;
		if (!Array.isArray(o)) o = [o];
		o.forEach(function(diag) {
			var d = $.extend(true, {}, diag);
			if (d.exception) {
				d.message = (d.message ? d.message + "\n" : "") + d.exception.message;
				if (d.exception.stack) {
					d.stackTrace = exports.cleanStack(d.exception.stack);
				}
			}
			if (!d.severity) d.severity = "error";
			if (!d.message) d.message = "";
			parent.$diagnoses.push(d);
		});
		return parent;
	};

})(jQuery);