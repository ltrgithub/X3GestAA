"use strict";
(function($) {
	if (!$.smobile) $.smobile = {};
	var $tests = $.smobile.$tests = {};
	var _globalContext = {};

	$tests.Process = $.smobile.helpers.defineClass(function(name, $res, color) {
		this.name = name;
		this.$res = $res;
		this.color = color && color.length > 0 ? color : null;
	}, null, {
		clear: function() {
			this.$log.empty();
		},
		log: function(t, clear) {
			if (clear === true) this.$log.empty();
			t = Math.round((new Date().getTime() - this.start) / 1000) + " - " + t + "\n";
			this.$log.append('<mark style="color:' + (this.color || 'black') + '">' + t + "</mark>");
		},
		run: function(action) {
			try {
				this.start = new Date().getTime();
				this.action = action;
				// if color -> one log per action - if not one log for all actions
				var id = this.color ? action : this.name;
				this.$log = this.$res.find("." + id);
				if (this.$log.length == 0) {
					this.$log = $('<pre class="' + id + '"/>"').appendTo(this.$res);
				}
				this.clear();
				if (!this[this.action]) throw new Error("action [" + action + "] not found");
				this[this.action].apply(this);
			} catch (e) {
				this.log("RUN EXCEPTION - " + this.action + " - " + e.message);
			}
		},
		setGlobalCtx: function(prop, val) {
			_globalContext[prop] = val;
		},
		getGlobalCtx: function(prop) {
			return _globalContext[prop];
		}
	});

})(jQuery);