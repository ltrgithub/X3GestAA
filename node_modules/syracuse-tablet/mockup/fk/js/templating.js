(function($){
	$.stemplates = {};
	var exports = $.stemplates;
	var _config = {
		htmlHolder: "body",
		tmplPath: "templates",
		tmplExt: ".tmpl"
	}	
	var _temptates={};
	var _url = (function(){
		var url = window.location.href.split('/');
		url[url.length-1] = _config.tmplPath + "/";
		return url.join('/');
	})();

	var _get = function (filePath, tmplId) {	
		tmplId = tmplId || filePath;
		var deffered = $.Deferred(); 
		if (_temptates[tmplId]) {
			deffered.resolve(_temptates[tmplId]);
		}else if ($("#" + tmplId).length > 0){
			_temptates[tmplId] = $("#" + tmplId).html();
			deffered.resolve(_temptates[tmplId]);
		}else{
			$.ajax({
				url : _url + filePath + _config.tmplExt,
				async : true
			}).complete(function(jqXHR, textStatus) {
				if (jqXHR.status === 200) {
					// We add the script tag here to have Syntax highlighting in .tmpl file
					var e = $(_config.htmlHolder);
					if (jqXHR.responseText.indexOf("<script") == -1){
						e.append($('<script id="' +  tmplId + '" type="text/x-handlebars-template">' + jqXHR.responseText + "</script>"));
					}else{
						$(jqXHR.responseText).each(function(i, script){
							e.append(script);
						})							
					}
					deffered.resolve($("#" + tmplId).html());
				}else{
					deffered.resolve(null);
				}
			});
		}	
		return deffered.promise();
	}
	
	// file : template file path - tmplId : template id - tmplId = null if only one template in the file
	exports.exec = function (filePath, context, tmplId) {
		var deffered = $.Deferred(); 
		tmplId = tmplId || filePath;
		$.when(_get(filePath, tmplId)).done(function(tmpl){
			try{
				if (tmpl){
					if(typeof tmpl === "string"){
						tmpl = Handlebars.compile(tmpl);
						_temptates[tmplId] = tmpl;
					}
				}else{
					console.error("Template not found\n\tUrl = [" + _url + "]\n\tfilePath[#" + filePath + "]\n\ttmplId[#" + tmplId + "]\n\tExt [" +  _config.tmplExt + "]")
				}
				deffered.resolve(tmpl ? tmpl(context || {}) : null);
			}catch(e){
				console.error("Template error\n\t" + e.message + "\n\tUrl = [" + _url + "]\n\tfilePath[#" + filePath + "]\n\ttmplId[#" + tmplId + "]\n\tExt [" +  _config.tmplExt + "]")
			}
		});
		return deffered.promise();
	}
	
	// Execute a template already loaded - Multiple templates in a same file
	exports.execSync = function(tmplId, context){
		var tmpl = _temptates[tmplId];
		if (!_temptates[tmplId]) {
			tmpl = $("#" + tmplId).html();
			if (tmpl){
				tmpl = Handlebars.compile(tmpl);
				_temptates[tmplId] = tmpl;
			}
		}
		return tmpl ? tmpl(context || {}) : null
	}
	
	exports.init = function (){
		_config.tmplPath = _config.tmplPath + ($.isWinJs ? "/winjs" : $.isMetroUi ? "/metro" : "");
		_url = window.location.href.split('/');
		_url[_url.length-1] = _config.tmplPath + "/";
		_url = _url.join('/');
	}
	
})(jQuery);