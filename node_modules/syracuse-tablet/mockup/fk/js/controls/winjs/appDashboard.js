"use strict";
(function($) {
	var that = $.smobile;
	that.controls = that.controls || {};
	var _consts = {
		"menu_dash_size": "s-m-menu-dash-size",
		"default_menu_name": "dash.default",
		"default_menu_class": "dash"

	};

	var _sizeMap = {
		smallListIconTextItem: {
			width: 310,
			height: 80
		},
		mediumListIconTextItem: {
			width: 310,
			height: 170
		},
		largeListIconTextItem: {
			width: 310,
			height: 260
		},
		defaultSize: {
			width: 310,
			height: 80
		}
	};

	window.sAppListGroupInfo = WinJS.Utilities.markSupportedForProcessing(function groupInfo() {
		return {
			enableCellSpanning: true,
			cellWidth: 310,
			cellHeight: 80
		};
	});


	window.sAppListItemInfo = WinJS.Utilities.markSupportedForProcessing(function itemInfo(itemIndex) {
		var size = _sizeMap.defaultSize;
		// Get the item from the data source
		var item = window.sAppListDataSrc.getAt(itemIndex);
		if (item) {
			// Get the size based on the item type
			size = _sizeMap[item.cellType];
		}
		return size;
	});

	window.sAppListItemTemplate = WinJS.Utilities.markSupportedForProcessing(function MyCellSpanningJSTemplate(itemPromise) {
		return itemPromise.then(function(currentItem) {
			// execute cell template with currentItem context
			var result = $.stemplates.execSync("appDashBoardsCell", currentItem.data);
			if (result) {
				// Additional html...
			} else {
				result = '<div>No template found</div>';
			}
			return $(result)[0];
		});
	});

	that.controls.AppDashboard = {
		sync: false,
		asynchandler: function() {
			var control = this.control;
			if (!control.data.items || control.data.items.length === 0) return;
			var apps = [];
			control.data.items.forEach(function(v, i) {
				var css = (v.data.icon || _consts.default_menu_name).toLowerCase().split(".");
				if (css.length == 1) css.splice(0, 0, _consts.default_menu_class);
				apps.push({
					icon: _consts.menu_dash_size + ' ' + css.join(" "),
					title: v.data.title || "",
					endpoint: v.data.dsdescription || "",
					description: v.data.description || "",
					href: "#" + v.data.hash,
					cellType: "smallListIconTextItem"
				});
			});
			window.sAppListDataSrc = new WinJS.Binding.List(apps);
			$.when($.stemplates.exec("appDashBoards", {}, "appDashBoardsList")).done(function(html) {
				var root = $('#' + control.id);
				root.html(html);
				WinJS.UI.processAll(root[0]);
			});

		},
		handler: function(c, after) {
			var controller = this;
			after({
				html: '<article id="' + c.id + '" class="Applications"/>',
				bind: true,
				async: that.controls.AppDashboard.asynchandler.bind({
					controller: controller,
					control: c
				})
			});
		}
	};
})(jQuery);