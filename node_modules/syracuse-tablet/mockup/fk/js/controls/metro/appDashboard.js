"use strict";
(function($) {
	var _consts = {
		"menu_dash_size": "s-m-menu-dash-size",
		"default_menu_name": "dash.default",
		"default_menu_class": "dash"

	};
	var that = $.smobile;
	that.controls = that.controls || {};
	
	function metro_setTilesAreaSize(){
		var groups = $(".tile-group");
		var tileAreaWidth = 160;
		$.each(groups, function(i, t){
			tileAreaWidth += $(t).outerWidth()+46;
		});
		$(".Applications").css({
			width: tileAreaWidth
		});
	}
	
	function metro_addMouseWheel(){
		var tileArea = $()
		$("body").mousewheel(function(event, delta){
			var scroll_value = delta * 50;
			$(document).scrollLeft($(document).scrollLeft() - scroll_value);
			return false;
		});
	};
	function metro_init(){
		metro_addMouseWheel ();
		metro_setTilesAreaSize ();
	}
	
	
	that.controls.AppDashboard = {
		sync: false,
		asynchandler: function() {
			var control= this.control;
			if(!control.data.items || control.data.items.length ===0) return;
			var apps=[];
			control.data.items.forEach(function(v, i) {
				var css = (v.data.icon || _consts.default_menu_name).toLowerCase().split(".");
				if (css.length == 1) css.splice(0, 0, _consts.default_menu_class);
				apps.push({
					icon: _consts.menu_dash_size + ' ' + css.join(" "),
					title: v.data.title || "",
					endpoint: v.data.dsdescription || "",
					description: v.data.description || "",
					href: "#" + v.data.hash,
				})
			});
			var context = {
					title: $.helpers.locale().administration.welcome,
					lastName:"DAL BO",
					firstName:"Frédéric",
					appsTitle: "Applications",
					appsList: apps,
			}
			$.when($.stemplates.exec("appDashBoards", context)).done(function(html){
				$('#' + control.id).html(html);		
				metro_init();
			});
		},
		handler: function(c, after) {
			var controller = this;
			after({
				html: '<article id="' + c.id + '" class="Applications"/>',
				bind: true,
				async: that.controls.AppDashboard.asynchandler.bind({
					controller: controller,
					control: c
				})
			});
		}
	};
})(jQuery);