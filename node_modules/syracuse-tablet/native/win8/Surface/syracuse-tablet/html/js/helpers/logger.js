define(function(require, exports, module) {
"use strict";

var winjs = require('syracuse-tablet/html/js/helpers/winjs');
var utils = require('syracuse-tablet/html/js/helpers/utils');

var _log;

if (winjs.isAvailable()) {
	_log = function() {
		var args = [];
		for (var i = 0; i < arguments.length; i++) {
			args.push(arguments[i]);
		}
		winjs.callWinJS("logger", "log", {
			"args": args
		}, true);
	};
} else {
	_log = function() {
		var text = [];
		for (var i = 0; i < arguments.length; i++) {
			var a = arguments[i];
			if (a != null) {
				if (utils.isError(a))
					console && console.log && console.log(a.message, "\n", utils.cleanStack(a.stack));
				else
					text.push(a);
			}
		}
		console && console.log && console.log(text.join(text, " "));
	};
}
if (window) {
	window.logger = _log;
}

function _getLogger(module) {
	var logger = function() {
		var text, errs;
		for (var i = 0; i < arguments.length; i++) {
			if (utils.isError(arguments[i])) {
				if (!errs) errs = [];
				errs.push(arguments[i]);
			} else {
				if (!text) text = ["[" + module + "]: "];
				text.push(arguments[i]);
			}
		}
		if (text.length > 1) _log(text.join(" "));
		if (errs) {
			errs.forEach(function(e) {
				_log("[" + module + "]: " + e.message);
				if (e.stack) _log(utils.cleanStack(e.stack));
			});
		}
	};
	return logger;
}
exports.log = _log;
exports.getLogger = _getLogger;
});