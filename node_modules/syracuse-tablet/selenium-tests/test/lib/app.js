"use strict";

var driver = require("./driver");
var UT = require("../ut");

/**
 * Point browser to app url
 */
exports.loadApp = function() {
	return UT.Driver.Browser().get(UT.Config.url);
};

/**
 * Ensure user is logged in and sitting on the welcome page
 * @returns
 */
exports.ensureLogin = function() {
	return UT.App.waitPage("login")
		.then(function() {
			return UT.DOM.setValue(UT.SEL.$$Id('login-user'), UT.Config.user);
		})
		.then(function() {
			return UT.DOM.setValue(UT.SEL.$$Id('login-password'), UT.Config.password);
		})
		.then(function() {
			return UT.DOM.click(UT.SEL.$$Id('login-login'));
		})
		.then(function() {
			var doContextModal;
			return UT.App.waitModal("modal-endpoint", 5000)
				.then(function() {
					// Select context dialog is showing up so we fill and accept it
					doContextModal = function() {
						return _handleModalSelectContext();
					};
				})
				.thenCatch(function() {
					// Select context does not show up, so we assume it's cached and do nothing
					// next step will check for the welcome page and continue
				})
				.then(function() {
					return doContextModal && doContextModal();
				})
				.then(function() {
					// Either modal did not show up or it has been validated
					// So wait for welcome page
					return UT.App.waitPage("$welcomeDashboard.$mobileDashboard", 5000);
				})
				.then(function() {
					return _ensureCorrectContext();
				})
				.then(function() {
					// Wait for welcome page agin for the matter the context had to be switched
					return UT.App.waitPage("$welcomeDashboard.$mobileDashboard", 5000);
				});
		});
};

exports.openChangeProfile = function() {
	var $$$switchContext = UT.SEL.$$Action("linkClicked", "switchContext");

	return UT.DOM.click(UT.SEL.$$Css(".s-m-header-user-info > a")).then(function() {
		return UT.DOM.waitVisible($$$switchContext, 500);
	})
		.then(function() {
			return UT.DOM.click($$$switchContext);
		})
		.then(function() {
			return UT.App.waitModal("modal-endpoint", 1000);
		});
};

/**
 * Fill modal to select context and validate
 * @returns
 */
function _handleModalSelectContext() {
	return UT.DOM.setValue(UT.SEL.$$Id("login-select-role"), UT.Config.role)
		.then(function() {
			return UT.DOM.setValue(UT.SEL.$$Id("login-select-endpoint"), UT.Config.endpoint);
		})
		.then(function() {
			return UT.DOM.setValue(UT.SEL.$$Id("login-select-language"), UT.Config.lang);
		})
		.then(function() {
			return UT.DOM.click(UT.SEL.$$Action("$validate"));
		});
}

/**
 * Check if current context is the desired one and open modal if not
 * @returns
 */
function _ensureCorrectContext() {
	var desiredtCtx = [UT.Config.user, UT.Config.role, UT.Config.lang, UT.Config.endpoint].join(',');
	return UT.DOM.getAttr(UT.SEL.$$Attr("data-s-ut-user-ctx"), "data-s-ut-user-ctx").then(function(curCtx) {
		if (curCtx === desiredtCtx) {
			// Context is ok, so to nothing
			return UT.resolve();
		}
		return exports.openChangeProfile().then(function() {
			return _handleModalSelectContext();
		});
	});
}

/** 
 * Wait for a page to open up, default timeout is 10000ms
 * Return is a promise with parameter beeing the found webelement
 */
exports.waitPage = function(pageName, timeout) {
	timeout = timeout != null ? timeout : 10000;
	UT.log("Waiting for page: " + pageName);
	return driver.Browser().wait(
		driver.Until.elementLocated({
			css: '[data-s-ut-page-name="' + pageName + '"]' + '[data-s-ut-page-is-current="' + pageName + '"]'
		}),
		timeout
	);
};


/** 
 * Wait for a modal to open up, default timeout is 10000ms
 * Return is a promise with parameter beeing the found webelement
 */
exports.waitModal = function(modalName, timeout) {
	timeout = timeout != null ? timeout : 10000;
	UT.log("Waiting for modal: " + modalName);
	return driver.Browser().wait(
		driver.Until.elementLocated({
			id: modalName
		}),
		timeout
	);
};