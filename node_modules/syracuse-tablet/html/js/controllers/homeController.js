"use strict";

var Base = require("syracuse-tablet/html/js/controllers/sdataController").SdataController;
var utils = require('syracuse-tablet/html/js/helpers/utils');
var modules = require('syracuse-tablet/html/js/common/modules');
var notifications = require('syracuse-tablet/html/js/helpers/notifications');


exports.HomeController = utils.defineClass(
	function HomeController(dataset, page) {
		this.page = page;
		Base.call(this, dataset);
	},
	Base, {
		destroy: function() {
			Base.prototype.destroy.call(this);
		},
		headerFooterToggle: function() {
			var isSmartphone = modules.get("siteLayout").getDeviceType() === "smartphone";
			if (this._header == null || this._header.actionAdapter == null) {
				var panelInfo;
				panelInfo = {
					name: "headerEditHome",
					topIndex: 0,
					selector: "header",
					$type: "application/x-panel-header-edithome"
				}
				this._header = this.page.attachedControlsMgr.createAddtionalControl(panelInfo, {});
			}
			if (this._footer == null || this._footer.actionAdapter == null) {
				if (isSmartphone) {
					panelInfo = {
						name: "footerEditHome",
						bottomIndex: 0,
						selector: "footer",
						$type: "application/x-panel-footer-edithome-smartphone"
					};
				} else {
					panelInfo = {
						name: "footerEditHome",
						bottomIndex: 0,
						selector: "footer",
						$type: "application/x-panel-footer-edithome-tablet"
					};
				}
				this._footer = this.page.attachedControlsMgr.createAddtionalControl(panelInfo, {});
			}

			this.page.attachedControlsMgr.toggleControls("headerEditHome", "header")
			this.page.attachedControlsMgr.toggleControls("footerEditHome", "footer")

			this.page.computeLayout();
		},
		factoryId: function() {
			var app = modules.get("appController").App;
			return app._currentUserProfile.securityProfile.factoryId
		},
		showMyTemplates: function() {
			var factoryId = this.factoryId();
			return factoryId != null && factoryId != "";
		},
		toggleConfig: function(saveContext) {
			if (saveContext) {
				this.saveContext();
			} else {
				this.restoreContext();
			}
			if (this.configActive) { // config already enabled
				this.page._disabledConfig()
			} else {
				this.page._enabledConfig()
			}
		},
		disabledConfig: function() {
			this.headerFooterToggle();
			this.configActive = false;
		},
		enabledConfig: function(forceShow) {
			this.headerFooterToggle(forceShow);
			this.configActive = true;
		},
		isConfigActive: function() {
			return this.configActive;
		},
		dashboardDescriptionChange: function(newDescription) {
			this.saveContext();
			this.page.pageData.meta.description = newDescription;
			this.setDirty(true);
		},
		setDirty: function(dirty) {
			this._dirty = dirty;
			notifications.publish(["sm.dashboard.state.change"], dirty)
		},
		saveContext: function() {
			this._article = this._article || $.extend(true, {}, this.page.pageData.page.$article);
			this._meta = this._meta || $.extend(true, {}, this.page.pageData.meta);
		},
		restoreContext: function() {
			this.page.pageData.page.$article = $.extend(true, {}, this._article || this.page.pageData.page.$article)
			this.page.pageData.meta = $.extend(true, {}, this._meta || this.page.pageData.meta)
			this.cleanContext();
		},
		cleanContext: function() {
			this._article = null;
			this._meta = null;
		}
	}
);