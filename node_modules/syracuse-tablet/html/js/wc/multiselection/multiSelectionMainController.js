"use strict";

var Base = require("syracuse-tablet/html/js/wc/controllers/sdataController").SdataController;

var utils = require('syracuse-tablet/html/js/wc/helpers/utils');
var jsutils = require('syracuse-tablet/html/js/wc/helpers/jsutils');
var locale = require('syracuse-tablet/html/js/wc/helpers/locale');
var sdataReq = require("syracuse-tablet/html/js/wc/sdata/sdataRequester");
var sdataUtils = require("syracuse-tablet/html/js/wc/sdata/sdataUtils");
var protocolHelpers = require("syracuse-tablet/html/js/wc/sdata/protocolHelpers");
var environment = require('syracuse-tablet/html/js/wc/helpers/environment');
var modules = require('syracuse-tablet/html/js/wc/common/modules');
var protoHelpers = require('syracuse-tablet/html/js/wc/sdata/protocolHelpers');

/**
 * Main multi-selection controller
 * Declared at queryPageLevel
 */
exports.MultiSelectionMainController = utils.defineClass(
	function MultiSelectionMainController(queryPage) {
		if (queryPage == null || queryPage.isFacet == null || !queryPage.isFacet("$query")) {
			throw new Error("Sdata query page expected");
		}
		Base.call(this, queryPage.pageData.dataset, null, queryPage.pageData.isWorkingCopy);
		this._page = queryPage;
		this._panel = null
		this._array = null;
		this._panelRun = null;
	},
	Base, {

		destroy: function() {
			Base.prototype.destroy.call(this);
			this._page == null;
			this._panel = null;
			this._array = null;
			this._panelRun = null;
		},
		/**
		 * Caller queryPage
		 * Toggles the status
		 * Returns true is status enabled
		 */
		multiSelToggleStatus: function() {
			var isSmartphone = modules.get("siteLayout").getDeviceType() === "smartphone";
			if (this._panel == null) {
				var panelInfo;
				if (isSmartphone) {
					panelInfo = {
						name: "headerMultisel",
						topIndex: 0,
						selector: "header",
						$type: "application/x-panel-header-multisel-smartphone"
					}
				} else {
					panelInfo = {
						name: "footerMultisel",
						topIndex: 0,
						selector: "footer",
						$type: "application/x-panel-footer-multisel-tablet"
					}
				}
				this._panel = this._page.attachedControlsMgr.createAddtionalControl(panelInfo, {});
				this._array = this._page.getQueryArray();
			}
			this.isEnabled = this._page.attachedControlsMgr.toggleControls(isSmartphone ? "headerMultisel" : "footerMultisel", isSmartphone ? "header" : "footer");
			// Notifies header/footer
			this._panel.multiSelectionController.multiSelToggleStatus(this.isEnabled);
			this._array.multiSelToggleStatus(this.isEnabled);
			if (!isSmartphone) {
				//Disable header
				this._page.attachedControlsMgr.findByName("header").disable(this.isEnabled);
			}
			return this.isEnabled;
		},
		/**
		 * Caller arrayRow/Cell on click on record
		 * Toggles the status of card/row
		 */
		multiSelToggleRecord: function($$recordElmt) {
			if (this._isProcessingData()) {
				return;
			}
			$$recordElmt.toggleClass("s-m-multi-selected");
			// Notifies header/footer
			this._panel.multiSelectionController.multiSelToggleRecord($$recordElmt.is(".s-m-multi-selected"));
		},
		/**
		 * Caller queryPage
		 * Applies $actionName to selected rows/cards
		 */
		multiSelTriggerAction: function($actionName) {
			if ($actionName === "showdiagnoses") {
				this._array.multiSelShowDiagnoses();
			} else if ($actionName === "exit") {
				this._processExit();
			} else {
				this._processStart($actionName).fail(function(error) {
					modules.get("modal").asynchError(locale.text("multiselect.processAll.fail"), error).then(function() {
						self._processEnd(_data, array);
					});
				});
			}
		},
		_isProcessingData: function() {
			return this._page.attachedControlsMgr.isVisible(this._panelRun);
		},
		_processExit: function(array) {
			// Restore header/footer and select unselected - Remove error/Success status
			this._processTogglePanel().multiSelectionController.multiSelStopProcessing();
			// Remove diags
			this._array.multiSelRemoveDiagnoses();
		},
		_processStart: function($actionName) {
			var self = this;
			return $.smResolve().then(function() {
				// Displays dedicated footer/header and hides unselected rows
				self._processTogglePanel().multiSelectionController.multiSelStartProcessing();
				return {
					data: self._array.multiSelGetSelectedData(),
					link: self._page.controller.dataset.getLink($actionName)
				}
			}).then(function(info) {
				if (!info.link || !info.data) {
					return null;
				}
				var deferred = $.Deferred();
				var _run = function(idx) {
					if (idx >= info.data.length) {
						deferred.resolve(info);
					} else {
						self._processOne(info.link, info.data[idx], idx).then(function() {
							_run(idx + 1);
						});
					}
				};
				_run(0);
				return deferred.promise();
			}).then(function(info) {

			})
		},
		_processOne: function(link, data, idx) {
			var self = this;
			var deferred = $.Deferred();
			var _end = function(success, result) {
				if (!self._isProcessingData()) {
					// Process stopped
					return;
				}
				var diagsMsg = [];
				var diagsErr = [];
				if ($.isPlainObject(result)) {
					(sdataUtils.scanDiagnoses(result) || []).forEach(function(d) {
						if (d.$severity === "error") {
							diagsErr.push(d);
						} else {
							diagsMsg.push(d);
						}
					});
				}
				success = success && diagsErr.length == 0;
				if (!success) {
					if (jsutils.isError(result)) {
						data.$diagnoses = [{
							$message: result.message,
							$stackTrace: result.stack
						}];
					} else {
						data.$diagnoses = diagsErr;
					}
				} else {
					data.$diagnoses = diagsMsg;
				}
				data.status = success ? "success" : "error";
				self._array.multiSelAddDiagnoses(data);
				deferred.resolve(success);
			};
			setTimeout(function() {
				if (idx % 2 == 0) {
					_end(true);
				} else {
					_end(false, {
						$diagnoses: [{
							$message: "test failed idx=" + idx,
							$severity: "error"
						}]
					})
				}
			}, 1000);
			return deferred.promise();
		},
		_processTogglePanel: function() {
			var isSmartphone = modules.get("siteLayout").getDeviceType() === "smartphone";
			if (this._panelRun == null) {
				var panelInfo;
				if (isSmartphone) {
					panelInfo = {
						name: "headerMultiselRun",
						topIndex: 0,
						selector: "header",
						$type: "application/x-panel-header-multisel-run-smartphone"
					}
				} else {
					panelInfo = {
						name: "footerMultiselRun",
						topIndex: 0,
						selector: "footer",
						$type: "application/x-panel-footer-multisel-run-tablet"
					}
				}
				this._panelRun = this._page.attachedControlsMgr.createAddtionalControl(panelInfo, {});
			}
			this._page.attachedControlsMgr.toggleControls(isSmartphone ? "headerMultiselRun" : "footerMultiselRun", isSmartphone ? "headerMultisel" : "footerMultisel");
			return this._panelRun;
		},
		getSelectedData: function() {
			return this._array.multiSelGetSelectedData();
		}
	});