"use strict";

var Prototype = require('syracuse-tablet/html/js/wc/sdata/prototype').Prototype;

var CtrlChartArray = require('syracuse-tablet/html/js/wc/controls/array/CtrlChartArray').CtrlChartArray;
var CtrlSingleArray = require('syracuse-tablet/html/js/wc/controls/array/fdb/CtrlSingleArray').CtrlSingleArray;
var CtrlArrayTable = require('syracuse-tablet/html/js/wc/controls/array/fdb/CtrlArrayTable').CtrlArrayTable;
var CtrlArrayCard = require('syracuse-tablet/html/js/wc/controls/array/fdb/CtrlArrayCard').CtrlArrayCard;
var CtrlArrayCarousel = require('syracuse-tablet/html/js/wc/controls/array/fdb/CtrlArrayCarousel').CtrlArrayCarousel;
var CtrlArraySeparator = require('syracuse-tablet/html/js/wc/controls/array/fdb/CtrlArraySeparator').CtrlArraySeparator;

exports.createControl = function(controller, article, parent, opts) {
	var $bind = article.$bind;
	var $type = controller.dataset.prototype.propGetType($bind);
	var $format = controller.dataset.prototype.propGetFormat($bind);
	if ($type != "application/x-array") {
		return null;
	}
	var $display = controller.isEditMode() || !article.$display ? "table" : article.$display;
	if ($display === "carousel") {
		$display = "card";
		opts.displayAsCarousel = true;
	}
	article.$display = $display;
	var proto = controller.dataset.prototype.propGetProto($bind);
	if (proto.getValueByPath("$cube")) {
		return CtrlChartArray;
	} else if (controller.dataset.prototype.propIsSingleArray($bind)) {
		return CtrlSingleArray;
	} else {
		switch ($display) {
			case "card":
				return CtrlArrayCard;

			case "table":
				return CtrlArrayTable;

			case "carousel":
				return CtrlArrayCarousel;

			case "separator":
				return CtrlArraySeparator;

			default:
				return CtrlArrayTable;

		}
	}
}