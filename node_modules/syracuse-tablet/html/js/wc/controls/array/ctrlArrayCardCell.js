"use strict";

var Base = require('syracuse-tablet/html/js/wc/controls/ctrlSdataBase').CtrlSdataBase;
var utils = require('syracuse-tablet/html/js/wc/helpers/utils');
var uiUtils = require('syracuse-tablet/html/js/wc/ui/uiUtils');
var modules = require('syracuse-tablet/html/js/wc/common/modules');
var fontUtils = require('syracuse-tablet/html/js/wc/ui/fontUtils');
var builderBase = require('syracuse-tablet/html/js/wc/controls/array/builderBase');
var SdataController = require("syracuse-tablet/html/js/wc/controllers/sdataController").SdataController;
var articleParser = require("syracuse-tablet/html/js/wc/controls/articleParser");


/**
 * Control representing a single cell of a card array
 */
exports.CtrlArrayCardCell = utils.defineClass(
	function CtrlArrayCardCell(rowDataset, arrayController, article, prototype, options) {
		// first
		this._rootLayout = null;
		this._cellController = new SdataController(rowDataset, arrayController);
		// Second
		Base.call(this, arrayController, article, prototype, options);
	}, Base, {
		destroy: function() {
			Base.prototype.destroy.call(this);
			if (this._cellController) {
				this._cellController.destroy();
			}
			this._cellController = null;
			if (this._rootLayout) {
				this._rootLayout.destroy();
			}
			this._rootLayout = null;
		},

		createId: function(typeName) {
			return "rowid-" + this.getUuid();
		},

		buildHtml: function(columnsInfo) {
			Base.prototype.buildHtml.call(this);
			if (this.options.rowLinkDomAttrs) {
				this.$$elmt.attr(this.options.rowLinkDomAttrs);
			}
			this.$$elmt.attr({
				"data-controller-id": this._cellController.id
			});
			if (!this._rootLayout) {
				this._rootLayout = articleParser.parseArticle(this._cellController, this.options.cardArticle);
				if (this._rootLayout == null) {
					throw new Error("Bad card article")
				}
				this._rootLayout.set$$container(this.$$elmt);
			}
			this._rootLayout.buildHtml();
		},

		getRootElementTag: function() {
			return "div";
		},

		onSdataLinkClicked: function($linkName, $linkBind) {
			this.setCellSelected();
			this._cellController.onSdataLinkClicked($linkName, $linkBind);
		},

		getUuid: function() {
			return this._cellController.dataset.json.$uuid;
		},

		setCellSelected: function(select) {
			select = select == null ? true : false;
			this.parent.$$content.find('.s-m-last-selected').removeClass("s-m-last-selected");
			if (select) {
				return this.$$elmt.closest("td").addClass("s-m-last-selected");
			}
		}
	});