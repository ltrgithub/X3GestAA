"use strict";
var utils = require('syracuse-tablet/html/js/wc/helpers/utils');
var scroller = require('syracuse-tablet/html/js/wc/helpers/scroller/scrollerHelpers');
var modules = require('syracuse-tablet/html/js/wc/common/modules');

exports.BuilderBase = utils.defineClass(
	function builderBase(control) {
		this.control = control;
		this.$itemProto = this.control.$itemProto;
		this.article = this.control.article;
		this.prototype = this.control.prototype;
		this.controller = this.control.controller;
		this.dataset = this.control.controller.dataset;
	}, null, {

		destroy: function() {
			this.control = null;
			this.$itemProto = null;
			this.article = null;
			this.controller = null;
			this.dataset = null;
			this.prototype = null;
		},

		buildHtml: function(data, $$parent) {},

		appendRow: function() {},

		insertError: function(html) {
			$(['<span class="s-m-error">', html, "</span>"].join('')).prependTo(this.control.$$elmt);
		},

		/**
		 * Returns false to break build process
		 */
		checkEmptyArray: function() {
			if (this.control.isEmpty) {
				this.refreshHeaderAndGesture();
				this.control.setEmptyArrayMsg();
				return false;
			}
			return true;
		},

		doAfterBuild: function() {
			this.refreshHeaderAndGesture();
		},

		refreshHeaderAndGesture: function(resizeContext) {},

		_initGestureMgr: function(preserveScroll) {},

		isScrollable: function() {
			return true;
		},

		newScroller: function(type, $$elmt, options) {
			this.destroyScroller();
			options = $.extend(true, {
				direction: type,
				name: this.control.$bind,
				isPageScroller: false
			}, options);
			if (options.valMax == null) {
				options.valMax = 0;
			};
			this._gestureMgr = scroller.newScroller($$elmt, options, modules.get("navStack").getMainStack().getTopPage());
			if (this._restoreGestureMgr != null) {
				this._gestureMgr.savedCtxRestore(this._restoreGestureMgr, false);
				this._restoreGestureMgr = null;
			}
			return this._gestureMgr;
		},

		destroyScroller: function() {
			if (this._gestureMgr) {
				this._gestureMgr.destroy();
				this._gestureMgr = null;
			}
		},
		hasScroller: function() {
			return this._gestureMgr != null;
		}
	});