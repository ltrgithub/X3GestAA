"use strict";

var Base = require('syracuse-tablet/html/js/wc/controls/panels/panelSdataPage').PanelSdataPage;

var utils = require('syracuse-tablet/html/js/wc/helpers/utils');
var uiSettings = require('syracuse-tablet/html/js/wc/ui/uiSettings');
var modules = require('syracuse-tablet/html/js/wc/common/modules');

var _html = {
	mainContainer: '\
		<div class="s-m-footer s-m-opened container-fluid {{deviceClass}}">\
			<div class="s-m-footer-left">\
			</div>\
			<div class="s-m-footer-right">\
			</div>\
		</div>'
};

var _templates = {};

function _getHtml(name, ctx) {
	var tmpl = _templates[name];
	if (!tmpl) {
		tmpl = _templates[name] = Handlebars.compile(_html[name]);
	}
	return tmpl(ctx);
};

/**
 * 
 */
exports.PanelFooterSdataPageBase = utils.defineClass(
	function PanelFooterSdataPageBase(controller, type, article, opts) {
		Base.call(this, controller, type, article, opts);
	}, Base, {

		destroy: function() {
			Base.prototype.destroy.call(this);
		},

		///
		/// START: Rendering
		///

		/**
		 * 
		 */
		buildHtml: function(deviceClass) {
			this.$$container.css({
				left: 0 + "px",
				height: this.getDesiredHeight() + "px"
			});

			Base.prototype.buildHtml.call(this);
			this.$$elmt.addClass("footer");

			this.$$elmt.html(_getHtml("mainContainer", {
				deviceClass: deviceClass
			}));
			this.$$left = this.$$elmt.find(".s-m-footer-left");
			this.$$right = this.$$elmt.find(".s-m-footer-right");
		},

		/**
		 * 
		 */
		computeLayout: function() {
			if (!this.$$container) {
				return;
			}
			var layoutInfo = modules.get("siteLayout").getLayoutInfo();
			this.$$container.css({
				top: this.top + "px",
				width: layoutInfo.application.width + "px",
			});
			if (!this.$$container.is(":visible")) {
				// Showed here to avoid flickering - by default the header is covered by the footer
				this.$$container.show();
			}

		},
		///
		/// END: Rendering
		///
		getDesiredHeight: function() {
			var layoutInfo = modules.get("siteLayout").getLayoutInfo();
			var deviceType = layoutInfo.deviceType;
			return uiSettings.getProp("footer.height", deviceType);
		},
		setTop: function(top) {
			this.top = top;
		}
	});