"use strict";

var Base = require('syracuse-tablet/html/js/wc/controls/panels/aside/panelAsideBase').PanelAsideBase;
var utils = require('syracuse-tablet/html/js/wc/helpers/utils');
var modules = require('syracuse-tablet/html/js/wc/common/modules');

var panelsHtml = require('syracuse-tablet/html/js/wc/controls/panels/panelsHtml');

var _html = {
	content: '\
		<div class="container-fluid">\
			<div class="navbar-header">\
				<span class="navbar-brand" href="#"><span>{{username}}</span>\
			</div>\
		</div>\
		{{{itemsBlockHtml}}}',
	itemsBlock: '\
		<ul class="nav navbar-nav">\
			{{{itemsHtml}}}\
		</ul>',
}

var _templates = {};

function _getHtml(name, ctx) {
	var tmpl = _templates[name];
	if (!tmpl) {
		tmpl = _templates[name] = Handlebars.compile(_html[name]);
	}
	return tmpl(ctx);
};

/**
 * 
 * Global panel showing stuff like design page, settings, ...
 */
exports.PanelGlobalBase = utils.defineClass(
	function PanelGlobalBase(controller, type, article, opts) {
		Base.call(this, controller, type, article, opts);
	}, Base, {

		destroy: function() {
			Base.prototype.destroy.call(this);
		},

		///
		/// START: Rendering
		///

		/**
		 * 
		 */
		buildHtml: function() {
			var self = this;
			Base.prototype.buildHtml.call(this);

			var items = this.actionAdapter.getGlobalPanelItems();
			var links = [];
			var actions = [];
			items.forEach(function(item) {
				if (item.slot === "links") {
					links.push(panelsHtml.getItemHtml("globalPanel", item));
				} else {
					actions.push(panelsHtml.getItemHtml("globalPanel", item));
				}
			});

			if (links.length != 0 && actions.length != 0) {
				links.push('<li class="s-m-separator"></li>');
			}
			var itemsHtml = links.join("") + actions.join("");
			var itemsBlockHtml = "";
			if (itemsHtml.length > 0) {
				itemsBlockHtml = _getHtml("itemsBlock", {
					itemsHtml: itemsHtml
				});
			}
			self.$$panelContent.html(_getHtml("content", {
				username: _getUserName(),
				userrole: _getUserRole(),
				itemsBlockHtml: itemsBlockHtml
			}));
		},

		///
		/// END: Rendering
		///
		show: function() {
			if (!this.$$elmt) {
				this.buildHtml();
			}
			this._makeVisible();
		},
		hide: function() {
			this._makeInvisible();
		}
	});


function _getUserName() {
	var up = modules.get("appController").App.getCurrentUserProfile();
	if (!up) {
		return "";
	}
	var name = up.user.firstName || "";
	name = (name != "" ? name + " " : "") + up.user.lastName;
	return name;
}

function _getUserRole() {
	var up = modules.get("appController").App.getCurrentUserProfile();
	if (!up) {
		return "";
	}
	return up.selectedRole.code;
}