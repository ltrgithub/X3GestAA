"use strict";

var Base = require('syracuse-tablet/html/js/wc/controls/panels/header/panelHeaderSdataPageBase').PanelHeaderSdataPageBase;

var utils = require('syracuse-tablet/html/js/wc/helpers/utils');
var panelsHtml = require('syracuse-tablet/html/js/wc/controls/panels/panelsHtml');

var _html = {
	mainContainer: '\
		<div class="s-m-header smartphone">\
			<div class="s-m-header-nav">\
				<a href="#" draggable="false" \
					data-nevent\
					data-naction="openGlobalPanel">\
				<span class="fa fa-bars"></span>\
				</a>\
			</div>\
			<div class="s-m-header-labels">\
				<span class="s-m-header-label">{{title}}</span>\
				<!--\
				<div class="s-m-header-brand">\
					<span class="s-m-brand">Sage</span>\
					<span class="s-m-product">X3</span>\
				</div>\
				-->\
			</div>\
			<div class="s-m-header-links">\
			</div>\
		</div>\
		<div class="s-m-freshness s-m-fresh"\
			data-nevent data-naction="showFreshness"\
			style="display: none;">\
			<i class="fa fa-bookmark"></i>\
		</div>'
}
var _templates = {};

function _getHtml(name, ctx) {
	var tmpl = _templates[name];
	if (!tmpl) {
		tmpl = _templates[name] = Handlebars.compile(_html[name]);
	}
	return tmpl(ctx);
};

/**
 * 
 */
exports.PanelHeaderSdataPageSmartphone = utils.defineClass(
	function PanelHeaderSdataPageSmartphone(controller, type, article, opts) {
		Base.call(this, controller, type, article, opts);
	}, Base, {

		destroy: function() {
			Base.prototype.destroy.call(this);
		},
		buildHtml: function() {
			var self = this;
			Base.prototype.buildHtml.call(self);

			this.$$elmt.html(_getHtml("mainContainer", this.getHeaderCtx()));
			this.$$links = this.$$elmt.find(".s-m-header-links");
			var items = this._getItems();
			var list = [];
			for (var ii = 0, jj = items.length; ii < jj; ii++) {
				var item = items[ii];
				var html = panelsHtml.getItemHtml("header", item);
				if (html) {
					list.push(html);
				}
			}
			list.reverse();
			this.$$links.append($(list.join("")));

			this._updateWidth();
		},
		/**
		 * Can be overridden
		 */
		_getItems: function() {
			return this.actionAdapter.getHeaderItems();
		}
	});