"use strict";

/* 
 * 
 * Html templates used by more that one panel
 * 
 */

var eventListener = require('syracuse-tablet/html/js/wc/app/eventListener');
var locale = require('syracuse-tablet/html/js/wc/helpers/locale');

var _multiSelActionsList = [{
	action: "multiSelTriggerDownload",
	id: "download"
}, {
	action: "multiSelActions",
	id: "unselectall"
}, {
	action: "multiSelActions",
	id: "selectall"
}, {
	action: "multiSelActions",
	id: "invert"
}, {
	action: "multiSelActions",
	id: "hideunselected"
}, {
	action: "multiSelActions",
	id: "showunselected"
}];


var _iconClassMap = {
	"home": "fa fa-home",
	"pin": "fa fa-star-o",
	"unpin": "fa fa-star",
	"openactionspanel": "fa fa-ellipsis-h",
	"switchContext": "fa fa-user",
	"mail": "fa fa-envelope",
	"share": "fa fa-share-alt",
	"settings": "fa fa-gear",
	"about": "fa fa-info-circle",
	"development": "fa fa-wrench",
	"logout": "fa fa-sign-out",
	"drafts": "fa fa-building-o",
	"designPage": "fa fa-thumb-tack",

	"accept": "fa fa-check",
	"cancel": "fa fa-reply",

	"$save": "fa fa-save",
	"$edit": "fa fa-edit",
	"$delete": "fa fa-trash-o",
	"$create": "fa fa-plus-square",
	"$query": "fa fa-list",

	"multiSelection": "fa fa-th-list",
	"multiSelectionRunExit": "fa fa-times",
	"multiSelectionRunStop": "fa fa-stop",

	"pageConfig": "fa fa-pencil",
	"addGroup": "fa fa-sitemap"
};

var _html = {
	footer: {
		defaultItem: '<a href="#"\
			draggable="false" \
			data-menuitem-id="{{uniqueId}}" \
			class="s-m-link"\
			{{{attrs}}}>\
			<i class="{{iconClass}}"></i>\
			<span>{{title}}</span>\
		</a>'
	},
	// same as footer except no title is rendered
	header: {
		defaultItem: '<a href="#"\
			draggable="false" \
			data-menuitem-id="{{uniqueId}}" \
			class="s-m-link"\
			{{{attrs}}}>\
			<i class="{{iconClass}}"></i>\
		</a>'
	},
	actionPanel: {
		defaultItem: '<li data-menuitem-id="{{uniqueId}}"\
			class="s-m-link">\
			<a href="#"\
				draggable="false" \
				data-nevent-ctrl-click=""\
				{{{attrs}}}>\
				<i class="{{iconClass}}"></i>\
				<span>{{title}}</span>\
			</a>\
		</li>'
	},
	globalPanel: {
		defaultItem: '<li data-menuitem-id="{{uniqueId}}">\
			<a href="#"\
				draggable="false" \
				class="s-m-link"\
				data-nevent-ctrl-click=""\
				{{{attrs}}}>\
				<i class="{{iconClass}}"></i>\
				<span class="isLabel">{{title}}</span>\
			</a>\
		</li>',
		draftsItem: '<li data-menuitem-id="{{uniqueId}}">\
			<a href="#" \
				draggable="false" \
				data-nevent-ctrl-click=""\
				class="s-m-link {{#if disabled}} disabled"{{/if}}" {{#if disabled}} data-disabled{{/if}}>\
				<i class="{{iconClass}}"></i>\
				<span class="isLabel">{{title}}<span class="badge" style="float: right;">{{count}}</span></span>\
			</a>\
		</li>'
	},
	multiSel: {
		menuActions: '\
			<div id="{{id}}" class="btn-group s-m-link">\
				<div class="{{dropDirection}}">\
					<button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-expanded="false">\
						<span class="badge"></span><span class="title">{{title}}</span><span class="caret"></span>\
					</button>\
					<ul class="dropdown-menu dropdown-menu-{{dropPosition}}" role="menu">\
						{{#each links}}\
							<li><a  style="display:none" draggable="false" {{{attrs}}}>{{title}}</a></li>\
						{{/each}}\
					</ul>\
				</div>\
			</div>'
	}
};

var _templates = {};

function _getHtml(panel, name, ctx) {
	var tmpl = _templates[panel];
	if (!tmpl) {
		tmpl = _templates[panel] = {};
	}
	tmpl = tmpl[name];
	if (!tmpl) {
		tmpl = _templates[panel][name] = Handlebars.compile(_html[panel][name]);
	}
	return tmpl(ctx);
};

var _getMultiSelMenuActions = function(panelName, controllerId) {
	var dropDirection = panelName === "footer" ? "dropup" : "dropdown";
	var dropPosition = panelName === "footer" ? "right" : "left";
	var links = [];
	_multiSelActionsList.forEach(function(info) {
		var attrs = eventListener.getDataActionAttrs(controllerId, info.action, "$" + info.id, true);
		links.push({
			title: locale.text("multiselect.action." + info.id),
			attrs: attrs
		});
	});
	return _getHtml("multiSel", "menuActions", {
		id: "multiSelMenuActions",
		links: links,
		title: locale.text("multiselect.selected"),
		dropDirection: dropDirection,
		dropPosition: dropPosition
	});
};
/**
 * 
 */
exports.getItemHtml = function(panelName, item) {
	var html;
	var tpl;
	var attrs;
	var controllerId = item["controller-id"];

	if (item.action) {
		// Non sData actions
		if (item.action === "multiSelActions") {
			return _getMultiSelMenuActions(panelName, controllerId);
		} else if (item.action === "pageDrafts") {
			tpl = "draftsItem";
			attrs = eventListener.getDataActionAttrs(controllerId, item.action, item.params, true);
			item.count = item.params;
			item.disabled = item.count < 1;
		} else {
			tpl = "defaultItem";
			attrs = eventListener.getDataActionAttrs(controllerId, item.action, item.params, true);
		}
		item.uniqueId = item.action; // Will be used to find item in the DOM later to apply dynamic meta data
	} else if (item.$link) {
		tpl = "defaultItem";
		attrs = eventListener.getSdataLinkAttrs(controllerId, item.$link, null, true);
		item.uniqueId = item.$link; // Will be used to find item in the DOM later to apply dynamic meta data
	} else if (item.$sdataAction) {
		tpl = "defaultItem";
		attrs = eventListener.getSdataActionAttrs(controllerId, item.$sdataAction, true);
		item.uniqueId = item.$sdataAction; // Will be used to find item in the DOM later to apply dynamic meta data
	}

	if (tpl) {
		if (item.icon && typeof item.icon === "string") {
			// Regular icons
			item.iconClass = _iconClassMap[item.icon];
		} else if (item.icon && item.icon.css) {
			// Icon given by authoring
			item.iconClass = item.icon.css;
		}
		item.attrs = attrs;
		html = _getHtml(panelName, tpl, item);
	}

	return html;
}