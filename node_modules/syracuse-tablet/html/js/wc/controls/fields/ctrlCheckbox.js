"use strict";

var Base = require('syracuse-tablet/html/js/wc/controls/fields/ctrlFieldBase').CtrlFieldBase;

var utils = require('syracuse-tablet/html/js/wc/helpers/utils');

var locale = require('syracuse-tablet/html/js/wc/helpers/locale');
var uiUtils = require('syracuse-tablet/html/js/wc/ui/uiUtils');
var fontUtils = require('syracuse-tablet/html/js/wc/ui/fontUtils');

/**
 * 
 * 
 * Rendering:
 * Checkbox: ok
 * Text: ok
 * 
 * MetaData:
 * $isReadOnly: ok 
 * $isDisabled: ok
 * $isHidden: ok
 * 
 */
exports.CtrlCheckbox = utils.defineClass(

	function CtrlCheckbox(controller, article, prototype, options) {
		options = options || {};
		options.nativeCapabilities = null;
		Base.call(this, controller, article, prototype, options);
	}, Base, {
		/**
		 * 
		 */
		buildFieldValue: function() {
			this._ensure$$value();
			this._clear$$value();
			var val = this.getValue();
			if (val == null && !this.$isEditMode) {
				return;
			}
			val = val === true;
			if (this.$isEditMode) {
				this.createMainInput(val, "checkbox");
			} else if (this.getAuthoring("$displayAs") === "text") {
				this.$$value.text(locale.text(val === true ? "yes" : "no"));
			} else {
				this.$$value.append(uiUtils.createDomElement("span", fontUtils.checkBoxIcon(val)));
			}
		},

		/**
		 * 
		 */
		onClick: function(evt) {
			var self = this;
			evt.preventDefault();
			evt.stopPropagation();

			setTimeout(function() {
				var checked = !self.$$input.prop("checked");
				self.$$input.prop("checked", checked);
				self.setValue(checked);
			}, 50);

			return true;
		},

		/**
		 * 
		 */
		applyMetaData: function(metaData) {
			Base.prototype.applyMetaData.call(this, metaData);
			var $$input = this.$$value && this.$$value.find("input");
			if (_isDisabled(metaData)) {
				$$input.attr("disabled", "");
			} else {
				$$input.removeAttr("disabled");
			}
		}
	});

function _isDisabled(metaData) {
	// Apply metaData.$isReadOnly and/or metaData.$isDisabled on select
	// select can only be set as readonly with the 'disabled' attribute
	return metaData && (metaData.$isReadOnly || metaData.$isDisabled);
}