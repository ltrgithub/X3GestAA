"use strict";

var Base = require('syracuse-tablet/html/js/wc/controls/fields/ctrlFieldBase').CtrlFieldBase;

var utils = require('syracuse-tablet/html/js/wc/helpers/utils');

var uiUtils = require('syracuse-tablet/html/js/wc/ui/uiUtils');
var jsutils = require('syracuse-tablet/html/js/wc/helpers/jsutils');
var fontUtils = require('syracuse-tablet/html/js/wc/ui/fontUtils');
var locale = require('syracuse-tablet/html/js/wc/helpers/locale');

/**
 * 
 * 
 * Rendering:
 * Inputfield: ok
 * 
 * MetaData:
 * $isReadOnly: TODO: TEST 
 * $isDisabled: TODO: TEST
 * $isHidden: ok
 * 
 */
exports.CtrlSwitch = utils.defineClass(

	function CtrlSwitch(controller, article, prototype, options) {
		options = options || {};
		options.nativeCapabilities = null;
		Base.call(this, controller, article, prototype, options);
	}, Base, {
		destroy: function() {
			if (this.$$panel) {
				this.$$panel.bootstrapSwitch('destroy');
				this.$$panel = null;
			};
			Base.prototype.destroy.call(this);
		},
		buildFieldValue: function() {
			this._ensure$$value();
			var val = this.getValue();
			if (val == null) {
				return;
			}
			val = val === true;
			if (this.$isEditMode) {
				var attrs = {
					"type": "checkbox"
				};
				this.$$panel = $(uiUtils.createDomElement("input", "", null, attrs, this.$$value));
				this.$$panel.bootstrapSwitch('state', val === true, true);
				this.$$panel.bootstrapSwitch('onText', locale.text("auth.switcher.onText"));
				this.$$panel.bootstrapSwitch('offText', locale.text("auth.switcher.offText"));
				this.$$panel.bootstrapSwitch('size', "small");
				this.$$panel.bootstrapSwitch('onColor', "default");
				this.$$panel.bootstrapSwitch('offColor', "default");
				this.$$panel.bootstrapSwitch('onSwitchChange', jsutils.bindFn(this.onSwitchChange, this));
			} else {
				this.$$value.append(uiUtils.createDomElement("span", fontUtils.checkBoxIcon(val)));
			}
		},
		onSwitchChange: function() {
			this.setValue(this.$$panel.bootstrapSwitch('state'));
		}
	});