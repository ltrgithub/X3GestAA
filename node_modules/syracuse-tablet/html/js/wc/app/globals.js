"use strict";

var _authoringActive = false;

var _devOpts = {
	showUnfoundFields: true
};

exports.getDvlpOpt = function(name) {
	return exports.isDvlpMode() && _devOpts[name];
};

exports.getGlobalSettings = function() {
	return {
		"device-type": "auto"
	};
};


exports.getBuildTimeStamp = function() {
	return "???";
};
exports.setAuthoringActive = function(status) {
	_authoringActive = status;
};
exports.isAuthoringActive = function() {
	return _authoringActive;
};
exports.isDvlpMode = function() {
	return true;
};
var _defMobileClientConfig = {
	// http request default timeout in ms
	httpTimeout: 600000
};
var _mobileClientConfig = $.extend(true, null, _defMobileClientConfig);
/**
 * Path can be null or '.' separator
 */
exports.getMobileClientConfig = function(path) {
	var o = _mobileClientConfig;
	if (path) {
		path.split('.').some(function(p) {
			o = o[p];
			if (o == null) {
				return true;
			}
		})
	}
	return o;
};
exports.setMobileClientConfig = function(config) {
	_mobileClientConfig = $.extend(true, null, _defMobileClientConfig, config);
	if (_mobileClientConfig.httpTimeout == null || isNaN(_mobileClientConfig.httpTimeout)) {
		_mobileClientConfig.httpTimeout = _defMobileClientConfig.httpTimeout;
	}
};
// In milliseconds
exports.getHttpTimeout = function(url) {
	// eventually we could manage regExps to set a timeout per url
	return _mobileClientConfig.httpTimeout;
};
var _offline = false;
exports.isOffline = function() {
	return _offline;
}
exports.setOffline = function(status) {
	_offline = status;
}