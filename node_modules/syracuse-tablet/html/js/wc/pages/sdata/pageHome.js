"use strict";

var Base = require('syracuse-tablet/html/js/wc/pages/sdata/pageSdataDashboard').Page;
var utils = require('syracuse-tablet/html/js/wc/helpers/utils');
var locale = require('syracuse-tablet/html/js/wc/helpers/locale');
var HomeController = require("syracuse-tablet/html/js/wc/controllers/homeController").HomeController;
var native = require('syracuse-tablet/html/js/wc/helpers/native/native');
var wpHelpers = require('syracuse-tablet/html/js/wc/sdata/wpHelpers');
var modules = require('syracuse-tablet/html/js/wc/common/modules');

/**
 *
 */
exports.Page = utils.defineClass(
	function PageHome(pageData, options) {
		Base.call(this, pageData, options);
		this.actionAdapter.showDesignPage = false;
		this.actionAdapter.showPageShare = false;
		this.actionAdapter.showMailTo = false;
		this.actionAdapter.showPinPage = false;
		this.actionAdapter.showHome = false;
		this.actionAdapter.showPageConfig = true;
		this.nativeVoiceCommands = native.getModule("voiceCommands");
	},
	Base, {
		destroy: function() {
			Base.prototype.destroy.call(this);
		},
		getPageTitle: function() {
			return locale.text("global.pageTitle.home");
		},
		isRootPage: function() {
			return true;
		},
		isPersonal: function() {
			return this.pageData.isPersonal;
		},
		_ensureController: function() {
			this.controller = new HomeController(this.pageData.dataset, this);
			// Will raise notifications or do confirmations
			this.controller.setUIAdapter(this);
			this.controller.setNativeCapabilities(this.options)
		},

		afterRender: function() {
			Base.prototype.afterRender.call(this);
			this.updateVoiceCommands();

		},

		updateVoiceCommands: function() {
			var self = this;
			if (self.nativeVoiceCommands) {
				self.getVoiceCommands().then(function(commands) {
					self.nativeVoiceCommands.updateVoiceCommands(commands);
				});
			}
		},
		_actPageConfig: function() {
			this._toggleConfig();
		},
		_toggleConfig: function() {
			if (this.controller.configActive) { // config already enabled
				this._disabledConfig()
			} else {
				this._enabledConfig()
			}
		},
		_enabledConfig: function() {
			this.controller.headerFooterToggle();
			this.controller.configActive = true;
			var $$tiles = $(".s-m-tile", this.$$elmt);
			$$tiles.addClass("s-m-tile-edit")
		},
		_disabledConfig: function() {
			this.controller.headerFooterToggle();
			this.controller.configActive = false;
			$(".s-m-tile-edit", this.$$elmt).removeClass("s-m-tile-edit");
		},
		/**
		 * List of voice commands that can be called by user
		 * will be stored in native api and open the called page if the title matches
		 * 
		 * Promise resolving with:
		 * [
		 * {
		 *   title: "My Customers",
		 *   page: {
		 *     $url: ...
		 *     $method: ...
		 *   }
		 * ]
		 */
		getVoiceCommands: function() {
			return $.smResolve(wpHelpers.welcomePageToCommands(this.pageData));
		},
		getPageDescription: function() {
			return this.pageData.meta.description
		},
		_actCloseDashboardConfig: function() {
			this._toggleConfig();
		},
		_actSavePersonal: function() {
			var self = this;
			var data = wpHelpers.createWelcomeDashboardFromPageData(this.pageData, true);
			wpHelpers.saveWelcomeDashboard(data).then(function(res) {
				modules.get("modal").notify({
					body: locale.text("dashboard.welcome.saved"),
					severityClass: "success"
				});
			})
		},
		_actAddGroup: function() {
			// Called when add group in the footer is clicked
		}
	}
);