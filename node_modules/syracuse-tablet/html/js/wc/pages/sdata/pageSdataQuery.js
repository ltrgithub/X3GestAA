"use strict";

var Base = require('syracuse-tablet/html/js/wc/pages/sdata/pageSdata').Page;
var modules = require('syracuse-tablet/html/js/wc/common/modules');
var utils = require('syracuse-tablet/html/js/wc/helpers/utils');

/**
 * Page handling a query
 * We should add filters and paging
 * 
 */
exports.Page = utils.defineClass(
	function PageSdataQuery(pageData, options) {
		Base.call(this, pageData, options);
		this.mutiSelectionEnabled = false;
	},
	Base, {
		destroy: function() {
			Base.prototype.destroy.call(this);
		},
		beforeOnSdataActionClicked: function(actionName, controller) {
			var self = this;
			return $.smResolve().then(function() {
				if (actionName === "multiSelection") {
					self.multiSelToggleStatus();
					return false;
				}
				return true;
			})
		},
		multiSelToggleStatus: function() {
			if (!this.attachedControlsMgr) {
				return;
			}
			var regularPanel;
			var panelInfo;
			if (modules.get("siteLayout").getDeviceType() === "smartphone") {
				regularPanel = "header";
				panelInfo = {
					name: "headerMultisel",
					topIndex: 0,
					selector: "header",
					$type: "application/x-panel-header-multisel-smartphone"
				}
			} else {
				regularPanel = "footer";
				panelInfo = {
					name: "footerMultisel",
					topIndex: 0,
					selector: "footer",
					$type: "application/x-panel-footer-multisel-tablet"
				}
			}
			var panel = this.attachedControlsMgr.findByName(panelInfo.name);
			if (!panel) {
				panel = this.attachedControlsMgr.createAddtionalControl(panelInfo, {});
			}
			this.mutiSelectionEnabled = this.attachedControlsMgr.toggleControls(panelInfo.name, regularPanel);
			if (!this.mutiSelectionEnabled) {
				this.$$contentElmt.find(".s-m-multi-selected").removeClass("s-m-multi-selected");
			}
		},
		multiSelToggleRecord: function($$elmt) {
			$$elmt.toggleClass("s-m-multi-selected");
		}
	}
);