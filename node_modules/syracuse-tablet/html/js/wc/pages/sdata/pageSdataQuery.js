"use strict";

var Base = require('syracuse-tablet/html/js/wc/pages/sdata/pageSdata').Page;
var utils = require('syracuse-tablet/html/js/wc/helpers/utils');
var MultiSelectionController = require("syracuse-tablet/html/js/wc/multiselection/multiSelectionMainController").MultiSelectionMainController;
var DownloadController = require("syracuse-tablet/html/js/wc/multiselection/downloadController").DownloadController;

/**
 * Page handling a query
 * We should add filters and paging
 * 
 */
exports.Page = utils.defineClass(
	function PageSdataQuery(pageData, options) {
		options = options || {};
		options.nativeCapabilities = {
			"liveTile": true,
			"scheduleMessage": true,
			"share": true
		};
		Base.call(this, pageData, options);
		this.multiSelectionController = null;
		this.downloadController = null;
	},
	Base, {
		destroy: function() {
			Base.prototype.destroy.call(this);
			if (this.multiSelectionController) {
				this.multiSelectionController.destroy();
				this.multiSelectionController = null;
			}
			if (this.downloadController) {
				this.downloadController.destroy();
				this.downloadController = null;
			}
		},
		_actMultiSelToggle: function() {
			if (!this.attachedControlsMgr) {
				return;
			}
			if (!this.multiSelectionController) {
				this.multiSelectionController = new MultiSelectionController(this);
			}
			if (this.multiSelectionController.multiSelToggleStatus() !== true) {
				this.$$contentElmt.find(".s-m-multi-selected").removeClass("s-m-multi-selected");
			}
		},
		multiSelectionIsEnabed: function() {
			return this.multiSelectionController != null && this.multiSelectionController.isEnabled;
		},
		getQueryArray: function() {
			var array = this.controller.getControlsByType("application/x-array");
			if (array.length !== 1) {
				throw new Error("One and only one array is expected in a query facet")
			}
			return array[0];
		},
		isDownloadEnabled: function() {
			return this.getAuthoring("$allowDownload") === true;
		},
		_actMultiSelTriggerDownload: function() {
			if (!this.downloadController) {
				this.downloadController = new DownloadController(this);
			}
			this.downloadController.multiSelTriggerDownload()
		},
		_actMultiSelTriggerAction: function(params) {
			if (!this.multiSelectionIsEnabed()) {
				return;
			}
			this.multiSelectionController.multiSelTriggerAction(params)
		}
	});