"use strict";

var utils = require('syracuse-tablet/html/js/wc/helpers/utils');
var locale = require('syracuse-tablet/html/js/wc/helpers/locale');
var siteLayout = require('syracuse-tablet/html/js/wc/ui/siteLayout');

/**
 * Manage actions that will appear in the different panels of the page like header, footer, right panel, user profile
 * This is the base class that MUST be implemented by a child class to return action items
 * The intention of this is mostly to document and give an interface to the panel UI components
 * 
 * Most methods return a list of action items to be rendered.
 * An action item can be one of the following.
 * 
 * {
 *   "name":		  // Unique name
 * 	 "controller-id":
 *   "$action":		  // Sdata action ($save)
 *   "icon":		  // Optional, rendering control should use prototype and a default if possible
 *   "title":		  // Optional, rendering control should use prototype
 * }
 *
 * {
 *   "name":		  // Unique name
 * 	 "controller-id":
 *   "$link":   	  // Sdata link ($edit)
 *   "$bind":		  // If link is on a specific conrol and not on page level
 *   "icon":		  // Optional, rendering control should use prototype and a default if possible
 *   "title":		  // Optional, rendering control should use prototype
 * }
 * 
 * {
 *   "name":	    	// Unique name
 * 	 "controller-id":    
 * 	 "action": 			// Non sdata actions (like pin-page, represented by data-action and data-params
 *   "params":
 *   "icon":
 *   "title":
 * }
 * 
 */
exports.ActionAdapter = utils.defineClass(
	function ActionAdapter(page) {
		this.page = page;
	},
	null, {
		destroy: function() {
			this.page = null;
		},
		//
		// START: Methods to be implemented by subclasses
		//
		/**
		 * Returns items to be shown in the action panel
		 */
		getActionsPanelItems: function() {
			return [];
		},
		/**
		 * Returns items to be shown in the footer panel
		 */
		getFooterItems: function() {
			return [];
		},

		/**
		 * Returns items to be shown in the header
		 */
		getHeaderItems: function() {
			return [];
		},
		/**
		 * Returns items to be shown in the global panel
		 */
		getGlobalPanelItems: function() {
			return [];
		},
		getPageTitle: function() {
			return this.page.getPageTitle();
		},
		//
		// END: Methods to be implemented by subclasses
		//

		//
		// START: Helpers
		//
		_addDataAction: function(items, name, action, params, title, icon, controller, overrides) {
			var item = $.extend(true, {
				"name": name,
				"controller-id": controller.id,
				"action": action,
				"params": params,
				"title": locale.textOpt(title) || title,
				"icon": icon
			}, overrides);
			items.push(item);
		},

		// Standard buttons
		_addOpenActionsPanel: function(items, controller, overrides) {
			var label;
			if (siteLayout.getDeviceType() !== "smartphone") {
				label = "actions";
			}
			this._addDataAction(items, "openActionsPanel", "openActionsPanel", null, label, "openactionspanel", controller, overrides);
		},
		_addHomeButton: function(items, controller, overrides) {
			this._addDataAction(items, "home", "home", null, "global.action.title.home", "home", controller, overrides);
		},
		_addPinButton: function(items, status, controller, overrides) {
			status = status === "pin" ? "pin" : "unpin";
			this._addDataAction(items, "pinPage", "pinPage", null, "global.action.title." + status, status, controller, overrides);
		},
		_addDesignPageButton: function(items, controller, overrides) {
			this._addDataAction(items, "designPage", "designPage", null, "global.action.title.designPage", "designPage", controller, overrides);
		},
		_addMailToButton: function(items, controller, overrides) {
			this._addDataAction(items, "pageMailto", "pageMailto", null, "global.action.title.pageMailto", "mail", controller, overrides);
		},
		_addSwitchContextButton: function(items, controller, overrides) {
			this._addDataAction(items, "switchContext", "switchContext", null, "global.action.title.changeProfile", "switchContext", controller, overrides);
		},
		_addSettingsButton: function(items, controller, overrides) {
			this._addDataAction(items, "settings", "settings", null, "global.action.title.settings", "settings", controller, overrides);
		},
		_addAboutButton: function(items, controller, overrides) {
			this._addDataAction(items, "about", "about", null, "global.action.title.about", "about", controller, overrides);
		},
		_addDevButton: function(items, controller, overrides) {
			this._addDataAction(items, "developmentPage", "developmentPage", null, "global.action.title.developmentPage", "development", controller, overrides);
		},
		_addLogoutButton: function(items, controller, overrides) {
			this._addDataAction(items, "logout", "logout", null, "global.action.title.logout", "logout", controller, overrides);
		},
		_addDraftsButton: function(items, numDrafts, controller, overrides) {
			this._addDataAction(items, "pageDrafts", "pageDrafts", numDrafts, "global.action.title.drafts", "drafts", controller, overrides);
		},
		_addAcceptButton: function(items, controller, overrides) {
			this._addDataAction(items, "accept", "accept", null, "global.action.title.accept", "accept", controller, overrides);
		},
		_addCancelButton: function(items, controller, overrides) {
			this._addDataAction(items, "cancel", "cancel", null, "global.action.title.cancel", "cancel", controller, overrides);
		},

		//
		// END: Helpers
		//
	});