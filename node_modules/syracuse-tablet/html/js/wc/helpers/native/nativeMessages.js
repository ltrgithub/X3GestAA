"use strict";

var log = require('syracuse-tablet/html/js/wc/helpers/logger').getLogger("nativeMsg");
var nativeTestMessages = require('syracuse-tablet/html/js/wc/helpers/native/wrapperTest/nativeTestMessages');
var nativeExtCall = require('syracuse-tablet/html/js/wc/helpers/native/nativeExtCall');

var _currentDeferred;

if (!(window.smMsgJS)) {
	window.smMsgJS = {};
}

/**
 *
 */
exports.supports = function(capability) {
	if (capability === "toastMessages") {
		return nativeExtCall.isSupported("smMsg", "toastMsgSupported");
	}
	if (capability === "scheduleMessage") {
		return nativeExtCall.isSupported("smMsg", "scheduledMsgSupported");
	}
	return $.smResolve(false);
};

/**
 * Sends a toast message
 * options: {
 *	Text1: options.title,
 *	Text2: options.body, // optional
 *  Severity: "error" | "success",
 *	DeepLink: { // optional
 *		Title,
 *		Url,
 *	}
 * }
 */
exports.showToastMessage = function(options) {
	var data = JSON.stringify(options);
	nativeExtCall.fireMethod("smMsg", "toastMsg", data);
};

/**
 * Sends a toast message
 * options: {
 *	Text1: options.title,
 *	Text2: options.body, // optional
 *  Severity: "error" | "success",
 *  ScheduleTime, // yyyy-MM-dd hh:mm:ss
 *  Tag: Group id to be able to enum tiles of a specific group at a later time
 *	DeepLink: { // optional
 *		Title,
 *		Url,
 *	}
 * }
 */
exports.scheduledMsg = function(options) {
	var data = JSON.stringify(options);
	nativeExtCall.fireMethod("smMsg", "scheduledMsg", data);
};
/**
 * Returns the test js wrapper
 */
exports.init = function(testMode) {
	if (window && window.smMsg) return;
	if (!testMode) return;
	log && log("Creating native msg test wrapper");
	window.smMsg = nativeTestMessages.create();
	return window.smMsg;
};