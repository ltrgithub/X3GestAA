"use strict";

/**
 * 
 */
exports.createDiag = function(payload, $severity, $message, $stackTrace) {
	if (!payload || !$.isPlainObject(payload)) {
		payload = {};
	}
	payload.$diagnoses = payload.$diagnoses || [];
	payload.$diagnoses.push({
		"$severity": ($severity || "error").toLowerCase(),
		"$message": $message,
		"$stackTrace": $stackTrace
	});
	return payload;
}

/**
 * jsonData: {
 *   $properties: {
 *     abc: {
 *       $url: "..."
 *     }
 *   }
 * }
 * path: $properties.abc.$url
 */
exports.getValueByPath = function(jsonData, path) {
	var segs = path.split(".");
	var data = jsonData;
	for (var i = 0; i < segs.length; i++) {
		data = data == null ? null : data[segs[i]];
	}
	return data;
}

var _office$Types = [
	"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
	"application/vnd.openxmlformats-officedocument.wordprocessingml.document",
	"application/vnd.openxmlformats-officedocument.presentationml.presentation",
	"application/msword",
	"application/vnd.ms-excel",
	"application/syracuse-excel-worksheet",
	"application/syracuse-word-report",
	"application/syracuse-word-mailmerge",
	"application/syracuse-ppt-slide"
];

exports.isOfficeLink = function(info) {
	if (info && info.$type && _office$Types.indexOf(info.$type) >= 0) {
		return true;
	}
	return false;
};

exports.isPaginLink = function(name) {
	return name === "$first" || name === "$previous" || name === "$next" || name === "$last";
}