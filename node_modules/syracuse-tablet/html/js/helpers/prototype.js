"use strict";
var utils = require('syracuse-tablet/html/js/helpers/utils');
var log = require('syracuse-tablet/html/js/helpers/logger').log;

var _expRegExp = /\{(.*?)\}/g;
var _Prototype = utils.defineClass(function(json, parent) {
	var self = this;
	self.parent = parent;
	self.json = json || {};
	if (typeof self.json == "string") {
		self.json = JSON.parse(this.self.json);
	}
}, null, {
	destroy: function() {
		var self = this;
		self.parent = null;
		self.json = null;
	},
	/**
	 * returns json[prop]
	 */
	data: function(prop) {
		var self = this;
		if (!prop || prop.length == 0) return null;
		var val = self.json[prop];
		if (val == null) {
			return self.parent ? self.parent.data(prop) : val;
		}
		if (val.smStartsWith && val.smStartsWith('{@')) {
			// Temprarily - TODO - Move Expression parser from mobile -> Tablet
			val = val.replace(_expRegExp, function(match, prop) {
				return prop;
			});
			val = self.localization(val);
			self.json[prop] = val;
		}
		return val;
	},
	/**
	 * returns JSON for json.$properties[prop]
	 */
	property: function(prop) {
		var self = this;
		if (!prop || prop.length === 0) return null;
		return self.json.$properties ? self.json.$properties[prop] : self.parent ? self.parent.property(prop) : null;
	},
	localization: function(val) {
		var self = this;
		var loc = self.json.$localization || {};
		return loc[val] ? loc[val] : self.parent ? self.parent.localization(val) : null;
	},
	/**
	 * returns a prototype object for json.$properties[prop]
	 */
	getPrototype: function(prop) {
		var json = this.property(prop);
		return json ? new _Prototype($.extend({}, json), this) : null;
	}
});
exports.Prototype = _Prototype;
exports.create = function(json) {
	return new _Prototype(json);
};