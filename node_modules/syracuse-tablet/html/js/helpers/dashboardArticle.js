"use strict";

/**
 * Returns $article
 * 		Calculates and Sets $article if no $article was found
 */
var _getDashboardArticle = function(dashInfo) {
	var nbCellsPerRow = 3;
	var _addWidth = function(json, nbCells, device) {
		if (nbCells <= 0 || nbCells > 12) throw new Error("Nb cells must be <= 12 (" + nbCells + ")");
		var prop = '$width' + (device || "md").smCapitalize();
		json[prop] = "";
		var sz = Math.round(12 / nbCells);
		for (var i = 0; i < nbCells; i++) {
			json[prop] += i === 0 ? sz : "," + sz;
		}
	};
	var vignetteIds = Object.keys(dashInfo.$vignettes || []);
	if (vignetteIds.length === 0) throw new Error('Dashboard ' + dashInfo.$dashboardName + ' has no vignette');
	if (!dashInfo.$article) {
		dashInfo.$article = {
			$layoutType: "stack",
			$items: []
		};
		/* Create an article with 3 vignettes per row*/
		var remainCells = vignetteIds.length;
		var nbRows = Math.ceil(vignetteIds.length / nbCellsPerRow),
			vgntIdx = 0;
		for (var ri = 0; ri < nbRows; ri++) {
			var row = {
				$layoutType: "row",
				$items: []
			};
			_addWidth(row, nbCellsPerRow);
			for (var ci = 0; ci < Math.min(nbCellsPerRow, remainCells); ci++) {
				row.$items.push({
					$bind: vignetteIds[vgntIdx]
				});
				vgntIdx++;
			}
			dashInfo.$article.$items.push(row);
		}
	}
	return dashInfo.$article;
};
exports.getDashboardArticle = _getDashboardArticle;