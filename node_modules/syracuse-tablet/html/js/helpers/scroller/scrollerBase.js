"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var globals = require('syracuse-tablet/html/js/helpers/globals');

var _Klass = utils.defineClass(function scroller($$elmt, options) {
	options = options || {};
	this.name = options.name;
	this.$$elmt = $$elmt;
	this.isPageScroller = options.isPageScroller === true;
	this._initDir(options.direction);
}, null, {
	destroy: function() {
		this.$$elmt = null;
	},
	_initDir: function(dir) {
		this.dir = dir || "v";
	},
	init: function(viewRect, dir) {
		this.reset(true);
		this._initDir(dir);
		if (viewRect == null) {
			throw new Error("hammerScroller - Unexpected null viewRect");
		}
		if (globals.getSiteLayout().getTransformScale() != 1) {
			viewRect = viewRect.applyTransformScale(globals.getSiteLayout().getTransformScale(), true);
		}
		this.viewRect = viewRect;
	},
	/**
	 * If overridden call this method at the end
	 */
	resetScrolling: function(callBack) {
		if (callBack) callBack();
	},
	reset: function(dontResetValue) {
		// Nothing
	},
	savedCtxCreate: function() {
		throw new Error("Not implemented");
	},
	savedCtxRestore: function(ctx, refresh) {
		throw new Error("Not implemented");
	},
	getOffset: function() {
		throw new Error("Not implemented");
	},
	makeVisible: function($$e) {
		throw new Error("Not implemented");
	},
	autoScroll: function(value) {
		throw new Error("Not implemented");
	},
	getScrollValue: function(value) {
		throw new Error("Not implemented");
	},
	adjust: function() {
		throw new Error("Not implemented");
	},
	checkViewRect: function(viewRect, preserveScroll) {
		throw new Error("Not implemented");
	}
});

exports.Klass = _Klass;