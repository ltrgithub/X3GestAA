"use strict";

var sdataHost = (window.location.protocol.toLowerCase() === "file:") ? "" : (window.location.protocol + "//" + window.location.host);

var lastlog = new Date();
var num = 0;
var lastlog;
var _maxLevel = 0;

function line(text) {
	if (!text) return null;
	var now = new Date(),
		trace = null;
	if (lastlog == null || ((now.getTime() - lastlog.getTime()) > 1000)) {
		text = "********Mobile********\n" + (++num) + ": " + text;
		lastlog = now;
	}
	return text;
}
var _stdTypeToString = function(a, type) {
	if (a == null) return null;
	type = type || typeof a;
	switch (type) {
		case "number":
		case "string":
		case "boolean":
			return new String(a);
			break;
	}
	return null;
};
var _objectToString = function(a, level, flat) {
	level = level == null ? 0 : level;
	if (a == null) return null;
	if (typeof a != "object") return null;
	var res, v;
	if (Array.isArray(a)) {
		res = [];
		a.forEach(function(b) {
			v = _stdTypeToString(b);
			if (v) {
				res.push(v);
			} else if (flat !== true && level <= _maxLevel) {
				v = _objectToString(b, level + 1);
				if (v) {
					res.push(v);
				}
			}
		});
		if (res.length == 0) return null;;
	} else {
		res = {};
		for (var p in a) {
			var v = _stdTypeToString(a[p]);
			if (v) {
				res[p] = v;
			} else if (flat !== true && level <= _maxLevel) {
				v = _objectToString(a[p], level + 1);
				if (v) {
					res[p] = v;
				}
			}
		}
		if ($.isEmptyObject(res)) res = null;
	}
	return level == 0 ? JSON.stringify(res, null, 2) : res;
};
var _argsToString = function(args, flat) {
	var msg = [];
	for (var i = 0; i < args.length; i++) {
		var a = args[i];
		if (a == null) continue;
		var text = _stdTypeToString(a);
		if (text) {
			msg.push(text);
		} else {
			text = _objectToString(a, 0, flat);
			if (text) {
				msg.push(text);
			}
		}
	}
	if (msg.length == 0) return null;
	return msg.join(' ');
};
var _log = function(msg) {
	msg = line(msg);
	if (msg == null) return null;
	$.ajax({
		type: "GET",
		async: false,
		url: sdataHost + "/sdata/syracuse/collaboration/syracuse/clientLogs/$service/log?text=" + encodeURIComponent(msg),
		success: function(xhr) { /* fire and forget */ }
	});
};
exports.log = function() {
	_log(_argsToString(arguments, false));
};
exports.logFlat = function() {
	_log(_argsToString(arguments, true));
};