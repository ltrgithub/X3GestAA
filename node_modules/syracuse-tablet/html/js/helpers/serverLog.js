"use strict";

var sdataHost = (window.location.protocol.toLowerCase() === "file:") ? "" : (window.location.protocol + "//" + window.location.host);

var lastlog = new Date();
var num = 0,
	lastEvt, lastCpt = 0,
	trace;

function line(text, noCount) {
	var now = new Date(),
		trace = "";
	if (noCount === true || text != lastEvt) {
		trace += "\n" + (++num) + ": " + text;
		if (noCount != true && (now.getTime() - lastlog.getTime()) > 1000) {
			trace += "\n******************";
		}
		if (lastCpt > 0) {
			trace += "\n" + num + " -> " + lastEvt + " - count=" + lastCpt;
		}
		lastCpt = 0;
		lastEvt = text;
	} else {
		if (lastCpt == 0) {
			trace = "\n" + num + " -> start count";
		}
		lastCpt++;
	}
	lastlog = now;
	return trace;
}

exports.log = function(msg, noCount, sync) {
	$.ajax({
		type: "GET",
		async: (sync !== true),
		url: sdataHost + "/sdata/syracuse/collaboration/syracuse/clientLogs/$service/log?text=" + encodeURIComponent(line(msg, noCount)),
		success: function(xhr) { /* fire and forget */ }
	});
};

exports.logObject = function(event, noCount, sync) {
	event = event || {};
	var res = {};
	for (var p in event) {
		switch (typeof event[p]) {
			case "number":
			case "string":
			case "boolean":
				res[p] = event[p];
				break;
		}
	}
	res = JSON.stringify(res, null, 2);
	$.ajax({
		type: "GET",
		async: (sync !== true),
		url: sdataHost + "/sdata/syracuse/collaboration/syracuse/clientLogs/$service/log?text=" + encodeURIComponent(line(res, noCount)),
		success: function(xhr) { /* fire and forget */ }
	});
};