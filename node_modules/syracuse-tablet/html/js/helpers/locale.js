"use strict";

var ajax = require('syracuse-tablet/html/js/ajax/ajax').getAjax().ajax;

var _currentLocale = null;
var _resources = {};
var _localeInformationKey = "$localeInformation";

var _txtRegexp = /\{([\w-]+)\}/g;

var _text = function(key, args) {
	var resources = _resources && _resources[_currentLocale];
	if (!resources) {
		return;
	}
	var text = resources[key] || "Resource key not found[" + key + "]";

	if (args) {
		text = text.replace(_txtRegexp, function(match, p1) {
			var idx = +p1;
			if (idx >= 0 && idx < args.length) {
				return args[idx];
			}
			return "?";
		});
	}

	return text;
};

var _getLocaleInfo = function() {
	var resources = _resources && _resources[_currentLocale];
	if (!resources) {
		return;
	}
	return resources[_localeInformationKey];
};

var _setLocale = function(locale, rsrc) {
	var deferred = new $.Deferred();
	var resources = _resources && _resources[locale];
	if (resources) {
		_currentLocale = locale;
		deferred.resolve();
	} else if (locale === _currentLocale) {
		deferred.resolve();
	} else if (rsrc != null && typeof rsrc === "object") {
		_currentLocale = locale;
		_resources[locale] = rsrc;
		deferred.resolve();
	} else {
		var result = ajax("GET", "/syracuse-tablet/html/js/resources/strings-" + locale + ".json", null, null);
		_loadFile("/syracuse-tablet/html/js/resources", "strings", locale, "en")
			.then(function(data) {
				_currentLocale = locale;
				_resources[locale] = data;
			})
			.then(function() {
				return _loadFile("/syracuse-tablet/html/js/resources/locales", "date", locale, "en-GB");
			})
			.then(function(data) {
				// join strings-xx-XX and date-xx-XX
				_resources[locale][_localeInformationKey] = data;
			})
			.then(function() {
				deferred.resolve();
			}, function(e) {
				deferred.resolve();
			});
	}
	return deferred.promise();
};

var _loadFile = function(path, file, locale, defLocale) {
	var deferred = new $.Deferred();
	var segs = locale.split("-");

	function _load() {
		if (segs.length === 0) {
			// Fallback to default
			var url = path + "/" + file + "-" + defLocale + ".json";
			ajax("GET", url, null, null)
				.then(function(data) {
					if (data && data.responseJSON) {
						deferred.resolve(data.responseJSON);
					}
					deferred.resolve({});
				}, function(e) {
					deferred.reject(e);
				});
		} else {
			var code = segs.join("-");
			var url = path + "/" + file + "-" + code + ".json";
			ajax("GET", url, null, null)
				.then(function(data) {
					if (data && data.responseJSON) {
						deferred.resolve(data.responseJSON);
					} else if (data.status === 404) {
						segs.pop();
						_load();
					} else {
						deferred.reject(data.textStatus + " - " + data.status);
					}
				}, function(e) {
					deferred.reject(e);
				});
		}
	}
	_load();
	return deferred.promise();
};

var _isCurrent = function(locale, strict) {
	if (!locale || !_currentLocale) return false;
	if (_currentLocale === locale) return true;
	return strict ? false : (locale.split('-'))[0] === _currentLocale;
};


exports.setLocale = _setLocale;
exports.text = _text;
exports.isCurrent = _isCurrent;
exports.getLocaleInfo = _getLocaleInfo;