"use strict";

var log = require('syracuse-tablet/html/js/helpers/logger').getLogger("nativeShare", true);
var utils = require('syracuse-tablet/html/js/helpers/utils');
var nativeTestShare = require('syracuse-tablet/html/js/helpers/native/test/nativeTestShare');
var nativeTestUtils = require('syracuse-tablet/html/js/helpers/native/test/nativeTestUtils');

var _currentShareDeferred;

// Global object to be called by native code on pencil events
if (!(window.smShareJS)) {
	window.smShareJS = {

		/*
		 *  This method will be invoked from wrapper once the pen input has finished or failed
		 *  data:
		 *  {
		 *  	action: "ok" | "cancelled",
		 *  }
		 */
		shareFinished: function(data) {
			if (_currentShareDeferred) {
				var def = _currentShareDeferred;
				_currentShareDeferred = null;
				log && log("Got share: " + JSON.stringify(data || {}));
				def.resolve(data);
			}
		},

		/*
		 * Called by wrapper when the app is activated by a link
		 * data:
		 * {
		 * 	Url: url (url containing all information to go back to a specific page, sent as url option by sharePageLink)
		 *  Title: Title of url (sent as title option by sharePageLink)
		 * }
		 */
		handleLink: function(data) {
			log && log("handleLink!");
			log && log("handleLink: " + JSON.stringify(data, null, 2));
			if (!data || !data.Url) return;
			try {
				var url = utils.parseURL(data.Url);
				log && log("url: " + JSON.stringify(url, null, 2));
				if (!url || !url.query || !url.query.context) return;
				var context = JSON.parse(decodeURIComponent(url.query.context));
				log && log("context: " + JSON.stringify(context, null, 2));
				nativeTestUtils.callAppNativeInterface("share", "handleLink", context);
			} catch (e) {
				log && log("handleLink: failed", e);
				return;
			}
		}
	};
}
/**
 *
 */
exports.supports = function(capability, testMode) {
	if (capability === "share") {
		var supported = testMode || (window && window.smShare && window.smShare.supportsShare && window.smShare.supportsShare());
		log && log("Share support: " + supported);
		return supported;
	}
	return false;
};

/**
 * options:
 * {	
      pageData: {
		title: "Customers" // title that will be shown when page is shared
		url: url that is embedded in sent message and will be passed to handleLink method once the user clicks on the message 
		
		--- optional for now:
		
		id:"..."
		sdataParameters:"..."
		endPoint: "x3.erp.SEEDAMBAS"
		htmlRoot: "http://pc101458:8124/syracuse-tablet/html"
		language: "en-US"
		name: "x3.erp.GX3APP.BPCUSTOMERM.$query"
		sDataUrl: "http://pc101458:8124/mobile1/x3/erp/GX3APP/BPCUSTOMER?representation=BPCUSTOMERM.$query",
		
		DeepLink: {
			Title,
			Url,
		}
	  }
 * }
 */
exports.sharePageLink = function(options) {

	// DeepLink.Url must contain all information required to allow the webapp to navigate back to the current page including it's
	// eventual state (like filters)
	// DeepLink data structure will be shared by other similar functions
	// DeepLink: {
	//		Title: 
	//		Url: 
	//	}

	var param = {
		Title: options.pageData.Title,
		Description: options.pageData.Description,
		DeepLink: options.pageData.DeepLink
	};
	var data = JSON.stringify(param);
	log && log("sharePageLink: ", data);
	// Be carefull, JS name is lowercase (e.g. setPhraseList) while C# name must be uppercase (e.g. SetPhraseList)
	if (window && window.smShare && window.smShare.sharePageLink) {
		_currentShareDeferred = $.Deferred();
		window.smShare.sharePageLink(data);
		return _currentShareDeferred.promise();
	} else {
		return $.smResolve(null);
	}
};

exports.init = function(testMode) {
	if (window && window.smShare) return;
	if (!testMode) return;
	log && log("Creating native share test wrapper");
	window.smShare = nativeTestShare.create();
};