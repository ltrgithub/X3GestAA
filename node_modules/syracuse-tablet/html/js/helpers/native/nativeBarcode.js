"use strict";

var log = require('syracuse-tablet/html/js/helpers/logger').getLogger("nativeBarcode", true);
var nativeTestBarcode = require('syracuse-tablet/html/js/helpers/native/wrapperTest/nativeTestBarcode');
var nativeExtCall = require('syracuse-tablet/html/js/helpers/native/nativeExtCall');

var _currentDeferred;

// Global object to be called by native code on pencil events
if (!(window.smBarcodeJS)) {
	window.smBarcodeJS = {

		/*
		 *  data:
		 *  {
		 *  	Action: "ok" || "cancelled" || "error"
		 *  	Content: "Content of scanned barcode"
		 *  	Format: "Barcode format",
		 *  }
		 */
		scanBarcodeFinished: function(data) {
			log && log("Got barcode!");
			if (_currentDeferred) {
				var def = _currentDeferred;
				_currentDeferred = null;
				log && log("Got barcode: " + JSON.stringify(data || {}));
				def.resolve({
					action: data.Action,
					content: data.Content,
					format: data.Format
				});
			}
		}
	};
}
/**
 *
 */
exports.supports = function(capability) {
	if (capability === "scanBarcode") {
		return nativeExtCall.isSupported("smBarcode", "scanBarcodeSupported");
	}
	return $.smResolve(false);
};

/**
 * Options are available as parameter but it's not used yet!
 * options:
 * {
 * }
 */
exports.scanBarcode = function(options) {
	// No options yet!
	var param = {};
	_currentDeferred = $.Deferred();
	nativeExtCall.fireMethod("smBarcode", "scanBarcode", param);
	return _currentDeferred.promise();
};

exports.init = function(testMode) {
	if (window && window.smBarcode) return;
	if (!testMode) return;
	log && log("Creating native barcode test wrapper");
	window.smBarcode = nativeTestBarcode.create();
};