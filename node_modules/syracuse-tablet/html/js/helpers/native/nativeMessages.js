"use strict";

var log = require('syracuse-tablet/html/js/helpers/logger').getLogger("nativeMsg", true);

var _currentDeferred;

if (!(window.smMsgJS)) {
	window.smMsgJS = {
		/**
		 * 
		 * [
		 *   {
		 *		Text1,
		 *		Text2,
		 *  	ScheduleTime,
		 *  	Tag,
		 *  	DeepLink: {
		 *      }  
		 *   }
		 *   ...
		 * ]
		 * 
		 */
		listScheduledMsgsFinished: function(data) {
			if (_currentDeferred) {
				var def = _currentDeferred;
				_currentDeferred = null;
				log && log("scheduled msgs listed: " + JSON.stringify(data || {}));
				def.resolve(data);
			}
		}
	};
}

/**
 *
 */
exports.supportsShowToastMessage = function() {
	return window && window.smNativeMsg && window.smNativeMsg.toastMsg;
};

/**
*
*/
exports.supportsScheduledMessage = function() {
	return window && window.smNativeMsg && window.smNativeMsg.scheduledMsg;
};

/**
 * Sends a toast message
 * options: {
 *	Text1: options.title,
 *	Text2: options.body, // optional
 *  Severity: "error" | "success",
 *	DeepLink: { // optional
 *		Title,
 *		Url,
 *	}
 * }
 */
exports.showToastMessage = function(options) {
	var data = JSON.stringify(options);
	// Be carefull, JS name is lowercase (e.g. setPhraseList) while C# name must be uppercase (e.g. SetPhraseList)
	window && window.smNativeMsg && window.smNativeMsg.toastMsg && window.smNativeMsg.toastMsg(data);
};

/**
 * Sends a toast message
 * options: {
 *	Text1: options.title,
 *	Text2: options.body, // optional
 *  Severity: "error" | "success",
 *  ScheduleTime, // yyyy-MM-dd hh:mm:ss
 *  Tag: Group id to be able to enum tiles of a specific group at a later time
 *	DeepLink: { // optional
 *		Title,
 *		Url,
 *	}
 * }
 */
exports.scheduledMsg = function(options) {
	var data = JSON.stringify(options);
	// Be carefull, JS name is lowercase (e.g. setPhraseList) while C# name must be uppercase (e.g. SetPhraseList)
	window && window.smNativeMsg && window.smNativeMsg.scheduledMsg && window.smNativeMsg.scheduledMsg(data);
}

/**
 * Lists scheduled toast messages
 * options: {
 *  Group: Group id to use for searching for messages  
 * }
 */
exports.listScheduledMsgs = function(options) {
	// Be carefull, JS name is lowercase (e.g. setPhraseList) while C# name must be uppercase (e.g. SetPhraseList)
	if (window && window.smNativeMsg && window.smNativeMsg.scheduledMsg) {
		var data = JSON.stringify(options);
		_currentDeferred = $.Deferred();
		window.smNativeMsg.scheduledMsg(data);
		return _currentDeferred.promise();
	}
	return $.smResolve();
}