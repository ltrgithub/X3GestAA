"use strict";

var log = require('syracuse-tablet/html/js/helpers/logger').getLogger("nativeScheduleMsg", true);

var _currentDeferred;
//Global object to be called by native code on pencil events
if (!(window.smScheduleMsgJS)) {
	window.smScheduleMsgJS = {

		getScheduleMsgFinished: function(data) {
			if (_currentDeferred) {
				var def = _currentDeferred;
				_currentDeferred = null;
				log && log("Command ScheduleMsg get finished: " + JSON.stringify(data || {}));
				def.resolve(data && data.exists);
			}
		},
	};
}

/**
 *
 */
exports.supportsScheduleMsg = function() {
	var supported = (window && window.smScheduleMsg && window.smScheduleMsg.supportsScheduleMsg && window.smScheduleMsg.supportsScheduleMsg()) || false;
	log && log("ScheduleMsg : " + supported);
	return supported;
};

/**
	options:{

	}
	
	Return see addScheduleMsgFinished
 */
exports.addScheduleMsg = function(options) {
	if (window && window.smScheduleMsg && window.smScheduleMsg.addScheduleMsg) {
		_currentDeferred = $.Deferred();
		log && log("addScheduleMsg:" + JSON.stringify(options));
		var data = JSON.stringify(_getTileDataStruct(options));
		window.smScheduleMsg.addScheduleMsg(data);
		return _currentDeferred.promise();
	} else {
		return $.smResolve();
	}
};
/*
 * Pack everything into a structure understood by native code
 */
function _getDataStruct(options) {
	var param = {
		Id: options.id,
		Title: options.Title,
		Description: options.Description,
		DeepLink: options.DeepLink
	};
	return param;
}