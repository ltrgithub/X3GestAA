"use strict";

var localStorage = require('syracuse-tablet/html/js/storage/localStorage');

var _TestNativeWrapper = function() {
	/**
	 *
	 */
	this.onWebappLoaded = function() {};
	/**
	 * historyContext is s a string
	 */
	this.onWebappUnloaded = function() {
		if (!window.smWrapperJS) return;
		_setHistoryContext(window.smWrapperJS.applicationClosing());
	};
	/**
	 *
	 */
	this.onWebappConfigServer = function() {};
	/**
	 * context is s a string
	 */
	this.setReconnectContext = function(context) {
		try {
			localStorage.setItem("$reconnectContext", context);
		} catch (e) {
			console.log(e);
		}
	};
	/**
	 * Returns a String
	 */
	this.getReconnectContext = function() {
		try {
			return localStorage.getItem("$reconnectContext");
		} catch (e) {
			console.log(e);
			return null;
		}
	};
	/**
	 * Returns a String
	 */
	this.getReconnectToken = function() {
		try {
			return localStorage.getItem("$reconnectToken");
		} catch (e) {
			console.log(e);
			return null;
		}
	};
	/**
	 * token is s a string
	 */
	this.setReconnectToken = function(token) {
		try {
			localStorage.setItem("$reconnectToken", token);
		} catch (e) {
			console.log(e);
		}
	};
	/**
	 * Returns a String
	 * See
	 */
	this.getHistoryContext = function() {
		try {
			return localStorage.getItem("$reconnectHistory");
		} catch (e) {
			console.log(e);
			return null;
		}
	};
	/**
	 * historyContext is s a string
	 */
	function _setHistoryContext(historyContext) {
		try {
			localStorage.setItem("$reconnectHistory", historyContext);
		} catch (e) {}
	};
};
exports.create = function() {
	return new _TestNativeWrapper();
};