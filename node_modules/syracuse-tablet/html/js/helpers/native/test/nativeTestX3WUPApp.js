"use strict";

var log = require('syracuse-tablet/html/js/helpers/logger').getLogger("X3WUPApp");
var localStorage = require('syracuse-tablet/html/js/storage/localStorage');

var _TestNativeWrapper = function() {
	/**
	 *
	 */
	this.onWebappLoaded = function() {};
	/**
	 * historyContext is s a string
	 */
	this.onWebappUnloaded = function() {
		if (!window.smWrapperJS) return;
		try {
			this.setReconnectContext(window.smWrapperJS.applicationClosing());
		} catch (e) {
			return e.message;
		}
	};
	/**
	 *
	 */
	this.onWebappConfigServer = function() {};
	/**
	 * context is s a string
	 */
	this.setReconnectContext = function(context) {
		try {
			log && log("setReconnectContext", context);
			localStorage.setItem("$reconnectContext", context);
		} catch (e) {
			log && log("setReconnectContext", JSON.stringify(e));
		}
	};
	/**
	 * Returns a String
	 */
	this.getReconnectContext = function() {
		try {
			var context = localStorage.getItem("$reconnectContext");
			log && log("getReconnectContext", context);
			return context;
		} catch (e) {
			log && log("getReconnectContext", JSON.stringify(e));
			return null;
		}
	};
	/**
	 * Returns a String
	 */
	this.getReconnectToken = function() {
		try {
			var token = localStorage.getItem("$reconnectToken");
			log && log("getReconnectToken", token);
			return token;
		} catch (e) {
			log && log("getReconnectToken", JSON.stringify(e));
			return null;
		}
	};
	/**
	 * token is s a string
	 */
	this.setReconnectToken = function(token) {
		try {
			log && log("setReconnectToken", token);
			localStorage.setItem("$reconnectToken", token);
		} catch (e) {
			log && log("setReconnectToken", JSON.stringify(e));
		}
	};
};
exports.create = function() {
	return new _TestNativeWrapper();
};