"use strict";

var log = require('syracuse-tablet/html/js/helpers/logger').getLogger("nativeLiveTile");
var globals = require('syracuse-tablet/html/js/helpers/globals');
var testHelpers = require('syracuse-tablet/html/js/helpers/native/test/nativeTestHelpers');

var _result = ' <a id ="testNativeLiveTile" href="#" class="s-m-link">\
	<i class="fa fa-thumbs-o-{{#if ok}}up{{else}}down{{/if}}">\
	</i>\
	<span>{{title}}</span>\
	</a>';

var _showResult = function(ok, title) {
	var $$result = $(Handlebars.compile(_result)({
		ok: ok,
		title: title
	})).appendTo($('.navbar.s-m-side-panel'));
	setTimeout(function() {
		$$result.remove();
	}, 5000);
};
var _liveTiles = {};

var _TestNativeWrapper = function() {

	this.supportsLiveTile = function() {
		return true;
	};
	/**
	options:{
		"name":"x3.erp.GX3APP.BPCUSTOMERM.$query",
		"title":"Clients",
		"id":"x3.erp.GX3APP.BPCUSTOMERM.$query_http://pc101458:8124/mobile1/x3/erp/GX3APP/BPCUSTOMER?representation=BPCUSTOMERM.$query",
		"icon":"star",
		"sDataUrl":"http://pc101458:8124/mobile1/x3/erp/GX3APP/BPCUSTOMER?representation=BPCUSTOMERM.$query",
		"representation":"BPCUSTOMERM",
		"facet":"$query",
		"action":"$query",
		"entity":"BPCUSTOMER",
		"endpoint":"x3.erp.GX3APP",
		"applicationName":"sagesalescustomers"
	}
	 */
	this.addLiveTile = function(options) {
		if (!options) return;
		try {
			options = JSON.parse(options);
		} catch (e) {
			return;
		}
		var id = options.Id;
		var title = options.Title;
		_liveTiles[id] = $.extend(true, {}, options);
		setTimeout(function() {
			log && log("LIVE TILE ADD - Succeeded - " + title);
			testHelpers.addHandleLink($('.navbar.s-m-side-panel'), {
				url: options.DeepLink.Url,
				timeout: 30000
			});
			window.smLiveTileJS.addLiveTileFinished(null);
		}, 100);
	};
	this.getLiveTile = function(data) {
		if (!data) return;
		try {
			data = JSON.parse(data);
		} catch (e) {
			return;
		}
		var liveTile = _liveTiles[data.Id];
		setTimeout(function() {
			log && log("LIVE TILE GET " + (liveTile ? "OK" : "KO") + " - " + data.Id);
			window.smLiveTileJS.getLiveTileFinished({
				exists: (liveTile != null)
			});
		}, 100);
	};
	this.removeLiveTile = function(data) {
		if (!data) return;
		try {
			data = JSON.parse(data);
		} catch (e) {
			return;
		}
		var exist = _liveTiles[data.Id] ? true : false;
		if (exist) delete _liveTiles[data.Id];
		setTimeout(function() {
			log && log("LIVE TILE REMOVE " + (exist ? "Exist" : "No exists") + " - " + data.Id);
			window.smLiveTileJS.removeLiveTileFinished(null);
		}, 100);
	};
};

exports.create = function() {
	return new _TestNativeWrapper();
};