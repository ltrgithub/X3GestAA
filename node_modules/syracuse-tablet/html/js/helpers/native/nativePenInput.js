"use strict";

var log = require('syracuse-tablet/html/js/helpers/logger').getLogger("nativePenInput", true);

var _currentInputDeferred;

// Global object to be called by native code on pencil events
if (!(window.smPenInputJS)) {
	window.smPenInputJS = {
			
		/*
		 *  This method will be invoked from wrapper once the pen input has finished or failed
		 *  data:
		 *  {
		 *  	action: "ok" | "cancelled",
		 *  	matches: ["match 1", "match 2"]
		 *  }
		 */
		penInputTextFinished: function(data) {
			if (_currentInputDeferred) {
				var def = _currentInputDeferred;
				_currentInputDeferred = null;
				log && log("Got pen input: " + JSON.stringify(data || {}));
				def.resolve(data);
			}
		},
		/*
		 *  This method will be invoked from wrapper once the user
		 *  finished drawing lines on the image he wants to draw annotations on
		 *  data:
		 *  {
		 *  	action: "ok" | "cancelled",
		 *  	imageData: "base64string with new image data"
		 *  }
		 */
		penAnnotateImageFinished: function(data) {
			if (_currentInputDeferred) {
				var def = _currentInputDeferred;
				_currentInputDeferred = null;
				def.resolve(data);
			}
		}
	}
}

/**
 *
 */
exports.supportsPenInput = function() {
	var supported = (window && window.smPenInput && window.smPenInput.supportsPenInput && window.smPenInput.supportsPenInput()) || false;
	log && log("Pen input support: " + supported);
	return supported;
};

/**
 * Trigger pen input modal in native shell
 * options:
 * {
 *      title: Title to display above input area
 * }
 */
exports.getPenTextInput = function(options) {
	var data = JSON.stringify(options);
	// Be carefull, JS name is lowercase (e.g. setPhraseList) while C# name must be uppercase (e.g. SetPhraseList)
	if (window && window.smPenInput && window.smPenInput.getPenTextInput) {
		_currentInputDeferred = $.Deferred();
		window.smPenInput.getPenTextInput(data);
		return _currentInputDeferred.promise();
	} 
	else
	{
		return $.smResolve(null);
	}
};

/**
 * Trigger pen input on an image to allow highlighting with pencil
 * options:
 * {
 *      title: Title of image property
 *      imageData: base64 string containing image data
 * }
 */
exports.getAnnotatedImage = function(options) {
	var data = JSON.stringify(options);
	// Be carefull, JS name is lowercase (e.g. setPhraseList) while C# name must be uppercase (e.g. SetPhraseList)
	if (window && window.smPenInput && window.smPenInput.getAnnotatedImage) {
		_currentInputDeferred = $.Deferred();
		window.smPenInput.getAnnotatedImage(data);
		return _currentInputDeferred.promise();
	} 
	else
	{
		return $.smResolve(null);
	}
};