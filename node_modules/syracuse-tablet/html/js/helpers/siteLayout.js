"use strict";


/*
 *
 * This module is responsibe to layout main layout components in the browser window:
 *
 * HEADER    | AUTHORING
 * CONTENT   | PANEL
 * FOOTER    |
 *
 */
var utils = require('syracuse-tablet/html/js/helpers/utils');
var notifications = require('syracuse-tablet/html/js/helpers/notifications');

var _currentOrientation = null;
var _layoutParameters = {
	authPanelRight: {
		width: 300,
		splitterWidth: 50
	}
};

/*
 * To detect orientation change in browser window compared to last call of this function
 */
function _isOrientationChange() {
	var width = $(window).width();
	var height = $(window).height();

	var ratio = width / height;
	var orientation;

	if (ratio < 1) {
		orientation = "portrait";
	} else {
		orientation = "landscape";
	}
	if (orientation == _currentOrientation) {
		return false;
	}
	_currentOrientation = orientation;
	return true;
}

/*
 * Triggered by browser window change
 */
exports.updateLayout = function(app, opts) {
	// If browser window size change but orientation did not change, the the software keyboard has been rendered and
	// there MUST NOT be a resize to not loose focus.
	// On desktop devices, we can do the resize without any harm
	if (_isOrientationChange() || utils.isDesktop()) {
		_layoutMainContainers(app);
	}
};

/*
 * Triggered by application JS code
 */
exports.updateLayoutInternal = function(app, opts) {
	if (opts && opts.layout) {
		_layoutParameters = $.extend(true, _layoutParameters, opts.layout);
	}
	_layoutMainContainers(app);
};

/*
 * Layout main containers like header, content, footer, authoring panel
 */
function _layoutMainContainers(app) {
	var width = $(window).width();
	var height = $(window).height();
	var authPanelRightWidth = 0;
	var authPanelRightSplitterWidth = 0;
	var $$auth = $("#s-m-auth-panel-right-id");
	if ($$auth.is(":visible")) {
		authPanelRightWidth = _layoutParameters.authPanelRight.width;
		authPanelRightSplitterWidth = _layoutParameters.authPanelRight.splitterWidth;
		_layoutAuthPanelRight(width, height);
	}
	var appWidth = width - authPanelRightWidth - authPanelRightSplitterWidth;
	var appHeight = height;
	var sizeInfo = {
		application: {
			width: appWidth,
			height: appHeight
		}
	};
	// Allow other components like authoring panel or page content to be resized
	notifications.publish("sm.main.layout.changed", sizeInfo, _currentOrientation);
}

function _layoutAuthPanelRight(width, height) {
	var $$auth = $("#s-m-auth-panel-right-id");
	var $$splitter = $("#s-m-auth-splitter-right-id");
	$$auth.css({
		left: width - _layoutParameters.authPanelRight.width,
		top: 0,
		width: _layoutParameters.authPanelRight.width,
		height: height
	});
	$$splitter.css({
		left: width - _layoutParameters.authPanelRight.width - _layoutParameters.authPanelRight.splitterWidth,
		top: 0,
		width: _layoutParameters.authPanelRight.splitterWidth,
		height: height
	});
}