"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var prototype = require('syracuse-tablet/html/js/helpers/prototype');
var authArticleGen = require('syracuse-tablet/html/js/authoring/authoringArticleGen');

/**
 *  Generates proto form dashBoard description
 **/
var _getDashboardProto = function(dash, daoApp) {
	var proto = {
		$title: dash.$title,
		$description: dash.$description,
		$properties: {}
	};
	var vignetteIds = Object.keys(dash.$vignettes || []);
	for (var i = 0; i < vignetteIds.length; i++) {
		var vignetteId = vignetteIds[i];
		var property = $.extend({}, dash.$vignettes[vignetteId]);
		var gadgetId = property.$uuid;

		property.$gadget = daoApp.getGadgetData(gadgetId);
		if (property.$gadget) {
			property.$gadget = $.extend({}, property.$gadget);
			// Set gadget uuid
			property.$gadget.$uuid = gadgetId;
			// Set vignette uuid
			property.$uuid = vignetteId;
			// Set type - "application/x-string"
			property.$type = "tablet/x-vignette";
			property.$title = property.$gadget.$title;
			// Readable dom uid
			property.domId = utils.readableuid("vgnt", property.$gadget.$type);
		} else {
			property.$gadget = {
				$uuid: gadgetId,
				$type: "$gadgetMissing"
			};
			property.$uuid = vignetteId;
			property.$type = "tablet/x-vignette";
			property.domId = utils.readableuid("vgnt", property.$gadget.$type);

		}
		proto.$properties[vignetteId] = property;
	}
	return prototype.create(proto);
};

/**
 * Returns $article from dashBoard info
 * 		Calculates and Sets $article if no $article was found
 */
var _getDashboardArticle = function(proto) {
	return authArticleGen.generateDashboardArticle(proto, "orientation");
};

exports.getDashboardArticle = _getDashboardArticle;
exports.getDashboardProto = _getDashboardProto;