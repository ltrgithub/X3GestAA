"use strict";

var _ns = "sm";
var _nsNormalizeDict = {};

var _nsNormalize = function(prop) {
	return prop == null ? null : _nsNormalizeDict[prop] || (_nsNormalizeDict[prop] = $.camelCase(_ns + prop));
};

$.fn.smData = function(prop, value) {
	var result;
	if (prop != null) {
		if (prop) prop = _nsNormalize(prop);
		if (arguments.length < 2 || value === undefined) {
			result = this.data(prop);
		} else {
			result = this.data(prop, value);
		}
	}
	return result;
};

$.fn.smRemoveData = function(prop) {
	return this.removeData(_nsNormalize(prop));
};

$.fn.smPageController = function(ctrl) {
	return this.smData("controller", ctrl);
};

$.fn.smPageRemoveController = function() {
	return this.smRemoveData("controller");
};

/*
 * Returns a promise that immediately resolves
 */
$.smResolve = function() {
	var deferred = $.Deferred();
	deferred.resolve.apply(deferred, arguments);
	return deferred.promise();
};
/*
 * Returns a promise that immediately rejects
 */
$.smReject = function() {
	var deferred = $.Deferred();
	deferred.reject.apply(deferred, arguments);
	return deferred.promise();
};

$.smForEachKey = function(o, cb, ctx) {
	Object.keys(o).forEach(function(k) {
		cb.call(ctx, k, o[k]);
	});
};

$.smForEach = function(arr, cb, ctx) {
	var i = 0;
	arr.forEach(function(k) {
		cb.call(ctx, k, i++);
	});
};
$.smUrlParam = function(name) {
	var results = new RegExp('[\?&]' + name + '=([^&#]*)').exec(window.location.href);
	if (results == null) {
		return null;
	} else {
		return (results[1] && decodeURIComponent(results[1])) || null;
	}
};