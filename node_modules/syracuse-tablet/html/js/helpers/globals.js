"use strict";

var log = require('syracuse-tablet/html/js/helpers/logger').getLogger("globals");
var localStorage = require('syracuse-tablet/html/js/storage/localStorage');

var _emptyCacheCtx = {
	"$user": "none",
	"$role": "none",
	"$lang": "none"
};
var _globals = {
	application: null,
	userCtx: null,
	isTestEnvironment: false,
	baseLocation: null,
	isDvlpMode: false,
	isOffLineMode: false,
	storage: null,
	cache: null,
	cacheCtx: $.extend({}, _emptyCacheCtx)
};

var _setUserCtx = function(userCtx) {
	log && log("Set user context");

	_globals.cache.setContext(userCtx == null ? $.extend({}, _emptyCacheCtx) : {
		"$user": userCtx.user.$value,
		"$role": userCtx.selectedRole.code,
		"$lang": userCtx.selectedLocale.code
	});

	return _globals.userCtx = userCtx;
};

var _setApplication = function(appObj) {
	if (!appObj) {
		throw new Error("Bad application description");
	}
	log && log("Set application description");
	_globals.application = appObj;
	return appObj;
};



/**
 * Called by main.js
 */
var _init = function(dvlpMode, storage, cache, utilsModule) {
	_globals.isOffLineMode = false;
	_globals.isDvlpMode = dvlpMode;
	var bl = _globals.baseLocation = {};
	bl.host = window.location.protocol + "//" + window.location.host;
	var path = window.location.pathname.split('/').splice(0, 2).join('/');
	bl.withPath = bl.host + path;
	bl.requirePath = bl.host + "/requireJS" + path;
	bl.htmlRoot = bl.withPath + "/html";
	if (utilsModule) bl.query = utilsModule.parseQueryString();
	_globals.isTestEnvironment = window.location.href.indexOf("/syracuse-tablet/test/index.html") > -1;
	_globals.storage = storage;
	_globals.cache = cache;
};

/* Getters */
exports.isOffLineMode = function() {
	return _globals.isOffLineMode;
};
/**
 * baseLocation.host - protocol://host:port
 * baseLocation.withPath
 * baseLocation.requirePath
 * baseLocation.htmlRoot
 * baseLocation.query
 */
exports.baseLocation = function() {
	return _globals.baseLocation;
};
exports.isDvlpMode = function() {
	return _globals.isDvlpMode;
};
exports.isTestEnvironment = function() {
	return _globals.isTestEnvironment;
};
exports.getApplication = function() {
	return _globals.application;
};
exports.getUserCtx = function() {
	return _globals.userCtx;
};
exports.getGlobalCtx = function() {
	return _globals;
};
exports.getStorage = function() {
	return _globals.storage;
};
exports.getCache = function() {
	return _globals.cache;
};
exports.getCacheCtx = function() {
	return _globals.cacheCtx;
};
exports.getEmptyCacheCtx = function() {
	return _emptyCacheCtx;
};
exports.getEndpoint = function() {
	var ep = _globals.endpoint;
	if (ep == null || ep.trim().length == 0) {
		// If no endpoint in URL red prefs
		// TODO save in DB - Works with modalDefaultEndpoint.js
		ep = localStorage.getItem("defaultEndpoint");
	}
	return ep;
};
exports.setEndpoint = function(ep, force) {
	if (force || (ep != null && ep.trim().length > 0)) {
		// TODO save in DB - Works with modalDefaultEndpoint.js
		ep = localStorage.setItem("defaultEndpoint", ep);
	}
	_globals.endpoint = ep;
};
exports.$config = function(prop) {
	return _globals.application.$config(prop);
};
/**
 * Returns the size of current device
 */
exports.getDeviceSize = function(camelCase) {
	return camelCase ? "Md" : "md";
};
/* Setters */
exports.setApplication = _setApplication;
exports.setUserCtx = _setUserCtx;
/* Initialization by main.js */
exports.init = _init;
/* Set global ctx*/
if (window) {
	window.$sm = exports;
}