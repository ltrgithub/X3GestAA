"use strict";

var _defineClass = function(constructor, parent, members) {
	function _addMembers(proto, members) {
		for (var name in members || {}) {
			var member = members[name];
			if (typeof member.get === "function" || typeof member.set === "function") {
				Object.defineProperty(proto, name, member);
			} else {
				proto[name] = member;
			}
		}
	}

	if (parent) constructor.prototype = Object.create(parent.prototype);
	constructor.prototype.constructor = constructor;
	_addMembers(constructor.prototype, members);
	return constructor;
};

/* Universal UUID - Not readable */
var _UUID = function() {
	return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,
		function(c) {
			var r = Math.random() * 16 | 0,
				v = c == 'x' ? r : (r & 0x3 | 0x8);
			return v.toString(16);
		});
};


/* Return a DOM compliant id */
var _domId = function(id) {
	return id.replace(/\\|\/|\./g, "_");
};

/* Readable ui for html dom ids */
var _uidCpt = 0;
var _readableuid = function() {
	return _domId($.camelCase((arguments.length > 0 ? Array.prototype.join.call(arguments, '-') + '-' : "") + _uidCpt++));
};

/* Clean error stack from current base url and limit the size due to the use of deferred */
var _stackRegexp = (function() {
	try {
		var url = window.location.protocol + "//" + window.location.host;
		url += "/requireJS" + window.location.pathname.split('/').splice(0, 2).join('/');
		return new RegExp(url, "g");
	} catch (e) {
		return null;
	}
})();
var _cleanStack = function(stack, max) {
	max = max == null ? 5 : max;
	var stack = stack ? _stackRegexp ? stack.replace(_stackRegexp, "") : stack : "";
	stack = stack.split("\n");
	if (stack.length > max) {
		stack = stack.splice(0, max).join("\n");
	}
	return stack;
};

/* Build a syracuse diagnose */
var _toDiagnose = function(o, parent) {
	if (!parent) parent = {
		$diagnoses: []
	};
	if (!o) return prarent;
	if (!Array.isArray(o)) o = [o];
	o.forEach(function(diag) {
		var d = $.extend(true, {}, diag);
		if (d.exception) {
			d.message = (d.message ? d.message + "\n" : "") + d.exception.message;
			if (d.exception.stack) {
				d.stackTrace = _cleanStack(d.exception.stack);
			}
		}
		if (!d.severity) d.severity = "error";
		if (!d.message) d.message = "";
		parent.$diagnoses.push(d);
	});
	return parent;
};
/* Parse an url */
var _purlOptions = {
	strictMode: false,
	key: ["source", "protocol", "authority", "userInfo", "user", "password", "host", "port", "relative", "path", "directory", "file", "querystring", "anchor"],
	q: {
		name: "query",
		parser: /(?:^|&)([^&=]*)=?([^&]*)/g
	},
	parser: {
		strict: /^(?:([^:\/?#]+):)?(?:\/\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?))?((((?:[^?#\/]*\/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/,
		loose: /^(?:(?![^:@]+:[^:@\/]*@)([^:\/?#.]+):)?(?:\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/
	}
};
/*
 * {
  "anchor": "", "file": "", "password": "", "user": "", "userInfo": "",
  "querystring": "representation=AQTCRUDM.$edit",
  "directory": "/sdata/x3/erp/SUPERV/AQTCRUD/$template/$workingCopies",
  "path": "/sdata/x3/erp/SUPERV/AQTCRUD/$template/$workingCopies",
  "relative": "/sdata/x3/erp/SUPERV/AQTCRUD/$template/$workingCopies?representation=AQTCRUDM.$edit",
  "port": "8124",
  "host": "pc101329.sagefr.adinternal.com",
  "authority": "pc101329.sagefr.adinternal.com:8124",
  "protocol": "http",
  "source": "http://pc101329.sagefr.adinternal.com:8124/sdata/x3/erp/SUPERV/AQTCRUD/$template/$workingCopies?representation=AQTCRUDM.$edit",
  "query": {
    "representation": "AQTCRUDM.$edit"
  }
 */
var _parseURL = function(str) {
	var o = _purlOptions;
	var m = o.parser[o.strictMode ? "strict" : "loose"].exec(str);
	var uri = {};
	var i = 14;

	while (i--) uri[o.key[i]] = m[i] || "";

	uri[o.q.name] = {};
	uri[o.key[12]].replace(o.q.parser, function($0, $1, $2) {
		if ($1) uri[o.q.name][$1] = decodeURIComponent($2);
	});
	return uri;
};

/* Parse url QS */
var _qsParser = /([^&=;]*)=?([^&;]*)/g;
var _parseQueryString = function(qs) {
	qs = qs || window.location.search;
	var res = {};
	var qs = decodeURIComponent(qs);
	var ii = qs.indexOf('?');
	if (ii >= 0) {
		qs = qs.substring(ii + 1);
	}
	qs.replace(_qsParser, function($0, $1, $2) {
		if ($1 && $1.length > 0) {
			res[$1] = decodeURIComponent($2);
		}
	});
	return res;
};

/* True if o is a JS error*/
var _isError = function(o) {
	return o && Error.prototype.toString === o.toString;
};

/* Encoding/Decoding stuff*/
// TODO - can be improved
var _htmlEncode = function(value) {
	return $('<div/>').text(value).html();
};
var _htmlDecode = function(value) {
	return $('<div/>').html(value).text();
};

exports.UUID = _UUID;
exports.defineClass = _defineClass;
exports.readableuid = _readableuid;
exports.domId = _domId;
exports.toDiagnose = _toDiagnose;
exports.cleanStack = _cleanStack;
exports.parseQueryString = _parseQueryString;
exports.parseURL = _parseURL;
exports.isError = _isError;
exports.htmlEncode = _htmlEncode;
exports.htmlDecode = _htmlDecode;