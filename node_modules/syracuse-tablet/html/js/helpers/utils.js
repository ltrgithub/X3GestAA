"use strict";

var logger = require('syracuse-tablet/html/js/helpers/logger');
var log = logger.log;
var globals = require('syracuse-tablet/html/js/helpers/globals');
var notifications = require('syracuse-tablet/html/js/helpers/notifications');

var _defineClass = function(constructor, parent, members) {
	function _addMembers(proto, members) {
		for (var name in members || {}) {
			var member = members[name];
			if (typeof member.get === "function" || typeof member.set === "function") {
				Object.defineProperty(proto, name, member);
			} else {
				proto[name] = member;
			}
		}
	}

	if (parent) constructor.prototype = Object.create(parent.prototype);
	constructor.prototype.constructor = constructor;
	_addMembers(constructor.prototype, members);
	return constructor;
};

/* Universal UUID - Not readable */
var _UUID = function() {
	return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,
		function(c) {
			var r = Math.random() * 16 | 0,
				v = c == 'x' ? r : (r & 0x3 | 0x8);
			return v.toString(16);
		});
};

var _getCurISODateTime = function() {
	var currentdate = new Date();
	var values = [
		currentdate.getFullYear(), 4, (currentdate.getMonth() + 1), 2,
		currentdate.getDate(), 2,
		currentdate.getHours(), 2,
		currentdate.getMinutes(), 2,
		currentdate.getSeconds(), 2
	];
	var datetime;
	for (var i = 0; i < values.length; i += 2) {
		var val = "" + values[i];
		while (val.length < values[i + 1]) {
			val = "0" + val;
		}
		if (!datetime) {
			datetime = val;
		} else {
			datetime += "-" + val;
		}
	}
	return datetime;
};

/* Return a DOM compliant id */
var _domIdCpt = 0;
var _domId = function(id) {
	return id.replace(/([^\w-_])/g, '_');
};

/* Readable ui for html dom ids */
var _uidCpt = 0;
var _readableuid = function() {
	return _domId($.camelCase((arguments.length > 0 ? Array.prototype.join.call(arguments, '-') + '-' : "") + _uidCpt++));
};


var _errProps = ["message", "stack", "lineNumber", "fileName", "columnNumber"];
var _toPlainObject = function(o, res) {
	if (o == null) return res;
	if (logger.isError(o)) {
		res = res || {};
		_errProps.forEach(function(p) {
			res[p] = p === "fileName" ? logger.cleanStack(o[p]).join('') : p === "stack" ? logger.cleanStack(o[p]) : o[p];
		});
		return res;
	} else if (Array.isArray(o)) {
		return o;
	} else if ($.isPlainObject(o)) {
		res = res || {};
		for (var p in o) {
			res[p] = _toPlainObject(o[p]);
		}
		return res;
	} else if (typeof o !== "object") {
		return o;
	} else {
		return "non-js object";
	}
};
/* Build a Syracuse diagnose - accept JS exceptions*/
var _toDiagnose = function(o, parent, html) {
	if (!parent) parent = {
		$diagnoses: []
	};
	if (!o) return parent;
	if (typeof o == "string") o = {
		message: o
	};
	if (!Array.isArray(o)) o = [o];
	o.forEach(function(diag) {
		var d;
		if (logger.isError(diag)) {
			d = {
				exception: diag
			};
		} else {
			d = _toPlainObject(diag);
		}
		if (d.exception) {
			d.message = (d.message ? d.message + (html ? "<br>" : "\n") : "") + d.exception.message;
			if (d.exception.stack) {
				d.stackTrace = logger.cleanStack(d.exception.stack, null, html);
			}
			delete d.exception;
		}
		if (!d.severity) d.severity = "error";
		if (!d.message) d.message = "";
		parent.$diagnoses.push(d);
	});
	return parent;
};
/* Parse an url */
var _purlOptions = {
	strictMode: false,
	key: ["source", "protocol", "authority", "userInfo", "user", "password", "host", "port", "relative", "path", "directory", "file", "querystring", "anchor"],
	q: {
		name: "query",
		parser: /(?:^|&)([^&=]*)=?([^&]*)/g
	},
	parser: {
		strict: /^(?:([^:\/?#]+):)?(?:\/\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?))?((((?:[^?#\/]*\/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/,
		loose: /^(?:(?![^:@]+:[^:@\/]*@)([^:\/?#.]+):)?(?:\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/
	}
};
/*
 * {
  "anchor": "", "file": "", "password": "", "user": "", "userInfo": "",
  "querystring": "representation=AQTCRUDM.$edit",
  "directory": "/sdata/x3/erp/SUPERV/AQTCRUD/$template/$workingCopies",
  "path": "/sdata/x3/erp/SUPERV/AQTCRUD/$template/$workingCopies",
  "relative": "/sdata/x3/erp/SUPERV/AQTCRUD/$template/$workingCopies?representation=AQTCRUDM.$edit",
  "port": "8124",
  "host": "pc101329.sagefr.adinternal.com",
  "authority": "pc101329.sagefr.adinternal.com:8124",
  "protocol": "http",
  "source": "http://pc101329.sagefr.adinternal.com:8124/sdata/x3/erp/SUPERV/AQTCRUD/$template/$workingCopies?representation=AQTCRUDM.$edit",
  "query": {
    "representation": "AQTCRUDM.$edit"
  }
 */
var _parseURL = function(str) {
	var o = _purlOptions;
	var m = o.parser[o.strictMode ? "strict" : "loose"].exec(str);
	var uri = {};
	var i = 14;

	while (i--) uri[o.key[i]] = m[i] || "";

	uri[o.q.name] = {};
	uri[o.key[12]].replace(o.q.parser, function($0, $1, $2) {
		if ($1) uri[o.q.name][$1] = decodeURIComponent($2);
	});
	return uri;
};

/* Parse url QS */
var _qsParser = /([^&=;]*)=?([^&;]*)/g;
var _parseQueryString = function(qs) {
	qs = qs || window.location.search;
	var res = {};
	var qs = decodeURIComponent(qs);
	var ii = qs.indexOf('?');
	if (ii >= 0) {
		qs = qs.substring(ii + 1);
	}
	qs.replace(_qsParser, function($0, $1, $2) {
		if ($1 && $1.length > 0) {
			res[$1] = decodeURIComponent($2);
		}
	});
	return res;
};

/* Encoding/Decoding stuff*/
// TODO - can be improved
var _htmlEncode = function(value) {
	return $('<div/>').text(value).html();
};
var _htmlDecode = function(value) {
	return $('<div/>').html(value).text();
};


// Display an error in alert box if no possibilities to display in ui
// Better to use than console log
var _alertError = function(title, e) {
	log && log(title);
	log && log(e);
	if (logger.isError(e)) {
		alert(title + "\n" + (e ? e.message + "\n\n" + logger.cleanStack(e.stack) : "No error"));
	} else {
		alert(title + "\n" + (e ? JSON.stringify(_toPlainObject(e), null, 2) : "No error"));
	}
};

/* cleanup all references */
var _unbindObj = function(obj) {
	if (obj == null) return;
	if (obj.jquery) {
		obj.unbind();
		obj.undelegate();
		obj.off();
		obj.remove();
		if (obj.smPageRemoveController) obj.smPageRemoveController();
	}
	notifications.unsubscribe(obj);
};
/**
 *  Resolves expression according to current dataset and prototype
 *  	expression: Syrause SData expression
 *  	dataset: optionnal - DaoSdata object (with value method to chain with a parent) or a simple JSON object
 *  			 if dataset=null prototype must be != null
 *  	prototype: optionnal - PrototypeObject
 **/
var _exprRegExp = /\{(.*?)\}/g;
var _execExpression = function(expression, dataset, prototype, level) {
	level = level || 0;
	expression = (expression || "") + "";
	if (level === 0 && expression.indexOf("{") < 0 && dataset) {
		var value = dataset.getValue ? dataset.getValue(expression) : dataset[expression];
		return value == null ? "" : value;
	}
	var prevProp = null;
	var res = expression.replace(_exprRegExp,
		function(match, prop) {
			// Search in data first - "{VACBPR}~{LEG}"
			var val = dataset == null ? null : dataset.getValue ? dataset.getValue(prop) : dataset[prop];
			if (val != null) return val;
			if (!prototype) return "";
			if (prop.smStartsWith('@')) {
				//Case @1234
				return prototype.localization(prop);
			}
			val = prototype.data(prop, dataset);
			if (val != null && val.indexOf("{") >= 0) {
				// Search in prototype - ex "{@7898}", "{$baseUrl}/$prototype('{$representation}.$thumb')"
				return _execExpression(val, dataset, prototype, level + 1);
			}
			return val == null ? "" : val;
		});
	return res || "";
};

exports.isOnline = function() {
	return navigator.onLine;
};
/*
	Extract code from ref field prototype expression {x}
*/
var _extractCode = function($expression) {
	$expression = $expression + "";
	if ($expression.indexOf("{") >= 0) {
		return $expression.slice(1, $expression.length - 1);
	}
	return $expression;
};

/**
 * return the value of a given path
 * 	path:	String with/without '.' as separator or array of strings
 *  cacheParent: 	null	-> No cache
 * 					!null	-> object that stores the cache (could be different from data object not modify it)
 */
var _getPropByPath = function(object, path, cacheParent) {
	if (path == null || object == null) return null;
	if (cacheParent) {
		if (cacheParent._cachePath && cacheParent._cachePath[path] != null) {
			return cacheParent._cachePath[path];
		}
	}
	if (!Array.isArray(path)) {
		path = path.split('.');
	}
	// Check parent if needed
	var data = object[path[0]];
	for (var i = 1; i < path.length; i++) {
		if (data == null) return null;
		if (!$.isPlainObject(data) == null) {
			throw new Error('_getPropByPath - Unexpected non-plainobject');
		}
		data = data[path[i]];
	}
	if (cacheParent) {
		if (!cacheParent._cachePath) cacheParent._cachePath = {};
		cacheParent._cachePath[path] = data;
	}
	return data;
};
/**
 * Display an error as modal or alert
 * Avoid to declare modal module
 */
var _modalError = function(title, e, cb) {
	var app = globals.getApplication();
	if (app) {
		return globals.getApplication().modalError(title, e, cb);
	} else {
		_alertError(title, e);
	}
};

exports.extractCode = _extractCode;
exports.UUID = _UUID;
exports.defineClass = _defineClass;
exports.readableuid = _readableuid;
exports.domId = _domId;
exports.toDiagnose = _toDiagnose;
exports.parseQueryString = _parseQueryString;
exports.parseURL = _parseURL;
exports.htmlEncode = _htmlEncode;
exports.htmlDecode = _htmlDecode;
exports.alertError = _alertError;
exports.getCurISODateTime = _getCurISODateTime;
exports.unbindObj = _unbindObj;
exports.parseExpression = function(expression, dataset, prototype) {
	return _execExpression(expression, dataset, prototype, 0);
};
/* Method used also by logger - we publish them in log module instead of duplcating the code*/
exports.isError = logger.isError;
exports.cleanStack = logger.cleanStack;
/* Avoid modal declaration in caller module*/
exports.modalError = _modalError;
exports.getPropByPath = _getPropByPath;