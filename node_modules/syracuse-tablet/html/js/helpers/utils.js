"use strict";

var _defineClass = function(constructor, parent, members) {
	function _addMembers(proto, members) {
		for (var name in members || {}) {
			var member = members[name];
			if (typeof member.get === "function" || typeof member.set === "function") {
				Object.defineProperty(proto, name, member);
			} else {
				proto[name] = member;
			}
		}
	}

	if (parent) constructor.prototype = Object.create(parent.prototype);
	constructor.prototype.constructor = constructor;
	_addMembers(constructor.prototype, members);
	return constructor;
};

var _UUID = function() {
	return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,
		function(c) {
			var r = Math.random() * 16 | 0,
				v = c == 'x' ? r : (r & 0x3 | 0x8);
			return v.toString(16);
		});
};

var _domId = function(id) {
	return id.replace(/\\|\/|\./g, "_");
};

var _uidCpt = 0;
var _readableuid = function() {
	return _domId($.camelCase((arguments.length > 0 ? Array.prototype.join.call(arguments, '-') + '-' : "") + _uidCpt++));
};

var _stackRegexp = (function() {
	try {
		var url = window.location.protocol + "//" + window.location.host;
		url += "/requireJS" + window.location.pathname.split('/').splice(0, 2).join('/');
		return new RegExp(url, "g");
	} catch (e) {
		return null;
	}
})();

var _cleanStack = function(stack) {
	var stack = stack ? _stackRegexp ? stack.replace(_stackRegexp, "") : stack : "";
	stack = stack.split("\n");
	if (stack.length > 5) {
		stack = stack.splice(0, 5).join("\n");
	}
	return stack;
};

var _toDiagnose = function(o, parent) {
	if (!parent) parent = {
		$diagnoses: []
	};
	if (!o) return prarent;
	if (!Array.isArray(o)) o = [o];
	o.forEach(function(diag) {
		var d = $.extend(true, {}, diag);
		if (d.exception) {
			d.message = (d.message ? d.message + "\n" : "") + d.exception.message;
			if (d.exception.stack) {
				d.stackTrace = exports.cleanStack(d.exception.stack);
			}
		}
		if (!d.severity) d.severity = "error";
		if (!d.message) d.message = "";
		parent.$diagnoses.push(d);
	});
	return parent;
};


var _qsParser = /([^&=;]*)=?([^&;]*)/g;
var _parseQueryString = function(qs) {
	qs = qs || window.location.search;
	var res = {};
	var qs = decodeURIComponent(qs);
	var ii = qs.indexOf('?');
	if (ii >= 0) {
		qs = qs.substring(ii + 1);
	}
	qs.replace(_qsParser, function($0, $1, $2) {
		if ($1 && $1.length > 0) {
			res[$1] = decodeURIComponent($2);
		}
	});
	return res;
};

/* OBJECT */
var _isError = function(o) {
	return o && Error.prototype.toString === o.toString;
};

exports.UUID = _UUID;
exports.defineClass = _defineClass;
exports.readableuid = _readableuid;
exports.domId = _domId;
exports.toDiagnose = _toDiagnose;
exports.cleanStack = _cleanStack;
exports.parseQueryString = _parseQueryString;
exports.isError = _isError;