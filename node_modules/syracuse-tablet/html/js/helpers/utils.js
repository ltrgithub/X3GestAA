"use strict";
// report is always enabled
var report = require('syracuse-tablet/html/js/helpers/logger').getLogger("report", true);
var globals = require('syracuse-tablet/html/js/helpers/globals');
var notifications = require('syracuse-tablet/html/js/helpers/notifications');
var jsutils = require('syracuse-tablet/html/js/helpers/jsutils');

var _defineClass = function(constructor, parent, members) {
	function _addMembers(proto, members) {
		for (var name in members || {}) {
			var member = members[name];
			if (typeof member.get === "function" || typeof member.set === "function") {
				Object.defineProperty(proto, name, member);
			} else {
				proto[name] = member;
			}
		}
	}

	if (parent) constructor.prototype = Object.create(parent.prototype);
	constructor.prototype.constructor = constructor;
	_addMembers(constructor.prototype, members);

	// !!! The name of the class is the name of the constructor (function)
	// NOTE: THIS DOES NOT SLOW DOWN THE APPLICATION
	// Classes are defined one time at startup, there classes and baseclasses are then stored in an array only once
	// So isInstanceOf will be fast in the rare cases it is used! No need to add a specific flag on which classes to register
	jsutils.addInheritanceInfo(constructor);
	return constructor;
};

/* Universal UUID - Not readable */
var _UUID = function() {
	return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,
		function(c) {
			var r = Math.random() * 16 | 0,
				v = c == 'x' ? r : (r & 0x3 | 0x8);
			return v.toString(16);
		});
};

var _getCurISODateTime = function() {
	var currentdate = new Date();
	var values = [
		currentdate.getFullYear(), 4, (currentdate.getMonth() + 1), 2,
		currentdate.getDate(), 2,
		currentdate.getHours(), 2,
		currentdate.getMinutes(), 2,
		currentdate.getSeconds(), 2
	];
	var datetime;
	for (var i = 0; i < values.length; i += 2) {
		var val = "" + values[i];
		while (val.length < values[i + 1]) {
			val = "0" + val;
		}
		if (!datetime) {
			datetime = val;
		} else {
			datetime += "-" + val;
		}
	}
	return datetime;
};

/* Return a DOM compliant id */
var _domIdCpt = 0;
var _domId = function(id) {
	return id.replace(/([^\w-_])/g, '_');
};

/* Readable ui for html dom ids */
var _uidCpt = 0;
var _readableuid = function() {
	return _domId($.camelCase((arguments.length > 0 ? Array.prototype.join.call(arguments, '-') + '-' : "") + _uidCpt++));
};


/* Parse an url */
var _purlOptions = {
	strictMode: false,
	key: ["source", "protocol", "authority", "userInfo", "user", "password", "host", "port", "relative", "path", "directory", "file", "querystring", "anchor"],
	q: {
		name: "query",
		parser: /(?:^|&)([^&=]*)=?([^&]*)/g
	},
	parser: {
		strict: /^(?:([^:\/?#]+):)?(?:\/\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?))?((((?:[^?#\/]*\/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/,
		loose: /^(?:(?![^:@]+:[^:@\/]*@)([^:\/?#.]+):)?(?:\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/
	}
};
/*
 * {
  "anchor": "", "file": "", "password": "", "user": "", "userInfo": "",
  "querystring": "representation=AQTCRUDM.$edit",
  "directory": "/sdata/x3/erp/SUPERV/AQTCRUD/$template/$workingCopies",
  "path": "/sdata/x3/erp/SUPERV/AQTCRUD/$template/$workingCopies",
  "relative": "/sdata/x3/erp/SUPERV/AQTCRUD/$template/$workingCopies?representation=AQTCRUDM.$edit",
  "port": "8124",
  "host": "pc101329.sagefr.adinternal.com",
  "authority": "pc101329.sagefr.adinternal.com:8124",
  "protocol": "http",
  "source": "http://pc101329.sagefr.adinternal.com:8124/sdata/x3/erp/SUPERV/AQTCRUD/$template/$workingCopies?representation=AQTCRUDM.$edit",
  "query": {
    "representation": "AQTCRUDM.$edit"
  }
 */
var _parseURL = function(str) {
	var o = _purlOptions;
	var m = o.parser[o.strictMode ? "strict" : "loose"].exec(str);
	var uri = {};
	var i = 14;

	while (i--) uri[o.key[i]] = m[i] || "";

	uri[o.q.name] = {};
	uri[o.key[12]].replace(o.q.parser, function($0, $1, $2) {
		if ($1) uri[o.q.name][$1] = decodeURIComponent($2);
	});
	return uri;
};

/* Parse url QS */
var _qsParser = /([^&=;]*)=?([^&;]*)/g;
var _parseQueryString = function(qs) {
	qs = qs || window.location.search;
	var res = {};
	var qs = decodeURIComponent(qs);
	var ii = qs.indexOf('?');
	if (ii >= 0) {
		qs = qs.substring(ii + 1);
	}
	qs.replace(_qsParser, function($0, $1, $2) {
		if ($1 && $1.length > 0) {
			res[$1] = decodeURIComponent($2);
		}
	});
	return res;
};

/* Encoding/Decoding stuff*/
// TODO - can be improved
var _htmlEncode = function(value) {
	return $('<div/>').text(value).html();
};
var _htmlDecode = function(value) {
	return $('<div/>').html(value).text();
};

/* cleanup all references */
var _unbindObj = function(obj) {
	if (obj == null) return;
	if (obj.jquery) {
		obj.unbind();
		obj.undelegate();
		obj.off();
		obj.remove();
		if (obj.smPageRemoveController) obj.smPageRemoveController();
	}
	notifications.unsubscribe(obj);
};
/**
 *  Resolves expression according to current dataset and prototype
 *  	expression: Syrause SData expression
 *  	dataset: optionnal - DaoSdata object (with value method to chain with a parent) or a simple JSON object
 *  			 if dataset=null prototype must be != null
 *  	prototype: optionnal - PrototypeObject
 **/
var _exprRegExp = /\{(.*?)\}/g;
var _execExpression = function(expression, dataset, prototype, level) {
	level = level || 0;
	expression = (expression || "") + "";
	//	TODO  - to remove - FDB - Expresion without brackets must return itself and must not be resolved
	//	if (level === 0 && expression.indexOf("{") < 0 && dataset) {
	//		console.log("NO BRACKET EXPRESSION " + expression);
	//		var value = dataset.getValue ? dataset.getValue(expression) : dataset[expression];
	//		return value == null ? "" : value;
	//	}
	var prevProp = null;
	var res = expression.replace(_exprRegExp,
		function(match, prop) {
			// Search in data first - "{VACBPR}~{LEG}"
			var val = dataset == null ? null : dataset.getValue ? dataset.getValue(prop) : dataset[prop];
			if (val != null) return val;
			if (!prototype) return "";
			if (prop.smStartsWith('@')) {
				//Case @1234
				return prototype.localization(prop);
			}
			val = prototype.data(prop, dataset);
			if (val != null && val.indexOf("{") >= 0) {
				// Search in prototype - ex "{@7898}", "{$baseUrl}/$prototype('{$representation}.$thumb')"
				return _execExpression(val, dataset, prototype, level + 1);
			}
			return val == null ? "" : val;
		});
	return res || "";
};

exports.isOnline = function() {
	return navigator.onLine;
};

exports.isDesktop = function() {
	var agt = navigator.userAgent;
	var mobile = (agt.match(/(iphone|ipod|ipad)/) || agt.match(/(android)/i) || agt.match(/(iemobile)/) || agt.match(/iphone/i) || agt.match(/ipad/i) || agt.match(/ipod/i) || agt.match(/blackberry/i) || agt.match(/bada/i));
	return !mobile;
};

/*
	Extract code from ref field prototype expression {x}
*/
var _extractCode = function($expression) {
	$expression = $expression + "";
	if ($expression.indexOf("{") >= 0) {
		return $expression.slice(1, $expression.length - 1);
	}
	return $expression;
};

/**
 * return the value of a given path
 * 	path:	String with/without '.' as separator or array of strings
 *  cacheParent: 	null	-> No cache
 * 					!null	-> object that stores the cache (could be different from data object not modify it)
 */
var _getPropByPath = function(object, path, cacheParent) {
	if (path == null || object == null) return null;
	if (cacheParent) {
		if (cacheParent._cachePath && cacheParent._cachePath[path] != null) {
			return cacheParent._cachePath[path];
		}
	}
	if (!Array.isArray(path)) {
		path = path.split('.');
	}
	// Check parent if needed
	var data = object[path[0]];
	for (var i = 1; i < path.length; i++) {
		if (data == null) return null;
		if (!$.isPlainObject(data) == null) {
			throw new Error('_getPropByPath - Unexpected non-plainobject');
		}
		data = data[path[i]];
	}
	if (cacheParent) {
		if (!cacheParent._cachePath) cacheParent._cachePath = {};
		cacheParent._cachePath[path] = data;
	}
	return data;
};

/**
 * Only if current pages  is a dashboard
 * return the parent vignette or null
 * we assume that there are no dashboard in vignettes
 */
var _findParentVignette = function($$target, fail) {
	var app = globals.getApplication();
	if (app.currentPage && app.currentPage.isDashboard()) {
		// Find vignette controlId + get vignette control
		var $$v = $$target.closest(".s-m-control.s-m-vignette");
		var vignetteId = $$v.attr("id");
		if (fail && vignetteId.length === 0) throw new Error("Vignette DOM elmt not found");
		var vignette = app.currentPage.getControl(vignetteId);
		if (fail && !vignette) throw new Error("Vignette not found - id[" + vignetteId + "]");
		return vignette;
	} else if (fail) {
		throw new Error("Current page is not a dashboard");
	}
	return null;
};
/**
 * Returns null or {vignette, control} if ctrlId has been found in a vignette
 */
var _findCtrlInDashboard = function($$target, ctrlId) {
	var app = globals.getApplication();
	//Two ways - tested - second should be more efficient but both take few ms
	if (false) {
		// Scan all vignettes and seach control (ctrlId is unic)
		return app.currentPage.findVignetteControl(ctrlId);
	} else {
		// Find vignette controlId + get vignette control + get control from vignette's page
		var vignette = _findParentVignette($$target, app, true);
		var control = vignette.getPageControl(ctrlId);
		return control ? {
			control: control,
			vignette: vignette
		} : null;
	}
};

/**
 * simple function bind
 * @param {Function} fn
 * @param {Object} context
 * @returns {Function}
 */
function bindFn(fn, context) {
	return function boundFn() {
		return fn.apply(context, arguments);
	};
}


/**
 * True if hammer event has the dir direction
 * dir	h or v
 * 		   -90			+180<-- -->0
 * 			^			       |
 * 			|                 +90
 * -180 <-- -->   0
 */
var _isEvtDirection = function(evt, dir, forceTrueIfNull) {
	// If hammer as no event it's - we can have the case with panup pandown without velocity
	// by default if work with if (ui.isEvtDirection(evt, "v")) return; - null evt means we continue
	if (evt == null) return forceTrueIfNull === true;
	if (evt.angle == null) throw new Error("this is not a hammer.js event");
	if ((evt.angle > 45 && evt.angle < 135) || (evt.angle < -45 && evt.angle > -135)) return dir == "v";
	return dir == "h";
};
/**
 * For authoring - Don't stop shiftKey/altKey used by scrolling
 */
var _stopClickEvent = function(e) {
	return e.shiftKey !== true && e.altKey !== true;
};
var refTime = new Date().getTime();
var _timeLineCfg = {
	"ajax": false,
	"page": false,
	"pageLoader": false
};
var _TimeLine = _defineClass(function(type, id) {
	this.type = type;
	this.id = id;
}, null, {
	log: function(step) {
		var time = new Date().getTime();
		var delta = this._prevTime == null ? 0 : time - this._prevTime;
		this._prevTime = time;
		//console.log(time - refTime, this.type, this.id, step, "elasped=" + (time - this._start), "delta=" + delta);
	},
	start: function(step) {
		this._start = new Date().getTime();
		this.log(step ? "start " + step : "start");
	},
	step: function(step) {
		this.log(step);
	},
	stop: function(step) {
		this.log(step ? "stop " + step : "stop");
	},
	reset: function() {
		this._prevTime = null;
		this._start = null;
		return this;
	}
});
/**
 * type			page, sendHttp
 * id			url, name...
 * forceEnable	true 		Force enable
 * 				false 		Force disabled
 * 				undefined 	check _timeLineCfg[type]
 */
var _getTimeLine = function(type, id, forceEnable) {
	try {
		if (forceEnable === false) return;
		if (forceEnable !== true && _timeLineCfg[type] !== true) return null;
		if (type.indexOf("page") === -1 && id != null) {
			id = id + "";
			var p = id.indexOf("representation=");
			if (p >= 0) {
				id = id.substr(p + 15);
			} else {
				var p = id.indexOf("x3/erp/");
				if (p >= 0) {
					id = id.substr(p + 7);
				} else {
					var p = id.indexOf("collaboration/syracuse/");
					id = id.substr(p + 23);
				}
			}
			id = decodeURIComponent(id);
		}
		return new _TimeLine(type, id);
	} catch (e) {
		console.log(e);
	}
};

var _hasProp = function(obj, key) {
	return Object.prototype.hasOwnProperty.call(obj, key);
};

var _areEqual = function(obj1, obj2, strict) {
	if (strict ? obj1 === obj2 : obj1 == obj2)
		return true;
	if (obj1 == null || obj2 == null)
		return false;
	if (Array.isArray(obj1) && Array.isArray(obj2)) {
		if (obj1.length != obj2.length)
			return false;
		for (var i = 0; i < obj1.length; i++)
			if (!_areEqual(obj1[i], obj2[i]))
				return false;
		return true;
	}

	if (typeof obj1 != "object" || typeof obj2 != "object") return false;
	var combined = $.extend({}, obj1);
	$.extend(combined, obj2);
	for (var i in combined) {
		if (_hasProp(combined, i)) {
			var val1 = obj1[i];
			var val2 = obj2[i];
			if (!_areEqual(val1, val2))
				return false;
		}
	}
	return true;
};

exports.areEqual = _areEqual;
exports.stopClickEvent = _stopClickEvent;
exports.isEvtDirection = _isEvtDirection;
exports.extractCode = _extractCode;
exports.UUID = _UUID;
exports.defineClass = _defineClass;
exports.readableuid = _readableuid;
exports.domId = _domId;
exports.parseQueryString = _parseQueryString;
exports.parseURL = _parseURL;
exports.htmlEncode = _htmlEncode;
exports.htmlDecode = _htmlDecode;
exports.getCurISODateTime = _getCurISODateTime;
exports.unbindObj = _unbindObj;
exports.parseExpression = function(expression, dataset, prototype) {
	return _execExpression(expression, dataset, prototype, 0);
};
/* Avoid modal declaration in caller module*/
exports.getPropByPath = _getPropByPath;
exports.findParentVignette = _findParentVignette;
exports.findCtrlInDashboard = _findCtrlInDashboard;
exports.bindFn = bindFn;
//Call when we need to report errors/messages even if log is not enabled
//Temporarilly log into console
exports.report = report;
// Used to analyse performances
exports.getTimeLine = _getTimeLine;