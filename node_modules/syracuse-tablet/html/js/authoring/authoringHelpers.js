"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var globals = require('syracuse-tablet/html/js/helpers/globals');
var locale = require('syracuse-tablet/html/js/helpers/locale');
var authoringSData = require('syracuse-tablet/html/js/authoring/authoringSData');
var modal = require('syracuse-tablet/html/js/ui/modal');

var lastHoverElement;

exports.enableAuthCss = function() {
	$(".s-m-control").addClass("s-m-auth");
	$(".s-m-layout").addClass("s-m-auth");
	$(".s-m-vignette").removeClass("s-m-auth");
	$(".s-m-auth").on("click", _OnSelectControl);

	$(".s-m-auth").mouseover(function(e) {
		var o = $(e.currentTarget);
		if (lastHoverElement) {
			lastHoverElement.removeClass("s-m-auth-hover");
		}
		o.addClass("s-m-auth-hover");
		lastHoverElement = o;
		return false;
	});
};

exports.disableAuthCss = function() {
	$(".s-m-auth").off("click", _OnSelectControl);
	$(".s-m-auth").removeClass("s-m-auth");
};

function _OnSelectControl() {
	var lap = $(this).attr("data-layout-path");
	if (!lap) {
		return;
	}

	var a = globals.getApplication();
	var node = {
		"$items": [a.currentPage.article]
	};

	var elmts = lap.split("-");
	while (elmts.length > 0) {
		var idx = +elmts.shift();
		node = node && node.$items && node.$items[idx];
	}
	$("#authJSONControl").val(JSON.stringify(node, null, "  "));

	$(".s-m-auth-hover").removeClass("s-m-auth-hover");
	$(".s-m-auth-selected").removeClass("s-m-auth-selected");
	$(this).addClass("s-m-auth-selected");
	return false;
}

exports.saveAuthoring = function(page, opts) {

	var segs = page.split(".");

	var pageData = {
		application: segs[0], // x3
		contract: segs[1], // erp
		representation: segs[2], // ACTIV
		facet: segs[3], // $query

		roles: [],
		users: [],
		endpoints: [],

		saveAsOption: opts.saveAs,

		variantCode: opts.code,
		variantTitle: opts.title,
		variantDescription: opts.description,

		article: opts.article
	};

	return authoringSData.getPageVariants({
		application: segs[0],
		contract: segs[1],
		representation: segs[2],
		facet: segs[3]
	})
		.then(function(variants) {
			variants && variants.some(function(v) {
				var match = v.title === opts.title && v.code === opts.code && v.description === opts.description;

				// Did type change? Then create new variant
				if (opts.saveAs === "factory_variant" && v.isFactory !== true) {
					match = false;
				} else if (opts.saveAs === "global_variant" && (v.isFactory === true || v.personalCopy === true)) {
					match = false;
				} else if (opts.saveAs === "personal_copy" && v.personalCopy !== true) {
					match = false;
				}

				// If all matches, it's a save and not a save as
				if (match) {
					pageData.variant = v.$uuid;
				}
			});
		})
		.then(function() {
			return authoringSData.savePageDefinition(pageData);
		})
		.then(function(data) {
			modal.info(locale.text("auth.panel.save_ok_title"), locale.text("auth.panel.save_ok_text"));
		})
		.fail(function(e) {
			modal.info(locale.text("auth.panel.save_error_title"), locale.text("auth.panel.save_error_text") + "\n" + JSON.stringify(e));
		});
};

exports.validateJSON = function(jsonText) {
	var obj;
	try {
		obj = JSON.parse(jsonText);

		// TODO: Logically check article content

		return obj;
	} catch (e) {
		modal.info(locale.text("auth.panel.save_error_title"), locale.text("auth.panel.save_error_json"));
	}
};