"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var globals = require('syracuse-tablet/html/js/helpers/globals');
var locale = require('syracuse-tablet/html/js/helpers/locale');
var notifications = require('syracuse-tablet/html/js/helpers/notifications');
var authHelpers = require('syracuse-tablet/html/js/authoring/authoringHelpers');
var modal = require('syracuse-tablet/html/js/ui/modal');

var _template = '\
	<ul class="nav nav-pills" role="tablist"> \
		<li><a href="#authPanelControl" role="tab" data-toggle="tab">{{label_control}}</a></li> \
		<li class="active"><a href="#authPanelEdit" role="tab" data-toggle="tab">{{label_edit}}</a></li> \
		<li><a href="#authPanelSave" role="tab" data-toggle="tab">{{label_save}}</a></li> \
	</ul> \
	<div class="tab-content"> \
		<div id="authPanelControl" class="tab-pane panel-body"> \
			<label id="authControlName"></label> \
			<textarea  id="authJSONSelection" type="text"></textarea> \
			<div class="s-m-auth-panel-footer"> \
				<button type="button" id="authPanelBtnSelectionApply" class="btn pull-right">{{label_apply}}</button> \
			</div> \
		</div> \
		<div id="authPanelEdit" class="tab-pane panel-body active"> \
			<label id="authEditName"></label> \
			<textarea  id="authJSONPage" type="text"></textarea> \
			<div class="s-m-auth-panel-footer"> \
				<button type="button" id="authPanelBtnPageApply" class="btn pull-right">{{label_apply}}</button> \
			</div> \
		</div> \
		<div id="authPanelSave" class="tab-pane panel-body"> \
			<label id="authPageName"></label> \
			<div class="form-group"> \
				<label>{{label_code}}</label> \
				<input class="form-control" id="authCode" value="{{authCodeDefault}}" /> \
			</div> \
			<div class="form-group"> \
				<label>{{label_title}}</label> \
				<input class="form-control" id="authTitle" value="{{authTitleDefault}}" /> \
			</div> \
			<div class="form-group"> \
				<label>{{label_description}}</label> \
				<input class="form-control" id="authDescription" value="{{authDescriptionDefault}}"  /> \
			</div> \
			<label>{{label_saveas_option}}</label> \
			<div class="btn-group btn-group-justified" data-toggle="buttons"> \
				<div class="btn-group"> \
					<label class="btn btn-primary"> \
						<input type="radio" name="options" id="personal_copy" checked>{{label_personal}} \
					</label> \
				</div> \
				<div class="btn-group"> \
					<label class="btn btn-primary"> \
						<input type="radio" name="options" id="global_variant"> {{label_global}} \
					</label> \
				</div> \
				<div class="btn-group"> \
					<label class="btn btn-primary active"> \
						<input type="radio" name="options" id="factory_variant">{{label_factory}} \
					</label> \
				</div> \
			</div> \
			<div class="s-m-auth-panel-footer"> \
				<button type="button" id="authPanelBtnSave" class="btn pull-right">{{label_save}}</button> \
			</div> \
		</div> \
	</div>';

var _authInterface;
exports.startDesignPage = function() {
	if (!_authInterface) {
		_authInterface = new AuthInterface();
	}

	_authInterface.showAuthoringPanel();
};

var AuthInterface = utils.defineClass(function() {
	var self = this;
	self.$$authPanel = null;
	self.authPanelTemplate = Handlebars.compile(_template);
}, null, {
	showAuthoringPanel: function() {
		var self = this;

		if (self.$$authPanelRight && self.$$authPanelRight.is(":visible")) {
			self._hideAuthPanel();
		} else {
			self._showAuthPanel();
			self._displayAuth(globals.getApplication().currentPage);
		}
	},

	notifPageLoaded: function(page) {
		var self = this;
		if (page && !page.isVignette) {
			self._displayAuth(page);
		}
		if (page && page.state && page.state.disableAuthoring) {
			authHelpers.disableAuthCss();
			self._hideAuthPanel();
			return;
		}

		self._hookDOMEvents();
		self.selectionChangeHandler();
	},

	_hookDOMEvents: function() {
		var self = this;
		authHelpers.disableAuthCss();
		authHelpers.enableAuthCss(self.selectionChangeHandler.bind(self));
	},
	_initJSONArticles: function() {
		$("#authJSONPage").val("");
		$("#authJSONSelection").val("");
	},
	_displayAuth: function(page) {
		var self = this;
		self.currentPageName = page.state.authoringName;
		self.$$authPageName.text(self.currentPageName);
		self.$$authJSONPage.val(authHelpers.toSortedJSON(page.article));
	},

	_showAuthPanel: function() {
		var self = this;
		notifications.subscribe(self, ["sm.page.loaded"]);
		self._ensureAuthPanel();
		self._updateLayout();
		self.$$authPanelRight.show();
		$('.btn', self.$$authPanelSave).eq(0).button("toggle");
		$('.nav-pills a[href="#authPanelEdit"]').tab('show');
		self._hookDOMEvents();
		self._initJSONArticles();
	},
	_hideAuthPanel: function() {
		var self = this;
		self._ensureAuthPanel();
		self.$$authPanelRight.hide();
		$("#s-m-app-id").css("padding-right", "0px");
		authHelpers.disableAuthCss();
		notifications.unsubscribe(self, ["sm.page.loaded"]);
	},
	_ensureAuthPanel: function() {
		var self = this;
		if (this.$$authPanel) {
			return;
		}

		var ctx = {
			label_control: locale.text("auth.panel.label_control"),
			label_edit: locale.text("auth.panel.label_edit"),
			label_save: locale.text("auth.panel.label_save"),
			label_close: locale.text("auth.panel.label_close"),
			label_apply: locale.text("auth.panel.label_apply"),

			label_code: locale.text("auth.panel.label_code"),
			label_title: locale.text("auth.panel.label_title"),
			label_description: locale.text("auth.panel.label_description"),
			label_saveas_option: locale.text("auth.panel.label_saveas_option"),
			label_personal: locale.text("auth.panel.label_personal"),
			label_global: locale.text("auth.panel.label_global"),
			label_factory: locale.text("auth.panel.label_factory"),

			authCodeDefault: locale.text("auth.panel.authCodeDefault"),
			authTitleDefault: locale.text("auth.panel.authTitleDefault"),
			authDescriptionDefault: locale.text("auth.panel.authDescriptionDefault")
		};

		self.$$authPanelRight = $("#s-m-auth-id");
		self.$$authPanel = $(self.authPanelTemplate(ctx));

		self.$$authPanelRight.append(self.$$authPanel);
		self.$$authJSONPage = $("#authJSONPage");
		self.$$authJSONSelection = $("#authJSONSelection");
		self.$$authPageName = $("#authPageName");
		self.$$authCode = $("#authCode");
		self.$$authTitle = $("#authTitle");
		self.$$authDescription = $("#authDescription");

		self.$$authPanelEdit = $("#authPanelEdit");
		self.$$authPanelSave = $("#authPanelSave");
		self.$$authControlName = $("#authControlName");

		$("#authPanelBtnSave").bind("click", self._onSave.bind(self));
		$("#authPanelBtnPageApply").bind("click", self._onApplyPage.bind(self));
		$("#authPanelBtnSelectionApply").bind("click", self._onApplySelection.bind(self));

		self.onResizeHandler = self.resizeHandler.bind(self);
		$(window).on("resize", self.onResizeHandler);
	},
	resizeHandler: function() {
		var self = this;
		self._updateLayout();
	},
	selectionChangeHandler: function(sel) {
		var self = this;
		$("#authJSONSelection").val("");
		if (!sel) {
			return;
		}
		var data = authHelpers.getSelectionData(sel);
		var article = data && data.articleSelection;
		if (article) {
			$("#authJSONSelection").val(authHelpers.toSortedJSON(article));
		}
	},
	_updateLayout: function() {
		var self = this;
		self.$$authPanelRight.css("height", window.innerHeight - 100);
		$("#s-m-app-id").css("padding-right", self.$$authPanelRight.css("width"));

		self.$$authJSONPage.css("height", (window.innerHeight - 220) + "px");
		self.$$authJSONSelection.css("height", (window.innerHeight - 220) + "px");


		self.$$authPanelRight.find(".tab-pane").css("height", window.innerHeight - 150);
	},
	_updateLayoutPage: function() {
		var self = this;
		var page = globals.getApplication().currentPage;
		var article = self.$$authJSONPage.val();
		var articleParsed = authHelpers.validateJSON(article);
		if (!articleParsed) {
			return;
		}
		page.updateLayout(articleParsed)
			.then(function() {
				self._hookDOMEvents();
				self.selectionChangeHandler();
			})
			.fail(function(e) {
				utils.modalError("Error", e);
			});

	},
	_onSave: function() {
		var self = this;
		var article = self.$$authJSONPage.val();
		var articleParsed = authHelpers.validateJSON(article);
		if (!articleParsed) {
			return;
		}

		authHelpers.saveAuthoring(self.currentPageName, {
			code: self.$$authCode.val(),
			title: self.$$authTitle.val(),
			description: self.$$authDescription.val(),

			// "factory_variant", "personal_copy", "global_variant"
			// -> "shared_copy" not yet supported
			saveAs: $("input:radio:checked", self.$$authPanelSave)[0].id,
			article: articleParsed
		});
	},
	_onApplySelection: function() {
		var self = this;
		var sel = authHelpers.getSelection();
		if (!sel) {
			return;
		}
		var json = $("#authJSONSelection").val();
		var articleSelection = authHelpers.validateJSON(json);
		if (!articleSelection) {
			return;
		}
		var data = authHelpers.getSelectionData(sel);
		if (!data) {
			return;
		}
		// remove old keys of node
		Object.keys(data.articleSelection).forEach(function(key) {
			delete data.articleSelection[key];
		});
		// Inject JSON into full page json tree
		Object.keys(articleSelection).forEach(function(key) {
			data.articleSelection[key] = articleSelection[key];
		});

		var articlePage = authHelpers.toSortedJSON(data.articlePage);
		self.$$authJSONPage.val(articlePage);
		self._updateLayoutPage();
	},
	_onApplyPage: function() {
		var self = this;
		self._updateLayoutPage();
	},
	_onClose: function() {
		var self = this;
		self._hideAuthPanel();
	}
});