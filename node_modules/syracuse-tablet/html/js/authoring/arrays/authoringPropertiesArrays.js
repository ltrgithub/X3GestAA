"use strict";
var authArrayGeneral = require('syracuse-tablet/html/js/authoring/arrays/authArrayGeneral');
var authArrayTable = require('syracuse-tablet/html/js/authoring/arrays/authArrayTable');
var authArrayCard = require('syracuse-tablet/html/js/authoring/arrays/authArrayCard');
var authArrayStatus = require('syracuse-tablet/html/js/authoring/arrays/authArrayStatus');
var authoringPropertiesChart = require('syracuse-tablet/html/js/authoring/arrays/authoringPropertiesChart');

exports.initModuleProperties = function(dest) {
	authArrayGeneral.initModuleProperties(dest);
	authArrayCard.initModuleProperties(dest);
	authArrayTable.initModuleProperties(dest);
	authArrayStatus.initModuleProperties(dest);
	authoringPropertiesChart.initModuleProperties(dest);
};

exports.getModuleProperties = function($$elmt, controller, props, sel, data) {
	if (sel.$$elmt.is(".s-m-control.s-m-chart")) {
		// Type display and pagination only
		authArrayGeneral.getModuleProperties($$elmt, controller, props, sel, data);
		// Properties for charts authoring
		authoringPropertiesChart.getModuleProperties($$elmt, controller, props, sel, data);
	} else {
		// Commons settings
		authArrayGeneral.getModuleProperties($$elmt, controller, props, sel, data);
		// Design cards/Columns
		if (data.control.$display === "separator") {
			// Nothing
		} else {
			if (data.control.$display === "card") {
				authArrayCard.getModuleProperties($$elmt, controller, props, sel, data);
			} else if (data.control.$display === "table") {
				if (!data.control.prototype.isSingleArray()) {
					authArrayTable.getModuleProperties($$elmt, controller, props, sel, data);
				}
			}
			// Status management on cards and tables
			authArrayStatus.getModuleProperties($$elmt, controller, props, sel, data);
		}
	}
};