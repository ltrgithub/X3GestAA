"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var locale = require('syracuse-tablet/html/js/helpers/locale');
var notifications = require('syracuse-tablet/html/js/helpers/notifications');
var authHelpers = require('syracuse-tablet/html/js/authoring/authoringHelpers');
var authHtml = require('syracuse-tablet/html/js/authoring/authoringHtml');
var uiutils = require('syracuse-tablet/html/js/ui/uiUtils');
var authVal = require('syracuse-tablet/html/js/authoring/authoringVal');
var authProps = require('syracuse-tablet/html/js/authoring/authoringProperties');

exports.Panel = utils.defineClass(function() {
	var self = this;
	self.$$panel = null;
}, null, {
	show: function() {
		var self = this;

		self._ensurePanel();
		self.$$panel.show();

		self._initDefaults();
	},
	hide: function() {
		var self = this;
		self._ensurePanel();
		self.$$panel.hide();
	},

	_ensurePanel: function() {
		var self = this;
		if (this.$$panel) {
			return;
		}

		var ctx = {
			label_vertical: "Vertical",
			label_horizonzal: "Horizontal",
		};

		self.$$panel = $("#s-m-auth-panel-footer-id");
		self.$$panel.append($(authHtml.execute("authPanelFooter", ctx)));

		self._getDomObjects();
		self._initDomEvents();

		notifications.subscribe(self, ["sm.main.layout.changed"]);
		notifications.subscribe(self, ["sm.auth.set.selection"]);
		notifications.subscribe(self, ["sm.auth.change.prop.ui"]);
	},

	_getDomObjects: function() {
		var self = this;
	},

	_initDomEvents: function() {
		var self = this;
	},

	_initDefaults: function() {
		var self = this;
	},

	notifMainLayoutChanged: function() {
		var self = this;
	},

	// Called by panel if a property like color has been changed using the simple ui
	notifAuthChangePropUi: function(articlePage) {
		var self = this;
	},

	notifAuthSetSelection: function(path) {
		var self = this;
	},

	/*
	 * Switches the page to hub or stack layout (dashboard or "normal")
	 * Creates a new default layout
	 */
	_setPageDesign: function(orientation) {
		var self = this;
		modal.simpleConfirm(locale.text("auth.layout.change"), function(yes) {
			if (yes) {
				self._createPageDesign(orientation);
			}
		});
	},

	_createPageDesign: function(orientation) {
		var page = globals.getApplication().currentPage;
		authArticleGen.genNewArticle({
			page: page,
			orientation: orientation
		})
			.then(function(article) {
				var articleJSON = authVal.toSortedJSON(article);
				notifications.publish(["sm.auth.change.prop.ui"], articleJSON);
			})
			.fail(function(e) {
				modal.error(e);
			});
	},

});