"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var notifications = require('syracuse-tablet/html/js/helpers/notifications');
var authHtml = require('syracuse-tablet/html/js/authoring/authoringHtml');

exports.Panel = utils.defineClass(function AuthoringPanelFooter() {
	var self = this;
	self.$$panel = null;
}, null, {
	show: function() {
		var self = this;

		self._ensurePanel();
		self._subscribe();

		self.$$panel.show();

		self._initDefaults();
	},
	hide: function() {
		var self = this;
		self._ensurePanel();
		self.$$panel.hide();

		self._unscribe();
	},

	_ensurePanel: function() {
		var self = this;
		if (this.$$panel) {
			return;
		}

		var ctx = {};

		self.$$panel = $("#s-m-auth-panel-footer-id");
		self.$$panel.append($(authHtml.execute("authPanelFooter", ctx)));

		self._getDomObjects();
		self._initDomEvents();
	},

	_getDomObjects: function() {
		var self = this;
	},

	_initDomEvents: function() {
		var self = this;
	},

	_initDefaults: function() {
		var self = this;
		notifications.subscribe(self, ["sm.main.layout.changed"]);
		notifications.subscribe(self, ["sm.auth.set.selection"]);
		notifications.subscribe(self, ["sm.auth.change.prop.ui"]);
	},

	_subscribe: function() {
		var self = this;
		notifications.unsubscribe(self, ["sm.main.layout.changed"]);
		notifications.unsubscribe(self, ["sm.auth.set.selection"]);
		notifications.unsubscribe(self, ["sm.auth.change.prop.ui"]);
	},

	_unscribe: function() {

	},

	notifMainLayoutChanged: function() {
		var self = this;
	},

	// Called by panel if a property like color has been changed using the simple ui
	notifAuthChangePropUi: function(articlePage) {
		var self = this;
	},

	notifAuthSetSelection: function(id) {
		var self = this;
	}
});