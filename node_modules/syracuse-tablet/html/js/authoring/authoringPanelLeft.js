"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var globals = require('syracuse-tablet/html/js/helpers/globals');
var locale = require('syracuse-tablet/html/js/helpers/locale');
var notifications = require('syracuse-tablet/html/js/helpers/notifications');
var authHelpers = require('syracuse-tablet/html/js/authoring/authoringHelpers');
var modal = require('syracuse-tablet/html/js/ui/modal');
var authHtml = require('syracuse-tablet/html/js/authoring/authoringHtml');
var uiutils = require('syracuse-tablet/html/js/ui/uiUtils');

exports.Panel = utils.defineClass(function() {
	var self = this;
	self.$$panel = null;
}, null, {
	show: function() {
		var self = this;

		self._ensurePanel();
		self.$$panel.show();
		self.$$splitter.show();
	},

	hide: function() {
		var self = this;
		self._ensurePanel();
		self.$$panel.hide();
		self.$$splitter.hide();
	},

	notifMainLayoutChanged: function() {
		var self = this;
	},

	_ensurePanel: function() {
		var self = this;
		if (this.$$panel) {
			return;
		}
		var ctx = {
			label_phone: locale.text("auth.panel.label_phone"),
			label_mini_tablet: locale.text("auth.panel.label_mini_tablet"),
			label_tablet: locale.text("auth.panel.label_tablet"),
			label_large: locale.text("auth.panel.label_large"),
			label_landscape: locale.text("auth.panel.label_landscape"),
			label_portrait: locale.text("auth.panel.label_portrait")
		};

		self.$$panel = $("#s-m-auth-panel-left-id");
		self.$$panel.append($(authHtml.execute("authPanelLeftStructure", ctx)));

		self._getDomObjects();
		self._initSplitter();

		$("#auth_device_size .btn", self.$$panel).click(function() {
			var $$this = $(this);
			var id = $("input", $$this).attr("id");
			var segs = id.split("_");
			self._setDeviceSize(segs[segs.length - 1], null);
		});
		$("#auth_device_orientation .btn", self.$$panel).click(function() {
			var $$this = $(this);
			var id = $("input", $$this).attr("id");
			var segs = id.split("_");
			self._setDeviceSize(null, segs[segs.length - 1]);
		});
		notifications.subscribe(self, ["sm.main.layout.changed"]);
	},
	_getDomObjects: function() {
		var self = this;
	},
	_initSplitter: function() {
		var self = this;
		self.$$splitter = $("#s-m-auth-splitter-left-id");
		self.$$splitter.draggable({
			axis: "x",
			stop: function(e, ui) {
				var $$splitter = $(this);
				var pos = $$splitter.position();
				var width = $$splitter.width();
				var panelLeftSize = pos.left;
				uiutils.triggerResizeInternal({
					layout: {
						authPanelLeft: {
							width: panelLeftSize
						}
					}
				});
			}
		});
	},
	_setDeviceSize: function(size, orientation) {
		var self = this;
		var params = {
			layout: {
				authoringParameters: {}
			}
		};

		if (size) {
			params.layout.authoringParameters.device = size;
		}
		if (orientation) {
			params.layout.authoringParameters.orientation = orientation;
		}
		uiutils.triggerResizeInternal(params);
	}
});