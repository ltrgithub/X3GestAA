"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var notifications = require('syracuse-tablet/html/js/helpers/notifications');

var $$lastHoverElement;

//Controls and layout classes that cannot be selected during authoring
var _elementsNoAuthoring = [".s-m-array .s-m-control", ".s-m-array .s-m-layout"];

exports.AuthPage = utils.defineClass(
	function AuthPage() {
		var self = this;
		notifications.subscribe(self, ["sm.auth.hover.in"]);
		notifications.subscribe(self, ["sm.auth.hover.out"]);

		notifications.subscribe(self, ["sm.auth.set.selection"]);
		notifications.subscribe(self, ["sm.auth.remove.selection"]);

		self.__onElementClick = self._onElementClick.bind(self);
		self.__onElementMouseOver = self._onElementMouseOver.bind(self);
		self.__onElementMouseOut = self._onElementMouseOut.bind(self);

		self.$$page = $("#s-m-app-id");
	}, null, {
		/*
		 * Enable hover and click events in page
		 */
		enableAuthCss: function() {
			var self = this;
			$(".s-m-control").addClass("s-m-auth");
			$(".s-m-layout").addClass("s-m-auth");

			_elementsNoAuthoring.forEach(function(e) {
				$(e).removeClass("s-m-auth");
			});

			$(".s-m-auth", self.$$page).on("click", self.__onElementClick);
			$(".s-m-auth", self.$$page).on("mouseover", self.__onElementMouseOver);
			$(".s-m-auth", self.$$page).on("mouseout", self.__onElementMouseOut);
			// Can't have overflow:"auto" in css class because we need hidden for scrolling
			$("#s-m-app-container-id").css({
				overflow: "auto"
			});
			/*
			$(".s-m-auth").draggable({
				revert: function($$drop) {
					return "invalid";
				} 
			});
			$(".s-m-auth.s-m-layout").droppable({
				greedy: true,
				hoverClass: "s-m-auth-hover-droptarget",
				drop: function(event, ui) {
					//return false;
					return true;
				},
				accept: function($$dragable) {
					
				}
			});
			*/
		},

		/*
		 * Disable all events in page that were used for authoring interaction
		 */
		disableAuthCss: function() {
			var self = this;

			// Switch needed for scrolling
			$("#s-m-app-container-id").css({
				overflow: "hidden"
			});
			$(".s-m-auth", self.$$page).off("click", self.__onElementClick);
			$(".s-m-auth", self.$$page).off("mouseover", self.__onElementMouseOver);
			$(".s-m-auth", self.$$page).off("mouseout", self.__onElementMouseOut);

			$(".s-m-auth", self.$$page).removeClass("s-m-auth");
		},

		_onElementClick: function(e) {
			var self = this;
			var $$o = $(e.currentTarget);

			var $$old = $(".s-m-auth-selected", self.$$page);
			$$old.removeClass("s-m-auth-selected");
			var path = $$old.attr("data-layout-path");
			notifications.publishEx(["sm.auth.remove.selection"], {
				exclude: [self]
			}, path);

			$$o.addClass("s-m-auth-selected");
			path = $$o.attr("data-layout-path");
			notifications.publishEx(["sm.auth.set.selection"], {
				exclude: [self]
			}, path);
			// Scrolling needs shiftClick and altClick
			if (utils.stopClickEvent(e)) return false;
		},

		_onElementMouseOver: function(e) {
			var self = this;
			var $$o = $(e.currentTarget);
			if ($$lastHoverElement) {
				$$lastHoverElement.removeClass("s-m-auth-hover");
				notifications.publishEx(["sm.auth.hover.out"], {
					exclude: [self]
				}, $$lastHoverElement.attr("data-layout-path"));
			}
			notifications.publishEx(["sm.auth.hover.in"], {
				exclude: [self]
			}, $$o.attr("data-layout-path"));
			$$o.addClass("s-m-auth-hover");
			$$lastHoverElement = $$o;
			return false;
		},

		_onElementMouseOut: function(e) {
			var self = this;
			var $$o = $(e.currentTarget);
			$$o.removeClass("s-m-auth-hover");
			notifications.publishEx(["sm.auth.hover.out"], {
				exclude: [self]
			}, $$o.attr("data-layout-path"));
		},

		notifAuthHoverIn: function(path) {
			var self = this;
			var $$pageItem = self._getItemByPath(path);
			$$pageItem.addClass("s-m-auth-hover");
		},

		notifAuthHoverOut: function(path) {
			var self = this;
			var $$pageItem = self._getItemByPath(path);
			$$pageItem.removeClass("s-m-auth-hover");
		},

		notifAuthSetSelection: function(path) {
			var self = this;
			var $$item = self._getItemByPath(path);
			$$item.addClass("s-m-auth-selected");
		},

		notifAuthRemoveSelection: function(path) {
			var self = this;
			var $$item = self._getItemByPath(path);
			$$item.removeClass("s-m-auth-selected");
		},

		_getItemByPath: function(path) {
			var self = this;
			return $("[data-layout-path=" + path + "]", self.$$page);
		},

		getCurrentSelectionPath: function() {
			var self = this;
			var $$item = $(".s-m-auth-selected", self.$$page);
			return $$item.attr("data-layout-path");
		}
	});