"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var globals = require('syracuse-tablet/html/js/helpers/globals');
var locale = require('syracuse-tablet/html/js/helpers/locale');

var factory = require('syracuse-tablet/html/js/application/appFactory');
var appFactoryDeps = require('syracuse-tablet/html/js/application/appFactoryDeps');
var ctrlFactoryDeps = require('syracuse-tablet/html/js/controls/ctrlFactoryDeps');

var ajax = require('syracuse-tablet/html/js/ajax/ajax');
var storage = require('syracuse-tablet/html/js/storage/storage');
var sdataCache = require('syracuse-tablet/html/js/sdata/sdataCache');

var uiutils = require('syracuse-tablet/html/js/ui/uiUtils');
var modal = require('syracuse-tablet/html/js/ui/modals/modal');
var siteLayout = require('syracuse-tablet/html/js/helpers/siteLayout');
var metaData = require('syracuse-tablet/html/js/application/metaData');
var developmentPage = require('syracuse-tablet/html/js/ui/developmentPage');
var uiSettings = require('syracuse-tablet/html/js/helpers/uiSettings');
var offlineManager = require('syracuse-tablet/html/js/helpers/offlineManager');
var pageRegistry = require('syracuse-tablet/html/js/application/pageRegistry');

//fully client side configured application to add tests later
var testApplication = require('syracuse-tablet/html/js/sdata/entities/test/testApplication');
var welcomeApplication = require('syracuse-tablet/html/js/sdata/entities/welcomeApplication');
var demos = require('syracuse-tablet/html/js/demos/main');

exports.init = function() {
	var st;
	var cache;
	var deferred = new $.Deferred();
	uiSettings.init();
	offlineManager.init();
	pageRegistry.init();
	globals.setSiteLayout(siteLayout);
	st = storage.getStorage();
	st.init()
		.then(function() {
			cache = new sdataCache.SDataCache(st);
		})
		.then(function() {
			var devMode = window.location.href.indexOf("/index_debug.html") > -1 || window.location.href.indexOf("/index_joined.html") > -1;
			globals.init(devMode || utils.forceDvlpMode(), st, cache, utils);
			globals.setMetaData(metaData);
		})
		.then(function() {
			return appFactoryDeps.init();
		})
		.then(function() {
			return ctrlFactoryDeps.init();
		})
		.then(function() {
			ajax.init({}, locale);
			utils.init(locale);
		})
		.then(function() {
			welcomeApplication.register();
			demos.init();
		})
		.then(function() {
			if (globals.isDvlpMode()) {
				testApplication.register();
			}
		})
		.then(function() {
			var app = factory.createApplication($("#s-m-app-id"));
			globals.setTabletApplication(app);
			globals.setModal(modal);
		})
		.then(function() {
			_applyDevelopmentSettings();
		})
		.then(function() {
			uiutils.triggerResizeInternal();
		})
		.then(function() {
			deferred.resolve();
		}).fail(function(e) {
			deferred.reject(e);
		});

	return deferred.promise();
};

function _applyDevelopmentSettings() {
	if (globals.isDvlpMode()) {
		if (developmentPage.wasActive()) {
			developmentPage.show();
		}
	}
}