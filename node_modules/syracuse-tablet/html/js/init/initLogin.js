"use strict";

var auth = require('syracuse-tablet/html/js/application/authentication');
var locale = require('syracuse-tablet/html/js/helpers/locale');
var globals = require('syracuse-tablet/html/js/helpers/globals');
var settings = require('syracuse-tablet/html/js/application/settings');
var notifications = require('syracuse-tablet/html/js/helpers/notifications');
var initContext = require('syracuse-tablet/html/js/init/initContext');
var nativeApp = require('syracuse-tablet/html/js/helpers/native/nativeSageX3WUPApp');

/**
 * Resolves with true if user is logged in or false if login is required
 * Notified after login request succeeded
 * -> Set the context according to contextToRestore or userProfile
 * -> If Ok set the current page (welcome application) and resume with true
 * -> If not Of resume with false
 * offlineLogin:	true if offline login
 * fromInitProcess	true if login occurred after initialization of the application
 */
var _notifLoggedIn = function(userProfile, contextToRestore, offlineLogin, fromInitProcess) {
	if (!userProfile) {
		return $.smResolve(false);
	}
	var step = fromInitProcess === true ? $.smResolve(null) : auth.reconnectGetToken();
	return step.then(function(token) {
		if (fromInitProcess !== true && nativeApp.isSageX3WUPApp()) {
			// Set the new reconnection token
			nativeApp.setReconnectToken(token);
		}
		var userCtx = {
			"$user": userProfile.user.$value,
			"$role": userProfile.selectedRole.code,
			"$lang": userProfile.selectedLocale.code
		};
		globals.setUserCtx(userCtx);
		globals.setUserProfile(userProfile);
		locale.setUserLocales(userProfile && userProfile.user && userProfile.user.locales);
	}).then(function() {
		globals.setNeedToCheckAppsList(true);
		return initContext.init(false, contextToRestore, offlineLogin);
	}).then(function(context) {
		return settings.setLastUserProfile(userProfile);
	}).then(function(profile) {
		notifications.publish("sm.user.logged.in", fromInitProcess);
		return true;
	});
};
/**
 * Resolves with true if user is logged in or false if login is required
 */
exports.init = function() {
	/**
	 * reconnectToken is used to skip login if session is still alive
	 * Used by native wrapper when application resumed - See also notifLogin
	 */
	var step, userProfile;
	var reconnectToken = nativeApp.isSageX3WUPApp() ? nativeApp.getReconnectToken() : null;
	if (reconnectToken) {
		// Call a request that sets the session cookie to reconnect Syracuse server
		step = auth.reconnectSetToken(reconnectToken);
	} else {
		step = $.smResolve();
	}
	return step.then(function() {
		// Check Syracuse session - Resolves with userProfile
		return auth.check();
	}).then(function(profile) {
		// userProfile!= null if connection OK - userProfile == null to force login
		userProfile = profile;
		if (nativeApp.isSageX3WUPApp()) {
			if (reconnectToken && userProfile == null) {
				// clear the reconnection token if not valid
				nativeApp.setReconnectToken(null);
			}
			return nativeApp.getReconnectContext();
		} else {
			return null;
		}
	}).then(function(reconnectctx) {
		return _notifLoggedIn(userProfile, reconnectctx, null, true);
	});
};
exports.notifLoggedIn = _notifLoggedIn;