"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var globals = require('syracuse-tablet/html/js/helpers/globals');
var log = require('syracuse-tablet/html/js/helpers/logger').getLogger("page");
var templates = require('syracuse-tablet/html/js/helpers/templating');
var ajax = require('syracuse-tablet/html/js/ajax/ajax').getAjax().ajax;

var _consts = {
	tmplPage: "pages/",
	tmplDefHeader: "pages/default/header",
	tmplRoot: "templates/pages/",
	dataFile: "/data.json",
	tmplHead: "header",
	tmplMain: "main"
};

var _defHeaderCtx = {
	title: "Sage X3 Mobile",
	home: " Home",
	about: " About",
	logout: " Logout",
	settings: " Settings"
};
var _resolveError = function(deferred, name, e) {
	var content = '<div class="alert alert-danger" role="alert"> Error loading template ' + name + '</div>';
	if (utils.isError(e)) {
		content += "<p>Error</p><pre>" + JSON.stringify(utils.toDiagnose(e, null, true), null, 2) + "<pre>";
	}
	deferred.resolve({
		content: content,
		header: ""
	});
};

/**
 * Reads header/content templates in templates/pageName
 * If no header reads default header in templates/default
 */
var _getTemplate = function(state, ctxHeader, ctxContent) {
	var self = this;
	var deferred = $.Deferred();
	try {
		var root = _consts.tmplPage + state.name + "/";
		/*var promises = [];
		promises.push(ctxContent ? templates.exec(root + _consts.tmplMain, ctxContent) : null);
		promises.push(ctxHeader ? templates.exec(root + _consts.tmplHead, ctxHeader, {
			failNotFound: false
		}) : null);*/
		$.when(ctxContent ? templates.exec(root + _consts.tmplMain, ctxContent) : null, ctxHeader ? templates.exec(root + _consts.tmplHead, ctxHeader, {
			failNotFound: false
		}) : null).then(function(content, header) {
			if (header == null && ctxHeader != null) {
				templates.exec(_consts.tmplDefHeader, _defHeaderCtx).then(function(header) {
					deferred.resolve({
						content: content,
						header: header
					});
				}, function(e) {
					log && log("Error loading default page header");
					deferred.resolve({
						content: content,
						header: null
					});
				});
			} else {
				deferred.resolve({
					content: content,
					header: header
				});
			}
		}, function(e) {
			_resolveError(deferred, state.name, e);
		});
	} catch (e) {
		_resolveError(deferred, state.name, e);
	} finally {
		return deferred.promise();
	}
};

/**
 * Mockup - Load a data.json file in templates/pageName
 */
var _getData = function(state) {
	var deferred = $.Deferred();
	var url = globals.baseLocation().htmlRoot + state.name + _consts.dataFile;
	if (state.detailid) {
		// If the link has a data-detailid attribute we expect a data.detaild.json file
		url = url.replace(".json", "." + state.detailid + ".json");
	}
	ajax("GET", url).then(function(result) {
		deferred.resolve(result.status === 200 ? result.responseJSON : null);
	}, function(e) {
		deferred.reject(e);
	});
	return deferred.promise();
};

exports.resolveError = _resolveError;
exports.getTemplate = _getTemplate;
exports.getData = _getData;