"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var globals = require('syracuse-tablet/html/js/helpers/globals');
var notifications = require('syracuse-tablet/html/js/helpers/notifications');
var Base = require('syracuse-tablet/html/js/pages/pageRegular').Page;
var eventListener = require('syracuse-tablet/html/js/application/eventListener');

/**
 * Lookup page that handles selection
 * TODO - eventually if we have to merge wit regular page later
 */
var _Page = utils.defineClass(
	function($parent, state, prototype, article) {
		var self = this;
		Base.call(self, $parent, state, prototype, article);
		self.selectedRow = null;
	}, Base, {

		addPanel: function(panelId) {
			if (panelId == "footer" || panelId == "rightpanel" || panelId == "leftpanel") return null;
			return Base.prototype.addPanel.call(this, panelId);
		},

		destroy: function() {
			var self = this;
			Base.prototype.destroy.call(self);
			self.selectedRow = null;
		},
		/**
		 * handle selection of a row in query array
		 */
		_actSelect: function(rowId) {
			var self = this;
			self.selectedRow = self.dao.getRowById(rowId, true);
			if (self.isVignette) {
				eventListener.triggerAction(self.$$elmt, "vignetteBack");
			} else {
				self.goBack();
			}
		},
		/**
		 *  Modify title for dvlp tests
		 */
		buildHtmlOption: function() {
			var self = this;
			var opts = Base.prototype.buildHtmlOption.call(self);
			opts.header.title = "Lookup page";
			return opts;
		},
		/**
		 * getParentNotif method is called by pageLoader to notify parent page
		 */
		getParentNotif: function() {
			var self = this;
			if (!self.selectedRow) return null;
			return {
				parentId: self.state.options.parentId,
				controlId: self.state.options.controlId,
				notifId: "sm.lookup.selection",
				notifData: self.selectedRow
			};
		},

	});

exports.Page = _Page;