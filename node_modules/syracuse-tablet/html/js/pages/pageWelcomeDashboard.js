"use strict";

var globals = require('syracuse-tablet/html/js/helpers/globals');
var utils = require('syracuse-tablet/html/js/helpers/utils');
var Base = require('syracuse-tablet/html/js/pages/customizedDashboard').Page;
var settings = require('syracuse-tablet/html/js/application/settings');
var locale = require('syracuse-tablet/html/js/helpers/locale');
var welcomeApplication = require('syracuse-tablet/html/js/sdata/entities/welcomeApplication');
var modalChooseApps = require('syracuse-tablet/html/js/ui/modals/modalChooseApps');

var _initConfigPage = false;

var _Page = utils.defineClass(

	function WelcomeDashboardPage($parent, state, prototype, article) {
		Base.call(this, $parent, state, prototype, article, {
			breadcrumbs: false
		});
		this.vignettes = [];
	}, Base, {

		destroy: function() {
			Base.prototype.destroy.call(this);
		},
		beforeAddContent: function() {
			// We do not show a title on the welcome page
			//this.addTitle(this.prototype.data("$title"), this.prototype.data("$description"));
			this.$$elmt.addClass("s-m-page-welcome-background");
		},
		buildHtmlOption: function(loadOptions) {
			var self = this;
			return Base.prototype.buildHtmlOption.call(self, loadOptions)
				.then(function(opts) {
					return $.extend(true, {}, opts, {
						makeFullHeight: false,
						toolBars: {
							showAuthoring: false,
							showUserMenuLinks: true,
							showHome: false,
							showPageConfig: true,
							showDrafts: true,
							statusPinPage: 0
						}
					});
				});
		},
		afterRender: function(loadOptions, buildOpts) {
			var self = this;
			// This page is loaded synchronously - We need to wait until all vignettes has been loaded to continue
			// Needed by the restoreContext process (see application.notifUserLoggedIn)
			loadOptions.forceSynchroVignettes = true;
			return Base.prototype.afterRender.call(self, loadOptions, buildOpts).then(function() {});
		},
		afterChangePage: function() {
			Base.prototype.afterChangePage.call(this);
			globals.getApplication().gotoWelcomeApplication(null, true);
		},
		enabledConfig: function() {
			this.tileList = welcomeApplication.getApplicationLists();
			Base.prototype.enabledConfig.call(this, {
				'addHiddenTileLabel': locale.text("page.configure.add.app")
			});
		}
	});

exports.Page = _Page;