"use strict";

var globals = require('syracuse-tablet/html/js/helpers/globals');
var utils = require('syracuse-tablet/html/js/helpers/utils');
var Base = require('syracuse-tablet/html/js/pages/customizedDashboard').Page;
var locale = require('syracuse-tablet/html/js/helpers/locale');
var modalChooseApps = require('syracuse-tablet/html/js/ui/modals/modalChooseApps');
var dashboardWelcomeUtils = require('syracuse-tablet/html/js/helpers/dashboardWelcomeUtils');
var dashboardUtils = require('syracuse-tablet/html/js/helpers/dashboardUtils');

var _initConfigPage = false;

var _Page = utils.defineClass(

	function WelcomeDashboardPage($parent, state, prototype, article, options) {
		options = options || {};
		options.breadcrumbs = false;
		Base.call(this, $parent, state, prototype, article, options);
		this.vignettes = [];
	}, Base, {

		destroy: function() {
			Base.prototype.destroy.call(this);
		},
		beforeAddContent: function() {
			// We do not show a title on the welcome page
			//this.addTitle(this.prototype.data("$title"), this.prototype.data("$description"));
			this.$$elmt.addClass("s-m-page-welcome-background");
		},
		buildHtmlOption: function(loadOptions) {
			var self = this;
			return Base.prototype.buildHtmlOption.call(self, loadOptions)
				.then(function(opts) {
					return $.extend(true, {}, opts, {
						makeFullHeight: false,
						toolBars: {
							showAuthoring: false,
							showUserMenuLinks: true,
							showHome: false,
							showPageConfig: true,
							showDrafts: true,
							statusPinPage: 0
						}
					});
				});
		},
		afterRender: function(loadOptions, buildOpts) {
			var self = this;
			// This page is loaded synchronously - We need to wait until all vignettes has been loaded to continue
			// Needed by the restoreContext process (see application.notifUserLoggedIn)
			loadOptions.forceSynchroVignettes = true;
			return Base.prototype.afterRender.call(self, loadOptions, buildOpts).then(function() {});
		},
		afterChangePage: function() {
			Base.prototype.afterChangePage.call(this);
			globals.getApplication().gotoWelcomeApplication();
		},
		enabledConfig: function() {
			//this.tileList = welcomeApplication.getApplicationLists();
			Base.prototype.enabledConfig.call(this, {
				'addHiddenTileLabel': locale.text("page.configure.add.app")
			});
		},
		_actRemoveTile: function(vignetteId) {
			var self = this;
			var tile = self._getTileInfo(vignetteId);
			var layoutGroup = tile.ctrl.parent.parent;
			var idx = $.inArray(tile.ctrl.parent.article, layoutGroup.article.$items);
			if (idx >= 0) {
				layoutGroup.article.$items.splice(idx, 1);
			};
			self._saveDashboard().then(function() {
				self.afterChangePage();
			});
		},
		_applyTileChanges: function(tileInfo, tile) {
			var self = this;
			var article = tileInfo.ctrl.parent.article;
			article.$bgColor = tile.color || "darkgrey";
			article.$size = tile.size || "medium";
			globals.getMetaData().getDashboard(self.state.dashboardName)
				.then(function(dashboard) {
					dashboard.$article = self.article;
					dashboard.$gadgets[tileInfo.gadget.$uuid].$title = tile.title;
					dashboard.$gadgets[tileInfo.gadget.$uuid].icon = tile.icon;
					return dashboardWelcomeUtils.writeWelcomeDashboardUser(dashboard);
				})
				.then(function() {
					self.afterChangePage();
				});
		},
		_saveDashboard: function() {
			var self = this;
			return globals.getMetaData().getDashboard(self.state.dashboardName)
				.then(function(dashboard) {
					dashboard.$article = self.article;
					return dashboardWelcomeUtils.writeWelcomeDashboardUser(dashboard);
				});
		}
	});

exports.Page = _Page;