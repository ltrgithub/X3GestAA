"use strict";

var Base = require('syracuse-tablet/html/js/pages/sdata/pageSdata').Page;
var modules = require('syracuse-tablet/html/js/common/modules');
var articleParser = require("syracuse-tablet/html/js/controls/articleParser");
var SdataController = require("syracuse-tablet/html/js/controllers/sdataController").SdataController;
var utils = require('syracuse-tablet/html/js/helpers/utils');

/**
 * 
 */
exports.Page = utils.defineClass(
	function PageSdataChildPage(pageData, options) {
		this.options = options || {};
		this.parentController = modules.get("controller").findController(options.childContext.controllerId);
		pageData = this._createPageData(pageData);
		Base.call(this, pageData, options);
		this.actionAdapter.showPinPage = false;
	},
	Base, {
		destroy: function() {
			Base.prototype.destroy.call(this);
		},
		_createPageData: function(pageData) {
			var dataset = this.parentController.dataset;
			var childPageData = $.extend(true, {}, pageData);
			childPageData.dataset = dataset;
			childPageData.prototype = dataset.prototype;
			childPageData.page.$article = this._getArticle(dataset.prototype);
			return childPageData;
		},
		_getArticle: function(prototype) {
			return articleParser.createDefaultArticle(prototype);
		},
		_ensureController: function() {
			this.controller = new SdataController(this.pageData.dataset, this.parentController, this.isWorkingCopyDataUrl());
			// Will raise notifications or do confirmations
			this.controller.setUIAdapter(this);
		},
		// Child pages have no name, they get and save their article with the parent
		getAuthoringName: function() {
			return "$$child";
		},
		/**
		 * Returns the root page
		 */
		getRootPage: function() {
			return this.controller.root.uiAdapter;
		}
	}
);