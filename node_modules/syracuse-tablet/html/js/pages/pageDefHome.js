"use strict";
/**
 * Default Home page that is display if there's no current mobile application
 * User can select an application or logout
 */
var utils = require('syracuse-tablet/html/js/helpers/utils');
var log = require('syracuse-tablet/html/js/helpers/logger').getLogger("page");
var Base = require('syracuse-tablet/html/js/pages/page').Page;
var modal = require('syracuse-tablet/html/js/ui/modal');
var pageTemplates = require('syracuse-tablet/html/js/pages/pageTemplates');
var auth = require('syracuse-tablet/html/js/application/authentication');
var dispatcher = require('syracuse-tablet/html/js/sdata/sdataDispatcher');
var notifications = require('syracuse-tablet/html/js/helpers/notifications');

var _tmplCtx = {
	header: {
		"title": "Sage X3 Mobile Login Page",
		"logout": "logout",
		"settings": "settings"
	},
	content: {
		"title": "Home page",
		"listtitle": "Please select an application",
		"listcontent": ""
	}
};
var _Page = utils.defineClass(
	function($parent, state) {
		var self = this;
		Base.call(self, $parent, state);
	}, Base, {

		loadData: function() {
			var self = this;
			var deferred = $.Deferred();
			dispatcher.getAppList().always(function(ok, data) {
				if (ok) {
					self.appList = data || [];
					deferred.resolve(self.appList);
				} else {
					modal.info("Can't load applications list", function() {
						deferred.resolve([]);
					});
				}
			});
			return deferred.promise();
		},

		buildHtml: function(appList) {
			var self = this;
			var deferred = $.Deferred();
			try {
				var html = [];
				appList.forEach(function(x) {
					html.push('<li><a href="#" data-action="select" data-params="');
					html.push(x.$uuid);
					html.push('">');
					html.push(x.title || x.description);
					html.push('&nbsp;&nbsp;&nbsp;<span class="label label-primary">');
					html.push(x.applicationName);
					html.push('</span>');
					html.push('</a></li>');
				});
				_tmplCtx.content.listcontent = html.join('');
				pageTemplates.getTemplate(self.state, _tmplCtx.header, _tmplCtx.content).always(function(result) {
					deferred.resolve(result);
				});
			} catch (e) {
				pageTemplates.resolveError(deferred, self.state.name, e);
			} finally {
				return deferred.promise();
			}
		},

		_actSelect: function(uuid) {
			var self = this,
				info;
			self.appList.some(function(x) {
				if (x.$uuid === uuid) {
					info = x;
					return true;
				}
			});
			dispatcher.getAppDetail(info).always(function(ok, data) {
				if (ok) {
					notifications.publish("sm.switch.app", data);
				} else {
					modal.info("Can't load application", data);
				}
			});
		}

	});

exports.Page = _Page;