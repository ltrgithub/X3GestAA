"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var reqLocale = require('syracuse-tablet/html/js/helpers/locale');
var Base = require('syracuse-tablet/html/js/pages/html/pageHtml').Page;
var pageTemplates = require('syracuse-tablet/html/js/pages/html/pageTemplates');
var auth = require('syracuse-tablet/html/js/application/authentication');
var sdataCommonRes = require('syracuse-tablet/html/js/sdata/sdataCommonResources');
var notifications = require('syracuse-tablet/html/js/helpers/notifications');
var uiutils = require('syracuse-tablet/html/js/ui/uiUtils');

var _tmplCtx = {
	header: {
		"pageId": "login",
		"headerttl": "Sage X3 Mobile Login Page",
		"forgotpwd": "Forgot password",
		"email": "administrator.sage.com"
	},
	content: {
		"label_user": "User name",
		"placeholder_user": "Enter some text",
		"label_password": "Password",
		"placeholder_password": "Enter some text",
		"act_login": "Login",
		"label_lang": "Language",
		"title": "Login page"
	}
};
var lang;
var _Page = utils.defineClass(
	function($parent, state) {
		var self = this;
		Base.call(self, $parent, state);
	}, Base, {

		buildHtml: function(parent) {
			Base.prototype.buildHtmlTpl.call(this, _tmplCtx.content, _tmplCtx.header);
		},

		buildHtmlContent: function() {
			var self = this;
			var deferred = $.Deferred();
			try {
				sdataCommonRes.queryLocalePreferences().then(function(locales) {
					var html = [];
					(locales || []).forEach(function(locale) {
						html.push('<option value="' + locale.code + '"');
						if (reqLocale.isCurrent(locale.code)) {
							html.push(' selected');
						}
						html.push('>');
						html.push(locale.description);
						html.push('</option>');
					});
					_tmplCtx.content.locales = html.join('\n');
					_tmplCtx.content.reason = self.getProp("reason") || "";
					Base.prototype.buildHtmlContent.call(self, _tmplCtx.content).then(function(content) {
						deferred.resolve(content);
					}, function(e) {
						pageTemplates.resolveError(deferred, self.state.name, e);
					});
				}, function(e) {
					pageTemplates.resolveError(deferred, self.state.name, e);
				});
			} catch (e) {
				pageTemplates.resolveError(deferred, self.state.name, e);
			} finally {
				return deferred.promise();
			}
		},

		_actLogin: function() {
			var self = this;
			uiutils.waitStart();
			var success = self.$elmt.find("#login-success").hide();
			var fail = self.$elmt.find("#login-fail").hide();
			var usr = self.$elmt.find("#login-user").val();
			var pwd = self.$elmt.find("#login-password").val();
			var locale = self.$elmt.find("#login-locale").val();

			// TODO: Locale needs to be sent to server to get messages etc. in correct language
			auth.login(usr, pwd)
				.then(function(ok, userProfile, message) {
					if (ok) {
						return $.smResolve({
							userProfile: userProfile,
							locale: locale
						});
					} else {
						return $.smReject(message);
					}
				})
				.then(function(data) {
					return reqLocale.setLocale(data.locale, data.userProfile && data.userProfile.selectedLocale)
						.then(function() {
							return data;
						}, function(e) {
							return "Error setting locale";
						});
				})
				.then(function(data) {
					notifications.publish("sm.login", data.userProfile);
					uiutils.waitStop();
				}, function(message) {
					fail.show().html("Login failed<p>" + message + "</p>");
					uiutils.waitStop();
				});
		}
	});

exports.Page = _Page;