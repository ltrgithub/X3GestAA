"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var Base = require('syracuse-tablet/html/js/pages/page').Page;
var auth = require('syracuse-tablet/html/js/application/authentication');
var notifications = require('syracuse-tablet/html/js/helpers/notifications');

var _pageContext = {
	"label_user": "User name",
	"value_user": "Enter some text",
	"label_password": "Password",
	"value_password": "Enter some text",
	"title": "Login page",
	"act_login": "Login"
};

var _pageTemplate = '\
	<div class="container">\
		<div class="row">\
			<div class="col-md-3"></div>\
			<div class="col-md-6">\
				<div class="well">\
					<div class="form-group">\
						<label>{{label_user}}</label>\
						<input type="text" value="" class="form-control" placeholder="{{label_user}}"	id="login-user">\
					</div>\
					<div class="form-group">\
						<label>{{label_password}}</label>\
						<input type="password" class="form-control" placeholder="{{label_password}}" id="login-password">\
					</div>\
					<button id="login-login" data-action="login" type="button" class="btn btn-primary">{{act_login}}</button>\
				</div>\
			</div>\
		</div>\
		<div class="row">\
			<div class="col-md-3"></div>\
			<div class="col-md-6">\
				<div id="login-success" style="display: none" class="alert alert-success" role="alert"></div>\
				<div id="login-fail" style="display: none" class="alert alert-danger" role="alert"></div>\
			</div>\
		</div>\
	</div>';

var lang;
var _Page = utils.defineClass(
	function($parent, state) {
		var self = this;
		Base.call(self, $parent, state);
	}, Base, {
		loadStructure: function() {
			return $.smResolve();
		},

		render: function() {
			var self = this;
			var deferred = $.Deferred();
			_pageContext.reason = self.getProp("reason") || "";

			var template = Handlebars.compile(_pageTemplate);
			var html = template(_pageContext);
			var cc = self.$$contentElmt;
			cc.html(html);
			deferred.resolve();
			return deferred.promise();
		},

		_actLogin: function() {
			var self = this;
			var deferred = $.Deferred();
			var askDlog = false;
			try {
				var $$success = self.$$elmt.find("#login-success").hide();
				var $$fail = self.$$elmt.find("#login-fail").hide();
				var usr = self.$$elmt.find("#login-user").val();
				var pwd = self.$$elmt.find("#login-password").val();
				var locale = self.$$elmt.find("#login-locale").val();
				var userProfile = null;
				self.waitWheelStart();
				// TODO: Locale needs to be sent to server to get messages etc. in correct language
				auth.login(usr, pwd)
					.then(function(ok, syraUsrProfile, message) {
						if (ok) {
							userProfile = syraUsrProfile;
							return $.smResolve();
						} else {
							return $.smReject(message);
						}
					})
					.then(function() {
						self.waitWheelStop();
						notifications.publish("sm.login", userProfile);
					}, function(e) {
						var stack, message;
						if (utils.isError(e)) {
							message = e.message;
							stack = utils.cleanStack(e.stack, 3, true);
						} else {
							message = e;
						}
						$$fail.show().html("Login failed<p>" + message + "</p>" + (stack ? stack : ""));
						self.waitWheelStop();
					});
			} catch (e) {
				deferred.reject(e);
			} finally {
				return deferred.promise();
			}
		}
	});

exports.Page = _Page;