"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var Base = require('syracuse-tablet/html/js/pages/page').Page;
var pageTemplates = require('syracuse-tablet/html/js/pages/pageTemplates');

/**
 * Temporarily HTML page
 * 		All pages should be generated based on $article and $prototype
 */
var _Page = utils.defineClass(
	function($parent, state) {
		var self = this;
		Base.call(self, $parent, state);
	}, Base, {

		/**
		 * No article an proto
		 */
		loadStructure: function() {
			return $.Deferred(function() {
				this.resolve();
			}).promise();
		},

		render: function() {
			this.buildHtml();
		},

		buildHtmlTpl: function(contentCtx, headerCtx) {
			var deferred = $.Deferred();
			var self = this;
			try {
				self.buildHtmlContent(contentCtx)
					.then(function(html) {
						var cc = self.$elmt.is("section") ? self.$elmt : self.$elmt.children("section");
						cc.html(html);
					})
					.then(function() {
						return self.buildHtmlHeader(headerCtx);
					})
					.then(function(html) {
						self.$elmt.children("header").html(html);
					})
					.then(function() {
						deferred.resolve();
					}, function(e) {
						deferred.reject(e);
					});
			} catch (e) {
				deferred.reject(e);
			} finally {
				return deferred.promise();
			}
		},

		buildHtmlContent: function(ctxContent) {
			var self = this;
			return pageTemplates.getTemplateContent(self.state, ctxContent || {});
		},

		buildHtmlHeader: function(ctxHeader) {
			var self = this;
			return pageTemplates.getTemplateHeader(self.state, ctxHeader || {});
		}
	});

exports.Page = _Page;