"use strict";
/**
 * Default Home page that is display if there's no current mobile application
 * User can select an application or logout
 */
var utils = require('syracuse-tablet/html/js/helpers/utils');
var globals = require('syracuse-tablet/html/js/helpers/globals');
var Base = require('syracuse-tablet/html/js/pages/html/pageHtml').Page;
var modal = require('syracuse-tablet/html/js/ui/modal');
var notifications = require('syracuse-tablet/html/js/helpers/notifications');
var settings = require('syracuse-tablet/html/js/application/settings');
var pageTemplates = require('syracuse-tablet/html/js/pages/html/pageTemplates');

var _tmplCtx = {
	header: {
		"title": "Sage X3 Mobile Home Page",
	},
	content: {
		"btnendpoint": "Change endpoint",
		"title": "Home page",
		"listtitle": "Please select an application",
		"labelendpoint": "Default endpoint is ",
		"listcontent": ""
	}
};
var _Page = utils.defineClass(
	function($parent, state) {
		var self = this;
		Base.call(self, $parent, state);
	}, Base, {

		loadData: function() {
			var self = this;
			var deferred = $.Deferred();
			settings.getMyApplications().then(function(data) {
				self.appList = data || [];
				deferred.resolve();
			}, function(e) {
				deferred.reject(e);
			});
			return deferred.promise();
		},

		buildHtml: function() {
			var self = this;
			var html = [];
			if (self.appList) {
				self.appList.forEach(function(x) {
					html.push('<li><a href="#" data-action="select" data-params="');
					html.push(x.$uuid);
					html.push('">');
					html.push(x.title || x.description);
					html.push('&nbsp;&nbsp;&nbsp;<span class="label label-primary">');
					html.push(x.applicationName);
					html.push('</span>');
					html.push('</a></li>');
				});
			}
			var ctxContent = $.extend({}, _tmplCtx.content);
			ctxContent.listcontent = html.join('');
			ctxContent.endpoint = globals.getEndpoint() || "No endpoint defined";

			var up = globals.getUserProfile();
			_tmplCtx.header.user = up && up.user && ((up.user.firstName ? up.user.firstName + " " : "") + up.user.lastName) || "unknown";


			return Base.prototype.buildHtmlTpl.call(this, ctxContent, _tmplCtx.header);
		},

		_actSelect: function(uuid) {
			var self = this;
			self.waitWheelStart();
			var info;
			self.appList.some(function(x) {
				if (x.$uuid === uuid) {
					info = x;
					return true;
				}
			});
			settings.getMyApplicationDetail(info).then(function(data) {
				self.deactivate(null);
				notifications.publish("sm.switch.app", data);
				self.waitWheelStop();
			}, function(e) {
				self.waitWheelStop();
				modal.error("Error loading application", e);
			});
		}
	});

exports.Page = _Page;