"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var globals = require('syracuse-tablet/html/js/helpers/globals');
var notifications = require('syracuse-tablet/html/js/helpers/notifications');
var Base = require('syracuse-tablet/html/js/pages/pageRegular').Page;

/**
 * Child page that displays row detail in edit and details mode
 */
var _Page = utils.defineClass(
	function($parent, state, prototype, article) {
		var self = this;
		Base.call(self, $parent, state, prototype, article);
		self.parentDao = null;
	}, Base, {

		addPanel: function(panelId) {
			if (panelId == "footer" || panelId == "rightpanel" || panelId == "leftpanel") return null;
			return Base.prototype.addPanel.call(this, panelId);
		},

		destroy: function() {
			var self = this;
			Base.prototype.destroy.call(self);
		},
		/**
		 * Override activate to read the row dao from parent page
		 */
		activate: function(currentPage, cb) {
			var self = this;
			if (!currentPage || currentPage.id !== self.state.options.parentId) throw new Error("Unexpected parent page");
			Base.prototype.activate.call(self, currentPage, cb);
		},

		refresh: function(options, callBackInterface) {
			var self = this;
			throw new Error("Not implemented");
		},
		/**
		 * Load the page
		 * options.parentPage:		parentPage when we load a rowdetail page
		 */
		load: function(options) {
			var self = this;
			var parentPage = options ? options.parentPage : null;
			if (!parentPage) throw new Error("rowdetail page - Unexpected empty parent page");
			// We get the row DAO - !! Do not store parentPage
			var ctrl = parentPage.getControl(self.state.options.controlId);
			if (!ctrl) throw new Error("rowdetail page - Array datasource not found");
			self.rowDao = ctrl.getRowDetailDao(self.state.options.dataParams);
			if (!self.rowDao) throw new Error("rowdetail page - Row data not found");
			return Base.prototype.load.call(self, options);
		},

		loadData: function(options) {
			var self = this;
			this.setDao(self.rowDao);
			return $.smResolve();
		},

		/**
		 * Validation in edit mode
		 */
		_actValidate: function(rowId) {
			var self = this;
			//self.goBack();
		},
		/**
		 * getParentNotif method is called by pageLoader to notify parent page if dao has been modified
		 */
		getParentNotif: function() {
			return null;
			//			{
			//				parentId: this.state.options.parentId,
			//				controlId: this.state.options.controlId,
			//				notifId: "sm.lookup.selection",
			//				notifData: this.selectedRow
			//			};
		},

	});

exports.Page = _Page;