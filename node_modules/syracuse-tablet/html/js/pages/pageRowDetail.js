"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var globals = require('syracuse-tablet/html/js/helpers/globals');
var Base = require('syracuse-tablet/html/js/pages/pageRegular').Page;
var sdataUtils = require('syracuse-tablet/html/js/sdata/sdataUtils');

/**
 * Child page that displays row detail in edit and details mode
 */
var _Page = utils.defineClass(
	function($parent, state, prototype, article, parentPage) {
		this.parentPage = parentPage;
		if (!this.parentPage) throw new Error("rowdetail page - Unexpected empty parent page");
		this.rowDao = null;
		/** Set parentpage before **/
		Base.call(this, $parent, state, prototype, article);
		// Activity and facet - This page has no url
		this.$activity = this.parentPage.$activity;
	}, Base, {

		_initSdataInfo: function(sdataUrl, sdataMethod) {
			// nothing no sdataUrl
		},

		addPanel: function(panelId) {
			if (panelId === "rightpanel" || panelId === "leftpanel") return null;
			// We need the footer even in details to display the delete action
			return Base.prototype.addPanel.call(this, panelId);
		},

		destroy: function() {
			Base.prototype.destroy.call(this);
			if (this.rowDao) {
				this.rowDao.destroy();
				this.rowDao = null;
			}
			this.parentPage = null;
		},

		isEditMode: function() {
			return this.parentPage && this.parentPage.isEditMode();
		},
		/**
		 *  Modify title for dvlp tests
		 */
		buildHtmlOption: function() {
			var opts = Base.prototype.buildHtmlOption.call(this);
			opts.header.title = "Row detail page";
			return opts;
		},
		/**
		 * this.state.options.dataParams is an object that gives:
		 * 	rowId:	id of the row - empty if creation
		 *  activity:	"create/edit/detail" if it's a creation
		 */
		loadData: function() {
			// We get the row DAO - !!! Do not store parentPage
			var ctrl = this.parentPage.getControl(this.state.options.controlId);
			if (!ctrl) throw new Error("rowdetail page - Array datasource not found");
			// Dao of the row to display - dao is calculated by the array when user click on action 'rosDetail'
			var rowDao = ctrl.rowDetailGetDao();
			if (!rowDao) throw new Error("rowdetail page - Row data not found");
			this.setDao(rowDao);
			return $.smResolve();
		},
		/**
		 * Process action
		 */
		notifActionLink: function(success, link, result, options) {
			try {
				switch (link.name) {
					case "$save":
						this._doActSave(success, link, options);
						break;
					case "$delete":
						this._doActDelete(success, link, options);
						break;
					default:
						sdataUtils.displayActionMsg(success, link.name);
						break;
				}
			} catch (e) {
				globals.getModal().error("notifActionLink failed", e);
			}
		},
		_doActSave: function(success, link, responseJSON, options) {
			alert("TODO - _doActSave");
		},
		_doActDelete: function(success, link, responseJSON, options) {
			alert("TODO - _doActDelete");
		},
		/**
		 * getParentNotif method is called by pageLoader to notify parent page if dao has been modified
		 */
		getParentNotif: function() {
			return null;
			//			{
			//				parentId: this.state.options.parentId,
			//				controlId: this.state.options.controlId,
			//				notifId: "sm.lookup.selection",
			//				notifData: this.selectedRow
			//			};
		},

	});

exports.Page = _Page;