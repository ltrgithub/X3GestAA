"use strict";
var utils = require("syracuse-tablet/html/js/helpers/utils");

function Layout() {}


//TODO improve by making recursive call with return of Layout object
exports.Layout = utils.defineClass(Layout, null, {
	buildLayout: function($article) {
		return this.createLayout($article.$layout);
	},
	createItem: function($item, layoutParent) {
		var self = this;
		if ($item.$bind) {
			var widgetDom = document.createElement("div");
			widgetDom.className = "sm-widget thumbnail";
			var sampleValue = document.createElement("div");
			sampleValue.textContent = $item.$bind;
			widgetDom.appendChild(sampleValue);
			return widgetDom;
		}

		if ($item.$layoutType) {
			return self.createLayout($item, layoutParent);
		}

		if ($item.$layout) {
			return self.createLayout($item, layoutParent);
		}
	},
	createLayout: function($layout, layoutParent) {
		var self = this;

		var $layoutType = $layout.$layoutType || "stack";

		var layoutSlot = document.createElement("div");
		layoutSlot.className = "sm-layout-slot";

		var layoutHeader = document.createElement("header");
		layoutHeader.className = "sm-layout-header";
		layoutSlot.appendChild(layoutHeader);

		var layoutCore = document.createElement("div");
		layoutCore.className = "sm-layout-core " + $layoutType;
		layoutSlot.appendChild(layoutCore);

		if ($layoutType == "tabs") {
			var navTabsSlot = document.createElement("div");
			navTabsSlot.className = "sm-nav-tabs-slot";
			layoutHeader.appendChild(navTabsSlot);

			var navTabs = document.createElement("ul");
			navTabs.className = "nav nav-tabs";
			navTabs.setAttribute("role", "tablist");

			navTabsSlot.appendChild(navTabs);
			var isTabLayout = true;
		}

		if (($layout.$category) && ($layout.$title)) {
			if ($layout.isTabSection) {
				//debugger;
				var navBar = layoutParent.firstChild.firstChild.firstChild;
				var navListItem = document.createElement("li");
				navListItem.className = navBar.children.length == 0 ? "active" : "";

				var navItem = document.createElement("a");
				navItem.className = "sm-tab";
				navItem.setAttribute("href", "#");
				navItem.textContent = $layout.$title;
				navListItem.appendChild(navItem);

				navBar.appendChild(navListItem);
			} else {
				layoutHeader.textContent = $layout.$title;
			}
		}

		if ($layout.$layout) {
			layoutCore.appendChild(self.createLayout($layout.$layout, layoutSlot));
		} else if ($layout.$items) {

			if ($layoutType == "row") {
				utils.toggleClass(layoutCore, "row", true);
				if (!$layout.$widthsDesktop && !$layout.$widthsTablet && !$layout.$widthsMobile) {
					throw new Error("Columns widths not specified");
				}

				// desktop only for test purpose
				var $widthsDesktop = $layout.$widthsDesktop.split(",");

				var isRowLayout = true;
			}

			for (var ii = 0, jj = $layout.$items.length; ii < jj; ii++) {

				var coreItem = document.createElement("div");
				coreItem.className = "sm-coreitem-slot" + " sm-" + $layoutType;
				if (isRowLayout) {
					utils.toggleClass(coreItem, "col-md-" + $widthsDesktop[ii],
						true);
				}
				if (isTabLayout) {
					$layout.$items[ii].isTabSection = true;
				}
				var item = self.createItem($layout.$items[ii], layoutSlot);
				if (item == null) {
					// debugger;
				}
				coreItem.appendChild(item);
				coreItem.style.display = isTabLayout && ii != 0 ? "none" : "";
				layoutCore.appendChild(coreItem);
			}
		}

		return layoutSlot;
	}
});