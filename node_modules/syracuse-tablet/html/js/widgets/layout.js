"use strict";
var utils = require("syracuse-tablet/html/js/helpers/utils");
var uiutils = require("syracuse-tablet/html/js/ui/utils");

function Layout() {}

exports.Layout = utils.defineClass(Layout, null, {
	buildLayout: function($article) {
		return this.createLayout($article.$layout);
	},
	createItem: function($item) {
		var self = this;
		if ($item.$bind) {
			var widgetDom = document.createElement("div");
			widgetDom.className = "sm-widget thumbnail";
			var sampleValue = document.createElement("div");
			sampleValue.textContent = $item.$bind;
			widgetDom.appendChild(sampleValue);
			return widgetDom;
		}

		if ($item.$layoutType) {
			return self.createLayout($item);
		}

		if ($item.$layout) {
			return self.createLayout($item);
		}

		/*
		if ($item.$items) {
			for (var ii = 0, jj = $item.$items.length; ii < jj; ii++) {
				return self.createItem($item.$items[ii]);
			}
		}*/
	},
	createLayout: function($layout, $category, $title) {
		var self = this;

		var layoutSlot = document.createElement("div");
		layoutSlot.className = "sm-layout-slot";

		var layoutHeader = document.createElement("header");
		layoutHeader.className = "sm-layout-header";
		layoutSlot.appendChild(layoutHeader);

		var layoutCore = document.createElement("div");
		layoutCore.className = "sm-layout-core";
		layoutSlot.appendChild(layoutCore);

		if (($category || $layout.$category) && ($title || $layout.$title)) {
			layoutHeader.textContent = $title || $layout.$title;
		}

		var $layoutType = $layout.$layoutType || "stack";

		if ($layout.$layout) {
			layoutCore.appendChild(self.createLayout($layout.$layout, $layout.$layout.$category, $layout.$layout.$title));
		} else if ($layout.$items) {

			if ($layoutType == "row") {
				uiutils.toggleClass(layoutCore, "row", true);
				if (!$layout.$widthsDesktop && !$layout.$widthsTablet && !$layout.$widthsMobile) {
					throw new Error("Columns widths not specified");
				}

				// desktop only for test purpose
				var $widthsDesktop = $layout.$widthsDesktop.split(",");

				var isRowLayout = true;
			}

			for (var ii = 0, jj = $layout.$items.length; ii < jj; ii++) {

				var coreItem = document.createElement("div");
				if (isRowLayout) {
					uiutils.toggleClass(coreItem, "col-md-" + $widthsDesktop[ii],
						true);
				}
				var item = self.createItem($layout.$items[ii]);
				if (item == null) {
					//debugger;
				}
				coreItem.appendChild(item);
				layoutCore.appendChild(coreItem);
			}
		}

		return layoutSlot;
	}
});