"use strict";

/**
 * Session storage
 * 	Uses windows session storage or local hash map if not available
 */

var utils = require('syracuse-tablet/html/js/helpers/utils');
var log = require('syracuse-tablet/html/js/helpers/logger').getLogger("sessstorage");

var _available = null;
var _backupMap = {};

var _isAvailable = function() {
	if (_available !== null) {
		return _available;
	}
	_available = false;
	try {
		window.sessionStorage.setItem("__test_availability_session__", "__test_availability_session__");
		_available = true;
	} catch (e) {}
	return _available;
};

var _getItem = function(key) {
	if (!_isAvailable()) {
		log && log("session.fallback.getItem(" + key + "):" + val);
		return _backupMap[key];
	}
	var val = window.sessionStorage.getItem(key);
	log && log("session.getItem(" + key + "):" + val);
	return val;
};

var _setItem = function(key, value) {
	if (!_isAvailable()) {
		log && log("session.fallback.setItem(" + key + "):" + value);
		_backupMap[key] = value;
		return;
	}
	log && log("session.setItem(" + key + "):" + value);
	return window.sessionStorage.setItem(key, value);
};

var _removeItem = function(key) {
	if (!_isAvailable()) {
		log && log("session.fallback.removeItem(" + key + ")");
		delete _backupMap[key];
		return;
	}
	log && log("session.removeItem(" + key + ")");
	return window.sessionStorage.removeItem(key);
};

exports.removeItem = _removeItem;
exports.setItem = _setItem;
exports.getItem = _getItem;