"use strict";


var log = require('syracuse-tablet/html/js/helpers/logger').getLogger("storage", false);

/*
 * Storage module (Selects implementation depending on what's available in the current browser
 */

var storageInterface = require('syracuse-tablet/html/js/storage/storageInterface');
var _modules = {
	"webSQL": require('syracuse-tablet/html/js/storage/storageWebSQL'),
	"indexedDB": require('syracuse-tablet/html/js/storage/storageIndexedDB')
};
var _impls = [
	//"webSQL",
	"indexedDB"
];

var _storageImpl;

// Choose the first supported storage engine
// #8136 noFail used in main error handler 
function _getStorageImpl(noFail) {
	if (_storageImpl) {
		return _storageImpl;
	}

	_impls.some(function(impl) {
		impl = _modules[impl];
		if (impl.isAvailable()) {
			var ctor = impl.getStorageInterface();
			_storageImpl = new ctor();
			return true;
		}
		return false;
	});

	if (_storageImpl == null && noFail !== true) {
		throw new Error("No storage interface (indexedDB or WebSQL) has been found");
	}

	return _storageImpl;
}

exports.getStorage = _getStorageImpl;
exports.StatusCodes = storageInterface.StatusCodes;
exports.init = function(supportedDB) {
	if (supportedDB == null) {
		// Regular process
		_getStorageImpl();
	} else {
		log && log("Force supported DB=" + supportedDB);
		// Force supportedDB
		var impl = _modules[supportedDB];
		if (impl && impl.isAvailable()) {
			var ctor = impl.getStorageInterface();
			_storageImpl = new ctor();
		} else {
			throw new Error("Storage interface (" + supportedDB + ") is not supported");
		}
	}

	log && log("DATABASE=" + _storageImpl.infoString);
	return _storageImpl.init();
};