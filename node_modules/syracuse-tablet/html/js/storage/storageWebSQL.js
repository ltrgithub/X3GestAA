"use strict";

/*
 * WebSQL storage interface (Chrome, Safari)
 */

var utils = require('syracuse-tablet/html/js/helpers/utils');
var storageInterface = require('syracuse-tablet/html/js/storage/storageInterface');

function _StorageInterfaceWebSQL() {
	this.infoString = "WebSQL storage interface";
};

var _storageInterfaceWebSQLClass = utils.defineClass(
	_StorageInterfaceWebSQL,
	storageInterface.StorageInterface, {
		init: function(cb, useTestDatabase) {
			var deferred = $.Deferred();
			try {
				deferred.resolve();
			} catch (e) {
				deferred.reject();
			} finally {
				return deferred.promise();
			}
		},

		/*==================================
         * App management
         ==================================*/
		queryAppConfigs: function() {
			var deferred = $.Deferred();
			deferred.reject("WEBSQL queryAppConfigs not implemented");
			return deferred.promise();
		},

		//was: installApp
		createAppConfig: function(data) {
			var deferred = $.Deferred();
			deferred.reject("WEBSQL createAppConfig not implemented");
			return deferred.promise();
		},

		//getAppConfig
		readAppConfig: function(appid) {
			var deferred = $.Deferred();
			deferred.reject("WEBSQL readAppConfig not implemented");
			return deferred.promise();
		},

		// was: removeFromDB
		deleteAppConfig: function(id) {
			var deferred = $.Deferred();
			deferred.reject("WEBSQL deleteAppConfig not implemented");
			return deferred.promise();
		},

	}
);

exports.StorageInterface = _storageInterfaceWebSQLClass;
exports.isAvailable = function() {
	return (window.openDatabase != null);
};