"use strict";

var clientContract = require('syracuse-tablet/html/js/sdata/entities/clientContract');

var _example = require('syracuse-tablet/html/js/sdata/entities/test/example');
var _exampleHubLayout = require('syracuse-tablet/html/js/sdata/entities/test/exampleHubLayout');
var _testDatatypes = require('syracuse-tablet/html/js/sdata/entities/test/testDatatypes');
var _testFormats = require('syracuse-tablet/html/js/sdata/entities/test/testFormats');
var _testFormatsReference = require('syracuse-tablet/html/js/sdata/entities/test/testFormatsReference');
var _testCharts = require('syracuse-tablet/html/js/sdata/entities/test/testCharts');
var _testConstraints = require('syracuse-tablet/html/js/sdata/entities/test/testConstraints');
var _testNavigateTo = require('syracuse-tablet/html/js/sdata/entities/test/testNavigateTo');
var _testNavigateToChild = require('syracuse-tablet/html/js/sdata/entities/test/testNavigateToChild');
var _testPropertyHideShow = require('syracuse-tablet/html/js/sdata/entities/test/testPropertyHideShow');
var _testGaugeChart = require('syracuse-tablet/html/js/sdata/entities/test/testGaugeChart');

var _testHomeDashboard = require('syracuse-tablet/html/js/sdata/entities/test/testHomeDashboard');
var _testLayoutsDashboard = require('syracuse-tablet/html/js/sdata/entities/test/testLayoutsDashboard');
var _testTypesDashboard = require('syracuse-tablet/html/js/sdata/entities/test/testTypesDashboard');
//var _testTypesDashboard2 = require('syracuse-tablet/html/js/sdata/entities/test/testTypesDashboard2');
var _testFormatsDashboard = require('syracuse-tablet/html/js/sdata/entities/test/testFormatsDashboard');
var _testGX3APPDashboard = require('syracuse-tablet/html/js/sdata/entities/test/testGX3APPDashboard');
var _testSUPERVDashboard = require('syracuse-tablet/html/js/sdata/entities/test/testSUPERVDashboard');
var _testChartsDashboard = require('syracuse-tablet/html/js/sdata/entities/test/testChartsDashboard');
var _testSUPERVDashboard2 = require('syracuse-tablet/html/js/sdata/entities/test/testSUPERVDashboard2');
var _testGX3APPDashboard2 = require('syracuse-tablet/html/js/sdata/entities/test/testGX3APPDashboard2');
var _testConstraintsDashboard = require('syracuse-tablet/html/js/sdata/entities/test/testConstraintsDashboard');
var _testNavigateToDashboard = require('syracuse-tablet/html/js/sdata/entities/test/testNavigateToDashboard');
var _testPropertyHideShowDashboard = require('syracuse-tablet/html/js/sdata/entities/test/testPropertyHideShowDashboard');
var _testAQTACTNPDashboard = require('syracuse-tablet/html/js/sdata/entities/test/testAQTACTNPDashboard');
var _testSyDevDashboard = require('syracuse-tablet/html/js/sdata/entities/test/testSyDevDashboard');
var _testGridDashboard = require('syracuse-tablet/html/js/sdata/entities/test/testGridDashboard');
var _testDefaultAQTCRUDM = require('syracuse-tablet/html/js/sdata/entities/test/testSUPERVAQTCRUDMDashboard');
var _testDefaultAQMCRUDM = require('syracuse-tablet/html/js/sdata/entities/test/testSUPERVAQMCRUDMDashboard');
var _testDefaultAQMFIELDSM = require('syracuse-tablet/html/js/sdata/entities/test/testSUPERVAQMTABLEMDashboard');
var _testDefaultAQMSEARCHM = require('syracuse-tablet/html/js/sdata/entities/test/testSUPERVAQMSEARCHMDashboard');

var _testGaugeChartDashboard = require('syracuse-tablet/html/js/sdata/entities/test/testGaugeChartDashboard');

var _testApplication = {
	"$application": {
		"$uuid": "clientTestApplication",

		"applicationName": "clientTestApplication",
		"title": "Client test application",
		"description": "Application for testing client features without server dependencies",
		"iconName": "th",

		"$homeDashboard": {
			"$uuid": "testHomeDashboard",
			"dashboardName": "testHomeDashboard"
		},
	},
	"$dashboards": {},
	"$gadgets": {},
	"$pages": {
		/*
		 * Example on how to define a default article for an X3 representation
		 * that is used in a client side defined application
		 */
		"x3.erp.SUPERV.AQMCRUDM.$details": {
			"$page": {
				"$article": {
					"$layoutType": "stack",
					"$items": [{
						"$bind": "CODE"
					}, {
						"$bind": "PBLOB"
					}, {
						"$bind": "CODECHR"
					}, {
						"$bind": "WCUR_REF"
					}, {
						"$bind": "FLGTEST"
					}, {
						"$bind": "WMENU"
					}, {
						"$bind": "SIMUL1"
					}, {
						"$bind": "PCLOB"
					}, {
						"$bind": "TEXTAXX"
					}, {
						"$bind": "TEXTE"
					}, {
						"$bind": "TPOSIF"
					}, {
						"$bind": "CUR_REF"
					}, {
						"$bind": "SITE_REF"
					}, {
						"$bind": "TDCB2"
					}, {
						"$bind": "TDCB3",
						"$gauge": {}
					}, {
						"$bind": "TDCB"
					}, {
						"$bind": "TDATE"
					}, {
						"$bind": "UNIT_REF"
					}, {
						"$bind": "CRY_REF"
					}, {
						"$bind": "TEL"
					}, {
						"$bind": "EMAIL"
					}, {
						"$bind": "TEXTPLAIN"
					}, {
						"$bind": "TEXTHTML"
					}, {
						"$bind": "TEXTRTF"
					}, {
						"$bind": "CREUSR_REF"
					}, {
						"$bind": "UPDUSR_REF"
					}, {
						"$bind": "ADEVCOLREF1"
					}, {
						"$bind": "ADEVCOLREF2"
					}, {
						"$bind": "ADEVCTINT"
					}, {
						"$bind": "ADEVADEVICEL"
					}]
				}
			}
		}
	}
};

function _addToApp(app) {
	if (app.gadgets) {
		Object.keys(app.gadgets).forEach(function(key) {
			if (_testApplication.$gadgets[key]) {
				console.log("Duplicate gadget name: " + key);
			}
			_testApplication.$gadgets[key] = app.gadgets[key];
		});
	}
	if (app.dashboards) {
		Object.keys(app.dashboards).forEach(function(key) {
			if (_testApplication.$dashboards[key]) {
				console.log("Duplicate dashboard name: " + key);
			}
			_testApplication.$dashboards[key] = app.dashboards[key];
		});
	}
}

exports.register = function() {
	clientContract.registerEntity(_example.entity);
	clientContract.registerEntity(_exampleHubLayout.entity);

	clientContract.registerEntity(_testDatatypes.entity);
	clientContract.registerEntity(_testFormats.entity);
	clientContract.registerEntity(_testFormatsReference.entity);
	clientContract.registerEntity(_testCharts.entity);
	clientContract.registerEntity(_testConstraints.entity);
	clientContract.registerEntity(_testNavigateTo.entity);
	clientContract.registerEntity(_testNavigateToChild.entity);
	clientContract.registerEntity(_testPropertyHideShow.entity);
	clientContract.registerEntity(_testGaugeChart.entity);

	_addToApp(_testHomeDashboard);
	_addToApp(_testLayoutsDashboard);
	_addToApp(_testTypesDashboard);
	//	_addToApp(_testTypesDashboard2);
	_addToApp(_testFormatsDashboard);
	_addToApp(_testGX3APPDashboard);
	_addToApp(_testSUPERVDashboard);
	_addToApp(_testChartsDashboard);
	_addToApp(_testSUPERVDashboard2);
	_addToApp(_testGX3APPDashboard2);
	_addToApp(_testConstraintsDashboard);
	_addToApp(_testNavigateToDashboard);
	_addToApp(_testPropertyHideShowDashboard);
	_addToApp(_testAQTACTNPDashboard);
	_addToApp(_testSyDevDashboard);
	_addToApp(_testGaugeChartDashboard);
	_addToApp(_testGridDashboard);
	_addToApp(_testDefaultAQTCRUDM);
	_addToApp(_testDefaultAQMCRUDM);
	_addToApp(_testDefaultAQMFIELDSM);
	_addToApp(_testDefaultAQMSEARCHM);

	clientContract.registerApp(_testApplication);
};