"use strict";

var globals = require('syracuse-tablet/html/js/helpers/globals');
var utils = require('syracuse-tablet/html/js/helpers/utils');

var _apps = {};
var _entities = {};

exports.getApps = function() {
	var apps = [];
	Object.keys(_apps).forEach(function(key) {
		var app = _apps[key];
		apps.push(app.$application);
	});
	return apps;
};

exports.getAppDetail = function(applicationName) {
	return _apps[applicationName];
};

exports.registerApp = function(app) {
	_apps[app.$application.applicationName] = app;
};

exports.registerEntity = function(entity) {
	_entities[entity.$entityName] = entity;
};

exports.getPageInfo = function(name, options) {
	var repr = name.split(".");
	var ent = _entities[repr[0]];
	if (!ent) {
		return null;
	}

	var state = {
		home: false,
		type: "regular",
		cached: false,
		refreshed: false,
		appId: "root",
		changeHash: false
	};
	if (options) {
		state.options = options ? $.extend(true, {}, options) : {};
		// Regular page needs gadget context - Ex create action..
		var gadgetId = options["gadget-id"];
		if (gadgetId) {
			state.options.gadget = globals.getApplication().dao.getGadget(gadgetId);
		}
	}
	state.name = name;
	if (!state.transition) {
		// Default transition
		state.transition = globals.getApplication().$config("transition");
	}
	// Readable id
	state.uuid = utils.readableuid("page", state.appId || "root", state.type, state.name);

	return state;

};

exports.getRegularPageInfo = function(pageId) {
	var repr = pageId.split(".");
	var ent = _entities[repr[0]];
	var pageInfo;
	if (ent) {
		pageInfo = _buildPageInfo(repr[0], repr[1], ent);
	}
	return pageInfo;
};

exports.getDashboardInfo = function(id) {

};


function _buildPageInfo(repr, facet, entity) {
	var page = {
		$page: {},
		$cache: {}
	};
	_buildPage(repr, facet, entity, page.$page);
	return page;
}

function _buildPage(repr, facet, entity, page) {
	if (facet === "$query" || facet === "$lookup") {
		page.$prototype = {
			$properties: {
				$resources: {
					$type: "application/x-array",
					$item: _buildPrototype(repr, facet)
				}
			}
		};
		page.$prototype.$url = "{$baseUrl}/" + repr + "?representation=" + repr + "." + facet;
	} else {
		page.$prototype = _buildPrototype(repr, facet);
		page.$prototype.$url = "{$baseUrl}/" + repr + "('{$key}')?representation=" + repr + "." + facet;
		page.$prototype.$key = "{$uuid}";
	}
	page.$prototype.$baseUrl = "http://localhost:8124/sdata/x3/erp/SUPERV";
}

function _buildPrototype(repr, facet) {
	var entity = _entities[repr];
	var proto = {
		$properties: {}
	};
	Object.keys(entity.$properties).forEach(function(key) {
		var prop = entity.$properties[key];
		var $type = prop.$type || "application/x-string";
		proto.$properties[key] = {
			$type: $type
		};
	});
	return proto;
}