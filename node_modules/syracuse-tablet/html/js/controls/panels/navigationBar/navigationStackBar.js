"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var Base = require('syracuse-tablet/html/js/controls/ctrlBase').CtrlBase;

var _templates = {
	navigationBar: '\
			<ul class="nav nav-pills nav-justified">\
			{{#each stacks}}\
			<li role="presentation" role="tab" data-toggle="tab" data-control-id="{{../ctrlId}}" data-nevent data-naction="actionStack" data-params="{{idx}}" class="{{#if selected}}active{{/if}}"><a href="#">{{title}}</a></li>\
			{{/each}}\
			</ul>\
		    ',

};
var _getHtml = function(name, ctx) {
	var key = name + "compiled";
	var tmpl = _templates[key];
	if (!tmpl) {
		tmpl = _templates[key] = Handlebars.compile(_templates[name]);
	}
	if (!tmpl) alert("template " + name + " not found");
	return tmpl(ctx);
};

exports.NavigationStackBar = utils.defineClass(
	function(controller, $type, article, options) {
		Base.call(this, controller, $type, article, options);
	}, Base, {
		destroy: function() {
			Base.prototype.destroy.call(this);
			this.$$container.empty();
		},
		buildHtml: function() {
			this.$$container.empty();
			var ctx = this._context()
			this.$$container.append($(_getHtml('navigationBar', ctx)));
			this.$$container.show();
		},
		_context: function() {
			//if(!this.controller.showNavigationStackBar()) return;
			var self = this;
			var defaultTitle = "";
			var opts = {
				stacks: [],
				ctrlId: this.id,
			};
			var stacks = self.controller.getRootStackList();
			stacks.forEach(function(stack, index) {
				defaultTitle = "Panel " + (index + 1)
				opts.stacks.push({
					selected: (index === 0),
					idx: index,
					title: stack.$title ? self.controller.dataset.resolveExpression(stack.$title) || defaultTitle : defaultTitle
				})
			})
			return opts;
		},
		computeLayout: function(layoutInfo) {
			if (!this.$$container) {
				return;
			}
		}
	});