"use strict";

var Base = require('syracuse-tablet/html/js/controls/panels/panelSdataPage').PanelSdataPage;

var formatApi = require('syracuse-tablet/html/js/helpers/formatApi');
var utils = require('syracuse-tablet/html/js/helpers/utils');
var uiSettings = require('syracuse-tablet/html/js/ui/uiSettings');
var notifications = require('syracuse-tablet/html/js/helpers/notifications');
var modules = require('syracuse-tablet/html/js/common/modules');
var locale = require('syracuse-tablet/html/js/helpers/locale');
var Hammer = require('syracuse-tablet/html/deps/hammerjs-2.0.4/hammer');
var siteLayout = require('syracuse-tablet/html/js/ui/siteLayout');
var panelsHtml = require('syracuse-tablet/html/js/controls/panels/panelsHtml');
var native = require("syracuse-tablet/html/js/helpers/native/native");
/**
 * 
 */
var _availableSlots = ["unclassified", "right", "main", "array"]

var _html = {
	mainContainer: '\
		<div class="s-m-header {{device}}">\
			{{#if showNav}}\
				<div class="s-m-header-nav">\
				<a href="#" draggable="false"\
					id="{{navigation.id}}"\
					data-nevent\
					data-naction="{{navigation.action}}">\
					<i class="{{navigation.icon}}"></i>\
				</a>\
				</div>\
			{{/if}}\
			{{#if showLabel}}\
			<div class="s-m-header-labels">\
				<span class="s-m-header-label">{{title}}</span>\
			</div>\
			{{/if}}\
			<div class="s-m-header-links">\
				{{#if showActionPanel}}\
				<a class="s-m-header-link" href="#" draggable="false" \
					data-nevent\
					data-naction="openActionsPanel">\
					<i class="fa fa-ellipsis-v"></i>\
				</a>\
				{{/if}}\
			</div>\
		</div>\
		{{#if showFreshness}}\
			<div class="s-m-freshness s-m-fresh"\
				data-nevent data-naction="showFreshness"\
				style="display: none;">\
				<i class="fa fa-bookmark"></i>\
			</div>\
		{{/if}}',
	itemsBlock: '\
			<div class="s-m-header-slot {{slot}}">\
			</ul>',
}
var _templates = {};

function _getHtml(name, ctx) {
	var tmpl = _templates[name];
	if (!tmpl) {
		tmpl = _templates[name] = Handlebars.compile(_html[name]);
	}
	return tmpl(ctx);
};

exports.PanelHeaderSdataPageBase = utils.defineClass(
	function PanelHeaderSdataPageBase(controller, type, article, opts) {
		Base.call(this, controller, type, article, opts);
		notifications.subscribe(this, ["sm.data.freshness.change"]);
	}, Base, {

		destroy: function() {
			Base.prototype.destroy.call(this);
			if (this.hammer) {
				this.hammer.destroy();
				this.hammer = null;
			}
			if (this.$$search) {
				this.$$search.off("input");
				this.$$search = null;
			}
			this.$$title = null;
			this.$$links = null;
		},

		///
		/// START: Rendering
		///

		/**
		 * 
		 */
		buildHtml: function() {
			var self = this;
			self.$$container.css({
				left: 0 + "px",
				height: this.getDesiredHeight() + "px"
			});

			Base.prototype.buildHtml.call(this);
			self.$$elmt.html(_getHtml("mainContainer", this.getHeaderCtx()));
			self.$$elmt.addClass("header");
			self.$$elmt.css({
				left: 0 + "px",
				height: self._height + "px"
			});

			self.$$container.append('<nav class="s-m-navigation-stackbar"  style="height:' + this.getNavigationStackHeight() + 'px;display:none"></nav>')
			self.$$container.show();
			self._addPressHandler();
			self.$$links = self.$$elmt.find(".s-m-header-links");
			var items = self._getItems();
			var ctx = {},
				slots = {};
			items.forEach(function(item) {
				item.slot = item.slot || "unclassified";
				if ($.inArray(item.slot, _availableSlots) === -1) {
					item.slot = "unclassified"
				}
				slots[item.slot] = slots[item.slot] || [];
				slots[item.slot].push(item);
			});
			var $$itemsBlocksHtml = $("<div></div>");
			_availableSlots.forEach(function(slotName) {
				var slot = slots[slotName];
				if (slot) {
					var $$itemsBlock = $(_getHtml("itemsBlock", {
						slot: slotName
					}));
					slot.forEach(function(item) {
						$$itemsBlock.append(panelsHtml.getItemHtml("header", item))
					})
					$$itemsBlocksHtml.append($$itemsBlock);
				}
			})
			self.$$links.append($$itemsBlocksHtml.html());
			if (self.actionAdapter.showSearch) {
				self.$$links.append(this.actionAdapter.searchCtrl.getHtml())
			}
			self.$$search = self.$$elmt.find(".s-m-search");
			self.$$title = self.$$elmt.find(".s-m-header-labels");
			self._checkBack();
		},
		_addPressHandler: function() {
			if (this.hammer) {
				this.hammer.destroy();
			}
			this.hammer = new Hammer(this.$$elmt.get(0));
			this.hammer.get("press").set({
				time: 400 //Small timeout needed to stop immediately when press
			});
			this.hammer.on("press", Hammer.bindFn(this._onPress, this));
		},
		_onPress: function(evt) {
			if (this.page.isHome()) return
			var panel = this.page.openPanel("breadcrumbs");
			if (panel) panel.show();
		},
		/**
		 * 
		 */
		computeLayout: function(context) {
			if (!this.$$container) {
				return;
			}
			var layoutInfo = modules.get("siteLayout").getLayoutInfo();
			this.$$container.css({
				top: this.top + "px",
				width: layoutInfo.application.width + "px",
			});
			var self = this;
			this.$$search.off("input");
			this.$$search.on("input", "input", function() {
				self.actionAdapter.searchCtrl.toggleRemoveSearch($(this).val());
			});
			this._responsiveHeader();
		},
		_responsiveHeader: function() {
			var opt = {
				visibleLinks: this._headerLinksVisible().visibleLinks,
				layoutChange: true
			}
			var actionsPanel = this.actionAdapter.getActionsPanelItems(opt);
			var actionPanelButton = $('[data-naction="openActionsPanel"]', this.$$links);
			if (actionsPanel.length === 0) {
				actionPanelButton.hide();
			} else {
				actionPanelButton.show();
			}
		},
		_headerLinksVisible: function() {
			var lists = {
				'visibleLinks': {}
			}
			var $$nav = this.$$elmt.find(".s-m-header-nav");
			var showSearch = this.$$search.is(":visible");
			this._hideSearch();
			var searchWidth = this.$$search.outerWidth() || 0;
			var titleWidth = this.$$title.width() || 0;
			var initialWidth = titleWidth

			var availableWidth = this._getAvailableWidth(); // links size for icon exclude btn to open panel action
			var $$list = $(".s-m-link", this.$$links);
			jQuery.fn.reverse = [].reverse;
			$$list.reverse().each(function(idx) {
				var show = true;
				var forceHeader = $(this).is("[data-forceheader]")
				if ((availableWidth - $(this).outerWidth()) < 0) {
					show = false;
				} else {
					availableWidth -= $(this).outerWidth()
				}
				if (show || forceHeader) {
					if (!forceHeader) $(this).show();
					lists.visibleLinks[$(this).attr("data-menuitem-id")] = true;
				} else {
					$(this).hide();
				}
			});
			this.$$links.attr("data-remain-size", availableWidth);
			if (showSearch) {
				this._showSearch();
			}
			return lists;
		},
		_getAvailableWidth: function() {
			var $$btnAction = $(".s-m-header-link", this.$$links);
			return this.$$links.width() - $$btnAction.outerWidth();
		},
		_hideSearch: function() {
			this.$$search.hide();
			this.$$title.show();
		},
		_showSearch: function() {
			var availableWidth = this.$$links.attr("data-remain-size");
			if (this.$$search.outerWidth() > availableWidth) {
				this.$$title.hide();
			}
			this.$$search.show()
		},
		///
		/// END: Rendering
		///

		/*
		 * Use by smartphone and tablet to get default information shown in the header
		 */
		getHeaderCtx: function() {
			return {
				title: this.actionAdapter.getPageTitle(),
				navigation: {
					id: (this.actionAdapter.showGlobalPanelButton ? "s-m-header-panel-id" : "s-m-header-back-id"),
					action: (this.actionAdapter.showGlobalPanelButton ? "openGlobalPanel" : "historyBack"),
					icon: (this.actionAdapter.showGlobalPanelButton ? "fa fa-bars" : "fa fa-arrow-left"),
				},
				showNav: true,
				showLabel: true,
				showFreshness: true,
				showActionPanel: (!this.actionAdapter.showGlobalPanelButton),
				device: siteLayout.getDeviceType(),
				height: (this.getDesiredHeight() - 5) + "px",
				navStackBarHeight: this.getNavigationStackHeight() + "px",
			};
		},
		getDesiredHeight: function() {
			return uiSettings.getProp("header.height") + this.getNavigationStackHeight()
		},
		getNavigationStackHeight: function() {
			return (this.controller.showNavigationStackBar() ? uiSettings.getProp("navigationStackBar.height") : 0)
		},
		setTop: function(top) {
			this.top = top;
		},
		notifDataFreshnessChange: function(dataFreshness) {
			this._dataFreshness = dataFreshness;
			this._$$freshness = $(".s-m-freshness", this.$elmt);
			this._$$freshness.removeClass("s-m-fresh s-m-tainted s-m-verytainted");
			this._$$freshness.addClass("s-m-" + this._dataFreshness.level);
			this._$$freshness.show();
		},
		/**
		 * Displays freshness info
		 */
		_actShowFreshness: function() {
			if (!this._dataFreshness) return;
			var formatter = formatApi.getFormatter("application/x-datetime");
			var dateTime = formatter.formatValue(utils.getCurISODateTime(new Date(this._dataFreshness.dateTime)), false);

			var notify = {
				severityClass: this._dataFreshness.level,
				title: locale.text("page.data.freshness.last") + " : " + dateTime,
				body: locale.text("page.data.freshness." + this._dataFreshness.level),
				onlyWebapp: true
			};
			modules.get("modal").notify(notify);
		},
		_getItems: function() {
			return this.actionAdapter.getHeaderItems();
		},
		_checkBack: function() {
			var layoutInfo = modules.get("siteLayout").getLayoutInfo();
			var $$back = $("#s-m-header-back-id", this.$$elmt);
			if (native.hasCapability("hardwareBackButton") || layoutInfo.deviceType === "smartphone") {
				$$back.hide();
			}
		},
		_actActionArray: function(id) {
			switch (id) {
				case "search":
					this.actionAdapter.searchCtrl.search();
					break;
				case "removeSearch":
					this.actionAdapter.searchCtrl.removeSearch();
					break;
			}
		},
		_actSearch: function() {
			if (this.actionAdapter.searchCtrl.isDirty()) {
				this._actActionArray("search")
				return
			}
			if (this.$$search.is(":visible")) {
				this._hideSearch();
			} else {
				this._showSearch();
			}
		}
	});