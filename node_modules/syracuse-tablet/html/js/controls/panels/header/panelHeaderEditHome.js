"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var Base = require('syracuse-tablet/html/js/controls/panels/header/panelHeaderSdataPageBase').PanelHeaderSdataPageBase;
var notifications = require('syracuse-tablet/html/js/helpers/notifications');
var jsutils = require('syracuse-tablet/html/js/helpers/jsutils');
var modules = require('syracuse-tablet/html/js/common/modules');
/**
 * Dedicated header for edit homepage on tablet
 */
var _html = {
	mainContainer: '\
			<div class="s-m-header {{device}} s-m-dasboard-config">\
			<div class="s-m-header-title">\
				<input class="s-m-header-label" value="{{description}}">\
				{{#if template}}\
					<div class="s-m-dashboard-header-role-number">{{roleCount}}</div>\
				 <btn class="s-m-dashboard-header-btn-role fa fa-users" data-action="roleList">\
				{{/if}} \
			</div>\
			<buttons class="pull-right dashboard-header-btn" style="width:{{rightBtnWidth}}px">\
				<button type="button" class="btn btn-default" style="display:{{displaySaveButton}}" data-nevent data-naction="{{buttonSaveAction}}" data-controller-id="{{controllerId}}">\
					<i class="fa fa-check"></i>\
				</button>\
				<button type="button" style="float:right" class="btn btn-danger" data-nevent data-naction="closeDashboardConfig"  data-controller-id="{{controllerId}}">\
					<i class="fa fa-close"></i>\
				</button>\
			</buttons>\
		</div>'
}
var _templates = {};

function _getHtml(name, ctx) {
	var tmpl = _templates[name];
	if (!tmpl) {
		tmpl = _templates[name] = Handlebars.compile(_html[name]);
	}
	return tmpl(ctx);
};
exports.PanelHeaderEditHome = utils.defineClass(
	function PanelHeaderEditHome(controller, type, article, opts) {
		Base.call(this, controller, type, article, opts);
		notifications.subscribe(this, ["sm.dashboard.state.change"]);
	}, Base, {

		destroy: function() {
			Base.prototype.destroy.call(this);
		},
		buildHtml: function() {
			Base.prototype.buildHtml.call(this);
			this.$$elmt.append(_getHtml("mainContainer", this.getHeaderCtx()));
			$("input.s-m-header-label", this.$$elmt).on('change', jsutils.bindFn(this._descriptionChange, this))
		},
		_descriptionChange: function() {
			notifications.publish(["sm.dashboard.description.change"], $("input.s-m-header-label", this.$$elmt).val());
		},
		notifDashboardStateChange: function(dirty) {
			if (dirty) {
				$("[data-naction='savePersonal'],[data-naction='saveTemplate']", this.$$elmt).show();
			} else {
				$("[data-naction='savePersonal'],[data-naction='saveTemplate']", this.$$elmt).hide();
			}
		},
		/**
		 * Override _getItems
		 */
		getHeaderCtx: function() {
			return {
				description: this.page.getPageDescription(),
				device: modules.get("siteLayout").getDeviceType(),
				roleCount: 0,
				displaySaveButton: "none",
				rightBtnWidth: 100,
				buttonSaveAction: this.page.isPersonal() ? "savePersonal" : "saveTemplate",
				controllerId: this.page.controller.id,
			};
		},
	});