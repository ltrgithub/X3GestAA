"use strict";

var Base = require('syracuse-tablet/html/js/controls/panels/aside/panelAsideBase').PanelAsideBase;
var utils = require('syracuse-tablet/html/js/helpers/utils');
var modules = require('syracuse-tablet/html/js/common/modules');
var eventListener = require('syracuse-tablet/html/js/app/eventListener');
var uiSettings = require('syracuse-tablet/html/js/ui/uiSettings');

var navigationPageStack = require('syracuse-tablet/html/js/app/navigationPageStack');

var _html = {
	items: '\
			<div class="s-m-items">\
			{{{itemsHtml}}}\
			</div>\
			',
	item: '<a draggable="false" \
			href="#" \
			{{{attrs}}} class="{{css}}"><div class="s-m-item">\
			<div class="s-m-text">{{text}}</div>\
			<div class="{{icon}}"></div>\
			</div></a>'
};
var _templates = {};

function _getHtml(name, ctx) {
	var tmpl = _templates[name];
	if (!tmpl) {
		tmpl = _templates[name] = Handlebars.compile(_html[name]);
	}
	return tmpl(ctx);
};
/**
 * 
 */
exports.PanelBreadCrumbs = utils.defineClass(
	function PanelBreadCrumbs(controller, $type, article, options) {
		Base.call(this, controller, $type, article, options);
	}, Base, {
		destroy: function() {
			Base.prototype.destroy.call(this);
			this._stack = null;
		},

		//
		// START: Rendering
		// 
		buildHtml: function() {
			var self = this;
			Base.prototype.buildHtml.call(this);
			this.$$elmt.css({
				top: (uiSettings.getProp("header.height") - 12) + "px"
			});
			this._stack = navigationPageStack.findClosest(this.$$elmt);
			var $$content = this._buildItems();
			self.$$panelContent.append($$content)
		},
		_getAdditionnalCss: function() {
			return "";
		},
		_buildItems: function() {
			this.$$panelContent.empty();
			if (!this._stack) {
				return;
			}
			var stackItems = this._stack.getStackItems();
			var items = [];
			var idx = 0;
			for (var i = 0; i < stackItems.length; i++) {
				var si = stackItems[i];
				if (si.noHistory !== true) {
					var attrs = eventListener.getDataActionAttrs(this.controller.id, "itemClicked", si.id, true);
					items.push(_getHtml("item", {
						attrs: attrs,
						text: si.title,
						notLast: idx !== 0,
						icon: this._getIcon(si.pageType),
						css: si.pageType
					}));
					idx++;
				}
			}
			var home = items.shift();
			var last = items.pop();
			items.reverse();
			items.unshift(home);
			items.push(last);
			return ($(_getHtml("items", {
				itemsHtml: items.join("")
			})));

		},
		_getIcon: function(pageType) {
			switch (pageType) {
				case "home":
					return "fa fa-home";
					break;
				case "dashboard":
					return "fa fa-th";
					break;
				case "$details":
					return "fa fa-file";
					break;
				case "$lookup":
					return "fa fa-list-ul";
					break;
				case "$query":
					return "fa fa-list-ul";
					break;
				case "$create":
					return "fa fa-pencil";
					break;
				case "$edit":
					return "fa fa-pencil";
					break;
				case "chartDetail":
					return "fa fa-pie-chart";
					break;

			}
		},
		getDesiredHeight: function() { // not necessary
			return 0;
		},
		setTop: function(top) {
			// Not understand why it's called ?
		},
		_actItemClicked: function(id) {
			var self = this;
			this._stack.goBackToId(id)
				.then(function(res) {
					if (!res) {
						self.hide();
					}
				})
				.fail(function(e) {
					modules.get("modal").error(e);
				});
		}
	});