"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var locale = require('syracuse-tablet/html/js/helpers/locale');
var formatApi = require('syracuse-tablet/html/js/helpers/formatApi');
var jsutils = require('syracuse-tablet/html/js/helpers/jsutils');
var fontUtils = require('syracuse-tablet/html/js/ui/fontUtils');
var selectorFactory = require('syracuse-tablet/html/js/ui/datetimeSelectors/selectorFactory');
var authPropsGeneral = require('syracuse-tablet/html/js/authoring/authoringPropertiesGeneral');
var authComponents = require('syracuse-tablet/html/js/authoring/authoringComponents');
var modules = require('syracuse-tablet/html/js/common/modules');
var native = require('syracuse-tablet/html/js/helpers/native/native');
var sharedContext = require('syracuse-tablet/html/js/helpers/sharedContext');
var Base = require('syracuse-tablet/html/js/controls/panels/aside/panelAsideDialog').PanelAsideDialog;

//!! Id's and classes are used in side-panel.less
var CREATE_BTN = "tmpl-panel-create-btn";
var CREATE_BTN_ADDON = "tmpl-panel-create-btn-clear-addon";
var ITEM_TTL = "s-m-tmpl-itm-ttl";
var ITEM_INFO = "s-m-tmpl-itm-info";
var ITEM_TABLE = "s-m-tmpl-itm";
var ITEM_ACT = "s-m-tmpl-itm-act";
var LST_WRAP = "s-m-list-wrapper";
var LST_SCROLL = "s-m-scroll-elmt";
var ITEM_INPUT_TTL = "tmpl-panel-item-input-ttl";
var ITEM_INPUT_TTL_ADDON = "tmpl-panel-item-input-ttl-addon";
var FILTER_MENU = "tmpl-panel-filter";

var _txt = function(id) {
	return locale.text("edit.templates.dlog." + id);
};

var _templates = {
	error: '<section class="draft-error"><h1>{{error}}<h1><h2>{{contact}}<h2></section>',
	main: '\
		<article style="height:100%">\
			<section class="panel panel-default create">\
				<div class="panel-heading">{{createSection}}</div>\
				<div class="panel-body">\
					<table style="width:100%"><tr>\
						<td>{{name}}</td>\
						<td>\
							<div class="input-group {{#if smartphone}}input-group-sm{{/if}}">\
								<input id="{{CREATE_BTN}}" class="ctrl-evt-input form-control" aria-describedby="create-clear-addon" type="text"/>\
								<span  data-action="clearname" data-control-id="{{ctrlId}}" class="input-group-addon" id="{{CREATE_BTN_ADDON}}">X</span>\
							</div>\
						</td>\
						<td>\
							<span class="btn btn-default disabled" data-action="create" data-control-id="{{ctrlId}}">\
								<i class="{{createicn}}"></i>\
								<span>{{create}}</span>\
							</span>\
						</td>\
					</tr></table>\
				</div>\
			</section>\
			<section class="panel panel-default avail">\
				<div class="panel-heading">\
					<span>{{availSection}}</span>\
				</div>\
				<div class="{{LST_WRAP}}">\
					<ul class="list-group {{LST_SCROLL}}">\
					</ul>\
				</div>\
			</section>\
		</article>',
	items: '\
		{{#each items}}\
			<li class="list-group-item" data-params="{{tmplId}}">\
				<table class="{{../ITEM_TABLE}}"><tr>\
					<td>\
						<div class="{{../ITEM_TTL}}" data-action="changeItemTitle" data-control-id="{{../ctrlId}}">{{title}}</div>\
						<div class="{{../ITEM_INFO}}"style="overflow: hidden">\
							<span>{{date}}</span>\
							<span>{{representation}}</span>\
						</div>\
					</td>\
					<td>\
						<table class="{{../ITEM_ACT}}">\
							<tr>\
								<td>\
									<span  class="btn btn-default {{#unless applicable}}disabled{{/unless}}" data-action="apply" data-control-id="{{../ctrlId}}">\
										<i class="{{../applyicn}}"></i>\
										<span>{{../apply}}</span>\
									</span>\
								</td>\
								<td>\
									<span  class="btn btn-default {{#unless applicable}}disabled{{/unless}}" data-action="update" data-control-id="{{../ctrlId}}">\
										<i class="{{../updateicn}}"></i>\
									</span>\
								</td>\
								<td>\
									<span  class="btn btn-default" data-action="delete" data-control-id="{{../ctrlId}}">\
										<i class="{{../deleteicn}}"></i>\
									</span>\
								</td>\
							</tr>\
						</table>\
					</td>\
				</tr></table>\
			</li>\
		{{/each}}',
	noitems: '\
		<div class="s-m-noitem"><b>{{text}}</b></div>\
		',
	changeItemTitle: '\
		<div>\
			<div class="input-group {{#if smartphone}}input-group-sm{{/if}}">\
				<input id="{{ITEM_INPUT_TTL}}" style="font-weight:bold;" class="ctrl-evt-input form-control" type="text" aria-describedby="{{ITEM_INPUT_TTL_ADDON}}" >\
				<span data-action="saveItemTitle" data-control-id="{{ctrlId}}" class="btn input-group-addon" id="{{ITEM_INPUT_TTL_ADDON}}" style="background-color:inherit">\
					<i class="{{icon}}"/>\
				</span>\
			</div>\
		</div>',
	filtersMenu: '\
		<select id="{{FILTER_MENU}}" data-action="filter" data-control-id="{{ctrlId}}">\
			{{#each filterOptions}}\
				<option value="{{value}}" {{#if selected}}selected{{/if}}>{{title}}</option>\
			{{/each}}\
		<select>'
};

var _getHtml = function(name, ctx) {
	var key = name + "compiled";
	var tmpl = _templates[key];
	if (!tmpl) {
		tmpl = _templates[key] = Handlebars.compile(_templates[name]);
	}
	if (!tmpl) alert("template " + name + " not found");
	return tmpl(ctx);
};

exports.PanelEditTemplates = utils.defineClass(
	function PanelEditTemplates(controller, $type, article, options) {
		options.title = _txt("title");
		Base.call(this, controller, $type, article, options);
		this.dateFormatter = formatApi.getFormatter("application/x-datetime");
		this._initLabels();
	}, Base, {
		destroy: function() {
			Base.prototype.destroy.call(this);
			this.dateFormatter = null;
		},

		_initLabels: function() {
			this._selectedFilter = "current";
			this._filterOptions = [{
				value: "current",
				title: _txt("currendpoint")
			}, {
				value: "all",
				title: _txt("allendpoint")
			}];
		},

		buildHtml: function() {
			Base.prototype.buildHtml.call(this);
			if (this.$$content) {
				this.$$content.remove();
			}
			// _txt("title")
			this.$$content = this._buildContent().appendTo(this.$$panelContent);
			this.$$list = this.$$content.find(".panel.avail ul");
		},
		/**
		 * Build the main content synchronously (without tmpl list)
		 * We need to build at least s-m-scroll-elmt synchronously to be compliant with sidePanel gesture management
		 */
		_buildContent: function() {
			var context = {
				createSection: _txt("createSection"),
				availSection: _txt("availSection"),
				name: _txt("name"),
				create: _txt("create"),
				createicn: fontUtils.getIconByName("$apply"),
				ctrlId: this.id,
				CREATE_BTN: CREATE_BTN,
				CREATE_BTN_ADDON: CREATE_BTN_ADDON,
				LST_WRAP: LST_WRAP,
				LST_SCROLL: LST_SCROLL,
				smartphone: modules.get("siteLayout").getDeviceType() === "smartphone"
			};
			return $(_getHtml("main", context));
		},
		/**
		 * Trick to manage the save title button
		 * We can't use the blur event to hide/detach the input title elmt because hide.detch fire the pending events
		 * --> So if we click on "SaveItemTitle" we get first the blur event which fires the click evt and event is not triggered
		 * We handle the clicks evnts on panel to manage _$$changeItemTitle
		 */
		onClickPanel: function(event) {
			if (this._$$changeItemTitle && this._$$changeItemTitle.is(":visible")) {
				this.$$content.find("." + ITEM_TTL).show();
				this._$$changeItemTitle.detach();
			}
		}

	});