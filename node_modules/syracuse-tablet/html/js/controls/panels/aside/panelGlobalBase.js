"use strict";

var Base = require('syracuse-tablet/html/js/controls/panels/aside/panelAside').PanelAside;
var utils = require('syracuse-tablet/html/js/helpers/utils');
var modules = require('syracuse-tablet/html/js/common/modules');

var _availableSlots = ["appl", "share", "tools", "draft", "logout", "unclassified"];
/**
 * 
 * Global panel showing stuff like design page, settings, ...
 */
exports.PanelGlobalBase = utils.defineClass(
	function PanelGlobalBase(controller, type, article, opts) {
		Base.call(this, controller, type, article, opts);
	}, Base, {
		_getItems: function() {
			return this.actionAdapter.getGlobalPanelItems();
		},
		_extendContext: function(ctx) {
			ctx.username = _getUserName();
			ctx.userrole = _getUserRole();
			return ctx
		},
		_getAvailableSlots: function() {
			return _availableSlots
		},
		_getAdditionnalCss: function() {
			return "";
		},
		show: function() {
			Base.prototype.show.call(this);
			var self = this;
			/**
			 * Drafts status
			 * Each time the global panel is shown
			 * There can be multiple panels (per page) and the regular notification in draftCount doesn't work
			 * If want to put the draftsList link in all panel we've to move this code to panelBase 
			 */
			this._$$draftsList = this.$$elmt.find('a[data-naction="draftsList"]');
			if (this._$$draftsList.length == 0) {
				return;
			}
			setTimeout(function() {
				self._checkDraftsChanged();
			});
		},
		_checkDraftsChanged: function() {
			this.enableAction("draftsList", false);
			var self = this;
			// toggle draftList link status
			modules.get("storage").getStorage().draftOperation("draftCount").then(function(count) {
				if (self.$$elmt == null) {
					return;
				}
				self.enableAction("draftsList", count > 0);
				var $badge = self._$$draftsList.find("span.badge");
				if ($badge.length === 0) {
					$badge = $('<span class="badge"/>').appendTo(self._$$draftsList);
				}
				$badge.text(count);
			});
		}
	});


function _getUserName() {
	var up = modules.get("appController").App.getCurrentUserProfile();
	if (!up) {
		return "";
	}
	var name = up.user.firstName || "";
	name = (name != "" ? name + " " : "") + up.user.lastName;
	return name;
}

function _getUserRole() {
	var up = modules.get("appController").App.getCurrentUserProfile();
	if (!up) {
		return "";
	}
	return up.selectedRole.code;
}