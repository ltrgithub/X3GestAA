"use strict";

var Base = require('syracuse-tablet/html/js/controls/panels/aside/panelAsideBase').PanelAsideBase;
var locale = require('syracuse-tablet/html/js/helpers/locale');
var utils = require('syracuse-tablet/html/js/helpers/utils');

var panelsHtml = require('syracuse-tablet/html/js/controls/panels/panelsHtml');

var _html = {
	header: '\
			<div class="header">\
			<buttons class="pull-right"> \
				<button type="button" class="btn btn-default s-m-modal-btn-cancel" data-control-id="{{ctrlId}}" data-nevent data-naction="cancel"></button>\
			</buttons> \
			<div class="modal-title">{{title}}</div> \
			</div>\
			'
}

var _templates = {};

function _getHtml(name, ctx) {
	var tmpl = _templates[name];
	if (!tmpl) {
		tmpl = _templates[name] = Handlebars.compile(_html[name]);
	}
	return tmpl(ctx);
};

/**
 * Manages an header with validate/close
 */
exports.PanelAsideDialog = utils.defineClass(
	function PanelAsideDialog(controller, type, article, options) {
		options.noCloseOnClick = true;
		Base.call(this, controller, type, article, options);
	}, Base, {

		destroy: function() {
			Base.prototype.destroy.call(this);
			this._$$header = null;
		},

		buildHtml: function() {
			Base.prototype.buildHtml.call(this);
			this.$$elmt.addClass("s-m-dialogPanel");
			this.$$elmt.closest("aside").addClass("dialogpanel");
			if (this._$$header) {
				this._$$header.remove();
			}
			var ctx = {
				side: this.attachedSide,
				ctrlId: this.id,
				title: this.options.title || "  "
			};
			this._$$header = this._buildHeader(ctx);
			if (this._$$header && this._$$header.length > 0) {
				this.$$elmt.prepend(this._$$header);
			}
		},
		_buildHeader: function(ctx) {
			return $(_getHtml("header", ctx));
		},
		_actCancel: function() {
			this.hide();
		},
		_actValidate: function() {
			this.hide();
		}
	});