"use strict";


var utils = require('syracuse-tablet/html/js/helpers/utils');
var Base = require('syracuse-tablet/html/js/controls/array/ctrlArray').Klass;
var globals = require('syracuse-tablet/html/js/helpers/globals');
var ctrlCubeChartInterface = require('syracuse-tablet/html/js/controls/chart/ctrlCubeChart').ctrlCubeChartInterface;
var locale = require('syracuse-tablet/html/js/helpers/locale');

/**
 * Array that opens a chartDetail when we touch the content
 * Used to display tables instead of chart in dashboard with access to the detail of the chart
 */
var _Klass = utils.defineClass(
	function CtrlArrayChart($type, controller, article, prototype, options) {
		Base.call(this, controller, article, prototype.create({
			$type: $type
		}), options);
	}, Base, {
		buildHtml: function($$parent, controllerDao, buildOptions) {
			Base.prototype.buildHtml.call(this, $$parent, controllerDao, buildOptions);
			this.$$elmt.attr("data-control-id", this.id).attr("data-action", globals.ACTCHARTDETAIL).addClass("s-m-chart-array");;
		},
		onResize: function(context) {
			Base.prototype.onResize.call(this, context);
			// Notifies cell/tile to improve display (no bg color) - Only if not empty
			if (!this.isEmpty) {
				this.notifChartHosted();
			}
		},
		_actRowSelect: function(param, $value, event) {
			event.preventDefault();
			event.stopPropagation();
			this._actChartDetail();
		},
		_actChartDetail: function() {
			this.openChartDetailPage();
		},
		setEmptyArrayMsg: function() {
			if (!this.isArrayField()) {
				// Same as chart
				var title = this.prototype.getDataByPath("$cube.$title");
				if (title) {
					$('<div class="s-m-no-data-title"/>').appendTo(this.$$value).text(title);
				}
				$('<div class="s-m-no-data-label"/>').appendTo(this.$$value).text(locale.text("label.chart.nodata"));

			}
		}
	});

utils.addClassMembers(_Klass, ctrlCubeChartInterface);

exports.Klass = _Klass;