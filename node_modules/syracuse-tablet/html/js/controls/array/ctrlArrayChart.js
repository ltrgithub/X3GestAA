"use strict";


var utils = require('syracuse-tablet/html/js/helpers/utils');
var Base = require('syracuse-tablet/html/js/controls/array/ctrlArray').Klass;
var globals = require('syracuse-tablet/html/js/helpers/globals');
var ctrlCubeChartInterface = require('syracuse-tablet/html/js/controls/chart/ctrlCubeChart').ctrlCubeChartInterface;

/**
 * Array that opens a chartDetail when we touch the content
 * Used to display tables instead of chart in dashboard with access to the detail of the chart
 */
var _Klass = utils.defineClass(
	function CtrlArrayChart($type, controller, article, prototype, options) {
		Base.call(this, controller, article, prototype.create({
			$title: _findTitle(prototype),
			$type: $type
		}), options);
	}, Base, {
		buildHtml: function($$parent, controllerDao, buildOptions) {
			Base.prototype.buildHtml.call(this, $$parent, controllerDao, buildOptions);
			this.$$elmt.attr("data-control-id", this.id);
			this.$$elmt.attr("data-action", globals.ACTCHARTDETAIL);
		},
		onResize: function(context) {
			Base.prototype.onResize.call(this, context);
			this.notifChartHosted();
		},
		_actRowSelect: function(param, $value, event) {
			event.preventDefault();
			event.stopPropagation();
			this._actChartDetail();
		},
		_actChartDetail: function() {
			this.openChartDetailPage();
		}
	});

/* 
 * Traverse the prototype hierarchy to find a title for the array that can be
 * accessed later if there is no data
 */
function _findTitle(prototype) {
	var $title = prototype.data("$title");
	if ($title) {
		return $title;
	}
	var $cube = prototype.data("$cube");
	$title = $cube && $cube.$title;
	if ($title) {
		return $title;
	}

	if (prototype.parent) {
		return _findTitle(prototype.parent);
	}
}

utils.addClassMembers(_Klass, ctrlCubeChartInterface);

exports.Klass = _Klass;