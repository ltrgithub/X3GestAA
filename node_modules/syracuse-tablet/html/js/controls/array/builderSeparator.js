"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var uiUtils = require('syracuse-tablet/html/js/ui/uiUtils');
var Base = require('syracuse-tablet/html/js/controls/array/builderBase').BuilderBase;

/**
 * Display the control with displayCtx = "table"
 * I didn't want to change the displayCtx in all fields control so I kept "table"
 */
var _createCellControl = function(arrayCtrl, $$parent, colInfo, fieldProto) {
	var article = {
		"$bind": colInfo.$bind
	};
	return ctrlFactory.createCellFieldCtrl($$parent, arrayCtrl.controller, colInfo.article || colInfo, fieldProto);
};
var _seps = {
	semicolon: ",",
	colon: ":",
	blank: " ",
	dash: "-"
};

exports.BuilderSeparator = utils.defineClass(
	function builderSeparator(control) {
		Base.call(this, control);
		this._columnInfo = null;
		this._singleFieldsController = new SdataController(rowDataset, arrayController);
	}, Base, {

		destroy: function() {
			Base.prototype.destroy.call(this);
			this._columnInfo = null;
			if (this._singleFieldsController) {
				this._singleFieldsController.destroy();
			}
			this._singleFieldsController = null;
		},

		buildHtml: function(data, $$parent, refresh) {
			Base.prototype.buildHtml.call(this, data, $$parent, refresh);
			this._createColumnInfo();
			$$parent.empty();
			var $$section = $('<section/>').appendTo($$parent);
			var self = this;
			var sep = _seps[this.control.article.$separator || "blank"] || " ";
			var ctrlFactory = modules.get("ctrlFactory");
			data.forEach(function(fieldData, idx) {
				if (idx > 0) {
					var $$sep = $('<span class="s-m-separator"/>').appendTo($$section).text(sep);
					if (sep === ",") {
						$$sep.css("text-align", "left");
					}
				}
				var ctrlFld = ctrlFactory.createControl(self._singleFieldsController, col.article,
					self,
					self.page, {
						displayCtx: "separator",
						noEdit: true
					});
				if (ctrlFld) {
					var $$span = $(uiUtils.createDomElement("span", null, null, null, self.$$elmt));
					ctrlFld.set$$container($$span);
					ctrlFld.buildHtml();
				}
			});
		},

		_createColumnInfo: function() {
			if (this._columnInfo) {
				return this._columnInfo;
			}
			this._columnInfo = [];
			var items = this.control.getColumnsInfo();
			var self = this;
			var proto, col;
			items.forEach(function(item, idx) {
				if (item.$isHidden) {
					return;
				}
				proto = self.$itemProto.propGetProto(item.$bind);
				if (!proto || self.isExcluded(proto)) {
					return;
				}
				var col = {
					"$bind": item.$bind,
					"article": item,
				};
				col.css = [];
				col.title = "";
				self._columnInfo.push(col);
			});
			return this._columnInfo;
		}

	});