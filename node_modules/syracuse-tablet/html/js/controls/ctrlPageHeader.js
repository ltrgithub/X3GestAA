"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var uiUtils = require('syracuse-tablet/html/js/ui/uiUtils');
var sdataUtils = require('syracuse-tablet/html/js/sdata/sdataUtils');
var Base = require('syracuse-tablet/html/js/controls/structElmt').Klass;


var _templates = {
	main: '\
		<div id="{{ctrlId}} class="s-m-control"> \
			<nav role="navigation" class="navbar navbar-inverse"> \
				<div class="container-fluid"> \
					<div class="navbar-header s-m-header-navbar"> \
						<div class="s-m-header-brand"><a data-action="reload" href="#" class="navbar-brand">{{title}}</a></div> \
					<div class="s-m-header-navlist"> \
						<div class="s-m-header-nav-item"> \
							<a data-action="logout" href="#"> \
								<button class="btn btn-default sm-header-nav-item-btn">{{logout}}<span class="glyphicon glyphicon-log-out"></span></button> \
							</a> \
						</div> \
						<div class="s-m-header-nav-item linkbar" style="display:none"> \
							<a data-action="openlinksbar" data-control-id="{{ctrlId}}" href="#" class="sm-links-bar-trigger"> \
								<button class="btn btn-default sm-header-nav-item-btn"><span class="glyphicon glyphicon-align-justify"></span></button> \
							</a> \
						</div> \
					</div> \
				</div> \
			</nav>\
		</div>',
	linkBar: '\
		<div class="sm-links-bar-layout" style="display:none">\
			<div class="sm-links-bar" style="height:866px"> \
			 {{#each links}} \
				<div class="sm-links-bar-slot"> \
					<div class="sm-links-bar-item-slot">\
						<a class="sm-links-bar-item" href="#" data-nav="{{data-nav}}" data-sdata-url="{{data-url}}">{{title}}</a> \
					</div> \
				</div> \
			 {{/each}} \
			</div> \
		</div>\
		'
};

var _getHtml = function(name, ctx) {
	var key = name + "compiled";
	var tmpl = _templates[key];
	if (!tmpl) {
		tmpl = _templates[key] = Handlebars.compile(_templates[name]);
	}
	return tmpl(ctx);
};

/**
 * Page header Generate Html
 */
var _Klass = utils.defineClass(

	function(controller, $type) {
		var self = this;
		Base.call(self, controller, $type);
	}, Base, {

		destroy: function() {
			var self = this;
			Base.prototype.destroy.call(self);
		},

		buildHtml: function(parent, controllerDao, buildOptions) {
			var self = this;
			parent = $(parent);
			var _mainCtx = {
				title: "Sage ERP X3 - Mobile",
				logout: "Logout",
				ctrlId: self.id
			};
			self.$$elmt = parent.html(_getHtml("main", _mainCtx));
			// Process links
			var $links = self.controller.prototype.data("$links");
			if ($links && Object.keys($links).length > 0) {
				var linksCtx = [];
				$.each($links, function(name, value) {
					try {
						var link = sdataUtils.getLinkInfo(value.$url, controllerDao);
						linksCtx.push({
							"data-nav": link.page,
							"data-sdata-url": link.sDataUrl,
							"title": utils.parseExpression(value.$title, null, self.controller.prototype) || self.getLinkTitle(name)
						});
					} catch (e) {
						value = value || {};
						console.log("invalid link" + (value.$title || 'no title') + "\n\t" + (value.$url || 'no url'));
					}
				});
				self.$$linksBar = $(_getHtml("linkBar", {
					links: linksCtx
				})).prependTo(self.$$elmt);
				self.$$elmt.find(".s-m-header-nav-item.linkbar").show();
			}
		},

		// TODO
		getLinkTitle: function(facetValue) {
			switch (facetValue) {
				case "$edit":
					return "Edit";
				case "$query":
					return "List";
				case "$save":
					return "Save";
				case "$details":
					return "Detail";
				default:
					throw new Error("Facet " + facetValue + " not implemented yet");
			}
		},

		_actOpenlinksbar: function(linksBar) {
			var self = this;
			if (self.$$linksBar) self.$$linksBar.toggle();
		}
	});

exports.Klass = _Klass;