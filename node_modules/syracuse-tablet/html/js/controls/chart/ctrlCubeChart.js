"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var globals = require('syracuse-tablet/html/js/helpers/globals');
var Base = require('syracuse-tablet/html/js/controls/chart/ctrlCubeChartBase').Klass;
var uiUtils = require('syracuse-tablet/html/js/ui/uiUtils');
var formatApi = require('syracuse-tablet/html/js/helpers/formatApi');
var locale = require("syracuse-tablet/html/js/helpers/locale");

/**
 * cube chart control class
 */
var _Klass = utils.defineClass(function(controller, article, prototype, options) {
	var self = this;
	Base.call(self, controller, article, prototype, options);
	self.itemProto = prototype.getPrototype("$item");
}, Base, {

	buildHtml: function($$parent, controllerDao, buildOptions) {
		var self = this;
		Base.prototype.buildHtml.call(self, $$parent, controllerDao, buildOptions, ["s-m-chart"]);
		self.$$chartSlot = $(uiUtils.createDomElement('div', null, null, null, self.$$elmt));
		self.$$chartSlot.hide();
		self._buildChart();
	},

	_buildChart: function() {
		var self = this;

		// This block assignes some variables so that the implementations
		// in ctrlCubeChartBase which have been migrated from the desktop client
		// do not need to be modified too much!
		self.$prototype = self.prototype.json;
		self.$prototype.$properties = self.$prototype.$item.$properties;
		self._localize = {
			highCharts_showHideLegend: locale.text("highCharts_showHideLegend"),
			highCharts_seriesTitle: locale.text("highCharts_seriesTitle")
		};
		//

		self._initializeMeta();

		self.dataset = self.getDao().getQueryResources();

		var settings = self._settingsFromValue();
		self._createChart(settings);
	},

	_ensureFormatter: function(measure) {
		measure.formatApi = {
			format: function(val, localFormat) {
				return val;
			}
		};
	},

	_localizedText: function(key) {
		return key;
	},

	_getFieldEvalTitle: function() {
		return [];
	},

	destroy: function() {
		var self = this;
		Base.prototype.destroy.call(self);
		self.dataset = null;
	},
	/**
	 * Call by page on resize - TODO generalize the resize process
	 */
	onResize: function() {
		this.$$chartSlot.show();
		var chart = this.$$chartSlot.highcharts();
		if (chart) {
			chart.setSize(this.$$chartSlot.width(), this.$$chartSlot.height(), false);
		}
	}
});

globals.registerClass(_Klass, "chart");
exports.Klass = _Klass;