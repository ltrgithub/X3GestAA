"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var Base = require('syracuse-tablet/html/js/controls/ctrlBase').CtrlBase;
var fontUtils = require('syracuse-tablet/html/js/ui/fontUtils');

/**
 * 
 */
exports.LayoutBase = utils.defineClass(function LayoutBase(controller, type, article, opts) {
	Base.call(this, controller, type, article, opts);
	this.title = article.$title;
}, Base, {
	destroy: function() {
		Base.prototype.destroy.call(this);
	},
	//
	// START: Rendering
	// 
	buildHtml: function() {
		this.createRootElement(["s-m-layout", "s-m-ctrl"]);

		if (this.article.$title && this.options.noTitle !== true) {
			this.buildTitle();
		}
		if (this.article.$icon && this.options.noIcon !== true) {
			this.buildIcon();
		}
	},
	_ensureHeader: function($$root) {
		if (!this.$$header) {
			this.$$header = $('<header>').prependTo($$root || this.$$elmt);
		}
		return this.$$header;
	},
	buildIcon: function($$rootLyt, $$parent, controllerDao, destroyAfter) {
		this._ensureHeader();
		var icon = fontUtils.getIconByName(this.article.$icon);
		if (icon) {
			this.$$header.addClass("s-m-has-ttl-icon").prepend('<i class="s-m-ttl-icon ' + icon + '">');
		}
	},
	buildTitle: function() {
		this._ensureHeader();
		this.$$header.find("span.title").remove();
		this.$$header.prepend('<span class="title">' + this.getArticleText("$title") + '</span>');
	},
	/**
	 * Subclasses need to give the container they want the children to be rendered in
	 * Used by this.buildChildrenHtml
	 */
	getChild$$Container: function() {
		throw new Error("Subclass must give container for children");
	},
	/**
	 * 
	 */
	buildChildrenHtml: function() {
		var self = this;
		this.isEmpty = true;

		if (this.children) {
			var $$childContainer = self.getChild$$Container();
			$.each(self.children, function(index, child) {
				child.set$$container($$childContainer);
				child.buildHtml();
				self.isEmpty = self.isEmpty && child.isEmpty;
			});
		}
		if (this.options.hideEmptyRows === true) {
			// This option allows to hide empty rows and optimize display
			this.$$elmt.toggleClass("s-m-empty", this.isEmpty);
		}
	},
	//
	// END: Rendering
	//

	createId: function(typeName) {
		return utils.readableuid(typeName);
	},
	/**
	 * Built with the rank of the layout in generation process to be reliable
	 */
	getUnitTestId: function() {
		if (this.options.index == null) return;
		return utils.unitTestId(this.typeName.toLowerCase(), this.options.index);
	},
	computeLayout: function(context) {
		if (!this.children) return;
		this.children.forEach(function(child) {
			if (child.computeLayout) {
				child.computeLayout(context);
			}
		});
	},
	// Only hub layout is able to scroll
	getGestureMgr: function() {
		return null;
	},

	isLayout: function() {
		return true;
	}
});