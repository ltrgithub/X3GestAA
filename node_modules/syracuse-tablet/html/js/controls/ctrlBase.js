"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var Base = require('syracuse-tablet/html/js/controls/structElmt').Klass;
var BuilderCtrlHtml = require('syracuse-tablet/html/js/controls/builderCtrlHtml').BuilderCtrlHtml;
var uiUtils = require('syracuse-tablet/html/js/ui/uiUtils');

/**
 * Default ctrl html  - Just the value embedded into a div
 */
var _Klass = utils.defineClass(

	function(controller, article, prototype) {
		var self = this;
		self.prototype = prototype;
		Base.call(self, controller, prototype.data('$type'), article);
		self.ensureEditMode();
	}, Base, {
		ensureEditMode: function() {
			if (!this.$isEditMode) {
				this.$isEditMode = this.article.$isEditMode;
			}
			if (!this.$isEditMode) {
				// TODO get page facet property
			}
		},
		defaultDisplayOptions: function() {
			var self = this;
			return {
				cssDefCtrl: ["s-m-control", "s-m-" + self.typeName + "-ctrl"]
			};
		},
		destroy: function() {
			var self = this;
			self.prototype = null;
			Base.prototype.destroy.call(self);
		},
		buildHtml: function(parent, controllerDao, buildOptions) {
			var self = this;
			var fieldSlot = uiUtils.createDomElement("div", ["sm-field-slot"], null, {
				"id": this.id
			});

			fieldSlot.appendChild(this.buildFieldTitle(buildOptions));
			fieldSlot.appendChild(this.buildFieldCore(controllerDao, buildOptions));

			parent.appendChild(fieldSlot);
		},
		buildFieldTitle: function(buildOptions) {
			return uiUtils.createDomElement("div", ["sm-field-title"], this.prototype.property(this.article.$bind).$title);
		},
		buildFieldCore: function(controllerDao, buildOptions) {
			var fieldCore = uiUtils.createDomElement("div", ["sm-field-core"]);
			var fieldValueSlot = uiUtils.createDomElement("div", ["sm-field-value-slot"]);
			var fieldValue = uiUtils.createDomElement("div", ["sm-field-value"]);
			fieldValueSlot.appendChild(fieldValue);
			fieldCore.appendChild(fieldValueSlot);

			fieldValue.appendChild(this.buildFieldValue(controllerDao, buildOptions));
			return fieldCore;
		},
		buildFieldValue: function(controllerDao, buildOptions) {
			if (controllerDao) {
				if (!controllerDao.getDisplayValue) throw new Error("BuildHtml - dao is expected for data parameter");
			}

			if (this.$isEditMode) {
				return uiUtils.createDomElement("input", ["sm-field-input", "form-control"], null, {
					"type": "text",
					"value": controllerDao.getDisplayValue(this.article.$bind)
				});
			} else {
				return uiUtils.createDomElement("div", ["sm-field-value-read"], controllerDao.getDisplayValue(this.article.$bind));
			}
		}
	}
);

exports.Klass = _Klass;