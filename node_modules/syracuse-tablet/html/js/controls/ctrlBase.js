"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var Base = require('syracuse-tablet/html/js/controls/structElmt').Klass;
/**
 * PROPOSAL OF FIELD AUTHORING
 * {
 * "$bind": "$title",
 * “$tablet”:{
 * 		$value:{
 * 			$theme:"A","B"...,
 * 			$beforelabel:true/false,
 * 			$isTitleHidden:true/false,
 * 			$position: "stack"/"center"/"right",
 * 			$fontStyle: "b"/"i"/"u", "bu"/"ubi" is allowed
 * 			$fontSize: "small"/"medium"/"large",
 * 			$expression:"{FieldA} + {FieldB}",
 * 			$refDescrHidden: true/false
 * 			$refdescr : {
 * 				$theme:,
 *  			$fontStyle:,
 * 				$fontSize:
 * 			}
 * 		},
 * 		$label:{
 * 			…
 * 		},
 * Plateform/Device properties for android that override general properties (if any)
 * 		$android:{ $value: {}, $label: {}},
 * 		$android-sm:{ General properties for android small devices},
 * 		$android-sm-portrait:{ General properties for android small devices portrait},
 * 		$android-sm-landcsape:{ General properties for android small devices landcsape},
 * 		$ios:{}…
 * }
 */


/**
 * Used to generate the html of control Icon/Button
 * generate a link and call cb to get the content of the control (icon/button...)
 * cb	Add html text to html param
 */
var _genHtmlCtrlLink = function(proto, options, cb) {
	options = options || {};
	var html = [];
	var url = proto.data("$url");
	var tag = options.tag || 'a';
	var css = options.css || 'a';
	if (url && url.length) {
		html.push('<');
		html.push(tag);
		html.push(' href="' + url + '"');
		if (css) {
			html.push(' class="' + css + '"');
		}
		html.push('>');
	} else {
		// attributes for data-nav or data-action
		var action = proto.data("$action") || self.prototype.data("$navigation");
		if (action) {
			html.push('<');
			html.push(tag);
			html.push(' href="*"');
			for (var p in action) {
				html.push(' ' + p + '="' + encodeURIComponent(action[p]) + '"');
			}
			if (css) {
				html.push(' class="' + css + '"');
			}
			html.push('>');
		}
	}
	if (cb) cb(html);
	if (html.length > 1) {
		html.push('</');
		html.push(tag);
		html.push('>');
	}
	return html.join('');
};

/**
 * Default ctrl html  - Just the value embedded into a div
 * 	options:	Passed to create Control by creator
 * 	TODO - Remove this class if not used
 */
var _Klass = utils.defineClass(

	function(controller, article, prototype, options) {
		var self = this;
		options = options || {};
		self.prototype = prototype;
		self.$bind = article.$bind;
		Base.call(self, controller, prototype.data('$type'), article, options);
		self.$isEditMode = controller.isEditMode() && article.$isEditMode !== false && options.isGridCell !== true;
	}, Base, {
		destroy: function() {
			var self = this;
			self.prototype = null;
			Base.prototype.destroy.call(self);
		}
	}
);

exports.genHtmlCtrlLink = _genHtmlCtrlLink;
exports.Klass = _Klass;