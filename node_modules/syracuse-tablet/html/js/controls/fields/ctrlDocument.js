"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var Base = require('syracuse-tablet/html/js/controls/fields/ctrlFieldBase').CtrlFieldBase;
var uiUtils = require('syracuse-tablet/html/js/ui/uiUtils');
var fontUtils = require('syracuse-tablet/html/js/ui/fontUtils');

/**
 * Binary and document field. For moment quite same later ???
 * authoring:
 * 		$imgHeight	set the height of the image - xsmall, small...
 */
exports.CtrlDocument = utils.defineClass(

	function CtrlDocument(controller, article, prototype, options) {
		options = options || {};
		options.nativeCapabilities = null;
		Base.call(this, controller, article, prototype, options);
		// Add cssType in root element
		this.cssType = "s-m-document";
	}, Base, {

		initReuseProperties: function() {
			Base.prototype.initReuseProperties.call(this);
			this.$$layout = null;
		},

		applyMetaData: function(metaData, buildOptions) {
			Base.prototype.applyMetaData.call(this, metaData, buildOptions);
			if (this.$isEditMode && this.$$layout) {
				var disabled = metaData ? metaData.$isReadOnly || metaData.$isDisabled : false;
			}
		},

		buildFieldValue: function() {
			this._ensure$$value();
			this._clear$$value();
			var docUrl = this.controller.getValue(this.$bind) || "";
			docUrl = docUrl && (docUrl + '?salt=' + ((new Date()).getTime()));

			var empty = docUrl.length === 0;
			if (empty) {
				this.$$value.addClass("s-m-empty");
			} else {
				var classcss = ["img-responsive", this._getIcon()];
				var e = uiUtils.createDomElement("span", classcss, null, {
					"href": "#",
					"data-nevent": "",
					"data-nevent-ctrl-click": ""
				}, this.$$value);
			}
		},
		onClick: function(evt) {
			var dom = evt.target.parentNode;
			var parentDom;
			this._openDocument();
		},
		_openDocument: function() {
			var docUrl = this.controller.getValue(this.$bind) || "";
			var empty = docUrl.length === 0;
			if (!empty) {
				window.open(docUrl, "_blank");
			}
		},
		_getIcon: function() {
			return fontUtils.documentFieldIcon();
		}
	});

exports.CtrlBinary = utils.defineClass(
	function CtrlBinary(controller, article, prototype, options) {
		var self = this;
		exports.CtrlDocument.call(self, controller, article, prototype, options);
		self.cssType = "s-m-binary";
	}, exports.Document, {
		_getIcon: function() {
			return fontUtils.binaryFieldIcon();
		},
	});