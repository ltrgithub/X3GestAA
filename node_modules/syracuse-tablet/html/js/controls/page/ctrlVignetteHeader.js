"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var globals = require('syracuse-tablet/html/js/helpers/globals');
var Base = require('syracuse-tablet/html/js/controls/page/ctrlHeaderBase').Klass;
var notifications = require('syracuse-tablet/html/js/helpers/notifications');

/**
 * Header displayed when a vignette is pinned (action triggering is enabled)
 */
var _Klass = utils.defineClass(

	function CtrlVignetteHeader($type, vignette, options) {
		options = options || {};
		this._vignette = vignette;
		options.freshness = this._vignette.getPage() != null && this._vignette.getPage().dao != null;
		Base.call(this, $type, vignette.controller, options);
	}, Base, {

		destroy: function() {
			Base.prototype.destroy.call(this);
			this._vignette = null;
		},

		buildHtml: function($$parent, controllerDao, buildOptions) {
			Base.prototype.buildHtml.call(this, $$parent, controllerDao, buildOptions);
			// Update drafts menu item - Vignette header is created on demand and has not been notified previouly
			globals.getStorage().draftOperation("draftNotifyChanged");
		},

		getHeaderOptions: function(buildOptions) {
			//buildOpts are the one of the dashboard - #7932
			var opts = $.extend(true, {}, this.options.buildOpts);
			opts.forceRefresh = true;
			opts.multiSelectionOnly = this.options.multiSelectionOnly === true;
			opts.showUserpanel = true;
			opts.showDrafts = true;
			return opts;
		},

		getActionController: function() {
			return this._vignette.getPage();
		},

		/**
		 * Called after the header has been attached
		 * Enable multiselection
		 */
		notifToggled: function(shown) {
			Base.prototype.notifToggled.call(this, shown);
			if (shown !== true) return;
			if (this._multiSelManager) {
				this.toggleMultiSelection();
			}
			if (this.options.freshness == true) {
				notifications.publish("sm.data.freshness.change", this._vignette.getPage().dao.dataFreshness());
			}
		}

	});

exports.Klass = _Klass;