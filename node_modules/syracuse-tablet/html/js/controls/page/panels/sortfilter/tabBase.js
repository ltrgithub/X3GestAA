"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');

/**
 * Base tab
 */
var _Klass = utils.defineClass(
	function(panel, id, options) {
		this.id = id;
		this.options = options || {};
		this.panel = panel;
		this.$$tab = this.panel.$$panel.find('[href="#' + id + '"]');
		this.$$btnBar = this.panel.$$panel.find('.tab-content > .btn-group');
		this.$$content = this.panel.$$panel.find('#' + this.id);
		if (this.isHidden()) {
			this.$$tab.parent().hide();
			this.$$content.hide();
		} else {
			this.$$tab.on('shown.bs.tab', utils.bindFn(this.onTabShown, this));
			this.$$tab.on('hidden.bs.tab', utils.bindFn(this.onTabHidden, this));
			this.$$btnBar.on('click', '[data-params]', utils.bindFn(this.onBtnBarClick, this));
			if (this.options.isActive) {
				var self = this;
				window.setTimeout(function() {
					self.activate(true);
				});
			}
		}
	}, null, {
		destroy: function() {
			this.panel = null;
			utils.unbindObj(this.$$tab);
			this.$$tab = null;
			utils.unbindObj(this.$$content);
			this.$$content = null;
			utils.unbindObj(this.$$btnBar);
			this.$$btnBar = null;
		},
		isHidden: function() {
			return this.options.hidden === true;
		},
		isActive: function() {
			return this.$$tab.hasClass("active");
		},
		activate: function(yes) {
			this.$$tab.tab(yes != false ? 'show' : 'hide');
		},
		setAlone: function() {
			this.$$tab.parent().width("100%");
		},
		onTabShown: function(event) {
			if (this.$$content.is(':empty')) {
				this.$$content.append(this.buildHtml());
				this.$$content.on("click", '[data-params]', utils.bindFn(this.onTabContentClick, this));
			}
		},
		onTabHidden: function(event) {},
		/**
		 * When the panel is detached/attached to main page
		 */
		notifyToggled: function(side, action, visible) {},
		buildHtml: function() {},
		onTabContentClick: function(evt) {
			evt.preventDefault();
			evt.stopPropagation();
			var $$target = $(evt.target);
			var params = $$target.attr("data-params");
			if (params === "apply") {
				if (this.apply(evt, $$target) === true) {
					this.close();
				}
				return;
			}
			this.doAction(evt, $$target, params);
		},
		onBtnBarClick: function(evt) {
			evt.preventDefault();
			evt.stopPropagation();
			var $$target = $(evt.target);
			var params = $$target.attr("data-params");
			switch (params) {
				case "apply":
					if (this.apply(evt, $$target) === true) {
						this.close();
					}
					break;
				case "close":
					this.close();
					break;
			}
		},
		/**
		 * Action other than save/close
		 */
		doAction: function(evt, $$target, params) {},
		/**
		 * Called on ok/save buttopn - return true to close the panel
		 */
		apply: function(evt, $$target) {},
		close: function() {
			this.panel.close();
		},
		onResize: function() {}
	});

exports.Klass = _Klass;