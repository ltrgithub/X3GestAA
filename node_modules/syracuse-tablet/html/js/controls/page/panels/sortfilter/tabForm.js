"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var utils = require('syracuse-tablet/html/js/helpers/utils');
var formController = require('syracuse-tablet/html/js/helpers/formController');
var Base = require('syracuse-tablet/html/js/controls/page/panels/sortfilter/tabBase').Klass;
var uiRect = require('syracuse-tablet/html/js/ui/rect');
var HammerScroller = require('syracuse-tablet/html/js/helpers/hammerScroller').Klass;
var articleParser = require('syracuse-tablet/html/js/helpers/articleParser');
var prototype = require('syracuse-tablet/html/js/helpers/prototype');
var daoSdata = require('syracuse-tablet/html/js/application/daoSdata');


var _templates = {
	main: '\
		<div class="s-m-scroll-wrapper">\
			<div id="formtabroot"/>\
		</div>'
};

var protoJson = {
	$typ: "card",
	$links: {},
	"$properties": {
		"CODE": {
			"$title": "Code",
			"$type": "application/x-integer",
			"$isMandatory": true,
			"$maxLength": 4
		},
		"TEXTE": {
			"$title": "Texte",
			"$type": "application/x-string",
			"$maxLength": 20
		},
		"CUR": {
			"$type": "application/x-string",
			"$maxLength": 3,
			"$isExcluded": true
		},
		"CUR_REF": {
			"$title": "Currency",
			"$type": "application/x-reference",
			"$item": {
				"$url": "{$baseUrl}/TABCUR('{$key}')?representation=TABCURM.$lookup",
				"$value": "{CUR}",
				"$key": "{CUR}",
				"$properties": {
					"CUR": {
						"$type": "application/x-string"
					}
				},
				"CUR": "{CUR}",
				"$links": {
					"$lookup": {
						"$title": "{@6109}",
						"$type": "application/json;vnd.sage=syracuse",
						"$url": "{$baseUrl}/TABCUR?representation=TABCURM.$lookup",
						"$method": "GET"
					}
				}
			}
		},
		"TDATE": {
			"$title": "Date",
			"$type": "application/x-date"
		},
		"CPY": {
			"$type": "application/x-string",
			"$maxLength": 5,
			"$isExcluded": true
		},
		"CPY_REF": {
			"$title": "Company",
			"$type": "application/x-reference",
			"$item": {
				"$url": "{$baseUrl}/COMPANY('{$key}')?representation=COMPANYM.$lookup",
				"$value": "{CPY}",
				"$key": "{CPY}",
				"$properties": {
					"CPY": {
						"$type": "application/x-string"
					}
				},
				"CPY": "{CPY}",
				"$links": {
					"$lookup": {
						"$title": "{@6109}",
						"$type": "application/json;vnd.sage=syracuse",
						"$url": "{$baseUrl}/COMPANY?representation=COMPANYM.$lookup",
						"$method": "GET"
					}
				}
			}
		},
		"SITE": {
			"$type": "application/x-string",
			"$maxLength": 5,
			"$isExcluded": true
		},
		"SITE_REF": {
			"$title": "Site",
			"$type": "application/x-reference",
			"$isMandatory": true,
			"$item": {
				"$url": "{$baseUrl}/FACILITY('{$key}')?representation=FACILITYM.$lookup",
				"$value": "{FCY}",
				"$key": "{FCY}",
				"$properties": {
					"FCY": {
						"$type": "application/x-string"
					}
				},
				"FCY": "{SITE}",
				"$links": {
					"$lookup": {
						"$title": "{@6109}",
						"$type": "application/json;vnd.sage=syracuse",
						"$url": "{$baseUrl}/FACILITY?representation=FACILITYM.$lookup",
						"$method": "GET"
					}
				}
			}
		},
		"MODULE": {
			"$title": "Module",
			"$type": "application/x-choice",
			"$capabilities": "sort,filter",
			"$value": {
				"$type": "application/x-integer",
				"$enum": [{
					"$value": 1,
					"$title": "{@mes14_1}"
				}, {
					"$value": 2,
					"$title": "{@mes14_2}"
				}, {
					"$value": 3,
					"$title": "{@mes14_3}"
				}, {
					"$value": 4,
					"$title": "{@mes14_4}"
				}, {
					"$value": 5,
					"$title": "{@mes14_5}"
				}, {
					"$value": 6,
					"$title": "{@mes14_6}"
				}, {
					"$value": 7,
					"$title": "{@mes14_7}"
				}, {
					"$value": 8,
					"$title": "{@mes14_8}"
				}, {
					"$value": 9,
					"$title": "{@mes14_9}"
				}, {
					"$value": 10,
					"$title": "{@mes14_10}"
				}]
			}
		}
	},
	"$localization": {
		"@mes14_1": "Tronc commun",
		"@mes14_2": "Interne superviseur",
		"@mes14_3": "Interface compta",
		"@mes14_4": "Pièces automatiques",
		"@mes14_5": "Requêteur",
		"@mes14_6": "Traductions",
		"@mes14_7": "Pyramides",
		"@mes14_8": "A réutiliser",
		"@mes14_9": "Développement",
		"@mes14_10": "Spécial Produits"
	}
};
var dataJson = {
	"CODE": 122,
	"CODECHR": "12484-Key",
	"CPY": "ADX",
	"CPY_REF": {
		"$title": "",
		"$description": "Adonix"
	},
	"CUR": "EUR",
	"CUR_REF": {
		"$title": "Euro",
		"$description": "EURO euro",
		"$symbol": "€",
		"$scale": 2,
		"$precision": 11
	},
	"SITE": "ASN",
	"SITE_REF": {
		"$title": "",
		"$description": "Asnières"
	},
	"TDATE": "2015-01-08",
	"TEXTE": "Text de la clé 12484",
	"$properties": {
		"SITE": {
			"$isMandatory": true
		},
		"CUR": {
			"$x3Format": ""
		},
		"CODE": {
			"$isMandatory": true
		}
	},
	"MODULE": 0
};
var _getHtml = function(name, ctx) {
	var key = name + "compiled";
	var tmpl = _templates[key];
	if (!tmpl) {
		tmpl = _templates[key] = Handlebars.compile(_templates[name]);
	}
	return tmpl(ctx);
};
/**
 * Sort tab
 */
var _Klass = utils.defineClass(
	function(panel, id, options) {
		Base.call(this, panel, id, options);
		if (this._gestureMgr) {
			this._gestureMgr.destroy();
		}
		this.$$content.append($(_getHtml("main", {})));
		// Create gesture mgr
		this.$$scrollWrapper = this.$$content.find(".s-m-scroll-wrapper");
		this.$$ScrollElmt = this.$$scrollWrapper.children("#formtabroot");
		this.$$ScrollElmt.css({
			height: "auto",
			position: "relative"
		});
		this._gestureMgr = new HammerScroller(this.$$ScrollElmt, {
			direction: "v",
			valMax: 0,
			name: "FORMTAB",
			isPageScroller: false
		});
	}, Base, {
		destroy: function() {
			Base.prototype.destroy.call(this);
			if (this._gestureMgr) {
				this._gestureMgr.destroy();
				this._gestureMgr = null;
			}
		},
		onResize: function() {
			Base.prototype.onResize.call(this);
			if (this.$$content.is(':visible')) {
				this.updateGesture();
			}
		},
		updateGesture: function() {
			if (!this._gestureMgr) return;
			var wrapperRect = uiRect.elmtRect(this.$$scrollWrapper, "outer");
			var panelRect = uiRect.elmtRect(this.panel.$$elmt, "outer");
			var viewRect = wrapperRect.intersectRect(panelRect);
			if (viewRect && !viewRect.contains(wrapperRect)) {
				this._gestureMgr.init(viewRect);
			} else {
				this._gestureMgr.reset();
			}
		},
		/**
		 * Tab becomes Active - we create content
		 */
		onTabShown: function() {
			Base.prototype.onTabShown.call(this);
			if (this.$$ScrollElmt.is(":empty")) {
				var array = this.panel.getParentArray();
				var proto = formController.createProto(protoJson, null, array.prototype.data("$baseUrl"));
				var dao = new daoSdata.Dao(dataJson, proto);
				this.controller = new formController.Klass("TESTFORMTAB", proto, null, dao, {
					$activity: "edit"
				});
				this.controller.render(this.$$ScrollElmt, {});
				this.updateGesture();
			}
		},
		/**
		 * Notification of a lookup selection
		 */
		notifLookupSelection: function(controlId, rowData) {
			this.$$content.find('#' + controlId).val(rowData.$value);
		},
		getControl: function(id) {
			return this.controller && this.controller.controlsMap[id];
		}
	});

exports.Klass = _Klass;