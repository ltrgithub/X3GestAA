"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var Base = require('syracuse-tablet/html/js/controls/page/panels/sidePanel').Klass;

var _templates = {
	header: '\
		<div class="header">\
		<buttons class="pull-right"> \
			<button type="button" class="btn btn-default s-m-modal-btn-cancel" data-control-id="{{ctrlId}}" data-action="cancel"></button>\
		</buttons> \
		<div class="modal-title">{{title}}</div> \
		</div>\
		'
};
var _getHtml = function(name, ctx) {
	var key = name + "compiled";
	var tmpl = _templates[key];
	if (!tmpl) {
		tmpl = _templates[key] = Handlebars.compile(_templates[name]);
	}
	if (!tmpl) alert("template " + name + " not found");
	return tmpl(ctx);
};
/**
 * Base left/right panel control for dashBoards and regular pages
 * 	Adapted from Metro Bootstrap navbar-side
 */
var _Klass = utils.defineClass(

	function(controller, $type, panelId, options) {
		options = options || {};
		options.enableGesture = true;
		Base.call(this, controller, $type, panelId, options);
	}, Base, {

		buildHtml: function(side, title) {
			Base.prototype.buildHtml.call(this, side);
			this.$$elmt.addClass("s-m-dialogPanel");
			if (this.$$header) {
				this.$$header.remove();
			}
			var ctx = {
				side: side,
				ctrlId: this.id,
				title: title
			};
			this.$$header = this.buildHeader(ctx);
			if (this.$$header && this.$$header.length) {
				this.$$elmt.append(this.$$header);
			}
		},
		buildHeader: function(ctx) {
			return $(_getHtml("header", ctx));
		},
		isEnabled: function() {
			return true;
		},
		_actCancel: function() {
			this.close();
		},
		_actValidate: function() {
			this.close();
		},
		onClick: function(evt) {
			return true;
		},
		// To allow display
		hasLinks: function() {
			return true;
		},
		/**
		 * dialogpanel class to adapt the with for dialog panel
		 */
		attach: function($$parent, side) {
			Base.prototype.attach.call(this, $$parent, side);
			$$parent.addClass("dialogpanel");
		},
		detach: function() {
			if (this.$$elmt) {
				this.$$elmt.parent().removeClass("dialogpanel");
			}
			Base.prototype.detach.call(this);
		}
	});

exports.Klass = _Klass;