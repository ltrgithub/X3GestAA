"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var Base = require('syracuse-tablet/html/js/controls/ctrlBase').Klass;
var prototype = require('syracuse-tablet/html/js/helpers/prototype');
var globals = require('syracuse-tablet/html/js/helpers/globals');
var eventListener = require('syracuse-tablet/html/js/application/eventListener');

/**
 * Base left/right panel control for dashBoards and regular pages
 * 	Adapted from Metro Bootstrap navbar-side
 */
var _Klass = utils.defineClass(

	function(controller, $type, panelId, options) {
		this.panelId = panelId;
		// Close on click by default
		this.closeBox = options.closeBox === true;
		// Overlap by default
		this.overlap = options.overlap !== false;
		Base.call(this, controller, {
			$bind: this.panelId + "panel"
		}, prototype.create({
			$type: $type
		}), options);
	}, Base, {
		destroy: function() {
			Base.prototype.destroy.call(this);
		},
		/**
		 * Build doesn't attach $$elmt to a parent - see attach/detach
		 */
		buildHtml: function(side) {
			this.side = side;
			Base.prototype.buildHtml.call(this, null, this.controller.dao, {}, [this.typeName]);
			this.$$elmt.hide();
		},
		attach: function($$parent, side) {
			if (this.$$elmt && (this.side != null && side != this.side)) {
				this.$$elmt.remove();
				this.$$elmt = null;
			}
			if (!this.$$elmt) {
				this.buildHtml(side);
			};
			if (this.isAttached()) {
				console.log("sidePanel.attach - Unexpected attached $$elmt");
				this.detach();
			}
			if (!$$parent) return;
			$$parent.append(this.$$elmt);
		},
		isAttached: function(side) {
			return this.$$elmt != null && this.$$elmt.parent() != null && this.side == side;
		},
		detach: function() {
			if (!this.$$elmt) return;
			this.$$elmt.detach();
		},
		isEnabled: function() {
			return true;
		},
		/**
		 * Notified by page when toggled
		 */
		notifyToggled: function(side, action, visible) {},
		applyMetaData: function(metaData) {
			//  No meta for this control 
			return;
		},
		onClick: function(evt) {
			this.close();
		},
		// Trigger evt to let page manage the close and all additional actions
		close: function() {
			eventListener.triggerAction(this.$$elmt, "toggleSidePanel", "close," + this.side);
		}
	});

exports.Klass = _Klass;