"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var Base = require('syracuse-tablet/html/js/controls/ctrlBase').Klass;
var prototype = require('syracuse-tablet/html/js/helpers/prototype');
var globals = require('syracuse-tablet/html/js/helpers/globals');

/**
 * Base left/right panel control for dashBoards and regular pages
 * 	Adapted from Metro Bootstrap navbar-side
 */
var _Klass = utils.defineClass(

	function(controller, $type, side, options) {
		if (["left", "right"].indexOf(side) < 0) throw new Error("side panel - Unexpected side");
		this.side = side;
		Base.call(this, controller, {
			$bind: side + "panel"
		}, prototype.create({
			$type: $type
		}), options);
	}, Base, {

		destroy: function() {
			Base.prototype.destroy.call(this);
		},
		buildHtml: function($$parent, controllerDao, buildOptions) {
			this.buildOptions = buildOptions.sidePanel || {};
			Base.prototype.buildHtml.call(this, $$parent, controllerDao, buildOptions, [this.typeName]);
			this.$$elmt.hide();
		},
		applyMetaData: function(metaData) {
			//  No meta for this control 
			return;
		},
		setPanel: function($$panel) {
			this.$$panel = $$panel;
			$$panel.appendTo(this.$$elmt);
		},
		/**
		 * Toggle the panel
		 * 	action: toggle(click button footer), close(click dismiss) or resize (click resize icon inside the panel)
		 * 	callBack: shift the content for left panel
		 * 	This action is called by footer action and also by toggle data-action
		 */
		toggle: function(action, callBack) {
			// TODO - Do not call toggle if panel has not initialized - see test dashboards
			if (!this.$$elmt || !this.$$panel) return;
			var width = this.$$panel.width();
			// close -> Force hide - resize -> stay visible - toggle -> toggle
			this.$$elmt.toggle(action === "close" ? false : action === "resize" ? true : action === "toggle" ? undefined : undefined);
			var newWidth = this.$$elmt.is(':visible') === true ? width : 0;
			if (callBack) {
				callBack(newWidth);
			}
			// Dismiss 
			var dismiss = this.controller.$$elmt.children(".s-m-side-panel-dismiss");
			dismiss[newWidth > 0 ? "addClass" : "removeClass"](this.side);
			dismiss.css(this.side, newWidth);
		},
		onClick: function(evt) {
			this.close();
		},
		// Trigger evt to let page manage the close and all additional actions
		close: function() {
			eventListener.triggerAction(this.$$elmt, "sidePanel", "close," + this.side);
		}
	});

exports.Klass = _Klass;