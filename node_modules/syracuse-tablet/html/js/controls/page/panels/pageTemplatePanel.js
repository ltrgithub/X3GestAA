"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var Base = require('syracuse-tablet/html/js/controls/page/panels/dialogPanel').Klass;
var fontUtils = require('syracuse-tablet/html/js/ui/fontUtils');
var locale = require('syracuse-tablet/html/js/helpers/locale');
var selectorFactory = require('syracuse-tablet/html/js/ui/selectorFactory');
var notifications = require('syracuse-tablet/html/js/helpers/notifications');
var jsutils = require('syracuse-tablet/html/js/helpers/jsutils');
var authPropsGeneral = require('syracuse-tablet/html/js/authoring/authoringPropertiesGeneral');
var authComponents = require('syracuse-tablet/html/js/authoring/authoringComponents');
var formatApi = require('syracuse-tablet/html/js/helpers/formatApi');
var locale = require('syracuse-tablet/html/js/helpers/locale');

var _templates = {
	main: '\
			<nav class="navbar s-m-side-panel {{side}} navbar-inverse" role="navigation">\
				<div class="s-m-scroll-elmt">\
				<\div>\
			</nav>',
};
var _getHtml = function(name, ctx) {
	var key = name + "compiled";
	var tmpl = _templates[key];
	if (!tmpl) {
		tmpl = _templates[key] = Handlebars.compile(_templates[name]);
	}
	if (!tmpl) alert("template " + name + " not found");
	return tmpl(ctx);
};

var _Klass = utils.defineClass(

	function(controller, $type, panelId, options) {
		Base.call(this, controller, $type, panelId, options);
	}, Base, {
		buildHtml: function(side) {
			var self = this;
			this._context = this._getContext();
			Base.prototype.buildHtml.call(this, side, this._context.title);
			if (this.$$panel) {
				this.$$panel.remove();
			}
			this.$$panel = this.buildPanel(this._context);
			if (this.$$panel && this.$$panel.length) {
				this.$$elmt.append(this.$$panel);
			};
			this.$$panel.on('blur', "[mandatory]", jsutils.bindFn(this.onBlur, this));
		},
		/**
		 * Override this method to build child class
		 */
		buildPanel: function(context) {
			return $(_getHtml("main", context));
		}
	});

exports.Klass = _Klass;