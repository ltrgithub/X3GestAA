"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var Base = require('syracuse-tablet/html/js/controls/page/panels/sidePanel').Klass;
var notifications = require('syracuse-tablet/html/js/helpers/notifications');
var uiUtils = require('syracuse-tablet/html/js/ui/uiUtils');
var globals = require('syracuse-tablet/html/js/helpers/globals');
var fontUtils = require('syracuse-tablet/html/js/ui/fontUtils');

var _templates = {
	navigLink: '<li class="">\
		<a draggable="false"  href="#" data-action="switchApp" data-params="{{appName}}" data-control-id="{{ctrlId}}">\
			<i class="{{icon}}"></i>\
			&nbsp;\
			<span>{{title}}</span>\
		</a>\
	</li>'
};


var _getHtml = function(name, ctx) {
	var key = name + "compiled";
	var tmpl = _templates[key];
	if (!tmpl) {
		tmpl = _templates[key] = Handlebars.compile(_templates[name]);
	}
	return tmpl(ctx);
};

var _fail = function(e) {
	globals.getModal().error("Error loading applications", e);
};

/**
 * Regular page left panel
 */
var _Klass = utils.defineClass(

	function(controller, $type, options) {
		this._$$wait = null;
		Base.call(this, controller, $type, "left", options);
		this.appCount = 0;
	}, Base, {

		destroy: function() {
			Base.prototype.destroy.call(this);
			uiUtils.waitPluginDestroy(this._$$wait);
			this._$$wait = null;
		},

		buildAfterMainResize: function(context, pageInfo, orientation, deviceClass) {
			var self = this;
			try {
				var actionsHtml = [],
					curApp = globals.getApplication(),
					title;
				var meta = globals.getMetaData();
				meta.getApplications().then(function(apps) {
					apps.forEach(function(app) {
						var name = app.applicationName;
						var appInfo = app;
						if (curApp.uuid != appInfo.$uuid) {
							actionsHtml.push(_getHtml("navigLink", {
								title: appInfo.title || appInfo.description || appInfo.applicationName,
								icon: (appInfo.iconName && fontUtils.getIconByName(appInfo.iconName)) || fontUtils.getIconByName("briefcase"),
								appName: appInfo.applicationName,
								ctrlId: self.id
							}));
							self.appCount++;
						} else {
							title = appInfo.title || appInfo.applicationName;
						}
					});
					context.title = title || "Navigation";
					context.actionsHtml = actionsHtml.join('');
					Base.prototype.buildAfterMainResize.call(self, context, pageInfo, orientation, deviceClass);
				});
			} catch (e) {
				_fail(e);
			}
		},
		_actSwitchApp: function(appName) {
			var self = this;
			notifications.publish("sm.switch.app", appName);
		}
	});

exports.Klass = _Klass;