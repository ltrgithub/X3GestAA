"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var Base = require('syracuse-tablet/html/js/controls/page/panels/sidePanel').Klass;
var notifications = require('syracuse-tablet/html/js/helpers/notifications');
var uiUtils = require('syracuse-tablet/html/js/ui/uiUtils');
var globals = require('syracuse-tablet/html/js/helpers/globals');
var fontUtils = require('syracuse-tablet/html/js/ui/fontUtils');
var locale = require('syracuse-tablet/html/js/helpers/locale');
var eventListener = require('syracuse-tablet/html/js/application/eventListener');

var _templates = {
	main: '\
		<section class="s-m-side-panel {{side}}">\
		<header style="color:white;font-size:large">Query Arrays Sort-Filter</header>\
		</section>',
};

var _getHtml = function(name, ctx) {
	var key = name + "compiled";
	var tmpl = _templates[key];
	if (!tmpl) {
		tmpl = _templates[key] = Handlebars.compile(_templates[name]);
	}
	return tmpl(ctx);
};

/**
 * Arrays Sort/Filter panel
 */
var _Klass = utils.defineClass(
	function(controller, $type, panelId, options) {
		this._parentArray = options.parentArray;
		options.closeBox = true;
		Base.call(this, controller, $type, panelId, options);
	}, Base, {
		destroy: function() {
			Base.prototype.destroy.call(this);
			this._parentArray = null;
		},
		buildHtml: function(side) {
			Base.prototype.buildHtml.call(this, side);
			this.$$elmt.addClass(this.typeName);
			if (this._$$panel) {
				this._$$panel.remove();
			}
			this._$$panel = $(_getHtml("main", {
				ctrlId: this.id,
				side: side
			}));
			if (this._$$panel && this._$$panel.length) {
				this._$$panel.css("backgroundColor", "black");
				this.$$elmt.append(this._$$panel);
			}
		},
		_actLinkClicked: function(actionName) {
			/* triggering action */
			eventListener.triggerAction(this.$$elmt, actionName);
		}
	});

exports.Klass = _Klass;