"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var Base = require('syracuse-tablet/html/js/controls/page/panels/actionPanel').Klass;
var uiUtils = require('syracuse-tablet/html/js/ui/uiUtils');
var globals = require('syracuse-tablet/html/js/helpers/globals');
var fontUtils = require('syracuse-tablet/html/js/ui/fontUtils');
var locale = require('syracuse-tablet/html/js/helpers/locale');
var eventListener = require('syracuse-tablet/html/js/application/eventListener');

var _templates = {
	navigLink: '<li class="">\
		<a draggable="false"  href="#" data-action="{{action}}" data-params="{{params}}" data-control-id="{{ctrlId}}">\
			<i class="{{icon}}"></i>\
			&nbsp;\
			<span>{{title}}</span>\
		</a>\
	</li>'
};

// TODO
var _panelLinks = {
	home: {
		label: "header.sm.links.home",
		icon: "home",
		action: "gotoWelcomeApplication",
		target: "application"
	},
	switchContext: {
		label: "header.sm.links.switchContext",
		icon: "switchContext",
		params: "switchContext",
		action: "linkClicked",
		target: "panel"
	},
	clearCache: {
		label: "header.sm.links.clearCache",
		icon: "clearCache",
		action: "linkClicked",
		params: "clearCache",
		target: "panel"
	},
	about: {
		label: "header.sm.links.about",
		icon: "about",
		action: "linkClicked",
		params: "about",
		target: "panel"
	},
	logout: {
		label: "header.sm.links.logout",
		icon: "logout",
		action: "logout",
		target: "application"
	},
	development: {
		label: "header.links.development",
		icon: "developmentPage",
		action: "developmentPage",
		target: "application"
	}
};

var _getHtml = function(name, ctx) {
	var key = name + "compiled";
	var tmpl = _templates[key];
	if (!tmpl) {
		tmpl = _templates[key] = Handlebars.compile(_templates[name]);
	}
	return tmpl(ctx);
};

var _fail = function(e) {
	globals.getModal().error("Error loading applications", e);
};

/**
 * Regular page left panel
 */
var _Klass = utils.defineClass(

	function(controller, $type, options) {
		this._$$wait = null;
		Base.call(this, controller, $type, "left", options);
		this.appCount = 0;
	}, Base, {

		destroy: function() {
			Base.prototype.destroy.call(this);
			uiUtils.waitPluginDestroy(this._$$wait);
			this._$$wait = null;
		},

		buildAfterMainResize: function(context, pageInfo, orientation, deviceClass) {
			var self = this;
			try {
				var actionsHtml = [],
					curApp = globals.getApplication(),
					title;
				var isWelcomePage = globals.getCurrentPage().state.isWelcomePage;
				var keys = Object.keys(_panelLinks);
				keys.forEach(function(kk, idx) {
					// if isWelcomePage, home link is not necessary
					if (!globals.isDvlpMode() && kk === "development") return;
					if (!isWelcomePage || kk !== "home") {
						var link = _panelLinks[kk];
						actionsHtml.push(_getHtml("navigLink", {
							title: locale.text(link.label),
							action: link.action || "",
							params: link.params || "",
							icon: fontUtils.pageIcon(link.icon),
							ctrlId: link.target === "panel" ? self.id : null
						}));
					}
				});

				context.title = globals.getUserName();
				context.actionsHtml = actionsHtml.join('');
				Base.prototype.buildAfterMainResize.call(self, context, pageInfo, orientation, deviceClass);
			} catch (e) {
				_fail(e);
			}
		},
		_actLinkClicked: function(actionName) {
			/* triggering action */
			eventListener.triggerAction(this.$$elmt, actionName);
		}
	});

exports.Klass = _Klass;