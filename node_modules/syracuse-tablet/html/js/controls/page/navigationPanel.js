"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var Base = require('syracuse-tablet/html/js/controls/page/ctrlSidePanel').Klass;
var settings = require('syracuse-tablet/html/js/application/settings');
var notifications = require('syracuse-tablet/html/js/helpers/notifications');
var uiUtils = require('syracuse-tablet/html/js/ui/uiUtils');
var globals = require('syracuse-tablet/html/js/helpers/globals');
var fontUtils = require('syracuse-tablet/html/js/ui/fontUtils');

var _templates = {
	navigLink: '<li class=""><a href="#" data-action="switchApp" data-params="{{$uuid}}" data-control-id="{{ctrlId}}"><i class="{{icon}}"></i>&nbsp;<span>{{title}}</span></a></li>'
};


var _getHtml = function(name, ctx) {
	var key = name + "compiled";
	var tmpl = _templates[key];
	if (!tmpl) {
		tmpl = _templates[key] = Handlebars.compile(_templates[name]);
	}
	return tmpl(ctx);
};

var _fail = function(e) {
	utils.modalError("Error loading applications", e);
};

/**
 * Regular page left panel
 */
var _Klass = utils.defineClass(

	function(controller, $type, options) {
		var self = this;
		self.appList = null;
		self._$$wait = null;
		Base.call(self, controller, $type, "left", options);
	}, Base, {

		destroy: function() {
			var self = this;
			Base.prototype.destroy.call(self);
			uiUtils.waitPluginDestroy(self._$$wait);
			self._$$wait = null;
			self.appList = null;
		},

		buildHtml: function($$parent, controllerDao, buildOptions) {
			var self = this;
			var curApp = globals.getApplication(),
				title;

			self.deferred = $.smResolve().then(function() {
				return settings.getMyApplications().then(function(data) {
					try {
						var actionsHtml = [];
						self.appList = data || [];
						if (self.appList.length == 0) return;
						self.appList.forEach(function(app, idx) {
							if (curApp.uuid != app.$uuid) {
								actionsHtml.push(_getHtml("navigLink", {
									title: app.title || app.description || app.applicationName,
									// TODO - Add icon in application
									icon: (app.iconName && fontUtils.getIconByName(app.iconName)) || fontUtils.getIconByName("briefcase"),
									$uuid: app.$uuid,
									ctrlId: self.id
								}));
							} else {
								title = app.applicationName;
							}
						});
						var context = {
							title: title || "Navigation",
							actionsHtml: actionsHtml.join('')
						};
						Base.prototype.buildHtml.call(self, $$parent, context);
					} catch (e) {
						_fail(e);
					}
				});
			});
		},

		afterRender: function() {
			var self = this;
			if (self.deferred) {
				// Build Html is asynchronous so we need a deferred
				self.deferred.then(function() {
					// TODO - if isWelcomeApp isMobileAppHomePage
					var isWelcomeApp = false; // Displays nothing
					var isMobileAppHomePage = false; // Displays link to welcome home
					//otherwise we display a home button in footer if only one application in list
					self.publishReady(isWelcomeApp ? "" : isMobileAppHomePage ? "reload" : self.appList && self.appList.length > 1 ? "panel" : "home");
				}).fail(function(e) {
					_fail();
				});
				self.deferred = null;
			}
		},

		_actSwitchApp: function(uuid) {
			var self = this;
			if (!self.appList) return;
			var info;
			self.appList.some(function(x) {
				if (x.$uuid === uuid) {
					info = x;
					return true;
				}
			});
			if (!info) return;
			notifications.publish("sm.switch.app", info);
		}
	});

exports.Klass = _Klass;