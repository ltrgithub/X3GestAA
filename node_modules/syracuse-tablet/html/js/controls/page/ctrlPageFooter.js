"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var sdataUtils = require('syracuse-tablet/html/js/sdata/sdataUtils');
var Base = require('syracuse-tablet/html/js/controls/structElmt').Klass;
var modal = require('syracuse-tablet/html/js/ui/modal');
var globals = require('syracuse-tablet/html/js/helpers/globals');
var dispatcher = require('syracuse-tablet/html/js/sdata/sdataDispatcher');
var sdataUtils = require('syracuse-tablet/html/js/sdata/sdataUtils');
var ActionManager = require('syracuse-tablet/html/js/controls/page/actionManager').Klass;

var _templates = {
	main: '\
		<div id="{{ctrlId}} class="s-m-control"> \
			<nav class="navbar navbar-inverse navbar-fixed-bottom" role="navigation">\
				<div class="container-fluid">\
					<ul class="nav navbar-nav">\
						<li style="display:none">\
							<a href="#" data-action="sidePanel"  data-params="toggle,left">\
								<span class="glyphicon glyphicon-align-justify" />\
							</a>\
						</li>\
					</ul>\
					<ul class="nav navbar-nav navbar-right">\
						{{#each links}}\
							<li>\
								<a href="#" class="{{css}}" data-action="footerLink" data-params="{{$uuid}}" data-control-id="{{../ctrlId}}">\
									<i style="font-size: large" class="{{icon}}"/>\
									<span>{{title}}</span>\
								</a>\
							</li>\
						{{/each}}\
						<li style="display:none">\
							<a href="#" data-action="sidePanel" data-params="toggle,right">\
								<span class="glyphicon glyphicon-align-justify" />\
							</a>\
						</li>\
					</ul>\
				</div>\
			</nav> \
		</div>'
};

var _getHtml = function(name, ctx) {
	var key = name + "compiled";
	var tmpl = _templates[key];
	if (!tmpl) {
		tmpl = _templates[key] = Handlebars.compile(_templates[name]);
	}
	return tmpl(ctx);
};

/**
 * Page header Generate Html
 */
var _Klass = utils.defineClass(

	function(controller, $type) {
		var self = this;
		Base.call(self, controller, $type);
	}, Base, {

		destroy: function() {
			var self = this;
			if (self.actionManager) self.actionManager.destroy();
			self.actionManager = null;
			Base.prototype.destroy.call(self);
		},

		buildHtml: function($$parent, controllerDao, buildOptions) {
			var self = this;
			self.actionManager = new ActionManager({
				$links: self.controller.prototype.getLinks(controllerDao, "visible"),
				noMessage: false
			});
			self.setRootElement(_getHtml("main", {
				ctrlId: self.id,
				links: self.actionManager.getLinks()
			}), $$parent);
		},

		enablePanel: function(panel) {
			var self = this;
			if (!self.$$elmt) return;
			// Show actions Show/Hide left/right panel if needed
			if (panel === "left") {
				self.$$elmt.find('[data-params="toggle,left"]').parent().show();
			}
			if (panel === "right") {
				self.$$elmt.find('[data-params="toggle,right"]').parent().show();
			}
		},

		_actFooterLink: function(uuid) {
			var self = this;
			self.actionManager.triggerLink(uuid).then(function() {

			}, function() {

			});
		}
	});

exports.Klass = _Klass;