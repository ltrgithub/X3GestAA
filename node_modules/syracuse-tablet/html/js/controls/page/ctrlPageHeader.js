"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var sdataUtils = require('syracuse-tablet/html/js/sdata/sdataUtils');
var Base = require('syracuse-tablet/html/js/controls/structElmt').Klass;
var globals = require('syracuse-tablet/html/js/helpers/globals');
var fontUtils = require('syracuse-tablet/html/js/ui/fontUtils');
var log = require('syracuse-tablet/html/js/helpers/logger').getLogger("pageHeader");
var notifications = require('syracuse-tablet/html/js/helpers/notifications');
var locale = require('syracuse-tablet/html/js/helpers/locale');
var eventListener = require('syracuse-tablet/html/js/application/eventListener');

var _templates = {
	main: '\
		<div id="{{ctrlId}} class="s-m-control"> \
			<div class="s-m-header container-fluid">\
				<div class="s-m-header-nav">\
					{{#if showHome}} \
						<a href="#" data-action="historyBack">\
							<span class="' + fontUtils.pageIcon("back") + '" />\
						</a>\
						<a href="#" data-action="gotoWelcomeApplication">\
							<span class="' + fontUtils.pageIcon("home") + '" />\
						</a>\
					{{/if}} \
				</div>\
				<div class="s-m-header-labels">\
					<div class="s-m-header-brand"><span class="s-m-brand">{{labelBrand}}</span> <span class="s-m-product">{{labelProduct}}</span></div>\
					<div class="s-m-header-appname">{{appName}}</div>\
				</div>\
				<div class="s-m-header-links">\
					<div class="dropdown">\
						<a href="#" data-toggle="dropdown" role="button" id="{{headerDropdownId}}" aria-haspopup="true" aria-expanded="false">\
							<div>\
								<span class="s-m-nav-text username">{{username}}</span>\
								<span class="s-m-nav-text userrole">{{userrole}}</span>\
							</div>\
							{{#if userPhotoUrl}}\
								<img src="{{userPhotoUrl}}">\
							{{else}}\
								<span class="' + fontUtils.pageIcon("switchContext") + '" />\
							{{/if}}\
						</a>\
						<ul class="dropdown-menu" role="menu" aria-labelledby="{{headerDropdownId}}">\
							{{#if showAuthoring}} \
								<li>\
									<a href="#" data-action="linkClicked" data-params="designPage" data-control-id="{{ctrlId}}" class="list-group-item">\
										<span class="' + fontUtils.pageIcon("designPage") + '" />\
										<span>{{labelDesignPage}}</span>\
									</a>\
								</li>\
							{{/if}} \
							{{#if showLinks}} \
								<li>\
									<a href="#" data-action="linkClicked" data-params="clearCache" data-control-id="{{ctrlId}}" class="list-group-item">\
										<span class="' + fontUtils.pageIcon("clearCache") + '" />\
										<span>{{labelClearCache}}</span>\
									</a>\
								</li>\
								<li>\
									<a href="#" data-action="linkClicked" data-params="switchContext" data-control-id="{{ctrlId}}" class="list-group-item"> \
										<span class="' + fontUtils.pageIcon("switchContext") + '" />\
										<span>{{labelSwitchContext}}</span>\
									</a>\
								</li>\
							{{/if}} \
						</ul>\
					</div>\
				</div>\
				<div class="s-m-header-search" style="display:none">\
					<form style="display:none" class="navbar-form navbar-right" role="search">\
						<div class="form-group input-group-sm"">\
							<input type="text" class="form-control" placeholder="Search">\
						</div>\
						<button type="submit" class="btn btn-success">\
							<span class="' + fontUtils.pageIcon("search") + '"></span>\
						</button>\
					</form>\
				</div>\
			</div>\
		</div>',
	mainMobile: '\
		<div id="{{ctrlId}} class="s-m-control"> \
			<div class="s-m-header container-fluid">\
				<div class="s-m-header-nav">\
					{{#if showHome}} \
						<a href="#" data-action="historyBack">\
							<span class="' + fontUtils.pageIcon("back") + '" />\
						</a>\
						<a href="#" data-action="gotoWelcomeApplication">\
							<span class="' + fontUtils.pageIcon("home") + '" />\
						</a>\
					{{/if}} \
				</div>\
				<div class="s-m-header-labels">\
					<div class="s-m-header-appname">{{appName}}</div>\
				</div>\
				<div class="s-m-header-links" mobile>\
					<a href="#"> \
						<span class="' + fontUtils.pageIcon("switchContext") + '" /><span class="s-m-nav-text">{{user}}</span>\
					</a>\
				</div>\
				<div class="s-m-header-search" style="display:none">\
					<form style="display:none" class="navbar-form navbar-right" role="search">\
						<div class="form-group input-group-sm"">\
							<input type="text" class="form-control" placeholder="Search">\
						</div>\
						<button type="submit" class="btn btn-success">\
							<span class="' + fontUtils.pageIcon("search") + '"></span>\
						</button>\
					</form>\
				</div>\
			</div>\
		</div>'
};

var _getHtml = function(name, ctx) {
	var key = name + "compiled";
	var tmpl = _templates[key];
	if (!tmpl) {
		tmpl = _templates[key] = Handlebars.compile(_templates[name]);
	}
	return tmpl(ctx);
};

/**
 * Page header Generate Html
 */
var _Klass = utils.defineClass(

	function(controller, $type) {
		var self = this;
		Base.call(self, controller, $type);
		notifications.subscribe(self, ["sm.main.layout.changed"]);
	}, Base, {

		destroy: function() {
			if (this.$$linksPicker) this.$$linksPicker.off("click");
			Base.prototype.destroy.call(this);
		},

		buildHtml: function($$parent, controllerDao, buildOptions) {
			var self = this;
			buildOptions = buildOptions.header || {};
			var _mainCtx = {
				labelBrand: buildOptions.labelBrand || "Sage",
				labelProduct: buildOptions.labelProduct || "ERP X3",
				appName: globals.getApplication().getTitle(),
				/*title: buildOptions.title || "Sage ERP X3 - Mobile",*/
				username: globals.getUserName(),
				userrole: globals.getUserRole(),
				userPhotoUrl: globals.getUserPhotoUrl(),
				ctrlId: self.id,
				/* temporarily no authoring in child pages*/
				showAuthoring: buildOptions.showAuthoring,
				showLinks: buildOptions.showLinks,
				showHome: buildOptions.showHome,
				headerDropdownId: utils.UUID(),
				labelDesignPage: locale.text("header.links.designPage"),
				labelClearCache: locale.text("header.links.clearCache"),
				labelSwitchContext: locale.text("header.links.switchContext")
			};
			var isTablet = $(window).width() > 480;
			var devClass = globals.getSiteLayout().getDeviceClass();
			var tpl = (devClass === "tablet" || devClass === "minitablet") ? "main" : "mainMobile";
			self.setRootElement(_getHtml(tpl, _mainCtx), $$parent);

		},
		_actLinkClicked: function(actionName) {

			/* hiding the links list */
			var self = this;
			if (!self.$$hLinksPicker) {
				self.$$hLinksPicker = $(".s-m-header-links > div > a");
			}
			if (self.$$hLinksPicker && self.$$hLinksPicker.length > 0) {
				self.$$hLinksPicker.trigger("click");
			}

			/* triggering action */
			eventListener.triggerAction(this.$$elmt, actionName);
		},
		// TODO
		getLinkTitle: function(facetValue) {
			switch (facetValue) {
				case "$edit":
					return "Edit";
				case "$query":
					return "List";
				case "$save":
					return "Save";
				case "$details":
					return "Detail";
				default:
					throw new Error("Facet " + facetValue + " not implemented yet");
			}
		},
		/* function run on resize*/
		notifMainLayoutChanged: function() {
			var self = this;

		}
	});

exports.Klass = _Klass;