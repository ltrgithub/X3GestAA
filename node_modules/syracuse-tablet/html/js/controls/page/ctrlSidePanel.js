"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var Base = require('syracuse-tablet/html/js/controls/structElmt').Klass;
var eventListener = require('syracuse-tablet/html/js/application/eventListener');
var notifications = require('syracuse-tablet/html/js/helpers/notifications');

var _templates = {
	main: '\
			<div id="{{ctrlId}}" class="s-m-control" style="display:none"> \
				<nav class="navbar s-m-side-panel {{side}} navbar-inverse" role="navigation">\
					<div class="container-fluid">\
						<div class="navbar-header">\
							<span class="navbar-brand" href="#"><span>{{title}}</span></a>\
						</div>\
					</div>\
					<ul class="nav navbar-nav">\
						{{{actionsHtml}}}\
					</ul>\
					<div class="s-m-side-panel-options">\
						<a href="#" data-action="resize" data-control-id="{{ctrlId}}"><i class="fa fa-2x fa-bars"></i></a>\
					</div>\
				</nav>\
			</div>'
};

/**
 * Base left/right panel control for dashBoards and regular pages
 * 	Adapted from Metro Bootstrap navbar-side
 */
var _Klass = utils.defineClass(

	function(controller, $type, side, panelId) {
		var self = this;
		if (["left", "right"].indexOf(side) < 0) throw new Error("side panel - Unexpected side");
		self.side = side;
		self.panelId = panelId;
		Base.call(self, controller, $type);
	}, Base, {

		/**
		 * context
		 * 	title:			panel title
		 * 	actionsHtml: 	html for action list items <li>
		 */
		buildHtml: function($$parent, context) {
			var self = this;
			context.ctrlId = self.id;
			context.side = self.side;
			var tmpl = Handlebars.compile(_templates.main);
			self.setRootElement(tmpl(context), $$parent);
			self.$$panel = self.$$elmt.find('.s-m-side-panel');
		},

		/**
		 * Reduce/Enlarge the size of the panel
		 * Notify the page (sidePanel) with resize side,action
		 * 		sidePanelToggle is also called by footer with toggle action to show/hide the panel
		 * The page call the toggle action below to get the width and shift the panel
		 */
		_actResize: function() {
			var self = this;
			self.$$panel.toggleClass('closed');
			eventListener.triggerAction(self, "sidePanel", "resize," + self.side);
		},

		/**
		 * Notify the page that the panel is loaded to show/hide the action in footer
		 */
		publishReady: function() {
			var self = this;
			notifications.publish("sm.side.panel.ready", self.panelId);
		},

		/**
		 * Toggle the panel
		 * 	action: toggle or resize
		 * 	callBack: shift the content for left panel
		 * 	This action is called by footer action and also by toggle data-action
		 */
		toggle: function(action, callBack) {
			var self = this;
			var e = self.$$elmt;
			// TODO - Do not call toggle if panel has not initialized - see test dashboards
			if (!e || !self.$$panel) return;
			var width = self.$$panel.width();
			if (action === "toggle" || action === "close") {
				e.toggle(action === "close" ? false : undefined);
				if (!e.is(':visible')) width = 0;
			}
			if (callBack) callBack(width);
		}
	});

exports.Klass = _Klass;