"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var Base = require('syracuse-tablet/html/js/controls/page/ctrlSidePanel').Klass;
var ActionManager = require('syracuse-tablet/html/js/controls/page/actionManager').Klass;

var _templates = {
	actionLink: '\
		{{#each links}}\
			<li>\
				<a draggable="false" href="#" class="{{css}}" data-action="actionLink" data-params="{{$uuid}}" data-control-id="{{../ctrlId}}">\
					<i style="font-size: large" class="{{icon}}"/>\
					<span>{{title}}</span>\
				</a>\
			</li>\
		{{/each}}'
};

var _getHtml = function(name, ctx) {
	var key = name + "compiled";
	var tmpl = _templates[key];
	if (!tmpl) {
		tmpl = _templates[key] = Handlebars.compile(_templates[name]);
	}
	return tmpl(ctx);
};

/**
 * Regular page action panel
 */
var _Klass = utils.defineClass(

	function(controller, $type, options) {
		var self = this;
		Base.call(self, controller, $type, "right", options);
	}, Base, {

		buildHtml: function($$parent, controllerDao, buildOptions) {
			var self = this;
			self.actionManager = new ActionManager({
				$links: self.controller.prototype.getLinks(controllerDao, "hidden"),
				noMessage: false
			});
			var context = {
				title: "Actions",
				actionsHtml: _getHtml("actionLink", {
					ctrlId: self.id,
					links: self.actionManager.getLinks()
				})
			};
			Base.prototype.buildHtml.call(self, $$parent, context);
		},

		afterRender: function() {
			var self = this;
			if (self.actionManager.getLinks().length > 0) {
				self.publishReady();
			}
		},

		_actActionLink: function(uuid) {
			var self = this;
			self.actionManager.triggerLink(uuid, self.controller).then(function(success, link, data, options) {

			}).fail(function() {

			});
		}
	});

exports.Klass = _Klass;