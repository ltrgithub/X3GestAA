"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var Base = require('syracuse-tablet/html/js/controls/page/ctrlSidePanel').Klass;
var ActionManager = require('syracuse-tablet/html/js/controls/page/actionManager').Klass;

var _templates = {
	actionLink: '\
		{{#each links}}\
			<li>\
				<a draggable="false" href="#" class="{{css}}" data-action="actionLink" data-params="{{$uuid}}" data-control-id="{{../ctrlId}}">\
					<i style="font-size: large" class="{{icon}}"/>\
					<span>{{title}}</span>\
				</a>\
			</li>\
		{{/each}}'
};

var _getHtml = function(name, ctx) {
	var key = name + "compiled";
	var tmpl = _templates[key];
	if (!tmpl) {
		tmpl = _templates[key] = Handlebars.compile(_templates[name]);
	}
	return tmpl(ctx);
};

/**
 * Regular page action panel
 */
var _Klass = utils.defineClass(

	function(controller, $type, options) {
		Base.call(this, controller, $type, "right", options);
	}, Base, {

		afterResizeBuildHtml: function(context, pageInfo, orientation, deviceClass) {
			this.actionManager = new ActionManager({
				$links: this.controller.prototype.getLinks(this.getDao(), "hidden"),
				noMessage: false
			});
			context.title = "Actions";
			context.actionsHtml = _getHtml("actionLink", {
				ctrlId: this.id,
				links: this.actionManager.getLinks()
			});
			Base.prototype.afterResizeBuildHtml.call(this, context, pageInfo, orientation, deviceClass);
			if (this.actionManager.getLinks().length > 0) {
				this.publishReady();
			}
		},
		_actActionLink: function(uuid) {
			this.close("close");
			this.actionManager.triggerLink(uuid, this.controller).then(function(success, link, data, options) {}).fail(function() {});
		}
	});

exports.Klass = _Klass;