"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var Base = require('syracuse-tablet/html/js/controls/field/ctrlFieldBase').Klass;
var uiUtils = require('syracuse-tablet/html/js/ui/uiUtils');

var _Klass = utils.defineClass(

	function(controller, article, prototype) {
		var self = this;
		Base.call(self, controller, article, prototype);
	}, Base, {

		buildFieldTitle: function(parentSlot, buildOptions) {
			var self = this;
			// in edit mode, value is displayed before title
			var method = self.$isEditMode ? Base.prototype.buildFieldCore : Base.prototype.buildFieldTitle;
			method.call(self, parentSlot, buildOptions);
		},

		buildFieldCore: function(parentSlot, buildOptions) {
			var self = this;
			// in edit mode, value is displayed before title
			var method = self.$isEditMode ? Base.prototype.buildFieldTitle : Base.prototype.buildFieldCore;
			method.call(self, parentSlot, buildOptions);
		},


		buildFieldValue: function(parentSlot, buildOptions) {
			var self = this;
			var val = self.getValue();
			val = val === true;
			if (this.$isEditMode) {
				self.domInput = uiUtils.createDomElement("input", ["s-m-field-input-boolean", "ctrl-evt-click"], null, {
					"type": "checkbox"
				}, parentSlot);
				self.domInput.checked = val;
			} else {
				parentSlot.appendChild(uiUtils.createDomElement("span", ["glyphicon", val ? "glyphicon-ok" : "glyphicon-remove"]));
			}
		},

		onClick: function(evt) {
			var self = this;
			setTimeout(function() {
				self.domInput.checked = !self.domInput.checked;
				self.setValue(self.domInput.checked);
			}, 50);
		}
	});

exports.Klass = _Klass;