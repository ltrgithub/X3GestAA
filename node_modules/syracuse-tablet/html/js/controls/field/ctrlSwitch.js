"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var Base = require('syracuse-tablet/html/js/controls/field/ctrlFieldBase').Klass;
var uiUtils = require('syracuse-tablet/html/js/ui/uiUtils');
var jsutils = require('syracuse-tablet/html/js/helpers/jsutils');
var fontUtils = require('syracuse-tablet/html/js/ui/fontUtils');
var locale = require('syracuse-tablet/html/js/helpers/locale');

var _Klass = utils.defineClass(

	function CtrlSwitch(controller, article, prototype, options) {
		options = options || {};
		options.nativeCapabilities = null;
		Base.call(this, controller, article, prototype, options);
	}, Base, {
		destroy: function() {
			if (this.$$panel) {
				this.$$panel.bootstrapSwitch('destroy');
				this.$$panel = null;
			};
			Base.prototype.destroy.call(this);
		},
		buildFieldValue: function(fieldSlot, buildOptions) {
			var valueSlot = Base.prototype.buildFieldValue.call(this, fieldSlot, buildOptions);
			var val = this.getValue();
			// Nothing displayed if no values otherwise we see only the icon (empty array cards)
			if (val == null) return;
			val = val === true;
			if (this.$isEditMode) {
				var attrs = {
					"type": "checkbox"
				};
				this.$$panel = $(uiUtils.createDomElement("input", "", null, attrs, valueSlot));
				this.$$panel.bootstrapSwitch('state', val === true, true);
				this.$$panel.bootstrapSwitch('onText', locale.text("auth.switcher.onText"));
				this.$$panel.bootstrapSwitch('offText', locale.text("auth.switcher.offText"));
				this.$$panel.bootstrapSwitch('size', "small");
				this.$$panel.bootstrapSwitch('onColor', "default");
				this.$$panel.bootstrapSwitch('offColor', "default");
				this.$$panel.bootstrapSwitch('onSwitchChange', jsutils.bindFn(this.onSwitchChange, this));
			} else {
				valueSlot.appendChild(uiUtils.createDomElement("span", fontUtils.checkBoxIcon(val)));
			}
		},
		onSwitchChange: function() {
			this.setValue(this.$$panel.bootstrapSwitch('state'));
		}
	});

exports.Klass = _Klass;