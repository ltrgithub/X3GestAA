"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var Base = require('syracuse-tablet/html/js/controls/field/ctrlFieldBase').Klass;
var uiUtils = require('syracuse-tablet/html/js/ui/uiUtils');

var _Klass = utils.defineClass(

	function(controller, article, prototype) {
		var self = this;
		Base.call(self, controller, article, prototype);
		self.isImage = self.$type.indexOf("image") == 0;
	}, Base, {

		buildFieldValue: function(parentSlot, buildOptions) {
			var self = this;
			var value;
			value = self.getFormattedValue(self.getValue());
			if (this.$isEditMode) {
				//TODO
				Base.prototype.buildFieldValue.call(self, parentSlot, buildOptions);
			} else {
				self.createFieldValueElement(parentSlot, value);
			}
		},
		createFieldValueElement: function(parentSlot, value) {
			var self = this;
			var fieldLinkClassName = "s-m-field-" + (self.isImage ? "img" : "binary") + "-link";
			var fieldLink = uiUtils.createDomElement("a", [fieldLinkClassName], null, {
				"target": "_blank"
			}, parentSlot);

			self._setDocumentFile(fieldLink);

			return uiUtils.createDomElement("div", ["s-m-field-value-read"], value || null, null, parentSlot);
		},
		_setDocumentFile: function(parentSlot) {
			var self = this;
			if (self.isImage) {
				self._setImageFile(parentSlot);
			} else {
				//TODO
			}
		},
		_setImageFile: function(parentSlot) {
			var self = this;
			var fieldProperties = self.getFieldProperties();
			var imageUrl = fieldProperties && fieldProperties.$url;
			if (imageUrl) {
				imageUrl = utils.parseExpression(imageUrl, null, self.prototype);

				var imgArea = uiUtils.createDomElement("div", ["s-m-field-img-area img-responsive"], null, null, parentSlot);
				imgArea.style.backgroundImage = "url(\"" + imageUrl + "\")";
				parentSlot.setAttribute("href", imageUrl);
			}
		}
	});

exports.Klass = _Klass;