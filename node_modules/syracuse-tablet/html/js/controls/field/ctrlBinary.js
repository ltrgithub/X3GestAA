"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var fontUtils = require('syracuse-tablet/html/js/ui/fontUtils');
var Base = require('syracuse-tablet/html/js/controls/field/ctrlFieldBase').Klass;
var uiUtils = require('syracuse-tablet/html/js/ui/uiUtils');

var _Klass = utils.defineClass(

	function(controller, article, prototype) {
		var self = this;
		Base.call(self, controller, article, prototype);
		self.isImage = self.$type.indexOf("image") == 0;
		// Add cssType in root element
		self.cssType = self.isImage ? "s-m-img" : "s-m-binary";
	}, Base, {

		buildFieldValue: function(parentSlot, buildOptions) {
			var self = this;
			var value = self.getFormattedValue(self.getValue());
			// Create the image stuff under the standard s-m-value parent
			var imgParent = Base.prototype.buildFieldValue.call(self, parentSlot, buildOptions);
			var docUrl = self.prototype.data("$url", self.dao) || "";
			var empty = value == null || value === "" || docUrl.length === 0;
			if (empty) $(imgParent).addClass("s-m-empty");
			if (this.$isEditMode) {
				// TODO
				//$(imgParent).addClass(fontUtils.binaryIcon(self.cssType, "default"));
				if (self.isImage) {


				} else {
					//TODO
				}

			} else {
				if (empty) {
					// Only icon
					$(imgParent).addClass(fontUtils.binaryIcon(self.cssType, "default"));
				} else {
					// link - Maybe we could manage a modal to display the image 
					var e = uiUtils.createDomElement("a", ["img-responsive"], null, {
						"target": "_blank",
						"href": docUrl
					}, imgParent);
					if (self.isImage) {
						// Image with link
						e = uiUtils.createDomElement("span", ["img-responsive"], null, null, e);
						e.style.backgroundImage = 'url("' + docUrl + '")';
					} else {
						// Icon with link
						e = uiUtils.createDomElement("span", fontUtils.binaryIcon(self.cssType, "default"), null, null, e);
					}
				}
			}
		},
		_buildEditBinaryField: function(parentSlot, docUrl, empty) {
			var self = this;

			var $$layout = $('\
		<div class="s-m-img-layout">\
			<div class="s-m-img-header"></div>\
			<div class="s-m-img-core"></div>\
			<div class="s-m-img-footer"></div>\
		</div>');

			var clearBtn, uploadBtn, core;

			clearBtn = uiUtils.createDomElement("a", ["s-m-clear-binary-field", "ctrl-evt-click", (empty ? "s-m-clear-binary-hidden" : "")], null, {
				"href": "#"
			});

			if (self.isImage) {
				uploadBtn = uiUtils.createDomElement("a", ["s-m-upload-binary-field", "ctrl-evt-click"], locale.text("image.label." + (empty ? "addimage" : "changeimage")), {
					"href": "#"
				});

				core = uiUtils.createDomElement("a", ["img-responsive", "s-m-field-img", "ctrl-evt-click"], null, {
					"target": "_blank",
					"href": empty ? "#" : docUrl
				});
				core = uiUtils.createDomElement("span", ["img-responsive"], null, null, core);
				core.style.backgroundImage = 'url("' + docUrl + '")';
			}


		},
		onClick: function(evt) {
			//TODO
			// handle the 3 following links
			// clearBtn
			// uploadBtn
			// imageAnchor
		}
	});

exports.Klass = _Klass;