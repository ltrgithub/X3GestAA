"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var Base = require('syracuse-tablet/html/js/controls/field/ctrlFieldBase').Klass;
var uiUtils = require('syracuse-tablet/html/js/ui/uiUtils');
var validator = require('syracuse-tablet/html/js/controls/validator').Validator;

var _Klass = utils.defineClass(
	function(controller, article, prototype) {
		var self = this;
		Base.call(self, controller, article, prototype);
	}, Base, {

		validateValue: function(value, errors) {
			var self = this;
			var ok = Base.prototype.validateValue.call(self, value, errors);
			return ok && validator.validate(self, value, errors, ["$pattern", "$minLength", "$maxLength"]);
		},

		buildFieldValue: function(fieldSlot, buildOptions) {
			var self = this;
			var valueSlot = Base.prototype.buildFieldValue.call(self, fieldSlot, buildOptions);
			var value = self.getFormattedValue(self.getValue());
			if (self.$isEditMode) {
				self.createMainInput(valueSlot, value);
			} else {
				self.appendTextValue(valueSlot, value);
			}
		}

	});

var _PhoneField = utils.defineClass(

	function(controller, article, prototype) {
		var self = this;
		_Klass.call(self, controller, article, prototype);
		self.cssType = "s-m-phone";
	}, _Klass, {

		buildFieldValue: function(fieldSlot, buildOptions) {
			var self = this;
			if (self.$isEditMode) {
				Base.prototype.buildFieldValue.call(self, fieldSlot, buildOptions);
			} else {
				var value = self.getFormattedValue(self.getValue());
				var link = uiUtils.createDomElement("a", [], value, {
					"href": "phoneto:" + value
				});
				link.appendChild(uiUtils.createDomElement("span", ["badge", "pull-left"]));
				fieldSlot.appendChild(link);
			}
		}
	});


var _EmailField = utils.defineClass(

	function(controller, article, prototype) {
		var self = this;
		_Klass.call(self, controller, article, prototype);
		self.cssType = "s-m-email";
	}, _Klass, {

		buildFieldValue: function(fieldSlot, buildOptions) {
			var self = this;
			if (self.$isEditMode) {
				Base.prototype.buildFieldValue.call(self, fieldSlot, buildOptions);
			} else {
				var value = self.getFormattedValue(self.getValue());
				var link = uiUtils.createDomElement("a", [], value, {
					"href": "mailto:" + value
				});
				link.appendChild(uiUtils.createDomElement("span", ["badge", "pull-left"]));
				fieldSlot.appendChild(link);
			}
		}
	});

exports.Klass = _Klass;
exports.PhoneField = _PhoneField;
exports.EmailField = _EmailField;