"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var Base = require('syracuse-tablet/html/js/controls/field/ctrlFieldBase').Klass;
var uiUtils = require('syracuse-tablet/html/js/ui/uiUtils');
var validator = require('syracuse-tablet/html/js/controls/validator').Validator;
var fontUtils = require('syracuse-tablet/html/js/ui/fontUtils');

var _AlphaNum = utils.defineClass(
	function CtrlAlphaNum(controller, article, prototype, options) {
		var self = this;
		Base.call(self, controller, article, prototype, options);
	}, Base, {

		validateValue: function(value, errors) {
			var self = this;
			var ok = Base.prototype.validateValue.call(self, value, errors);
			return ok && validator.validate(self, value, errors, ["$pattern", "$minLength", "$maxLength"]);
		},

		buildFieldValue: function(fieldSlot, buildOptions) {
			var self = this;
			var valueSlot = Base.prototype.buildFieldValue.call(self, fieldSlot, buildOptions);
			var value = self.getFormattedValue(self.getValue());
			if (self.$isEditMode) {
				self.createMainInput(valueSlot, value);
			} else {
				self.appendTextValue(valueSlot, value);
			}
		}

	});

var _PhoneField = utils.defineClass(

	function CtrlPhoneField(controller, article, prototype, options) {
		var self = this;
		_AlphaNum.call(self, controller, article, prototype, options);
		self.cssType = "s-m-phone";
	}, _AlphaNum, {

		buildFieldValue: function(fieldSlot, buildOptions) {
			var self = this;
			if (self.$isEditMode) {
				_AlphaNum.prototype.buildFieldValue.call(self, fieldSlot, buildOptions);
			} else {
				var value = self.getFormattedValue(self.getValue());
				var link = uiUtils.createDomElement("span", [], "", {
					"data-action": "externalLink",
					"data-params": value
				});
				if (value) {
					link.appendChild(uiUtils.createDomElement("span", []));
					$(link).append(value);
				}
				fieldSlot.appendChild(link);
			}
		}
	});


var _EmailField = utils.defineClass(

	function CtrlEmailField(controller, article, prototype, options) {
		var self = this;
		_AlphaNum.call(self, controller, article, prototype, options);
		self.cssType = "s-m-email";
	}, _AlphaNum, {

		buildFieldValue: function(fieldSlot, buildOptions) {
			var self = this;
			if (self.$isEditMode) {
				_AlphaNum.prototype.buildFieldValue.call(self, fieldSlot, buildOptions);
			} else {
				var value = self.getFormattedValue(self.getValue());
				var link = uiUtils.createDomElement("span", [], "", {
					"data-action": "externalLink",
					"data-params": "mailto:" + value
				});
				if (value) {
					link.appendChild(uiUtils.createDomElement("span", []));
					$(link).append(value);
				}
				fieldSlot.appendChild(link);
			}
		}
	});
var _UrlField = utils.defineClass(

	function CtrlUrlField(controller, article, prototype, options) {
		_AlphaNum.call(this, controller, article, prototype, options);
		this.cssType = "s-m-url";
	}, _AlphaNum, {

		buildFieldValue: function(fieldSlot, buildOptions) {
			if (this.$isEditMode) {
				_AlphaNum.prototype.buildFieldValue.call(this, fieldSlot, buildOptions);
			} else {
				var value, link, asValue, $urlLink = this.prototype.getUrlLink(this.$bind);
				if ($urlLink.$url) {
					asValue = this.getValue() ? true : false;
					if (asValue) {
						_AlphaNum.prototype.buildFieldValue.call(this, fieldSlot, buildOptions);
					}
					if ($urlLink.$url.indexOf('{' + this.$bind + '}') < 0 || asValue) {
						value = this.prototype.resolveExpression($urlLink.$url, this._dao.data, true);
					}
				} else {
					value = this.getFormattedValue(this.getValue());
				}
				link = value ? uiUtils.createDomElement("span", [], "", {
					"class": "s-m-icon-link",
					"data-action": "externalLink",
					"data-params": value
				}) : null;
				if (link) {
					link.appendChild(uiUtils.createDomElement("span", []));
					$(link).addClass(this._getDefaultIcon());
					fieldSlot.appendChild(link);
				}
			}
		},
		_getDefaultIcon: function() {
			var css = "s-m-icon-" + (this.article.$urlIconSize || "small") + " ";
			return css + (this.article.$urlIcon || fontUtils.getUrlDefIcon()).css;
		}
	});
exports.Klass = _AlphaNum;
exports.PhoneField = _PhoneField;
exports.EmailField = _EmailField;
exports.UrlField = _UrlField;