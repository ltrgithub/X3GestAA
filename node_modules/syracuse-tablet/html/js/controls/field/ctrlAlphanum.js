"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var Base = require('syracuse-tablet/html/js/controls/field/ctrlFieldBase').Klass;
var uiUtils = require('syracuse-tablet/html/js/ui/uiUtils');
var validator = require('syracuse-tablet/html/js/controls/validator').Validator;

var _Klass = utils.defineClass(
	function(controller, article, prototype) {
		var self = this;
		Base.call(self, controller, article, prototype);
	}, Base, {
		validateValue: function(value, errors) {
			var self = this;
			var ok = Base.prototype.validateValue.call(self, value, errors);
			ok = validator.validate(this, value, errors, ["$pattern", "$minLength", "$maxLength"]) && ok;
			return ok;
		}
	});

var _PhoneField = utils.defineClass(

	function(controller, article, prototype) {
		var self = this;
		_Klass.call(self, controller, article, prototype);
	}, _Klass, {
		buildFieldValue: function(parentSlot, buildOptions) {
			var self = this;
			var value = self.getFormattedValue(self.getValue());
			if (this.$isEditMode) {
				parentSlot.appendChild(uiUtils.createDomElement("input", ["s-m-field-input", "form-control"], null, {
					"type": "text",
					"value": value
				}));
			} else {
				var link = uiUtils.createDomElement("a", ["s-m-phone-link"], value, {
					"href": "phoneto:" + value
				});
				link.appendChild(uiUtils.createDomElement("span", ["s-m-phone-badge", "badge", "pull-left"]));

				// value container
				var container = self.createFieldValueElement();
				container.appendChild(link);

				parentSlot.appendChild(container);
			}
		}
	});


var _EmailField = utils.defineClass(

	function(controller, article, prototype) {
		var self = this;
		_Klass.call(self, controller, article, prototype);
	}, _Klass, {
		buildFieldValue: function(parentSlot, buildOptions) {
			var self = this;
			var value = self.getFormattedValue(self.getValue());
			if (this.$isEditMode) {
				parentSlot.appendChild(uiUtils.createDomElement("input", ["s-m-field-input", "form-control"], null, {
					"type": "text",
					"value": value
				}));
			} else {
				var link = uiUtils.createDomElement("a", ["s-m-email-link"], value, {
					"href": "mailto:" + value
				});
				link.appendChild(uiUtils.createDomElement("span", ["s-m-email-badge", "badge", "pull-left"]));

				// value container
				var container = self.createFieldValueElement();
				container.appendChild(link);

				parentSlot.appendChild(container);
			}
		}
	});

exports.Klass = _Klass;
exports.PhoneField = _PhoneField;
exports.EmailField = _EmailField;