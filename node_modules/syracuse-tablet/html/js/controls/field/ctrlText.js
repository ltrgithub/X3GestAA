"use strict";
var utils = require('syracuse-tablet/html/js/helpers/utils');
var Base = require('syracuse-tablet/html/js/controls/field/ctrlFieldBase').Klass;
var uiUtils = require('syracuse-tablet/html/js/ui/uiUtils');

var _Klass = utils.defineClass(

	function(controller, article, prototype, options) {
		var self = this;
		Base.call(self, controller, article, prototype, options);
	}, Base, {
		buildFieldValue: function(parentSlot, buildOptions) {
			var self = this;
			var value = self.getFormattedValue(self.getValue());

			// Create the enriched text content under the standard s-m-value parent
			var parent = Base.prototype.buildFieldValue.call(self, parentSlot, buildOptions);

			// enriched text container div
			var textContainer = uiUtils.createDomElement("div", ["s-m-enriched-text"], null, null, parent);

			var docUrl = self.prototype.data("$url", self.getDao()) || "";
			//docUrl += '?salt=' + ((new Date()).getTime());
			$.ajax({
				url: docUrl,
				success: function(data, textStatus, jqXHR) {
					var ss = this;
					var $$dataArr = [];
					switch (ss.$type) {
						case "text/plain":
							$$dataArr = this.getDataFromPlain(data);
							break;
						case "text/html":
							// TODO remove || $$dataArr
							$$dataArr = this.getDataFromHtml(data) || $$dataArr;
							break;
						case "text/rtf":
							// TODO remove || $$dataArr
							$$dataArr = this.getDataFromRtf(data) || $$dataArr;
							break;
					}
					for (var ii = 0, jj = $$dataArr.length; ii < jj; ii++) {
						textContainer.appendChild($$dataArr[ii]);
					}

				},
				error: function(jqXHR, textStatus, errorThrown) {
					alert("Error: Ajax failed");
				},
				context: this
			});
		},
		getDataFromPlain: function(data) {
			return $.parseHTML(utils.formatTextToHTML(data, true));
		},
		getDataFromRtf: function(data) {

		},
		getDataFromHtml: function(data) {

		}
	});

exports.Klass = _Klass;