"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var Base = require('syracuse-tablet/html/js/controls/field/ctrlFieldBase').Klass;
var uiUtils = require('syracuse-tablet/html/js/ui/uiUtils');
var selectorFactory = require('syracuse-tablet/html/js/ui/datetimeSelectors/selectorFactory');
var fontUtils = require('syracuse-tablet/html/js/ui/fontUtils');

var _Klass = utils.defineClass(

	function CtrlBase(controller, article, prototype, options) {
		var self = this;
		Base.call(self, controller, article, prototype, options);
	}, Base, {
		/**
		 * Init the properties to allow reuse of this control
		 */
		initReuseProperties: function() {
			Base.prototype.initReuseProperties.call(this);
			this.picker = null;
		},
		buildFieldValue: function(fieldSlot, buildOptions) {
			var self = this;
			var valueSlot = Base.prototype.buildFieldValue.call(self, fieldSlot, buildOptions);
			var value = self.getFormattedValue(self.getValue());
			if (self.$isEditMode) {
				var inputGroup = uiUtils.createDomElement("div", ["input-group"], null, null, valueSlot);
				self.createMainInput(inputGroup, value);
				var span = uiUtils.createDomElement("span", ["input-group-btn"], null, null, inputGroup);
				self.picker = uiUtils.createDomElement("button", ["btn", "btn-default", "s-m-meta"], null, null, span);
				uiUtils.createDomElement("span", fontUtils.dateFieldIcon(self.$type), null, null, self.picker);
				$(self.picker).click(function() {
					selectorFactory.createSelector(self);
				});
			} else {
				self.appendTextValue(valueSlot, value);
			}
		},
		setFieldValue: function(value, forceSetFocus) {
			if (this.$type.indexOf("datetime") > -1 && value.length <= 10) {
				value += "T00:00:00.0Z";
			}
			Base.prototype.setFieldValue.call(this, value, forceSetFocus);
		},
		getFieldFormat: function() {
			return this.formatter.format;
		}
	});

exports.Klass = _Klass;