"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var Base = require('syracuse-tablet/html/js/controls/ctrlBase').Klass;
var uiUtils = require('syracuse-tablet/html/js/ui/uiUtils');

var _PhoneField = utils.defineClass(

	function(controller, article, prototype) {
		var self = this;
		Base.call(self, controller, article, prototype);
	}, Base, {
		buildFieldValue: function(parentSlot, controllerDao, buildOptions) {
			if (!controllerDao) throw new Error("BuildHtml - dao is expected for data parameter");
			// return input if editMode
			if (this.$isEditMode) {
				parentSlot.appendChild(uiUtils.createDomElement("input", ["sm-field-input", "form-control"], null, {
					"type": "text",
					"value": controllerDao.getValue(this.article.$bind)
				}));
			} else {
				// return a link (<a>) with 'tel:' protocol
				// phone field value
				var value = controllerDao.getValue(this.article.$bind);

				// phone field value as a link
				var link = uiUtils.createDomElement("a", ["sm-phone-link"], value, {
					"href": "tel:" + value
				});
				// bootstrap span to display icon
				link.appendChild(uiUtils.createDomElement("span", ["sm-phone-badge", "badge", "pull-left"]));

				// value container
				var container = uiUtils.createDomElement("div", ["sm-field-value-read"]);
				container.appendChild(link);

				parentSlot.appendChild(container);
			}
		}
	});


var _EmailField = utils.defineClass(

	function(controller, article, prototype) {
		var self = this;
		Base.call(self, controller, article, prototype);
	}, Base, {
		buildFieldValue: function(parentSlot, controllerDao, buildOptions) {
			if (!controllerDao) throw new Error("BuildHtml - dao is expected for data parameter");
			// return input if editMode
			if (this.$isEditMode) {
				parentSlot.appendChild(uiUtils.createDomElement("input", ["sm-field-input", "form-control"], null, {
					"type": "text",
					"value": controllerDao.getValue(this.article.$bind)
				}));
			} else {
				// return a link (<a>) with 'mailto:' protocol
				// phone field value
				var value = controllerDao.getValue(this.article.$bind);

				// email field value as a link
				var link = uiUtils.createDomElement("a", ["sm-email-link"], value, {
					"href": "mailto:" + value
				});
				// bootstrap span to display icon
				link.appendChild(uiUtils.createDomElement("span", ["sm-email-badge", "badge", "pull-left"]));

				// value container
				var container = uiUtils.createDomElement("div", ["sm-field-value-read"]);
				container.appendChild(link);

				parentSlot.appendChild(container);
			}
		}
	});

var _Klass = utils.defineClass(

	function(controller, article, prototype) {
		var self = this;
		Base.call(self, controller, article, prototype);
	}, Base, {

	});

exports.Klass = _Klass;
exports.PhoneField = _PhoneField;
exports.EmailField = _EmailField;