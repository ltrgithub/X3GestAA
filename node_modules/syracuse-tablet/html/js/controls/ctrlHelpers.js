"use strict";
var notifications = require('syracuse-tablet/html/js/helpers/notifications');

var _toggleAttr = function($$e, attr, toggle) {
	if (!$$e) return;
	$$e.toggleClass('disabled', toggle);
	if ($$e.is('[' + attr + ']')) {
		if (toggle === true) return $$e;
		return $$e.removeAttr(attr);
	} else {
		if (toggle === false) return $$e.removeAttr(attr);
		return $$e.attr(attr, '');
	}
};
/**
 * Adds the count info to the 'List of drafts' menu
 */
var _notifDraftsChanged = function(ctrl, count) {
	if (!ctrl || !ctrl.$$elmt) return;
	var $$e = ctrl.$$elmt.find('[data-nav="pageDrafts"]');
	_toggleAttr($$e, 'data-disabled', count <= 0);
	$$e = $$e.find(".isLabel");
	var $b = $$e.find("span.badge");
	if ($b.length === 0) {
		$b = $('<span class="badge"/>').appendTo($$e);
	}
	$b.text(count);
};
/**
 * Update save button when dao status changes dirty/not dirty
 */
var _notifDaoDirty = function(ctrl, isDirty, uuid) {
	if (!ctrl || !ctrl.$$elmt || !ctrl._saveLinkId || !ctrl.controller.isEditMode() || ctrl.controller.dao.data.$uuid != uuid) return;
	var $$e = ctrl.$$elmt.find('[data-params="' + ctrl._saveLinkId + '"]');
	if ($$e && $$e.length > 0) {
		$$e.toggleClass("disabled", isDirty !== true);
	}
};
/**
 * Update editTemplates button when templates has been created/removed
 */
var _notifEditTemplatesChanged = function(ctrl, endpoint, reprentations, count) {
	if (!ctrl || !ctrl.$$elmt || !ctrl._showtemplatesId || !ctrl.controller.isEditMode()) return;
	var $$e = ctrl.$$elmt.find('[data-params="' + ctrl._showtemplatesId + '"]');
	if ($$e && $$e.length > 0) {
		$$e.toggleClass("disabled", false);
	}
};
/**
 * Add control subscription according to the link
 * Ex: dirty dao, tempates changed....
 */
var _checkLinkSubscriptions = function(control, link) {
	if (!control.controller.isEditMode()) return;
	// we save the link id to retrieve the dom elmt - see _notifDaoDirty
	if (link.name === "$save") {
		control._saveLinkId = link.$uuid;
		link.$isDisabled = true;
		notifications.subscribe(control, ["sm.dao.dirty"]);
		return;
	}
	if (link.name === "$showtemplates") {
		control._showtemplatesId = link.$uuid;
		link.$isDisabled = true;
		notifications.subscribe(control, ["sm.edit.templates.changed"]);
		return;
	}
};
/**
 * Update the status of save/showTemplates button after having built the footer/header
 * The notification sm.dao.dirty occurs before the creation of the control so we need to check the status in build method
 */
var _checkLinkInitStatus = function(ctrl) {
	if (!ctrl || !ctrl.controller || !ctrl.controller.getLinksInitStatus || !ctrl.controller.isEditMode()) return;
	// The status is given by the controller
	ctrl.controller.getLinksInitStatus().then(function(data) {
		if (!data) return;
		if (data.dirtyDao != null) {
			// Asks the controller to know if we can enable save button 
			_notifDaoDirty(ctrl, data.dirtyDao.isDirty, data.dirtyDao.$uuid);
		}
		if (data.editTemplates !== null) {
			// Asks the controller to know if we can enable save button 
			_notifEditTemplatesChanged(ctrl, data.editTemplates.endpoint, data.editTemplates.reprentations, data.editTemplates.count);
		}
	});
};

exports.checkLinkSubscriptions = _checkLinkSubscriptions;
exports.checkLinkInitStatus = _checkLinkInitStatus;
exports.notifDaoDirty = _notifDaoDirty;
exports.notifDraftsChanged = _notifDraftsChanged;
exports.toggleAttr = _toggleAttr;