"use strict";

var _toggleAttr = function($$e, attr, toggle) {
	if (!$$e) return;
	$$e.toggleClass('disabled', toggle);
	if ($$e.is('[' + attr + ']')) {
		if (toggle === true) return $$e;
		return $$e.removeAttr(attr);
	} else {
		if (toggle === false) return $$e.removeAttr(attr);
		return $$e.attr(attr, '');
	}
};
/**
 * Adds the count info to the 'List of drafts' menu
 */
var _notifDraftsChanged = function(ctrl, count) {
	if (!ctrl || !ctrl.$$elmt) return;
	var $$e = ctrl.$$elmt.find('[data-nav="pageDrafts"]');
	_toggleAttr($$e, 'data-disabled', count <= 0);
	$$e = $$e.find(".isLabel");
	var $b = $$e.find("span.badge");
	if ($b.length === 0) {
		$b = $('<span class="badge" style="margin-left: 10px;"/>').appendTo($$e);
	}
	$b.text(count);
};
/**
 * Update save button when dao status changes dirty/not dirty
 */
var _notifDaoDirty = function(ctrl, isDirty, uuid) {
	if (!ctrl || !ctrl.$$elmt || !ctrl._saveLinkId || !ctrl.controller.isEditMode() || ctrl.controller.dao.data.$uuid != uuid) return;
	var $$e = ctrl.$$elmt.find('[data-params="' + ctrl._saveLinkId + '"]');
	if ($$e && $$e.length > 0) {
		$$e.toggleClass("disabled", isDirty !== true);
	}
};
/**
 * Update save button after having built the footer/header
 * The notification sm.dao.dirty occurs before the creation of the control so we need to check the status in bil method
 */
var _checkDaoDirty = function(ctrl) {
	if (!ctrl || !ctrl.controller || !ctrl.controller.isEditMode()) return;
	// Asks the controller to know if we can enable save button 
	_notifDaoDirty(ctrl, ctrl.controller.getDirtyInitStatus && ctrl.controller.getDirtyInitStatus(), ctrl.controller.dao.data.$uuid);
};

exports.checkDaoDirty = _checkDaoDirty;
exports.notifDaoDirty = _notifDaoDirty;
exports.notifDraftsChanged = _notifDraftsChanged;
exports.toggleAttr = _toggleAttr;