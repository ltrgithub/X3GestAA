"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var Base = require('syracuse-tablet/html/js/controls/layout/layoutBase').Klass;

/**
 * Detects empty rows and hide them wit the class s-m-fullwidth
 * An empty cell (s-m-empty) is hidden if the cell is full width
 * 		takes the full width of the row - depends on bootstrap grid classes)
 * If all non full width cells (emptyNotfw) are empty
 * 		eg; 2 empty cells with width=50% (6/12  of the row) + another one with width=100% (12/12  of the row)
 * A row is hidden if
 * 		All the cells are empty (s-m-empty)
 *
 */
var _checkEmptyRow = function($$row) {
	var fullCellMinWidth = $$row.width();
	fullCellMinWidth = fullCellMinWidth - fullCellMinWidth / 12;
	var emptyNotfw = [];
	$$row.children().each(function() {
		var $$cell = $(this);
		if ($$cell.width() > fullCellMinWidth) {
			$$cell.addClass("s-m-fullwidth");
		} else {
			$$cell.removeClass("s-m-fullwidth");
			if (emptyNotfw && $$cell.is(".s-m-empty")) {
				emptyNotfw.push($$cell);
			} else {
				// Breaks the process on first non empty cell
				emptyNotfw = null;
			}
		}
	});
	if (emptyNotfw) {
		// Hide all these cells
		emptyNotfw.forEach(function($$cell) {
			$$cell.addClass("s-m-fullwidth");
		});
	}
};

var _checkEmptyRows = function($$rows) {
	if (!$$rows) return;
	$$rows.each(function() {
		_checkEmptyRow($(this));
	});
};

/**
 */
var _Klass = utils.defineClass(

	function LayoutRow(controller, type, article, opts) {
		var self = this;
		Base.call(self, controller, type, article, opts);
	}, Base, {

		buildHtml: function($$parent, controllerDao, buildOptions) {
			Base.prototype.buildHtml.call(this, $$parent, controllerDao, buildOptions);
			this.$$elmt.addClass("s-m-row");
			this.$$elmt.addClass("row");
			this._setRowColorClass();
			this.buildChildrenHtml(this.$$elmt, controllerDao, buildOptions);
			if (buildOptions.displayCtx === "card" || buildOptions.displayCtx === "table") {
				_checkEmptyRow(this.$$elmt);
			}
		},
		onResize: function(context) {
			Base.prototype.onResize.call(this, context);
			_checkEmptyRow(this.$$elmt);
		},
		_setRowColorClass: function() {
			var self = this;
			var color = self.article.$bgColor;
			if (color) {
				self.$$elmt.addClass("s-m-bg s-m-color-" + color);
			}
		},
	}
);

exports.Klass = _Klass;
exports.checkEmptyRows = _checkEmptyRows;