"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var Base = require('syracuse-tablet/html/js/controls/layout/layoutBase').Klass;
var uiUtils = require('syracuse-tablet/html/js/ui/uiUtils');

var _Klass = utils.defineClass(function(controller, type, article, opts) {
	var self = this;
	Base.call(self, controller, type, article, opts);
}, Base, {
	buildHtml: function($$parent, controllerDao, buildOptions) {
		var self = this;
		Base.prototype.buildHtml.call(self, $$parent, controllerDao, buildOptions);
		self.$$elmt.addClass("s-m-cell");
		self.$$cell = $(uiUtils.createDomElement("div", ["cell"], null, null, self.$$elmt));
		self._setCellColorClass();
		self._setCellSizeClasses();
		$.each(self.children, function(index, child) {
			child.buildHtml(self.$$cell, controllerDao, buildOptions);
		});
	},
	_setCellColorClass: function() {
		var self = this;
		var color = self.article.$bgColor;
		if (!color) {
			color = "lime";
		}
		self.$$cell.addClass("tile-" + color);
	},
	_setCellSizeClasses: function() {
		var self = this;
		var sizes = [{
			$prop: "$widthXs",
			$prefix: "col-xs-"
		}, {
			$prop: "$widthSm",
			$prefix: "col-sm-"
		}, {
			$prop: "$widthMd",
			$prefix: "col-md-"
		}, {
			$prop: "$widthLg",
			$prefix: "col-lg-"
		}];
		var last = 12;
		sizes.forEach(function(size) {
			var val = self.article[size.$prop];
			if (val != null && val > 0 && val < 12) {
				last = val;
			} else {
				val = last;
			}
			var cls = size.$prefix + val;
			self.$$elmt.addClass(cls);
		});
	}

});

exports.Klass = _Klass;