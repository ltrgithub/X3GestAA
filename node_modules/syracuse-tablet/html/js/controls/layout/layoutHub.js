"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var Base = require('syracuse-tablet/html/js/controls/layout/layoutBase').Klass;
var layoutHubGroup = require('syracuse-tablet/html/js/controls/layout/layoutHubGroup');

/**
 * Top level layout node that must only contain layoutHubGroups as children
 * This "hub" expands horizontally and only uses the available vertical space
 * Use this to define pages which only scroll horizontally
 */
var _Klass = utils.defineClass(
	function(controller, type, article, opts) {
		var self = this;
		Base.call(self, controller, type, article, opts);
	}, Base, {

		destroy: function() {
			Base.prototype.destroy.call(this);
		},

		buildHtml: function($$parent, controllerDao, buildOptions) {
			var self = this;
			buildOptions = buildOptions || {};
			buildOptions.noTitle = true;
			Base.prototype.buildHtml.call(self, $$parent, controllerDao, buildOptions);
			self.$$elmt.addClass("s-m-hub");
			self.children.forEach(function(child) {
				child.buildHtml(self.$$elmt, controllerDao, buildOptions);
			});
		},
		/**
		 * Resize handler called by window.resize
		 */
		onResize: function(evt) {
			var self = this;
			var $$p = self.$$elmt.parent();
			var pos = self.$$elmt.position();
			var w = $$p.width();
			var h = $$p.height() - pos.top;
			var rel = w / h;
			var orientation = (rel > 1.2 && h >= layoutHubGroup.minLandscapeHeigth) ? "landscape" : "portrait";
			self.$$elmt.height(h);
			var posX = 0;
			var posY = 0;
			var opts;

			this.children.forEach(function(child) {
				opts = {
					posX: posX,
					posY: posY,
					maxHeight: h,
					maxWidth: w,
					orientation: orientation
				};
				child.onResize(evt, opts);
				if (orientation === "landscape") {
					posX += child.getWidth() + 10;
				} else {
					posY += child.getHeight() + 10;
				}
			});
		}
	});

exports.Klass = _Klass;