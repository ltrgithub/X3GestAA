"use strict";

var log = require('syracuse-tablet/html/js/helpers/logger').getLogger("app");
var globals = require('syracuse-tablet/html/js/helpers/globals');
var ajax = require('syracuse-tablet/html/js/ajax/ajax').getAjax().ajax;
var sdataCommonRes = require('syracuse-tablet/html/js/sdata/sdataCommonResources');
var base64 = require('syracuse-tablet/html/js/helpers/base64');

/**
 * Login services are temporarily implemented in requireJSDispatcher._js
 * - tabletCheckLogin
 * 		Return 403 if login failed because 401 forces the browser to display the authentication dialog
 * - tabletDoLogin
 *      Return user's profile if OK
 */
var _config = {
	svcLogin: "/auth/login/submit",
	svcLogout: "/logout",
	userProfile: "/sdata/syracuse/collaboration/syracuse/userProfiles/$service/current",
	svcReconnectGetToken: "/requireJS/reconnect?getToken",
	svcReconnectSetToken: "/requireJS/reconnect?setToken",

};

/**
 * True if user is logged in
 * Resolves with user profile or null
 * Reject if error
 */
var _check = function() {
	return ajax("GET", _config.userProfile, null, null, {
		dontCatchHttp401: true
	}).then(function(result) {
		if (result && result.status === 200 && result.responseJSON) {
			return result.responseJSON;
		} else {
			return null;
		}
	});
};
/**
 * Resolve with success and user's profile
 */
var _login = function(user, password, lang) {
	var deferred = new $.Deferred();
	var _rejectError = function(e, t) {
		log && log(t || "Login request rejected", e);
		deferred.reject(e);
	};
	try {
		var token = 'Basic ' + base64.encode(user + ":" + password);
		return ajax("POST", _config.svcLogin, null, {
			"Authorization": token,
			"accept": "application/json"
		}).then(function(result) {
			if (result.status !== 200 && result.status !== 401 && result.status !== 0) {
				deferred.resolve(false, null, "Httpstatus: " + result.status + (result.descrHttpStatus ? "[" + result.descrHttpStatus + "]" : ""));
			} else if (result.status === 0) {
				deferred.resolve(false, null, "Offline", true);
			} else {
				try {
					var url = result.responseJSON.$diagnoses[0].$links.$redirect.$url;
					if (url === "/auth/login/page") {
						deferred.resolve(false, null, "Httpstatus: " + result.status + (result.descrHttpStatus ? "[" + result.descrHttpStatus + "]" : ""));
					} else {
						sdataCommonRes.getUserProfile().then(function(profile) {
							deferred.resolve(true, profile, "Httpstatus: " + result.status + (result.descrHttpStatus ? "[" + result.descrHttpStatus + "]" : ""));
						}).fail(function(e) {
							_rejectError(e);
						});
					}
				} catch (e) {
					_rejectError(e);
				}
			}
		}).fail(function(e) {
			_rejectError(e);
		});
	} catch (e) {
		_rejectError(e, "Do login request exception");
	} finally {
		return deferred.promise();
	}
};

/**
 * Logout
 */
var _logout = function() {
	var deferred = new $.Deferred();
	var _rejectError = function(e, t) {
		log && log(t || "Logout request rejected", e);
		deferred.reject(e);
	};
	try {
		var url = globals.baseLocation().host + _config.svcLogout;
		// temporarily - To improve
		return ajax("GET", url, {
			device: "phone"
		}).then(function(result) {
			var data;
			var msg = "";
			// There's a bug in Syracuse which returns sometimes 401 on logout - Aurelien is aware
			result.isSuccess = result.isSuccess || result.status === 401;
			if (!result.isSuccess) {
				msg = "Httpstatus: " + result.status + (result.descrHttpStatus ? "[" + result.descrHttpStatus + "]" : "");
			}
			var diag = result.responseJSON ? result.responseJSON.$diagnoses : null;
			if (diag) {
				diag.forEach(function(d) {
					msg += (msg.lengthj > 0 ? "\n" : "") + d.$message;
				});
			}
			var isSuccess = result.isSuccess;
			if (!isSuccess && result.status === 0) {
				isSuccess = true; // We are offline, so we consider logout is ok and do not display a message
			}
			deferred.resolve(isSuccess, msg);
		}).fail(function(e) {
			_rejectError(e);
		});
	} catch (e) {
		_rejectError(e, "Do logout request exception");
	} finally {
		return deferred.promise();
	}
};

/**
 * Resolve with a reconnect token used by _reconnectSetToken
 */
var _reconnectGetToken = function() {
	var deferred = new $.Deferred();
	ajax("GET", _config.svcReconnectGetToken, null, {
		"accept": "application/json"
	}).always(function(result) {
		if (result && result.status === 200 && result.headers) {
			console.log("_reconnectGetToken", result.headers["x-reconnect-token"]);
			deferred.resolve(result.headers["x-reconnect-token"]);
		} else {
			deferred.resolve(null);
		}
	});
	return deferred.promise();
};

/**
 * Call a service that set the session cookie contained in reconnectToken
 */
var _reconnectSetToken = function(reconnectToken) {
	console.log("_reconnectSetToken", reconnectToken);
	var deferred = new $.Deferred();
	ajax("GET", _config.svcReconnectSetToken, null, {
		"accept": "application/json",
		"x-reconnect-token": reconnectToken
	}).always(function(result) {
		deferred.resolve();
	});
	return deferred.promise();
};


/*
 * Sage ID signin
 */
var _sageidsigin = function() {
	window.location.href = "/auth/sage-id/signOnStart";
};

exports.check = _check;
exports.login = _login;
exports.logout = _logout;
exports.reconnectGetToken = _reconnectGetToken;
exports.reconnectSetToken = _reconnectSetToken;
exports.sageidsignin = _sageidsigin;