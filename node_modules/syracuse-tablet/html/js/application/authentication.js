"use strict";

var log = require('syracuse-tablet/html/js/helpers/logger').getLogger("app");
var utils = require('syracuse-tablet/html/js/helpers/utils');
var globals = require('syracuse-tablet/html/js/helpers/globals');
var ajax = require('syracuse-tablet/html/js/ajax/ajax').getAjax().ajax;
var notifications = require('syracuse-tablet/html/js/helpers/notifications');

/**
 * Login services are temporarily implemented in requireJSDispatcher._js
 * - tabletCheckLogin
 * 		Return 403 if login failed because 401 forces the browser to display the authentication dialog
 * - tabletDoLogin
 *      Return user's profile if OK
 */
var _config = {
	svcCheckLogin: "/requireJS/tabletCheckLogin",
	svcDoLogin: "/requireJS/tabletDoLogin",
	svcLogout: "/logout",
	authParams: "/sdata/syracuse/collaboration/syracuse/userProfiles/$service/current"
};

/**
 * True if user is logged in
 */
var _check = function() {
	var deferred = new $.Deferred();
	var _rejectError = function(e, t) {
		log && log(t || "Check login request rejected", e);
		deferred.reject(e);
	};
	try {
		var checkurl = globals.baseLocation().host + _config.authParams;
		return ajax("GET", _config.svcCheckLogin, {
			checkurl: checkurl
		}).then(function(result) {
			// check login service return 200 or 403 - See 
			deferred.resolve(result.status === 200);
		}, _rejectError);
	} catch (e) {
		_rejectError(e, "Check login request exception");
	} finally {
		return deferred.promise();
	}
};
/**
 * Resolve with success and user's profile
 */
var _login = function(user, password, lang) {
	var deferred = new $.Deferred();
	var _rejectError = function(e, t) {
		log && log(t || "Login request rejected", e);
		deferred.reject(e);
	};
	try {
		var checkurl = globals.baseLocation().host + _config.authParams;
		// temporarily - To improve
		return ajax("GET", _config.svcDoLogin, {
			checkurl: checkurl,
			user: user,
			password: password,
			lang: lang
		}).then(function(result) {
			// Return the userProfiles if ok
			deferred.resolve(result.isSuccess, result.responseJSON, "Httpstatus: " + result.status + (result.descrHttpStatus ? "[" + result.descrHttpStatus + "]" : ""));
		}, _rejectError);
	} catch (e) {
		_rejectError(e, "Do login request exception");
	} finally {
		return deferred.promise();
	}
};

/**
 * Logout
 */
var _logout = function() {
	var deferred = new $.Deferred();
	var _rejectError = function(e, t) {
		log && log(t || "Logout request rejected", e);
		deferred.reject(e);
	};
	try {
		var url = globals.baseLocation().host + _config.svcLogout;
		// temporarily - To improve
		return ajax("GET", url, {
			device: "phone"
		}).then(function(result) {
			var data;
			var msg = "";
			if (!result.isSuccess) {
				msg = "Httpstatus: " + result.status + (result.descrHttpStatus ? "[" + result.descrHttpStatus + "]" : "");
			}
			var diag = result.responseJSON ? result.responseJSON.$diagnoses : null;
			if (diag) {
				diag.forEach(function(d) {
					msg += (msg.lengthj > 0 ? "\n" : "") + d.$message;
				});
			}
			deferred.resolve(result.isSuccess, msg);
		}, _rejectError);
	} catch (e) {
		_rejectError(e, "Do logout request exception");
	} finally {
		return deferred.promise();
	}
};

exports.check = _check;
exports.login = _login;
exports.logout = _logout;