"use strict";

var log = require('syracuse-tablet/html/js/helpers/logger').getLogger("app");
var globals = require('syracuse-tablet/html/js/helpers/globals');
var ajax = require('syracuse-tablet/html/js/ajax/ajax').getAjax().ajax;
var sdataCommonRes = require('syracuse-tablet/html/js/sdata/sdataCommonResources');

/**
 * Login services are temporarily implemented in requireJSDispatcher._js
 * - tabletCheckLogin
 * 		Return 403 if login failed because 401 forces the browser to display the authentication dialog
 * - tabletDoLogin
 *      Return user's profile if OK
 */
var _config = {
	svcLogin: "/auth/login/submit",
	svcLogout: "/logout",
	userProfile: "/sdata/syracuse/collaboration/syracuse/userProfiles/$service/current"
};

/**
 * True if user is logged in
 */
var _check = function() {
	var deferred = new $.Deferred();
	var _rejectError = function(e, t) {
		log && log(t || "Check login request rejected", e);
		deferred.reject(e);
	};
	try {
		return ajax("GET", _config.userProfile).then(function(result) {
			if (result.status === 200 || result.status === 401) {
				var diag = result.responseJSON && result.responseJSON.$diagnoses;
				var links = diag && diag[0] && diag[0].$links;
				if (links && links.redirect) {
					deferred.resolve({
						authenticated: false
					});
				} else {
					deferred.resolve({
						authenticated: true
					});
				}
			} else {
				deferred.resolve(false);
			}
		}).fail(function(e) {
			_rejectError(e);
		});
	} catch (e) {
		_rejectError(e, "Check login request exception");
	} finally {
		return deferred.promise();
	}
};
/**
 * Resolve with success and user's profile
 */
var _login = function(user, password, lang) {
	var deferred = new $.Deferred();
	var _rejectError = function(e, t) {
		log && log(t || "Login request rejected", e);
		deferred.reject(e);
	};
	try {
		var token = 'Basic ' + btoa(user + ":" + password);
		return ajax("POST", _config.svcLogin, null, {
			"authorization": token,
			"accept": "application/json"
		}).then(function(result) {
			var url;
			try {
				url = result.responseJSON.$diagnoses[0].$links.$redirect.$url;
				if (url === "/auth/login/page") {
					deferred.resolve(false, null, "Httpstatus: " + result.status + (result.descrHttpStatus ? "[" + result.descrHttpStatus + "]" : ""));
				} else {
					sdataCommonRes.getUserProfile().then(function(profile) {
						deferred.resolve(true, profile, "Httpstatus: " + result.status + (result.descrHttpStatus ? "[" + result.descrHttpStatus + "]" : ""));
					}).fail(function(e) {
						_rejectError(e);
					});
				}
			} catch (e) {
				deferred.resolve(false, null, "Httpstatus: " + result.status + (result.descrHttpStatus ? "[" + result.descrHttpStatus + "]" : ""));
			}
		}).fail(function(e) {
			_rejectError(e);
		});
	} catch (e) {
		_rejectError(e, "Do login request exception");
	} finally {
		return deferred.promise();
	}
};

/**
 * Logout
 */
var _logout = function() {
	var deferred = new $.Deferred();
	var _rejectError = function(e, t) {
		log && log(t || "Logout request rejected", e);
		deferred.reject(e);
	};
	try {
		var url = globals.baseLocation().host + _config.svcLogout;
		// temporarily - To improve
		return ajax("GET", url, {
			device: "phone"
		}).then(function(result) {
			var data;
			var msg = "";
			if (!result.isSuccess) {
				msg = "Httpstatus: " + result.status + (result.descrHttpStatus ? "[" + result.descrHttpStatus + "]" : "");
			}
			var diag = result.responseJSON ? result.responseJSON.$diagnoses : null;
			if (diag) {
				diag.forEach(function(d) {
					msg += (msg.lengthj > 0 ? "\n" : "") + d.$message;
				});
			}
			deferred.resolve(result.isSuccess, msg);
		}).fail(function(e) {
			_rejectError(e);
		});
	} catch (e) {
		_rejectError(e, "Do logout request exception");
	} finally {
		return deferred.promise();
	}
};

exports.check = _check;
exports.login = _login;
exports.logout = _logout;