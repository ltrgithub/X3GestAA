"use strict";

var log = require('syracuse-tablet/html/js/helpers/logger').getLogger("factory");
var globals = require('syracuse-tablet/html/js/helpers/globals');

var _ctor = {
	Application: function() {
		throw new Error("Not implemented");
	},
	DashoardPage: function() {
		throw new Error("Not implemented");
	},
	RegularPage: function() {
		throw new Error("Not implemented");
	},
	DefHomePage: function() {
		throw new Error("Not implemented");
	},
	VignetteError: function() {
		throw new Error("Not implemented");
	},
	LoginPage: function() {
		throw new Error("Not implemented");
	},
	SettingsPage: function() {
		throw new Error("Not implemented");
	},
	AboutPage: function() {
		throw new Error("Not implemented");
	},
	DaoApp: function() {
		throw new Error("Not implemented");
	},
	DaoSdata: function() {
		throw new Error("Not implemented");
	}
};

var _createApplication = function($$elmt) {
	var res = new _ctor.Application($$elmt, exports);
	res.init();
	log && log("Application", "Create ok");
	return res;
};

var _createPage = function($parent, state) {
	var res = null,
		type = state.type;
	var deferred = $.Deferred();
	if (type == "html" && state.name == "login") {
		res = new _ctor.LoginPage($parent, state);
	} else if (type == "html" && state.name == "settings") {
		res = new _ctor.SettingsPage($parent, state);
	} else if (type == "html" && state.name == "about") {
		res = new _ctor.AboutPage($parent, state);
	} else if (type == "html" && state.name == "defhome") {
		res = new _ctor.DefHomePage($parent, state);
	} else if (type == "html" && state.name == "vignetteerror") {
		res = new _ctor.VignetteError($parent, state);
	} else if (type == "dashboard") {
		var info = globals.getApplication().dao.getDashboardInfo(state.dashboardUuid);
		res = new _ctor.DashoardPage($parent, state, info.prototype, info.article);
	} else if (type == "regular") {
		globals.getApplication().dao.getRegularPageInfo(state.name, state.options)
			.then(function(info) {
				res = new _ctor.RegularPage($parent, state, info.prototype, info.article);
				deferred.resolve(res);
			});
		return deferred.promise();
	} else {
		throw new Error("Unknown page type[" + type + "]");
	}
	deferred.resolve(res);
	log && log("New Page", "Create ok");
	return deferred.promise();
};

var _createDaoApp = function(appli) {
	var dao = new _ctor.DaoApp(appli);
	log && log("New DAO Application", "Create ok");
	return dao;
};

var _createDaoSdata = function(type, data, prototype, parent, options) {
	var dao;
	switch (type) {
		case "representation":
		case "process":
		case "request":
		case "statistics":
		case "dashboardpage":
		case "externallink":
			dao = new _ctor.DaoSdata(data, prototype, parent, options);
			break;
		default:
			throw new Error("Unknown DaoSdata type[" + type + "]");
			break;
	}
	log && log("New DAO View", "Create ok");
	return dao;
};

exports.setImpl = function(name, ctor) {
	_ctor[name] = ctor;
};

exports.createApplication = _createApplication;
exports.createPage = _createPage;
exports.createDaoApp = _createDaoApp;
exports.createDaoSdata = _createDaoSdata;