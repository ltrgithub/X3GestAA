"use strict";

var globals = require('syracuse-tablet/html/js/helpers/globals');
var utils = require('syracuse-tablet/html/js/helpers/utils');

/**
 * Page types are : "html", "regular", "dashboard"
 */
var _staticPages = {
	"login": {
		type: "html",
		subtype: "login"
	},
	"about": {
		type: "html",
		subtype: "about"
	},
	"settings": {
		type: "html",
		subtype: "settings"
	}
};

var _defInfo = {
	home: false,
	type: "regular",
	cached: false,
	refreshed: false,
	appId: "root",
	changeHash: false
};

var _pages = {};

function _registerStaticPages() {
	for (var p in _staticPages) {
		_pages[p] = $.extend(true, {}, _defInfo, _staticPages[p]);
	}
}

var _getInfo = function(id, clone) {
	var i;
	i = _pages[id];
	if (i && clone === true) i = $.extend(true, {}, i);
	return i;
};
/**
 *  fallback param is used for test applications because pages are loaded dynamically - see getRegularPageInfo
 *  Page info is u^dated once the prototype as been loaded
 **/
var _getPageInfo = function(state, options, fallback) {
	if (state == null) state = "";
	if (typeof state !== "string") return state;
	var name = state.trim();
	if (name.indexOf("#") == 0) {
		name = name.substring(1);
	}
	state = _getInfo(name, true);
	if (!state && fallback) {
		state = fallback;
	} else if (!state) {
		return null;
	}
	if (options) {
		state.options = options ? $.extend(true, {}, options) : {};
		// Regular page needs gadget context - Ex create action..
		var gadgetId = options["gadget-id"];
		if (gadgetId) {
			state.options.gadget = globals.getApplication().dao.getGadget(gadgetId);
		}
	}
	state.name = name;
	if (!state.transition) {
		// Default transition
		state.transition = globals.$config("transition");
	}
	// Readable id
	state.uuid = utils.readableuid("page", state.appId || "root", state.type, state.name);
	return state;
};
/**
 * Register regular page
 */
var _registerRegularPage = function(id, meta) {
	var info = $.extend(true, {}, _defInfo),
		facet;
	info.type = "regular";
	if (meta.$page && meta.$page.$prototype) {
		facet = meta.$page.$prototype.$type;
		if (!facet) {
			// if no type we take $url - in test representation  $type is not set
			facet = meta.$page.$prototype.$url;
		}
		info.subtype = facet.substring(facet.lastIndexOf('.$') + 2);
		if (!info.subtype) {
			throw new Error("unexpected facet for page " + id + "\n$url=" + meta.$page.$prototype.$url);
		}
	} else {
		info.subtype = "unknown";
	}
	_pages[id] = info;
	// returns the new state
	return info;
};
/**
 * Register dashboard page
 */
var _registerDashboard = function(id, meta, appMetaData) {
	var info = $.extend(true, {}, _defInfo, meta.$pageInfo);
	info.type = "dashboard";
	if (appMetaData.$application.$homeDashboard.dashboardName === meta.$dashboardName) {
		info.subtype = info.isWelcomePage ? "welcome" : "home";
		info.isHomeDashboard = true;
	} else {
		info.isHomeDashboard = false;
		info.subtype = "std";
	}
	// Name is used for readable dom ids - info guarantee unic ids 
	info.name = info.id = meta.$dashboardName + ".$dashboard";
	info.dashboardUuid = id;
	_pages[info.id] = info;
};
/**
 *  Register the pages of a Syracuse Mobile Application
 **/
var _registerPages = function(appMetaData) {
	_pages = {};
	_registerStaticPages();
	if (!appMetaData) return;
	if (appMetaData.$dashboards) {
		for (var p in appMetaData.$dashboards) {
			_registerDashboard(p, appMetaData.$dashboards[p], appMetaData);
		}
	}
	if (appMetaData.$pages) {
		for (var p in appMetaData.$pages) {
			_registerRegularPage(p, appMetaData.$pages[p]);
		}
	}
};

_registerStaticPages();

exports.getPageInfo = _getPageInfo;
exports.registerPages = _registerPages;
/**
 * registerRegularPage is also called when a prototype has been fetched (test representation are loading on demand)
 */
exports.registerRegularPage = _registerRegularPage;