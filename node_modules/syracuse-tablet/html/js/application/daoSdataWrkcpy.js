"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var globals = require('syracuse-tablet/html/js/helpers/globals');
var Base = require('syracuse-tablet/html/js/application/daoSdata').Dao;

/**
 * Class DAO that manages a working copy
 * Currently we don't manage a working copy on rowDetail DAO - TODO
 */
var _Klass = utils.defineClass(function(data, prototype, options) {
	options = options || {};
	Base.call(this, data, prototype, options);
	this.enableWorkingCopy = true;
	this.wrkCpyTransacId = this.isRowDetailDao === true ? this.parent.wrkCpyTransacId : this.workingCopyGetId();
}, Base, {
	destroy: function(destroyProto) {
		Base.prototype.destroy.call(this, destroyProto);
	},
	setDirty: function() {
		Base.prototype.setDirty.call(this);
		this._workingCopyUpdate();
	},
	_workingCopyUpdate: function() {
		var self = this;
		if (self.enableWorkingCopy !== true) return;
		var step;
		if (self.wrkCpyDirty) {
			console.log("_workingCopyUpdate", "update");
			return globals.getStorage().draftOperation("wrkcpyUpdate", self.data);
		} else {
			self.wrkCpyDirty = true;
			console.log("_workingCopyUpdate", "create");
			return globals.getStorage().draftOperation("wrkcpyCreate", self.data, self.wrkCpyTransacId).then(function(data) {
				self.enableWorkingCopy = data != null;
			});
		}
	},
	workingCopyGetId: function(onlyIfDirty) {
		if (this.enableWorkingCopy !== true && this.data == null) return null;
		if (onlyIfDirty === true && this.wrkCpyDirty !== true) return null;
		return this.data.$uuid;
	},
	clone: function() {
		return new _Klass($.extend(true, {}, this.data), this.prototype, {
			parent: this.parent,
			$bind: this.$bind,
			isRowDetailDao: this.isRowDetailDao === true
		});
	},
	updateParentRow: function(create, singleArrayRowIdx) {
		var res = Base.prototype.updateParentRow.call(this, create, singleArrayRowIdx);
		// Delete the working copy because parent has bee updated
		globals.getStorage().draftOperation("wrkcpyDelete", this.workingCopyGetId());
		return res;

	}
});

exports.Klass = _Klass;