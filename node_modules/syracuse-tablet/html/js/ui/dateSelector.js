"use strict";
var utils = require('syracuse-tablet/html/js/helpers/utils');
var uiUtils = require('syracuse-tablet/html/js/ui/uiUtils');
var _dateApi = require('syracuse-tablet/html/js/helpers/types/date');

var _Klass = utils.defineClass(

	function() {

	}, null, {
		create: function(parentSlot, field, options) {
			this.domItem = document.createElement("div");
			this.domItem.className = "s-calendar";
			parentSlot.appendChild(this.domItem);

			if (options && options.internalValue) {
				this._selectedDate = isNaN(options.internalValue) ? _dateApi.today() : _dateApi.fromInternalValue(options.internalValue);
				this._currentDate = _dateApi.fromInternalValue(this._selectedDate._value);
			} else {
				var value = field.getValue() || "";
				//TODO
				this._selectedDate = value ? _dateApi.parse(value) : _dateApi.today();
				this._currentDate = _dateApi.fromInternalValue(this._selectedDate._value);
			}
			this.field = field;
			this._table = document.createElement("table");
			this._table.setAttribute("cellspacing", 0);
			this._table.className = "s-calendar-content";
			this._table.appendChild(this._appendHead());
			this._table.appendChild(this.body = document.createElement("tbody"));
			this._table.appendChild(this._appendFoot());
			this.domItem.appendChild(this._table);

			this._drawBody();
		},
		_appendHead: function() {
			var head = document.createElement("thead");
			var row = document.createElement("tr");
			var cell = document.createElement("th");
			cell.setAttribute("colspan", 8);
			cell.className = "s-calendar-month-year";

			// prev year link
			var link = document.createElement("a");
			link.syraOnClick = "onChangePeriode";
			link.syraIsPrev = true;
			link.syraPeriod = "year";
			link.className = "s-calendar-prev s-calendar-prev-year";
			cell.appendChild(link);

			// prev month link
			link = document.createElement("a");
			link.syraOnClick = "onChangePeriode";
			link.syraPeriod = "month";
			link.syraIsPrev = true;
			link.className = "s-calendar-prev s-calendar-prev-month";
			cell.appendChild(link);

			this._monthLink = document.createElement("a");
			this._monthLink.className = "s-calendar-month-year-link";
			cell.appendChild(this._monthLink).syraOnClick = "onMonthClick";

			this._yearLink = document.createElement("a");
			this._yearLink.className = "s-calendar-month-year-link";
			cell.appendChild(this._yearLink).syraOnClick = "onYearClick";

			link = document.createElement("a");
			link.syraOnClick = "onChangePeriode";
			link.syraPeriod = "month";
			link.className = "s-calendar-next s-calendar-next-month";
			cell.appendChild(link);

			link = document.createElement("a");
			link.syraOnClick = "onChangePeriode";
			link.syraPeriod = "year";
			link.className = "s-calendar-next s-calendar-next-year";
			cell.appendChild(link);

			row.appendChild(cell);
			head.appendChild(row);

			row = document.createElement("tr");
			var cell = document.createElement("th");
			cell.className = "s-calendar-week-day";
			row.appendChild(cell);

			var days = [1, 2, 3, 4, 5, 6, 0];
			for (var ii = 0, jj = days.length; ii < jj; ii++) {
				var cell = document.createElement("th");
				cell.className = "s-calendar-week-day";
				cell.title = _dateApi.dayName(days[ii]);
				cell.textContent = _dateApi.dayName(days[ii], true);
				row.appendChild(cell);
			}
			head.appendChild(row);
			return head;
		},
		_appendFoot: function() {
			var row = document.createElement("tr");
			var cell = document.createElement("td");
			cell.setAttribute("colspan", 3);
			cell.className = "s-calendar-foot-week";

			var link = document.createElement("a");
			link.syraOnClick = "onChangePeriode";
			link.syraPeriod = "week";
			link.className = "s-calendar-prev";
			cell.appendChild(link);

			var label = document.createElement("label");
			label.className = "s-calendar-foot-week-title";
			label.textContent = "Week";
			//TODO
			//label.textContent = this.field.localize.fdpWeek;
			cell.appendChild(label);

			this._weekNumber = document.createElement("label");
			this._weekNumber.className = "s-calendar-foot-week-title-num";
			cell.appendChild(this._weekNumber);

			link = document.createElement("a");
			link.syraOnClick = "onChangePeriode";
			link.syraPeriod = "week";
			link.className = "s-calendar-next";
			cell.appendChild(link);
			row.appendChild(cell);

			cell = document.createElement("td");
			cell.setAttribute("colspan", 3);
			cell.className = "s-calendar-foot-today";
			link = document.createElement("a");
			link.className = "s-calendar-today-link";
			link.syraOnClick = "onTodayClick";
			//TODO
			//link.textContent = this.field.localize.fdpToday;
			link.textContent = "Today";
			cell.appendChild(link);
			row.appendChild(cell);

			cell = document.createElement("td");
			cell.setAttribute("colspan", 2);
			cell.className = "s-calendar-foot-more";
			this._quick = document.createElement("a");
			this._quick.className = "s-calendar-quick-btn";
			this._quick.syraOnClick = "onQuickClick";
			cell.appendChild(this._quick);
			row.appendChild(cell);

			var foot = document.createElement("tfoot");
			foot.appendChild(row);
			return foot;
		},
		_drawBody: function() {
			//TODO
			//var curMonth = this._currentDate.month
			var curMonth = this._currentDate.month || 8;
			var month = _dateApi.monthName(curMonth);

			this._monthLink.textContent = month;
			this._yearLink.textContent = this._currentDate.year || 2014;
			//TODO
			//this._yearLink.textContent = this._currentDate.year;

			uiUtils.empty(this.body);

			var curDate = _dateApi.fromInternalValue(this._currentDate._value);
			var begOfMonth = curDate = curDate.begOfMonth();
			curDate = curDate.begOfWeek(1);
			for (var weekRow = 0; weekRow < 6; weekRow++) {
				var row = document.createElement("tr");
				var weekDay = (weekRow == 0) ? begOfMonth : curDate;
				var cell = document.createElement("td");
				cell.className = "s-calendar-week-num";
				row.appendChild(cell);
				cell.textContent = weekDay.week;
				for (var day = 0; day < 7; day++) {
					var cell = document.createElement("td");
					cell.className = "s-calendar-day-link";
					cell.syraOnClick = "onDayClick";
					cell.syraValue = curDate._value;
					var link = document.createElement("a");
					link.textContent = curDate.day;
					if (curMonth != curDate.month) {
						cell.className += " s-calendar-other-month";
					}
					if (this._currentDate.equals(curDate)) {
						cell.className += " s-calendar-select";
						link.className = "s-calendar-select";
					}
					cell.appendChild(link);
					row.appendChild(cell);
					curDate = curDate.addDays(1);
				}
				this.body.appendChild(row);
			}
			this._weekNumber.textContent = this._currentDate.week;
		},
		destroy: function() {
			this.domItem = null;
		}
	});

exports.DateSelector = _Klass;