"use strict";

var globals = require('syracuse-tablet/html/js/helpers/globals');
var utils = require('syracuse-tablet/html/js/helpers/utils');
var locale = require('syracuse-tablet/html/js/helpers/locale');
var modalDialog = require('syracuse-tablet/html/js/ui/modalDialog');

var _templateAll = {
	header: '\
			<div class="modal-title">{{title}}</div> \
			<button type="button" class="btn btn-default s-m-modal-btn-cancel pull-right" data-action="$cancel"></button> \
			',
	content: ' \
			<div class="s-m-scroll-wrapper s-m-scroll-wrapper-v">\
				<div class="form-group s-m-scroll-element"> \
					<div class="list-group" id="modal-device-select-list-id"> \
						{{#each devices}} \
							<a draggable="false" href="#" class="list-group-item" data-action="clickDevice" data-params="{{name}}">{{label}}</a> \
						{{/each}} \
					</div> \
				</div> \
		    </div>',
	footer: ''
};

var _Klass = utils.defineClass(
	function ApplicationSelectionDialog(device) {
		var self = this;
		modalDialog.ModalBase.call(self);
		// Init params
		self.selectedDevice = device;
	}, modalDialog.ModalBase, {
		_getTemplates: function() {
			var self = this;
			return {
				std: _templateAll
			};
		},

		getDisplayFlags: function() {
			var self = this;
			var displayFlags = self.displayFlags || {};
			if (self.deviceType === "tablet") {
				displayFlags.modalClass = "config-tile half_right";
			} else {
				displayFlags.modalClass = "config-tile full";
			}
			return displayFlags;
		},

		_getDataContext: function() {
			var self = this;
			var devices = [];

			var site = globals.getSiteLayout();
			var devs = site.getDeviceTemplates();
			for (var dev in devs) {
				devices.push({
					name: dev,
					label: locale.textOpt("auth.device." + dev + ".title") || dev
				});
			}

			var data = {
				title: locale.text("auth.device.title"),
				devices: devices,
			};

			return data;
		},

		// could be removed, result is set in _onAction
		_onValidate: function() {

		},
		_onCancel: function() {
			var self = this;
			self.selectedApps = {};
		},

		_onAction: function(action, param) {
			var self = this;
			if (action === "clickDevice") {
				self.selectedDevice = param;
				return true;
			}
			// dont close on actions
			return false;
		},

		_getResult: function() {
			var self = this;
			return self.selectedDevice;
		}
	}
);

exports.Modal = _Klass;