"use strict";

var globals = require('syracuse-tablet/html/js/helpers/globals');
var utils = require('syracuse-tablet/html/js/helpers/utils');
var locale = require('syracuse-tablet/html/js/helpers/locale');
var modalDialog = require('syracuse-tablet/html/js/ui/modalDialog');

var _templateTablet = '\
		<div class="modal-content"> \
		    <div class="modal-header"> \
				<h4 class="modal-title">{{title}}</h4> \
		    </div> \
		    <div class="modal-body"> \
				<div class="form-group"> \
					<div class="list-group">\
						{{#each appList}} \
							<a href="#" class="list-group-item" data-action="clickApp" data-params="{{applicationName}}">\
								<h4 class="list-group-item-heading">{{title}}</h4>\
								<p class="list-group-item-text">{{description}}</p>\
							</a>\
						{{/each}} \
					</div> \
				</div> \
		    </div> \
		    <div class="modal-footer"> \
				<button type="button" class="btn btn-default" data-action="$validate">{{label_validate}}</button> \
    			<button type="button" class="btn btn-default" data-action="$cancel">{{label_cancel}}</button> \
			</div> \
		</div>';

var _Klass = utils.defineClass(
	function ApplicationSelectionDialog(tile) {
		var self = this;
		modalDialog.ModalBase.call(self);
		// Init params
		self.tile = tile;

		// Result
		self.result = null;
	}, modalDialog.ModalBase, {
		_getTemplateStrings: function() {
			var self = this;
			return {
				std: _templateTablet,
				//				tablet: "alternative 1",
				//				smartphone:"alternative 2",
			};
		},

		_getDataContext: function() {
			var self = this;
			return {
				label_validate: locale.text("welcome.tile.cfg.ok"),
				label_cancel: locale.text("welcome.tile.cfg.cancel"),
				title: locale.text("welcome.tile.cfg.title"),

				lab_title: locale.text("welcome.tile.cfg.lab_title"),
				lab_color: locale.text("welcome.tile.cfg.lab_color"),
				lab_size: locale.text("welcome.tile.cfg.lab_size"),
				lab_icon: locale.text("welcome.tile.cfg.lab_icon"),
			};
		},

		// could be removed, result is set in _onAction
		_onValidate: function() {

		},
		_onCancel: function() {
			var self;
		},

		_onAction: function(action, param) {
			var self = this;
			if (action === "clickApp") {
				var $$app = self.$$elmt.find('[data-params="' + param + '"]');
				if (self.selectedApps[param]) {
					$$app.removeClass("active");
					delete self.selectedApps[param];
				} else {
					$$app.addClass("active");
					self.selectedApps[param] = true;
				}
			}
			// dont close on actions
			return false;
		},

		_getResult: function() {
			var self = this;
			return self.result;
		}
	}
);

exports.Modal = _Klass;