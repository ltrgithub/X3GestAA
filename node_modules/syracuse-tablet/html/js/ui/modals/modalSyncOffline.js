"use strict";

var globals = require('syracuse-tablet/html/js/helpers/globals');
var utils = require('syracuse-tablet/html/js/helpers/utils');
var locale = require('syracuse-tablet/html/js/helpers/locale');
var modalDialog = require('syracuse-tablet/html/js/ui/modals/modalDialog');
var sdataHttp = require('syracuse-tablet/html/js/sdata/sdataHttp');
var date = require('syracuse-tablet/html/js/helpers/types/date');
var sdataSyncUtils = require('syracuse-tablet/html/js/sdata/sdataSyncUtils');

var _templateAll = {
	header: '\
			<buttons class="pull-right"> \
				<button type="button" class="btn btn-default s-m-modal-btn-cancel" data-action="$cancel"></button> \
			</buttons> \
			<div class="modal-title">{{title}}</div> \
			',
	content: ' \
			<div class="s-m-scroll-wrapper s-m-scroll-wrapper-v">\
			<div class="s-m-scroll-element"> \
				<div class="form-group"> \
				</div> \
				<div class="form-group"> \
					<div id="s-m-sync-tree-id"></div> \
				</div> \
			</div> \
			</div>',
	footer: ''
};

var _Klass = utils.defineClass(
	function ModalSyncOffline(syncRootData) {
		var self = this;
		modalDialog.ModalBase.call(self);
		self.syncRootData = syncRootData;
	}, modalDialog.ModalBase, {
		_getTemplates: function() {
			var self = this;
			return {
				std: _templateAll
			};
		},

		getDisplayFlags: function() {
			var self = this;
			var displayFlags = self.displayFlags || {};
			//			if (self.deviceType === "tablet") {
			//				displayFlags.modalClass = "sync-offline half_right";
			//			} else {
			//				displayFlags.modalClass = "sync-offline-legal full";
			//			}
			displayFlags.modalClass = "sync-offline-legal full";
			return displayFlags;
		},

		_getDataContext: function() {
			var self = this;
			var data = {
				title: locale.text("modal.legal.title"),
				label_brand: locale.text("modal.legal.title_brand"),
			};
			return data;
		},

		_onShow: function() {
			var self = this;
			modalDialog.ModalBase.prototype._onShow.call(self);
			sdataSyncUtils.getSyncStructure(self.syncRootData.pageProto)
				.then(function(tree) {
					self._buildStructHtml(tree);
				});
		},

		_buildStructHtml: function(node) {
			var self = this;
			var $$sync = $("#s-m-sync-tree-id");
			var $$ul = $("<ul>");
			self._addNode($$ul, node);
			$$sync.append($$ul);
		},

		_addNode: function($$parent, node) {
			var self = this;
			var $$li = $('<li class="s-m-sync-tree-item s-m-sync-tree-type-' + node.$syncType + '"><p class="icon"></p><p class="label"></p></li>');
			$("p.label", $$li).text(node.$title);
			$$parent.append($$li);
			if (node.$children.length > 0) {
				var $$ul = $("<ul>");
				$$li.append($$ul);
				node.$children.forEach(function(child) {
					self._addNode($$ul, child);
				});
			}
		},

		_onValidate: function() {},

		_onCancel: function() {},

		_getResult: function() {
			return "done";
		}
	}
);

exports.Modal = _Klass;