"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var modalDialog = require('syracuse-tablet/html/js/ui/modals/modalDialog');
var locale = require('syracuse-tablet/html/js/helpers/locale');

var _templateAll = {
	header: '\
		<buttons class="pull-right"> \
			<button type="button" class="btn btn-default s-m-modal-btn-cancel" data-action="$cancel"></button> \
		</buttons> \
		<div class="modal-title">{{title}}</div>',
	content: '{{{domBody}}}',
	footer: ''
};


var _Klass = utils.defineClass(
	function ModalField(title, domBody, cb) {
		var self = this;
		modalDialog.ModalBase.call(self);
		// Init params
		self.title = title || "Warning";
		self.domBody = domBody;
		self.cb = cb;
	}, modalDialog.ModalBase, {
		destroy: function() {
			modalDialog.ModalBase.prototype.destroy.call(this);
			this.domBody = null;
			this.cb = null;
		},
		_getTemplates: function() {
			var self = this;
			return {
				std: _templateAll
			};
		},
		getDisplayFlags: function() {
			var self = this;
			var displayFlags = self.displayFlags || {};
			if (self.deviceType === "tablet") {
				displayFlags.modalClass = "field tablet";
			} else {
				displayFlags.modalClass = "field mobile";
			}
			return displayFlags;
		},
		_getDataContext: function() {
			var self = this;
			return {
				title: self.title,
				domBody: self.domBody,
				close: locale.text("modal.btn.close")
			};
		},
		_onShow: function(evt) {
			var self = this;
			modalDialog.ModalBase.prototype._onShow.call(self, evt);
			self._execCb(self.cb, "shown.bs.modal", self.$$elmt);
		},
		_onCancel: function() {
			return true;
		},
		_onHide: function(evt) {
			var self = this;
			modalDialog.ModalBase.prototype._onHide.call(self, evt);
			self._execCb(self.cb, "hide.bs.modal", self.$$elmt);
		},
		_execCb: function(cb, msg, data) {
			if (!cb || arguments.length == 0) return;
			var cb = arguments[0];
			var args = Array.prototype.slice.call(arguments, 1);
			cb.apply(null, args);
		}
	}
);
exports.Modal = _Klass;