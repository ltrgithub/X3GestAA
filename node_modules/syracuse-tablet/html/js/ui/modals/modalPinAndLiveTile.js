"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var modalDialog = require('syracuse-tablet/html/js/ui/modals/modalDialog');
var locale = require('syracuse-tablet/html/js/helpers/locale');

var _templateAll = {
	header: '\
		<buttons class="pull-right"> \
			<button type="button" class="btn btn-default s-m-modal-btn-validate" data-action="$validate"></button> \
			<button type="button" class="btn btn-default s-m-modal-btn-cancel" data-action="$cancel"></button> \
		</buttons> \
		<div class="modal-title">{{title}}</div> \
			',
	content: ' \
			<div class="">\
				<div class="form-group"> \
					<table class="s-m-pinandlifetile" >\
					{{#each items}}\
					<tr>\
					<td>{{this.title}}</td>\
					<td><input id="{{this.id}}" type="checkbox" data-value="{{this.value}}"></td>\
					</tr>\
					{{/each}}\
					</table>\
				</div> \
			</div>',

	footer: '',
};
var _items = [{
	id: "pinwelcome",
	value: false
}, {
	id: "lifetile",
	value: false
}];
/*
ctx: {
	lifetile: false,
	pageTitle: "Customer Dashboard",
	pinwelcome: true
}
*/
var _Klass = utils.defineClass(
	function ModalPinAndLiveTile(ctx) {
		this.context = $.extend(true, {}, ctx);
		modalDialog.ModalBase.call(this);
		this.result = null;
	}, modalDialog.ModalBase, {
		_getTemplates: function() {
			return {
				std: _templateAll
			};
		},
		_getDataContext: function() {
			var self = this;
			_items.forEach(function(item) {
				item.value = false;
				item.title = locale.text(item.id + ".page." + (self.context[item.id] ? "remove" : "add"));
			});
			var data = {};
			data.items = _items;
			data.title = this.context.pageTitle || "";
			return data;
		},
		_onShow: function() {
			var self = this;
			modalDialog.ModalBase.prototype._onShow.call(this);
			_items.forEach(function(item) {
				var $$item = self.$$elmt.find("#" + item.id);
				$$item.bootstrapSwitch("onText", locale.text(item.id + ".page.label.onText"));
				$$item.bootstrapSwitch("offText", locale.text(item.id + ".page.label.offText"));
				$$item.bootstrapSwitch("size", "small");
				$$item.bootstrapSwitch("onColor", "default");
				$$item.bootstrapSwitch("offColor", "default");
				$$item.bootstrapSwitch('state', false);
			});
		},
		_onValidate: function() {
			var content = null,
				self = this;
			_items.forEach(function(item) {
				var $$item = self.$$elmt.find("#" + item.id);
				var value = $$item.bootstrapSwitch('state');
				if (value) {
					content = content || {};
					content["toggle" + item.id] = "change";
				}
			});
			this.result = {};
			this.result.action = content ? "yes" : "no";
			this.result.content = content;
			console.log("_onValidate", this.result);
		},
		_onCancel: function() {
			this.result = {};
			this.result.action = "no";
			this.result.content = null;
		},
		_getResult: function() {
			return this.result;
		}
	}
);

exports.Modal = _Klass;