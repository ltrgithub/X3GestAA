"use strict";

var globals = require('syracuse-tablet/html/js/helpers/globals');
var utils = require('syracuse-tablet/html/js/helpers/utils');
var locale = require('syracuse-tablet/html/js/helpers/locale');
var modalDialog = require('syracuse-tablet/html/js/ui/modals/modalDialog');

var _templateAll = {
	header: '\
		<div class="modal-title {{severity}}">{{title}}</div>\
		<button type="button" class="btn btn-default s-m-modal-btn-cancel pull-right" data-action="$cancel"></button>',
	content: '\
		<div class="col-md-3"></div>\
		<div class="col-md-1"> \
			<a draggable="false" name="prev" href="#" class="glyphicon glyphicon-chevron-left" style="padding-top: 1em; font-size:30px;" data-action="prev"></a> \
		</div> \
		<div class="col-md-4"> \
			{{#each diags}} \
				<message id="s-m-msg-block-{{id}}" role="alert" style="display:{{this.display}}"> \
					<label class="label label-{{this.severity}}">{{this.severityLabel}}</label> \
					<div style="white-space: pre-line;">{{this.message}}</div> \
					{{#if stack}} \
						<a id="s-m-msg-stack-{{id}}" draggable="false" name="more" href="#" data-action="more">{{../../stackShow}}</a> \
						<stack name="stack" style="display: none;">{{this.stack}}</stack> \
					{{/if}} \
				</message> \
			{{/each}} \
		</div> \
		<div class="col-md-1"> \
			<a draggable="false" name="next" href="#" class="glyphicon glyphicon-chevron-right" style="padding-top: 1em; font-size:30px;" data-action="next"></a> \
		</div> \
		<div class="col-md-3"></div>',
	footer: '<button type="button" class="btn btn-default" data-action="$cancel">{{close}}</button>'
};


var _Klass = utils.defineClass(
	function ModalDiagnoses(title, diag, cb) {
		var self = this;
		modalDialog.ModalBase.call(self);
		// Init params
		self.title = title;
		self.diag = diag;
		self.cb = cb;
		self.diagId = 0;
		self.curMsg = 0;
	}, modalDialog.ModalBase, {
		_getTemplates: function() {
			var self = this;
			return {
				std: _templateAll
			};
		},
		_getDataContext: function() {
			//TODO
			var self = this;
			var ctx = {
				close: locale.text("modal.btn.close"),
				stackShow: locale.text("modal.diagnoses.btnstack_show"),
				severity: "info",
				diags: []
			};
			self.diag.$diagnoses.forEach(function(d) {
				var sev;
				if (d.$severity === "success" || d.$severity === "info" || d.$severity === "warning") {
					sev = d.$severity;
				} else {
					sev = "danger";
					ctx.severity = "error";
				}
				ctx.diags.push({
					id: self.diagId,
					display: self.diagId === 0 ? "block" : "none",
					message: d.$message,
					severity: sev,
					severityLabel: locale.text("severity." + sev),
					stack: d.$stackTrace
				});

				self.diagId++;
			});

			self.title = self.title || (ctx.severity === "error" ? locale.text("modal.error.ttl") : locale.text("modal.info.ttl"));
			ctx.title = self.title;

			return ctx;

		},
		_onAction: function(action, param) {
			var self = this;
			switch (action) {
				case "next":
					self._next();
					break;
				case "prev":
					self._prev();
					break;
				case "more":
					self._more();
					break;
			}

			// dont close on actions
			return false;
		},
		_next: function() {
			var self = this;
			$("#s-m-msg-block-" + self.curMsg, self.$$elmt).css("display", "none");
			self.curMsg++;
			$("#s-m-msg-block-" + self.curMsg, self.$$elmt).css("display", "block");
			self._updateButtons();
		},
		_prev: function() {
			var self = this;
			$("#s-m-msg-block-" + self.curMsg, self.$$elmt).css("display", "none");
			self.curMsg--;
			$("#s-m-msg-block-" + self.curMsg, self.$$elmt).css("display", "block");
			self._updateButtons();
		},
		_more: function() {
			var self = this;
			var $$btn = $("#s-m-msg-stack-" + self.curMsg, self.$$elmt);
			var $$stack = $("[name=stack]", $$btn.parent());
			if ($$stack.css("display") === "none") {
				$$stack.css("display", "block");
				$$btn.text(locale.text("modal.diagnoses.btnstack_hide"));
			} else {
				$$stack.css("display", "none");
				$$btn.text(locale.text("modal.diagnoses.btnstack_show"));
			}
		},
		_updateButtons: function() {
			var self = this;
			if (self.curMsg >= self.diagId - 1) {
				$("[name=next]", self.$$elmt).css("display", "none");
			} else {
				$("[name=next]", self.$$elmt).css("display", "block");
			}
			if (self.curMsg <= 0) {
				$("[name=prev]", self.$$elmt).css("display", "none");
			} else {
				$("[name=prev]", self.$$elmt).css("display", "block");
			}
			// Only show x of y in case there are more than 1 diagnoses
			if (self.diagId > 1) {
				$(".modal-title", self.$$elmt).text(self.title + " (" + (self.curMsg + 1) + "/" + self.diagId + ")");
			}
		},
		_onShow: function(evt) {
			var self = this;
			self.cb && self.cb();
			modalDialog.ModalBase.prototype._onShow.call(self, evt);
			self._updateButtons();
		},
		_onCancel: function() {
			var self = this;
			self._onHide();
			return true;
		},
		_onHide: function(evt) {
			var self = this;
			self.cb && self.cb();
			modalDialog.ModalBase.prototype._onHide.call(self, evt);
		}

	}
);
exports.Modal = _Klass;