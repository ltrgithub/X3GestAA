"use strict";

var globals = require('syracuse-tablet/html/js/helpers/globals');
var locale = require('syracuse-tablet/html/js/helpers/locale');
var modalDialog = require('syracuse-tablet/html/js/ui/modalDialog');

var _templateAll = {
	header: '
		<div class="modal-title {{severity}}">{{title}}</div>\
		<button type="button" class="btn btn-default s-m-modal-btn-cancel pull-right" data-action="$cancel"></button>',
	content: '
		<div class="col-md-3"></div>\
		<div class="col-md-1"> \
			<a draggable="false" name="prev" href="#" class="glyphicon glyphicon-chevron-left" style="padding-top: 1em; font-size:30px;"></a> \
		</div> \
		<div class="col-md-4"> \
			{{#each diags}} \
				<message id="s-m-msg-block-{{id}}" role="alert" style="display:{{this.display}}"> \
					<label class="label label-{{this.severity}}">{{this.severityLabel}}</label> \
					<div style="white-space: pre-line;">{{this.message}}</div> \
					{{#if stack}} \
						<a draggable="false" name="more" href="#">{{../../stackShow}}</a> \
						<stack name="stack" style="display: none;">{{this.stack}}</stack> \
					{{/if}} \
				</message> \
			{{/each}} \
			<footer> \
				<button type="button" class="btn btn-default pull-right" data-dismiss="modal">{{close}}</button> \
			</footer> \
		</div> \
		<div class="col-md-1"> \
			<a draggable="false" name="next" href="#" class="glyphicon glyphicon-chevron-right" style="padding-top: 1em; font-size:30px;"></a> \
		</div> \
		<div class="col-md-3"></div> \
	',
	footer: '<button type="button" class="btn btn-default" data-action="$cancel">{{close}}</button>'
};


var _Klass = utils.defineClass(
	function ModalDiagnoses(device) {
		var self = this;
		modalDialog.ModalBase.call(self);
		// Init params
		self.selectedDevice = device;
	}, modalDialog.ModalBase, {
		_getTemplates: function() {
			var self = this;
			return {
				std: _templateAll
			};
		}
	}
);


exports.show = function(title, diag, cb) {

	function _next() {
		$("#s-m-msg-block-" + curMsg, $$dialog).css("display", "none");
		curMsg++;
		$("#s-m-msg-block-" + curMsg, $$dialog).css("display", "block");
		_updateButtons();
	}

	function _prev() {
		$("#s-m-msg-block-" + curMsg, $$dialog).css("display", "none");
		curMsg--;
		$("#s-m-msg-block-" + curMsg, $$dialog).css("display", "block");
		_updateButtons();
	}

	function _more() {
		var $$btn = $(this);
		var $$stack = $("[name=stack]", $$btn.parent());
		if ($$stack.css("display") === "none") {
			$$stack.css("display", "block");
			$$btn.text(locale.text("modal.diagnoses.btnstack_hide"));
		} else {
			$$stack.css("display", "none");
			$$btn.text(locale.text("modal.diagnoses.btnstack_show"));
		}
	}

	function _updateButtons() {
		if (curMsg >= id - 1) {
			$("[name=next]", $$dialog).css("display", "none");
		} else {
			$("[name=next]", $$dialog).css("display", "block");
		}
		if (curMsg <= 0) {
			$("[name=prev]", $$dialog).css("display", "none");
		} else {
			$("[name=prev]", $$dialog).css("display", "block");
		}
		// Only show x of y in case there are more than 1 diagnoses
		if (id > 1) {
			$(".s-m-modal-content header", $$dialog).text(title + " (" + (curMsg + 1) + "/" + id + ")");
		}
	}

	var modal = globals.getModal();

	var ctx = {
		close: locale.text("modal.btn.close"),
		stackShow: locale.text("modal.diagnoses.btnstack_show"),

		severity: "info",
		diags: []
	};

	var tpl = Handlebars.compile(_template);
	var id = 0;
	var curMsg = 0;
	diag.$diagnoses.forEach(function(d) {
		var sev;
		if (d.$severity === "success" || d.$severity === "info" || d.$severity === "warning") {
			sev = d.$severity;
		} else {
			sev = "danger";
			ctx.severity = "error";
		}
		ctx.diags.push({
			id: id,
			display: id === 0 ? "block" : "none",
			message: d.$message,
			severity: sev,
			severityLabel: locale.text("severity." + sev),
			stack: d.$stackTrace
		});

		id++;
	});

	title = title || (ctx.severity === "error" ? locale.text("modal.error.ttl") : locale.text("modal.info.ttl"));
	ctx.title = title;

	var html = tpl(ctx);
	var $$dialog = modal.modal(html, cb);
	_updateButtons();

	$("[name=prev]", $$dialog).click(_prev);
	$("[name=next]", $$dialog).click(_next);
	$("[name=more]", $$dialog).click(_more);

	return $$dialog;
};