"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var locale = require('syracuse-tablet/html/js/helpers/locale');
var modalDialog = require('syracuse-tablet/html/js/ui/modals/modalDialog');

var _templateAll = {
	header: '\
			<buttons class="pull-right"> \
				<button type="button" class="btn btn-default s-m-modal-btn-cancel" data-action="$cancel"></button> \
			</buttons> \
			<div class="modal-title">{{title}}</div> \
			',
	content: ' \
			<div class="s-m-scroll-wrapper s-m-scroll-wrapper-v">\
				<div class="form-group s-m-scroll-element"> \
					<div class="list-group">\
						{{#each views}} \
							<a draggable="false" href="#" class="list-group-item  {{selected}}" data-action="clickView" data-params="{{uuid}}">\
								<h4 class="list-group-item-heading">{{description}}</h4>\
								<p class="list-group-item-text">{{factoryOwner}}</p>\
							</a>\
						{{/each}} \
					</div> \
				</div> \
			</div>',
	footer: '{{#if createLabel}}\
			<button type="button" class="btn btn-default" data-action="createTemplate"> {{createLabel}}</button>\
			{{/if}}'
};

var _Klass = utils.defineClass(
	function ModalChooseWelcomeDashboard(opts) {
		var self = this;
		modalDialog.ModalBase.call(self);
		// Init params
		self.views = [];
		self.title = opts.title;
		self.result = null;
		if (opts.showCreateTemplate) {
			self.createLabel = locale.text("dashboard.welcome.create.template")
		}
		opts.views.forEach(function(view) {
			self.views.push({
				"description": view.$description,
				"personal": view.$isPersonal,
				"selected": (view.$selected ? "active" : ""),
				"uuid": view.$uuid,
				"factoryOwner": view.$factoryOwner,
			});
		});
	}, modalDialog.ModalBase, {
		_getTemplates: function() {
			var self = this;
			return {
				std: _templateAll
			};
		},

		getDisplayFlags: function() {
			var self = this;
			var displayFlags = self.displayFlags || {};
			if (self.deviceType === "tablet") {
				displayFlags.modalClass = "half_right";
			} else {
				displayFlags.modalClass = "full";
			}
			return displayFlags;
		},

		_getDataContext: function() {
			var self = this;
			return {
				title: self.title,
				views: self.views,
				createLabel: self.createLabel
			};
		},
		_onCancel: function() {
			var self = this;
			self.result = null
		},

		_onAction: function(action, param) {
			var self = this;
			if (action === "clickView") {
				self.result = {
					selectedView: param,
				}
			}
			if (action === "createTemplate") {
				self.result = {
					selectedView: null
				}
			}
			return true;
		},

		_getResult: function() {
			var self = this;
			return self.result;
		}
	}
);

exports.Modal = _Klass;