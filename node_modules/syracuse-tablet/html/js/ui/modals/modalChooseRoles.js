"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var locale = require('syracuse-tablet/html/js/helpers/locale');
var modalDialog = require('syracuse-tablet/html/js/ui/modals/modalDialog');

var _templateAll = {
	header: '\
			<buttons class="pull-right"> \
				<button type="button" class="btn btn-default s-m-modal-btn-validate" data-action="$validate"></button> \
				<button type="button" class="btn btn-default s-m-modal-btn-cancel" data-action="$cancel"></button> \
			</buttons> \
			<div class="modal-title">{{title}}</div> \
			',
	content: ' \
			<div class="s-m-scroll-wrapper s-m-scroll-wrapper-v">\
				<div class="form-group s-m-scroll-element"> \
					<div class="list-group">\
						{{#each roleList}} \
							<a draggable="false" href="#" class="list-group-item {{selected}}" data-action="clickRole" data-params="{{uuid}}">\
								<h4 class="list-group-item-heading">{{code}}</h4>\
								<p class="list-group-item-text">{{description}}</p>\
							</a>\
						{{/each}} \
					</div> \
				</div> \
			</div>',
	footer: ''
};

var _Klass = utils.defineClass(
	function ModalChoosRoles(roleList) {
		var self = this;
		modalDialog.ModalBase.call(self);
		// Init params
		self.roleList = [];
		self.rolesSelected = {}; //initial roles selected
		roleList.forEach(function(role) {
			self.roleList.push({
				"code": role.$code,
				"description": role.$description,
				"uuid": role.$uuid,
				"selected": role.$selected
			});
			if (role.$selected) {
				self.rolesSelected[role.$uuid] = true
			}
		});
		// Result
		self.selectedRoles = $.extend(true, {}, self.rolesSelected);
	}, modalDialog.ModalBase, {
		_getTemplates: function() {
			var self = this;
			return {
				std: _templateAll
			};
		},

		getDisplayFlags: function() {
			var self = this;
			var displayFlags = self.displayFlags || {};
			if (self.deviceType === "tablet") {
				displayFlags.modalClass = "half_right";
			} else {
				displayFlags.modalClass = "full";
			}
			return displayFlags;
		},

		_getDataContext: function() {
			var self = this;
			return {
				title: locale.text("welcome.select.roles.title"),
				roleList: self.roleList
			};
		},

		// could be removed, result is set in _onAction
		_onValidate: function() {

		},
		_onCancel: function() {
			var self = this;
			self.selectedRoles = $.extend(true, {}, self.rolesSelected);
		},

		_onAction: function(action, param) {
			var self = this;
			if (action === "clickRole") {
				var $$app = self.$$elmt.find('[data-params="' + param + '"]');
				if (self.selectedRoles[param]) {
					$$app.removeClass("active");
					delete self.selectedRoles[param];
				} else {
					$$app.addClass("active");
					self.selectedRoles[param] = true;
				}
			}
			// dont close on actions
			return false;
		},

		_getResult: function() {
			var self = this;
			var change = self._compare(self.selectedRoles, self.rolesSelected);
			return {
				"change": change,
				"selectedRoles": Object.keys(self.selectedRoles)
			};
		},
		_compare: function(roles1, roles2) {
			roles1 = roles1 || {};
			roles2 = roles2 || {};
			for (var prop in roles1) {
				if (!roles2[prop]) return true;
			};
			for (var prop in roles2) {
				if (!roles1[prop]) return true;
			}
			return false;
		}
	}
);

exports.Modal = _Klass;