"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var locale = require('syracuse-tablet/html/js/helpers/locale');
var modalDialog = require('syracuse-tablet/html/js/ui/modals/modalDialog');
var globals = require('syracuse-tablet/html/js/helpers/globals');

var _cacheOptions = {
	"1week": {
		days: 7
	},
	"2week": {
		days: 14
	},
	"month": {
		days: 30
	},
	"all": {
		days: null
	},
};
var _templateAll = {
	header: '\
		<buttons class="pull-right"> \
			<button type="button" class="btn btn-default s-m-modal-btn-validate" data-action="$validate"></button> \
			<button type="button" class="btn btn-default s-m-modal-btn-cancel" data-action="$cancel"></button> \
		</buttons> \
		<div class="modal-title">{{title}}</div> \
			',
	content: ' \
			<div class="s-m-scroll-wrapper s-m-scroll-wrapper-v">\
				<div class="form-group s-m-scroll-element"> \
					<header>{{label_device}}</header> \
					<div class="btn-group btn-group-justified" data-toggle="buttons" id="s-m-radio-type-id"> \
						<div class="btn-group"> \
							<label class="btn btn-primary" data-action="clickType" data-params="auto"> \
								<input type="radio" name="s-m-radio-type">{{label_auto}} \
							</label> \
						</div> \
						<div class="btn-group"> \
							<label class="btn btn-primary" data-action="clickType" data-params="smartphone"> \
								<input type="radio" name="s-m-radio-type">{{label_smartphone}} \
							</label> \
						</div> \
						<div class="btn-group"> \
							<label class="btn btn-primary" data-action="clickType" data-params="tablet"> \
								<input type="radio" name="s-m-radio-type">{{label_tablet}} \
							</label> \
						</div> \
					</div> \
					\
					<header>{{label_apps}}</header> \
					<div id="s-m-apps-btns-id" class="btn-group btn-group-justified"> \
					<label id="s-m-apps-clear-id" class="btn btn-primary" data-action="clearApps" data-params="clear">{{label_apps_update}}</label> \
					</div> \
					<div style="display:table-row;"> \
					<label id="s-m-apps-confirm-id" class="btn btn-primary s-m-confirm" data-action="clearApps" data-params="confirm,all" style="display: none;">{{label_apps_confirm}}</label> \
					<label id="s-m-apps-cancel-id" class="btn btn-warning s-m-cancel" data-action="clearApps" data-params="cancel" style="display: none;">{{label_cancel}}</label> \
					</div> \
					<div id="s-m-apps-progress-id" class="progress" style="display: none;"> \
						<div class="progress-bar progress-bar-striped active" role="progressbar" aria-valuenow="45" aria-valuemin="0" aria-valuemax="100" style="width: 100%">{{label_apps_wait}}</div> \
					</div> \
					\
					<div id="s-m-apps-ok-id" class="alert alert-success" role="alert" style="display: none">{{label_apps_ok}}</div> \
					\
					<header id="s-m-cache-id">{{label_cache}}</header> \
					<span id="s-m-cache-explain">{{label_cache_clear}}</header> \
					<div id="s-m-cache-btns-id" class="btn-group btn-group-justified"> \
						<label id="s-m-cache-clear-1week-id" class="btn btn-primary s-m-cache-btn" data-action="clearCache" data-params="clear,1week">{{label_cache_week1}}<div></div></label> \
						<label id="s-m-cache-clear-2week-id" class="btn btn-primary s-m-cache-btn" data-action="clearCache" data-params="clear,2week">{{label_cache_week2}}<div></div></label> \
						<label id="s-m-cache-clear-month-id" class="btn btn-primary s-m-cache-btn" data-action="clearCache" data-params="clear,month">{{label_cache_month}}<div></div></label> \
						<label id="s-m-cache-clear-all-id" class="btn btn-primary s-m-cache-btn" data-action="clearCache" data-params="clear,all">{{label_cache_all}}<div></div></label> \
					</div> \
					<div style="display:table-row;"> \
					<label id="s-m-cache-confirm-id" class="btn btn-primary s-m-confirm" data-action="clearCache" data-params="confirm,all" style="display: none;">{{label_cache_confirm}}</label> \
					<label id="s-m-cache-cancel-id" class="btn btn-warning s-m-cancel" data-action="clearCache" data-params="cancel" style="display: none;">{{label_cancel}}</label> \
					</div> \
					<div id="s-m-cache-progress-id" class="progress" style="display: none;"> \
						<div class="progress-bar progress-bar-striped active" role="progressbar" aria-valuenow="45" aria-valuemin="0" aria-valuemax="100" style="width: 100%">{{label_clearing}}</div> \
					</div> \
					\
					<div id="s-m-cache-ok-id" class="alert alert-success" role="alert" style="display: none">{{label_clearing_ok}}</div> \
					<div style="width:100%; display: inline-block;"></div> \
				</div> \
			</div>',

	footer: '',
};

var _Klass = utils.defineClass(
	function ModalSettings(settings) {
		var self = this;
		modalDialog.ModalBase.call(self);

		self.settings = settings && $.extend(true, {}, settings) || {};
		self.settings["device-type"] = self.settings["device-type"] || "auto";

		// Result
		self.result = null;
	}, modalDialog.ModalBase, {
		_getTemplates: function() {
			var self = this;
			return {
				std: _templateAll,
				smartphone: _templateAll
			};
		},

		getDisplayFlags: function() {
			var self = this;
			var displayFlags = self.displayFlags || {};
			if (self.deviceType === "tablet") {
				displayFlags.modalClass = "settings half_right";
			} else {
				displayFlags.modalClass = "settings full";
			}
			return displayFlags;
		},

		_getDataContext: function() {
			var self = this;
			var data = {
				title: locale.text("settings.title"),

				label_device: locale.text("settings.device.label"),
				label_auto: locale.text("settings.device.auto"),
				label_smartphone: locale.text("settings.device.smartphone"),
				label_tablet: locale.text("settings.device.tablet"),

				label_cache: locale.text("settings.cache.label"),
				label_cache_clear: locale.text("settings.cache.clear"),
				label_cache_week1: locale.text("settings.cache.week1"),
				label_cache_week2: locale.text("settings.cache.week2"),
				label_cache_month: locale.text("settings.cache.month"),
				label_cache_all: locale.text("settings.cache.all"),
				label_cache_confirm: locale.text("settings.cache.confirm"),

				label_clearing: locale.text("settings.cache.clearing"),
				label_clearing_ok: locale.text("settings.cache.clearing_ok"),

				label_apps: locale.text("settings.apps.label"),
				label_apps_update: locale.text("settings.apps.update"),
				label_apps_confirm: locale.text("settings.apps.confirm"),

				label_apps_wait: locale.text("settings.apps.wait"),
				label_apps_ok: locale.text("settings.apps.ok"),

				label_cancel: "", //locale.text("settings.cache.cancel"),
			};

			return data;
		},
		_onShow: function() {
			var self = this;
			modalDialog.ModalBase.prototype._onShow.call(self);

			// Apply UI states
			$("label[data-params='" + self.settings["device-type"] + "']", self.$$elmt).eq(0).button("toggle");

			self._computeCacheSize();
		},
		// could be removed, result is set in _onAction
		_onValidate: function() {
			var self = this;
			var $$active = $("#s-m-radio-type-id .active ", this.$$elmt);
			var deviceType = $$active.length < 1 ? "auto" : $$active.attr("data-params") || "auto";
			self.settings["device-type"] = deviceType;
			self.result = self.settings;
		},
		_onCancel: function() {
			var self = this;
			self.result = null;
		},

		_onAction: function(action, param) {
			var self = this;
			switch (action) {
				case "clickType":
					$("label[data-params='" + param + "']", self.$$elmt).eq(0).button("toggle");
					break;
				case "clearCache":
					self._clearCache(param);
					break;
				case "clearApps":
					self._clearApps(param);
					break;
			}
			// dont close on actions
			return false;
		},

		_clearApps: function(param) {
			var self = this;
			var p = param.split(",");
			var action = p[0];
			var data = p[1];
			self._setButtons("clearApps", "apps", action, data);
			if (action === "confirm") {
				return globals.getMetaData().removeApplications()
					.always(function() {
						globals.setNeedToCheckAppsList(true); // Force read of applications list
						self._setButtons("clearApps", "apps", "ok", "");
					});
			}
		},

		_clearCache: function(param) {
			var self = this;
			var p = param.split(",");
			var action = p[0];
			var data = p[1];
			self._setButtons("clearCache", "cache", action, data);
			if (action === "confirm") {
				// data: 1week, 2week, month, all
				var dt = self._getDateBefore(_cacheOptions[data].days);
				return globals.getCache().clearCache({
					$not_read_since: dt
				})
					.always(function() {
						self._setButtons("clearCache", "cache", "ok", "");
						self._computeCacheSize();
					});
			}
		},

		_setButtons: function(action, prefix, state, data) {
			var self = this;
			switch (state) {
				case "confirm":
					$("#s-m-" + prefix + "-progress-id", self.$$elmt).show();
					$("#s-m-" + prefix + "-confirm-id", self.$$elmt).hide();
					$("#s-m-" + prefix + "-cancel-id", self.$$elmt).hide();
					break;
				case "cancel":
					$("#s-m-" + prefix + "-btns-id", self.$$elmt).show();
					$("#s-m-" + prefix + "-confirm-id", self.$$elmt).hide();
					$("#s-m-" + prefix + "-cancel-id", self.$$elmt).hide();
					break;
				case "clear":
					$("#s-m-" + prefix + "-confirm-id", self.$$elmt).show();
					$("#s-m-" + prefix + "-cancel-id", self.$$elmt).show();
					$("#s-m-" + prefix + "-btns-id", self.$$elmt).hide();
					$("#s-m-" + prefix + "-confirm-id", self.$$elmt).attr("data-params", "confirm," + (data || ""));
					break;
				case "ok":
					$("#s-m-" + prefix + "-progress-id", self.$$elmt).hide();
					$("#s-m-" + prefix + "-ok-id", self.$$elmt).show();
					setTimeout(function() {
						$("#s-m-" + prefix + "-ok-id", self.$$elmt).hide();
						$("#s-m-" + prefix + "-btns-id", self.$$elmt).show();
					}, 3000);
					break;
			}
		},

		_getDateBefore: function(days) {
			if (!days) {
				return "9999-99-99-00-00-00";
			}
			var today = new Date();
			var dt = new Date(today);
			dt.setDate(today.getDate() - days);
			dt = dt.toJSON().slice(0, 10) + "-00-00-00";
			return dt;
		},

		_computeCacheSize: function() {
			var self = this;
			Object.keys(_cacheOptions).forEach(function(co) {
				var dt = self._getDateBefore(_cacheOptions[co].days);
				return globals.getCache().computeCacheSize({
					$not_read_since: dt
				})
					.always(function(result) {
						self._updateCacheSize(co, result);
					});
			});
		},

		_updateCacheSize: function(key, result) {
			var self = this;
			var $$div = $("#s-m-cache-clear-" + key + "-id > div", self.$$elmt);

			var units = [locale.text("global.units.kilobytes"),
				locale.text("global.units.megabytes")
			];

			$$div.empty();
			if (result && result.$data) {
				var size = result.$data.sizeRecords;
				var sizeUnit = locale.text("global.units.bytes");
				while (size >= 1024 && units.length > 0) {
					size = (size + 1023) / 1024;
					sizeUnit = units.shift();
				}
				var sizeText = Math.round(size) + " " + sizeUnit;
				$$div.append($("<span>" + result.$data.numRecords + " " + locale.text("global.units.files") + "</span><span>" + sizeText + "</span>"));
			}
		},

		_getResult: function() {
			var self = this;
			return self.result;
		}
	}
);

exports.Modal = _Klass;