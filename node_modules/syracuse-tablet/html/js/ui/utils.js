"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var globals = require('syracuse-tablet/html/js/helpers/globals');
var log = require('syracuse-tablet/html/js/helpers/logger').getLogger("ui");
var modal = require('syracuse-tablet/html/js/ui/modal');


var _doAction = function(object, act, params) {
	var fail = function(e) {
		log && log("_doAction Error", e);
		modal.error("Error processing action " + act, e);
	};
	try {
		var method = "_act" + $.camelCase("-" + act);
		if (!object[method]) {
			/* We check if it isn't an action of main application */
			object = globals.getApplication();
			if (!object[method]) {
				throw new Error("_doAction - Object's method " + method + " not found");
			}
		}
		if (object === globals.getApplication() || (object.isActive && object.isActive())) {
			$.when(object[method].call(object, params)).then(function(todo) {
				if (todo) {
					if (todo.page) {
						window.$sm.application.changePage(todo.page);
					}
				}
			}, function(e) {
				fail(e);
			});
		} else {
			log && log("Skip action " + method + " page not active");
		}
	} catch (e) {
		fail(e);
	}
};
/* 
 * Bind actions declared by data-nav or data-action/data-params attributes to an object
 *      for navigation data-nav  contains the name of the targeted page
 * 		for action method name is : _actActionName with ActionName the name of action declared in data-action attribute
 * object	: object that processes the actions
 * $elmt 	: optional if object.$elmt - element to bind event
 * selector : optional
 * 		Default selector is "[data-nav], [data-action]"
 */

var _bindActions = function(object, selector, $elmt) {
	$elmt = $elmt || object.$elmt;
	if (!$elmt) throw new Error("_bindActions - null $elmt");
	$elmt.delegate(selector || "[data-nav], [data-action]", "click", function(evt) {
		try {
			var target = $(evt.target);
			var clickedElmt = target.closest("[data-nav]");
			if (clickedElmt.length > 0) {
				var attr = clickedElmt.attr("data-nav");
				evt.preventDefault();
				evt.stopPropagation();
				window.$sm.application.changePage(attr, {}).then(function(dstPage) {
					log && log("data-nav Ok - Navigation to " + attr);
				}, function(e) {
					utils.alertError("data-nav KO - Navigation to " + attr, e);
				});
				return;
			}
			var clickedElmt = target.closest("[data-action]");
			if (clickedElmt.length > 0) {
				evt.preventDefault();
				evt.stopPropagation();
				_doAction(object, clickedElmt.attr("data-action"), clickedElmt.attr("data-params"));
				return;
			}
		} catch (e) {
			utils.alertError("_bindActions delegate error ", e);
		}
	});
};

//empty dom
var _empty = function(domNode) {
	if (domNode) {
		while (domNode.firstChild) {
			domNode.removeChild(domNode.firstChild);
		}
	}
};
//add or remove class to dom element
var _toggleClass = function(item, css, show) {
	if (item) {
		var className = item.className;
		if (show) {
			if (className.indexOf(css) < 0) {
				item.className = className + (" " + css);
			}
		} else {
			item.className = className.replace(css, "");
		}
	}
};


exports.bindActions = _bindActions;
exports.empty = _empty;
exports.toggleClass = _toggleClass;