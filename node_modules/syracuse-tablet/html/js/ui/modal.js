"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var locale = require('syracuse-tablet/html/js/helpers/locale');
var log = require('syracuse-tablet/html/js/helpers/logger').getLogger("ui");
var templates = require('syracuse-tablet/html/js/helpers/templating');

/* First param : cb - Second msg - Third data ...*/
var _execCb = function(cb, msg, data) {
	if (!cb || arguments.length == 0) return;
	try {
		var cb = arguments[0];
		var args = Array.prototype.slice.call(arguments, 1);
		cb.apply(null, args);
	} catch (e) {
		utils.alertError("Error calling modal callback", e);
	}
};

var _error = function(title, e, cb) {
	if (utils.isError(e)) {
		e = utils.toDiagnose({
			where: title,
			exception: e
		});
	} else if (typeof e === "string") {
		e = utils.toDiagnose({
			where: title,
			message: e
		});
	} else {
		e = utils.toDiagnose(e);
	}
	var body = JSON.stringify(e, null, 2).replace(/\\n/g, '\n');
	log && log("exports.displayError", body);
	_modal("error", {
		close: locale.text("modal.btn.close"),
		title: locale.text("modal.error.ttl"),
		body: body
	}, cb);
};

var _info = function(title, text, cb) {
	_modal("info", {
		close: locale.text("modal.btn.close"),
		title: title || "Warning",
		body: text
	}, cb);
};

var _confirm = function(action, cb) {
	_modal("confirm", {
		title: locale.text("modal.confirm.ttl"),
		message: locale.text("modal.confirm.msg", [action]),
		yes: locale.text("yes"),
		no: locale.text("no")
	}, function(message, modal, params) {
		if (cb && (message === "yes" || message === "no")) {
			_execCb(cb, "yes" === message);
		}
	});
};
/*
 * cb (message, modal, params)
 *    message: bootstrap message or clicked action (data-action)
 *    params: data-params
 */

var _modal = function(id, context, cb, _nbTries) {
	var mid = "modals_" + id;
	$.when(templates.execSync(mid, context)).always(
		function(html) {
			if (html == null) {
				if (_nbTries === undefined) {
					// In case the template has not been loaded
					setTimeout(function() {
						exports.modal(id, context, cb, 0);
					}, 1000);
				} else {
					alert("Modal not found - mid=" + mid + "\n" + JSON.stringify(context, null, 2).replace(/\\n/g, '\n'));
				}
				_execCb(cb, "hidden.bs.modal", null);
			} else {
				var h = $(html).modal({
					keyboard: true,
					backdrop: "static"
				});
				var done = false;
				// Use <button data-dismiss"modal" for close action
				// Use <button data-action"myaction" for action other than
				// close
				h.on("shown.bs.modal", function() {
					_execCb(cb, "shown.bs.modal", h);
				});
				h.on("hidden.bs.modal", function() {
					// Called when dialog is close - data-dismiss = "modal"
					// or m.modal('hide')
					h.unbind();
					h.remove();
					// Call cb only if no click action
					if (!done && cb) _execCb(cb, "hidden.bs.modal", h);
				});
				// For dialogs with option
				h.delegate("button[data-action]", "click", function(evt) {
					var t = $(evt.target);
					var act = t.attr("data-action");
					if (act) {
						done = true;
						evt.preventDefault();
						evt.stopPropagation();
						_execCb(cb, act, h, t.attr("data-params"));
					}
					// Close modal
					h.modal('hide');
				});
			}
		});
};
exports.init = function(rooturl) {
	if (rooturl) {
		templates.setConfig(null, rooturl);
	}
	templates.preload(["modals/error", "modals/confirm", "modals/info"]);
};
exports.error = _error;
exports.info = _info;
exports.modal = _modal;
exports.confirm = _confirm;