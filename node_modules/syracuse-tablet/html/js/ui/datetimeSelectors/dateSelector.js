"use strict";
var utils = require('syracuse-tablet/html/js/helpers/utils');
var uiUtils = require('syracuse-tablet/html/js/ui/uiUtils');
var modal = require('syracuse-tablet/html/js/ui/modal');

var _Klass = utils.defineClass(

	function() {

	}, null, {
		onClick: function(evt) {
			while (evt.target) {
				if (evt.target.syraOnClick) {
					this[evt.target.syraOnClick](evt.target, evt);
					return;
				} else {
					evt.target = evt.target.parentNode;
				}
			}
			//this[evt.target.syraOnClick](evt.target, evt);
		},
		onTodayClick: function() {
			this._currentDate = this.dateApi.today();
			this.field.setFieldValue(this.dateApi.fromInternalValue(this._currentDate._value).toString(), this._currentDate._value);
		},
		onDayClick: function(picker) {
			this.field.setFieldValue(this.dateApi.fromInternalValue(picker.syraValue).toString(), picker.syraValue);
		},
		onQuickItemClick: function(picker, event) {
			var isBegin = syra_site.dom.getChildIndex(event.target) == 0;
			this._currentDate = this._currentDate[(isBegin ? "begOf" : "endOf") + picker.syraInterval]((picker.syraInterval == "Week") ? 1 : undefined);
			this._drawBody();
			this.quickList.style.display = "none";
		},
		onChangePeriode: function(picker) {
			if (picker.syraPeriod == "month") {
				this._currentDate = this._currentDate.addMonths(picker.syraIsPrev ? -1 : 1);
			} else if (picker.syraPeriod == "year") {
				this._currentDate = this._currentDate.addYears(picker.syraIsPrev ? -1 : 1);
			} else {
				this._currentDate = this._currentDate.addDays(picker.syraIsPrev ? -7 : 7);
			}
			this._drawBody();
		},
		onQuickClick: function() {
			modal.info("Date time selector", "implementation in progress");
			return;
			if (!this.quickList) {
				this.quickList = document.createElement("nav");
				this.quickList.style.display = "none";
				this.quickList.className = "s-calendar-quick-list";
				var intervals = ["Year", "Quarter", "Month", "Week"];
				for (var ii = 0, jj = intervals.length; ii < jj; ii++) {
					var row = document.createElement("div");
					row.className = "s-calendar-quick";
					row.syraInterval = intervals[ii];
					row.syraOnClick = "onQuickItemClick";
					row.innerHTML = "<a class='s-calendar-quick-link'>" + this.field.localize.fdpBegin + "</a>/<a class='s-calendar-quick-link'>" + this.field.localize.fdpEnd + "</a>" + this.field.localize["fdpIntervalOf" + intervals[ii]];
					this.quickList.appendChild(row);
				}
				this.domItem.appendChild(this.quickList);
			}
			if (this.quickList.style.display == "") {
				this.quickList.style.display = "none";
			} else {
				this.quickList.style.display = "";
				$(this.quickList).position({
					my: "left bottom",
					at: "right bottom",
					of: $(this._quick)
				});
			}
		},
		onMonthClick: function() {
			modal.info("Date time selector", "implementation in progress");
			return;
			//TODO
			var self = this;
			if (!self._month) {
				self._month = new MonthChoice();
				self._month.create(self.field, self.domItem, self._currentDate, function(newDate) {
					self._currentDate = newDate;
					setTimeout(function() {
						self._drawBody();
						self.onMonthClick();
					}, 200);
					return true;
				});
				self._month.toggle(true);
			} else {
				self._month.toggle(false);
				self._month.dispose();
				delete self._month;
			}
		},
		onYearClick: function() {
			modal.info("Date time selector", "implementation in progress");
			return;
			//TODO
			var self = this;
			if (!self._year) {
				self._year = new YearChoice(self.field);
				self._year.create(self.field, self.domItem, self._currentDate, function(newDate) {
					self._currentDate = newDate;
					setTimeout(function() {
						self._drawBody();
						self.onYearClick();
					}, 200);
					return true;
				});
				self._year.toggle(true);
			} else {
				self._year.toggle(false);
				self._year.dispose();
				delete self._year;
			}
		},
		create: function(parentSlot, field, options) {
			// set dateapi according to date type
			this.dateApi = field.getPropertyType().indexOf("datetime") > -1 ? require('syracuse-tablet/html/js/helpers/types/datetime') : require('syracuse-tablet/html/js/helpers/types/date');

			// add control to controls map
			//this.id = field.id + "dateselector";
			//field.controller.addControl(this);

			this.domItem = document.createElement("div");
			this.domItem.className = "s-calendar";
			parentSlot.appendChild(this.domItem);

			if (options && options.internalValue) {
				this._selectedDate = isNaN(options.internalValue) ? this.dateApi.today() : this.dateApi.fromInternalValue(options.internalValue);
				this._currentDate = this.dateApi.fromInternalValue(this._selectedDate._value);
			} else {
				var value = field.getValue() || "";
				//TODO
				this._selectedDate = value ? this.dateApi.parse(value) : this.dateApi.today();
				this._currentDate = this.dateApi.fromInternalValue(this._selectedDate._value);
			}
			this.field = field;
			this._table = document.createElement("table");
			this._table.setAttribute("cellspacing", 0);
			this._table.className = "s-calendar-content";
			this._table.appendChild(this._appendHead());
			this._table.appendChild(this.body = document.createElement("tbody"));
			this._table.appendChild(this._appendFoot());
			this.domItem.appendChild(this._table);

			this._drawBody();
			this._bindEvents(true);
		},
		_appendHead: function() {
			var head = document.createElement("thead");
			var row = document.createElement("tr");
			var cell = document.createElement("th");
			cell.setAttribute("colspan", 8);
			cell.className = "s-calendar-month-year";

			var slot = document.createElement("div");
			slot.className = "s-calendar-month-year-slot";
			cell.appendChild(slot);

			// prev year link
			var link = document.createElement("a");
			link.setAttribute("data-ctrl-id", this.id);
			link.syraOnClick = "onChangePeriode";
			link.syraIsPrev = true;
			link.syraPeriod = "year";
			link.className = "s-calendar-prev s-calendar-prev-year glyphicon glyphicon-fast-backward";
			slot.appendChild(link);

			// prev month link
			link = document.createElement("a");
			link.setAttribute("data-ctrl-id", this.id);
			link.syraOnClick = "onChangePeriode";
			link.syraPeriod = "month";
			link.syraIsPrev = true;
			link.className = "s-calendar-prev s-calendar-prev-month glyphicon glyphicon-step-backward";
			slot.appendChild(link);

			this._monthLink = document.createElement("a");
			this._monthLink.setAttribute("data-ctrl-id", this.id);
			this._monthLink.className = "s-calendar-month-year-link";
			slot.appendChild(this._monthLink).syraOnClick = "onMonthClick";

			this._yearLink = document.createElement("a");
			this._yearLink.setAttribute("data-ctrl-id", this.id);
			this._yearLink.className = "s-calendar-month-year-link";
			slot.appendChild(this._yearLink).syraOnClick = "onYearClick";

			// next month link
			link = document.createElement("a");
			link.setAttribute("data-ctrl-id", this.id);
			link.syraOnClick = "onChangePeriode";
			link.syraPeriod = "month";
			link.className = "s-calendar-next s-calendar-next-month glyphicon glyphicon-step-forward";
			slot.appendChild(link);

			// next year link
			link = document.createElement("a");
			link.setAttribute("data-ctrl-id", this.id);
			link.syraOnClick = "onChangePeriode";
			link.syraPeriod = "year";
			link.className = "s-calendar-next s-calendar-next-year glyphicon glyphicon-fast-forward";
			slot.appendChild(link);

			row.appendChild(cell);
			head.appendChild(row);

			row = document.createElement("tr");
			var cell = document.createElement("th");
			cell.className = "s-calendar-week-day";
			row.appendChild(cell);

			var days = [1, 2, 3, 4, 5, 6, 0];
			for (var ii = 0, jj = days.length; ii < jj; ii++) {
				var cell = document.createElement("th");
				cell.className = "s-calendar-week-day";
				cell.title = this.dateApi.dayName(days[ii]);
				cell.textContent = this.dateApi.dayName(days[ii], true);
				row.appendChild(cell);
			}
			head.appendChild(row);
			return head;
		},
		_appendFoot: function() {
			var row = document.createElement("tr");
			var cell = document.createElement("td");
			cell.setAttribute("colspan", 3);
			cell.className = "s-calendar-foot-week";

			var link = document.createElement("a");
			link.setAttribute("data-ctrl-id", this.id);
			link.syraOnClick = "onChangePeriode";
			link.syraPeriod = "week";
			link.className = "s-calendar-prev s-calendar-prev-week glyphicon glyphicon-chevron-left";
			cell.appendChild(link);

			var label = document.createElement("label");
			label.className = "s-calendar-foot-week-title";
			label.textContent = "Week";
			//TODO
			//label.textContent = this.field.localize.fdpWeek;
			cell.appendChild(label);

			this._weekNumber = document.createElement("label");
			this._weekNumber.className = "s-calendar-foot-week-title-num";
			cell.appendChild(this._weekNumber);

			link = document.createElement("a");
			link.setAttribute("data-ctrl-id", this.id);
			link.syraOnClick = "onChangePeriode";
			link.syraPeriod = "week";
			link.className = "s-calendar-next s-calendar-next-week glyphicon glyphicon-chevron-right";
			cell.appendChild(link);
			row.appendChild(cell);

			cell = document.createElement("td");
			cell.setAttribute("colspan", 3);
			cell.className = "s-calendar-foot-today";
			link = document.createElement("a");
			link.setAttribute("data-ctrl-id", this.id);
			link.className = "s-calendar-today-link";
			link.syraOnClick = "onTodayClick";
			//TODO
			//link.textContent = this.field.localize.fdpToday;
			link.textContent = "Today";
			cell.appendChild(link);
			row.appendChild(cell);

			cell = document.createElement("td");
			cell.setAttribute("colspan", 2);
			cell.className = "s-calendar-foot-more";
			this._quick = document.createElement("a");
			this._quick.setAttribute("data-ctrl-id", this.id);
			this._quick.className = "s-calendar-quick-btn glyphicon glyphicon-plus";
			this._quick.syraOnClick = "onQuickClick";
			cell.appendChild(this._quick);
			row.appendChild(cell);

			var foot = document.createElement("tfoot");
			foot.appendChild(row);
			return foot;
		},
		_drawBody: function() {
			//TODO
			//var curMonth = this._currentDate.month
			var curMonth = this._currentDate.month || 8;
			var month = this.dateApi.monthName(curMonth);

			this._monthLink.textContent = month;
			this._yearLink.textContent = this._currentDate.year || 2014;
			//TODO
			//this._yearLink.textContent = this._currentDate.year;
			uiUtils.empty(this.body);

			var curDate = this.dateApi.fromInternalValue(this._currentDate._value);
			var begOfMonth = curDate = curDate.begOfMonth();
			curDate = curDate.begOfWeek(1);
			for (var weekRow = 0; weekRow < 6; weekRow++) {
				var row = document.createElement("tr");
				var weekDay = (weekRow == 0) ? begOfMonth : curDate;
				var cell = document.createElement("td");
				cell.className = "s-calendar-week-num";
				row.appendChild(cell);
				cell.textContent = weekDay.week;
				for (var day = 0; day < 7; day++) {
					var cell = document.createElement("td");
					cell.className = "s-calendar-day-link";
					cell.syraOnClick = "onDayClick";
					cell.syraValue = curDate._value;
					var link = document.createElement("a");
					link.setAttribute("data-ctrl-id", this.id);
					//link.syraOnClick = "onDayClick";
					link.textContent = curDate.day;
					//link.syraValue = curDate._value;
					if (curMonth != curDate.month) {
						cell.className += " s-calendar-other-month";
					}
					if (this._currentDate.equals(curDate)) {
						cell.className += " s-calendar-select";
						link.className = "s-calendar-select";
					}
					cell.appendChild(link);
					row.appendChild(cell);
					curDate = curDate.addDays(1);
				}
				this.body.appendChild(row);
			}
			this._weekNumber.textContent = this._currentDate.week;
		},
		_bindEvents: function(bind) {
			var self = this;
			if (bind) {
				$(self.domItem).delegate("td, a[data-ctrl-id]", "click", function(evt) {
					self.onClick(evt);
					evt.preventDefault();
					evt.stopPropagation();
				});
			} else {
				$(self.domItem).undelegate();
			}
		},
		destroy: function() {
			//TODO to complete
			this._bindEvents(false);
			this.domItem = null;
		}
	});

exports.DateSelector = _Klass;