"use strict";

var utils = require('syracuse-tablet/html/js/helpers/utils');
var uiUtils = require("syracuse-tablet/html/js/ui/uiUtils");
var MonthChoice = require('syracuse-tablet/html/js/ui/datetimeSelectors/monthChoice').MonthChoice;
var YearChoice = require('syracuse-tablet/html/js/ui/datetimeSelectors/yearChoice').YearChoice;
var DateSelector = require('syracuse-tablet/html/js/ui/datetimeSelectors/dateSelector').Klass;
var TimeSelector = require('syracuse-tablet/html/js/ui/datetimeSelectors/timeSelector').Klass;

var _Klass = utils.defineClass(

	function(field) {
		this.field = field;
	}, null, {
		/**
		Triggers an action when the following events occurs :
		- onMonthClick : When user clicks on month selection link
		- onYearClick : When user clicks on year selection link
		- onOpenTime : In case of datetime field, when user has selected the date, time selector must be displayed afterwards
		- onCalendarUpdate : When user clicks on links that will reshape the calendar (change month, change year, change week, select month, select year)
		- onSelectTime : In case of datetime field, when user has selected the time, field must be set with appropriate date + time value

		@param	evt 		Triggered event in set as string
		@param	selector 	The selector object. Use to get value and for destroy action
		*/
		onEvent: function(evt, selector) {
			this[evt](selector);
		},

		/*
			Set the $$container of the date / time selectors which is likely to be the modal.
			It will make it easier to close it from within the library
			@param	$$container 	Jquery container object (the modal)
		*/
		setContainer: function($$container) {
			this.$$container = $$container;
		},

		/*
			Set parentSlot dom parameter. Useful to make some dom actions like emptying or appending.
			It is the modal body
			@param parentSlot Modal body.

		*/
		setParentSlot: function(parentSlot) {
			this.parentSlot = parentSlot;
		},


		/*
			Returns parentSlot dom parameter
		*/
		getParentSlot: function() {
			return this.parentSlot;
		},

		/*
			Triggered when user clicks on month selection link. It builds the month selector
			@param 	selector 	The selector object. Use to get value and for destroy action
		*/
		onMonthClick: function(selector) {
			var self = this;
			// save date
			var date = selector._currentDate;

			// clear previous selector
			uiUtils.empty(self.parentSlot);
			selector.destroy();

			// create month selector
			var monthChoice = new MonthChoice();
			monthChoice.create(this.parentSlot, date, self);
		},

		/*
			Triggered when user clicks on year selection link. It builds the year selector
			@param 	selector 	The selector object. Use to get value and for destroy action
		*/
		onYearClick: function(selector) {
			var self = this;
			// save date
			var date = selector._currentDate;

			// clear previous selector
			uiUtils.empty(self.parentSlot);
			selector.destroy();

			// create month selector
			var yearChoice = new YearChoice();
			yearChoice.create(self.parentSlot, date, self);
		},


		/*
			Triggered in case of datetime field. It builds time selector after user clicked on date
			@param 	selector 	The selector object. Use to get value and for destroy action
		*/
		onOpenTime: function(selector) {
			var self = this;

			// save date
			self.dateValue = selector.dateValue;

			// clear previous selector
			uiUtils.empty(self.parentSlot);
			selector.destroy();

			// create time selector
			var timeSelector = new TimeSelector();
			var sDom = timeSelector.create(self.field, self, self.onSelectTime);
			self.parentSlot.appendChild(sDom);
			timeSelector.bindEvents(true);
		},

		/*
			Triggered when user clicks on link that will update the calendar. It builds the calendar with updated value
			@param 	selector 	The selector object. Use to get value and for destroy action
		*/
		onCalendarUpdate: function(selector) {
			var self = this;

			// save date
			self._currentDate = selector._currentDate;

			// clear previous selector
			uiUtils.empty(self.parentSlot);
			selector.destroy();

			// create back date selector
			var dateSelector = new DateSelector();
			var sDom = dateSelector.create(self.field, self);
			self.parentSlot.appendChild(sDom);
			dateSelector.bindEvents(true);
		},

		/*
			Triggered in case of datetime field. It sets the final field value and closes the container (the modal)
			@param 	selector 	The selector object. Use to get value and for destroy action
		*/
		onSelectTime: function(timeVal, handler) {
			var self = handler;
			self.field.setFieldValue(self.dateValue + " " + timeVal);
			self.closeContainer();
		},

		/*
			Closes the container (the modal here)
		*/
		closeContainer: function() {
			this.$$container.modal("hide");
		}
	});

exports.Klass = _Klass;