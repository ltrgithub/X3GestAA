"use strict";
var utils = require('syracuse-tablet/html/js/helpers/utils');
var _dateApi = require('syracuse-tablet/html/js/helpers/types/date');

var _Klass = utils.defineClass(

	function() {

	}, null, {
		create: function(parentSlot, dateValue, handler) {
			this.parent = parentSlot;
			this.handler = handler;
			this.domItem = document.createElement("nav");
			this.domItem.className = "s-calendar-quick-list";
			this._dateValue = dateValue;
			var table = document.createElement("table");
			table.className = "s-calendar-month-choice";
			var tbody = document.createElement("tbody");
			for (var ii = 0; ii < 6; ii++) {
				var row = document.createElement("tr");
				row.appendChild(this.drawCell(ii + 1, _dateApi.monthName(ii + 1, true), this._dateValue.month));
				row.appendChild(this.drawCell(ii + 7, _dateApi.monthName(ii + 7, true), this._dateValue.month));
				tbody.appendChild(row);
			}
			table.appendChild(tbody);
			this.domItem.appendChild(table);
			this.parent.appendChild(this.domItem);
			this.bindEvents(true);
		},
		drawCell: function(value, text, selValue) {
			var td = document.createElement("td");
			td.className = "s-calendar-my-item";
			td.syraOnClick = "onMonthClick";
			td.syraValue = value;
			td.textContent = text;
			if (value == selValue) {
				td.className += " s-calendar-select";
				this.selectedCell = td;
			}
			return td;
		},
		toggle: function(show) {
			if (show) {
				this.domItem.style.display = "";
			} else {
				this.domItem.style.display = "none";
			}
		},
		onMonthClick: function(picker) {
			if (this.selectedCell) {
				this.selectedCell.className = "s-calendar-my-item";
			}
			(this.selectedCell = picker).className = "s-calendar-my-item s-calendar-select";
			this._selectedMonth = picker.syraValue;
			var month = this._selectedMonth ? this._selectedMonth : this._dateValue.month;
			this._currentDate = this._dateValue = _dateApi.fromJsDate(new Date(this._dateValue.year, month - 1, this._dateValue.day));
			this.handler.onEvent("onCalendarUpdate", this);
		},
		bindEvents: function(bind) {
			var self = this;
			if (bind) {
				$(self.domItem).delegate("td", "click", function(evt) {
					self.onClick(evt);
					evt.preventDefault();
					evt.stopPropagation();
				});
			} else {
				$(self.domItem).undelegate();
			}
		},
		onClick: function(evt) {
			var self = this;
			while (evt.target) {
				if (evt.target.syraOnClick) {
					this[evt.target.syraOnClick](evt.target, evt);
					return;
				} else {
					evt.target = evt.target.parentNode;
				}
			}
		},
		destroy: function() {
			this.bindEvents(false);
			this.domItem = this._dateValue = this.selectedCell = null;
		}
	});

exports.MonthChoice = _Klass;