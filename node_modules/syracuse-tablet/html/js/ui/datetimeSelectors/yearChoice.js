"use strict";
var utils = require('syracuse-tablet/html/js/helpers/utils');
var uiUtils = require('syracuse-tablet/html/js/ui/uiUtils');
var _dateApi = require('syracuse-tablet/html/js/helpers/types/date');


var _Klass = utils.defineClass(

	function() {

	}, null, {
		create: function(parentSlot, dateValue, onClose) {
			this.parent = parentSlot;
			this.domItem = document.createElement("nav");
			this.domItem.className = "s-calendar-quick-list";
			this._onClose = onClose;
			this._dateValue = dateValue;
			this._selectedYear = this._dateValue.year;
			var table = document.createElement("table");
			table.className = "s-calendar-year-choice";
			var tbody = document.createElement("tbody");
			this.rows = [];
			for (var ii = 0; ii < 6; ii++) {
				var row = document.createElement("tr");
				if (ii == 0) {
					this.addPrevNextCell(row, true);
					this.addPrevNextCell(row, false);
				} else {
					var cuYear = this._dateValue.year + ii - 4;
					row.appendChild(this.drawCell(cuYear, cuYear));
					row.appendChild(this.drawCell(cuYear + 5, cuYear + 5));
				}
				tbody.appendChild(row);
				this.rows.push(row);
			}
			table.appendChild(tbody);
			this.domItem.appendChild(table);
			this.domItem.style.display = "none";
			this.parent.appendChild(this.domItem);
			this.bindEvents(true);
		},
		addPrevNextCell: function(row, isPrev) {
			var td = document.createElement("td");
			td.className = "s-calendar-my-link-cell";
			var link = document.createElement("a");
			link.className = (link.syraIsPrev = isPrev) ? "s-calendar-prev-year" : "s-calendar-next-year";
			//TODO : localize !
			link.textContent = (link.syraIsPrev = isPrev) ? "Prev" : "Next";
			link.syraOnClick = "onChangeYear";
			td.appendChild(link);
			row.appendChild(td);
		},
		drawCell: function(value, text) {
			var td = document.createElement("td");
			td.className = "s-calendar-my-item";
			td.syraOnClick = "onSelectYear";
			td.syraValue = value;
			td.textContent = text;
			if (value == this._selectedYear) {
				td.className += " s-calendar-select";
				this.selectedCell = td;
			}
			return td;
		},
		toggle: function(show) {
			if (show) {
				this.domItem.style.display = "";
			} else {
				this.domItem.style.display = "none";
			}
		},
		_refreshYearCell: function(td, step) {
			td.syraValue += step;
			td.textContent = td.syraValue;
			if (td.syraValue == this._selectedYear) {
				td.className += " s-calendar-select";
				this.selectedCell = td;
			}
		},
		onChangeYear: function(picker) {
			var step = picker.syraIsPrev ? (-10) : 10;
			for (var ii = 1, jj = this.rows.length; ii < jj; ii++) {
				var nodes = this.rows[ii].childNodes;
				this._refreshYearCell(nodes[0], step);
				this._refreshYearCell(nodes[1], step);
			}
		},
		onSelectYear: function(picker) {
			if (this.selectedCell) {
				this.selectedCell.className = "s-calendar-my-item";
			}
			(this.selectedCell = picker).className = "s-calendar-my-item s-calendar-select";
			this._selectedYear = picker.syraValue;
			var year = this._selectedYear ? this._selectedYear : this._dateValue.year;
			this._dateValue = _dateApi.fromJsDate(new Date(year, this._dateValue.month, this._dateValue.day));
			this._onClose(this._dateValue);
		},
		bindEvents: function(bind) {
			var self = this;
			if (bind) {
				$(self.domItem).delegate("td", "click", function(evt) {
					self.onClick(evt);
					evt.preventDefault();
					evt.stopPropagation();
				});
			} else {
				$(self.domItem).undelegate();
			}
		},
		onClick: function(evt) {
			var self = this;
			while (evt.target) {
				if (evt.target.syraOnClick) {
					this[evt.target.syraOnClick](evt.target, evt);
					return;
				} else {
					evt.target = evt.target.parentNode;
				}
			}
		},
		destroy: function() {
			this.bindEvents(false);
			this.parent.removeChild(this.domItem);
			this.rows = this.domItem = this._dateValue = this._onClose = this.selectedCell = null;
		}
	});

exports.YearChoice = _Klass;