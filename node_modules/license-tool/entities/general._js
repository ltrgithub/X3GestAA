"use strict";
var helper = require('license-tool/lib/helper');
var fs = require('streamline-fs');
var util = require('util');


module.exports = {
	$title: "General",
	$modes: "create,display,extra*,edit",
	$links: {
		$extra: {
			$title: "Download public key",
			$type: "application/x-document",
			$method: "GET",
			$url: "/downloads/publicKey"
		},
	},
	$properties: {
		partner: {
			$title: "Upload partner file",
			$type: "application/x-document",
			$url: "/data/general/$workingCopies/{$uuid}/partner?representation=files.$edit",
		},
		locales: {
			$title: "Standard locales",
			$type: "application/x-array",
			$item: {
				localeCode: {},
			}
		},
	},
	$init: function(_, wc) {
		wc.publicKey = {
			"content-type": "text/plain",
			"content-length": helper.publicKey.length,
			"x-file-name": "a.ttt"
		};
		var localeObject = helper.loadLocales();
		wc.locales = helper.cfg.locales.map(function(item) {
			return {
				localeCode: {
					$uuid: item,
					code: item,
					title: localeObject[item]
				},
				$uuid: item,
				code: item
			};
		});
	},
	$load: function(_, key) {
		var localeObject = helper.loadLocales();
		return {
			$uuid: key,
			locales: helper.cfg.locales.map(function(item) {

				return {
					localeCode: {
						$uuid: item,
						code: item,
						title: localeObject[item]
					},
					$uuid: item,
					code: item
				};
			})
		};
	},
	$save: function(_, wc, diagnoses) {
		// locales
		helper.updateLocales(wc.locales, diagnoses);
		if (wc.partner) {
			try {
				helper.setPartnerFile(wc.partner.toString("utf8"));
				fs.writeFile(helper.PARTNER_FILE, wc.partner, _);
			} catch (e) {
				diagnoses.push({
					severity: "error",
					message: "Problem with partner file: " + e
				});
			}
		}
	},
};