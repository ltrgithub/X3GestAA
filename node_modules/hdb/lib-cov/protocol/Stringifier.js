/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['protocol/Stringifier.js']) {
  _$jscoverage['protocol/Stringifier.js'] = [];
  _$jscoverage['protocol/Stringifier.js'][14] = 0;
  _$jscoverage['protocol/Stringifier.js'][16] = 0;
  _$jscoverage['protocol/Stringifier.js'][17] = 0;
  _$jscoverage['protocol/Stringifier.js'][19] = 0;
  _$jscoverage['protocol/Stringifier.js'][21] = 0;
  _$jscoverage['protocol/Stringifier.js'][23] = 0;
  _$jscoverage['protocol/Stringifier.js'][24] = 0;
  _$jscoverage['protocol/Stringifier.js'][26] = 0;
  _$jscoverage['protocol/Stringifier.js'][28] = 0;
  _$jscoverage['protocol/Stringifier.js'][29] = 0;
  _$jscoverage['protocol/Stringifier.js'][30] = 0;
  _$jscoverage['protocol/Stringifier.js'][31] = 0;
  _$jscoverage['protocol/Stringifier.js'][32] = 0;
  _$jscoverage['protocol/Stringifier.js'][33] = 0;
  _$jscoverage['protocol/Stringifier.js'][34] = 0;
  _$jscoverage['protocol/Stringifier.js'][35] = 0;
  _$jscoverage['protocol/Stringifier.js'][37] = 0;
  _$jscoverage['protocol/Stringifier.js'][40] = 0;
  _$jscoverage['protocol/Stringifier.js'][41] = 0;
  _$jscoverage['protocol/Stringifier.js'][42] = 0;
  _$jscoverage['protocol/Stringifier.js'][44] = 0;
  _$jscoverage['protocol/Stringifier.js'][46] = 0;
  _$jscoverage['protocol/Stringifier.js'][49] = 0;
  _$jscoverage['protocol/Stringifier.js'][50] = 0;
  _$jscoverage['protocol/Stringifier.js'][51] = 0;
  _$jscoverage['protocol/Stringifier.js'][53] = 0;
  _$jscoverage['protocol/Stringifier.js'][55] = 0;
  _$jscoverage['protocol/Stringifier.js'][58] = 0;
  _$jscoverage['protocol/Stringifier.js'][59] = 0;
  _$jscoverage['protocol/Stringifier.js'][60] = 0;
  _$jscoverage['protocol/Stringifier.js'][62] = 0;
  _$jscoverage['protocol/Stringifier.js'][63] = 0;
  _$jscoverage['protocol/Stringifier.js'][64] = 0;
  _$jscoverage['protocol/Stringifier.js'][65] = 0;
  _$jscoverage['protocol/Stringifier.js'][66] = 0;
  _$jscoverage['protocol/Stringifier.js'][68] = 0;
  _$jscoverage['protocol/Stringifier.js'][70] = 0;
  _$jscoverage['protocol/Stringifier.js'][73] = 0;
  _$jscoverage['protocol/Stringifier.js'][74] = 0;
  _$jscoverage['protocol/Stringifier.js'][75] = 0;
  _$jscoverage['protocol/Stringifier.js'][77] = 0;
  _$jscoverage['protocol/Stringifier.js'][78] = 0;
  _$jscoverage['protocol/Stringifier.js'][79] = 0;
  _$jscoverage['protocol/Stringifier.js'][81] = 0;
}
_$jscoverage['protocol/Stringifier.js'][14]++;
"use strict";
_$jscoverage['protocol/Stringifier.js'][16]++;
var util = require("../util");
_$jscoverage['protocol/Stringifier.js'][17]++;
var Transform = util.stream.Transform;
_$jscoverage['protocol/Stringifier.js'][19]++;
module.exports = Stringifier;
_$jscoverage['protocol/Stringifier.js'][21]++;
util.inherits(Stringifier, Transform);
_$jscoverage['protocol/Stringifier.js'][23]++;
function Stringifier(options) {
  _$jscoverage['protocol/Stringifier.js'][24]++;
  options = options || {};
  _$jscoverage['protocol/Stringifier.js'][26]++;
  Transform.call(this, options);
  _$jscoverage['protocol/Stringifier.js'][28]++;
  this._writableState.objectMode = true;
  _$jscoverage['protocol/Stringifier.js'][29]++;
  this._header = options.header !== undefined? options.header: "[";
  _$jscoverage['protocol/Stringifier.js'][30]++;
  this._footer = options.footer !== undefined? options.footer: "]";
  _$jscoverage['protocol/Stringifier.js'][31]++;
  this._seperator = options.seperator !== undefined? options.seperator: ",";
  _$jscoverage['protocol/Stringifier.js'][32]++;
  this._stringify = options.stringify || JSON.stringify;
  _$jscoverage['protocol/Stringifier.js'][33]++;
  this._map = undefined;
  _$jscoverage['protocol/Stringifier.js'][34]++;
  if (util.isFunction(options.map)) {
    _$jscoverage['protocol/Stringifier.js'][35]++;
    this._map = options.map;
  }
  _$jscoverage['protocol/Stringifier.js'][37]++;
  this._first = true;
}
_$jscoverage['protocol/Stringifier.js'][40]++;
Stringifier.prototype._transform = (function _transform(thing, encoding, done) {
  _$jscoverage['protocol/Stringifier.js'][41]++;
  if (util.isArray(thing) && thing.length) {
    _$jscoverage['protocol/Stringifier.js'][42]++;
    this.push(this.transformRows(thing));
  }
  else {
    _$jscoverage['protocol/Stringifier.js'][44]++;
    this.push(this.transformRow(thing));
  }
  _$jscoverage['protocol/Stringifier.js'][46]++;
  done();
});
_$jscoverage['protocol/Stringifier.js'][49]++;
Stringifier.prototype._flush = (function _flush(done) {
  _$jscoverage['protocol/Stringifier.js'][50]++;
  if (this._first) {
    _$jscoverage['protocol/Stringifier.js'][51]++;
    this.push(this._header + this._footer);
  }
  else {
    _$jscoverage['protocol/Stringifier.js'][53]++;
    this.push(this._footer);
  }
  _$jscoverage['protocol/Stringifier.js'][55]++;
  done(null);
});
_$jscoverage['protocol/Stringifier.js'][58]++;
Stringifier.prototype.transformRows = (function transformRows(rows) {
  _$jscoverage['protocol/Stringifier.js'][59]++;
  if (this._map) {
    _$jscoverage['protocol/Stringifier.js'][60]++;
    rows = rows.map(this._map);
  }
  _$jscoverage['protocol/Stringifier.js'][62]++;
  var str = this._first? this._header: this._seperator;
  _$jscoverage['protocol/Stringifier.js'][63]++;
  this._first = false;
  _$jscoverage['protocol/Stringifier.js'][64]++;
  for (var i = 0; i < rows.length; i++) {
    _$jscoverage['protocol/Stringifier.js'][65]++;
    if (i > 0) {
      _$jscoverage['protocol/Stringifier.js'][66]++;
      str += this._seperator;
    }
    _$jscoverage['protocol/Stringifier.js'][68]++;
    str += this._stringify(rows[i]);
}
  _$jscoverage['protocol/Stringifier.js'][70]++;
  return str;
});
_$jscoverage['protocol/Stringifier.js'][73]++;
Stringifier.prototype.transformRow = (function transformRow(row) {
  _$jscoverage['protocol/Stringifier.js'][74]++;
  if (this._map) {
    _$jscoverage['protocol/Stringifier.js'][75]++;
    row = this._map(row);
  }
  _$jscoverage['protocol/Stringifier.js'][77]++;
  if (this._first) {
    _$jscoverage['protocol/Stringifier.js'][78]++;
    this._first = false;
    _$jscoverage['protocol/Stringifier.js'][79]++;
    return this._header + this._stringify(row);
  }
  _$jscoverage['protocol/Stringifier.js'][81]++;
  return this._seperator + this._stringify(row);
});
_$jscoverage['protocol/Stringifier.js'].source = ["// Copyright 2013 SAP AG.","//","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//","// http: //www.apache.org/licenses/LICENSE-2.0","//","// Unless required by applicable law or agreed to in writing,","// software distributed under the License is distributed on an","// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,","// either express or implied. See the License for the specific","// language governing permissions and limitations under the License.","'use strict';","","var util = require('../util');","var Transform = util.stream.Transform;","","module.exports = Stringifier;","","util.inherits(Stringifier, Transform);","","function Stringifier(options) {","  options = options || {};","","  Transform.call(this, options);","","  this._writableState.objectMode = true;","  this._header = options.header !== undefined ? options.header : '[';","  this._footer = options.footer !== undefined ? options.footer : ']';","  this._seperator = options.seperator !== undefined ? options.seperator : ',';","  this._stringify = options.stringify || JSON.stringify;","  this._map = undefined;","  if (util.isFunction(options.map)) {","    this._map = options.map;","  }","  this._first = true;","}","","Stringifier.prototype._transform = function _transform(thing, encoding, done) {","  if (util.isArray(thing) &amp;&amp; thing.length) {","    this.push(this.transformRows(thing));","  } else {","    this.push(this.transformRow(thing));","  }","  done();","};","","Stringifier.prototype._flush = function _flush(done) {","  if (this._first) {","    this.push(this._header + this._footer);","  } else {","    this.push(this._footer);","  }","  done(null);","};","","Stringifier.prototype.transformRows = function transformRows(rows) {","  if (this._map) {","    rows = rows.map(this._map);","  }","  var str = this._first ? this._header : this._seperator;","  this._first = false;","  for (var i = 0; i &lt; rows.length; i++) {","    if (i &gt; 0) {","      str += this._seperator;","    }","    str += this._stringify(rows[i]);","  }","  return str;","};","","Stringifier.prototype.transformRow = function transformRow(row) {","  if (this._map) {","    row = this._map(row);","  }","  if (this._first) {","    this._first = false;","    return this._header + this._stringify(row);","  }","  return this._seperator + this._stringify(row);","};"];
