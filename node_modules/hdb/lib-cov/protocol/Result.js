/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['protocol/Result.js']) {
  _$jscoverage['protocol/Result.js'] = [];
  _$jscoverage['protocol/Result.js'][14] = 0;
  _$jscoverage['protocol/Result.js'][16] = 0;
  _$jscoverage['protocol/Result.js'][17] = 0;
  _$jscoverage['protocol/Result.js'][18] = 0;
  _$jscoverage['protocol/Result.js'][19] = 0;
  _$jscoverage['protocol/Result.js'][20] = 0;
  _$jscoverage['protocol/Result.js'][21] = 0;
  _$jscoverage['protocol/Result.js'][22] = 0;
  _$jscoverage['protocol/Result.js'][24] = 0;
  _$jscoverage['protocol/Result.js'][26] = 0;
  _$jscoverage['protocol/Result.js'][27] = 0;
  _$jscoverage['protocol/Result.js'][28] = 0;
  _$jscoverage['protocol/Result.js'][29] = 0;
  _$jscoverage['protocol/Result.js'][30] = 0;
  _$jscoverage['protocol/Result.js'][31] = 0;
  _$jscoverage['protocol/Result.js'][32] = 0;
  _$jscoverage['protocol/Result.js'][35] = 0;
  _$jscoverage['protocol/Result.js'][37] = 0;
  _$jscoverage['protocol/Result.js'][40] = 0;
  _$jscoverage['protocol/Result.js'][42] = 0;
  _$jscoverage['protocol/Result.js'][45] = 0;
  _$jscoverage['protocol/Result.js'][46] = 0;
  _$jscoverage['protocol/Result.js'][47] = 0;
  _$jscoverage['protocol/Result.js'][49] = 0;
  _$jscoverage['protocol/Result.js'][52] = 0;
  _$jscoverage['protocol/Result.js'][53] = 0;
  _$jscoverage['protocol/Result.js'][54] = 0;
  _$jscoverage['protocol/Result.js'][57] = 0;
  _$jscoverage['protocol/Result.js'][60] = 0;
  _$jscoverage['protocol/Result.js'][61] = 0;
  _$jscoverage['protocol/Result.js'][65] = 0;
  _$jscoverage['protocol/Result.js'][66] = 0;
  _$jscoverage['protocol/Result.js'][68] = 0;
  _$jscoverage['protocol/Result.js'][69] = 0;
  _$jscoverage['protocol/Result.js'][72] = 0;
  _$jscoverage['protocol/Result.js'][75] = 0;
  _$jscoverage['protocol/Result.js'][77] = 0;
  _$jscoverage['protocol/Result.js'][78] = 0;
  _$jscoverage['protocol/Result.js'][82] = 0;
  _$jscoverage['protocol/Result.js'][83] = 0;
  _$jscoverage['protocol/Result.js'][86] = 0;
  _$jscoverage['protocol/Result.js'][87] = 0;
  _$jscoverage['protocol/Result.js'][88] = 0;
  _$jscoverage['protocol/Result.js'][89] = 0;
  _$jscoverage['protocol/Result.js'][91] = 0;
  _$jscoverage['protocol/Result.js'][92] = 0;
  _$jscoverage['protocol/Result.js'][93] = 0;
  _$jscoverage['protocol/Result.js'][96] = 0;
  _$jscoverage['protocol/Result.js'][97] = 0;
  _$jscoverage['protocol/Result.js'][99] = 0;
  _$jscoverage['protocol/Result.js'][102] = 0;
  _$jscoverage['protocol/Result.js'][103] = 0;
  _$jscoverage['protocol/Result.js'][105] = 0;
  _$jscoverage['protocol/Result.js'][106] = 0;
  _$jscoverage['protocol/Result.js'][107] = 0;
  _$jscoverage['protocol/Result.js'][109] = 0;
  _$jscoverage['protocol/Result.js'][110] = 0;
  _$jscoverage['protocol/Result.js'][111] = 0;
  _$jscoverage['protocol/Result.js'][114] = 0;
  _$jscoverage['protocol/Result.js'][115] = 0;
  _$jscoverage['protocol/Result.js'][118] = 0;
  _$jscoverage['protocol/Result.js'][119] = 0;
  _$jscoverage['protocol/Result.js'][120] = 0;
  _$jscoverage['protocol/Result.js'][122] = 0;
  _$jscoverage['protocol/Result.js'][125] = 0;
  _$jscoverage['protocol/Result.js'][128] = 0;
  _$jscoverage['protocol/Result.js'][129] = 0;
  _$jscoverage['protocol/Result.js'][132] = 0;
  _$jscoverage['protocol/Result.js'][135] = 0;
  _$jscoverage['protocol/Result.js'][137] = 0;
  _$jscoverage['protocol/Result.js'][140] = 0;
  _$jscoverage['protocol/Result.js'][142] = 0;
  _$jscoverage['protocol/Result.js'][144] = 0;
  _$jscoverage['protocol/Result.js'][145] = 0;
  _$jscoverage['protocol/Result.js'][146] = 0;
  _$jscoverage['protocol/Result.js'][149] = 0;
  _$jscoverage['protocol/Result.js'][151] = 0;
  _$jscoverage['protocol/Result.js'][153] = 0;
  _$jscoverage['protocol/Result.js'][155] = 0;
  _$jscoverage['protocol/Result.js'][156] = 0;
  _$jscoverage['protocol/Result.js'][157] = 0;
  _$jscoverage['protocol/Result.js'][159] = 0;
  _$jscoverage['protocol/Result.js'][161] = 0;
  _$jscoverage['protocol/Result.js'][163] = 0;
  _$jscoverage['protocol/Result.js'][165] = 0;
  _$jscoverage['protocol/Result.js'][168] = 0;
  _$jscoverage['protocol/Result.js'][169] = 0;
  _$jscoverage['protocol/Result.js'][171] = 0;
  _$jscoverage['protocol/Result.js'][172] = 0;
  _$jscoverage['protocol/Result.js'][175] = 0;
  _$jscoverage['protocol/Result.js'][176] = 0;
  _$jscoverage['protocol/Result.js'][181] = 0;
  _$jscoverage['protocol/Result.js'][182] = 0;
  _$jscoverage['protocol/Result.js'][185] = 0;
  _$jscoverage['protocol/Result.js'][186] = 0;
  _$jscoverage['protocol/Result.js'][187] = 0;
  _$jscoverage['protocol/Result.js'][188] = 0;
  _$jscoverage['protocol/Result.js'][190] = 0;
  _$jscoverage['protocol/Result.js'][193] = 0;
  _$jscoverage['protocol/Result.js'][194] = 0;
  _$jscoverage['protocol/Result.js'][195] = 0;
  _$jscoverage['protocol/Result.js'][198] = 0;
  _$jscoverage['protocol/Result.js'][199] = 0;
  _$jscoverage['protocol/Result.js'][200] = 0;
  _$jscoverage['protocol/Result.js'][202] = 0;
  _$jscoverage['protocol/Result.js'][203] = 0;
  _$jscoverage['protocol/Result.js'][205] = 0;
  _$jscoverage['protocol/Result.js'][207] = 0;
  _$jscoverage['protocol/Result.js'][210] = 0;
  _$jscoverage['protocol/Result.js'][212] = 0;
  _$jscoverage['protocol/Result.js'][213] = 0;
  _$jscoverage['protocol/Result.js'][214] = 0;
  _$jscoverage['protocol/Result.js'][217] = 0;
  _$jscoverage['protocol/Result.js'][218] = 0;
  _$jscoverage['protocol/Result.js'][220] = 0;
  _$jscoverage['protocol/Result.js'][221] = 0;
  _$jscoverage['protocol/Result.js'][223] = 0;
  _$jscoverage['protocol/Result.js'][224] = 0;
  _$jscoverage['protocol/Result.js'][227] = 0;
  _$jscoverage['protocol/Result.js'][228] = 0;
  _$jscoverage['protocol/Result.js'][229] = 0;
  _$jscoverage['protocol/Result.js'][231] = 0;
  _$jscoverage['protocol/Result.js'][232] = 0;
  _$jscoverage['protocol/Result.js'][234] = 0;
  _$jscoverage['protocol/Result.js'][236] = 0;
  _$jscoverage['protocol/Result.js'][239] = 0;
  _$jscoverage['protocol/Result.js'][240] = 0;
  _$jscoverage['protocol/Result.js'][247] = 0;
  _$jscoverage['protocol/Result.js'][249] = 0;
  _$jscoverage['protocol/Result.js'][253] = 0;
  _$jscoverage['protocol/Result.js'][254] = 0;
}
_$jscoverage['protocol/Result.js'][14]++;
"use strict";
_$jscoverage['protocol/Result.js'][16]++;
var util = require("../util");
_$jscoverage['protocol/Result.js'][17]++;
var ResultSet = require("./ResultSet");
_$jscoverage['protocol/Result.js'][18]++;
var Parser = require("./Parser");
_$jscoverage['protocol/Result.js'][19]++;
var Lob = require("./Lob");
_$jscoverage['protocol/Result.js'][20]++;
var common = require("./common");
_$jscoverage['protocol/Result.js'][21]++;
var TypeCode = common.TypeCode;
_$jscoverage['protocol/Result.js'][22]++;
var FunctionCode = common.FunctionCode;
_$jscoverage['protocol/Result.js'][24]++;
module.exports = Result;
_$jscoverage['protocol/Result.js'][26]++;
function Result(connection, options) {
  _$jscoverage['protocol/Result.js'][27]++;
  options = options || {};
  _$jscoverage['protocol/Result.js'][28]++;
  this._connection = connection;
  _$jscoverage['protocol/Result.js'][29]++;
  this._autoFetch = ! ! options.autoFetch;
  _$jscoverage['protocol/Result.js'][30]++;
  this._readSize = options.readSize || Lob.DEFAULT_READ_SIZE;
  _$jscoverage['protocol/Result.js'][31]++;
  this._resultSetMetadata = undefined;
  _$jscoverage['protocol/Result.js'][32]++;
  this._parameterMetadata = undefined;
}
_$jscoverage['protocol/Result.js'][35]++;
Result.prototype.setResultSetMetadata = (function setResultSetMetadata(metadata) {
  _$jscoverage['protocol/Result.js'][37]++;
  this._resultSetMetadata = metadata;
});
_$jscoverage['protocol/Result.js'][40]++;
Result.prototype.setParameterMetadata = (function setParameterMetadata(metadata) {
  _$jscoverage['protocol/Result.js'][42]++;
  this._parameterMetadata = metadata;
});
_$jscoverage['protocol/Result.js'][45]++;
Result.prototype.getLobColumnNames = (function getLobColumnNames() {
  _$jscoverage['protocol/Result.js'][46]++;
  if (this._parameterMetadata) {
    _$jscoverage['protocol/Result.js'][47]++;
    return this._parameterMetadata.filter(isLob).map(getColumName);
  }
  _$jscoverage['protocol/Result.js'][49]++;
  return [];
});
_$jscoverage['protocol/Result.js'][52]++;
Result.prototype.handle = (function handle(err, reply, cb) {
  _$jscoverage['protocol/Result.js'][53]++;
  if (err) {
    _$jscoverage['protocol/Result.js'][54]++;
    return cb(err);
  }
  _$jscoverage['protocol/Result.js'][57]++;
  switch (reply.functionCode) {
  case FunctionCode.SELECT:
  case FunctionCode.SELECT_FOR_UPDATE:
    _$jscoverage['protocol/Result.js'][60]++;
    this.handleQuery(cb, this.createResultSets(reply.resultSets));
    _$jscoverage['protocol/Result.js'][61]++;
    return;
  case FunctionCode.INSERT:
  case FunctionCode.UPDATE:
  case FunctionCode.DELETE:
    _$jscoverage['protocol/Result.js'][65]++;
    this.handleModify(cb, reply.rowsAffected);
    _$jscoverage['protocol/Result.js'][66]++;
    return;
  case FunctionCode.DDL:
    _$jscoverage['protocol/Result.js'][68]++;
    cb(null);
    _$jscoverage['protocol/Result.js'][69]++;
    return;
  case FunctionCode.DB_PROCEDURE_CALL:
  case FunctionCode.DB_PROCEDURE_CALL_WITH_RESULT:
    _$jscoverage['protocol/Result.js'][72]++;
    this.handleDBCall(cb, this.createOutputParameters(reply.outputParameters), this.createResultSets(reply.resultSets));
    _$jscoverage['protocol/Result.js'][75]++;
    return;
  default:
    _$jscoverage['protocol/Result.js'][77]++;
    err = new Error("Invalid or unsupported FunctionCode");
    _$jscoverage['protocol/Result.js'][78]++;
    cb(err);
  }
});
_$jscoverage['protocol/Result.js'][82]++;
Result.prototype.handleModify = (function handleModify(cb, rowsAffected) {
  _$jscoverage['protocol/Result.js'][83]++;
  cb(null, rowsAffected);
});
_$jscoverage['protocol/Result.js'][86]++;
Result.prototype.handleQuery = (function handleQuery(cb, resultSets) {
  _$jscoverage['protocol/Result.js'][87]++;
  function done(err, results) {
    _$jscoverage['protocol/Result.js'][88]++;
    if (err) {
      _$jscoverage['protocol/Result.js'][89]++;
      return cb(err);
    }
    _$jscoverage['protocol/Result.js'][91]++;
    var args = [null];
    _$jscoverage['protocol/Result.js'][92]++;
    Array.prototype.push.apply(args, results);
    _$jscoverage['protocol/Result.js'][93]++;
    return cb.apply(null, args);
}
  _$jscoverage['protocol/Result.js'][96]++;
  if (! this._autoFetch) {
    _$jscoverage['protocol/Result.js'][97]++;
    return done(null, resultSets);
  }
  _$jscoverage['protocol/Result.js'][99]++;
  fetchAll(resultSets, done);
});
_$jscoverage['protocol/Result.js'][102]++;
Result.prototype.handleDBCall = (function handleDBCall(cb, params, resultSets) {
  _$jscoverage['protocol/Result.js'][103]++;
  params = params || {};
  _$jscoverage['protocol/Result.js'][105]++;
  function done(err, results) {
    _$jscoverage['protocol/Result.js'][106]++;
    if (err) {
      _$jscoverage['protocol/Result.js'][107]++;
      return cb(err);
    }
    _$jscoverage['protocol/Result.js'][109]++;
    var args = [null, params];
    _$jscoverage['protocol/Result.js'][110]++;
    Array.prototype.push.apply(args, results);
    _$jscoverage['protocol/Result.js'][111]++;
    return cb.apply(null, args);
}
  _$jscoverage['protocol/Result.js'][114]++;
  if (! this._autoFetch) {
    _$jscoverage['protocol/Result.js'][115]++;
    return done(null, resultSets);
  }
  _$jscoverage['protocol/Result.js'][118]++;
  function fetchResults(err) {
    _$jscoverage['protocol/Result.js'][119]++;
    if (err) {
      _$jscoverage['protocol/Result.js'][120]++;
      return done(err);
    }
    _$jscoverage['protocol/Result.js'][122]++;
    fetchAll(resultSets, done);
}
  _$jscoverage['protocol/Result.js'][125]++;
  readLobs(this.getLobColumnNames(), params, fetchResults);
});
_$jscoverage['protocol/Result.js'][128]++;
Result.prototype.createLob = (function createLob(ld, options) {
  _$jscoverage['protocol/Result.js'][129]++;
  options = util.extend({readSize: this._readSize}, options);
  _$jscoverage['protocol/Result.js'][132]++;
  return new Lob(sendReadLob.bind(this), ld, options);
});
_$jscoverage['protocol/Result.js'][135]++;
function sendReadLob(req, cb) {
  _$jscoverage['protocol/Result.js'][137]++;
  this._connection.readLob(req, cb);
}
_$jscoverage['protocol/Result.js'][140]++;
function createResultSets(resultSets) {
  _$jscoverage['protocol/Result.js'][142]++;
  resultSets = resultSets || [];
  _$jscoverage['protocol/Result.js'][144]++;
  if (this._resultSetMetadata && resultSets.length) {
    _$jscoverage['protocol/Result.js'][145]++;
    if (! resultSets[0].metadata) {
      _$jscoverage['protocol/Result.js'][146]++;
      resultSets[0].metadata = this._resultSetMetadata;
    }
  }
  _$jscoverage['protocol/Result.js'][149]++;
  return resultSets.map(createResultSet, this._connection);
}
_$jscoverage['protocol/Result.js'][151]++;
Result.prototype.createResultSets = createResultSets;
_$jscoverage['protocol/Result.js'][153]++;
function createOutputParameters(outputParameters) {
  _$jscoverage['protocol/Result.js'][155]++;
  if (this._parameterMetadata && util.isObject(outputParameters)) {
    _$jscoverage['protocol/Result.js'][156]++;
    var parser = Parser.create(this._parameterMetadata, this);
    _$jscoverage['protocol/Result.js'][157]++;
    return parser.parseParams(outputParameters.buffer);
  }
  _$jscoverage['protocol/Result.js'][159]++;
  return null;
}
_$jscoverage['protocol/Result.js'][161]++;
Result.prototype.createOutputParameters = createOutputParameters;
_$jscoverage['protocol/Result.js'][163]++;
function createResultSet(rsd) {
  _$jscoverage['protocol/Result.js'][165]++;
  return new ResultSet(this, rsd);
}
_$jscoverage['protocol/Result.js'][168]++;
function fetchAll(resultSets, cb) {
  _$jscoverage['protocol/Result.js'][169]++;
  var results = [];
  _$jscoverage['protocol/Result.js'][171]++;
  function isOpen(rs) {
    _$jscoverage['protocol/Result.js'][172]++;
    return ! rs.closed;
}
  _$jscoverage['protocol/Result.js'][175]++;
  function handleClose(err) {
    _$jscoverage['protocol/Result.js'][176]++;
    if (err) {
    }
}
  _$jscoverage['protocol/Result.js'][181]++;
  function close(rs) {
    _$jscoverage['protocol/Result.js'][182]++;
    rs.close(handleClose);
}
  _$jscoverage['protocol/Result.js'][185]++;
  function done(err) {
    _$jscoverage['protocol/Result.js'][186]++;
    resultSets.filter(isOpen).forEach(close);
    _$jscoverage['protocol/Result.js'][187]++;
    if (err) {
      _$jscoverage['protocol/Result.js'][188]++;
      return cb(err);
    }
    _$jscoverage['protocol/Result.js'][190]++;
    cb(null, results);
}
  _$jscoverage['protocol/Result.js'][193]++;
  function next(i) {
    _$jscoverage['protocol/Result.js'][194]++;
    if (i === resultSets.length) {
      _$jscoverage['protocol/Result.js'][195]++;
      return done(null);
    }
    _$jscoverage['protocol/Result.js'][198]++;
    function handleFetch(err, rows) {
      _$jscoverage['protocol/Result.js'][199]++;
      if (err) {
        _$jscoverage['protocol/Result.js'][200]++;
        return done(err);
      }
      _$jscoverage['protocol/Result.js'][202]++;
      results.push(rows);
      _$jscoverage['protocol/Result.js'][203]++;
      process.nextTick(next.bind(null, i + 1));
}
    _$jscoverage['protocol/Result.js'][205]++;
    resultSets[i].fetch(handleFetch);
}
  _$jscoverage['protocol/Result.js'][207]++;
  next(0);
}
_$jscoverage['protocol/Result.js'][210]++;
function readLobs(keys, params, cb) {
  _$jscoverage['protocol/Result.js'][212]++;
  function next(i) {
    _$jscoverage['protocol/Result.js'][213]++;
    if (i === keys.length) {
      _$jscoverage['protocol/Result.js'][214]++;
      return cb(null);
    }
    _$jscoverage['protocol/Result.js'][217]++;
    var name = keys[i];
    _$jscoverage['protocol/Result.js'][218]++;
    var lob = params[name];
    _$jscoverage['protocol/Result.js'][220]++;
    function processNext() {
      _$jscoverage['protocol/Result.js'][221]++;
      process.nextTick(next.bind(null, i + 1));
}
    _$jscoverage['protocol/Result.js'][223]++;
    if (! (lob instanceof Lob)) {
      _$jscoverage['protocol/Result.js'][224]++;
      return processNext();
    }
    _$jscoverage['protocol/Result.js'][227]++;
    function handleRead(err, buffer) {
      _$jscoverage['protocol/Result.js'][228]++;
      if (err) {
        _$jscoverage['protocol/Result.js'][229]++;
        return cb(err);
      }
      _$jscoverage['protocol/Result.js'][231]++;
      params[name] = buffer;
      _$jscoverage['protocol/Result.js'][232]++;
      process.nextTick(next.bind(null, i + 1));
}
    _$jscoverage['protocol/Result.js'][234]++;
    lob.read(handleRead);
}
  _$jscoverage['protocol/Result.js'][236]++;
  next(0);
}
_$jscoverage['protocol/Result.js'][239]++;
function isLob(column) {
  _$jscoverage['protocol/Result.js'][240]++;
  switch (column.dataType) {
  case TypeCode.BLOB:
  case TypeCode.LOCATOR:
  case TypeCode.CLOB:
  case TypeCode.NCLOB:
  case TypeCode.NLOCATOR:
  case TypeCode.TEXT:
    _$jscoverage['protocol/Result.js'][247]++;
    return true;
  default:
    _$jscoverage['protocol/Result.js'][249]++;
    return false;
  }
}
_$jscoverage['protocol/Result.js'][253]++;
function getColumName(column) {
  _$jscoverage['protocol/Result.js'][254]++;
  return column.name;
}
_$jscoverage['protocol/Result.js'].source = ["// Copyright 2013 SAP AG.","//","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//","// http: //www.apache.org/licenses/LICENSE-2.0","//","// Unless required by applicable law or agreed to in writing,","// software distributed under the License is distributed on an","// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,","// either express or implied. See the License for the specific","// language governing permissions and limitations under the License.","'use strict';","","var util = require('../util');","var ResultSet = require('./ResultSet');","var Parser = require('./Parser');","var Lob = require('./Lob');","var common = require('./common');","var TypeCode = common.TypeCode;","var FunctionCode = common.FunctionCode;","","module.exports = Result;","","function Result(connection, options) {","  options = options || {};","  this._connection = connection;","  this._autoFetch = !!options.autoFetch;","  this._readSize = options.readSize || Lob.DEFAULT_READ_SIZE;","  this._resultSetMetadata = undefined;","  this._parameterMetadata = undefined;","}","","Result.prototype.setResultSetMetadata = function setResultSetMetadata(","  metadata) {","  this._resultSetMetadata = metadata;","};","","Result.prototype.setParameterMetadata = function setParameterMetadata(","  metadata) {","  this._parameterMetadata = metadata;","};","","Result.prototype.getLobColumnNames = function getLobColumnNames() {","  if (this._parameterMetadata) {","    return this._parameterMetadata.filter(isLob).map(getColumName);","  }","  return [];","};","","Result.prototype.handle = function handle(err, reply, cb) {","  if (err) {","    return cb(err);","  }","","  switch (reply.functionCode) {","  case FunctionCode.SELECT:","  case FunctionCode.SELECT_FOR_UPDATE:","    this.handleQuery(cb, this.createResultSets(reply.resultSets));","    return;","  case FunctionCode.INSERT:","  case FunctionCode.UPDATE:","  case FunctionCode.DELETE:","    this.handleModify(cb, reply.rowsAffected);","    return;","  case FunctionCode.DDL:","    cb(null);","    return;","  case FunctionCode.DB_PROCEDURE_CALL:","  case FunctionCode.DB_PROCEDURE_CALL_WITH_RESULT:","    this.handleDBCall(cb,","      this.createOutputParameters(reply.outputParameters),","      this.createResultSets(reply.resultSets));","    return;","  default:","    err = new Error('Invalid or unsupported FunctionCode');","    cb(err);","  }","};","","Result.prototype.handleModify = function handleModify(cb, rowsAffected) {","  cb(null, rowsAffected);","};","","Result.prototype.handleQuery = function handleQuery(cb, resultSets) {","  function done(err, results) {","    if (err) {","      return cb(err);","    }","    var args = [null];","    Array.prototype.push.apply(args, results);","    return cb.apply(null, args);","  }","","  if (!this._autoFetch) {","    return done(null, resultSets);","  }","  fetchAll(resultSets, done);","};","","Result.prototype.handleDBCall = function handleDBCall(cb, params, resultSets) {","  params = params || {};","","  function done(err, results) {","    if (err) {","      return cb(err);","    }","    var args = [null, params];","    Array.prototype.push.apply(args, results);","    return cb.apply(null, args);","  }","","  if (!this._autoFetch) {","    return done(null, resultSets);","  }","","  function fetchResults(err) {","    if (err) {","      return done(err);","    }","    fetchAll(resultSets, done);","  }","","  readLobs(this.getLobColumnNames(), params, fetchResults);","};","","Result.prototype.createLob = function createLob(ld, options) {","  options = util.extend({","    readSize: this._readSize","  }, options);","  return new Lob(sendReadLob.bind(this), ld, options);","};","","function sendReadLob(req, cb) {","  /* jshint validthis:true */","  this._connection.readLob(req, cb);","}","","function createResultSets(resultSets) {","  /* jshint validthis:true */","  resultSets = resultSets || [];","  // handle missing resultSet metadata","  if (this._resultSetMetadata &amp;&amp; resultSets.length) {","    if (!resultSets[0].metadata) {","      resultSets[0].metadata = this._resultSetMetadata;","    }","  }","  return resultSets.map(createResultSet, this._connection);","}","Result.prototype.createResultSets = createResultSets;","","function createOutputParameters(outputParameters) {","  /* jshint validthis:true */","  if (this._parameterMetadata &amp;&amp; util.isObject(outputParameters)) {","    var parser = Parser.create(this._parameterMetadata, this);","    return parser.parseParams(outputParameters.buffer);","  }","  return null;","}","Result.prototype.createOutputParameters = createOutputParameters;","","function createResultSet(rsd) {","  /* jshint validthis:true */","  return new ResultSet(this, rsd);","}","","function fetchAll(resultSets, cb) {","  var results = [];","","  function isOpen(rs) {","    return !rs.closed;","  }","","  function handleClose(err) {","    if (err) {","      // ignore errors","    }","  }","","  function close(rs) {","    rs.close(handleClose);","  }","","  function done(err) {","    resultSets.filter(isOpen).forEach(close);","    if (err) {","      return cb(err);","    }","    cb(null, results);","  }","","  function next(i) {","    if (i === resultSets.length) {","      return done(null);","    }","","    function handleFetch(err, rows) {","      if (err) {","        return done(err);","      }","      results.push(rows);","      process.nextTick(next.bind(null, i + 1));","    }","    resultSets[i].fetch(handleFetch);","  }","  next(0);","}","","function readLobs(keys, params, cb) {","","  function next(i) {","    if (i === keys.length) {","      return cb(null);","    }","","    var name = keys[i];","    var lob = params[name];","","    function processNext() {","      process.nextTick(next.bind(null, i + 1));","    }","    if (!(lob instanceof Lob)) {","      return processNext();","    }","","    function handleRead(err, buffer) {","      if (err) {","        return cb(err);","      }","      params[name] = buffer;","      process.nextTick(next.bind(null, i + 1));","    }","    lob.read(handleRead);","  }","  next(0);","}","","function isLob(column) {","  switch (column.dataType) {","  case TypeCode.BLOB:","  case TypeCode.LOCATOR:","  case TypeCode.CLOB:","  case TypeCode.NCLOB:","  case TypeCode.NLOCATOR:","  case TypeCode.TEXT:","    return true;","  default:","    return false;","  }","}","","function getColumName(column) {","  return column.name;","}"];
