/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['protocol/Lob.js']) {
  _$jscoverage['protocol/Lob.js'] = [];
  _$jscoverage['protocol/Lob.js'][14] = 0;
  _$jscoverage['protocol/Lob.js'][16] = 0;
  _$jscoverage['protocol/Lob.js'][17] = 0;
  _$jscoverage['protocol/Lob.js'][18] = 0;
  _$jscoverage['protocol/Lob.js'][20] = 0;
  _$jscoverage['protocol/Lob.js'][22] = 0;
  _$jscoverage['protocol/Lob.js'][24] = 0;
  _$jscoverage['protocol/Lob.js'][25] = 0;
  _$jscoverage['protocol/Lob.js'][27] = 0;
  _$jscoverage['protocol/Lob.js'][28] = 0;
  _$jscoverage['protocol/Lob.js'][30] = 0;
  _$jscoverage['protocol/Lob.js'][31] = 0;
  _$jscoverage['protocol/Lob.js'][33] = 0;
  _$jscoverage['protocol/Lob.js'][34] = 0;
  _$jscoverage['protocol/Lob.js'][35] = 0;
  _$jscoverage['protocol/Lob.js'][36] = 0;
  _$jscoverage['protocol/Lob.js'][37] = 0;
  _$jscoverage['protocol/Lob.js'][38] = 0;
  _$jscoverage['protocol/Lob.js'][39] = 0;
  _$jscoverage['protocol/Lob.js'][40] = 0;
  _$jscoverage['protocol/Lob.js'][44] = 0;
  _$jscoverage['protocol/Lob.js'][45] = 0;
  _$jscoverage['protocol/Lob.js'][48] = 0;
  _$jscoverage['protocol/Lob.js'][49] = 0;
  _$jscoverage['protocol/Lob.js'][50] = 0;
  _$jscoverage['protocol/Lob.js'][52] = 0;
  _$jscoverage['protocol/Lob.js'][53] = 0;
  _$jscoverage['protocol/Lob.js'][54] = 0;
  _$jscoverage['protocol/Lob.js'][55] = 0;
  _$jscoverage['protocol/Lob.js'][57] = 0;
  _$jscoverage['protocol/Lob.js'][61] = 0;
  _$jscoverage['protocol/Lob.js'][62] = 0;
  _$jscoverage['protocol/Lob.js'][63] = 0;
  _$jscoverage['protocol/Lob.js'][64] = 0;
  _$jscoverage['protocol/Lob.js'][65] = 0;
  _$jscoverage['protocol/Lob.js'][68] = 0;
  _$jscoverage['protocol/Lob.js'][70] = 0;
  _$jscoverage['protocol/Lob.js'][71] = 0;
  _$jscoverage['protocol/Lob.js'][74] = 0;
  _$jscoverage['protocol/Lob.js'][75] = 0;
  _$jscoverage['protocol/Lob.js'][76] = 0;
  _$jscoverage['protocol/Lob.js'][77] = 0;
  _$jscoverage['protocol/Lob.js'][80] = 0;
  _$jscoverage['protocol/Lob.js'][83] = 0;
  _$jscoverage['protocol/Lob.js'][84] = 0;
  _$jscoverage['protocol/Lob.js'][85] = 0;
  _$jscoverage['protocol/Lob.js'][88] = 0;
  _$jscoverage['protocol/Lob.js'][91] = 0;
  _$jscoverage['protocol/Lob.js'][93] = 0;
  _$jscoverage['protocol/Lob.js'][94] = 0;
  _$jscoverage['protocol/Lob.js'][101] = 0;
  _$jscoverage['protocol/Lob.js'][103] = 0;
  _$jscoverage['protocol/Lob.js'][104] = 0;
  _$jscoverage['protocol/Lob.js'][105] = 0;
  _$jscoverage['protocol/Lob.js'][106] = 0;
  _$jscoverage['protocol/Lob.js'][107] = 0;
  _$jscoverage['protocol/Lob.js'][110] = 0;
  _$jscoverage['protocol/Lob.js'][111] = 0;
  _$jscoverage['protocol/Lob.js'][112] = 0;
  _$jscoverage['protocol/Lob.js'][114] = 0;
  _$jscoverage['protocol/Lob.js'][118] = 0;
  _$jscoverage['protocol/Lob.js'][120] = 0;
  _$jscoverage['protocol/Lob.js'][121] = 0;
  _$jscoverage['protocol/Lob.js'][122] = 0;
  _$jscoverage['protocol/Lob.js'][123] = 0;
  _$jscoverage['protocol/Lob.js'][124] = 0;
  _$jscoverage['protocol/Lob.js'][127] = 0;
  _$jscoverage['protocol/Lob.js'][128] = 0;
  _$jscoverage['protocol/Lob.js'][131] = 0;
  _$jscoverage['protocol/Lob.js'][132] = 0;
}
_$jscoverage['protocol/Lob.js'][14]++;
"use strict";
_$jscoverage['protocol/Lob.js'][16]++;
var util = require("../util");
_$jscoverage['protocol/Lob.js'][17]++;
var EventEmitter = require("events").EventEmitter;
_$jscoverage['protocol/Lob.js'][18]++;
var debug = util.debuglog("hdb_lob");
_$jscoverage['protocol/Lob.js'][20]++;
module.exports = Lob;
_$jscoverage['protocol/Lob.js'][22]++;
util.inherits(Lob, EventEmitter);
_$jscoverage['protocol/Lob.js'][24]++;
Lob.DEFAULT_READ_SIZE = Math.pow(2, 17);
_$jscoverage['protocol/Lob.js'][25]++;
Lob.MAX_READ_SIZE = Math.pow(2, 18);
_$jscoverage['protocol/Lob.js'][27]++;
function Lob(readLob, ld, options) {
  _$jscoverage['protocol/Lob.js'][28]++;
  EventEmitter.call(this);
  _$jscoverage['protocol/Lob.js'][30]++;
  this.locatorId = ld.locatorId;
  _$jscoverage['protocol/Lob.js'][31]++;
  this.finished = false;
  _$jscoverage['protocol/Lob.js'][33]++;
  this._readLob = readLob;
  _$jscoverage['protocol/Lob.js'][34]++;
  this._running = undefined;
  _$jscoverage['protocol/Lob.js'][35]++;
  this._offset = 0;
  _$jscoverage['protocol/Lob.js'][36]++;
  options = options || {};
  _$jscoverage['protocol/Lob.js'][37]++;
  this._readSize = options.readSize || Lob.DEFAULT_READ_SIZE;
  _$jscoverage['protocol/Lob.js'][38]++;
  this._data = undefined;
  _$jscoverage['protocol/Lob.js'][39]++;
  if (ld.chunk) {
    _$jscoverage['protocol/Lob.js'][40]++;
    this._data = ld;
  }
}
_$jscoverage['protocol/Lob.js'][44]++;
Lob.prototype.pause = (function pause() {
  _$jscoverage['protocol/Lob.js'][45]++;
  this._running = false;
});
_$jscoverage['protocol/Lob.js'][48]++;
Lob.prototype.resume = (function resume() {
  _$jscoverage['protocol/Lob.js'][49]++;
  if (this._running || this.finished) {
    _$jscoverage['protocol/Lob.js'][50]++;
    return;
  }
  _$jscoverage['protocol/Lob.js'][52]++;
  this._running = true;
  _$jscoverage['protocol/Lob.js'][53]++;
  if (util.isObject(this._data)) {
    _$jscoverage['protocol/Lob.js'][54]++;
    handleData.call(this, this._data);
    _$jscoverage['protocol/Lob.js'][55]++;
    this._data = undefined;
  }
  else {
    _$jscoverage['protocol/Lob.js'][57]++;
    sendReadLob.call(this);
  }
});
_$jscoverage['protocol/Lob.js'][61]++;
Lob.prototype.end = (function end() {
  _$jscoverage['protocol/Lob.js'][62]++;
  this.finished = true;
  _$jscoverage['protocol/Lob.js'][63]++;
  this._running = false;
  _$jscoverage['protocol/Lob.js'][64]++;
  this._connection = undefined;
  _$jscoverage['protocol/Lob.js'][65]++;
  process.nextTick(emitEnd.bind(this));
});
_$jscoverage['protocol/Lob.js'][68]++;
function emitEnd() {
  _$jscoverage['protocol/Lob.js'][70]++;
  debug("emit \"end\"");
  _$jscoverage['protocol/Lob.js'][71]++;
  this.emit("end");
}
_$jscoverage['protocol/Lob.js'][74]++;
Lob.prototype.read = (function read(cb) {
  _$jscoverage['protocol/Lob.js'][75]++;
  if (! util.isUndefined(this._running)) {
    _$jscoverage['protocol/Lob.js'][76]++;
    var err = new Error("Lob invalid state error");
    _$jscoverage['protocol/Lob.js'][77]++;
    return cb(err);
  }
  _$jscoverage['protocol/Lob.js'][80]++;
  util.readData(this, cb);
});
_$jscoverage['protocol/Lob.js'][83]++;
Lob.prototype.createReadStream = (function createReadStream(options) {
  _$jscoverage['protocol/Lob.js'][84]++;
  if (! util.isUndefined(this._running)) {
    _$jscoverage['protocol/Lob.js'][85]++;
    return null;
  }
  _$jscoverage['protocol/Lob.js'][88]++;
  return util.createReadStream(this, ["error"], options);
});
_$jscoverage['protocol/Lob.js'][91]++;
function sendReadLob() {
  _$jscoverage['protocol/Lob.js'][93]++;
  debug("sendReadLob", this.locatorId);
  _$jscoverage['protocol/Lob.js'][94]++;
  this._readLob({locatorId: this.locatorId, offset: this._offset + 1, length: this._readSize}, receiveData.bind(this));
}
_$jscoverage['protocol/Lob.js'][101]++;
function receiveData(err, reply) {
  _$jscoverage['protocol/Lob.js'][103]++;
  debug("receiveData()");
  _$jscoverage['protocol/Lob.js'][104]++;
  if (err) {
    _$jscoverage['protocol/Lob.js'][105]++;
    this._running = false;
    _$jscoverage['protocol/Lob.js'][106]++;
    this.emit("error", err);
    _$jscoverage['protocol/Lob.js'][107]++;
    return;
  }
  _$jscoverage['protocol/Lob.js'][110]++;
  var data = reply.readLobReply;
  _$jscoverage['protocol/Lob.js'][111]++;
  if (this._running) {
    _$jscoverage['protocol/Lob.js'][112]++;
    handleData.call(this, data);
  }
  else {
    _$jscoverage['protocol/Lob.js'][114]++;
    this._data = data;
  }
}
_$jscoverage['protocol/Lob.js'][118]++;
function handleData(data) {
  _$jscoverage['protocol/Lob.js'][120]++;
  var size = data.size || this._readSize;
  _$jscoverage['protocol/Lob.js'][121]++;
  debug("handleData(%d)", size);
  _$jscoverage['protocol/Lob.js'][122]++;
  if (Buffer.isBuffer(data.chunk)) {
    _$jscoverage['protocol/Lob.js'][123]++;
    this._offset += size;
    _$jscoverage['protocol/Lob.js'][124]++;
    this.emit("data", data.chunk);
  }
  _$jscoverage['protocol/Lob.js'][127]++;
  if (data.isLast) {
    _$jscoverage['protocol/Lob.js'][128]++;
    return this.end();
  }
  _$jscoverage['protocol/Lob.js'][131]++;
  if (this._running) {
    _$jscoverage['protocol/Lob.js'][132]++;
    process.nextTick(sendReadLob.bind(this));
  }
}
_$jscoverage['protocol/Lob.js'].source = ["// Copyright 2013 SAP AG.","//","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//","// http: //www.apache.org/licenses/LICENSE-2.0","//","// Unless required by applicable law or agreed to in writing,","// software distributed under the License is distributed on an","// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,","// either express or implied. See the License for the specific","// language governing permissions and limitations under the License.","'use strict';","","var util = require('../util');","var EventEmitter = require('events').EventEmitter;","var debug = util.debuglog('hdb_lob');","","module.exports = Lob;","","util.inherits(Lob, EventEmitter);","","Lob.DEFAULT_READ_SIZE = Math.pow(2, 17);","Lob.MAX_READ_SIZE = Math.pow(2, 18);","","function Lob(readLob, ld, options) {","  EventEmitter.call(this);","  // public","  this.locatorId = ld.locatorId;","  this.finished = false;","  // private","  this._readLob = readLob;","  this._running = undefined;","  this._offset = 0;","  options = options || {};","  this._readSize = options.readSize || Lob.DEFAULT_READ_SIZE;","  this._data = undefined;","  if (ld.chunk) {","    this._data = ld;","  }","}","","Lob.prototype.pause = function pause() {","  this._running = false;","};","","Lob.prototype.resume = function resume() {","  if (this._running || this.finished) {","    return;","  }","  this._running = true;","  if (util.isObject(this._data)) {","    handleData.call(this, this._data);","    this._data = undefined;","  } else {","    sendReadLob.call(this);","  }","};","","Lob.prototype.end = function end() {","  this.finished = true;","  this._running = false;","  this._connection = undefined;","  process.nextTick(emitEnd.bind(this));","};","","function emitEnd() {","  /* jshint validthis:true */","  debug('emit \"end\"');","  this.emit('end');","}","","Lob.prototype.read = function read(cb) {","  if (!util.isUndefined(this._running)) {","    var err = new Error('Lob invalid state error');","    return cb(err);","  }","","  util.readData(this, cb);","};","","Lob.prototype.createReadStream = function createReadStream(options) {","  if (!util.isUndefined(this._running)) {","    return null;","  }","","  return util.createReadStream(this, ['error'], options);","};","","function sendReadLob() {","  /* jshint validthis:true */","  debug('sendReadLob', this.locatorId);","  this._readLob({","    locatorId: this.locatorId,","    offset: this._offset + 1,","    length: this._readSize","  }, receiveData.bind(this));","}","","function receiveData(err, reply) {","  /* jshint validthis:true */","  debug('receiveData()');","  if (err) {","    this._running = false;","    this.emit('error', err);","    return;","  }","","  var data = reply.readLobReply;","  if (this._running) {","    handleData.call(this, data);","  } else {","    this._data = data;","  }","}","","function handleData(data) {","  /* jshint validthis:true */","  var size = data.size || this._readSize;","  debug('handleData(%d)', size);","  if (Buffer.isBuffer(data.chunk)) {","    this._offset += size;","    this.emit('data', data.chunk);","  }","","  if (data.isLast) {","    return this.end();","  }","","  if (this._running) {","    process.nextTick(sendReadLob.bind(this));","  }","}"];
