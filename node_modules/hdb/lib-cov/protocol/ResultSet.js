/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['protocol/ResultSet.js']) {
  _$jscoverage['protocol/ResultSet.js'] = [];
  _$jscoverage['protocol/ResultSet.js'][14] = 0;
  _$jscoverage['protocol/ResultSet.js'][16] = 0;
  _$jscoverage['protocol/ResultSet.js'][17] = 0;
  _$jscoverage['protocol/ResultSet.js'][18] = 0;
  _$jscoverage['protocol/ResultSet.js'][19] = 0;
  _$jscoverage['protocol/ResultSet.js'][20] = 0;
  _$jscoverage['protocol/ResultSet.js'][21] = 0;
  _$jscoverage['protocol/ResultSet.js'][22] = 0;
  _$jscoverage['protocol/ResultSet.js'][23] = 0;
  _$jscoverage['protocol/ResultSet.js'][25] = 0;
  _$jscoverage['protocol/ResultSet.js'][27] = 0;
  _$jscoverage['protocol/ResultSet.js'][29] = 0;
  _$jscoverage['protocol/ResultSet.js'][30] = 0;
  _$jscoverage['protocol/ResultSet.js'][31] = 0;
  _$jscoverage['protocol/ResultSet.js'][32] = 0;
  _$jscoverage['protocol/ResultSet.js'][34] = 0;
  _$jscoverage['protocol/ResultSet.js'][35] = 0;
  _$jscoverage['protocol/ResultSet.js'][37] = 0;
  _$jscoverage['protocol/ResultSet.js'][38] = 0;
  _$jscoverage['protocol/ResultSet.js'][39] = 0;
  _$jscoverage['protocol/ResultSet.js'][40] = 0;
  _$jscoverage['protocol/ResultSet.js'][42] = 0;
  _$jscoverage['protocol/ResultSet.js'][43] = 0;
  _$jscoverage['protocol/ResultSet.js'][44] = 0;
  _$jscoverage['protocol/ResultSet.js'][45] = 0;
  _$jscoverage['protocol/ResultSet.js'][46] = 0;
  _$jscoverage['protocol/ResultSet.js'][47] = 0;
  _$jscoverage['protocol/ResultSet.js'][48] = 0;
  _$jscoverage['protocol/ResultSet.js'][51] = 0;
  _$jscoverage['protocol/ResultSet.js'][52] = 0;
  _$jscoverage['protocol/ResultSet.js'][55] = 0;
  _$jscoverage['protocol/ResultSet.js'][58] = 0;
  _$jscoverage['protocol/ResultSet.js'][63] = 0;
  _$jscoverage['protocol/ResultSet.js'][68] = 0;
  _$jscoverage['protocol/ResultSet.js'][73] = 0;
  _$jscoverage['protocol/ResultSet.js'][74] = 0;
  _$jscoverage['protocol/ResultSet.js'][75] = 0;
  _$jscoverage['protocol/ResultSet.js'][77] = 0;
  _$jscoverage['protocol/ResultSet.js'][78] = 0;
  _$jscoverage['protocol/ResultSet.js'][81] = 0;
  _$jscoverage['protocol/ResultSet.js'][82] = 0;
  _$jscoverage['protocol/ResultSet.js'][83] = 0;
  _$jscoverage['protocol/ResultSet.js'][86] = 0;
  _$jscoverage['protocol/ResultSet.js'][87] = 0;
  _$jscoverage['protocol/ResultSet.js'][88] = 0;
  _$jscoverage['protocol/ResultSet.js'][90] = 0;
  _$jscoverage['protocol/ResultSet.js'][91] = 0;
  _$jscoverage['protocol/ResultSet.js'][94] = 0;
  _$jscoverage['protocol/ResultSet.js'][95] = 0;
  _$jscoverage['protocol/ResultSet.js'][98] = 0;
  _$jscoverage['protocol/ResultSet.js'][99] = 0;
  _$jscoverage['protocol/ResultSet.js'][100] = 0;
  _$jscoverage['protocol/ResultSet.js'][102] = 0;
  _$jscoverage['protocol/ResultSet.js'][103] = 0;
  _$jscoverage['protocol/ResultSet.js'][104] = 0;
  _$jscoverage['protocol/ResultSet.js'][105] = 0;
  _$jscoverage['protocol/ResultSet.js'][107] = 0;
  _$jscoverage['protocol/ResultSet.js'][111] = 0;
  _$jscoverage['protocol/ResultSet.js'][112] = 0;
  _$jscoverage['protocol/ResultSet.js'][113] = 0;
  _$jscoverage['protocol/ResultSet.js'][115] = 0;
  _$jscoverage['protocol/ResultSet.js'][119] = 0;
  _$jscoverage['protocol/ResultSet.js'][120] = 0;
  _$jscoverage['protocol/ResultSet.js'][123] = 0;
  _$jscoverage['protocol/ResultSet.js'][124] = 0;
  _$jscoverage['protocol/ResultSet.js'][125] = 0;
  _$jscoverage['protocol/ResultSet.js'][129] = 0;
  _$jscoverage['protocol/ResultSet.js'][130] = 0;
  _$jscoverage['protocol/ResultSet.js'][131] = 0;
  _$jscoverage['protocol/ResultSet.js'][132] = 0;
  _$jscoverage['protocol/ResultSet.js'][134] = 0;
  _$jscoverage['protocol/ResultSet.js'][137] = 0;
  _$jscoverage['protocol/ResultSet.js'][138] = 0;
  _$jscoverage['protocol/ResultSet.js'][139] = 0;
  _$jscoverage['protocol/ResultSet.js'][140] = 0;
  _$jscoverage['protocol/ResultSet.js'][143] = 0;
  _$jscoverage['protocol/ResultSet.js'][144] = 0;
  _$jscoverage['protocol/ResultSet.js'][147] = 0;
  _$jscoverage['protocol/ResultSet.js'][149] = 0;
  _$jscoverage['protocol/ResultSet.js'][151] = 0;
  _$jscoverage['protocol/ResultSet.js'][154] = 0;
  _$jscoverage['protocol/ResultSet.js'][155] = 0;
  _$jscoverage['protocol/ResultSet.js'][156] = 0;
  _$jscoverage['protocol/ResultSet.js'][159] = 0;
  _$jscoverage['protocol/ResultSet.js'][162] = 0;
  _$jscoverage['protocol/ResultSet.js'][163] = 0;
  _$jscoverage['protocol/ResultSet.js'][166] = 0;
  _$jscoverage['protocol/ResultSet.js'][167] = 0;
  _$jscoverage['protocol/ResultSet.js'][170] = 0;
  _$jscoverage['protocol/ResultSet.js'][171] = 0;
  _$jscoverage['protocol/ResultSet.js'][172] = 0;
  _$jscoverage['protocol/ResultSet.js'][174] = 0;
  _$jscoverage['protocol/ResultSet.js'][177] = 0;
  _$jscoverage['protocol/ResultSet.js'][178] = 0;
  _$jscoverage['protocol/ResultSet.js'][179] = 0;
  _$jscoverage['protocol/ResultSet.js'][182] = 0;
  _$jscoverage['protocol/ResultSet.js'][183] = 0;
  _$jscoverage['protocol/ResultSet.js'][185] = 0;
  _$jscoverage['protocol/ResultSet.js'][190] = 0;
  _$jscoverage['protocol/ResultSet.js'][193] = 0;
  _$jscoverage['protocol/ResultSet.js'][194] = 0;
  _$jscoverage['protocol/ResultSet.js'][196] = 0;
  _$jscoverage['protocol/ResultSet.js'][197] = 0;
  _$jscoverage['protocol/ResultSet.js'][199] = 0;
  _$jscoverage['protocol/ResultSet.js'][200] = 0;
  _$jscoverage['protocol/ResultSet.js'][202] = 0;
  _$jscoverage['protocol/ResultSet.js'][205] = 0;
  _$jscoverage['protocol/ResultSet.js'][206] = 0;
  _$jscoverage['protocol/ResultSet.js'][209] = 0;
  _$jscoverage['protocol/ResultSet.js'][212] = 0;
  _$jscoverage['protocol/ResultSet.js'][214] = 0;
  _$jscoverage['protocol/ResultSet.js'][216] = 0;
  _$jscoverage['protocol/ResultSet.js'][217] = 0;
  _$jscoverage['protocol/ResultSet.js'][218] = 0;
  _$jscoverage['protocol/ResultSet.js'][219] = 0;
  _$jscoverage['protocol/ResultSet.js'][221] = 0;
  _$jscoverage['protocol/ResultSet.js'][222] = 0;
  _$jscoverage['protocol/ResultSet.js'][223] = 0;
  _$jscoverage['protocol/ResultSet.js'][225] = 0;
  _$jscoverage['protocol/ResultSet.js'][226] = 0;
  _$jscoverage['protocol/ResultSet.js'][229] = 0;
  _$jscoverage['protocol/ResultSet.js'][234] = 0;
  _$jscoverage['protocol/ResultSet.js'][236] = 0;
  _$jscoverage['protocol/ResultSet.js'][237] = 0;
  _$jscoverage['protocol/ResultSet.js'][243] = 0;
  _$jscoverage['protocol/ResultSet.js'][245] = 0;
  _$jscoverage['protocol/ResultSet.js'][248] = 0;
  _$jscoverage['protocol/ResultSet.js'][250] = 0;
  _$jscoverage['protocol/ResultSet.js'][251] = 0;
  _$jscoverage['protocol/ResultSet.js'][252] = 0;
  _$jscoverage['protocol/ResultSet.js'][253] = 0;
  _$jscoverage['protocol/ResultSet.js'][254] = 0;
  _$jscoverage['protocol/ResultSet.js'][255] = 0;
  _$jscoverage['protocol/ResultSet.js'][257] = 0;
  _$jscoverage['protocol/ResultSet.js'][258] = 0;
  _$jscoverage['protocol/ResultSet.js'][259] = 0;
  _$jscoverage['protocol/ResultSet.js'][261] = 0;
  _$jscoverage['protocol/ResultSet.js'][265] = 0;
  _$jscoverage['protocol/ResultSet.js'][267] = 0;
  _$jscoverage['protocol/ResultSet.js'][268] = 0;
  _$jscoverage['protocol/ResultSet.js'][269] = 0;
  _$jscoverage['protocol/ResultSet.js'][270] = 0;
  _$jscoverage['protocol/ResultSet.js'][273] = 0;
  _$jscoverage['protocol/ResultSet.js'][274] = 0;
  _$jscoverage['protocol/ResultSet.js'][275] = 0;
  _$jscoverage['protocol/ResultSet.js'][276] = 0;
  _$jscoverage['protocol/ResultSet.js'][277] = 0;
  _$jscoverage['protocol/ResultSet.js'][278] = 0;
  _$jscoverage['protocol/ResultSet.js'][281] = 0;
  _$jscoverage['protocol/ResultSet.js'][282] = 0;
  _$jscoverage['protocol/ResultSet.js'][286] = 0;
  _$jscoverage['protocol/ResultSet.js'][288] = 0;
  _$jscoverage['protocol/ResultSet.js'][289] = 0;
  _$jscoverage['protocol/ResultSet.js'][290] = 0;
  _$jscoverage['protocol/ResultSet.js'][291] = 0;
  _$jscoverage['protocol/ResultSet.js'][292] = 0;
  _$jscoverage['protocol/ResultSet.js'][293] = 0;
  _$jscoverage['protocol/ResultSet.js'][297] = 0;
  _$jscoverage['protocol/ResultSet.js'][299] = 0;
  _$jscoverage['protocol/ResultSet.js'][300] = 0;
  _$jscoverage['protocol/ResultSet.js'][303] = 0;
  _$jscoverage['protocol/ResultSet.js'][305] = 0;
  _$jscoverage['protocol/ResultSet.js'][308] = 0;
  _$jscoverage['protocol/ResultSet.js'][310] = 0;
  _$jscoverage['protocol/ResultSet.js'][313] = 0;
  _$jscoverage['protocol/ResultSet.js'][314] = 0;
  _$jscoverage['protocol/ResultSet.js'][321] = 0;
  _$jscoverage['protocol/ResultSet.js'][323] = 0;
  _$jscoverage['protocol/ResultSet.js'][327] = 0;
  _$jscoverage['protocol/ResultSet.js'][328] = 0;
  _$jscoverage['protocol/ResultSet.js'][331] = 0;
  _$jscoverage['protocol/ResultSet.js'][333] = 0;
  _$jscoverage['protocol/ResultSet.js'][334] = 0;
  _$jscoverage['protocol/ResultSet.js'][336] = 0;
  _$jscoverage['protocol/ResultSet.js'][339] = 0;
  _$jscoverage['protocol/ResultSet.js'][341] = 0;
  _$jscoverage['protocol/ResultSet.js'][342] = 0;
  _$jscoverage['protocol/ResultSet.js'][344] = 0;
  _$jscoverage['protocol/ResultSet.js'][345] = 0;
  _$jscoverage['protocol/ResultSet.js'][346] = 0;
  _$jscoverage['protocol/ResultSet.js'][349] = 0;
  _$jscoverage['protocol/ResultSet.js'][350] = 0;
  _$jscoverage['protocol/ResultSet.js'][353] = 0;
  _$jscoverage['protocol/ResultSet.js'][354] = 0;
  _$jscoverage['protocol/ResultSet.js'][355] = 0;
  _$jscoverage['protocol/ResultSet.js'][357] = 0;
  _$jscoverage['protocol/ResultSet.js'][359] = 0;
  _$jscoverage['protocol/ResultSet.js'][362] = 0;
  _$jscoverage['protocol/ResultSet.js'][364] = 0;
  _$jscoverage['protocol/ResultSet.js'][365] = 0;
  _$jscoverage['protocol/ResultSet.js'][367] = 0;
  _$jscoverage['protocol/ResultSet.js'][368] = 0;
  _$jscoverage['protocol/ResultSet.js'][369] = 0;
  _$jscoverage['protocol/ResultSet.js'][372] = 0;
  _$jscoverage['protocol/ResultSet.js'][374] = 0;
  _$jscoverage['protocol/ResultSet.js'][375] = 0;
  _$jscoverage['protocol/ResultSet.js'][378] = 0;
  _$jscoverage['protocol/ResultSet.js'][379] = 0;
  _$jscoverage['protocol/ResultSet.js'][380] = 0;
  _$jscoverage['protocol/ResultSet.js'][381] = 0;
  _$jscoverage['protocol/ResultSet.js'][383] = 0;
  _$jscoverage['protocol/ResultSet.js'][384] = 0;
  _$jscoverage['protocol/ResultSet.js'][385] = 0;
  _$jscoverage['protocol/ResultSet.js'][387] = 0;
  _$jscoverage['protocol/ResultSet.js'][389] = 0;
}
_$jscoverage['protocol/ResultSet.js'][14]++;
"use strict";
_$jscoverage['protocol/ResultSet.js'][16]++;
var util = require("../util");
_$jscoverage['protocol/ResultSet.js'][17]++;
var EventEmitter = require("events").EventEmitter;
_$jscoverage['protocol/ResultSet.js'][18]++;
var common = require("./common");
_$jscoverage['protocol/ResultSet.js'][19]++;
var Parser = require("./Parser");
_$jscoverage['protocol/ResultSet.js'][20]++;
var Lob = require("./Lob");
_$jscoverage['protocol/ResultSet.js'][21]++;
var ResultSetAttributes = common.ResultSetAttributes;
_$jscoverage['protocol/ResultSet.js'][22]++;
var TypeCode = common.TypeCode;
_$jscoverage['protocol/ResultSet.js'][23]++;
var debug = util.debuglog("hdb_rs");
_$jscoverage['protocol/ResultSet.js'][25]++;
module.exports = ResultSet;
_$jscoverage['protocol/ResultSet.js'][27]++;
util.inherits(ResultSet, EventEmitter);
_$jscoverage['protocol/ResultSet.js'][29]++;
ResultSet.MAX_FETCH_SIZE = Math.pow(2, 15) - 1;
_$jscoverage['protocol/ResultSet.js'][30]++;
ResultSet.DEFAULT_FETCH_SIZE = Math.pow(2, 10);
_$jscoverage['protocol/ResultSet.js'][31]++;
ResultSet.DEFAULT_ROW_LENGTH = Math.pow(2, 6);
_$jscoverage['protocol/ResultSet.js'][32]++;
ResultSet.DEFAULT_ARRAY_LENGTH = Math.pow(2, 8);
_$jscoverage['protocol/ResultSet.js'][34]++;
function ResultSet(connection, rsd) {
  _$jscoverage['protocol/ResultSet.js'][35]++;
  EventEmitter.call(this);
  _$jscoverage['protocol/ResultSet.js'][37]++;
  this.id = rsd.id;
  _$jscoverage['protocol/ResultSet.js'][38]++;
  this.metadata = rsd.metadata;
  _$jscoverage['protocol/ResultSet.js'][39]++;
  this.closed = false;
  _$jscoverage['protocol/ResultSet.js'][40]++;
  this.finished = false;
  _$jscoverage['protocol/ResultSet.js'][42]++;
  this._connection = connection;
  _$jscoverage['protocol/ResultSet.js'][43]++;
  this._running = undefined;
  _$jscoverage['protocol/ResultSet.js'][44]++;
  this._data = rsd.data;
  _$jscoverage['protocol/ResultSet.js'][45]++;
  this._close = false;
  _$jscoverage['protocol/ResultSet.js'][46]++;
  this._fetchSize = ResultSet.DEFAULT_FETCH_SIZE;
  _$jscoverage['protocol/ResultSet.js'][47]++;
  this._rowLength = ResultSet.DEFAULT_ROW_LENGTH;
  _$jscoverage['protocol/ResultSet.js'][48]++;
  this._readSize = Lob.DEFAULT_READ_SIZE;
}
_$jscoverage['protocol/ResultSet.js'][51]++;
ResultSet.create = (function createResultSet(connection, rsd) {
  _$jscoverage['protocol/ResultSet.js'][52]++;
  return new ResultSet(connection, rsd);
});
_$jscoverage['protocol/ResultSet.js'][55]++;
Object.defineProperties(ResultSet.prototype, {fetchSize: {get: (function getFetchSize() {
  _$jscoverage['protocol/ResultSet.js'][58]++;
  return this._fetchSize;
})}, averageRowLength: {get: (function getAverageRowLength() {
  _$jscoverage['protocol/ResultSet.js'][63]++;
  return this._rowLength;
})}, readSize: {get: (function getReadSize() {
  _$jscoverage['protocol/ResultSet.js'][68]++;
  return this._readSize;
})}});
_$jscoverage['protocol/ResultSet.js'][73]++;
ResultSet.prototype.setFetchSize = (function setFetchSize(fetchSize) {
  _$jscoverage['protocol/ResultSet.js'][74]++;
  if (fetchSize > ResultSet.MAX_FETCH_SIZE) {
    _$jscoverage['protocol/ResultSet.js'][75]++;
    this._fetchSize = ResultSet.MAX_FETCH_SIZE;
  }
  _$jscoverage['protocol/ResultSet.js'][77]++;
  this._fetchSize = fetchSize;
  _$jscoverage['protocol/ResultSet.js'][78]++;
  return this;
});
_$jscoverage['protocol/ResultSet.js'][81]++;
ResultSet.prototype.setAverageRowLength = (function setAverageRowLength(length) {
  _$jscoverage['protocol/ResultSet.js'][82]++;
  this._rowLength = length;
  _$jscoverage['protocol/ResultSet.js'][83]++;
  return this;
});
_$jscoverage['protocol/ResultSet.js'][86]++;
ResultSet.prototype.setReadSize = (function setReadSize(readSize) {
  _$jscoverage['protocol/ResultSet.js'][87]++;
  if (readSize > Lob.MAX_READ_SIZE) {
    _$jscoverage['protocol/ResultSet.js'][88]++;
    this._readSize = Lob.MAX_READ_SIZE;
  }
  _$jscoverage['protocol/ResultSet.js'][90]++;
  this._readSize = readSize;
  _$jscoverage['protocol/ResultSet.js'][91]++;
  return this;
});
_$jscoverage['protocol/ResultSet.js'][94]++;
ResultSet.prototype.pause = (function pause() {
  _$jscoverage['protocol/ResultSet.js'][95]++;
  this._running = false;
});
_$jscoverage['protocol/ResultSet.js'][98]++;
ResultSet.prototype.resume = (function resume() {
  _$jscoverage['protocol/ResultSet.js'][99]++;
  if (this._running || this.finished) {
    _$jscoverage['protocol/ResultSet.js'][100]++;
    return;
  }
  _$jscoverage['protocol/ResultSet.js'][102]++;
  this._running = true;
  _$jscoverage['protocol/ResultSet.js'][103]++;
  if (util.isObject(this._data)) {
    _$jscoverage['protocol/ResultSet.js'][104]++;
    handleData.call(this, this._data);
    _$jscoverage['protocol/ResultSet.js'][105]++;
    this._data = undefined;
  }
  else {
    _$jscoverage['protocol/ResultSet.js'][107]++;
    sendFetch.call(this);
  }
});
_$jscoverage['protocol/ResultSet.js'][111]++;
ResultSet.prototype.close = (function close(cb) {
  _$jscoverage['protocol/ResultSet.js'][112]++;
  if (util.isFunction(cb)) {
    _$jscoverage['protocol/ResultSet.js'][113]++;
    this._close = cb;
  }
  else {
    _$jscoverage['protocol/ResultSet.js'][115]++;
    this._close = true;
  }
});
_$jscoverage['protocol/ResultSet.js'][119]++;
ResultSet.prototype.getLobColumnNames = (function getLobColumnNames() {
  _$jscoverage['protocol/ResultSet.js'][120]++;
  return this.metadata.filter(isLob).map(getColumName);
});
_$jscoverage['protocol/ResultSet.js'][123]++;
ResultSet.prototype.fetch = (function fetch(cb) {
  _$jscoverage['protocol/ResultSet.js'][124]++;
  var stream = this.createArrayStream();
  _$jscoverage['protocol/ResultSet.js'][125]++;
  var collector = new util.stream.Writable({objectMode: true, highWaterMark: 16});
  _$jscoverage['protocol/ResultSet.js'][129]++;
  collector.rows = [];
  _$jscoverage['protocol/ResultSet.js'][130]++;
  collector.columns = this.getLobColumnNames();
  _$jscoverage['protocol/ResultSet.js'][131]++;
  if (collector.columns.length) {
    _$jscoverage['protocol/ResultSet.js'][132]++;
    collector._write = collectLobRows;
  }
  else {
    _$jscoverage['protocol/ResultSet.js'][134]++;
    collector._write = collectRows;
  }
  _$jscoverage['protocol/ResultSet.js'][137]++;
  function done(err, rows) {
    _$jscoverage['protocol/ResultSet.js'][138]++;
    stream.removeListener("error", onerror);
    _$jscoverage['protocol/ResultSet.js'][139]++;
    collector.removeListener("finish", onfinish);
    _$jscoverage['protocol/ResultSet.js'][140]++;
    cb(err, rows);
}
  _$jscoverage['protocol/ResultSet.js'][143]++;
  function onerror(err) {
    _$jscoverage['protocol/ResultSet.js'][144]++;
    done(err);
}
  _$jscoverage['protocol/ResultSet.js'][147]++;
  function onfinish() {
    _$jscoverage['protocol/ResultSet.js'][149]++;
    done(null, this.rows);
}
  _$jscoverage['protocol/ResultSet.js'][151]++;
  stream.on("error", onerror).pipe(collector).on("finish", onfinish);
});
_$jscoverage['protocol/ResultSet.js'][154]++;
ResultSet.prototype.createBinaryStream = (function createBinaryStream(options) {
  _$jscoverage['protocol/ResultSet.js'][155]++;
  if (! util.isUndefined(this._running)) {
    _$jscoverage['protocol/ResultSet.js'][156]++;
    return null;
  }
  _$jscoverage['protocol/ResultSet.js'][159]++;
  options = util.extend({highWaterMark: Math.floor(1.5 * this._fetchSize * this._rowLength)}, options);
  _$jscoverage['protocol/ResultSet.js'][162]++;
  options.objectMode = false;
  _$jscoverage['protocol/ResultSet.js'][163]++;
  return util.createReadStream(this, ["error", "close"], options);
});
_$jscoverage['protocol/ResultSet.js'][166]++;
ResultSet.prototype.createParser = (function createParser(options) {
  _$jscoverage['protocol/ResultSet.js'][167]++;
  return Parser.create(this.metadata).createTransform(this, options);
});
_$jscoverage['protocol/ResultSet.js'][170]++;
ResultSet.prototype.createObjectStream = (function createObjectStream(options) {
  _$jscoverage['protocol/ResultSet.js'][171]++;
  options = util.extend({}, options);
  _$jscoverage['protocol/ResultSet.js'][172]++;
  options.arrayMode = false;
  _$jscoverage['protocol/ResultSet.js'][174]++;
  return util.pipe(this.createBinaryStream(), this.createParser(options));
});
_$jscoverage['protocol/ResultSet.js'][177]++;
ResultSet.prototype.createArrayStream = (function createArrayStream(options) {
  _$jscoverage['protocol/ResultSet.js'][178]++;
  if (util.isNumber(options) || options === true) {
    _$jscoverage['protocol/ResultSet.js'][179]++;
    options = {arrayMode: options};
  }
  else {
    _$jscoverage['protocol/ResultSet.js'][182]++;
    if (util.isObject(options)) {
      _$jscoverage['protocol/ResultSet.js'][183]++;
      options = util.extend({}, options);
    }
    else {
      _$jscoverage['protocol/ResultSet.js'][185]++;
      options = {arrayMode: ResultSet.DEFAULT_ARRAY_LENGTH};
    }
  }
  _$jscoverage['protocol/ResultSet.js'][190]++;
  return util.pipe(this.createBinaryStream(), this.createParser(options));
});
_$jscoverage['protocol/ResultSet.js'][193]++;
ResultSet.prototype.createReadStream = (function createReadStream(options) {
  _$jscoverage['protocol/ResultSet.js'][194]++;
  options = options || {};
  _$jscoverage['protocol/ResultSet.js'][196]++;
  if (options.objectMode === false) {
    _$jscoverage['protocol/ResultSet.js'][197]++;
    return this.createBinaryStream(options);
  }
  _$jscoverage['protocol/ResultSet.js'][199]++;
  if (options.arrayMode) {
    _$jscoverage['protocol/ResultSet.js'][200]++;
    return this.createArrayStream(options);
  }
  _$jscoverage['protocol/ResultSet.js'][202]++;
  return this.createObjectStream(options);
});
_$jscoverage['protocol/ResultSet.js'][205]++;
ResultSet.prototype.createLob = (function createLob(ld, options) {
  _$jscoverage['protocol/ResultSet.js'][206]++;
  options = util.extend({readSize: this._readSize}, options);
  _$jscoverage['protocol/ResultSet.js'][209]++;
  return new Lob(sendReadLob.bind(this), ld, options);
});
_$jscoverage['protocol/ResultSet.js'][212]++;
function sendClose() {
  _$jscoverage['protocol/ResultSet.js'][214]++;
  debug("sendClose");
  _$jscoverage['protocol/ResultSet.js'][216]++;
  function done(err) {
    _$jscoverage['protocol/ResultSet.js'][217]++;
    this._connection = undefined;
    _$jscoverage['protocol/ResultSet.js'][218]++;
    if (err) {
      _$jscoverage['protocol/ResultSet.js'][219]++;
      debug("close failed: %s", err);
    }
    else {
      _$jscoverage['protocol/ResultSet.js'][221]++;
      this.closed = true;
      _$jscoverage['protocol/ResultSet.js'][222]++;
      emitClose.call(this);
      _$jscoverage['protocol/ResultSet.js'][223]++;
      this.emit("close");
    }
    _$jscoverage['protocol/ResultSet.js'][225]++;
    if (util.isFunction(this._close)) {
      _$jscoverage['protocol/ResultSet.js'][226]++;
      this._close(err);
    }
}
  _$jscoverage['protocol/ResultSet.js'][229]++;
  this._connection.closeResultSet({resultSetId: this.id}, done.bind(this));
}
_$jscoverage['protocol/ResultSet.js'][234]++;
function sendFetch() {
  _$jscoverage['protocol/ResultSet.js'][236]++;
  debug("sendFetch(%d)", this.fetchSize);
  _$jscoverage['protocol/ResultSet.js'][237]++;
  this._connection.fetchNext({resultSetId: this.id, fetchSize: this.fetchSize}, receiveData.bind(this));
}
_$jscoverage['protocol/ResultSet.js'][243]++;
function sendReadLob(req, cb) {
  _$jscoverage['protocol/ResultSet.js'][245]++;
  this._connection.readLob(req, cb);
}
_$jscoverage['protocol/ResultSet.js'][248]++;
function receiveData(err, reply) {
  _$jscoverage['protocol/ResultSet.js'][250]++;
  debug("receiveData()");
  _$jscoverage['protocol/ResultSet.js'][251]++;
  if (err) {
    _$jscoverage['protocol/ResultSet.js'][252]++;
    this._running = false;
    _$jscoverage['protocol/ResultSet.js'][253]++;
    debug("emit \"error\": %s", err);
    _$jscoverage['protocol/ResultSet.js'][254]++;
    this.emit("error", err);
    _$jscoverage['protocol/ResultSet.js'][255]++;
    return;
  }
  _$jscoverage['protocol/ResultSet.js'][257]++;
  var data = reply.resultSets[0].data;
  _$jscoverage['protocol/ResultSet.js'][258]++;
  if (this._running) {
    _$jscoverage['protocol/ResultSet.js'][259]++;
    handleData.call(this, data);
  }
  else {
    _$jscoverage['protocol/ResultSet.js'][261]++;
    this._data = data;
  }
}
_$jscoverage['protocol/ResultSet.js'][265]++;
function handleData(data) {
  _$jscoverage['protocol/ResultSet.js'][267]++;
  debug("handleData(%d)", data.argumentCount);
  _$jscoverage['protocol/ResultSet.js'][268]++;
  if (data.argumentCount && Buffer.isBuffer(data.buffer)) {
    _$jscoverage['protocol/ResultSet.js'][269]++;
    debug("emit \"data\": length=%d", data.buffer.length);
    _$jscoverage['protocol/ResultSet.js'][270]++;
    this.emit("data", data.buffer);
  }
  _$jscoverage['protocol/ResultSet.js'][273]++;
  if (isLast(data)) {
    _$jscoverage['protocol/ResultSet.js'][274]++;
    this.finished = true;
    _$jscoverage['protocol/ResultSet.js'][275]++;
    this._running = false;
    _$jscoverage['protocol/ResultSet.js'][276]++;
    this.closed = isClosed(data);
    _$jscoverage['protocol/ResultSet.js'][277]++;
    process.nextTick(emitEnd.bind(this));
    _$jscoverage['protocol/ResultSet.js'][278]++;
    return;
  }
  _$jscoverage['protocol/ResultSet.js'][281]++;
  if (this._running) {
    _$jscoverage['protocol/ResultSet.js'][282]++;
    process.nextTick(sendFetch.bind(this));
  }
}
_$jscoverage['protocol/ResultSet.js'][286]++;
function emitEnd() {
  _$jscoverage['protocol/ResultSet.js'][288]++;
  debug("emit \"end\"");
  _$jscoverage['protocol/ResultSet.js'][289]++;
  this.emit("end");
  _$jscoverage['protocol/ResultSet.js'][290]++;
  if (this.closed) {
    _$jscoverage['protocol/ResultSet.js'][291]++;
    process.nextTick(emitClose.bind(this));
  }
  else {
    _$jscoverage['protocol/ResultSet.js'][292]++;
    if (util.isFunction(this._close)) {
      _$jscoverage['protocol/ResultSet.js'][293]++;
      sendClose.call(this);
    }
  }
}
_$jscoverage['protocol/ResultSet.js'][297]++;
function emitClose() {
  _$jscoverage['protocol/ResultSet.js'][299]++;
  debug("emit \"close\"");
  _$jscoverage['protocol/ResultSet.js'][300]++;
  this.emit("close");
}
_$jscoverage['protocol/ResultSet.js'][303]++;
function isLast(data) {
  _$jscoverage['protocol/ResultSet.js'][305]++;
  return ! ! (data.attributes & ResultSetAttributes.LAST);
}
_$jscoverage['protocol/ResultSet.js'][308]++;
function isClosed(data) {
  _$jscoverage['protocol/ResultSet.js'][310]++;
  return ! ! (data.attributes & ResultSetAttributes.CLOSED);
}
_$jscoverage['protocol/ResultSet.js'][313]++;
function isLob(column) {
  _$jscoverage['protocol/ResultSet.js'][314]++;
  switch (column.dataType) {
  case TypeCode.BLOB:
  case TypeCode.LOCATOR:
  case TypeCode.CLOB:
  case TypeCode.NCLOB:
  case TypeCode.NLOCATOR:
  case TypeCode.TEXT:
    _$jscoverage['protocol/ResultSet.js'][321]++;
    return true;
  default:
    _$jscoverage['protocol/ResultSet.js'][323]++;
    return false;
  }
}
_$jscoverage['protocol/ResultSet.js'][327]++;
function getColumName(column) {
  _$jscoverage['protocol/ResultSet.js'][328]++;
  return column.columnDisplayName;
}
_$jscoverage['protocol/ResultSet.js'][331]++;
function collectRows(rows, encoding, done) {
  _$jscoverage['protocol/ResultSet.js'][333]++;
  for (var i = 0; i < rows.length; i++) {
    _$jscoverage['protocol/ResultSet.js'][334]++;
    this.rows.push(rows[i]);
}
  _$jscoverage['protocol/ResultSet.js'][336]++;
  done();
}
_$jscoverage['protocol/ResultSet.js'][339]++;
function collectLobRows(rows, encoding, done) {
  _$jscoverage['protocol/ResultSet.js'][341]++;
  var self = this;
  _$jscoverage['protocol/ResultSet.js'][342]++;
  var i = 0;
  _$jscoverage['protocol/ResultSet.js'][344]++;
  function handleRow(err) {
    _$jscoverage['protocol/ResultSet.js'][345]++;
    if (err) {
      _$jscoverage['protocol/ResultSet.js'][346]++;
      return done(err);
    }
    _$jscoverage['protocol/ResultSet.js'][349]++;
    i += 1;
    _$jscoverage['protocol/ResultSet.js'][350]++;
    next();
}
  _$jscoverage['protocol/ResultSet.js'][353]++;
  function next() {
    _$jscoverage['protocol/ResultSet.js'][354]++;
    if (i === rows.length) {
      _$jscoverage['protocol/ResultSet.js'][355]++;
      return done(null, rows);
    }
    _$jscoverage['protocol/ResultSet.js'][357]++;
    util.setImmediate(collectLobRow.bind(self, rows[i], handleRow));
}
  _$jscoverage['protocol/ResultSet.js'][359]++;
  next();
}
_$jscoverage['protocol/ResultSet.js'][362]++;
function collectLobRow(row, done) {
  _$jscoverage['protocol/ResultSet.js'][364]++;
  var self = this;
  _$jscoverage['protocol/ResultSet.js'][365]++;
  var i = 0;
  _$jscoverage['protocol/ResultSet.js'][367]++;
  function receiveLob(err, buffer) {
    _$jscoverage['protocol/ResultSet.js'][368]++;
    if (err) {
      _$jscoverage['protocol/ResultSet.js'][369]++;
      return done(err);
    }
    _$jscoverage['protocol/ResultSet.js'][372]++;
    row[self.columns[i]] = buffer;
    _$jscoverage['protocol/ResultSet.js'][374]++;
    i += 1;
    _$jscoverage['protocol/ResultSet.js'][375]++;
    next();
}
  _$jscoverage['protocol/ResultSet.js'][378]++;
  function next() {
    _$jscoverage['protocol/ResultSet.js'][379]++;
    if (i === self.columns.length) {
      _$jscoverage['protocol/ResultSet.js'][380]++;
      self.rows.push(row);
      _$jscoverage['protocol/ResultSet.js'][381]++;
      return done(null);
    }
    _$jscoverage['protocol/ResultSet.js'][383]++;
    var lob = row[self.columns[i]];
    _$jscoverage['protocol/ResultSet.js'][384]++;
    if (lob === null || Buffer.isBuffer(lob)) {
      _$jscoverage['protocol/ResultSet.js'][385]++;
      return receiveLob(null, lob);
    }
    _$jscoverage['protocol/ResultSet.js'][387]++;
    lob.read(receiveLob);
}
  _$jscoverage['protocol/ResultSet.js'][389]++;
  next();
}
_$jscoverage['protocol/ResultSet.js'].source = ["// Copyright 2013 SAP AG.","//","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//","// http: //www.apache.org/licenses/LICENSE-2.0","//","// Unless required by applicable law or agreed to in writing,","// software distributed under the License is distributed on an","// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,","// either express or implied. See the License for the specific","// language governing permissions and limitations under the License.","'use strict';","","var util = require('../util');","var EventEmitter = require('events').EventEmitter;","var common = require('./common');","var Parser = require('./Parser');","var Lob = require('./Lob');","var ResultSetAttributes = common.ResultSetAttributes;","var TypeCode = common.TypeCode;","var debug = util.debuglog('hdb_rs');","","module.exports = ResultSet;","","util.inherits(ResultSet, EventEmitter);","","ResultSet.MAX_FETCH_SIZE = Math.pow(2, 15) - 1;","ResultSet.DEFAULT_FETCH_SIZE = Math.pow(2, 10);","ResultSet.DEFAULT_ROW_LENGTH = Math.pow(2, 6);","ResultSet.DEFAULT_ARRAY_LENGTH = Math.pow(2, 8);","","function ResultSet(connection, rsd) {","  EventEmitter.call(this);","  // public","  this.id = rsd.id;","  this.metadata = rsd.metadata;","  this.closed = false;","  this.finished = false;","  // private","  this._connection = connection;","  this._running = undefined;","  this._data = rsd.data;","  this._close = false;","  this._fetchSize = ResultSet.DEFAULT_FETCH_SIZE;","  this._rowLength = ResultSet.DEFAULT_ROW_LENGTH;","  this._readSize = Lob.DEFAULT_READ_SIZE;","}","","ResultSet.create = function createResultSet(connection, rsd) {","  return new ResultSet(connection, rsd);","};","","Object.defineProperties(ResultSet.prototype, {","  fetchSize: {","    get: function getFetchSize() {","      return this._fetchSize;","    }","  },","  averageRowLength: {","    get: function getAverageRowLength() {","      return this._rowLength;","    }","  },","  readSize: {","    get: function getReadSize() {","      return this._readSize;","    }","  }","});","","ResultSet.prototype.setFetchSize = function setFetchSize(fetchSize) {","  if (fetchSize &gt; ResultSet.MAX_FETCH_SIZE) {","    this._fetchSize = ResultSet.MAX_FETCH_SIZE;","  }","  this._fetchSize = fetchSize;","  return this;","};","","ResultSet.prototype.setAverageRowLength = function setAverageRowLength(length) {","  this._rowLength = length;","  return this;","};","","ResultSet.prototype.setReadSize = function setReadSize(readSize) {","  if (readSize &gt; Lob.MAX_READ_SIZE) {","    this._readSize = Lob.MAX_READ_SIZE;","  }","  this._readSize = readSize;","  return this;","};","","ResultSet.prototype.pause = function pause() {","  this._running = false;","};","","ResultSet.prototype.resume = function resume() {","  if (this._running || this.finished) {","    return;","  }","  this._running = true;","  if (util.isObject(this._data)) {","    handleData.call(this, this._data);","    this._data = undefined;","  } else {","    sendFetch.call(this);","  }","};","","ResultSet.prototype.close = function close(cb) {","  if (util.isFunction(cb)) {","    this._close = cb;","  } else {","    this._close = true;","  }","};","","ResultSet.prototype.getLobColumnNames = function getLobColumnNames() {","  return this.metadata.filter(isLob).map(getColumName);","};","","ResultSet.prototype.fetch = function fetch(cb) {","  var stream = this.createArrayStream();","  var collector = new util.stream.Writable({","    objectMode: true,","    highWaterMark: 16","  });","  collector.rows = [];","  collector.columns = this.getLobColumnNames();","  if (collector.columns.length) {","    collector._write = collectLobRows;","  } else {","    collector._write = collectRows;","  }","","  function done(err, rows) {","    stream.removeListener('error', onerror);","    collector.removeListener('finish', onfinish);","    cb(err, rows);","  }","","  function onerror(err) {","    done(err);","  }","","  function onfinish() {","    /* jshint validthis:true */","    done(null, this.rows);","  }","  stream.on('error', onerror).pipe(collector).on('finish', onfinish);","};","","ResultSet.prototype.createBinaryStream = function createBinaryStream(options) {","  if (!util.isUndefined(this._running)) {","    return null;","  }","","  options = util.extend({","    highWaterMark: Math.floor(1.5 * this._fetchSize * this._rowLength)","  }, options);","  options.objectMode = false;","  return util.createReadStream(this, ['error', 'close'], options);","};","","ResultSet.prototype.createParser = function createParser(options) {","  return Parser.create(this.metadata).createTransform(this, options);","};","","ResultSet.prototype.createObjectStream = function createObjectStream(options) {","  options = util.extend({}, options);","  options.arrayMode = false;","","  return util.pipe(this.createBinaryStream(), this.createParser(options));","};","","ResultSet.prototype.createArrayStream = function createArrayStream(options) {","  if (util.isNumber(options) || options === true) {","    options = {","      arrayMode: options","    };","  } else if (util.isObject(options)) {","    options = util.extend({}, options);","  } else {","    options = {","      arrayMode: ResultSet.DEFAULT_ARRAY_LENGTH","    };","  }","","  return util.pipe(this.createBinaryStream(), this.createParser(options));","};","","ResultSet.prototype.createReadStream = function createReadStream(options) {","  options = options || {};","","  if (options.objectMode === false) {","    return this.createBinaryStream(options);","  }","  if (options.arrayMode) {","    return this.createArrayStream(options);","  }","  return this.createObjectStream(options);","};","","ResultSet.prototype.createLob = function createLob(ld, options) {","  options = util.extend({","    readSize: this._readSize","  }, options);","  return new Lob(sendReadLob.bind(this), ld, options);","};","","function sendClose() {","  /* jshint validthis:true */","  debug('sendClose');","","  function done(err) {","    this._connection = undefined;","    if (err) {","      debug('close failed: %s', err);","    } else {","      this.closed = true;","      emitClose.call(this);","      this.emit('close');","    }","    if (util.isFunction(this._close)) {","      this._close(err);","    }","  }","  this._connection.closeResultSet({","    resultSetId: this.id","  }, done.bind(this));","}","","function sendFetch() {","  /* jshint validthis:true */","  debug('sendFetch(%d)', this.fetchSize);","  this._connection.fetchNext({","    resultSetId: this.id,","    fetchSize: this.fetchSize","  }, receiveData.bind(this));","}","","function sendReadLob(req, cb) {","  /* jshint validthis:true */","  this._connection.readLob(req, cb);","}","","function receiveData(err, reply) {","  /* jshint validthis:true */","  debug('receiveData()');","  if (err) {","    this._running = false;","    debug('emit \"error\": %s', err);","    this.emit('error', err);","    return;","  }","  var data = reply.resultSets[0].data;","  if (this._running) {","    handleData.call(this, data);","  } else {","    this._data = data;","  }","}","","function handleData(data) {","  /* jshint validthis:true */","  debug('handleData(%d)', data.argumentCount);","  if (data.argumentCount &amp;&amp; Buffer.isBuffer(data.buffer)) {","    debug('emit \"data\": length=%d', data.buffer.length);","    this.emit('data', data.buffer);","  }","","  if (isLast(data)) {","    this.finished = true;","    this._running = false;","    this.closed = isClosed(data);","    process.nextTick(emitEnd.bind(this));","    return;","  }","","  if (this._running) {","    process.nextTick(sendFetch.bind(this));","  }","}","","function emitEnd() {","  /* jshint validthis:true */","  debug('emit \"end\"');","  this.emit('end');","  if (this.closed) {","    process.nextTick(emitClose.bind(this));","  } else if (util.isFunction(this._close)) {","    sendClose.call(this);","  }","}","","function emitClose() {","  /* jshint validthis:true */","  debug('emit \"close\"');","  this.emit('close');","}","","function isLast(data) {","  /* jshint bitwise:false */","  return !!(data.attributes &amp; ResultSetAttributes.LAST);","}","","function isClosed(data) {","  /* jshint bitwise:false */","  return !!(data.attributes &amp; ResultSetAttributes.CLOSED);","}","","function isLob(column) {","  switch (column.dataType) {","  case TypeCode.BLOB:","  case TypeCode.LOCATOR:","  case TypeCode.CLOB:","  case TypeCode.NCLOB:","  case TypeCode.NLOCATOR:","  case TypeCode.TEXT:","    return true;","  default:","    return false;","  }","}","","function getColumName(column) {","  return column.columnDisplayName;","}","","function collectRows(rows, encoding, done) {","  /* jshint validthis:true */","  for (var i = 0; i &lt; rows.length; i++) {","    this.rows.push(rows[i]);","  }","  done();","}","","function collectLobRows(rows, encoding, done) {","  /* jshint validthis:true */","  var self = this;","  var i = 0;","","  function handleRow(err) {","    if (err) {","      return done(err);","    }","    // next row","    i += 1;","    next();","  }","","  function next() {","    if (i === rows.length) {","      return done(null, rows);","    }","    util.setImmediate(collectLobRow.bind(self, rows[i], handleRow));","  }","  next();","}","","function collectLobRow(row, done) {","  /* jshint validthis:true */","  var self = this;","  var i = 0;","","  function receiveLob(err, buffer) {","    if (err) {","      return done(err);","    }","    // update lob","    row[self.columns[i]] = buffer;","    // next lob","    i += 1;","    next();","  }","","  function next() {","    if (i === self.columns.length) {","      self.rows.push(row);","      return done(null);","    }","    var lob = row[self.columns[i]];","    if (lob === null || Buffer.isBuffer(lob)) {","      return receiveLob(null, lob);","    }","    lob.read(receiveLob);","  }","  next();","}"];
