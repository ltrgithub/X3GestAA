/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['protocol/ResultSetTransform.js']) {
  _$jscoverage['protocol/ResultSetTransform.js'] = [];
  _$jscoverage['protocol/ResultSetTransform.js'][14] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][16] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][17] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][18] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][20] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][22] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][24] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][25] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][27] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][28] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][29] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][30] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][31] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][32] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][34] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][37] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][38] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][39] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][40] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][43] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][46] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][48] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][49] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][50] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][51] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][52] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][54] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][55] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][56] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][57] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][58] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][61] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][63] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][64] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][66] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][67] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][69] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][71] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][74] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][75] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][76] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][78] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][79] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][82] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][83] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][84] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][85] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][88] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][91] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][96] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][97] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][98] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][99] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][103] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][104] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][105] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][106] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][110] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][112] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][113] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][115] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][116] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][117] = 0;
  _$jscoverage['protocol/ResultSetTransform.js'][119] = 0;
}
_$jscoverage['protocol/ResultSetTransform.js'][14]++;
"use strict";
_$jscoverage['protocol/ResultSetTransform.js'][16]++;
var util = require("../util");
_$jscoverage['protocol/ResultSetTransform.js'][17]++;
var Transform = util.stream.Transform;
_$jscoverage['protocol/ResultSetTransform.js'][18]++;
var Reader = require("./Reader");
_$jscoverage['protocol/ResultSetTransform.js'][20]++;
module.exports = ResultSetTransform;
_$jscoverage['protocol/ResultSetTransform.js'][22]++;
util.inherits(ResultSetTransform, Transform);
_$jscoverage['protocol/ResultSetTransform.js'][24]++;
function ResultSetTransform(parseRow, rs, options) {
  _$jscoverage['protocol/ResultSetTransform.js'][25]++;
  options = options || {};
  _$jscoverage['protocol/ResultSetTransform.js'][27]++;
  this._parseRow = parseRow;
  _$jscoverage['protocol/ResultSetTransform.js'][28]++;
  this._rs = rs;
  _$jscoverage['protocol/ResultSetTransform.js'][29]++;
  this._threshold = options.threshold || ResultSetTransform.DEFAULT_TRESHHOLD;
  _$jscoverage['protocol/ResultSetTransform.js'][30]++;
  this._arrayMode = normalizeArrayMode(options.arrayMode);
  _$jscoverage['protocol/ResultSetTransform.js'][31]++;
  if (this._arrayMode) {
    _$jscoverage['protocol/ResultSetTransform.js'][32]++;
    this._objectBuffer = new Collector(this, this._arrayMode);
  }
  else {
    _$jscoverage['protocol/ResultSetTransform.js'][34]++;
    this._objectBuffer = this;
  }
  _$jscoverage['protocol/ResultSetTransform.js'][37]++;
  options.objectMode = false;
  _$jscoverage['protocol/ResultSetTransform.js'][38]++;
  options.highWaterMark = options.highWaterMark || this._arrayMode? 4: 1024;
  _$jscoverage['protocol/ResultSetTransform.js'][39]++;
  Transform.call(this, options);
  _$jscoverage['protocol/ResultSetTransform.js'][40]++;
  this._readableState.objectMode = true;
}
_$jscoverage['protocol/ResultSetTransform.js'][43]++;
ResultSetTransform.DEFAULT_TRESHHOLD = 128;
_$jscoverage['protocol/ResultSetTransform.js'][46]++;
ResultSetTransform.prototype._transform = (function _transform(chunk, encoding, done) {
  _$jscoverage['protocol/ResultSetTransform.js'][48]++;
  var reader = new Reader(chunk, this._rs);
  _$jscoverage['protocol/ResultSetTransform.js'][49]++;
  var parseRow = this._parseRow.bind(reader);
  _$jscoverage['protocol/ResultSetTransform.js'][50]++;
  var objectBuffer = this._objectBuffer;
  _$jscoverage['protocol/ResultSetTransform.js'][51]++;
  var arrayMode = this._arrayMode;
  _$jscoverage['protocol/ResultSetTransform.js'][52]++;
  var threshold = this._threshold;
  _$jscoverage['protocol/ResultSetTransform.js'][54]++;
  function run() {
    _$jscoverage['protocol/ResultSetTransform.js'][55]++;
    var i = 0;
    _$jscoverage['protocol/ResultSetTransform.js'][56]++;
    try {
      _$jscoverage['protocol/ResultSetTransform.js'][57]++;
      while (reader.hasMore() && i++ < threshold) {
        _$jscoverage['protocol/ResultSetTransform.js'][58]++;
        objectBuffer.push(parseRow());
}
    }
    catch (err) {
      _$jscoverage['protocol/ResultSetTransform.js'][61]++;
      return done(err);
    }
    _$jscoverage['protocol/ResultSetTransform.js'][63]++;
    if (reader.hasMore()) {
      _$jscoverage['protocol/ResultSetTransform.js'][64]++;
      return util.setImmediate(run);
    }
    _$jscoverage['protocol/ResultSetTransform.js'][66]++;
    if (arrayMode === true) {
      _$jscoverage['protocol/ResultSetTransform.js'][67]++;
      objectBuffer.flush();
    }
    _$jscoverage['protocol/ResultSetTransform.js'][69]++;
    done();
}
  _$jscoverage['protocol/ResultSetTransform.js'][71]++;
  util.setImmediate(run);
});
_$jscoverage['protocol/ResultSetTransform.js'][74]++;
ResultSetTransform.prototype._flush = (function _flush(done) {
  _$jscoverage['protocol/ResultSetTransform.js'][75]++;
  if (this._arrayMode > 1) {
    _$jscoverage['protocol/ResultSetTransform.js'][76]++;
    this._objectBuffer.flush();
  }
  _$jscoverage['protocol/ResultSetTransform.js'][78]++;
  this.push(null);
  _$jscoverage['protocol/ResultSetTransform.js'][79]++;
  done();
});
_$jscoverage['protocol/ResultSetTransform.js'][82]++;
function Collector(readable, mode) {
  _$jscoverage['protocol/ResultSetTransform.js'][83]++;
  this.readable = readable;
  _$jscoverage['protocol/ResultSetTransform.js'][84]++;
  this.rows = [];
  _$jscoverage['protocol/ResultSetTransform.js'][85]++;
  this.flushLength = mode === true? -1: mode;
}
_$jscoverage['protocol/ResultSetTransform.js'][88]++;
Object.defineProperties(Collector.prototype, {empty: {get: (function isEmpty() {
  _$jscoverage['protocol/ResultSetTransform.js'][91]++;
  return ! this.rows.length;
})}});
_$jscoverage['protocol/ResultSetTransform.js'][96]++;
Collector.prototype.push = (function push(row) {
  _$jscoverage['protocol/ResultSetTransform.js'][97]++;
  this.rows.push(row);
  _$jscoverage['protocol/ResultSetTransform.js'][98]++;
  if (this.rows.length === this.flushLength) {
    _$jscoverage['protocol/ResultSetTransform.js'][99]++;
    this.flush();
  }
});
_$jscoverage['protocol/ResultSetTransform.js'][103]++;
Collector.prototype.flush = (function flush() {
  _$jscoverage['protocol/ResultSetTransform.js'][104]++;
  if (this.rows.length) {
    _$jscoverage['protocol/ResultSetTransform.js'][105]++;
    this.readable.push(this.rows);
    _$jscoverage['protocol/ResultSetTransform.js'][106]++;
    this.rows = [];
  }
});
_$jscoverage['protocol/ResultSetTransform.js'][110]++;
function normalizeArrayMode(mode) {
  _$jscoverage['protocol/ResultSetTransform.js'][112]++;
  if (util.isBoolean(mode)) {
    _$jscoverage['protocol/ResultSetTransform.js'][113]++;
    return mode;
  }
  _$jscoverage['protocol/ResultSetTransform.js'][115]++;
  mode = ~ ~ mode;
  _$jscoverage['protocol/ResultSetTransform.js'][116]++;
  if (mode > 1) {
    _$jscoverage['protocol/ResultSetTransform.js'][117]++;
    return mode;
  }
  _$jscoverage['protocol/ResultSetTransform.js'][119]++;
  return false;
}
_$jscoverage['protocol/ResultSetTransform.js'].source = ["// Copyright 2013 SAP AG.","//","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//","// http: //www.apache.org/licenses/LICENSE-2.0","//","// Unless required by applicable law or agreed to in writing,","// software distributed under the License is distributed on an","// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,","// either express or implied. See the License for the specific","// language governing permissions and limitations under the License.","'use strict';","","var util = require('../util');","var Transform = util.stream.Transform;","var Reader = require('./Reader');","","module.exports = ResultSetTransform;","","util.inherits(ResultSetTransform, Transform);","","function ResultSetTransform(parseRow, rs, options) {","  options = options || {};","  // private","  this._parseRow = parseRow;","  this._rs = rs;","  this._threshold = options.threshold || ResultSetTransform.DEFAULT_TRESHHOLD;","  this._arrayMode = normalizeArrayMode(options.arrayMode);","  if (this._arrayMode) {","    this._objectBuffer = new Collector(this, this._arrayMode);","  } else {","    this._objectBuffer = this;","  }","  // call Transform constructor","  options.objectMode = false;","  options.highWaterMark = options.highWaterMark || this._arrayMode ? 4 : 1024;","  Transform.call(this, options);","  this._readableState.objectMode = true;","}","","ResultSetTransform.DEFAULT_TRESHHOLD = 128;","","","ResultSetTransform.prototype._transform = function _transform(chunk, encoding,","  done) {","  var reader = new Reader(chunk, this._rs);","  var parseRow = this._parseRow.bind(reader);","  var objectBuffer = this._objectBuffer;","  var arrayMode = this._arrayMode;","  var threshold = this._threshold;","","  function run() {","    var i = 0;","    try {","      while (reader.hasMore() &amp;&amp; i++ &lt; threshold) {","        objectBuffer.push(parseRow());","      }","    } catch (err) {","      return done(err);","    }","    if (reader.hasMore()) {","      return util.setImmediate(run);","    }","    if (arrayMode === true) {","      objectBuffer.flush();","    }","    done();","  }","  util.setImmediate(run);","};","","ResultSetTransform.prototype._flush = function _flush(done) {","  if (this._arrayMode &gt; 1) {","    this._objectBuffer.flush();","  }","  this.push(null);","  done();","};","","function Collector(readable, mode) {","  this.readable = readable;","  this.rows = [];","  this.flushLength = mode === true ? -1 : mode;","}","","Object.defineProperties(Collector.prototype, {","  empty: {","    get: function isEmpty() {","      return !this.rows.length;","    }","  }","});","","Collector.prototype.push = function push(row) {","  this.rows.push(row);","  if (this.rows.length === this.flushLength) {","    this.flush();","  }","};","","Collector.prototype.flush = function flush() {","  if (this.rows.length) {","    this.readable.push(this.rows);","    this.rows = [];","  }","};","","function normalizeArrayMode(mode) {","  /* jshint bitwise:false */","  if (util.isBoolean(mode)) {","    return mode;","  }","  mode = ~~mode;","  if (mode &gt; 1) {","    return mode;","  }","  return false;","}"];
