/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['protocol/data/ReadLobReply.js']) {
  _$jscoverage['protocol/data/ReadLobReply.js'] = [];
  _$jscoverage['protocol/data/ReadLobReply.js'][14] = 0;
  _$jscoverage['protocol/data/ReadLobReply.js'][16] = 0;
  _$jscoverage['protocol/data/ReadLobReply.js'][17] = 0;
  _$jscoverage['protocol/data/ReadLobReply.js'][19] = 0;
  _$jscoverage['protocol/data/ReadLobReply.js'][20] = 0;
  _$jscoverage['protocol/data/ReadLobReply.js'][21] = 0;
  _$jscoverage['protocol/data/ReadLobReply.js'][23] = 0;
  _$jscoverage['protocol/data/ReadLobReply.js'][24] = 0;
  _$jscoverage['protocol/data/ReadLobReply.js'][25] = 0;
  _$jscoverage['protocol/data/ReadLobReply.js'][27] = 0;
  _$jscoverage['protocol/data/ReadLobReply.js'][28] = 0;
  _$jscoverage['protocol/data/ReadLobReply.js'][29] = 0;
  _$jscoverage['protocol/data/ReadLobReply.js'][30] = 0;
  _$jscoverage['protocol/data/ReadLobReply.js'][31] = 0;
  _$jscoverage['protocol/data/ReadLobReply.js'][32] = 0;
  _$jscoverage['protocol/data/ReadLobReply.js'][33] = 0;
  _$jscoverage['protocol/data/ReadLobReply.js'][34] = 0;
  _$jscoverage['protocol/data/ReadLobReply.js'][35] = 0;
  _$jscoverage['protocol/data/ReadLobReply.js'][38] = 0;
  _$jscoverage['protocol/data/ReadLobReply.js'][39] = 0;
  _$jscoverage['protocol/data/ReadLobReply.js'][42] = 0;
  _$jscoverage['protocol/data/ReadLobReply.js'][44] = 0;
  _$jscoverage['protocol/data/ReadLobReply.js'][47] = 0;
  _$jscoverage['protocol/data/ReadLobReply.js'][48] = 0;
  _$jscoverage['protocol/data/ReadLobReply.js'][49] = 0;
  _$jscoverage['protocol/data/ReadLobReply.js'][50] = 0;
  _$jscoverage['protocol/data/ReadLobReply.js'][53] = 0;
  _$jscoverage['protocol/data/ReadLobReply.js'][57] = 0;
  _$jscoverage['protocol/data/ReadLobReply.js'][63] = 0;
  _$jscoverage['protocol/data/ReadLobReply.js'][69] = 0;
}
_$jscoverage['protocol/data/ReadLobReply.js'][14]++;
"use strict";
_$jscoverage['protocol/data/ReadLobReply.js'][16]++;
var common = require("../common");
_$jscoverage['protocol/data/ReadLobReply.js'][17]++;
var LobOptions = common.LobOptions;
_$jscoverage['protocol/data/ReadLobReply.js'][19]++;
exports.read = read;
_$jscoverage['protocol/data/ReadLobReply.js'][20]++;
exports.getByteLength = getByteLength;
_$jscoverage['protocol/data/ReadLobReply.js'][21]++;
exports.getArgumentCount = getArgumentCount;
_$jscoverage['protocol/data/ReadLobReply.js'][23]++;
function read(part) {
  _$jscoverage['protocol/data/ReadLobReply.js'][24]++;
  var offset = 0;
  _$jscoverage['protocol/data/ReadLobReply.js'][25]++;
  var buffer = part.buffer;
  _$jscoverage['protocol/data/ReadLobReply.js'][27]++;
  var locatorId = buffer.slice(offset, offset + 8);
  _$jscoverage['protocol/data/ReadLobReply.js'][28]++;
  offset += 8;
  _$jscoverage['protocol/data/ReadLobReply.js'][29]++;
  var options = buffer[offset];
  _$jscoverage['protocol/data/ReadLobReply.js'][30]++;
  offset += 1;
  _$jscoverage['protocol/data/ReadLobReply.js'][31]++;
  var length = buffer.readInt32LE(offset);
  _$jscoverage['protocol/data/ReadLobReply.js'][32]++;
  offset = 16;
  _$jscoverage['protocol/data/ReadLobReply.js'][33]++;
  var chunk = buffer.slice(offset, offset + length);
  _$jscoverage['protocol/data/ReadLobReply.js'][34]++;
  offset += length;
  _$jscoverage['protocol/data/ReadLobReply.js'][35]++;
  return new ReadLobReply(locatorId, options, chunk);
}
_$jscoverage['protocol/data/ReadLobReply.js'][38]++;
function getByteLength(chunk) {
  _$jscoverage['protocol/data/ReadLobReply.js'][39]++;
  return 16 + chunk.length;
}
_$jscoverage['protocol/data/ReadLobReply.js'][42]++;
function getArgumentCount(value) {
  _$jscoverage['protocol/data/ReadLobReply.js'][44]++;
  return 1;
}
_$jscoverage['protocol/data/ReadLobReply.js'][47]++;
function ReadLobReply(locatorId, options, chunk) {
  _$jscoverage['protocol/data/ReadLobReply.js'][48]++;
  this.locatorId = locatorId;
  _$jscoverage['protocol/data/ReadLobReply.js'][49]++;
  this.options = options;
  _$jscoverage['protocol/data/ReadLobReply.js'][50]++;
  this.chunk = chunk;
}
_$jscoverage['protocol/data/ReadLobReply.js'][53]++;
Object.defineProperties(ReadLobReply.prototype, {isNull: {get: (function isNull() {
  _$jscoverage['protocol/data/ReadLobReply.js'][57]++;
  return ! ! (this.options & LobOptions.NULL_INDICATOR);
})}, isDataIncluded: {get: (function isDataIncluded() {
  _$jscoverage['protocol/data/ReadLobReply.js'][63]++;
  return ! ! (this.options & LobOptions.DATA_INCLUDED);
})}, isLast: {get: (function isLast() {
  _$jscoverage['protocol/data/ReadLobReply.js'][69]++;
  return ! ! (this.options & LobOptions.LAST_DATA);
})}});
_$jscoverage['protocol/data/ReadLobReply.js'].source = ["// Copyright 2013 SAP AG.","//","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//","// http: //www.apache.org/licenses/LICENSE-2.0","//","// Unless required by applicable law or agreed to in writing,","// software distributed under the License is distributed on an","// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,","// either express or implied. See the License for the specific","// language governing permissions and limitations under the License.","'use strict';","","var common = require('../common');","var LobOptions = common.LobOptions;","","exports.read = read;","exports.getByteLength = getByteLength;","exports.getArgumentCount = getArgumentCount;","","function read(part) {","  var offset = 0;","  var buffer = part.buffer;","","  var locatorId = buffer.slice(offset, offset + 8);","  offset += 8;","  var options = buffer[offset];","  offset += 1;","  var length = buffer.readInt32LE(offset);","  offset = 16;","  var chunk = buffer.slice(offset, offset + length);","  offset += length;","  return new ReadLobReply(locatorId, options, chunk);","}","","function getByteLength(chunk) {","  return 16 + chunk.length;","}","","function getArgumentCount(value) {","  /* jshint unused:false */","  return 1;","}","","function ReadLobReply(locatorId, options, chunk) {","  this.locatorId = locatorId;","  this.options = options;","  this.chunk = chunk;","}","","Object.defineProperties(ReadLobReply.prototype, {","  isNull: {","    get: function isNull() {","      /* jshint bitwise:false */","      return !!(this.options &amp; LobOptions.NULL_INDICATOR);","    }","  },","  isDataIncluded: {","    get: function isDataIncluded() {","      /* jshint bitwise:false */","      return !!(this.options &amp; LobOptions.DATA_INCLUDED);","    }","  },","  isLast: {","    get: function isLast() {","      /* jshint bitwise:false */","      return !!(this.options &amp; LobOptions.LAST_DATA);","    }","  }","});"];
