/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['protocol/data/SqlError.js']) {
  _$jscoverage['protocol/data/SqlError.js'] = [];
  _$jscoverage['protocol/data/SqlError.js'][14] = 0;
  _$jscoverage['protocol/data/SqlError.js'][16] = 0;
  _$jscoverage['protocol/data/SqlError.js'][17] = 0;
  _$jscoverage['protocol/data/SqlError.js'][19] = 0;
  _$jscoverage['protocol/data/SqlError.js'][20] = 0;
  _$jscoverage['protocol/data/SqlError.js'][21] = 0;
  _$jscoverage['protocol/data/SqlError.js'][23] = 0;
  _$jscoverage['protocol/data/SqlError.js'][24] = 0;
  _$jscoverage['protocol/data/SqlError.js'][25] = 0;
  _$jscoverage['protocol/data/SqlError.js'][26] = 0;
  _$jscoverage['protocol/data/SqlError.js'][29] = 0;
  _$jscoverage['protocol/data/SqlError.js'][32] = 0;
  _$jscoverage['protocol/data/SqlError.js'][33] = 0;
  _$jscoverage['protocol/data/SqlError.js'][34] = 0;
  _$jscoverage['protocol/data/SqlError.js'][35] = 0;
  _$jscoverage['protocol/data/SqlError.js'][36] = 0;
  _$jscoverage['protocol/data/SqlError.js'][37] = 0;
  _$jscoverage['protocol/data/SqlError.js'][38] = 0;
  _$jscoverage['protocol/data/SqlError.js'][39] = 0;
  _$jscoverage['protocol/data/SqlError.js'][40] = 0;
  _$jscoverage['protocol/data/SqlError.js'][41] = 0;
  _$jscoverage['protocol/data/SqlError.js'][43] = 0;
  _$jscoverage['protocol/data/SqlError.js'][44] = 0;
  _$jscoverage['protocol/data/SqlError.js'][45] = 0;
  _$jscoverage['protocol/data/SqlError.js'][46] = 0;
  _$jscoverage['protocol/data/SqlError.js'][47] = 0;
  _$jscoverage['protocol/data/SqlError.js'][48] = 0;
  _$jscoverage['protocol/data/SqlError.js'][51] = 0;
  _$jscoverage['protocol/data/SqlError.js'][52] = 0;
  _$jscoverage['protocol/data/SqlError.js'][55] = 0;
  _$jscoverage['protocol/data/SqlError.js'][57] = 0;
  _$jscoverage['protocol/data/SqlError.js'][60] = 0;
  _$jscoverage['protocol/data/SqlError.js'][62] = 0;
  _$jscoverage['protocol/data/SqlError.js'][63] = 0;
  _$jscoverage['protocol/data/SqlError.js'][65] = 0;
  _$jscoverage['protocol/data/SqlError.js'][66] = 0;
  _$jscoverage['protocol/data/SqlError.js'][67] = 0;
  _$jscoverage['protocol/data/SqlError.js'][68] = 0;
  _$jscoverage['protocol/data/SqlError.js'][69] = 0;
}
_$jscoverage['protocol/data/SqlError.js'][14]++;
"use strict";
_$jscoverage['protocol/data/SqlError.js'][16]++;
var util = require("../../util");
_$jscoverage['protocol/data/SqlError.js'][17]++;
var ErrorLevel = require("../common/ErrorLevel");
_$jscoverage['protocol/data/SqlError.js'][19]++;
exports.read = read;
_$jscoverage['protocol/data/SqlError.js'][20]++;
exports.getByteLength = getByteLength;
_$jscoverage['protocol/data/SqlError.js'][21]++;
exports.getArgumentCount = getArgumentCount;
_$jscoverage['protocol/data/SqlError.js'][23]++;
function read(part) {
  _$jscoverage['protocol/data/SqlError.js'][24]++;
  var err = new SqlError();
  _$jscoverage['protocol/data/SqlError.js'][25]++;
  _read.call(err, part.buffer, 0);
  _$jscoverage['protocol/data/SqlError.js'][26]++;
  return err;
}
_$jscoverage['protocol/data/SqlError.js'][29]++;
function _read(buffer, offset) {
  _$jscoverage['protocol/data/SqlError.js'][32]++;
  offset = offset || 0;
  _$jscoverage['protocol/data/SqlError.js'][33]++;
  this.code = buffer.readInt32LE(offset);
  _$jscoverage['protocol/data/SqlError.js'][34]++;
  offset += 4;
  _$jscoverage['protocol/data/SqlError.js'][35]++;
  this.position = buffer.readInt32LE(offset);
  _$jscoverage['protocol/data/SqlError.js'][36]++;
  offset += 4;
  _$jscoverage['protocol/data/SqlError.js'][37]++;
  var length = buffer.readInt32LE(offset);
  _$jscoverage['protocol/data/SqlError.js'][38]++;
  offset += 4;
  _$jscoverage['protocol/data/SqlError.js'][39]++;
  this.level = buffer.readInt8(offset);
  _$jscoverage['protocol/data/SqlError.js'][40]++;
  if (this.level === ErrorLevel.FATAL) {
    _$jscoverage['protocol/data/SqlError.js'][41]++;
    this.fatal = true;
  }
  _$jscoverage['protocol/data/SqlError.js'][43]++;
  offset += 1;
  _$jscoverage['protocol/data/SqlError.js'][44]++;
  this.sqlState = buffer.toString("ascii", offset, offset + 5);
  _$jscoverage['protocol/data/SqlError.js'][45]++;
  offset += 5;
  _$jscoverage['protocol/data/SqlError.js'][46]++;
  this.message = buffer.toString("utf-8", offset, offset + length);
  _$jscoverage['protocol/data/SqlError.js'][47]++;
  offset += util.alignLength(length, 8);
  _$jscoverage['protocol/data/SqlError.js'][48]++;
  return offset;
}
_$jscoverage['protocol/data/SqlError.js'][51]++;
function getByteLength(err) {
  _$jscoverage['protocol/data/SqlError.js'][52]++;
  return 18 + Buffer.byteLength(err.message);
}
_$jscoverage['protocol/data/SqlError.js'][55]++;
function getArgumentCount(err) {
  _$jscoverage['protocol/data/SqlError.js'][57]++;
  return 1;
}
_$jscoverage['protocol/data/SqlError.js'][60]++;
util.inherits(SqlError, Error);
_$jscoverage['protocol/data/SqlError.js'][62]++;
function SqlError() {
  _$jscoverage['protocol/data/SqlError.js'][63]++;
  Error.call(this);
  _$jscoverage['protocol/data/SqlError.js'][65]++;
  this.message = undefined;
  _$jscoverage['protocol/data/SqlError.js'][66]++;
  this.code = undefined;
  _$jscoverage['protocol/data/SqlError.js'][67]++;
  this.sqlState = undefined;
  _$jscoverage['protocol/data/SqlError.js'][68]++;
  this.level = undefined;
  _$jscoverage['protocol/data/SqlError.js'][69]++;
  this.position = undefined;
}
_$jscoverage['protocol/data/SqlError.js'].source = ["// Copyright 2013 SAP AG.","//","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//","// http: //www.apache.org/licenses/LICENSE-2.0","//","// Unless required by applicable law or agreed to in writing,","// software distributed under the License is distributed on an","// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,","// either express or implied. See the License for the specific","// language governing permissions and limitations under the License.","'use strict';","","var util = require('../../util');","var ErrorLevel = require('../common/ErrorLevel');","","exports.read = read;","exports.getByteLength = getByteLength;","exports.getArgumentCount = getArgumentCount;","","function read(part) {","  var err = new SqlError();","  _read.call(err, part.buffer, 0);","  return err;","}","","function _read(buffer, offset) {","  /* jshint validthis:true */","","  offset = offset || 0;","  this.code = buffer.readInt32LE(offset);","  offset += 4;","  this.position = buffer.readInt32LE(offset);","  offset += 4;","  var length = buffer.readInt32LE(offset);","  offset += 4;","  this.level = buffer.readInt8(offset);","  if (this.level === ErrorLevel.FATAL) {","    this.fatal = true;","  }","  offset += 1;","  this.sqlState = buffer.toString('ascii', offset, offset + 5);","  offset += 5;","  this.message = buffer.toString('utf-8', offset, offset + length);","  offset += util.alignLength(length, 8);","  return offset;","}","","function getByteLength(err) {","  return 18 + Buffer.byteLength(err.message);","}","","function getArgumentCount(err) {","  /* jshint unused:false */","  return 1;","}","","util.inherits(SqlError, Error);","","function SqlError() {","  Error.call(this);","","  this.message = undefined;","  this.code = undefined;","  this.sqlState = undefined;","  this.level = undefined;","  this.position = undefined;","}"];
