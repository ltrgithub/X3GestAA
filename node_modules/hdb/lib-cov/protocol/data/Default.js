/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['protocol/data/Default.js']) {
  _$jscoverage['protocol/data/Default.js'] = [];
  _$jscoverage['protocol/data/Default.js'][14] = 0;
  _$jscoverage['protocol/data/Default.js'][16] = 0;
  _$jscoverage['protocol/data/Default.js'][18] = 0;
  _$jscoverage['protocol/data/Default.js'][19] = 0;
  _$jscoverage['protocol/data/Default.js'][20] = 0;
  _$jscoverage['protocol/data/Default.js'][21] = 0;
  _$jscoverage['protocol/data/Default.js'][23] = 0;
  _$jscoverage['protocol/data/Default.js'][24] = 0;
  _$jscoverage['protocol/data/Default.js'][27] = 0;
  _$jscoverage['protocol/data/Default.js'][30] = 0;
  _$jscoverage['protocol/data/Default.js'][31] = 0;
  _$jscoverage['protocol/data/Default.js'][32] = 0;
  _$jscoverage['protocol/data/Default.js'][35] = 0;
  _$jscoverage['protocol/data/Default.js'][36] = 0;
  _$jscoverage['protocol/data/Default.js'][39] = 0;
  _$jscoverage['protocol/data/Default.js'][41] = 0;
}
_$jscoverage['protocol/data/Default.js'][14]++;
"use strict";
_$jscoverage['protocol/data/Default.js'][16]++;
var util = require("../../util");
_$jscoverage['protocol/data/Default.js'][18]++;
exports.read = read;
_$jscoverage['protocol/data/Default.js'][19]++;
exports.write = write;
_$jscoverage['protocol/data/Default.js'][20]++;
exports.getByteLength = getByteLength;
_$jscoverage['protocol/data/Default.js'][21]++;
exports.getArgumentCount = getArgumentCount;
_$jscoverage['protocol/data/Default.js'][23]++;
function read(part) {
  _$jscoverage['protocol/data/Default.js'][24]++;
  return part;
}
_$jscoverage['protocol/data/Default.js'][27]++;
function write(part, sourcePart) {
  _$jscoverage['protocol/data/Default.js'][30]++;
  sourcePart = sourcePart || this;
  _$jscoverage['protocol/data/Default.js'][31]++;
  part = part || {};
  _$jscoverage['protocol/data/Default.js'][32]++;
  return util.extend(part, sourcePart);
}
_$jscoverage['protocol/data/Default.js'][35]++;
function getByteLength(part) {
  _$jscoverage['protocol/data/Default.js'][36]++;
  return part.length;
}
_$jscoverage['protocol/data/Default.js'][39]++;
function getArgumentCount(part) {
  _$jscoverage['protocol/data/Default.js'][41]++;
  return part.argumentCount;
}
_$jscoverage['protocol/data/Default.js'].source = ["// Copyright 2013 SAP AG.","//","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//","// http: //www.apache.org/licenses/LICENSE-2.0","//","// Unless required by applicable law or agreed to in writing,","// software distributed under the License is distributed on an","// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,","// either express or implied. See the License for the specific","// language governing permissions and limitations under the License.","'use strict';","","var util = require('../../util');","","exports.read = read;","exports.write = write;","exports.getByteLength = getByteLength;","exports.getArgumentCount = getArgumentCount;","","function read(part) {","  return part;","}","","function write(part, sourcePart) {","  /* jshint validthis:true */","","  sourcePart = sourcePart || this;","  part = part || {};","  return util.extend(part, sourcePart);","}","","function getByteLength(part) {","  return part.length;","}","","function getArgumentCount(part) {","  /* jshint unused:false */","  return part.argumentCount;","}"];
