/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['protocol/data/MultilineOptions.js']) {
  _$jscoverage['protocol/data/MultilineOptions.js'] = [];
  _$jscoverage['protocol/data/MultilineOptions.js'][14] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][16] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][17] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][18] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][19] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][21] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][22] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][23] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][24] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][26] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][27] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][28] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][29] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][30] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][31] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][32] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][33] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][34] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][35] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][36] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][38] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][41] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][44] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][45] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][46] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][47] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][48] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][49] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][50] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][51] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][52] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][53] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][54] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][55] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][57] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][58] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][59] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][62] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][63] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][65] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][66] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][68] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][71] = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][73] = 0;
}
_$jscoverage['protocol/data/MultilineOptions.js'][14]++;
"use strict";
_$jscoverage['protocol/data/MultilineOptions.js'][16]++;
var opts = require("./Options");
_$jscoverage['protocol/data/MultilineOptions.js'][17]++;
var getByteLengthOfOptions = opts.getByteLength;
_$jscoverage['protocol/data/MultilineOptions.js'][18]++;
var writeOptions = opts.write;
_$jscoverage['protocol/data/MultilineOptions.js'][19]++;
var readOptions = opts._read;
_$jscoverage['protocol/data/MultilineOptions.js'][21]++;
exports.read = read;
_$jscoverage['protocol/data/MultilineOptions.js'][22]++;
exports.write = write;
_$jscoverage['protocol/data/MultilineOptions.js'][23]++;
exports.getByteLength = getByteLength;
_$jscoverage['protocol/data/MultilineOptions.js'][24]++;
exports.getArgumentCount = getArgumentCount;
_$jscoverage['protocol/data/MultilineOptions.js'][26]++;
function read(part) {
  _$jscoverage['protocol/data/MultilineOptions.js'][27]++;
  var offset = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][28]++;
  var buffer = part.buffer;
  _$jscoverage['protocol/data/MultilineOptions.js'][29]++;
  var lines = [];
  _$jscoverage['protocol/data/MultilineOptions.js'][30]++;
  var numberOfOptions, options;
  _$jscoverage['protocol/data/MultilineOptions.js'][31]++;
  for (var i = 0; i < part.argumentCount; i++) {
    _$jscoverage['protocol/data/MultilineOptions.js'][32]++;
    numberOfOptions = buffer.readInt16LE(offset);
    _$jscoverage['protocol/data/MultilineOptions.js'][33]++;
    offset += 2;
    _$jscoverage['protocol/data/MultilineOptions.js'][34]++;
    options = new Array(numberOfOptions);
    _$jscoverage['protocol/data/MultilineOptions.js'][35]++;
    offset = readOptions.call(options, buffer, offset);
    _$jscoverage['protocol/data/MultilineOptions.js'][36]++;
    lines.push(options);
}
  _$jscoverage['protocol/data/MultilineOptions.js'][38]++;
  return lines;
}
_$jscoverage['protocol/data/MultilineOptions.js'][41]++;
function write(part, lines) {
  _$jscoverage['protocol/data/MultilineOptions.js'][44]++;
  var offset = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][45]++;
  lines = lines || this;
  _$jscoverage['protocol/data/MultilineOptions.js'][46]++;
  part = part || {};
  _$jscoverage['protocol/data/MultilineOptions.js'][47]++;
  var byteLength = getByteLength(lines);
  _$jscoverage['protocol/data/MultilineOptions.js'][48]++;
  var buffer = new Buffer(byteLength);
  _$jscoverage['protocol/data/MultilineOptions.js'][49]++;
  var options;
  _$jscoverage['protocol/data/MultilineOptions.js'][50]++;
  for (var i = 0; i < lines.length; i++) {
    _$jscoverage['protocol/data/MultilineOptions.js'][51]++;
    options = writeOptions({}, lines[i]);
    _$jscoverage['protocol/data/MultilineOptions.js'][52]++;
    buffer.writeInt16LE(options.argumentCount, offset);
    _$jscoverage['protocol/data/MultilineOptions.js'][53]++;
    offset += 2;
    _$jscoverage['protocol/data/MultilineOptions.js'][54]++;
    options.buffer.copy(buffer, offset);
    _$jscoverage['protocol/data/MultilineOptions.js'][55]++;
    offset += options.buffer.length;
}
  _$jscoverage['protocol/data/MultilineOptions.js'][57]++;
  part.argumentCount = getArgumentCount(lines);
  _$jscoverage['protocol/data/MultilineOptions.js'][58]++;
  part.buffer = buffer;
  _$jscoverage['protocol/data/MultilineOptions.js'][59]++;
  return part;
}
_$jscoverage['protocol/data/MultilineOptions.js'][62]++;
function getByteLength(lines) {
  _$jscoverage['protocol/data/MultilineOptions.js'][63]++;
  var byteLength = 0;
  _$jscoverage['protocol/data/MultilineOptions.js'][65]++;
  for (var i = 0; i < lines.length; i++) {
    _$jscoverage['protocol/data/MultilineOptions.js'][66]++;
    byteLength += 2 + getByteLengthOfOptions(lines[i]);
}
  _$jscoverage['protocol/data/MultilineOptions.js'][68]++;
  return byteLength;
}
_$jscoverage['protocol/data/MultilineOptions.js'][71]++;
function getArgumentCount(lines) {
  _$jscoverage['protocol/data/MultilineOptions.js'][73]++;
  return lines.length;
}
_$jscoverage['protocol/data/MultilineOptions.js'].source = ["// Copyright 2013 SAP AG.","//","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//","// http: //www.apache.org/licenses/LICENSE-2.0","//","// Unless required by applicable law or agreed to in writing,","// software distributed under the License is distributed on an","// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,","// either express or implied. See the License for the specific","// language governing permissions and limitations under the License.","'use strict';","","var opts = require('./Options');","var getByteLengthOfOptions = opts.getByteLength;","var writeOptions = opts.write;","var readOptions = opts._read;","","exports.read = read;","exports.write = write;","exports.getByteLength = getByteLength;","exports.getArgumentCount = getArgumentCount;","","function read(part) {","  var offset = 0;","  var buffer = part.buffer;","  var lines = [];","  var numberOfOptions, options;","  for (var i = 0; i &lt; part.argumentCount; i++) {","    numberOfOptions = buffer.readInt16LE(offset);","    offset += 2;","    options = new Array(numberOfOptions);","    offset = readOptions.call(options, buffer, offset);","    lines.push(options);","  }","  return lines;","}","","function write(part, lines) {","  /* jshint validthis:true */","","  var offset = 0;","  lines = lines || this;","  part = part || {};","  var byteLength = getByteLength(lines);","  var buffer = new Buffer(byteLength);","  var options;","  for (var i = 0; i &lt; lines.length; i++) {","    options = writeOptions({}, lines[i]);","    buffer.writeInt16LE(options.argumentCount, offset);","    offset += 2;","    options.buffer.copy(buffer, offset);","    offset += options.buffer.length;","  }","  part.argumentCount = getArgumentCount(lines);","  part.buffer = buffer;","  return part;","}","","function getByteLength(lines) {","  var byteLength = 0;","","  for (var i = 0; i &lt; lines.length; i++) {","    byteLength += 2 + getByteLengthOfOptions(lines[i]);","  }","  return byteLength;","}","","function getArgumentCount(lines) {","  /* jshint unused:false */","  return lines.length;","}"];
