/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['protocol/data/ReadLobRequest.js']) {
  _$jscoverage['protocol/data/ReadLobRequest.js'] = [];
  _$jscoverage['protocol/data/ReadLobRequest.js'][14] = 0;
  _$jscoverage['protocol/data/ReadLobRequest.js'][16] = 0;
  _$jscoverage['protocol/data/ReadLobRequest.js'][17] = 0;
  _$jscoverage['protocol/data/ReadLobRequest.js'][19] = 0;
  _$jscoverage['protocol/data/ReadLobRequest.js'][21] = 0;
  _$jscoverage['protocol/data/ReadLobRequest.js'][22] = 0;
  _$jscoverage['protocol/data/ReadLobRequest.js'][23] = 0;
  _$jscoverage['protocol/data/ReadLobRequest.js'][24] = 0;
  _$jscoverage['protocol/data/ReadLobRequest.js'][26] = 0;
  _$jscoverage['protocol/data/ReadLobRequest.js'][29] = 0;
  _$jscoverage['protocol/data/ReadLobRequest.js'][30] = 0;
  _$jscoverage['protocol/data/ReadLobRequest.js'][31] = 0;
  _$jscoverage['protocol/data/ReadLobRequest.js'][33] = 0;
  _$jscoverage['protocol/data/ReadLobRequest.js'][34] = 0;
  _$jscoverage['protocol/data/ReadLobRequest.js'][35] = 0;
  _$jscoverage['protocol/data/ReadLobRequest.js'][37] = 0;
  _$jscoverage['protocol/data/ReadLobRequest.js'][39] = 0;
  _$jscoverage['protocol/data/ReadLobRequest.js'][40] = 0;
  _$jscoverage['protocol/data/ReadLobRequest.js'][41] = 0;
  _$jscoverage['protocol/data/ReadLobRequest.js'][42] = 0;
  _$jscoverage['protocol/data/ReadLobRequest.js'][43] = 0;
  _$jscoverage['protocol/data/ReadLobRequest.js'][44] = 0;
  _$jscoverage['protocol/data/ReadLobRequest.js'][45] = 0;
  _$jscoverage['protocol/data/ReadLobRequest.js'][46] = 0;
  _$jscoverage['protocol/data/ReadLobRequest.js'][47] = 0;
  _$jscoverage['protocol/data/ReadLobRequest.js'][50] = 0;
  _$jscoverage['protocol/data/ReadLobRequest.js'][51] = 0;
  _$jscoverage['protocol/data/ReadLobRequest.js'][52] = 0;
  _$jscoverage['protocol/data/ReadLobRequest.js'][53] = 0;
  _$jscoverage['protocol/data/ReadLobRequest.js'][54] = 0;
  _$jscoverage['protocol/data/ReadLobRequest.js'][61] = 0;
  _$jscoverage['protocol/data/ReadLobRequest.js'][63] = 0;
  _$jscoverage['protocol/data/ReadLobRequest.js'][66] = 0;
  _$jscoverage['protocol/data/ReadLobRequest.js'][68] = 0;
}
_$jscoverage['protocol/data/ReadLobRequest.js'][14]++;
"use strict";
_$jscoverage['protocol/data/ReadLobRequest.js'][16]++;
var util = require("../../util");
_$jscoverage['protocol/data/ReadLobRequest.js'][17]++;
var bignum = util.bignum;
_$jscoverage['protocol/data/ReadLobRequest.js'][19]++;
var READ_LOB_REQUEST_LENGTH = 24;
_$jscoverage['protocol/data/ReadLobRequest.js'][21]++;
exports.write = write;
_$jscoverage['protocol/data/ReadLobRequest.js'][22]++;
exports.read = read;
_$jscoverage['protocol/data/ReadLobRequest.js'][23]++;
exports.getByteLength = getByteLength;
_$jscoverage['protocol/data/ReadLobRequest.js'][24]++;
exports.getArgumentCount = getArgumentCount;
_$jscoverage['protocol/data/ReadLobRequest.js'][26]++;
function write(part, req) {
  _$jscoverage['protocol/data/ReadLobRequest.js'][29]++;
  var offset = 0;
  _$jscoverage['protocol/data/ReadLobRequest.js'][30]++;
  part = part || {};
  _$jscoverage['protocol/data/ReadLobRequest.js'][31]++;
  req = req || this;
  _$jscoverage['protocol/data/ReadLobRequest.js'][33]++;
  var buffer = new Buffer(READ_LOB_REQUEST_LENGTH);
  _$jscoverage['protocol/data/ReadLobRequest.js'][34]++;
  if (Buffer.isBuffer(req.locatorId)) {
    _$jscoverage['protocol/data/ReadLobRequest.js'][35]++;
    req.locatorId.copy(buffer, offset, 0, 8);
  }
  else {
    _$jscoverage['protocol/data/ReadLobRequest.js'][37]++;
    bignum.writeInt64LE(buffer, req.locatorId, offset);
  }
  _$jscoverage['protocol/data/ReadLobRequest.js'][39]++;
  offset += 8;
  _$jscoverage['protocol/data/ReadLobRequest.js'][40]++;
  bignum.writeInt64LE(buffer, req.offset, offset);
  _$jscoverage['protocol/data/ReadLobRequest.js'][41]++;
  offset += 8;
  _$jscoverage['protocol/data/ReadLobRequest.js'][42]++;
  buffer.writeInt32LE(req.length, offset);
  _$jscoverage['protocol/data/ReadLobRequest.js'][43]++;
  offset += 4;
  _$jscoverage['protocol/data/ReadLobRequest.js'][44]++;
  buffer.fill(0, offset);
  _$jscoverage['protocol/data/ReadLobRequest.js'][45]++;
  part.argumentCount = getArgumentCount(req);
  _$jscoverage['protocol/data/ReadLobRequest.js'][46]++;
  part.buffer = buffer;
  _$jscoverage['protocol/data/ReadLobRequest.js'][47]++;
  return part;
}
_$jscoverage['protocol/data/ReadLobRequest.js'][50]++;
function read(part) {
  _$jscoverage['protocol/data/ReadLobRequest.js'][51]++;
  var buffer = part.buffer;
  _$jscoverage['protocol/data/ReadLobRequest.js'][52]++;
  var locatorId = new Buffer(8);
  _$jscoverage['protocol/data/ReadLobRequest.js'][53]++;
  buffer.copy(locatorId, 0);
  _$jscoverage['protocol/data/ReadLobRequest.js'][54]++;
  return ({locatorId: locatorId, offset: bignum.readInt64LE(buffer, 8), length: buffer.readInt32LE(16)});
}
_$jscoverage['protocol/data/ReadLobRequest.js'][61]++;
function getByteLength(req) {
  _$jscoverage['protocol/data/ReadLobRequest.js'][63]++;
  return 24;
}
_$jscoverage['protocol/data/ReadLobRequest.js'][66]++;
function getArgumentCount(req) {
  _$jscoverage['protocol/data/ReadLobRequest.js'][68]++;
  return 1;
}
_$jscoverage['protocol/data/ReadLobRequest.js'].source = ["// Copyright 2013 SAP AG.","//","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//","// http: //www.apache.org/licenses/LICENSE-2.0","//","// Unless required by applicable law or agreed to in writing,","// software distributed under the License is distributed on an","// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,","// either express or implied. See the License for the specific","// language governing permissions and limitations under the License.","'use strict';","","var util = require('../../util');","var bignum = util.bignum;","","var READ_LOB_REQUEST_LENGTH = 24;","","exports.write = write;","exports.read = read;","exports.getByteLength = getByteLength;","exports.getArgumentCount = getArgumentCount;","","function write(part, req) {","  /* jshint validthis:true */","","  var offset = 0;","  part = part || {};","  req = req || this;","","  var buffer = new Buffer(READ_LOB_REQUEST_LENGTH);","  if (Buffer.isBuffer(req.locatorId)) {","    req.locatorId.copy(buffer, offset, 0, 8);","  } else {","    bignum.writeInt64LE(buffer, req.locatorId, offset);","  }","  offset += 8;","  bignum.writeInt64LE(buffer, req.offset, offset);","  offset += 8;","  buffer.writeInt32LE(req.length, offset);","  offset += 4;","  buffer.fill(0x00, offset);","  part.argumentCount = getArgumentCount(req);","  part.buffer = buffer;","  return part;","}","","function read(part) {","  var buffer = part.buffer;","  var locatorId = new Buffer(8);","  buffer.copy(locatorId, 0);","  return {","    locatorId: locatorId,","    offset: bignum.readInt64LE(buffer, 8),","    length: buffer.readInt32LE(16)","  };","}","","function getByteLength(req) {","  /* jshint unused:false */","  return 24;","}","","function getArgumentCount(req) {","  /* jshint unused:false */","  return 1;","}"];
