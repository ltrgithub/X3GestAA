/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['protocol/data/ResultSetMetadata.js']) {
  _$jscoverage['protocol/data/ResultSetMetadata.js'] = [];
  _$jscoverage['protocol/data/ResultSetMetadata.js'][14] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][16] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][17] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][18] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][19] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][20] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][22] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][23] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][25] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][26] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][27] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][28] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][29] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][30] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][31] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][33] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][36] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][38] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][41] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][45] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][46] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][52] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][54] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][55] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][56] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][57] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][58] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][60] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][61] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][62] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][63] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][66] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][67] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][70] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][71] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][72] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][73] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][74] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][75] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][76] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][77] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][78] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][81] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][83] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][86] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][88] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][91] = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][93] = 0;
}
_$jscoverage['protocol/data/ResultSetMetadata.js'][14]++;
"use strict";
_$jscoverage['protocol/data/ResultSetMetadata.js'][16]++;
var common = require("../common");
_$jscoverage['protocol/data/ResultSetMetadata.js'][17]++;
var ParameterMode = common.ParameterMode;
_$jscoverage['protocol/data/ResultSetMetadata.js'][18]++;
var READONLY = ParameterMode.READONLY;
_$jscoverage['protocol/data/ResultSetMetadata.js'][19]++;
var AUTO_INCREMENT = ParameterMode.AUTO_INCREMENT;
_$jscoverage['protocol/data/ResultSetMetadata.js'][20]++;
var MANDATORY = ParameterMode.MANDATORY;
_$jscoverage['protocol/data/ResultSetMetadata.js'][22]++;
exports.read = read;
_$jscoverage['protocol/data/ResultSetMetadata.js'][23]++;
exports.getArgumentCount = getArgumentCount;
_$jscoverage['protocol/data/ResultSetMetadata.js'][25]++;
function read(part) {
  _$jscoverage['protocol/data/ResultSetMetadata.js'][26]++;
  var columns = new Array(part.argumentCount);
  _$jscoverage['protocol/data/ResultSetMetadata.js'][27]++;
  var offset = 0;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][28]++;
  var textOffset = columns.length * 24;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][29]++;
  for (var i = 0; i < columns.length; i++) {
    _$jscoverage['protocol/data/ResultSetMetadata.js'][30]++;
    columns[i] = readColumn(part.buffer, offset, textOffset);
    _$jscoverage['protocol/data/ResultSetMetadata.js'][31]++;
    offset += 24;
}
  _$jscoverage['protocol/data/ResultSetMetadata.js'][33]++;
  return columns;
}
_$jscoverage['protocol/data/ResultSetMetadata.js'][36]++;
function getArgumentCount(columns) {
  _$jscoverage['protocol/data/ResultSetMetadata.js'][38]++;
  return columns.length;
}
_$jscoverage['protocol/data/ResultSetMetadata.js'][41]++;
var COLUMN_NAME_PROPERTIES = ["tableName", "schemaName", "columnName", "columnDisplayName"];
_$jscoverage['protocol/data/ResultSetMetadata.js'][45]++;
function readColumn(buffer, offset, textOffset) {
  _$jscoverage['protocol/data/ResultSetMetadata.js'][46]++;
  var column = new Column(buffer.readInt8(offset), buffer.readInt8(offset + 1), buffer.readInt16LE(offset + 2), buffer.readInt16LE(offset + 4));
  _$jscoverage['protocol/data/ResultSetMetadata.js'][52]++;
  offset += 8;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][54]++;
  function readName(name) {
    _$jscoverage['protocol/data/ResultSetMetadata.js'][55]++;
    var start = buffer.readInt32LE(offset);
    _$jscoverage['protocol/data/ResultSetMetadata.js'][56]++;
    offset += 4;
    _$jscoverage['protocol/data/ResultSetMetadata.js'][57]++;
    if (start < 0) {
      _$jscoverage['protocol/data/ResultSetMetadata.js'][58]++;
      column[name] = undefined;
    }
    else {
      _$jscoverage['protocol/data/ResultSetMetadata.js'][60]++;
      start += textOffset;
      _$jscoverage['protocol/data/ResultSetMetadata.js'][61]++;
      var length = buffer.readUInt8(start);
      _$jscoverage['protocol/data/ResultSetMetadata.js'][62]++;
      start += 1;
      _$jscoverage['protocol/data/ResultSetMetadata.js'][63]++;
      column[name] = buffer.toString("utf-8", start, start + length);
    }
}
  _$jscoverage['protocol/data/ResultSetMetadata.js'][66]++;
  COLUMN_NAME_PROPERTIES.forEach(readName);
  _$jscoverage['protocol/data/ResultSetMetadata.js'][67]++;
  return column;
}
_$jscoverage['protocol/data/ResultSetMetadata.js'][70]++;
function Column(mode, dataType, fraction, length) {
  _$jscoverage['protocol/data/ResultSetMetadata.js'][71]++;
  this.mode = mode;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][72]++;
  this.dataType = dataType;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][73]++;
  this.fraction = fraction;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][74]++;
  this.length = length;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][75]++;
  this.tableName = undefined;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][76]++;
  this.schemaName = undefined;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][77]++;
  this.columnName = undefined;
  _$jscoverage['protocol/data/ResultSetMetadata.js'][78]++;
  this.columnDisplayName = undefined;
}
_$jscoverage['protocol/data/ResultSetMetadata.js'][81]++;
Column.prototype.isReadOnly = (function isReadOnly() {
  _$jscoverage['protocol/data/ResultSetMetadata.js'][83]++;
  return this.mode & READONLY? true: false;
});
_$jscoverage['protocol/data/ResultSetMetadata.js'][86]++;
Column.prototype.isMandatory = (function isMandatory() {
  _$jscoverage['protocol/data/ResultSetMetadata.js'][88]++;
  return this.mode & MANDATORY? true: false;
});
_$jscoverage['protocol/data/ResultSetMetadata.js'][91]++;
Column.prototype.isAutoIncrement = (function isAutoIncrement() {
  _$jscoverage['protocol/data/ResultSetMetadata.js'][93]++;
  return this.mode & AUTO_INCREMENT? true: false;
});
_$jscoverage['protocol/data/ResultSetMetadata.js'].source = ["// Copyright 2013 SAP AG.","//","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//","// http: //www.apache.org/licenses/LICENSE-2.0","//","// Unless required by applicable law or agreed to in writing,","// software distributed under the License is distributed on an","// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,","// either express or implied. See the License for the specific","// language governing permissions and limitations under the License.","'use strict';","","var common = require('../common');","var ParameterMode = common.ParameterMode;","var READONLY = ParameterMode.READONLY;","var AUTO_INCREMENT = ParameterMode.AUTO_INCREMENT;","var MANDATORY = ParameterMode.MANDATORY;","","exports.read = read;","exports.getArgumentCount = getArgumentCount;","","function read(part) {","  var columns = new Array(part.argumentCount);","  var offset = 0;","  var textOffset = columns.length * 24;","  for (var i = 0; i &lt; columns.length; i++) {","    columns[i] = readColumn(part.buffer, offset, textOffset);","    offset += 24;","  }","  return columns;","}","","function getArgumentCount(columns) {","  /* jshint unused:false */","  return columns.length;","}","","var COLUMN_NAME_PROPERTIES = [","  'tableName', 'schemaName', 'columnName', 'columnDisplayName'","];","","function readColumn(buffer, offset, textOffset) {","  var column = new Column(","    buffer.readInt8(offset),","    buffer.readInt8(offset + 1),","    buffer.readInt16LE(offset + 2),","    buffer.readInt16LE(offset + 4)","  );","  offset += 8;","","  function readName(name) {","    var start = buffer.readInt32LE(offset);","    offset += 4;","    if (start &lt; 0) {","      column[name] = undefined;","    } else {","      start += textOffset;","      var length = buffer.readUInt8(start);","      start += 1;","      column[name] = buffer.toString('utf-8', start, start + length);","    }","  }","  COLUMN_NAME_PROPERTIES.forEach(readName);","  return column;","}","","function Column(mode, dataType, fraction, length) {","  this.mode = mode;","  this.dataType = dataType;","  this.fraction = fraction;","  this.length = length;","  this.tableName = undefined;","  this.schemaName = undefined;","  this.columnName = undefined;","  this.columnDisplayName = undefined;","}","","Column.prototype.isReadOnly = function isReadOnly() {","  /* jshint bitwise:false */","  return this.mode &amp; READONLY ? true : false;","};","","Column.prototype.isMandatory = function isMandatory() {","  /* jshint bitwise:false */","  return this.mode &amp; MANDATORY ? true : false;","};","","Column.prototype.isAutoIncrement = function isAutoIncrement() {","  /* jshint bitwise:false */","  return this.mode &amp; AUTO_INCREMENT ? true : false;","};"];
