/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['protocol/data/Parameters.js']) {
  _$jscoverage['protocol/data/Parameters.js'] = [];
  _$jscoverage['protocol/data/Parameters.js'][14] = 0;
  _$jscoverage['protocol/data/Parameters.js'][16] = 0;
  _$jscoverage['protocol/data/Parameters.js'][17] = 0;
  _$jscoverage['protocol/data/Parameters.js'][18] = 0;
  _$jscoverage['protocol/data/Parameters.js'][20] = 0;
  _$jscoverage['protocol/data/Parameters.js'][23] = 0;
  _$jscoverage['protocol/data/Parameters.js'][24] = 0;
  _$jscoverage['protocol/data/Parameters.js'][25] = 0;
  _$jscoverage['protocol/data/Parameters.js'][26] = 0;
  _$jscoverage['protocol/data/Parameters.js'][27] = 0;
  _$jscoverage['protocol/data/Parameters.js'][28] = 0;
  _$jscoverage['protocol/data/Parameters.js'][30] = 0;
  _$jscoverage['protocol/data/Parameters.js'][31] = 0;
  _$jscoverage['protocol/data/Parameters.js'][32] = 0;
  _$jscoverage['protocol/data/Parameters.js'][33] = 0;
  _$jscoverage['protocol/data/Parameters.js'][37] = 0;
  _$jscoverage['protocol/data/Parameters.js'][38] = 0;
  _$jscoverage['protocol/data/Parameters.js'][39] = 0;
  _$jscoverage['protocol/data/Parameters.js'][40] = 0;
  _$jscoverage['protocol/data/Parameters.js'][41] = 0;
  _$jscoverage['protocol/data/Parameters.js'][43] = 0;
  _$jscoverage['protocol/data/Parameters.js'][45] = 0;
  _$jscoverage['protocol/data/Parameters.js'][46] = 0;
  _$jscoverage['protocol/data/Parameters.js'][50] = 0;
  _$jscoverage['protocol/data/Parameters.js'][52] = 0;
  _$jscoverage['protocol/data/Parameters.js'][53] = 0;
  _$jscoverage['protocol/data/Parameters.js'][55] = 0;
  _$jscoverage['protocol/data/Parameters.js'][56] = 0;
}
_$jscoverage['protocol/data/Parameters.js'][14]++;
"use strict";
_$jscoverage['protocol/data/Parameters.js'][16]++;
exports.write = write;
_$jscoverage['protocol/data/Parameters.js'][17]++;
exports.getByteLength = getByteLength;
_$jscoverage['protocol/data/Parameters.js'][18]++;
exports.getArgumentCount = getArgumentCount;
_$jscoverage['protocol/data/Parameters.js'][20]++;
function write(part, value) {
  _$jscoverage['protocol/data/Parameters.js'][23]++;
  value = value || this;
  _$jscoverage['protocol/data/Parameters.js'][24]++;
  part = part || {};
  _$jscoverage['protocol/data/Parameters.js'][25]++;
  if (Array.isArray(value)) {
    _$jscoverage['protocol/data/Parameters.js'][26]++;
    part.argumentCount = value.length;
    _$jscoverage['protocol/data/Parameters.js'][27]++;
    part.buffer = Buffer.concat(value);
    _$jscoverage['protocol/data/Parameters.js'][28]++;
    return part;
  }
  _$jscoverage['protocol/data/Parameters.js'][30]++;
  if (Buffer.isBuffer(value)) {
    _$jscoverage['protocol/data/Parameters.js'][31]++;
    part.argumentCount = 1;
    _$jscoverage['protocol/data/Parameters.js'][32]++;
    part.buffer = value;
    _$jscoverage['protocol/data/Parameters.js'][33]++;
    return part;
  }
}
_$jscoverage['protocol/data/Parameters.js'][37]++;
function getByteLength(value) {
  _$jscoverage['protocol/data/Parameters.js'][38]++;
  if (Array.isArray(value)) {
    _$jscoverage['protocol/data/Parameters.js'][39]++;
    var byteLength = 0;
    _$jscoverage['protocol/data/Parameters.js'][40]++;
    for (var i = 0; i < value.length; i++) {
      _$jscoverage['protocol/data/Parameters.js'][41]++;
      byteLength += value[i].length;
}
    _$jscoverage['protocol/data/Parameters.js'][43]++;
    return byteLength;
  }
  _$jscoverage['protocol/data/Parameters.js'][45]++;
  if (Buffer.isBuffer(value)) {
    _$jscoverage['protocol/data/Parameters.js'][46]++;
    return value.length;
  }
}
_$jscoverage['protocol/data/Parameters.js'][50]++;
function getArgumentCount(value) {
  _$jscoverage['protocol/data/Parameters.js'][52]++;
  if (Array.isArray(value)) {
    _$jscoverage['protocol/data/Parameters.js'][53]++;
    return value.length;
  }
  _$jscoverage['protocol/data/Parameters.js'][55]++;
  if (Buffer.isBuffer(value)) {
    _$jscoverage['protocol/data/Parameters.js'][56]++;
    return 1;
  }
}
_$jscoverage['protocol/data/Parameters.js'].source = ["// Copyright 2013 SAP AG.","//","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//","// http: //www.apache.org/licenses/LICENSE-2.0","//","// Unless required by applicable law or agreed to in writing,","// software distributed under the License is distributed on an","// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,","// either express or implied. See the License for the specific","// language governing permissions and limitations under the License.","'use strict';","","exports.write = write;","exports.getByteLength = getByteLength;","exports.getArgumentCount = getArgumentCount;","","function write(part, value) {","  /* jshint validthis:true */","","  value = value || this;","  part = part || {};","  if (Array.isArray(value)) {","    part.argumentCount = value.length;","    part.buffer = Buffer.concat(value);","    return part;","  }","  if (Buffer.isBuffer(value)) {","    part.argumentCount = 1;","    part.buffer = value;","    return part;","  }","}","","function getByteLength(value) {","  if (Array.isArray(value)) {","    var byteLength = 0;","    for (var i = 0; i &lt; value.length; i++) {","      byteLength += value[i].length;","    }","    return byteLength;","  }","  if (Buffer.isBuffer(value)) {","    return value.length;","  }","}","","function getArgumentCount(value) {","  /* jshint unused:false */","  if (Array.isArray(value)) {","    return value.length;","  }","  if (Buffer.isBuffer(value)) {","    return 1;","  }","}"];
