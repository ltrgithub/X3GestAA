/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['protocol/Writer.js']) {
  _$jscoverage['protocol/Writer.js'] = [];
  _$jscoverage['protocol/Writer.js'][14] = 0;
  _$jscoverage['protocol/Writer.js'][16] = 0;
  _$jscoverage['protocol/Writer.js'][17] = 0;
  _$jscoverage['protocol/Writer.js'][18] = 0;
  _$jscoverage['protocol/Writer.js'][19] = 0;
  _$jscoverage['protocol/Writer.js'][20] = 0;
  _$jscoverage['protocol/Writer.js'][21] = 0;
  _$jscoverage['protocol/Writer.js'][22] = 0;
  _$jscoverage['protocol/Writer.js'][24] = 0;
  _$jscoverage['protocol/Writer.js'][26] = 0;
  _$jscoverage['protocol/Writer.js'][33] = 0;
  _$jscoverage['protocol/Writer.js'][34] = 0;
  _$jscoverage['protocol/Writer.js'][35] = 0;
  _$jscoverage['protocol/Writer.js'][38] = 0;
  _$jscoverage['protocol/Writer.js'][39] = 0;
  _$jscoverage['protocol/Writer.js'][42] = 0;
  _$jscoverage['protocol/Writer.js'][43] = 0;
  _$jscoverage['protocol/Writer.js'][44] = 0;
  _$jscoverage['protocol/Writer.js'][45] = 0;
  _$jscoverage['protocol/Writer.js'][46] = 0;
  _$jscoverage['protocol/Writer.js'][49] = 0;
  _$jscoverage['protocol/Writer.js'][50] = 0;
  _$jscoverage['protocol/Writer.js'][51] = 0;
  _$jscoverage['protocol/Writer.js'][54] = 0;
  _$jscoverage['protocol/Writer.js'][55] = 0;
  _$jscoverage['protocol/Writer.js'][56] = 0;
  _$jscoverage['protocol/Writer.js'][57] = 0;
  _$jscoverage['protocol/Writer.js'][59] = 0;
  _$jscoverage['protocol/Writer.js'][62] = 0;
  _$jscoverage['protocol/Writer.js'][63] = 0;
  _$jscoverage['protocol/Writer.js'][64] = 0;
  _$jscoverage['protocol/Writer.js'][65] = 0;
  _$jscoverage['protocol/Writer.js'][68] = 0;
  _$jscoverage['protocol/Writer.js'][71] = 0;
  _$jscoverage['protocol/Writer.js'][76] = 0;
  _$jscoverage['protocol/Writer.js'][81] = 0;
  _$jscoverage['protocol/Writer.js'][86] = 0;
  _$jscoverage['protocol/Writer.js'][87] = 0;
  _$jscoverage['protocol/Writer.js'][88] = 0;
  _$jscoverage['protocol/Writer.js'][90] = 0;
  _$jscoverage['protocol/Writer.js'][94] = 0;
  _$jscoverage['protocol/Writer.js'][96] = 0;
  _$jscoverage['protocol/Writer.js'][97] = 0;
  _$jscoverage['protocol/Writer.js'][99] = 0;
  _$jscoverage['protocol/Writer.js'][102] = 0;
  _$jscoverage['protocol/Writer.js'][104] = 0;
  _$jscoverage['protocol/Writer.js'][107] = 0;
  _$jscoverage['protocol/Writer.js'][109] = 0;
  _$jscoverage['protocol/Writer.js'][110] = 0;
  _$jscoverage['protocol/Writer.js'][111] = 0;
  _$jscoverage['protocol/Writer.js'][114] = 0;
  _$jscoverage['protocol/Writer.js'][116] = 0;
  _$jscoverage['protocol/Writer.js'][118] = 0;
  _$jscoverage['protocol/Writer.js'][121] = 0;
  _$jscoverage['protocol/Writer.js'][123] = 0;
  _$jscoverage['protocol/Writer.js'][125] = 0;
  _$jscoverage['protocol/Writer.js'][127] = 0;
  _$jscoverage['protocol/Writer.js'][130] = 0;
  _$jscoverage['protocol/Writer.js'][132] = 0;
  _$jscoverage['protocol/Writer.js'][133] = 0;
  _$jscoverage['protocol/Writer.js'][134] = 0;
  _$jscoverage['protocol/Writer.js'][136] = 0;
  _$jscoverage['protocol/Writer.js'][137] = 0;
  _$jscoverage['protocol/Writer.js'][139] = 0;
  _$jscoverage['protocol/Writer.js'][140] = 0;
  _$jscoverage['protocol/Writer.js'][141] = 0;
  _$jscoverage['protocol/Writer.js'][144] = 0;
  _$jscoverage['protocol/Writer.js'][145] = 0;
  _$jscoverage['protocol/Writer.js'][146] = 0;
  _$jscoverage['protocol/Writer.js'][148] = 0;
  _$jscoverage['protocol/Writer.js'][149] = 0;
  _$jscoverage['protocol/Writer.js'][151] = 0;
  _$jscoverage['protocol/Writer.js'][152] = 0;
  _$jscoverage['protocol/Writer.js'][155] = 0;
  _$jscoverage['protocol/Writer.js'][156] = 0;
  _$jscoverage['protocol/Writer.js'][157] = 0;
  _$jscoverage['protocol/Writer.js'][160] = 0;
  _$jscoverage['protocol/Writer.js'][164] = 0;
  _$jscoverage['protocol/Writer.js'][165] = 0;
  _$jscoverage['protocol/Writer.js'][166] = 0;
  _$jscoverage['protocol/Writer.js'][169] = 0;
  _$jscoverage['protocol/Writer.js'][171] = 0;
  _$jscoverage['protocol/Writer.js'][173] = 0;
  _$jscoverage['protocol/Writer.js'][175] = 0;
  _$jscoverage['protocol/Writer.js'][176] = 0;
  _$jscoverage['protocol/Writer.js'][178] = 0;
  _$jscoverage['protocol/Writer.js'][179] = 0;
  _$jscoverage['protocol/Writer.js'][180] = 0;
  _$jscoverage['protocol/Writer.js'][181] = 0;
  _$jscoverage['protocol/Writer.js'][184] = 0;
  _$jscoverage['protocol/Writer.js'][187] = 0;
  _$jscoverage['protocol/Writer.js'][188] = 0;
  _$jscoverage['protocol/Writer.js'][190] = 0;
  _$jscoverage['protocol/Writer.js'][191] = 0;
  _$jscoverage['protocol/Writer.js'][192] = 0;
  _$jscoverage['protocol/Writer.js'][194] = 0;
  _$jscoverage['protocol/Writer.js'][195] = 0;
  _$jscoverage['protocol/Writer.js'][196] = 0;
  _$jscoverage['protocol/Writer.js'][198] = 0;
  _$jscoverage['protocol/Writer.js'][199] = 0;
  _$jscoverage['protocol/Writer.js'][202] = 0;
  _$jscoverage['protocol/Writer.js'][204] = 0;
  _$jscoverage['protocol/Writer.js'][205] = 0;
  _$jscoverage['protocol/Writer.js'][207] = 0;
  _$jscoverage['protocol/Writer.js'][209] = 0;
  _$jscoverage['protocol/Writer.js'][210] = 0;
  _$jscoverage['protocol/Writer.js'][211] = 0;
  _$jscoverage['protocol/Writer.js'][214] = 0;
  _$jscoverage['protocol/Writer.js'][216] = 0;
  _$jscoverage['protocol/Writer.js'][218] = 0;
  _$jscoverage['protocol/Writer.js'][221] = 0;
  _$jscoverage['protocol/Writer.js'][224] = 0;
  _$jscoverage['protocol/Writer.js'][226] = 0;
  _$jscoverage['protocol/Writer.js'][229] = 0;
  _$jscoverage['protocol/Writer.js'][231] = 0;
  _$jscoverage['protocol/Writer.js'][233] = 0;
  _$jscoverage['protocol/Writer.js'][235] = 0;
  _$jscoverage['protocol/Writer.js'][238] = 0;
  _$jscoverage['protocol/Writer.js'][240] = 0;
  _$jscoverage['protocol/Writer.js'][241] = 0;
  _$jscoverage['protocol/Writer.js'][242] = 0;
  _$jscoverage['protocol/Writer.js'][244] = 0;
  _$jscoverage['protocol/Writer.js'][245] = 0;
  _$jscoverage['protocol/Writer.js'][247] = 0;
  _$jscoverage['protocol/Writer.js'][248] = 0;
  _$jscoverage['protocol/Writer.js'][249] = 0;
  _$jscoverage['protocol/Writer.js'][252] = 0;
  _$jscoverage['protocol/Writer.js'][253] = 0;
  _$jscoverage['protocol/Writer.js'][254] = 0;
  _$jscoverage['protocol/Writer.js'][256] = 0;
  _$jscoverage['protocol/Writer.js'][257] = 0;
  _$jscoverage['protocol/Writer.js'][259] = 0;
  _$jscoverage['protocol/Writer.js'][260] = 0;
  _$jscoverage['protocol/Writer.js'][263] = 0;
  _$jscoverage['protocol/Writer.js'][264] = 0;
  _$jscoverage['protocol/Writer.js'][265] = 0;
  _$jscoverage['protocol/Writer.js'][268] = 0;
  _$jscoverage['protocol/Writer.js'][272] = 0;
  _$jscoverage['protocol/Writer.js'][273] = 0;
  _$jscoverage['protocol/Writer.js'][274] = 0;
  _$jscoverage['protocol/Writer.js'][277] = 0;
  _$jscoverage['protocol/Writer.js'][279] = 0;
  _$jscoverage['protocol/Writer.js'][281] = 0;
  _$jscoverage['protocol/Writer.js'][283] = 0;
  _$jscoverage['protocol/Writer.js'][285] = 0;
  _$jscoverage['protocol/Writer.js'][287] = 0;
  _$jscoverage['protocol/Writer.js'][289] = 0;
  _$jscoverage['protocol/Writer.js'][290] = 0;
  _$jscoverage['protocol/Writer.js'][292] = 0;
  _$jscoverage['protocol/Writer.js'][294] = 0;
  _$jscoverage['protocol/Writer.js'][295] = 0;
  _$jscoverage['protocol/Writer.js'][296] = 0;
  _$jscoverage['protocol/Writer.js'][297] = 0;
  _$jscoverage['protocol/Writer.js'][300] = 0;
  _$jscoverage['protocol/Writer.js'][303] = 0;
  _$jscoverage['protocol/Writer.js'][305] = 0;
  _$jscoverage['protocol/Writer.js'][307] = 0;
  _$jscoverage['protocol/Writer.js'][308] = 0;
  _$jscoverage['protocol/Writer.js'][309] = 0;
  _$jscoverage['protocol/Writer.js'][311] = 0;
  _$jscoverage['protocol/Writer.js'][315] = 0;
  _$jscoverage['protocol/Writer.js'][316] = 0;
  _$jscoverage['protocol/Writer.js'][318] = 0;
  _$jscoverage['protocol/Writer.js'][319] = 0;
  _$jscoverage['protocol/Writer.js'][322] = 0;
  _$jscoverage['protocol/Writer.js'][323] = 0;
  _$jscoverage['protocol/Writer.js'][324] = 0;
  _$jscoverage['protocol/Writer.js'][325] = 0;
  _$jscoverage['protocol/Writer.js'][326] = 0;
  _$jscoverage['protocol/Writer.js'][327] = 0;
  _$jscoverage['protocol/Writer.js'][328] = 0;
  _$jscoverage['protocol/Writer.js'][329] = 0;
  _$jscoverage['protocol/Writer.js'][334] = 0;
  _$jscoverage['protocol/Writer.js'][335] = 0;
  _$jscoverage['protocol/Writer.js'][336] = 0;
  _$jscoverage['protocol/Writer.js'][339] = 0;
  _$jscoverage['protocol/Writer.js'][341] = 0;
  _$jscoverage['protocol/Writer.js'][342] = 0;
  _$jscoverage['protocol/Writer.js'][345] = 0;
  _$jscoverage['protocol/Writer.js'][346] = 0;
  _$jscoverage['protocol/Writer.js'][347] = 0;
  _$jscoverage['protocol/Writer.js'][348] = 0;
  _$jscoverage['protocol/Writer.js'][349] = 0;
  _$jscoverage['protocol/Writer.js'][350] = 0;
  _$jscoverage['protocol/Writer.js'][351] = 0;
  _$jscoverage['protocol/Writer.js'][352] = 0;
  _$jscoverage['protocol/Writer.js'][353] = 0;
  _$jscoverage['protocol/Writer.js'][354] = 0;
  _$jscoverage['protocol/Writer.js'][355] = 0;
  _$jscoverage['protocol/Writer.js'][357] = 0;
  _$jscoverage['protocol/Writer.js'][359] = 0;
  _$jscoverage['protocol/Writer.js'][360] = 0;
  _$jscoverage['protocol/Writer.js'][361] = 0;
  _$jscoverage['protocol/Writer.js'][365] = 0;
  _$jscoverage['protocol/Writer.js'][366] = 0;
  _$jscoverage['protocol/Writer.js'][367] = 0;
  _$jscoverage['protocol/Writer.js'][368] = 0;
  _$jscoverage['protocol/Writer.js'][369] = 0;
  _$jscoverage['protocol/Writer.js'][372] = 0;
  _$jscoverage['protocol/Writer.js'][373] = 0;
  _$jscoverage['protocol/Writer.js'][374] = 0;
  _$jscoverage['protocol/Writer.js'][375] = 0;
  _$jscoverage['protocol/Writer.js'][376] = 0;
  _$jscoverage['protocol/Writer.js'][379] = 0;
  _$jscoverage['protocol/Writer.js'][380] = 0;
  _$jscoverage['protocol/Writer.js'][381] = 0;
  _$jscoverage['protocol/Writer.js'][382] = 0;
  _$jscoverage['protocol/Writer.js'][383] = 0;
  _$jscoverage['protocol/Writer.js'][386] = 0;
  _$jscoverage['protocol/Writer.js'][387] = 0;
  _$jscoverage['protocol/Writer.js'][388] = 0;
  _$jscoverage['protocol/Writer.js'][389] = 0;
  _$jscoverage['protocol/Writer.js'][390] = 0;
  _$jscoverage['protocol/Writer.js'][393] = 0;
  _$jscoverage['protocol/Writer.js'][394] = 0;
  _$jscoverage['protocol/Writer.js'][395] = 0;
  _$jscoverage['protocol/Writer.js'][396] = 0;
  _$jscoverage['protocol/Writer.js'][397] = 0;
  _$jscoverage['protocol/Writer.js'][400] = 0;
  _$jscoverage['protocol/Writer.js'][401] = 0;
  _$jscoverage['protocol/Writer.js'][402] = 0;
  _$jscoverage['protocol/Writer.js'][403] = 0;
  _$jscoverage['protocol/Writer.js'][404] = 0;
  _$jscoverage['protocol/Writer.js'][407] = 0;
  _$jscoverage['protocol/Writer.js'][408] = 0;
  _$jscoverage['protocol/Writer.js'][409] = 0;
  _$jscoverage['protocol/Writer.js'][410] = 0;
  _$jscoverage['protocol/Writer.js'][411] = 0;
  _$jscoverage['protocol/Writer.js'][412] = 0;
  _$jscoverage['protocol/Writer.js'][414] = 0;
  _$jscoverage['protocol/Writer.js'][416] = 0;
  _$jscoverage['protocol/Writer.js'][417] = 0;
  _$jscoverage['protocol/Writer.js'][418] = 0;
  _$jscoverage['protocol/Writer.js'][419] = 0;
  _$jscoverage['protocol/Writer.js'][422] = 0;
  _$jscoverage['protocol/Writer.js'][423] = 0;
  _$jscoverage['protocol/Writer.js'][426] = 0;
  _$jscoverage['protocol/Writer.js'][427] = 0;
  _$jscoverage['protocol/Writer.js'][430] = 0;
  _$jscoverage['protocol/Writer.js'][431] = 0;
  _$jscoverage['protocol/Writer.js'][432] = 0;
  _$jscoverage['protocol/Writer.js'][433] = 0;
  _$jscoverage['protocol/Writer.js'][434] = 0;
  _$jscoverage['protocol/Writer.js'][435] = 0;
  _$jscoverage['protocol/Writer.js'][436] = 0;
  _$jscoverage['protocol/Writer.js'][437] = 0;
  _$jscoverage['protocol/Writer.js'][438] = 0;
  _$jscoverage['protocol/Writer.js'][439] = 0;
  _$jscoverage['protocol/Writer.js'][440] = 0;
  _$jscoverage['protocol/Writer.js'][441] = 0;
  _$jscoverage['protocol/Writer.js'][442] = 0;
  _$jscoverage['protocol/Writer.js'][443] = 0;
  _$jscoverage['protocol/Writer.js'][444] = 0;
  _$jscoverage['protocol/Writer.js'][446] = 0;
  _$jscoverage['protocol/Writer.js'][447] = 0;
  _$jscoverage['protocol/Writer.js'][448] = 0;
  _$jscoverage['protocol/Writer.js'][449] = 0;
  _$jscoverage['protocol/Writer.js'][450] = 0;
  _$jscoverage['protocol/Writer.js'][452] = 0;
  _$jscoverage['protocol/Writer.js'][455] = 0;
  _$jscoverage['protocol/Writer.js'][456] = 0;
  _$jscoverage['protocol/Writer.js'][457] = 0;
  _$jscoverage['protocol/Writer.js'][458] = 0;
  _$jscoverage['protocol/Writer.js'][459] = 0;
  _$jscoverage['protocol/Writer.js'][460] = 0;
  _$jscoverage['protocol/Writer.js'][461] = 0;
  _$jscoverage['protocol/Writer.js'][462] = 0;
  _$jscoverage['protocol/Writer.js'][463] = 0;
  _$jscoverage['protocol/Writer.js'][464] = 0;
  _$jscoverage['protocol/Writer.js'][465] = 0;
  _$jscoverage['protocol/Writer.js'][466] = 0;
  _$jscoverage['protocol/Writer.js'][467] = 0;
  _$jscoverage['protocol/Writer.js'][468] = 0;
  _$jscoverage['protocol/Writer.js'][470] = 0;
  _$jscoverage['protocol/Writer.js'][471] = 0;
  _$jscoverage['protocol/Writer.js'][472] = 0;
  _$jscoverage['protocol/Writer.js'][473] = 0;
  _$jscoverage['protocol/Writer.js'][474] = 0;
  _$jscoverage['protocol/Writer.js'][476] = 0;
  _$jscoverage['protocol/Writer.js'][479] = 0;
  _$jscoverage['protocol/Writer.js'][480] = 0;
  _$jscoverage['protocol/Writer.js'][481] = 0;
  _$jscoverage['protocol/Writer.js'][482] = 0;
  _$jscoverage['protocol/Writer.js'][483] = 0;
  _$jscoverage['protocol/Writer.js'][486] = 0;
  _$jscoverage['protocol/Writer.js'][487] = 0;
  _$jscoverage['protocol/Writer.js'][488] = 0;
  _$jscoverage['protocol/Writer.js'][489] = 0;
  _$jscoverage['protocol/Writer.js'][490] = 0;
  _$jscoverage['protocol/Writer.js'][491] = 0;
  _$jscoverage['protocol/Writer.js'][493] = 0;
  _$jscoverage['protocol/Writer.js'][496] = 0;
  _$jscoverage['protocol/Writer.js'][497] = 0;
  _$jscoverage['protocol/Writer.js'][498] = 0;
  _$jscoverage['protocol/Writer.js'][499] = 0;
  _$jscoverage['protocol/Writer.js'][500] = 0;
  _$jscoverage['protocol/Writer.js'][501] = 0;
  _$jscoverage['protocol/Writer.js'][503] = 0;
  _$jscoverage['protocol/Writer.js'][506] = 0;
  _$jscoverage['protocol/Writer.js'][508] = 0;
  _$jscoverage['protocol/Writer.js'][509] = 0;
  _$jscoverage['protocol/Writer.js'][510] = 0;
  _$jscoverage['protocol/Writer.js'][511] = 0;
  _$jscoverage['protocol/Writer.js'][512] = 0;
  _$jscoverage['protocol/Writer.js'][514] = 0;
  _$jscoverage['protocol/Writer.js'][515] = 0;
  _$jscoverage['protocol/Writer.js'][516] = 0;
  _$jscoverage['protocol/Writer.js'][518] = 0;
  _$jscoverage['protocol/Writer.js'][520] = 0;
  _$jscoverage['protocol/Writer.js'][521] = 0;
  _$jscoverage['protocol/Writer.js'][522] = 0;
  _$jscoverage['protocol/Writer.js'][523] = 0;
  _$jscoverage['protocol/Writer.js'][524] = 0;
  _$jscoverage['protocol/Writer.js'][525] = 0;
  _$jscoverage['protocol/Writer.js'][528] = 0;
  _$jscoverage['protocol/Writer.js'][530] = 0;
  _$jscoverage['protocol/Writer.js'][531] = 0;
  _$jscoverage['protocol/Writer.js'][532] = 0;
  _$jscoverage['protocol/Writer.js'][533] = 0;
  _$jscoverage['protocol/Writer.js'][534] = 0;
  _$jscoverage['protocol/Writer.js'][536] = 0;
  _$jscoverage['protocol/Writer.js'][537] = 0;
  _$jscoverage['protocol/Writer.js'][538] = 0;
  _$jscoverage['protocol/Writer.js'][540] = 0;
  _$jscoverage['protocol/Writer.js'][542] = 0;
  _$jscoverage['protocol/Writer.js'][543] = 0;
  _$jscoverage['protocol/Writer.js'][544] = 0;
  _$jscoverage['protocol/Writer.js'][545] = 0;
  _$jscoverage['protocol/Writer.js'][546] = 0;
  _$jscoverage['protocol/Writer.js'][547] = 0;
  _$jscoverage['protocol/Writer.js'][548] = 0;
  _$jscoverage['protocol/Writer.js'][551] = 0;
  _$jscoverage['protocol/Writer.js'][553] = 0;
  _$jscoverage['protocol/Writer.js'][554] = 0;
  _$jscoverage['protocol/Writer.js'][555] = 0;
  _$jscoverage['protocol/Writer.js'][556] = 0;
  _$jscoverage['protocol/Writer.js'][557] = 0;
  _$jscoverage['protocol/Writer.js'][559] = 0;
  _$jscoverage['protocol/Writer.js'][560] = 0;
  _$jscoverage['protocol/Writer.js'][561] = 0;
  _$jscoverage['protocol/Writer.js'][562] = 0;
  _$jscoverage['protocol/Writer.js'][563] = 0;
  _$jscoverage['protocol/Writer.js'][564] = 0;
  _$jscoverage['protocol/Writer.js'][566] = 0;
  _$jscoverage['protocol/Writer.js'][568] = 0;
  _$jscoverage['protocol/Writer.js'][569] = 0;
  _$jscoverage['protocol/Writer.js'][570] = 0;
  _$jscoverage['protocol/Writer.js'][571] = 0;
  _$jscoverage['protocol/Writer.js'][572] = 0;
  _$jscoverage['protocol/Writer.js'][573] = 0;
  _$jscoverage['protocol/Writer.js'][574] = 0;
  _$jscoverage['protocol/Writer.js'][575] = 0;
  _$jscoverage['protocol/Writer.js'][576] = 0;
  _$jscoverage['protocol/Writer.js'][577] = 0;
  _$jscoverage['protocol/Writer.js'][580] = 0;
  _$jscoverage['protocol/Writer.js'][582] = 0;
  _$jscoverage['protocol/Writer.js'][585] = 0;
  _$jscoverage['protocol/Writer.js'][587] = 0;
  _$jscoverage['protocol/Writer.js'][590] = 0;
  _$jscoverage['protocol/Writer.js'][592] = 0;
  _$jscoverage['protocol/Writer.js'][595] = 0;
  _$jscoverage['protocol/Writer.js'][597] = 0;
  _$jscoverage['protocol/Writer.js'][600] = 0;
  _$jscoverage['protocol/Writer.js'][602] = 0;
  _$jscoverage['protocol/Writer.js'][603] = 0;
  _$jscoverage['protocol/Writer.js'][604] = 0;
  _$jscoverage['protocol/Writer.js'][606] = 0;
  _$jscoverage['protocol/Writer.js'][607] = 0;
  _$jscoverage['protocol/Writer.js'][608] = 0;
  _$jscoverage['protocol/Writer.js'][609] = 0;
  _$jscoverage['protocol/Writer.js'][610] = 0;
  _$jscoverage['protocol/Writer.js'][617] = 0;
  _$jscoverage['protocol/Writer.js'][618] = 0;
  _$jscoverage['protocol/Writer.js'][621] = 0;
  _$jscoverage['protocol/Writer.js'][622] = 0;
  _$jscoverage['protocol/Writer.js'][625] = 0;
  _$jscoverage['protocol/Writer.js'][626] = 0;
}
_$jscoverage['protocol/Writer.js'][14]++;
"use strict";
_$jscoverage['protocol/Writer.js'][16]++;
var util = require("../util");
_$jscoverage['protocol/Writer.js'][17]++;
var Readable = util.stream.Readable;
_$jscoverage['protocol/Writer.js'][18]++;
var common = require("./common");
_$jscoverage['protocol/Writer.js'][19]++;
var TypeCode = common.TypeCode;
_$jscoverage['protocol/Writer.js'][20]++;
var LobOptions = common.LobOptions;
_$jscoverage['protocol/Writer.js'][21]++;
var NormalizedTypeCode = common.NormalizedTypeCode;
_$jscoverage['protocol/Writer.js'][22]++;
var bignum = util.bignum;
_$jscoverage['protocol/Writer.js'][24]++;
exports = module.exports = Writer;
_$jscoverage['protocol/Writer.js'][26]++;
var REGEX = {DATE: /(\d{4})-(\d{2})-(\d{2})/, TIME: /(\d{2}):(\d{2}):(\d{2}(?:\.\d+)?)/, TIMESTAMP: /(\d{4})-(\d{2})-(\d{2})[T ](\d{2}):(\d{2}):(\d{2}(?:\.\d+)?)/, DECIMAL: /^([+-])?(\d+)(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/};
_$jscoverage['protocol/Writer.js'][33]++;
function Writer(types) {
  _$jscoverage['protocol/Writer.js'][34]++;
  this._types = types.map(normalizeType);
  _$jscoverage['protocol/Writer.js'][35]++;
  this.reset();
}
_$jscoverage['protocol/Writer.js'][38]++;
function normalizeType(type) {
  _$jscoverage['protocol/Writer.js'][39]++;
  return NormalizedTypeCode[type];
}
_$jscoverage['protocol/Writer.js'][42]++;
Writer.prototype.clear = (function clear() {
  _$jscoverage['protocol/Writer.js'][43]++;
  this._params = false;
  _$jscoverage['protocol/Writer.js'][44]++;
  this._buffers = [];
  _$jscoverage['protocol/Writer.js'][45]++;
  this._bytesWritten = 0;
  _$jscoverage['protocol/Writer.js'][46]++;
  this._argumentCount = 0;
});
_$jscoverage['protocol/Writer.js'][49]++;
Writer.prototype.reset = (function reset() {
  _$jscoverage['protocol/Writer.js'][50]++;
  this._lobs = [];
  _$jscoverage['protocol/Writer.js'][51]++;
  this.clear();
});
_$jscoverage['protocol/Writer.js'][54]++;
Writer.prototype.setValues = (function setValues(values) {
  _$jscoverage['protocol/Writer.js'][55]++;
  this.reset();
  _$jscoverage['protocol/Writer.js'][56]++;
  for (var i = 0; i < values.length; i++) {
    _$jscoverage['protocol/Writer.js'][57]++;
    this.add(this._types[i], values[i]);
}
  _$jscoverage['protocol/Writer.js'][59]++;
  this._params = true;
});
_$jscoverage['protocol/Writer.js'][62]++;
exports.create = (function createWriter(params) {
  _$jscoverage['protocol/Writer.js'][63]++;
  var writer = new Writer(params.types);
  _$jscoverage['protocol/Writer.js'][64]++;
  writer.setValues(params.values);
  _$jscoverage['protocol/Writer.js'][65]++;
  return writer;
});
_$jscoverage['protocol/Writer.js'][68]++;
Object.defineProperties(Writer.prototype, {hasParameters: {get: (function hasParameters() {
  _$jscoverage['protocol/Writer.js'][71]++;
  return this._params;
})}, finished: {get: (function isFinished() {
  _$jscoverage['protocol/Writer.js'][76]++;
  return ! this._lobs.length && ! this._buffers.length;
})}, length: {get: (function getLength() {
  _$jscoverage['protocol/Writer.js'][81]++;
  return this._bytesWritten;
})}});
_$jscoverage['protocol/Writer.js'][86]++;
Writer.prototype.add = (function add(type, value) {
  _$jscoverage['protocol/Writer.js'][87]++;
  if (typeof value === "undefined" || value === null) {
    _$jscoverage['protocol/Writer.js'][88]++;
    this.pushNull(type);
  }
  else {
    _$jscoverage['protocol/Writer.js'][90]++;
    this[type](value);
  }
});
_$jscoverage['protocol/Writer.js'][94]++;
Writer.prototype.finializeParameters = (function finializeParameters(bytesRemaining, cb) {
  _$jscoverage['protocol/Writer.js'][96]++;
  var self = this;
  _$jscoverage['protocol/Writer.js'][97]++;
  var stream, header;
  _$jscoverage['protocol/Writer.js'][99]++;
  function finalize() {
    _$jscoverage['protocol/Writer.js'][102]++;
    header[1] |= LobOptions.LAST_DATA;
    _$jscoverage['protocol/Writer.js'][104]++;
    self._lobs.shift();
}
  _$jscoverage['protocol/Writer.js'][107]++;
  function cleanup() {
    _$jscoverage['protocol/Writer.js'][109]++;
    stream.removeListener("error", onerror);
    _$jscoverage['protocol/Writer.js'][110]++;
    stream.removeListener("end", onend);
    _$jscoverage['protocol/Writer.js'][111]++;
    stream.removeListener("readable", onreadable);
}
  _$jscoverage['protocol/Writer.js'][114]++;
  function onerror(err) {
    _$jscoverage['protocol/Writer.js'][116]++;
    cleanup();
    _$jscoverage['protocol/Writer.js'][118]++;
    cb(err);
}
  _$jscoverage['protocol/Writer.js'][121]++;
  function onend() {
    _$jscoverage['protocol/Writer.js'][123]++;
    cleanup();
    _$jscoverage['protocol/Writer.js'][125]++;
    finalize();
    _$jscoverage['protocol/Writer.js'][127]++;
    util.setImmediate(next);
}
  _$jscoverage['protocol/Writer.js'][130]++;
  function onreadable() {
    _$jscoverage['protocol/Writer.js'][132]++;
    var chunk = this.read(bytesRemaining);
    _$jscoverage['protocol/Writer.js'][133]++;
    if (chunk === null) {
      _$jscoverage['protocol/Writer.js'][134]++;
      chunk = this.read();
    }
    _$jscoverage['protocol/Writer.js'][136]++;
    if (chunk === null) {
      _$jscoverage['protocol/Writer.js'][137]++;
      return;
    }
    _$jscoverage['protocol/Writer.js'][139]++;
    if (chunk.length > bytesRemaining) {
      _$jscoverage['protocol/Writer.js'][140]++;
      cleanup();
      _$jscoverage['protocol/Writer.js'][141]++;
      return cb(createReadStreamError());
    }
    _$jscoverage['protocol/Writer.js'][144]++;
    var length = header.readInt32LE(2);
    _$jscoverage['protocol/Writer.js'][145]++;
    length += chunk.length;
    _$jscoverage['protocol/Writer.js'][146]++;
    header.writeInt32LE(length, 2);
    _$jscoverage['protocol/Writer.js'][148]++;
    self.push(chunk);
    _$jscoverage['protocol/Writer.js'][149]++;
    bytesRemaining -= chunk.length;
    _$jscoverage['protocol/Writer.js'][151]++;
    if (bytesRemaining === 0) {
      _$jscoverage['protocol/Writer.js'][152]++;
      cleanup();
      _$jscoverage['protocol/Writer.js'][155]++;
      var state = this._readableState;
      _$jscoverage['protocol/Writer.js'][156]++;
      if (state.ended && ! state.length) {
        _$jscoverage['protocol/Writer.js'][157]++;
        finalize();
      }
      _$jscoverage['protocol/Writer.js'][160]++;
      cb(null);
    }
}
  _$jscoverage['protocol/Writer.js'][164]++;
  function next() {
    _$jscoverage['protocol/Writer.js'][165]++;
    if (! self._lobs.length || ! bytesRemaining) {
      _$jscoverage['protocol/Writer.js'][166]++;
      return cb(null);
    }
    _$jscoverage['protocol/Writer.js'][169]++;
    stream = self._lobs[0];
    _$jscoverage['protocol/Writer.js'][171]++;
    header = stream._header;
    _$jscoverage['protocol/Writer.js'][173]++;
    header[1] = LobOptions.DATA_INCLUDED;
    _$jscoverage['protocol/Writer.js'][175]++;
    var position = self._bytesWritten + 1;
    _$jscoverage['protocol/Writer.js'][176]++;
    header.writeInt32LE(position, 6);
    _$jscoverage['protocol/Writer.js'][178]++;
    stream.on("error", onerror);
    _$jscoverage['protocol/Writer.js'][179]++;
    stream.on("end", onend);
    _$jscoverage['protocol/Writer.js'][180]++;
    stream.on("readable", onreadable);
    _$jscoverage['protocol/Writer.js'][181]++;
    onreadable.call(stream);
}
  _$jscoverage['protocol/Writer.js'][184]++;
  next();
});
_$jscoverage['protocol/Writer.js'][187]++;
Writer.prototype.getParameters = (function getParameters(bytesAvailable, cb) {
  _$jscoverage['protocol/Writer.js'][188]++;
  var self = this;
  _$jscoverage['protocol/Writer.js'][190]++;
  function done(err) {
    _$jscoverage['protocol/Writer.js'][191]++;
    if (err) {
      _$jscoverage['protocol/Writer.js'][192]++;
      return cb(err);
    }
    _$jscoverage['protocol/Writer.js'][194]++;
    var buffer = Buffer.concat(self._buffers, self._bytesWritten);
    _$jscoverage['protocol/Writer.js'][195]++;
    self.clear();
    _$jscoverage['protocol/Writer.js'][196]++;
    cb(null, buffer);
}
  _$jscoverage['protocol/Writer.js'][198]++;
  var bytesRemaining = bytesAvailable - this._bytesWritten;
  _$jscoverage['protocol/Writer.js'][199]++;
  this.finializeParameters(bytesRemaining, done);
});
_$jscoverage['protocol/Writer.js'][202]++;
Writer.prototype.finalizeWriteLobRequest = (function finalizeWriteLobRequest(bytesRemaining, cb) {
  _$jscoverage['protocol/Writer.js'][204]++;
  var self = this;
  _$jscoverage['protocol/Writer.js'][205]++;
  var stream, header;
  _$jscoverage['protocol/Writer.js'][207]++;
  function cleanup() {
    _$jscoverage['protocol/Writer.js'][209]++;
    stream.removeListener("error", onerror);
    _$jscoverage['protocol/Writer.js'][210]++;
    stream.removeListener("end", onend);
    _$jscoverage['protocol/Writer.js'][211]++;
    stream.removeListener("readable", onreadable);
}
  _$jscoverage['protocol/Writer.js'][214]++;
  function onerror(err) {
    _$jscoverage['protocol/Writer.js'][216]++;
    cleanup();
    _$jscoverage['protocol/Writer.js'][218]++;
    cb(err);
}
  _$jscoverage['protocol/Writer.js'][221]++;
  function finalize() {
    _$jscoverage['protocol/Writer.js'][224]++;
    header[8] |= LobOptions.LAST_DATA;
    _$jscoverage['protocol/Writer.js'][226]++;
    self._lobs.shift();
}
  _$jscoverage['protocol/Writer.js'][229]++;
  function onend() {
    _$jscoverage['protocol/Writer.js'][231]++;
    cleanup();
    _$jscoverage['protocol/Writer.js'][233]++;
    finalize();
    _$jscoverage['protocol/Writer.js'][235]++;
    util.setImmediate(next);
}
  _$jscoverage['protocol/Writer.js'][238]++;
  function onreadable() {
    _$jscoverage['protocol/Writer.js'][240]++;
    var chunk = this.read(bytesRemaining);
    _$jscoverage['protocol/Writer.js'][241]++;
    if (chunk === null) {
      _$jscoverage['protocol/Writer.js'][242]++;
      chunk = this.read();
    }
    _$jscoverage['protocol/Writer.js'][244]++;
    if (chunk === null) {
      _$jscoverage['protocol/Writer.js'][245]++;
      return;
    }
    _$jscoverage['protocol/Writer.js'][247]++;
    if (chunk.length > bytesRemaining) {
      _$jscoverage['protocol/Writer.js'][248]++;
      cleanup();
      _$jscoverage['protocol/Writer.js'][249]++;
      return cb(createReadStreamError());
    }
    _$jscoverage['protocol/Writer.js'][252]++;
    var length = header.readInt32LE(17);
    _$jscoverage['protocol/Writer.js'][253]++;
    length += chunk.length;
    _$jscoverage['protocol/Writer.js'][254]++;
    header.writeInt32LE(length, 17);
    _$jscoverage['protocol/Writer.js'][256]++;
    self.push(chunk);
    _$jscoverage['protocol/Writer.js'][257]++;
    bytesRemaining -= chunk.length;
    _$jscoverage['protocol/Writer.js'][259]++;
    if (bytesRemaining === 0) {
      _$jscoverage['protocol/Writer.js'][260]++;
      cleanup();
      _$jscoverage['protocol/Writer.js'][263]++;
      var state = this._readableState;
      _$jscoverage['protocol/Writer.js'][264]++;
      if (state.ended && ! state.length) {
        _$jscoverage['protocol/Writer.js'][265]++;
        finalize();
      }
      _$jscoverage['protocol/Writer.js'][268]++;
      cb(null);
    }
}
  _$jscoverage['protocol/Writer.js'][272]++;
  function next() {
    _$jscoverage['protocol/Writer.js'][273]++;
    if (! self._lobs.length || ! bytesRemaining) {
      _$jscoverage['protocol/Writer.js'][274]++;
      return cb(null);
    }
    _$jscoverage['protocol/Writer.js'][277]++;
    stream = self._lobs[0];
    _$jscoverage['protocol/Writer.js'][279]++;
    header = new Buffer(21);
    _$jscoverage['protocol/Writer.js'][281]++;
    stream._locatorId.copy(header, 0);
    _$jscoverage['protocol/Writer.js'][283]++;
    header[8] = LobOptions.DATA_INCLUDED;
    _$jscoverage['protocol/Writer.js'][285]++;
    header.fill(0, 9, 17);
    _$jscoverage['protocol/Writer.js'][287]++;
    header.writeInt32LE(0, 17);
    _$jscoverage['protocol/Writer.js'][289]++;
    self.push(header);
    _$jscoverage['protocol/Writer.js'][290]++;
    bytesRemaining -= header.length;
    _$jscoverage['protocol/Writer.js'][292]++;
    self._argumentCount += 1;
    _$jscoverage['protocol/Writer.js'][294]++;
    stream.on("error", onerror);
    _$jscoverage['protocol/Writer.js'][295]++;
    stream.on("end", onend);
    _$jscoverage['protocol/Writer.js'][296]++;
    stream.on("readable", onreadable);
    _$jscoverage['protocol/Writer.js'][297]++;
    onreadable.call(stream);
}
  _$jscoverage['protocol/Writer.js'][300]++;
  next();
});
_$jscoverage['protocol/Writer.js'][303]++;
Writer.prototype.getWriteLobRequest = (function getWriteLobRequest(bytesRemaining, cb) {
  _$jscoverage['protocol/Writer.js'][305]++;
  var self = this;
  _$jscoverage['protocol/Writer.js'][307]++;
  function done(err) {
    _$jscoverage['protocol/Writer.js'][308]++;
    if (err) {
      _$jscoverage['protocol/Writer.js'][309]++;
      return cb(err);
    }
    _$jscoverage['protocol/Writer.js'][311]++;
    var part = {argumentCount: self._argumentCount, buffer: Buffer.concat(self._buffers, self._bytesWritten)};
    _$jscoverage['protocol/Writer.js'][315]++;
    self.clear();
    _$jscoverage['protocol/Writer.js'][316]++;
    cb(null, part);
}
  _$jscoverage['protocol/Writer.js'][318]++;
  this.clear();
  _$jscoverage['protocol/Writer.js'][319]++;
  this.finalizeWriteLobRequest(bytesRemaining, done);
});
_$jscoverage['protocol/Writer.js'][322]++;
Writer.prototype.update = (function update(writeLobReply) {
  _$jscoverage['protocol/Writer.js'][323]++;
  var stream, locatorId;
  _$jscoverage['protocol/Writer.js'][324]++;
  for (var i = 0; i < this._lobs.length; i++) {
    _$jscoverage['protocol/Writer.js'][325]++;
    locatorId = writeLobReply[i];
    _$jscoverage['protocol/Writer.js'][326]++;
    stream = this._lobs[i];
    _$jscoverage['protocol/Writer.js'][327]++;
    if (Buffer.isBuffer(locatorId) && util.isObject(stream)) {
      _$jscoverage['protocol/Writer.js'][328]++;
      stream._header = undefined;
      _$jscoverage['protocol/Writer.js'][329]++;
      stream._locatorId = locatorId;
    }
}
});
_$jscoverage['protocol/Writer.js'][334]++;
Writer.prototype.push = (function push(buffer) {
  _$jscoverage['protocol/Writer.js'][335]++;
  this._bytesWritten += buffer.length;
  _$jscoverage['protocol/Writer.js'][336]++;
  this._buffers.push(buffer);
});
_$jscoverage['protocol/Writer.js'][339]++;
Writer.prototype.pushNull = (function pushNull(type) {
  _$jscoverage['protocol/Writer.js'][341]++;
  var buffer = new Buffer([NormalizedTypeCode[type] | 128]);
  _$jscoverage['protocol/Writer.js'][342]++;
  this.push(buffer);
});
_$jscoverage['protocol/Writer.js'][345]++;
Writer.prototype.pushLob = (function pushLob(buffer, value) {
  _$jscoverage['protocol/Writer.js'][346]++;
  this.push(buffer);
  _$jscoverage['protocol/Writer.js'][347]++;
  var stream;
  _$jscoverage['protocol/Writer.js'][348]++;
  if (Buffer.isBuffer(value)) {
    _$jscoverage['protocol/Writer.js'][349]++;
    stream = new Readable();
    _$jscoverage['protocol/Writer.js'][350]++;
    stream.push(value);
    _$jscoverage['protocol/Writer.js'][351]++;
    stream.push(null);
  }
  else {
    _$jscoverage['protocol/Writer.js'][352]++;
    if (value instanceof Readable) {
      _$jscoverage['protocol/Writer.js'][353]++;
      stream = value;
    }
    else {
      _$jscoverage['protocol/Writer.js'][354]++;
      if (value.readable === true) {
        _$jscoverage['protocol/Writer.js'][355]++;
        stream = new Readable().wrap(value);
      }
      else {
        _$jscoverage['protocol/Writer.js'][357]++;
        throw createInputError("LOB");
      }
    }
  }
  _$jscoverage['protocol/Writer.js'][359]++;
  if (stream) {
    _$jscoverage['protocol/Writer.js'][360]++;
    stream._header = buffer;
    _$jscoverage['protocol/Writer.js'][361]++;
    this._lobs.push(stream);
  }
});
_$jscoverage['protocol/Writer.js'][365]++;
Writer.prototype[TypeCode.TINYINT] = (function writeTinyInt(value) {
  _$jscoverage['protocol/Writer.js'][366]++;
  var buffer = new Buffer(2);
  _$jscoverage['protocol/Writer.js'][367]++;
  buffer[0] = TypeCode.TINYINT;
  _$jscoverage['protocol/Writer.js'][368]++;
  buffer.writeUInt8(value, 1);
  _$jscoverage['protocol/Writer.js'][369]++;
  this.push(buffer);
});
_$jscoverage['protocol/Writer.js'][372]++;
Writer.prototype[TypeCode.SMALLINT] = (function writeSmallInt(value) {
  _$jscoverage['protocol/Writer.js'][373]++;
  var buffer = new Buffer(3);
  _$jscoverage['protocol/Writer.js'][374]++;
  buffer[0] = TypeCode.SMALLINT;
  _$jscoverage['protocol/Writer.js'][375]++;
  buffer.writeInt16LE(value, 1);
  _$jscoverage['protocol/Writer.js'][376]++;
  this.push(buffer);
});
_$jscoverage['protocol/Writer.js'][379]++;
Writer.prototype[TypeCode.INT] = (function writeInt(value) {
  _$jscoverage['protocol/Writer.js'][380]++;
  var buffer = new Buffer(5);
  _$jscoverage['protocol/Writer.js'][381]++;
  buffer[0] = TypeCode.INT;
  _$jscoverage['protocol/Writer.js'][382]++;
  buffer.writeInt32LE(value, 1);
  _$jscoverage['protocol/Writer.js'][383]++;
  this.push(buffer);
});
_$jscoverage['protocol/Writer.js'][386]++;
Writer.prototype[TypeCode.BIGINT] = (function writeBigInt(value) {
  _$jscoverage['protocol/Writer.js'][387]++;
  var buffer = new Buffer(9);
  _$jscoverage['protocol/Writer.js'][388]++;
  buffer[0] = TypeCode.BIGINT;
  _$jscoverage['protocol/Writer.js'][389]++;
  bignum.writeInt64LE(buffer, value, 1);
  _$jscoverage['protocol/Writer.js'][390]++;
  this.push(buffer);
});
_$jscoverage['protocol/Writer.js'][393]++;
Writer.prototype[TypeCode.REAL] = (function writeReal(value) {
  _$jscoverage['protocol/Writer.js'][394]++;
  var buffer = new Buffer(5);
  _$jscoverage['protocol/Writer.js'][395]++;
  buffer[0] = TypeCode.REAL;
  _$jscoverage['protocol/Writer.js'][396]++;
  buffer.writeFloatLE(value, 1);
  _$jscoverage['protocol/Writer.js'][397]++;
  this.push(buffer);
});
_$jscoverage['protocol/Writer.js'][400]++;
Writer.prototype[TypeCode.DOUBLE] = (function writeDouble(value) {
  _$jscoverage['protocol/Writer.js'][401]++;
  var buffer = new Buffer(9);
  _$jscoverage['protocol/Writer.js'][402]++;
  buffer[0] = TypeCode.DOUBLE;
  _$jscoverage['protocol/Writer.js'][403]++;
  buffer.writeDoubleLE(value, 1);
  _$jscoverage['protocol/Writer.js'][404]++;
  this.push(buffer);
});
_$jscoverage['protocol/Writer.js'][407]++;
Writer.prototype[TypeCode.DECIMAL] = (function writeDecimal(value) {
  _$jscoverage['protocol/Writer.js'][408]++;
  var decimal;
  _$jscoverage['protocol/Writer.js'][409]++;
  if (util.isString(value)) {
    _$jscoverage['protocol/Writer.js'][410]++;
    decimal = stringToDecimal(value);
  }
  else {
    _$jscoverage['protocol/Writer.js'][411]++;
    if (util.isNumber(value)) {
      _$jscoverage['protocol/Writer.js'][412]++;
      decimal = stringToDecimal(value.toExponential());
    }
    else {
      _$jscoverage['protocol/Writer.js'][414]++;
      throw createInputError("DECIMAL");
    }
  }
  _$jscoverage['protocol/Writer.js'][416]++;
  var buffer = new Buffer(17);
  _$jscoverage['protocol/Writer.js'][417]++;
  buffer[0] = TypeCode.DECIMAL;
  _$jscoverage['protocol/Writer.js'][418]++;
  bignum.writeDec128(buffer, decimal, 1);
  _$jscoverage['protocol/Writer.js'][419]++;
  this.push(buffer);
});
_$jscoverage['protocol/Writer.js'][422]++;
Writer.prototype[TypeCode.NSTRING] = (function writeNString(value) {
  _$jscoverage['protocol/Writer.js'][423]++;
  this.writeCharacters(value, "utf8");
});
_$jscoverage['protocol/Writer.js'][426]++;
Writer.prototype[TypeCode.STRING] = (function writeString(value) {
  _$jscoverage['protocol/Writer.js'][427]++;
  this.writeCharacters(value, "ascii");
});
_$jscoverage['protocol/Writer.js'][430]++;
Writer.prototype.writeCharacters = (function writeCharacters(value, encoding) {
  _$jscoverage['protocol/Writer.js'][431]++;
  var type = encoding === "ascii"? TypeCode.STRING: TypeCode.NSTRING;
  _$jscoverage['protocol/Writer.js'][432]++;
  var length = Buffer.byteLength(value, encoding);
  _$jscoverage['protocol/Writer.js'][433]++;
  var buffer;
  _$jscoverage['protocol/Writer.js'][434]++;
  if (length <= 245) {
    _$jscoverage['protocol/Writer.js'][435]++;
    buffer = new Buffer(2 + length);
    _$jscoverage['protocol/Writer.js'][436]++;
    buffer[0] = type;
    _$jscoverage['protocol/Writer.js'][437]++;
    buffer[1] = length;
    _$jscoverage['protocol/Writer.js'][438]++;
    buffer.write(value, 2, length, encoding);
  }
  else {
    _$jscoverage['protocol/Writer.js'][439]++;
    if (length <= 32767) {
      _$jscoverage['protocol/Writer.js'][440]++;
      buffer = new Buffer(4 + length);
      _$jscoverage['protocol/Writer.js'][441]++;
      buffer[0] = type;
      _$jscoverage['protocol/Writer.js'][442]++;
      buffer[1] = 246;
      _$jscoverage['protocol/Writer.js'][443]++;
      buffer.writeInt16LE(length, 2);
      _$jscoverage['protocol/Writer.js'][444]++;
      buffer.write(value, 4, length, encoding);
    }
    else {
      _$jscoverage['protocol/Writer.js'][446]++;
      buffer = new Buffer(6 + length);
      _$jscoverage['protocol/Writer.js'][447]++;
      buffer[0] = type;
      _$jscoverage['protocol/Writer.js'][448]++;
      buffer[1] = 247;
      _$jscoverage['protocol/Writer.js'][449]++;
      buffer.writeInt32LE(length, 2);
      _$jscoverage['protocol/Writer.js'][450]++;
      buffer.write(value, 6, length, encoding);
    }
  }
  _$jscoverage['protocol/Writer.js'][452]++;
  this.push(buffer);
});
_$jscoverage['protocol/Writer.js'][455]++;
Writer.prototype[TypeCode.BINARY] = (function writeBinary(value) {
  _$jscoverage['protocol/Writer.js'][456]++;
  var length = value.length;
  _$jscoverage['protocol/Writer.js'][457]++;
  var buffer;
  _$jscoverage['protocol/Writer.js'][458]++;
  if (length <= 245) {
    _$jscoverage['protocol/Writer.js'][459]++;
    buffer = new Buffer(2 + length);
    _$jscoverage['protocol/Writer.js'][460]++;
    buffer[0] = TypeCode.BINARY;
    _$jscoverage['protocol/Writer.js'][461]++;
    buffer[1] = length;
    _$jscoverage['protocol/Writer.js'][462]++;
    value.copy(buffer, 2);
  }
  else {
    _$jscoverage['protocol/Writer.js'][463]++;
    if (length <= 32767) {
      _$jscoverage['protocol/Writer.js'][464]++;
      buffer = new Buffer(4 + length);
      _$jscoverage['protocol/Writer.js'][465]++;
      buffer[0] = TypeCode.BINARY;
      _$jscoverage['protocol/Writer.js'][466]++;
      buffer[1] = 246;
      _$jscoverage['protocol/Writer.js'][467]++;
      buffer.writeInt16LE(length, 2);
      _$jscoverage['protocol/Writer.js'][468]++;
      value.copy(buffer, 4);
    }
    else {
      _$jscoverage['protocol/Writer.js'][470]++;
      buffer = new Buffer(6 + length);
      _$jscoverage['protocol/Writer.js'][471]++;
      buffer[0] = TypeCode.BINARY;
      _$jscoverage['protocol/Writer.js'][472]++;
      buffer[1] = 247;
      _$jscoverage['protocol/Writer.js'][473]++;
      buffer.writeInt32LE(length, 2);
      _$jscoverage['protocol/Writer.js'][474]++;
      value.copy(buffer, 6);
    }
  }
  _$jscoverage['protocol/Writer.js'][476]++;
  this.push(buffer);
});
_$jscoverage['protocol/Writer.js'][479]++;
Writer.prototype[TypeCode.BLOB] = (function writeBLob(value) {
  _$jscoverage['protocol/Writer.js'][480]++;
  var buffer = new Buffer(10);
  _$jscoverage['protocol/Writer.js'][481]++;
  buffer.fill(0);
  _$jscoverage['protocol/Writer.js'][482]++;
  buffer[0] = TypeCode.BLOB;
  _$jscoverage['protocol/Writer.js'][483]++;
  this.pushLob(buffer, value);
});
_$jscoverage['protocol/Writer.js'][486]++;
Writer.prototype[TypeCode.CLOB] = (function writeCLob(value) {
  _$jscoverage['protocol/Writer.js'][487]++;
  var buffer = new Buffer(10);
  _$jscoverage['protocol/Writer.js'][488]++;
  buffer.fill(0);
  _$jscoverage['protocol/Writer.js'][489]++;
  buffer[0] = TypeCode.CLOB;
  _$jscoverage['protocol/Writer.js'][490]++;
  if (util.isString(value)) {
    _$jscoverage['protocol/Writer.js'][491]++;
    value = new Buffer(value, "ascii");
  }
  _$jscoverage['protocol/Writer.js'][493]++;
  this.pushLob(buffer, value);
});
_$jscoverage['protocol/Writer.js'][496]++;
Writer.prototype[TypeCode.NCLOB] = (function writeNCLob(value) {
  _$jscoverage['protocol/Writer.js'][497]++;
  var buffer = new Buffer(10);
  _$jscoverage['protocol/Writer.js'][498]++;
  buffer.fill(0);
  _$jscoverage['protocol/Writer.js'][499]++;
  buffer[0] = TypeCode.NCLOB;
  _$jscoverage['protocol/Writer.js'][500]++;
  if (util.isString(value)) {
    _$jscoverage['protocol/Writer.js'][501]++;
    value = new Buffer(value, "utf8");
  }
  _$jscoverage['protocol/Writer.js'][503]++;
  this.pushLob(buffer, value);
});
_$jscoverage['protocol/Writer.js'][506]++;
Writer.prototype[TypeCode.TIME] = (function writeTime(value) {
  _$jscoverage['protocol/Writer.js'][508]++;
  var hours, minutes, milliseconds;
  _$jscoverage['protocol/Writer.js'][509]++;
  if (util.isString(value)) {
    _$jscoverage['protocol/Writer.js'][510]++;
    var time = value.match(REGEX.TIME);
    _$jscoverage['protocol/Writer.js'][511]++;
    if (! time) {
      _$jscoverage['protocol/Writer.js'][512]++;
      throw createInputError("TIME");
    }
    _$jscoverage['protocol/Writer.js'][514]++;
    hours = ~ ~ time[1];
    _$jscoverage['protocol/Writer.js'][515]++;
    minutes = ~ ~ time[2];
    _$jscoverage['protocol/Writer.js'][516]++;
    milliseconds = Math.floor(time[3] * 1000);
  }
  else {
    _$jscoverage['protocol/Writer.js'][518]++;
    throw createInputError("TIME");
  }
  _$jscoverage['protocol/Writer.js'][520]++;
  var buffer = new Buffer(5);
  _$jscoverage['protocol/Writer.js'][521]++;
  buffer[0] = TypeCode.TIME;
  _$jscoverage['protocol/Writer.js'][522]++;
  buffer[1] = hours | 128;
  _$jscoverage['protocol/Writer.js'][523]++;
  buffer[2] = minutes;
  _$jscoverage['protocol/Writer.js'][524]++;
  buffer.writeUInt16LE(milliseconds, 3);
  _$jscoverage['protocol/Writer.js'][525]++;
  this.push(buffer);
});
_$jscoverage['protocol/Writer.js'][528]++;
Writer.prototype[TypeCode.DATE] = (function writeDate(value) {
  _$jscoverage['protocol/Writer.js'][530]++;
  var year, month, day;
  _$jscoverage['protocol/Writer.js'][531]++;
  if (util.isString(value)) {
    _$jscoverage['protocol/Writer.js'][532]++;
    var date = value.match(REGEX.DATE);
    _$jscoverage['protocol/Writer.js'][533]++;
    if (! date) {
      _$jscoverage['protocol/Writer.js'][534]++;
      throw createInputError("DATE");
    }
    _$jscoverage['protocol/Writer.js'][536]++;
    year = ~ ~ date[1];
    _$jscoverage['protocol/Writer.js'][537]++;
    month = ~ ~ date[2] - 1;
    _$jscoverage['protocol/Writer.js'][538]++;
    day = ~ ~ date[3];
  }
  else {
    _$jscoverage['protocol/Writer.js'][540]++;
    throw createInputError("DATE");
  }
  _$jscoverage['protocol/Writer.js'][542]++;
  var buffer = new Buffer(5);
  _$jscoverage['protocol/Writer.js'][543]++;
  buffer[0] = TypeCode.DATE;
  _$jscoverage['protocol/Writer.js'][544]++;
  buffer.writeUInt16LE(year, 1);
  _$jscoverage['protocol/Writer.js'][545]++;
  buffer[2] |= 128;
  _$jscoverage['protocol/Writer.js'][546]++;
  buffer[3] = month;
  _$jscoverage['protocol/Writer.js'][547]++;
  buffer[4] = day;
  _$jscoverage['protocol/Writer.js'][548]++;
  this.push(buffer);
});
_$jscoverage['protocol/Writer.js'][551]++;
Writer.prototype[TypeCode.TIMESTAMP] = (function writeTimestamp(value) {
  _$jscoverage['protocol/Writer.js'][553]++;
  var year, month, day, hours, minutes, milliseconds;
  _$jscoverage['protocol/Writer.js'][554]++;
  if (util.isString(value)) {
    _$jscoverage['protocol/Writer.js'][555]++;
    var ts = value.match(REGEX.TIMESTAMP);
    _$jscoverage['protocol/Writer.js'][556]++;
    if (! ts) {
      _$jscoverage['protocol/Writer.js'][557]++;
      throw createInputError("TIMESTAMP");
    }
    _$jscoverage['protocol/Writer.js'][559]++;
    year = ~ ~ ts[1];
    _$jscoverage['protocol/Writer.js'][560]++;
    month = ~ ~ ts[2] - 1;
    _$jscoverage['protocol/Writer.js'][561]++;
    day = ~ ~ ts[3];
    _$jscoverage['protocol/Writer.js'][562]++;
    hours = ~ ~ ts[4];
    _$jscoverage['protocol/Writer.js'][563]++;
    minutes = ~ ~ ts[5];
    _$jscoverage['protocol/Writer.js'][564]++;
    milliseconds = Math.floor(ts[6] * 1000);
  }
  else {
    _$jscoverage['protocol/Writer.js'][566]++;
    throw createInputError("TIMESTAMP");
  }
  _$jscoverage['protocol/Writer.js'][568]++;
  var buffer = new Buffer(9);
  _$jscoverage['protocol/Writer.js'][569]++;
  buffer[0] = TypeCode.TIMESTAMP;
  _$jscoverage['protocol/Writer.js'][570]++;
  buffer.writeUInt16LE(year, 1);
  _$jscoverage['protocol/Writer.js'][571]++;
  buffer[2] |= 128;
  _$jscoverage['protocol/Writer.js'][572]++;
  buffer[3] = month;
  _$jscoverage['protocol/Writer.js'][573]++;
  buffer[4] = day;
  _$jscoverage['protocol/Writer.js'][574]++;
  buffer[5] = hours | 128;
  _$jscoverage['protocol/Writer.js'][575]++;
  buffer[6] = minutes;
  _$jscoverage['protocol/Writer.js'][576]++;
  buffer.writeUInt16LE(milliseconds, 7);
  _$jscoverage['protocol/Writer.js'][577]++;
  this.push(buffer);
});
_$jscoverage['protocol/Writer.js'][580]++;
Writer.prototype[TypeCode.DAYDATE] = (function writeDayDate(value) {
  _$jscoverage['protocol/Writer.js'][582]++;
  throw createNotImplementedError();
});
_$jscoverage['protocol/Writer.js'][585]++;
Writer.prototype[TypeCode.SECONDTIME] = (function writeSecondTime(value) {
  _$jscoverage['protocol/Writer.js'][587]++;
  throw createNotImplementedError();
});
_$jscoverage['protocol/Writer.js'][590]++;
Writer.prototype[TypeCode.LONGDATE] = (function writeLongDate(value) {
  _$jscoverage['protocol/Writer.js'][592]++;
  throw createNotImplementedError();
});
_$jscoverage['protocol/Writer.js'][595]++;
Writer.prototype[TypeCode.SECONDDATE] = (function writeSecondDate(value) {
  _$jscoverage['protocol/Writer.js'][597]++;
  throw createNotImplementedError();
});
_$jscoverage['protocol/Writer.js'][600]++;
function stringToDecimal(str) {
  _$jscoverage['protocol/Writer.js'][602]++;
  var dec = str.match(REGEX.DECIMAL);
  _$jscoverage['protocol/Writer.js'][603]++;
  if (! dec) {
    _$jscoverage['protocol/Writer.js'][604]++;
    throw createInputError("DECIMAL");
  }
  _$jscoverage['protocol/Writer.js'][606]++;
  var sign = dec[1] === "-"? -1: 1;
  _$jscoverage['protocol/Writer.js'][607]++;
  var mInt = dec[2] || "0";
  _$jscoverage['protocol/Writer.js'][608]++;
  var mFrac = dec[3] || "";
  _$jscoverage['protocol/Writer.js'][609]++;
  var exp = ~ ~ dec[4];
  _$jscoverage['protocol/Writer.js'][610]++;
  return ({s: sign, m: mInt + mFrac, e: exp - mFrac.length});
}
_$jscoverage['protocol/Writer.js'][617]++;
function createInputError(type) {
  _$jscoverage['protocol/Writer.js'][618]++;
  return new Error(util.format("Wrong input for %s type", type));
}
_$jscoverage['protocol/Writer.js'][621]++;
function createNotImplementedError() {
  _$jscoverage['protocol/Writer.js'][622]++;
  return new Error("Not implemented yet");
}
_$jscoverage['protocol/Writer.js'][625]++;
function createReadStreamError() {
  _$jscoverage['protocol/Writer.js'][626]++;
  return new Error("Chunk length larger than remaining bytes");
}
_$jscoverage['protocol/Writer.js'].source = ["// Copyright 2013 SAP AG.","//","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//","// http: //www.apache.org/licenses/LICENSE-2.0","//","// Unless required by applicable law or agreed to in writing,","// software distributed under the License is distributed on an","// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,","// either express or implied. See the License for the specific","// language governing permissions and limitations under the License.","'use strict';","","var util = require('../util');","var Readable = util.stream.Readable;","var common = require('./common');","var TypeCode = common.TypeCode;","var LobOptions = common.LobOptions;","var NormalizedTypeCode = common.NormalizedTypeCode;","var bignum = util.bignum;","","exports = module.exports = Writer;","","var REGEX = {","  DATE: /(\\d{4})-(\\d{2})-(\\d{2})/,","  TIME: /(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d+)?)/,","  TIMESTAMP: /(\\d{4})-(\\d{2})-(\\d{2})[T ](\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d+)?)/,","  DECIMAL: /^([+-])?(\\d+)(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/","};","","function Writer(types) {","  this._types = types.map(normalizeType);","  this.reset();","}","","function normalizeType(type) {","  return NormalizedTypeCode[type];","}","","Writer.prototype.clear = function clear() {","  this._params = false;","  this._buffers = [];","  this._bytesWritten = 0;","  this._argumentCount = 0;","};","","Writer.prototype.reset = function reset() {","  this._lobs = [];","  this.clear();","};","","Writer.prototype.setValues = function setValues(values) {","  this.reset();","  for (var i = 0; i &lt; values.length; i++) {","    this.add(this._types[i], values[i]);","  }","  this._params = true;","};","","exports.create = function createWriter(params) {","  var writer = new Writer(params.types);","  writer.setValues(params.values);","  return writer;","};","","Object.defineProperties(Writer.prototype, {","  hasParameters: {","    get: function hasParameters() {","      return this._params;","    }","  },","  finished: {","    get: function isFinished() {","      return !this._lobs.length &amp;&amp; !this._buffers.length;","    }","  },","  length: {","    get: function getLength() {","      return this._bytesWritten;","    }","  }","});","","Writer.prototype.add = function add(type, value) {","  if (typeof value === 'undefined' || value === null) {","    this.pushNull(type);","  } else {","    this[type](value);","  }","};","","Writer.prototype.finializeParameters = function finializeParameters(","  bytesRemaining, cb) {","  var self = this;","  var stream, header;","","  function finalize() {","    /* jshint bitwise:false */","    // update lob options in header","    header[1] |= LobOptions.LAST_DATA;","    // remove current lob from stack","    self._lobs.shift();","  }","","  function cleanup() {","    // remove event listeners","    stream.removeListener('error', onerror);","    stream.removeListener('end', onend);","    stream.removeListener('readable', onreadable);","  }","","  function onerror(err) {","    /* jshint validthis:true */","    cleanup();","    // stop appending on error","    cb(err);","  }","","  function onend() {","    /* jshint validthis:true */","    cleanup();","    // finalize lob","    finalize();","    // process next lob in stack","    util.setImmediate(next);","  }","","  function onreadable() {","    /* jshint validthis:true */","    var chunk = this.read(bytesRemaining);","    if (chunk === null) {","      chunk = this.read();","    }","    if (chunk === null) {","      return;","    }","    if (chunk.length &gt; bytesRemaining) {","      cleanup();","      return cb(createReadStreamError());","    }","    // update lob length in header","    var length = header.readInt32LE(2);","    length += chunk.length;","    header.writeInt32LE(length, 2);","    // push chunk","    self.push(chunk);","    bytesRemaining -= chunk.length;","    // stop appending if there is no remaining space","    if (bytesRemaining === 0) {","      cleanup();","      // finalize lob if the stream has already ended","      // because of cleanup we don't get end event in this case","      var state = this._readableState;","      if (state.ended &amp;&amp; !state.length) {","        finalize();","      }","      // we are done","      cb(null);","    }","  }","","  function next() {","    if (!self._lobs.length || !bytesRemaining) {","      return cb(null);","    }","    // set reabable stream","    stream = self._lobs[0];","    // set lob header","    header = stream._header;","    // update lob options in header","    header[1] = LobOptions.DATA_INCLUDED;","    // update lob position in header","    var position = self._bytesWritten + 1;","    header.writeInt32LE(position, 6);","    // register event handlers","    stream.on('error', onerror);","    stream.on('end', onend);","    stream.on('readable', onreadable);","    onreadable.call(stream);","  }","","  next();","};","","Writer.prototype.getParameters = function getParameters(bytesAvailable, cb) {","  var self = this;","","  function done(err) {","    if (err) {","      return cb(err);","    }","    var buffer = Buffer.concat(self._buffers, self._bytesWritten);","    self.clear();","    cb(null, buffer);","  }","  var bytesRemaining = bytesAvailable - this._bytesWritten;","  this.finializeParameters(bytesRemaining, done);","};","","Writer.prototype.finalizeWriteLobRequest = function finalizeWriteLobRequest(","  bytesRemaining, cb) {","  var self = this;","  var stream, header;","","  function cleanup() {","    // remove event listeners","    stream.removeListener('error', onerror);","    stream.removeListener('end', onend);","    stream.removeListener('readable', onreadable);","  }","","  function onerror(err) {","    /* jshint validthis:true */","    cleanup();","    // stop appending on error","    cb(err);","  }","","  function finalize() {","    /* jshint bitwise:false */","    // update lob options in header","    header[8] |= LobOptions.LAST_DATA;","    // remove current lob from stack","    self._lobs.shift();","  }","","  function onend() {","    /* jshint validthis:true */","    cleanup();","    // finalize lob","    finalize();","    // process next lob in stack","    util.setImmediate(next);","  }","","  function onreadable() {","    /* jshint validthis:true */","    var chunk = this.read(bytesRemaining);","    if (chunk === null) {","      chunk = this.read();","    }","    if (chunk === null) {","      return;","    }","    if (chunk.length &gt; bytesRemaining) {","      cleanup();","      return cb(createReadStreamError());","    }","    // update lob length in buffer","    var length = header.readInt32LE(17);","    length += chunk.length;","    header.writeInt32LE(length, 17);","    // push chunk","    self.push(chunk);","    bytesRemaining -= chunk.length;","    // stop appending if there is no remaining space","    if (bytesRemaining === 0) {","      cleanup();","      // finalize lob if the stream has already ended","      // because of cleanup we don't get end event in this case","      var state = this._readableState;","      if (state.ended &amp;&amp; !state.length) {","        finalize();","      }","      // we are done","      cb(null);","    }","  }","","  function next() {","    if (!self._lobs.length || !bytesRemaining) {","      return cb(null);","    }","    // set reabable stream","    stream = self._lobs[0];","    // set lob header","    header = new Buffer(21);","    // set locatorId","    stream._locatorId.copy(header, 0);","    // update lob options in header","    header[8] = LobOptions.DATA_INCLUDED;","    // offset 0 means append","    header.fill(0x00, 9, 17);","    // length","    header.writeInt32LE(0, 17);","    // push header","    self.push(header);","    bytesRemaining -= header.length;","    // increase count","    self._argumentCount += 1;","    // register event handlers","    stream.on('error', onerror);","    stream.on('end', onend);","    stream.on('readable', onreadable);","    onreadable.call(stream);","  }","","  next();","};","","Writer.prototype.getWriteLobRequest = function getWriteLobRequest(","  bytesRemaining, cb) {","  var self = this;","","  function done(err) {","    if (err) {","      return cb(err);","    }","    var part = {","      argumentCount: self._argumentCount,","      buffer: Buffer.concat(self._buffers, self._bytesWritten)","    };","    self.clear();","    cb(null, part);","  }","  this.clear();","  this.finalizeWriteLobRequest(bytesRemaining, done);","};","","Writer.prototype.update = function update(writeLobReply) {","  var stream, locatorId;","  for (var i = 0; i &lt; this._lobs.length; i++) {","    locatorId = writeLobReply[i];","    stream = this._lobs[i];","    if (Buffer.isBuffer(locatorId) &amp;&amp; util.isObject(stream)) {","      stream._header = undefined;","      stream._locatorId = locatorId;","    }","  }","};","","Writer.prototype.push = function push(buffer) {","  this._bytesWritten += buffer.length;","  this._buffers.push(buffer);","};","","Writer.prototype.pushNull = function pushNull(type) {","  /* jshint bitwise:false */","  var buffer = new Buffer([NormalizedTypeCode[type] | 0x80]);","  this.push(buffer);","};","","Writer.prototype.pushLob = function pushLob(buffer, value) {","  this.push(buffer);","  var stream;","  if (Buffer.isBuffer(value)) {","    stream = new Readable();","    stream.push(value);","    stream.push(null);","  } else if (value instanceof Readable) {","    stream = value;","  } else if (value.readable === true) {","    stream = new Readable().wrap(value);","  } else {","    throw createInputError('LOB');","  }","  if (stream) {","    stream._header = buffer;","    this._lobs.push(stream);","  }","};","","Writer.prototype[TypeCode.TINYINT] = function writeTinyInt(value) {","  var buffer = new Buffer(2);","  buffer[0] = TypeCode.TINYINT;","  buffer.writeUInt8(value, 1);","  this.push(buffer);","};","","Writer.prototype[TypeCode.SMALLINT] = function writeSmallInt(value) {","  var buffer = new Buffer(3);","  buffer[0] = TypeCode.SMALLINT;","  buffer.writeInt16LE(value, 1);","  this.push(buffer);","};","","Writer.prototype[TypeCode.INT] = function writeInt(value) {","  var buffer = new Buffer(5);","  buffer[0] = TypeCode.INT;","  buffer.writeInt32LE(value, 1);","  this.push(buffer);","};","","Writer.prototype[TypeCode.BIGINT] = function writeBigInt(value) {","  var buffer = new Buffer(9);","  buffer[0] = TypeCode.BIGINT;","  bignum.writeInt64LE(buffer, value, 1);","  this.push(buffer);","};","","Writer.prototype[TypeCode.REAL] = function writeReal(value) {","  var buffer = new Buffer(5);","  buffer[0] = TypeCode.REAL;","  buffer.writeFloatLE(value, 1);","  this.push(buffer);","};","","Writer.prototype[TypeCode.DOUBLE] = function writeDouble(value) {","  var buffer = new Buffer(9);","  buffer[0] = TypeCode.DOUBLE;","  buffer.writeDoubleLE(value, 1);","  this.push(buffer);","};","","Writer.prototype[TypeCode.DECIMAL] = function writeDecimal(value) {","  var decimal;","  if (util.isString(value)) {","    decimal = stringToDecimal(value);","  } else if (util.isNumber(value)) {","    decimal = stringToDecimal(value.toExponential());","  } else {","    throw createInputError('DECIMAL');","  }","  var buffer = new Buffer(17);","  buffer[0] = TypeCode.DECIMAL;","  bignum.writeDec128(buffer, decimal, 1);","  this.push(buffer);","};","","Writer.prototype[TypeCode.NSTRING] = function writeNString(value) {","  this.writeCharacters(value, 'utf8');","};","","Writer.prototype[TypeCode.STRING] = function writeString(value) {","  this.writeCharacters(value, 'ascii');","};","","Writer.prototype.writeCharacters = function writeCharacters(value, encoding) {","  var type = encoding === 'ascii' ? TypeCode.STRING : TypeCode.NSTRING;","  var length = Buffer.byteLength(value, encoding);","  var buffer;","  if (length &lt;= 245) {","    buffer = new Buffer(2 + length);","    buffer[0] = type;","    buffer[1] = length;","    buffer.write(value, 2, length, encoding);","  } else if (length &lt;= 32767) {","    buffer = new Buffer(4 + length);","    buffer[0] = type;","    buffer[1] = 246;","    buffer.writeInt16LE(length, 2);","    buffer.write(value, 4, length, encoding);","  } else {","    buffer = new Buffer(6 + length);","    buffer[0] = type;","    buffer[1] = 247;","    buffer.writeInt32LE(length, 2);","    buffer.write(value, 6, length, encoding);","  }","  this.push(buffer);","};","","Writer.prototype[TypeCode.BINARY] = function writeBinary(value) {","  var length = value.length;","  var buffer;","  if (length &lt;= 245) {","    buffer = new Buffer(2 + length);","    buffer[0] = TypeCode.BINARY;","    buffer[1] = length;","    value.copy(buffer, 2);","  } else if (length &lt;= 32767) {","    buffer = new Buffer(4 + length);","    buffer[0] = TypeCode.BINARY;","    buffer[1] = 246;","    buffer.writeInt16LE(length, 2);","    value.copy(buffer, 4);","  } else {","    buffer = new Buffer(6 + length);","    buffer[0] = TypeCode.BINARY;","    buffer[1] = 247;","    buffer.writeInt32LE(length, 2);","    value.copy(buffer, 6);","  }","  this.push(buffer);","};","","Writer.prototype[TypeCode.BLOB] = function writeBLob(value) {","  var buffer = new Buffer(10);","  buffer.fill(0x00);","  buffer[0] = TypeCode.BLOB;","  this.pushLob(buffer, value);","};","","Writer.prototype[TypeCode.CLOB] = function writeCLob(value) {","  var buffer = new Buffer(10);","  buffer.fill(0x00);","  buffer[0] = TypeCode.CLOB;","  if (util.isString(value)) {","    value = new Buffer(value, 'ascii');","  }","  this.pushLob(buffer, value);","};","","Writer.prototype[TypeCode.NCLOB] = function writeNCLob(value) {","  var buffer = new Buffer(10);","  buffer.fill(0x00);","  buffer[0] = TypeCode.NCLOB;","  if (util.isString(value)) {","    value = new Buffer(value, 'utf8');","  }","  this.pushLob(buffer, value);","};","","Writer.prototype[TypeCode.TIME] = function writeTime(value) {","  /* jshint bitwise:false */","  var hours, minutes, milliseconds;","  if (util.isString(value)) {","    var time = value.match(REGEX.TIME);","    if (!time) {","      throw createInputError('TIME');","    }","    hours = ~~time[1];","    minutes = ~~time[2];","    milliseconds = Math.floor(time[3] * 1000);","  } else {","    throw createInputError('TIME');","  }","  var buffer = new Buffer(5);","  buffer[0] = TypeCode.TIME;","  buffer[1] = hours | 0x80;","  buffer[2] = minutes;","  buffer.writeUInt16LE(milliseconds, 3);","  this.push(buffer);","};","","Writer.prototype[TypeCode.DATE] = function writeDate(value) {","  /* jshint bitwise:false */","  var year, month, day;","  if (util.isString(value)) {","    var date = value.match(REGEX.DATE);","    if (!date) {","      throw createInputError('DATE');","    }","    year = ~~date[1];","    month = ~~date[2] - 1;","    day = ~~date[3];","  } else {","    throw createInputError('DATE');","  }","  var buffer = new Buffer(5);","  buffer[0] = TypeCode.DATE;","  buffer.writeUInt16LE(year, 1);","  buffer[2] |= 0x80;","  buffer[3] = month;","  buffer[4] = day;","  this.push(buffer);","};","","Writer.prototype[TypeCode.TIMESTAMP] = function writeTimestamp(value) {","  /* jshint bitwise:false */","  var year, month, day, hours, minutes, milliseconds;","  if (util.isString(value)) {","    var ts = value.match(REGEX.TIMESTAMP);","    if (!ts) {","      throw createInputError('TIMESTAMP');","    }","    year = ~~ts[1];","    month = ~~ts[2] - 1;","    day = ~~ts[3];","    hours = ~~ts[4];","    minutes = ~~ts[5];","    milliseconds = Math.floor(ts[6] * 1000);","  } else {","    throw createInputError('TIMESTAMP');","  }","  var buffer = new Buffer(9);","  buffer[0] = TypeCode.TIMESTAMP;","  buffer.writeUInt16LE(year, 1);","  buffer[2] |= 0x80;","  buffer[3] = month;","  buffer[4] = day;","  buffer[5] = hours | 0x80;","  buffer[6] = minutes;","  buffer.writeUInt16LE(milliseconds, 7);","  this.push(buffer);","};","","Writer.prototype[TypeCode.DAYDATE] = function writeDayDate(value) {","  /* jshint unused:false */","  throw createNotImplementedError();","};","","Writer.prototype[TypeCode.SECONDTIME] = function writeSecondTime(value) {","  /* jshint unused:false */","  throw createNotImplementedError();","};","","Writer.prototype[TypeCode.LONGDATE] = function writeLongDate(value) {","  /* jshint unused:false */","  throw createNotImplementedError();","};","","Writer.prototype[TypeCode.SECONDDATE] = function writeSecondDate(value) {","  /* jshint unused:false */","  throw createNotImplementedError();","};","","function stringToDecimal(str) {","  /* jshint bitwise:false */","  var dec = str.match(REGEX.DECIMAL);","  if (!dec) {","    throw createInputError('DECIMAL');","  }","  var sign = dec[1] === '-' ? -1 : 1;","  var mInt = dec[2] || '0';","  var mFrac = dec[3] || '';","  var exp = ~~dec[4];","  return {","    s: sign,","    m: mInt + mFrac,","    e: exp - mFrac.length","  };","}","","function createInputError(type) {","  return new Error(util.format('Wrong input for %s type', type));","}","","function createNotImplementedError() {","  return new Error('Not implemented yet');","}","","function createReadStreamError() {","  return new Error('Chunk length larger than remaining bytes');","}"];
