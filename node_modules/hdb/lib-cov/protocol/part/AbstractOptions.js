/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['protocol/part/AbstractOptions.js']) {
  _$jscoverage['protocol/part/AbstractOptions.js'] = [];
  _$jscoverage['protocol/part/AbstractOptions.js'][14] = 0;
  _$jscoverage['protocol/part/AbstractOptions.js'][16] = 0;
  _$jscoverage['protocol/part/AbstractOptions.js'][18] = 0;
  _$jscoverage['protocol/part/AbstractOptions.js'][20] = 0;
  _$jscoverage['protocol/part/AbstractOptions.js'][22] = 0;
  _$jscoverage['protocol/part/AbstractOptions.js'][23] = 0;
  _$jscoverage['protocol/part/AbstractOptions.js'][25] = 0;
  _$jscoverage['protocol/part/AbstractOptions.js'][26] = 0;
  _$jscoverage['protocol/part/AbstractOptions.js'][27] = 0;
  _$jscoverage['protocol/part/AbstractOptions.js'][28] = 0;
  _$jscoverage['protocol/part/AbstractOptions.js'][29] = 0;
  _$jscoverage['protocol/part/AbstractOptions.js'][35] = 0;
  _$jscoverage['protocol/part/AbstractOptions.js'][38] = 0;
  _$jscoverage['protocol/part/AbstractOptions.js'][39] = 0;
  _$jscoverage['protocol/part/AbstractOptions.js'][41] = 0;
  _$jscoverage['protocol/part/AbstractOptions.js'][42] = 0;
  _$jscoverage['protocol/part/AbstractOptions.js'][45] = 0;
  _$jscoverage['protocol/part/AbstractOptions.js'][46] = 0;
  _$jscoverage['protocol/part/AbstractOptions.js'][47] = 0;
  _$jscoverage['protocol/part/AbstractOptions.js'][48] = 0;
  _$jscoverage['protocol/part/AbstractOptions.js'][49] = 0;
  _$jscoverage['protocol/part/AbstractOptions.js'][52] = 0;
}
_$jscoverage['protocol/part/AbstractOptions.js'][14]++;
"use strict";
_$jscoverage['protocol/part/AbstractOptions.js'][16]++;
var util = require("../../util");
_$jscoverage['protocol/part/AbstractOptions.js'][18]++;
module.exports = AbstractOptions;
_$jscoverage['protocol/part/AbstractOptions.js'][20]++;
function AbstractOptions() {
}
_$jscoverage['protocol/part/AbstractOptions.js'][22]++;
AbstractOptions.prototype.getOptions = (function getOptions() {
  _$jscoverage['protocol/part/AbstractOptions.js'][23]++;
  var self = this;
  _$jscoverage['protocol/part/AbstractOptions.js'][25]++;
  function getOption(name) {
    _$jscoverage['protocol/part/AbstractOptions.js'][26]++;
    var propertyName = util._2cc(self.PROPERTY_NAMES[name]);
    _$jscoverage['protocol/part/AbstractOptions.js'][27]++;
    var value = self[propertyName];
    _$jscoverage['protocol/part/AbstractOptions.js'][28]++;
    var type = self.TYPES[name];
    _$jscoverage['protocol/part/AbstractOptions.js'][29]++;
    return ({name: name, value: value, type: type});
}
  _$jscoverage['protocol/part/AbstractOptions.js'][35]++;
  return this.KEYS.map(getOption);
});
_$jscoverage['protocol/part/AbstractOptions.js'][38]++;
AbstractOptions.prototype.setOptions = (function setOptions(options) {
  _$jscoverage['protocol/part/AbstractOptions.js'][39]++;
  var self = this;
  _$jscoverage['protocol/part/AbstractOptions.js'][41]++;
  if (! util.isArray(options)) {
    _$jscoverage['protocol/part/AbstractOptions.js'][42]++;
    return;
  }
  _$jscoverage['protocol/part/AbstractOptions.js'][45]++;
  function setOption(option) {
    _$jscoverage['protocol/part/AbstractOptions.js'][46]++;
    var name = option.name;
    _$jscoverage['protocol/part/AbstractOptions.js'][47]++;
    if (self.PROPERTY_NAMES.hasOwnProperty(name)) {
      _$jscoverage['protocol/part/AbstractOptions.js'][48]++;
      var propertyName = util._2cc(self.PROPERTY_NAMES[name]);
      _$jscoverage['protocol/part/AbstractOptions.js'][49]++;
      self[propertyName] = option.value;
    }
}
  _$jscoverage['protocol/part/AbstractOptions.js'][52]++;
  options.forEach(setOption);
});
_$jscoverage['protocol/part/AbstractOptions.js'].source = ["// Copyright 2013 SAP AG.","//","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//","// http: //www.apache.org/licenses/LICENSE-2.0","//","// Unless required by applicable law or agreed to in writing,","// software distributed under the License is distributed on an","// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,","// either express or implied. See the License for the specific","// language governing permissions and limitations under the License.","'use strict';","","var util = require('../../util');","","module.exports = AbstractOptions;","","function AbstractOptions() {}","","AbstractOptions.prototype.getOptions = function getOptions() {","  var self = this;","","  function getOption(name) {","    var propertyName = util._2cc(self.PROPERTY_NAMES[name]);","    var value = self[propertyName];","    var type = self.TYPES[name];","    return {","      name: name,","      value: value,","      type: type","    };","  }","  return this.KEYS.map(getOption);","};","","AbstractOptions.prototype.setOptions = function setOptions(options) {","  var self = this;","","  if (!util.isArray(options)) {","    return;","  }","","  function setOption(option) {","    var name = option.name;","    if (self.PROPERTY_NAMES.hasOwnProperty(name)) {","      var propertyName = util._2cc(self.PROPERTY_NAMES[name]);","      self[propertyName] = option.value;","    }","  }","  options.forEach(setOption);","};"];
