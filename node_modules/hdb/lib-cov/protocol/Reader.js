/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['protocol/Reader.js']) {
  _$jscoverage['protocol/Reader.js'] = [];
  _$jscoverage['protocol/Reader.js'][14] = 0;
  _$jscoverage['protocol/Reader.js'][16] = 0;
  _$jscoverage['protocol/Reader.js'][17] = 0;
  _$jscoverage['protocol/Reader.js'][18] = 0;
  _$jscoverage['protocol/Reader.js'][19] = 0;
  _$jscoverage['protocol/Reader.js'][20] = 0;
  _$jscoverage['protocol/Reader.js'][22] = 0;
  _$jscoverage['protocol/Reader.js'][24] = 0;
  _$jscoverage['protocol/Reader.js'][25] = 0;
  _$jscoverage['protocol/Reader.js'][26] = 0;
  _$jscoverage['protocol/Reader.js'][27] = 0;
  _$jscoverage['protocol/Reader.js'][30] = 0;
  _$jscoverage['protocol/Reader.js'][31] = 0;
  _$jscoverage['protocol/Reader.js'][34] = 0;
  _$jscoverage['protocol/Reader.js'][35] = 0;
  _$jscoverage['protocol/Reader.js'][36] = 0;
  _$jscoverage['protocol/Reader.js'][38] = 0;
  _$jscoverage['protocol/Reader.js'][39] = 0;
  _$jscoverage['protocol/Reader.js'][40] = 0;
  _$jscoverage['protocol/Reader.js'][43] = 0;
  _$jscoverage['protocol/Reader.js'][44] = 0;
  _$jscoverage['protocol/Reader.js'][45] = 0;
  _$jscoverage['protocol/Reader.js'][47] = 0;
  _$jscoverage['protocol/Reader.js'][48] = 0;
  _$jscoverage['protocol/Reader.js'][49] = 0;
  _$jscoverage['protocol/Reader.js'][52] = 0;
  _$jscoverage['protocol/Reader.js'][53] = 0;
  _$jscoverage['protocol/Reader.js'][54] = 0;
  _$jscoverage['protocol/Reader.js'][56] = 0;
  _$jscoverage['protocol/Reader.js'][57] = 0;
  _$jscoverage['protocol/Reader.js'][58] = 0;
  _$jscoverage['protocol/Reader.js'][61] = 0;
  _$jscoverage['protocol/Reader.js'][62] = 0;
  _$jscoverage['protocol/Reader.js'][63] = 0;
  _$jscoverage['protocol/Reader.js'][65] = 0;
  _$jscoverage['protocol/Reader.js'][66] = 0;
  _$jscoverage['protocol/Reader.js'][67] = 0;
  _$jscoverage['protocol/Reader.js'][70] = 0;
  _$jscoverage['protocol/Reader.js'][71] = 0;
  _$jscoverage['protocol/Reader.js'][74] = 0;
  _$jscoverage['protocol/Reader.js'][75] = 0;
  _$jscoverage['protocol/Reader.js'][78] = 0;
  _$jscoverage['protocol/Reader.js'][79] = 0;
  _$jscoverage['protocol/Reader.js'][80] = 0;
  _$jscoverage['protocol/Reader.js'][82] = 0;
  _$jscoverage['protocol/Reader.js'][84] = 0;
  _$jscoverage['protocol/Reader.js'][85] = 0;
  _$jscoverage['protocol/Reader.js'][86] = 0;
  _$jscoverage['protocol/Reader.js'][88] = 0;
  _$jscoverage['protocol/Reader.js'][89] = 0;
  _$jscoverage['protocol/Reader.js'][90] = 0;
  _$jscoverage['protocol/Reader.js'][92] = 0;
  _$jscoverage['protocol/Reader.js'][93] = 0;
  _$jscoverage['protocol/Reader.js'][94] = 0;
  _$jscoverage['protocol/Reader.js'][96] = 0;
  _$jscoverage['protocol/Reader.js'][97] = 0;
  _$jscoverage['protocol/Reader.js'][99] = 0;
  _$jscoverage['protocol/Reader.js'][100] = 0;
  _$jscoverage['protocol/Reader.js'][103] = 0;
  _$jscoverage['protocol/Reader.js'][105] = 0;
  _$jscoverage['protocol/Reader.js'][107] = 0;
  _$jscoverage['protocol/Reader.js'][108] = 0;
  _$jscoverage['protocol/Reader.js'][109] = 0;
  _$jscoverage['protocol/Reader.js'][111] = 0;
  _$jscoverage['protocol/Reader.js'][112] = 0;
  _$jscoverage['protocol/Reader.js'][113] = 0;
  _$jscoverage['protocol/Reader.js'][114] = 0;
  _$jscoverage['protocol/Reader.js'][115] = 0;
  _$jscoverage['protocol/Reader.js'][116] = 0;
  _$jscoverage['protocol/Reader.js'][119] = 0;
  _$jscoverage['protocol/Reader.js'][120] = 0;
  _$jscoverage['protocol/Reader.js'][121] = 0;
  _$jscoverage['protocol/Reader.js'][126] = 0;
  _$jscoverage['protocol/Reader.js'][128] = 0;
  _$jscoverage['protocol/Reader.js'][130] = 0;
  _$jscoverage['protocol/Reader.js'][131] = 0;
  _$jscoverage['protocol/Reader.js'][132] = 0;
  _$jscoverage['protocol/Reader.js'][134] = 0;
  _$jscoverage['protocol/Reader.js'][135] = 0;
  _$jscoverage['protocol/Reader.js'][136] = 0;
  _$jscoverage['protocol/Reader.js'][137] = 0;
  _$jscoverage['protocol/Reader.js'][140] = 0;
  _$jscoverage['protocol/Reader.js'][141] = 0;
  _$jscoverage['protocol/Reader.js'][146] = 0;
  _$jscoverage['protocol/Reader.js'][147] = 0;
  _$jscoverage['protocol/Reader.js'][148] = 0;
  _$jscoverage['protocol/Reader.js'][149] = 0;
  _$jscoverage['protocol/Reader.js'][150] = 0;
  _$jscoverage['protocol/Reader.js'][151] = 0;
  _$jscoverage['protocol/Reader.js'][153] = 0;
  _$jscoverage['protocol/Reader.js'][155] = 0;
  _$jscoverage['protocol/Reader.js'][156] = 0;
  _$jscoverage['protocol/Reader.js'][158] = 0;
  _$jscoverage['protocol/Reader.js'][161] = 0;
  _$jscoverage['protocol/Reader.js'][162] = 0;
  _$jscoverage['protocol/Reader.js'][163] = 0;
  _$jscoverage['protocol/Reader.js'][164] = 0;
  _$jscoverage['protocol/Reader.js'][165] = 0;
  _$jscoverage['protocol/Reader.js'][167] = 0;
  _$jscoverage['protocol/Reader.js'][170] = 0;
  _$jscoverage['protocol/Reader.js'][171] = 0;
  _$jscoverage['protocol/Reader.js'][172] = 0;
  _$jscoverage['protocol/Reader.js'][173] = 0;
  _$jscoverage['protocol/Reader.js'][174] = 0;
  _$jscoverage['protocol/Reader.js'][176] = 0;
  _$jscoverage['protocol/Reader.js'][179] = 0;
  _$jscoverage['protocol/Reader.js'][180] = 0;
  _$jscoverage['protocol/Reader.js'][181] = 0;
  _$jscoverage['protocol/Reader.js'][182] = 0;
  _$jscoverage['protocol/Reader.js'][183] = 0;
  _$jscoverage['protocol/Reader.js'][185] = 0;
  _$jscoverage['protocol/Reader.js'][188] = 0;
  _$jscoverage['protocol/Reader.js'][189] = 0;
  _$jscoverage['protocol/Reader.js'][190] = 0;
  _$jscoverage['protocol/Reader.js'][191] = 0;
  _$jscoverage['protocol/Reader.js'][192] = 0;
  _$jscoverage['protocol/Reader.js'][194] = 0;
  _$jscoverage['protocol/Reader.js'][195] = 0;
  _$jscoverage['protocol/Reader.js'][196] = 0;
  _$jscoverage['protocol/Reader.js'][199] = 0;
  _$jscoverage['protocol/Reader.js'][203] = 0;
  _$jscoverage['protocol/Reader.js'][204] = 0;
  _$jscoverage['protocol/Reader.js'][207] = 0;
  _$jscoverage['protocol/Reader.js'][208] = 0;
  _$jscoverage['protocol/Reader.js'][211] = 0;
  _$jscoverage['protocol/Reader.js'][212] = 0;
  _$jscoverage['protocol/Reader.js'][215] = 0;
  _$jscoverage['protocol/Reader.js'][218] = 0;
  _$jscoverage['protocol/Reader.js'][219] = 0;
  _$jscoverage['protocol/Reader.js'][221] = 0;
  _$jscoverage['protocol/Reader.js'][222] = 0;
  _$jscoverage['protocol/Reader.js'][224] = 0;
  _$jscoverage['protocol/Reader.js'][225] = 0;
  _$jscoverage['protocol/Reader.js'][228] = 0;
  _$jscoverage['protocol/Reader.js'][230] = 0;
  _$jscoverage['protocol/Reader.js'][231] = 0;
  _$jscoverage['protocol/Reader.js'][233] = 0;
  _$jscoverage['protocol/Reader.js'][234] = 0;
  _$jscoverage['protocol/Reader.js'][236] = 0;
  _$jscoverage['protocol/Reader.js'][237] = 0;
  _$jscoverage['protocol/Reader.js'][239] = 0;
  _$jscoverage['protocol/Reader.js'][240] = 0;
  _$jscoverage['protocol/Reader.js'][242] = 0;
  _$jscoverage['protocol/Reader.js'][243] = 0;
  _$jscoverage['protocol/Reader.js'][244] = 0;
  _$jscoverage['protocol/Reader.js'][245] = 0;
  _$jscoverage['protocol/Reader.js'][247] = 0;
  _$jscoverage['protocol/Reader.js'][250] = 0;
  _$jscoverage['protocol/Reader.js'][254] = 0;
  _$jscoverage['protocol/Reader.js'][255] = 0;
  _$jscoverage['protocol/Reader.js'][263] = 0;
  _$jscoverage['protocol/Reader.js'][264] = 0;
  _$jscoverage['protocol/Reader.js'][266] = 0;
  _$jscoverage['protocol/Reader.js'][267] = 0;
  _$jscoverage['protocol/Reader.js'][268] = 0;
  _$jscoverage['protocol/Reader.js'][271] = 0;
  _$jscoverage['protocol/Reader.js'][272] = 0;
  _$jscoverage['protocol/Reader.js'][276] = 0;
  _$jscoverage['protocol/Reader.js'][277] = 0;
  _$jscoverage['protocol/Reader.js'][279] = 0;
  _$jscoverage['protocol/Reader.js'][280] = 0;
  _$jscoverage['protocol/Reader.js'][281] = 0;
  _$jscoverage['protocol/Reader.js'][284] = 0;
  _$jscoverage['protocol/Reader.js'][285] = 0;
  _$jscoverage['protocol/Reader.js'][286] = 0;
  _$jscoverage['protocol/Reader.js'][287] = 0;
  _$jscoverage['protocol/Reader.js'][289] = 0;
  _$jscoverage['protocol/Reader.js'][291] = 0;
  _$jscoverage['protocol/Reader.js'][292] = 0;
  _$jscoverage['protocol/Reader.js'][295] = 0;
  _$jscoverage['protocol/Reader.js'][296] = 0;
  _$jscoverage['protocol/Reader.js'][297] = 0;
  _$jscoverage['protocol/Reader.js'][298] = 0;
  _$jscoverage['protocol/Reader.js'][299] = 0;
  _$jscoverage['protocol/Reader.js'][300] = 0;
  _$jscoverage['protocol/Reader.js'][301] = 0;
  _$jscoverage['protocol/Reader.js'][303] = 0;
  _$jscoverage['protocol/Reader.js'][306] = 0;
  _$jscoverage['protocol/Reader.js'][307] = 0;
  _$jscoverage['protocol/Reader.js'][311] = 0;
  _$jscoverage['protocol/Reader.js'][315] = 0;
}
_$jscoverage['protocol/Reader.js'][14]++;
"use strict";
_$jscoverage['protocol/Reader.js'][16]++;
var util = require("../util");
_$jscoverage['protocol/Reader.js'][17]++;
var bignum = util.bignum;
_$jscoverage['protocol/Reader.js'][18]++;
var common = require("./common");
_$jscoverage['protocol/Reader.js'][19]++;
var LobOptions = common.LobOptions;
_$jscoverage['protocol/Reader.js'][20]++;
var LobSourceType = common.LobSourceType;
_$jscoverage['protocol/Reader.js'][22]++;
module.exports = Reader;
_$jscoverage['protocol/Reader.js'][24]++;
function Reader(buffer, lobFactoy) {
  _$jscoverage['protocol/Reader.js'][25]++;
  this.buffer = buffer;
  _$jscoverage['protocol/Reader.js'][26]++;
  this.offset = 0;
  _$jscoverage['protocol/Reader.js'][27]++;
  this.lobFactoy = lobFactoy;
}
_$jscoverage['protocol/Reader.js'][30]++;
Reader.prototype.hasMore = (function hasMore() {
  _$jscoverage['protocol/Reader.js'][31]++;
  return this.offset < this.buffer.length;
});
_$jscoverage['protocol/Reader.js'][34]++;
Reader.prototype.readTinyInt = (function readTinyInt() {
  _$jscoverage['protocol/Reader.js'][35]++;
  if (this.buffer[this.offset++] === 0) {
    _$jscoverage['protocol/Reader.js'][36]++;
    return null;
  }
  _$jscoverage['protocol/Reader.js'][38]++;
  var value = this.buffer.readUInt8(this.offset, true);
  _$jscoverage['protocol/Reader.js'][39]++;
  this.offset += 1;
  _$jscoverage['protocol/Reader.js'][40]++;
  return value;
});
_$jscoverage['protocol/Reader.js'][43]++;
Reader.prototype.readSmallInt = (function readSmallInt() {
  _$jscoverage['protocol/Reader.js'][44]++;
  if (this.buffer[this.offset++] === 0) {
    _$jscoverage['protocol/Reader.js'][45]++;
    return null;
  }
  _$jscoverage['protocol/Reader.js'][47]++;
  var value = this.buffer.readInt16LE(this.offset, true);
  _$jscoverage['protocol/Reader.js'][48]++;
  this.offset += 2;
  _$jscoverage['protocol/Reader.js'][49]++;
  return value;
});
_$jscoverage['protocol/Reader.js'][52]++;
Reader.prototype.readInt = (function readInt() {
  _$jscoverage['protocol/Reader.js'][53]++;
  if (this.buffer[this.offset++] === 0) {
    _$jscoverage['protocol/Reader.js'][54]++;
    return null;
  }
  _$jscoverage['protocol/Reader.js'][56]++;
  var value = this.buffer.readInt32LE(this.offset, true);
  _$jscoverage['protocol/Reader.js'][57]++;
  this.offset += 4;
  _$jscoverage['protocol/Reader.js'][58]++;
  return value;
});
_$jscoverage['protocol/Reader.js'][61]++;
Reader.prototype.readBigInt = (function readBigInt() {
  _$jscoverage['protocol/Reader.js'][62]++;
  if (this.buffer[this.offset++] === 0) {
    _$jscoverage['protocol/Reader.js'][63]++;
    return null;
  }
  _$jscoverage['protocol/Reader.js'][65]++;
  var value = bignum.readInt64LE(this.buffer, this.offset);
  _$jscoverage['protocol/Reader.js'][66]++;
  this.offset += 8;
  _$jscoverage['protocol/Reader.js'][67]++;
  return value;
});
_$jscoverage['protocol/Reader.js'][70]++;
Reader.prototype.readString = (function readString() {
  _$jscoverage['protocol/Reader.js'][71]++;
  return this.readBytes("utf-8");
});
_$jscoverage['protocol/Reader.js'][74]++;
Reader.prototype.readBinary = (function readBinary() {
  _$jscoverage['protocol/Reader.js'][75]++;
  return this.readBytes();
});
_$jscoverage['protocol/Reader.js'][78]++;
Reader.prototype.readBytes = (function readBytes(encoding) {
  _$jscoverage['protocol/Reader.js'][79]++;
  var length = this.buffer[this.offset++];
  _$jscoverage['protocol/Reader.js'][80]++;
  switch (length) {
  case 255:
    _$jscoverage['protocol/Reader.js'][82]++;
    return null;
  case 246:
    _$jscoverage['protocol/Reader.js'][84]++;
    length = this.buffer.readInt16LE(this.offset, true);
    _$jscoverage['protocol/Reader.js'][85]++;
    this.offset += 2;
    _$jscoverage['protocol/Reader.js'][86]++;
    break;
  case 247:
    _$jscoverage['protocol/Reader.js'][88]++;
    length = this.buffer.readInt32LE(this.offset, true);
    _$jscoverage['protocol/Reader.js'][89]++;
    this.offset += 4;
    _$jscoverage['protocol/Reader.js'][90]++;
    break;
  }
  _$jscoverage['protocol/Reader.js'][92]++;
  var value;
  _$jscoverage['protocol/Reader.js'][93]++;
  if (encoding) {
    _$jscoverage['protocol/Reader.js'][94]++;
    value = this.buffer.toString(encoding, this.offset, this.offset + length);
  }
  else {
    _$jscoverage['protocol/Reader.js'][96]++;
    value = new Buffer(length);
    _$jscoverage['protocol/Reader.js'][97]++;
    this.buffer.copy(value, 0, this.offset, this.offset + length);
  }
  _$jscoverage['protocol/Reader.js'][99]++;
  this.offset += length;
  _$jscoverage['protocol/Reader.js'][100]++;
  return value;
});
_$jscoverage['protocol/Reader.js'][103]++;
Reader.prototype.readDate = (function readDate() {
  _$jscoverage['protocol/Reader.js'][105]++;
  var high = this.buffer[this.offset + 1];
  _$jscoverage['protocol/Reader.js'][107]++;
  if (! (high & 128)) {
    _$jscoverage['protocol/Reader.js'][108]++;
    this.offset += 4;
    _$jscoverage['protocol/Reader.js'][109]++;
    return null;
  }
  _$jscoverage['protocol/Reader.js'][111]++;
  var year = this.buffer[this.offset];
  _$jscoverage['protocol/Reader.js'][112]++;
  this.offset += 2;
  _$jscoverage['protocol/Reader.js'][113]++;
  var month = this.buffer[this.offset] + 1;
  _$jscoverage['protocol/Reader.js'][114]++;
  this.offset += 1;
  _$jscoverage['protocol/Reader.js'][115]++;
  var day = this.buffer[this.offset];
  _$jscoverage['protocol/Reader.js'][116]++;
  this.offset += 1;
  _$jscoverage['protocol/Reader.js'][119]++;
  high &= 63;
  _$jscoverage['protocol/Reader.js'][120]++;
  year |= high << 8;
  _$jscoverage['protocol/Reader.js'][121]++;
  return util.lpad4(year) + "-" + util.lpad2(month) + "-" + util.lpad2(day);
});
_$jscoverage['protocol/Reader.js'][126]++;
Reader.prototype.readTime = (function readTime() {
  _$jscoverage['protocol/Reader.js'][128]++;
  var hour = this.buffer[this.offset];
  _$jscoverage['protocol/Reader.js'][130]++;
  if (! (hour & 128)) {
    _$jscoverage['protocol/Reader.js'][131]++;
    this.offset += 4;
    _$jscoverage['protocol/Reader.js'][132]++;
    return null;
  }
  _$jscoverage['protocol/Reader.js'][134]++;
  var min = this.buffer[this.offset + 1];
  _$jscoverage['protocol/Reader.js'][135]++;
  this.offset += 2;
  _$jscoverage['protocol/Reader.js'][136]++;
  var msec = this.buffer.readUInt16LE(this.offset, true);
  _$jscoverage['protocol/Reader.js'][137]++;
  this.offset += 2;
  _$jscoverage['protocol/Reader.js'][140]++;
  hour &= 127;
  _$jscoverage['protocol/Reader.js'][141]++;
  return util.lpad2(hour) + ":" + util.lpad2(min) + ":" + util.lpad2(msec / 1000);
});
_$jscoverage['protocol/Reader.js'][146]++;
Reader.prototype.readTimestamp = (function readTimestamp() {
  _$jscoverage['protocol/Reader.js'][147]++;
  var date = this.readDate();
  _$jscoverage['protocol/Reader.js'][148]++;
  var time = this.readTime();
  _$jscoverage['protocol/Reader.js'][149]++;
  if (date) {
    _$jscoverage['protocol/Reader.js'][150]++;
    if (time) {
      _$jscoverage['protocol/Reader.js'][151]++;
      return date + "T" + time;
    }
    _$jscoverage['protocol/Reader.js'][153]++;
    return date + "T00:00:00";
  }
  _$jscoverage['protocol/Reader.js'][155]++;
  if (time) {
    _$jscoverage['protocol/Reader.js'][156]++;
    return "0001-01-01T" + time;
  }
  _$jscoverage['protocol/Reader.js'][158]++;
  return null;
});
_$jscoverage['protocol/Reader.js'][161]++;
Reader.prototype.readDayDate = (function readDayDate() {
  _$jscoverage['protocol/Reader.js'][162]++;
  var value = this.buffer.readInt32LE(this.offset, true);
  _$jscoverage['protocol/Reader.js'][163]++;
  this.offset += 4;
  _$jscoverage['protocol/Reader.js'][164]++;
  if (value === 3652062 || value === 0) {
    _$jscoverage['protocol/Reader.js'][165]++;
    return null;
  }
  _$jscoverage['protocol/Reader.js'][167]++;
  return value - 1;
});
_$jscoverage['protocol/Reader.js'][170]++;
Reader.prototype.readSecondTime = (function readSecondTime() {
  _$jscoverage['protocol/Reader.js'][171]++;
  var value = this.buffer.readInt32LE(this.offset, true);
  _$jscoverage['protocol/Reader.js'][172]++;
  this.offset += 4;
  _$jscoverage['protocol/Reader.js'][173]++;
  if (value === 86402 || value === 0) {
    _$jscoverage['protocol/Reader.js'][174]++;
    return null;
  }
  _$jscoverage['protocol/Reader.js'][176]++;
  return value - 1;
});
_$jscoverage['protocol/Reader.js'][179]++;
Reader.prototype.readSecondDate = (function readSecondDate() {
  _$jscoverage['protocol/Reader.js'][180]++;
  var value = bignum.readInt64LE(this.buffer, this.offset);
  _$jscoverage['protocol/Reader.js'][181]++;
  this.offset += 8;
  _$jscoverage['protocol/Reader.js'][182]++;
  if (value === 315538070401 || value === 0) {
    _$jscoverage['protocol/Reader.js'][183]++;
    return null;
  }
  _$jscoverage['protocol/Reader.js'][185]++;
  return value - 1;
});
_$jscoverage['protocol/Reader.js'][188]++;
Reader.prototype.readLongDate = (function readLongDate() {
  _$jscoverage['protocol/Reader.js'][189]++;
  var value = bignum.readInt64LE(this.buffer, this.offset);
  _$jscoverage['protocol/Reader.js'][190]++;
  this.offset += 8;
  _$jscoverage['protocol/Reader.js'][191]++;
  if (value === "3155380704000000001" || value === 0) {
    _$jscoverage['protocol/Reader.js'][192]++;
    return null;
  }
  _$jscoverage['protocol/Reader.js'][194]++;
  if (typeof value === "string") {
    _$jscoverage['protocol/Reader.js'][195]++;
    var index = value.length - 7;
    _$jscoverage['protocol/Reader.js'][196]++;
    return value.substring(0, index) + util.lpad7(value.substring(index) - 1);
  }
  else {
    _$jscoverage['protocol/Reader.js'][199]++;
    return value - 1;
  }
});
_$jscoverage['protocol/Reader.js'][203]++;
Reader.prototype.readBLob = (function readBLob() {
  _$jscoverage['protocol/Reader.js'][204]++;
  return this.readLob(1);
});
_$jscoverage['protocol/Reader.js'][207]++;
Reader.prototype.readCLob = (function readCLob() {
  _$jscoverage['protocol/Reader.js'][208]++;
  return this.readLob(2);
});
_$jscoverage['protocol/Reader.js'][211]++;
Reader.prototype.readNCLob = (function readNCLob() {
  _$jscoverage['protocol/Reader.js'][212]++;
  return this.readLob(3);
});
_$jscoverage['protocol/Reader.js'][215]++;
Reader.prototype.readLob = (function readLob(type) {
  _$jscoverage['protocol/Reader.js'][218]++;
  type = this.buffer[this.offset] || type;
  _$jscoverage['protocol/Reader.js'][219]++;
  this.offset += 1;
  _$jscoverage['protocol/Reader.js'][221]++;
  var options = this.buffer[this.offset];
  _$jscoverage['protocol/Reader.js'][222]++;
  this.offset += 1;
  _$jscoverage['protocol/Reader.js'][224]++;
  if (options & LobOptions.NULL_INDICATOR) {
    _$jscoverage['protocol/Reader.js'][225]++;
    return null;
  }
  _$jscoverage['protocol/Reader.js'][228]++;
  this.offset += 2;
  _$jscoverage['protocol/Reader.js'][230]++;
  var charLength = bignum.readInt64LE(this.buffer, this.offset);
  _$jscoverage['protocol/Reader.js'][231]++;
  this.offset += 8;
  _$jscoverage['protocol/Reader.js'][233]++;
  var byteLength = bignum.readInt64LE(this.buffer, this.offset);
  _$jscoverage['protocol/Reader.js'][234]++;
  this.offset += 8;
  _$jscoverage['protocol/Reader.js'][236]++;
  var locatorId = this.buffer.slice(this.offset, this.offset + 8);
  _$jscoverage['protocol/Reader.js'][237]++;
  this.offset += 8;
  _$jscoverage['protocol/Reader.js'][239]++;
  var chunkLength = this.buffer.readInt32LE(this.offset, true);
  _$jscoverage['protocol/Reader.js'][240]++;
  this.offset += 4;
  _$jscoverage['protocol/Reader.js'][242]++;
  var chunk = null;
  _$jscoverage['protocol/Reader.js'][243]++;
  if (chunkLength > 0) {
    _$jscoverage['protocol/Reader.js'][244]++;
    chunk = this.buffer.slice(this.offset, this.offset + chunkLength);
    _$jscoverage['protocol/Reader.js'][245]++;
    this.offset += chunkLength;
  }
  else {
    _$jscoverage['protocol/Reader.js'][247]++;
    chunk = new Buffer(0);
  }
  _$jscoverage['protocol/Reader.js'][250]++;
  return this.lobFactoy.createLob(new LobDescriptor(type, locatorId, options, chunk));
});
_$jscoverage['protocol/Reader.js'][254]++;
Reader.prototype.readDouble = (function readDouble() {
  _$jscoverage['protocol/Reader.js'][255]++;
  if (this.buffer[this.offset] === 255 && this.buffer[this.offset + 1] === 255 && this.buffer[this.offset + 2] === 255 && this.buffer[this.offset + 3] === 255 && this.buffer[this.offset + 4] === 255 && this.buffer[this.offset + 5] === 255 && this.buffer[this.offset + 6] === 255 && this.buffer[this.offset + 7] === 255) {
    _$jscoverage['protocol/Reader.js'][263]++;
    this.offset += 8;
    _$jscoverage['protocol/Reader.js'][264]++;
    return null;
  }
  _$jscoverage['protocol/Reader.js'][266]++;
  var value = this.buffer.readDoubleLE(this.offset, true);
  _$jscoverage['protocol/Reader.js'][267]++;
  this.offset += 8;
  _$jscoverage['protocol/Reader.js'][268]++;
  return value;
});
_$jscoverage['protocol/Reader.js'][271]++;
Reader.prototype.readFloat = (function readFloat() {
  _$jscoverage['protocol/Reader.js'][272]++;
  if (this.buffer[this.offset] === 255 && this.buffer[this.offset + 1] === 255 && this.buffer[this.offset + 2] === 255 && this.buffer[this.offset + 3] === 255) {
    _$jscoverage['protocol/Reader.js'][276]++;
    this.offset += 4;
    _$jscoverage['protocol/Reader.js'][277]++;
    return null;
  }
  _$jscoverage['protocol/Reader.js'][279]++;
  var value = this.buffer.readFloatLE(this.offset, true);
  _$jscoverage['protocol/Reader.js'][280]++;
  this.offset += 4;
  _$jscoverage['protocol/Reader.js'][281]++;
  return value;
});
_$jscoverage['protocol/Reader.js'][284]++;
Reader.prototype.readDecimal = (function readDecimal(fraction) {
  _$jscoverage['protocol/Reader.js'][285]++;
  var value;
  _$jscoverage['protocol/Reader.js'][286]++;
  if (fraction > 34) {
    _$jscoverage['protocol/Reader.js'][287]++;
    value = bignum.readDecFloat(this.buffer, this.offset);
  }
  else {
    _$jscoverage['protocol/Reader.js'][289]++;
    value = bignum.readDecFixed(this.buffer, this.offset, fraction);
  }
  _$jscoverage['protocol/Reader.js'][291]++;
  this.offset += 16;
  _$jscoverage['protocol/Reader.js'][292]++;
  return value;
});
_$jscoverage['protocol/Reader.js'][295]++;
function LobDescriptor(type, locatorId, options, chunk) {
  _$jscoverage['protocol/Reader.js'][296]++;
  this.locatorId = locatorId;
  _$jscoverage['protocol/Reader.js'][297]++;
  this.options = options;
  _$jscoverage['protocol/Reader.js'][298]++;
  if (Buffer.isBuffer(chunk)) {
    _$jscoverage['protocol/Reader.js'][299]++;
    this.chunk = chunk;
    _$jscoverage['protocol/Reader.js'][300]++;
    if (type === LobSourceType.CLOB || type === LobSourceType.NCLOB) {
      _$jscoverage['protocol/Reader.js'][301]++;
      this.size = chunk.toString("utf-8").length;
    }
    else {
      _$jscoverage['protocol/Reader.js'][303]++;
      this.size = chunk.length;
    }
  }
  else {
    _$jscoverage['protocol/Reader.js'][306]++;
    this.chunk = undefined;
    _$jscoverage['protocol/Reader.js'][307]++;
    this.size = 0;
  }
}
_$jscoverage['protocol/Reader.js'][311]++;
Object.defineProperties(LobDescriptor.prototype, {isLast: {get: (function isLast() {
  _$jscoverage['protocol/Reader.js'][315]++;
  return ! ! (this.options & LobOptions.LAST_DATA);
})}});
_$jscoverage['protocol/Reader.js'].source = ["// Copyright 2013 SAP AG.","//","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//","// http: //www.apache.org/licenses/LICENSE-2.0","//","// Unless required by applicable law or agreed to in writing,","// software distributed under the License is distributed on an","// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,","// either express or implied. See the License for the specific","// language governing permissions and limitations under the License.","'use strict';","","var util = require('../util');","var bignum = util.bignum;","var common = require('./common');","var LobOptions = common.LobOptions;","var LobSourceType = common.LobSourceType;","","module.exports = Reader;","","function Reader(buffer, lobFactoy) {","  this.buffer = buffer;","  this.offset = 0;","  this.lobFactoy = lobFactoy;","}","","Reader.prototype.hasMore = function hasMore() {","  return this.offset &lt; this.buffer.length;","};","","Reader.prototype.readTinyInt = function readTinyInt() {","  if (this.buffer[this.offset++] === 0x00) {","    return null;","  }","  var value = this.buffer.readUInt8(this.offset, true);","  this.offset += 1;","  return value;","};","","Reader.prototype.readSmallInt = function readSmallInt() {","  if (this.buffer[this.offset++] === 0x00) {","    return null;","  }","  var value = this.buffer.readInt16LE(this.offset, true);","  this.offset += 2;","  return value;","};","","Reader.prototype.readInt = function readInt() {","  if (this.buffer[this.offset++] === 0x00) {","    return null;","  }","  var value = this.buffer.readInt32LE(this.offset, true);","  this.offset += 4;","  return value;","};","","Reader.prototype.readBigInt = function readBigInt() {","  if (this.buffer[this.offset++] === 0x00) {","    return null;","  }","  var value = bignum.readInt64LE(this.buffer, this.offset);","  this.offset += 8;","  return value;","};","","Reader.prototype.readString = function readString() {","  return this.readBytes('utf-8');","};","","Reader.prototype.readBinary = function readBinary() {","  return this.readBytes();","};","","Reader.prototype.readBytes = function readBytes(encoding) {","  var length = this.buffer[this.offset++];","  switch (length) {","  case 0xff:","    return null;","  case 0xf6:","    length = this.buffer.readInt16LE(this.offset, true);","    this.offset += 2;","    break;","  case 0xf7:","    length = this.buffer.readInt32LE(this.offset, true);","    this.offset += 4;","    break;","  }","  var value;","  if (encoding) {","    value = this.buffer.toString(encoding, this.offset, this.offset + length);","  } else {","    value = new Buffer(length);","    this.buffer.copy(value, 0, this.offset, this.offset + length);","  }","  this.offset += length;","  return value;","};","","Reader.prototype.readDate = function readDate() {","  /* jshint bitwise:false */","  var high = this.buffer[this.offset + 1];","  // msb not set ==&gt; null","  if (!(high &amp; 0x80)) {","    this.offset += 4;","    return null;","  }","  var year = this.buffer[this.offset];","  this.offset += 2;","  var month = this.buffer[this.offset] + 1;","  this.offset += 1;","  var day = this.buffer[this.offset];","  this.offset += 1;","  // msb set ==&gt; not null","  // unset msb and second most sb","  high &amp;= 0x3f;","  year |= high &lt;&lt; 8;","  return util.lpad4(year) + '-' +","    util.lpad2(month) + '-' +","    util.lpad2(day);","};","","Reader.prototype.readTime = function readTime() {","  /* jshint bitwise:false */","  var hour = this.buffer[this.offset];","  // msb not set ==&gt; null","  if (!(hour &amp; 0x80)) {","    this.offset += 4;","    return null;","  }","  var min = this.buffer[this.offset + 1];","  this.offset += 2;","  var msec = this.buffer.readUInt16LE(this.offset, true);","  this.offset += 2;","  // msb set ==&gt; not null","  // unset msb","  hour &amp;= 0x7f;","  return util.lpad2(hour) + ':' +","    util.lpad2(min) + ':' +","    util.lpad2(msec / 1000);","};","","Reader.prototype.readTimestamp = function readTimestamp() {","  var date = this.readDate();","  var time = this.readTime();","  if (date) {","    if (time) {","      return date + 'T' + time;","    }","    return date + 'T00:00:00';","  }","  if (time) {","    return '0001-01-01T' + time;","  }","  return null;","};","","Reader.prototype.readDayDate = function readDayDate() {","  var value = this.buffer.readInt32LE(this.offset, true);","  this.offset += 4;","  if (value === 3652062 || value === 0) {","    return null;","  }","  return value - 1;","};","","Reader.prototype.readSecondTime = function readSecondTime() {","  var value = this.buffer.readInt32LE(this.offset, true);","  this.offset += 4;","  if (value === 86402 || value === 0) {","    return null;","  }","  return value - 1;","};","","Reader.prototype.readSecondDate = function readSecondDate() {","  var value = bignum.readInt64LE(this.buffer, this.offset);","  this.offset += 8;","  if (value === 315538070401 || value === 0) {","    return null;","  }","  return value - 1;","};","","Reader.prototype.readLongDate = function readLongDate() {","  var value = bignum.readInt64LE(this.buffer, this.offset);","  this.offset += 8;","  if (value === '3155380704000000001' || value === 0) {","    return null;","  }","  if (typeof value === 'string') {","    var index = value.length - 7;","    return value.substring(0, index) + util.lpad7(value.substring(index) -","      1);","  } else {","    return value - 1;","  }","};","","Reader.prototype.readBLob = function readBLob() {","  return this.readLob(1);","};","","Reader.prototype.readCLob = function readCLob() {","  return this.readLob(2);","};","","Reader.prototype.readNCLob = function readNCLob() {","  return this.readLob(3);","};","","Reader.prototype.readLob = function readLob(type) {","  /* jshint bitwise:false, unused:false */","  // offset 0","  type = this.buffer[this.offset] || type;","  this.offset += 1;","  // offset 1","  var options = this.buffer[this.offset];","  this.offset += 1;","  // offset 2","  if (options &amp; LobOptions.NULL_INDICATOR) {","    return null;","  }","  // skip 2 byte filler","  this.offset += 2;","  // offset 4","  var charLength = bignum.readInt64LE(this.buffer, this.offset);","  this.offset += 8;","  // offset 12","  var byteLength = bignum.readInt64LE(this.buffer, this.offset);","  this.offset += 8;","  // offset 20","  var locatorId = this.buffer.slice(this.offset, this.offset + 8);","  this.offset += 8;","  // offset 28","  var chunkLength = this.buffer.readInt32LE(this.offset, true);","  this.offset += 4;","  // offset 32","  var chunk = null;","  if (chunkLength &gt; 0) {","    chunk = this.buffer.slice(this.offset, this.offset + chunkLength);","    this.offset += chunkLength;","  } else {","    chunk = new Buffer(0);","  }","  //if (!byteLength &amp;&amp; !charLength) { return null; }","  return this.lobFactoy.createLob(new LobDescriptor(type, locatorId, options,","    chunk));","};","","Reader.prototype.readDouble = function readDouble() {","  if (this.buffer[this.offset] === 0xff &amp;&amp;","    this.buffer[this.offset + 1] === 0xff &amp;&amp;","    this.buffer[this.offset + 2] === 0xff &amp;&amp;","    this.buffer[this.offset + 3] === 0xff &amp;&amp;","    this.buffer[this.offset + 4] === 0xff &amp;&amp;","    this.buffer[this.offset + 5] === 0xff &amp;&amp;","    this.buffer[this.offset + 6] === 0xff &amp;&amp;","    this.buffer[this.offset + 7] === 0xff) {","    this.offset += 8;","    return null;","  }","  var value = this.buffer.readDoubleLE(this.offset, true);","  this.offset += 8;","  return value;","};","","Reader.prototype.readFloat = function readFloat() {","  if (this.buffer[this.offset] === 0xff &amp;&amp;","    this.buffer[this.offset + 1] === 0xff &amp;&amp;","    this.buffer[this.offset + 2] === 0xff &amp;&amp;","    this.buffer[this.offset + 3] === 0xff) {","    this.offset += 4;","    return null;","  }","  var value = this.buffer.readFloatLE(this.offset, true);","  this.offset += 4;","  return value;","};","","Reader.prototype.readDecimal = function readDecimal(fraction) {","  var value;","  if (fraction &gt; 34) {","    value = bignum.readDecFloat(this.buffer, this.offset);","  } else {","    value = bignum.readDecFixed(this.buffer, this.offset, fraction);","  }","  this.offset += 16;","  return value;","};","","function LobDescriptor(type, locatorId, options, chunk) {","  this.locatorId = locatorId;","  this.options = options;","  if (Buffer.isBuffer(chunk)) {","    this.chunk = chunk;","    if (type === LobSourceType.CLOB || type === LobSourceType.NCLOB) {","      this.size = chunk.toString('utf-8').length;","    } else {","      this.size = chunk.length;","    }","  } else {","    this.chunk = undefined;","    this.size = 0;","  }","}","","Object.defineProperties(LobDescriptor.prototype, {","  isLast: {","    get: function isLast() {","      /* jshint bitwise:false */","      return !!(this.options &amp; LobOptions.LAST_DATA);","    }","  }","});"];
