/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['protocol/common/index.js']) {
  _$jscoverage['protocol/common/index.js'] = [];
  _$jscoverage['protocol/common/index.js'][14] = 0;
  _$jscoverage['protocol/common/index.js'][16] = 0;
  _$jscoverage['protocol/common/index.js'][18] = 0;
  _$jscoverage['protocol/common/index.js'][19] = 0;
  _$jscoverage['protocol/common/index.js'][20] = 0;
  _$jscoverage['protocol/common/index.js'][21] = 0;
  _$jscoverage['protocol/common/index.js'][22] = 0;
  _$jscoverage['protocol/common/index.js'][23] = 0;
  _$jscoverage['protocol/common/index.js'][24] = 0;
  _$jscoverage['protocol/common/index.js'][25] = 0;
  _$jscoverage['protocol/common/index.js'][26] = 0;
  _$jscoverage['protocol/common/index.js'][27] = 0;
  _$jscoverage['protocol/common/index.js'][28] = 0;
  _$jscoverage['protocol/common/index.js'][29] = 0;
  _$jscoverage['protocol/common/index.js'][30] = 0;
  _$jscoverage['protocol/common/index.js'][31] = 0;
  _$jscoverage['protocol/common/index.js'][32] = 0;
  _$jscoverage['protocol/common/index.js'][33] = 0;
  _$jscoverage['protocol/common/index.js'][34] = 0;
  _$jscoverage['protocol/common/index.js'][35] = 0;
  _$jscoverage['protocol/common/index.js'][36] = 0;
  _$jscoverage['protocol/common/index.js'][37] = 0;
  _$jscoverage['protocol/common/index.js'][38] = 0;
  _$jscoverage['protocol/common/index.js'][39] = 0;
  _$jscoverage['protocol/common/index.js'][40] = 0;
  _$jscoverage['protocol/common/index.js'][41] = 0;
  _$jscoverage['protocol/common/index.js'][42] = 0;
  _$jscoverage['protocol/common/index.js'][44] = 0;
  _$jscoverage['protocol/common/index.js'][45] = 0;
  _$jscoverage['protocol/common/index.js'][46] = 0;
  _$jscoverage['protocol/common/index.js'][47] = 0;
  _$jscoverage['protocol/common/index.js'][48] = 0;
  _$jscoverage['protocol/common/index.js'][49] = 0;
  _$jscoverage['protocol/common/index.js'][50] = 0;
  _$jscoverage['protocol/common/index.js'][51] = 0;
  _$jscoverage['protocol/common/index.js'][52] = 0;
  _$jscoverage['protocol/common/index.js'][53] = 0;
  _$jscoverage['protocol/common/index.js'][55] = 0;
  _$jscoverage['protocol/common/index.js'][57] = 0;
  _$jscoverage['protocol/common/index.js'][58] = 0;
  _$jscoverage['protocol/common/index.js'][59] = 0;
  _$jscoverage['protocol/common/index.js'][60] = 0;
  _$jscoverage['protocol/common/index.js'][62] = 0;
  _$jscoverage['protocol/common/index.js'][65] = 0;
}
_$jscoverage['protocol/common/index.js'][14]++;
"use strict";
_$jscoverage['protocol/common/index.js'][16]++;
var util = require("../../util");
_$jscoverage['protocol/common/index.js'][18]++;
exports.ClientDistributionMode = require("./ClientDistributionMode");
_$jscoverage['protocol/common/index.js'][19]++;
exports.CommandOption = require("./CommandOption");
_$jscoverage['protocol/common/index.js'][20]++;
exports.CommitOption = require("./CommitOption");
_$jscoverage['protocol/common/index.js'][21]++;
exports.ConnectOption = require("./ConnectOption");
_$jscoverage['protocol/common/index.js'][22]++;
exports.ConnectOptionType = require("./ConnectOptionType");
_$jscoverage['protocol/common/index.js'][23]++;
exports.DataFormatVersion = require("./DataFormatVersion");
_$jscoverage['protocol/common/index.js'][24]++;
exports.DistributionProtocolVersion = require("./DistributionProtocolVersion");
_$jscoverage['protocol/common/index.js'][25]++;
exports.ErrorLevel = require("./ErrorLevel");
_$jscoverage['protocol/common/index.js'][26]++;
exports.FunctionCode = require("./FunctionCode");
_$jscoverage['protocol/common/index.js'][27]++;
exports.IoType = require("./IoType");
_$jscoverage['protocol/common/index.js'][28]++;
exports.LobOptions = require("./LobOptions");
_$jscoverage['protocol/common/index.js'][29]++;
exports.LobSourceType = require("./LobSourceType");
_$jscoverage['protocol/common/index.js'][30]++;
exports.MessageType = require("./MessageType");
_$jscoverage['protocol/common/index.js'][31]++;
exports.ParameterMode = require("./ParameterMode");
_$jscoverage['protocol/common/index.js'][32]++;
exports.PartKind = require("./PartKind");
_$jscoverage['protocol/common/index.js'][33]++;
exports.ResultSetAttributes = require("./ResultSetAttributes");
_$jscoverage['protocol/common/index.js'][34]++;
exports.SegmentKind = require("./SegmentKind");
_$jscoverage['protocol/common/index.js'][35]++;
exports.SessionContext = require("./SessionContext");
_$jscoverage['protocol/common/index.js'][36]++;
exports.StatementContext = require("./StatementContext");
_$jscoverage['protocol/common/index.js'][37]++;
exports.StatementContextType = require("./StatementContextType");
_$jscoverage['protocol/common/index.js'][38]++;
exports.TransactionFlag = require("./TransactionFlag");
_$jscoverage['protocol/common/index.js'][39]++;
exports.TopologyInformation = require("./TopologyInformation");
_$jscoverage['protocol/common/index.js'][40]++;
exports.TypeCode = require("./TypeCode");
_$jscoverage['protocol/common/index.js'][41]++;
exports.NormalizedTypeCode = require("./NormalizedTypeCode");
_$jscoverage['protocol/common/index.js'][42]++;
exports.ReadFunction = require("./ReadFunction");
_$jscoverage['protocol/common/index.js'][44]++;
invert("ConnectOption");
_$jscoverage['protocol/common/index.js'][45]++;
invert("TransactionFlag");
_$jscoverage['protocol/common/index.js'][46]++;
invert("TopologyInformation");
_$jscoverage['protocol/common/index.js'][47]++;
invert("MessageType");
_$jscoverage['protocol/common/index.js'][48]++;
invert("StatementContext");
_$jscoverage['protocol/common/index.js'][49]++;
invert("SessionContext");
_$jscoverage['protocol/common/index.js'][50]++;
invert("TypeCode");
_$jscoverage['protocol/common/index.js'][51]++;
invert("FunctionCode");
_$jscoverage['protocol/common/index.js'][52]++;
invert("PartKind");
_$jscoverage['protocol/common/index.js'][53]++;
invert("SegmentKind");
_$jscoverage['protocol/common/index.js'][55]++;
function invert(name) {
  _$jscoverage['protocol/common/index.js'][57]++;
  var source = exports[name];
  _$jscoverage['protocol/common/index.js'][58]++;
  var target = {};
  _$jscoverage['protocol/common/index.js'][59]++;
  for (var key in source) {
    _$jscoverage['protocol/common/index.js'][60]++;
    target[source[key]] = key;
}
  _$jscoverage['protocol/common/index.js'][62]++;
  exports[name + "Name"] = target;
}
_$jscoverage['protocol/common/index.js'][65]++;
util.extend(exports, require("./Constants"));
_$jscoverage['protocol/common/index.js'].source = ["// Copyright 2013 SAP AG.","//","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//","// http: //www.apache.org/licenses/LICENSE-2.0","//","// Unless required by applicable law or agreed to in writing,","// software distributed under the License is distributed on an","// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,","// either express or implied. See the License for the specific","// language governing permissions and limitations under the License.","'use strict';","","var util = require('../../util');","","exports.ClientDistributionMode = require('./ClientDistributionMode');","exports.CommandOption = require('./CommandOption');","exports.CommitOption = require('./CommitOption');","exports.ConnectOption = require('./ConnectOption');","exports.ConnectOptionType = require('./ConnectOptionType');","exports.DataFormatVersion = require('./DataFormatVersion');","exports.DistributionProtocolVersion = require('./DistributionProtocolVersion');","exports.ErrorLevel = require('./ErrorLevel');","exports.FunctionCode = require('./FunctionCode');","exports.IoType = require('./IoType');","exports.LobOptions = require('./LobOptions');","exports.LobSourceType = require('./LobSourceType');","exports.MessageType = require('./MessageType');","exports.ParameterMode = require('./ParameterMode');","exports.PartKind = require('./PartKind');","exports.ResultSetAttributes = require('./ResultSetAttributes');","exports.SegmentKind = require('./SegmentKind');","exports.SessionContext = require('./SessionContext');","exports.StatementContext = require('./StatementContext');","exports.StatementContextType = require('./StatementContextType');","exports.TransactionFlag = require('./TransactionFlag');","exports.TopologyInformation = require('./TopologyInformation');","exports.TypeCode = require('./TypeCode');","exports.NormalizedTypeCode = require('./NormalizedTypeCode');","exports.ReadFunction = require('./ReadFunction');","","invert('ConnectOption');","invert('TransactionFlag');","invert('TopologyInformation');","invert('MessageType');","invert('StatementContext');","invert('SessionContext');","invert('TypeCode');","invert('FunctionCode');","invert('PartKind');","invert('SegmentKind');","","function invert(name) {","  /*jshint forin: false */","  var source = exports[name];","  var target = {};","  for (var key in source) {","    target[source[key]] = key;","  }","  exports[name + 'Name'] = target;","}","","util.extend(exports, require('./Constants'));"];
