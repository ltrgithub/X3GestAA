/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['protocol/request/Segment.js']) {
  _$jscoverage['protocol/request/Segment.js'] = [];
  _$jscoverage['protocol/request/Segment.js'][14] = 0;
  _$jscoverage['protocol/request/Segment.js'][16] = 0;
  _$jscoverage['protocol/request/Segment.js'][17] = 0;
  _$jscoverage['protocol/request/Segment.js'][18] = 0;
  _$jscoverage['protocol/request/Segment.js'][19] = 0;
  _$jscoverage['protocol/request/Segment.js'][20] = 0;
  _$jscoverage['protocol/request/Segment.js'][21] = 0;
  _$jscoverage['protocol/request/Segment.js'][23] = 0;
  _$jscoverage['protocol/request/Segment.js'][24] = 0;
  _$jscoverage['protocol/request/Segment.js'][26] = 0;
  _$jscoverage['protocol/request/Segment.js'][28] = 0;
  _$jscoverage['protocol/request/Segment.js'][29] = 0;
  _$jscoverage['protocol/request/Segment.js'][30] = 0;
  _$jscoverage['protocol/request/Segment.js'][31] = 0;
  _$jscoverage['protocol/request/Segment.js'][32] = 0;
  _$jscoverage['protocol/request/Segment.js'][35] = 0;
  _$jscoverage['protocol/request/Segment.js'][36] = 0;
  _$jscoverage['protocol/request/Segment.js'][37] = 0;
  _$jscoverage['protocol/request/Segment.js'][40] = 0;
  _$jscoverage['protocol/request/Segment.js'][41] = 0;
  _$jscoverage['protocol/request/Segment.js'][47] = 0;
  _$jscoverage['protocol/request/Segment.js'][48] = 0;
  _$jscoverage['protocol/request/Segment.js'][54] = 0;
  _$jscoverage['protocol/request/Segment.js'][55] = 0;
  _$jscoverage['protocol/request/Segment.js'][56] = 0;
  _$jscoverage['protocol/request/Segment.js'][58] = 0;
  _$jscoverage['protocol/request/Segment.js'][59] = 0;
  _$jscoverage['protocol/request/Segment.js'][63] = 0;
  _$jscoverage['protocol/request/Segment.js'][65] = 0;
  _$jscoverage['protocol/request/Segment.js'][66] = 0;
  _$jscoverage['protocol/request/Segment.js'][74] = 0;
  _$jscoverage['protocol/request/Segment.js'][75] = 0;
  _$jscoverage['protocol/request/Segment.js'][76] = 0;
  _$jscoverage['protocol/request/Segment.js'][77] = 0;
  _$jscoverage['protocol/request/Segment.js'][78] = 0;
  _$jscoverage['protocol/request/Segment.js'][79] = 0;
  _$jscoverage['protocol/request/Segment.js'][80] = 0;
  _$jscoverage['protocol/request/Segment.js'][81] = 0;
  _$jscoverage['protocol/request/Segment.js'][82] = 0;
  _$jscoverage['protocol/request/Segment.js'][83] = 0;
  _$jscoverage['protocol/request/Segment.js'][86] = 0;
  _$jscoverage['protocol/request/Segment.js'][88] = 0;
  _$jscoverage['protocol/request/Segment.js'][90] = 0;
  _$jscoverage['protocol/request/Segment.js'][92] = 0;
  _$jscoverage['protocol/request/Segment.js'][94] = 0;
  _$jscoverage['protocol/request/Segment.js'][96] = 0;
  _$jscoverage['protocol/request/Segment.js'][98] = 0;
  _$jscoverage['protocol/request/Segment.js'][100] = 0;
  _$jscoverage['protocol/request/Segment.js'][102] = 0;
  _$jscoverage['protocol/request/Segment.js'][104] = 0;
  _$jscoverage['protocol/request/Segment.js'][106] = 0;
  _$jscoverage['protocol/request/Segment.js'][107] = 0;
  _$jscoverage['protocol/request/Segment.js'][110] = 0;
  _$jscoverage['protocol/request/Segment.js'][111] = 0;
  _$jscoverage['protocol/request/Segment.js'][112] = 0;
  _$jscoverage['protocol/request/Segment.js'][115] = 0;
  _$jscoverage['protocol/request/Segment.js'][116] = 0;
  _$jscoverage['protocol/request/Segment.js'][117] = 0;
}
_$jscoverage['protocol/request/Segment.js'][14]++;
"use strict";
_$jscoverage['protocol/request/Segment.js'][16]++;
var util = require("../../util");
_$jscoverage['protocol/request/Segment.js'][17]++;
var data = require("../data");
_$jscoverage['protocol/request/Segment.js'][18]++;
var common = require("../common");
_$jscoverage['protocol/request/Segment.js'][19]++;
var Part = require("./Part");
_$jscoverage['protocol/request/Segment.js'][20]++;
var MessageType = common.MessageType;
_$jscoverage['protocol/request/Segment.js'][21]++;
var SegmentKind = common.SegmentKind;
_$jscoverage['protocol/request/Segment.js'][23]++;
var MAX_SEGMENT_SIZE = common.MAX_PACKET_SIZE - common.PACKET_HEADER_LENGTH;
_$jscoverage['protocol/request/Segment.js'][24]++;
var SEGMENT_HEADER_LENGTH = common.SEGMENT_HEADER_LENGTH;
_$jscoverage['protocol/request/Segment.js'][26]++;
module.exports = Segment;
_$jscoverage['protocol/request/Segment.js'][28]++;
function Segment(type, commitImmediateley, commandOptions) {
  _$jscoverage['protocol/request/Segment.js'][29]++;
  this.type = type || MessageType.NIL;
  _$jscoverage['protocol/request/Segment.js'][30]++;
  this.commitImmediateley = ! ! commitImmediateley? 1: 0;
  _$jscoverage['protocol/request/Segment.js'][31]++;
  this.commandOptions = commandOptions || 0;
  _$jscoverage['protocol/request/Segment.js'][32]++;
  this.parts = [];
}
_$jscoverage['protocol/request/Segment.js'][35]++;
Segment.prototype.addPart = (function addPart(part) {
  _$jscoverage['protocol/request/Segment.js'][36]++;
  this.parts.push(part);
  _$jscoverage['protocol/request/Segment.js'][37]++;
  return part;
});
_$jscoverage['protocol/request/Segment.js'][40]++;
Segment.prototype.push = (function push(kind, args) {
  _$jscoverage['protocol/request/Segment.js'][41]++;
  this.parts.push({kind: kind, args: args});
});
_$jscoverage['protocol/request/Segment.js'][47]++;
Segment.prototype.unshift = (function unshift(kind, args) {
  _$jscoverage['protocol/request/Segment.js'][48]++;
  this.parts.unshift({kind: kind, args: args});
});
_$jscoverage['protocol/request/Segment.js'][54]++;
Segment.prototype.add = (function add(kind, args) {
  _$jscoverage['protocol/request/Segment.js'][55]++;
  if (! args) {
    _$jscoverage['protocol/request/Segment.js'][56]++;
    return;
  }
  _$jscoverage['protocol/request/Segment.js'][58]++;
  if (util.isNumber(kind)) {
    _$jscoverage['protocol/request/Segment.js'][59]++;
    this.parts.push({kind: kind, args: args});
    _$jscoverage['protocol/request/Segment.js'][63]++;
    return;
  }
  _$jscoverage['protocol/request/Segment.js'][65]++;
  if (util.isObject(kind)) {
    _$jscoverage['protocol/request/Segment.js'][66]++;
    this.parts.push({kind: kind.kind, module: kind.module, args: args});
  }
});
_$jscoverage['protocol/request/Segment.js'][74]++;
Segment.prototype.toBuffer = (function toBuffer(size) {
  _$jscoverage['protocol/request/Segment.js'][75]++;
  size = size || MAX_SEGMENT_SIZE;
  _$jscoverage['protocol/request/Segment.js'][76]++;
  var remainingSize = size - SEGMENT_HEADER_LENGTH;
  _$jscoverage['protocol/request/Segment.js'][77]++;
  var length = SEGMENT_HEADER_LENGTH;
  _$jscoverage['protocol/request/Segment.js'][78]++;
  var buffers = [];
  _$jscoverage['protocol/request/Segment.js'][79]++;
  for (var i = 0; i < this.parts.length; i++) {
    _$jscoverage['protocol/request/Segment.js'][80]++;
    var buffer = partToBuffer(this.parts[i], remainingSize);
    _$jscoverage['protocol/request/Segment.js'][81]++;
    remainingSize -= buffer.length;
    _$jscoverage['protocol/request/Segment.js'][82]++;
    length += buffer.length;
    _$jscoverage['protocol/request/Segment.js'][83]++;
    buffers.push(buffer);
}
  _$jscoverage['protocol/request/Segment.js'][86]++;
  var header = new Buffer(SEGMENT_HEADER_LENGTH);
  _$jscoverage['protocol/request/Segment.js'][88]++;
  header.writeInt32LE(length, 0);
  _$jscoverage['protocol/request/Segment.js'][90]++;
  header.writeInt32LE(0, 4);
  _$jscoverage['protocol/request/Segment.js'][92]++;
  header.writeInt16LE(this.parts.length, 8);
  _$jscoverage['protocol/request/Segment.js'][94]++;
  header.writeInt16LE(1, 10);
  _$jscoverage['protocol/request/Segment.js'][96]++;
  header.writeInt8(SegmentKind.REQUEST, 12);
  _$jscoverage['protocol/request/Segment.js'][98]++;
  header.writeInt8(this.type, 13);
  _$jscoverage['protocol/request/Segment.js'][100]++;
  header.writeInt8(this.commitImmediateley, 14);
  _$jscoverage['protocol/request/Segment.js'][102]++;
  header.writeInt8(this.commandOptions, 15);
  _$jscoverage['protocol/request/Segment.js'][104]++;
  header.fill(0, 16, SEGMENT_HEADER_LENGTH);
  _$jscoverage['protocol/request/Segment.js'][106]++;
  buffers.unshift(header);
  _$jscoverage['protocol/request/Segment.js'][107]++;
  return Buffer.concat(buffers, length);
});
_$jscoverage['protocol/request/Segment.js'][110]++;
function partToBuffer(pd, remainingSize) {
  _$jscoverage['protocol/request/Segment.js'][111]++;
  var m = pd.module || data[pd.kind];
  _$jscoverage['protocol/request/Segment.js'][112]++;
  var part = new Part({kind: pd.kind});
  _$jscoverage['protocol/request/Segment.js'][115]++;
  part.argumentCount = m.getArgumentCount(pd.args);
  _$jscoverage['protocol/request/Segment.js'][116]++;
  m.write(part, pd.args, remainingSize);
  _$jscoverage['protocol/request/Segment.js'][117]++;
  return part.toBuffer(remainingSize);
}
_$jscoverage['protocol/request/Segment.js'].source = ["// Copyright 2013 SAP AG.","//","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//","// http: //www.apache.org/licenses/LICENSE-2.0","//","// Unless required by applicable law or agreed to in writing,","// software distributed under the License is distributed on an","// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,","// either express or implied. See the License for the specific","// language governing permissions and limitations under the License.","'use strict';","","var util = require('../../util');","var data = require('../data');","var common = require('../common');","var Part = require('./Part');","var MessageType = common.MessageType;","var SegmentKind = common.SegmentKind;","","var MAX_SEGMENT_SIZE = common.MAX_PACKET_SIZE - common.PACKET_HEADER_LENGTH;","var SEGMENT_HEADER_LENGTH = common.SEGMENT_HEADER_LENGTH;","","module.exports = Segment;","","function Segment(type, commitImmediateley, commandOptions) {","  this.type = type || MessageType.NIL;","  this.commitImmediateley = !!commitImmediateley ? 1 : 0;","  this.commandOptions = commandOptions || 0;","  this.parts = [];","}","","Segment.prototype.addPart = function addPart(part) {","  this.parts.push(part);","  return part;","};","","Segment.prototype.push = function push(kind, args) {","  this.parts.push({","    kind: kind,","    args: args","  });","};","","Segment.prototype.unshift = function unshift(kind, args) {","  this.parts.unshift({","    kind: kind,","    args: args","  });","};","","Segment.prototype.add = function add(kind, args) {","  if (!args) {","    return;","  }","  if (util.isNumber(kind)) {","    this.parts.push({","      kind: kind,","      args: args","    });","    return;","  }","  if (util.isObject(kind)) {","    this.parts.push({","      kind: kind.kind,","      module: kind.module,","      args: args","    });","  }","};","","Segment.prototype.toBuffer = function toBuffer(size) {","  size = size || MAX_SEGMENT_SIZE;","  var remainingSize = size - SEGMENT_HEADER_LENGTH;","  var length = SEGMENT_HEADER_LENGTH;","  var buffers = [];","  for (var i = 0; i &lt; this.parts.length; i++) {","    var buffer = partToBuffer(this.parts[i], remainingSize);","    remainingSize -= buffer.length;","    length += buffer.length;","    buffers.push(buffer);","  }","","  var header = new Buffer(SEGMENT_HEADER_LENGTH);","  // Length of the segment, including the header","  header.writeInt32LE(length, 0);","  // Offset of the segment within the message buffer","  header.writeInt32LE(0, 4);","  // Number of contained parts","  header.writeInt16LE(this.parts.length, 8);","  // Number of segment within packet","  header.writeInt16LE(1, 10);","  // Segment kind","  header.writeInt8(SegmentKind.REQUEST, 12);","  // Message type","  header.writeInt8(this.type, 13);","  // Whether the command shall be committed","  header.writeInt8(this.commitImmediateley, 14);","  // Command options","  header.writeInt8(this.commandOptions, 15);","  // Filler","  header.fill(0x00, 16, SEGMENT_HEADER_LENGTH);","","  buffers.unshift(header);","  return Buffer.concat(buffers, length);","};","","function partToBuffer(pd, remainingSize) {","  var m = pd.module || data[pd.kind];","  var part = new Part({","    kind: pd.kind","  });","  part.argumentCount = m.getArgumentCount(pd.args);","  m.write(part, pd.args, remainingSize);","  return part.toBuffer(remainingSize);","}"];
