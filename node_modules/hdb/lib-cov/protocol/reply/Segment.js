/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['protocol/reply/Segment.js']) {
  _$jscoverage['protocol/reply/Segment.js'] = [];
  _$jscoverage['protocol/reply/Segment.js'][14] = 0;
  _$jscoverage['protocol/reply/Segment.js'][16] = 0;
  _$jscoverage['protocol/reply/Segment.js'][17] = 0;
  _$jscoverage['protocol/reply/Segment.js'][18] = 0;
  _$jscoverage['protocol/reply/Segment.js'][19] = 0;
  _$jscoverage['protocol/reply/Segment.js'][20] = 0;
  _$jscoverage['protocol/reply/Segment.js'][21] = 0;
  _$jscoverage['protocol/reply/Segment.js'][22] = 0;
  _$jscoverage['protocol/reply/Segment.js'][23] = 0;
  _$jscoverage['protocol/reply/Segment.js'][24] = 0;
  _$jscoverage['protocol/reply/Segment.js'][25] = 0;
  _$jscoverage['protocol/reply/Segment.js'][27] = 0;
  _$jscoverage['protocol/reply/Segment.js'][29] = 0;
  _$jscoverage['protocol/reply/Segment.js'][30] = 0;
  _$jscoverage['protocol/reply/Segment.js'][31] = 0;
  _$jscoverage['protocol/reply/Segment.js'][32] = 0;
  _$jscoverage['protocol/reply/Segment.js'][35] = 0;
  _$jscoverage['protocol/reply/Segment.js'][36] = 0;
  _$jscoverage['protocol/reply/Segment.js'][39] = 0;
  _$jscoverage['protocol/reply/Segment.js'][40] = 0;
  _$jscoverage['protocol/reply/Segment.js'][41] = 0;
  _$jscoverage['protocol/reply/Segment.js'][42] = 0;
  _$jscoverage['protocol/reply/Segment.js'][43] = 0;
  _$jscoverage['protocol/reply/Segment.js'][44] = 0;
  _$jscoverage['protocol/reply/Segment.js'][45] = 0;
  _$jscoverage['protocol/reply/Segment.js'][46] = 0;
  _$jscoverage['protocol/reply/Segment.js'][48] = 0;
  _$jscoverage['protocol/reply/Segment.js'][49] = 0;
  _$jscoverage['protocol/reply/Segment.js'][53] = 0;
  _$jscoverage['protocol/reply/Segment.js'][54] = 0;
  _$jscoverage['protocol/reply/Segment.js'][55] = 0;
  _$jscoverage['protocol/reply/Segment.js'][56] = 0;
  _$jscoverage['protocol/reply/Segment.js'][58] = 0;
  _$jscoverage['protocol/reply/Segment.js'][60] = 0;
  _$jscoverage['protocol/reply/Segment.js'][61] = 0;
  _$jscoverage['protocol/reply/Segment.js'][62] = 0;
  _$jscoverage['protocol/reply/Segment.js'][63] = 0;
  _$jscoverage['protocol/reply/Segment.js'][66] = 0;
  _$jscoverage['protocol/reply/Segment.js'][68] = 0;
  _$jscoverage['protocol/reply/Segment.js'][70] = 0;
  _$jscoverage['protocol/reply/Segment.js'][72] = 0;
  _$jscoverage['protocol/reply/Segment.js'][73] = 0;
  _$jscoverage['protocol/reply/Segment.js'][74] = 0;
  _$jscoverage['protocol/reply/Segment.js'][75] = 0;
  _$jscoverage['protocol/reply/Segment.js'][76] = 0;
  _$jscoverage['protocol/reply/Segment.js'][77] = 0;
  _$jscoverage['protocol/reply/Segment.js'][78] = 0;
  _$jscoverage['protocol/reply/Segment.js'][79] = 0;
  _$jscoverage['protocol/reply/Segment.js'][81] = 0;
  _$jscoverage['protocol/reply/Segment.js'][84] = 0;
  _$jscoverage['protocol/reply/Segment.js'][85] = 0;
  _$jscoverage['protocol/reply/Segment.js'][86] = 0;
  _$jscoverage['protocol/reply/Segment.js'][87] = 0;
  _$jscoverage['protocol/reply/Segment.js'][88] = 0;
  _$jscoverage['protocol/reply/Segment.js'][89] = 0;
  _$jscoverage['protocol/reply/Segment.js'][90] = 0;
  _$jscoverage['protocol/reply/Segment.js'][91] = 0;
  _$jscoverage['protocol/reply/Segment.js'][92] = 0;
  _$jscoverage['protocol/reply/Segment.js'][95] = 0;
  _$jscoverage['protocol/reply/Segment.js'][98] = 0;
  _$jscoverage['protocol/reply/Segment.js'][100] = 0;
  _$jscoverage['protocol/reply/Segment.js'][102] = 0;
  _$jscoverage['protocol/reply/Segment.js'][104] = 0;
  _$jscoverage['protocol/reply/Segment.js'][106] = 0;
  _$jscoverage['protocol/reply/Segment.js'][108] = 0;
  _$jscoverage['protocol/reply/Segment.js'][110] = 0;
  _$jscoverage['protocol/reply/Segment.js'][112] = 0;
  _$jscoverage['protocol/reply/Segment.js'][114] = 0;
  _$jscoverage['protocol/reply/Segment.js'][115] = 0;
  _$jscoverage['protocol/reply/Segment.js'][118] = 0;
  _$jscoverage['protocol/reply/Segment.js'][119] = 0;
  _$jscoverage['protocol/reply/Segment.js'][120] = 0;
  _$jscoverage['protocol/reply/Segment.js'][122] = 0;
  _$jscoverage['protocol/reply/Segment.js'][123] = 0;
  _$jscoverage['protocol/reply/Segment.js'][124] = 0;
  _$jscoverage['protocol/reply/Segment.js'][125] = 0;
  _$jscoverage['protocol/reply/Segment.js'][127] = 0;
  _$jscoverage['protocol/reply/Segment.js'][130] = 0;
  _$jscoverage['protocol/reply/Segment.js'][131] = 0;
  _$jscoverage['protocol/reply/Segment.js'][132] = 0;
  _$jscoverage['protocol/reply/Segment.js'][133] = 0;
  _$jscoverage['protocol/reply/Segment.js'][135] = 0;
  _$jscoverage['protocol/reply/Segment.js'][138] = 0;
  _$jscoverage['protocol/reply/Segment.js'][139] = 0;
  _$jscoverage['protocol/reply/Segment.js'][140] = 0;
  _$jscoverage['protocol/reply/Segment.js'][141] = 0;
  _$jscoverage['protocol/reply/Segment.js'][144] = 0;
  _$jscoverage['protocol/reply/Segment.js'][146] = 0;
  _$jscoverage['protocol/reply/Segment.js'][147] = 0;
  _$jscoverage['protocol/reply/Segment.js'][148] = 0;
  _$jscoverage['protocol/reply/Segment.js'][150] = 0;
  _$jscoverage['protocol/reply/Segment.js'][151] = 0;
  _$jscoverage['protocol/reply/Segment.js'][152] = 0;
  _$jscoverage['protocol/reply/Segment.js'][153] = 0;
  _$jscoverage['protocol/reply/Segment.js'][154] = 0;
  _$jscoverage['protocol/reply/Segment.js'][155] = 0;
  _$jscoverage['protocol/reply/Segment.js'][157] = 0;
  _$jscoverage['protocol/reply/Segment.js'][158] = 0;
  _$jscoverage['protocol/reply/Segment.js'][159] = 0;
  _$jscoverage['protocol/reply/Segment.js'][160] = 0;
  _$jscoverage['protocol/reply/Segment.js'][162] = 0;
  _$jscoverage['protocol/reply/Segment.js'][166] = 0;
  _$jscoverage['protocol/reply/Segment.js'][167] = 0;
  _$jscoverage['protocol/reply/Segment.js'][168] = 0;
  _$jscoverage['protocol/reply/Segment.js'][169] = 0;
  _$jscoverage['protocol/reply/Segment.js'][170] = 0;
  _$jscoverage['protocol/reply/Segment.js'][171] = 0;
  _$jscoverage['protocol/reply/Segment.js'][172] = 0;
  _$jscoverage['protocol/reply/Segment.js'][173] = 0;
  _$jscoverage['protocol/reply/Segment.js'][174] = 0;
  _$jscoverage['protocol/reply/Segment.js'][176] = 0;
  _$jscoverage['protocol/reply/Segment.js'][177] = 0;
}
_$jscoverage['protocol/reply/Segment.js'][14]++;
"use strict";
_$jscoverage['protocol/reply/Segment.js'][16]++;
var util = require("../../util");
_$jscoverage['protocol/reply/Segment.js'][17]++;
var Part = require("./Part");
_$jscoverage['protocol/reply/Segment.js'][18]++;
var data = require("../data");
_$jscoverage['protocol/reply/Segment.js'][19]++;
var common = require("../common");
_$jscoverage['protocol/reply/Segment.js'][20]++;
var FunctionCode = common.FunctionCode;
_$jscoverage['protocol/reply/Segment.js'][21]++;
var SegmentKind = common.SegmentKind;
_$jscoverage['protocol/reply/Segment.js'][22]++;
var PartKindName = common.PartKindName;
_$jscoverage['protocol/reply/Segment.js'][23]++;
var MAX_PACKET_SIZE = common.MAX_PACKET_SIZE;
_$jscoverage['protocol/reply/Segment.js'][24]++;
var PACKET_HEADER_LENGTH = common.PACKET_HEADER_LENGTH;
_$jscoverage['protocol/reply/Segment.js'][25]++;
var SEGMENT_HEADER_LENGTH = common.SEGMENT_HEADER_LENGTH;
_$jscoverage['protocol/reply/Segment.js'][27]++;
module.exports = Segment;
_$jscoverage['protocol/reply/Segment.js'][29]++;
function Segment(kind, functionCode) {
  _$jscoverage['protocol/reply/Segment.js'][30]++;
  this.kind = kind || SegmentKind.INVALID;
  _$jscoverage['protocol/reply/Segment.js'][31]++;
  this.functionCode = functionCode || FunctionCode.NIL;
  _$jscoverage['protocol/reply/Segment.js'][32]++;
  this.parts = [];
}
_$jscoverage['protocol/reply/Segment.js'][35]++;
Segment.prototype.push = (function push(part) {
  _$jscoverage['protocol/reply/Segment.js'][36]++;
  this.parts.push(part);
});
_$jscoverage['protocol/reply/Segment.js'][39]++;
Segment.prototype.inspect = (function inpsect() {
  _$jscoverage['protocol/reply/Segment.js'][40]++;
  var lines = [];
  _$jscoverage['protocol/reply/Segment.js'][41]++;
  var kindName = common.SegmentKindName[this.kind];
  _$jscoverage['protocol/reply/Segment.js'][42]++;
  var fcodeName = common.FunctionCodeName[this.functionCode];
  _$jscoverage['protocol/reply/Segment.js'][43]++;
  lines.push("{\n");
  _$jscoverage['protocol/reply/Segment.js'][44]++;
  lines.push("  kind: SegmentKind." + kindName + ",\n");
  _$jscoverage['protocol/reply/Segment.js'][45]++;
  lines.push("  functionCode: FunctionCode." + fcodeName + ",\n");
  _$jscoverage['protocol/reply/Segment.js'][46]++;
  lines.push("  parts: [\n");
  _$jscoverage['protocol/reply/Segment.js'][48]++;
  function inspectPart(part) {
    _$jscoverage['protocol/reply/Segment.js'][49]++;
    return part.inspect({indentOffset: 4});
}
  _$jscoverage['protocol/reply/Segment.js'][53]++;
  lines.push(this.parts.map(inspectPart).join(",\n") + "\n");
  _$jscoverage['protocol/reply/Segment.js'][54]++;
  lines.push("  ]\n");
  _$jscoverage['protocol/reply/Segment.js'][55]++;
  lines.push("}\n");
  _$jscoverage['protocol/reply/Segment.js'][56]++;
  return lines.join("");
});
_$jscoverage['protocol/reply/Segment.js'][58]++;
Segment.create = createSegment;
_$jscoverage['protocol/reply/Segment.js'][60]++;
function createSegment(buffer, offset) {
  _$jscoverage['protocol/reply/Segment.js'][61]++;
  var segment = new Segment();
  _$jscoverage['protocol/reply/Segment.js'][62]++;
  readSegment.call(segment, buffer, offset);
  _$jscoverage['protocol/reply/Segment.js'][63]++;
  return segment;
}
_$jscoverage['protocol/reply/Segment.js'][66]++;
Segment.read = readSegment;
_$jscoverage['protocol/reply/Segment.js'][68]++;
function readSegment(buffer, offset) {
  _$jscoverage['protocol/reply/Segment.js'][70]++;
  offset = offset || 0;
  _$jscoverage['protocol/reply/Segment.js'][72]++;
  var numberOfParts = buffer.readInt16LE(offset + 8);
  _$jscoverage['protocol/reply/Segment.js'][73]++;
  this.kind = buffer.readInt8(offset + 12);
  _$jscoverage['protocol/reply/Segment.js'][74]++;
  this.functionCode = buffer.readInt16LE(offset + 14);
  _$jscoverage['protocol/reply/Segment.js'][75]++;
  offset += SEGMENT_HEADER_LENGTH;
  _$jscoverage['protocol/reply/Segment.js'][76]++;
  for (var i = 0; i < numberOfParts; i++) {
    _$jscoverage['protocol/reply/Segment.js'][77]++;
    var part = new Part();
    _$jscoverage['protocol/reply/Segment.js'][78]++;
    offset = Part.read.call(part, buffer, offset);
    _$jscoverage['protocol/reply/Segment.js'][79]++;
    this.push(part);
}
  _$jscoverage['protocol/reply/Segment.js'][81]++;
  return offset;
}
_$jscoverage['protocol/reply/Segment.js'][84]++;
Segment.prototype.toBuffer = (function toBuffer(size) {
  _$jscoverage['protocol/reply/Segment.js'][85]++;
  size = size || (MAX_PACKET_SIZE - PACKET_HEADER_LENGTH);
  _$jscoverage['protocol/reply/Segment.js'][86]++;
  var remainingSize = size - SEGMENT_HEADER_LENGTH;
  _$jscoverage['protocol/reply/Segment.js'][87]++;
  var length = SEGMENT_HEADER_LENGTH;
  _$jscoverage['protocol/reply/Segment.js'][88]++;
  var buffers = this.parts.map((function getPartBuffer(part) {
  _$jscoverage['protocol/reply/Segment.js'][89]++;
  var buffer = part.toBuffer(remainingSize);
  _$jscoverage['protocol/reply/Segment.js'][90]++;
  remainingSize -= buffer.length;
  _$jscoverage['protocol/reply/Segment.js'][91]++;
  length += buffer.length;
  _$jscoverage['protocol/reply/Segment.js'][92]++;
  return buffer;
}));
  _$jscoverage['protocol/reply/Segment.js'][95]++;
  var header = new Buffer(SEGMENT_HEADER_LENGTH);
  _$jscoverage['protocol/reply/Segment.js'][98]++;
  header.writeInt32LE(length, 0);
  _$jscoverage['protocol/reply/Segment.js'][100]++;
  header.writeInt32LE(0, 4);
  _$jscoverage['protocol/reply/Segment.js'][102]++;
  header.writeInt16LE(this.parts.length, 8);
  _$jscoverage['protocol/reply/Segment.js'][104]++;
  header.writeInt16LE(1, 10);
  _$jscoverage['protocol/reply/Segment.js'][106]++;
  header.writeInt8(this.kind, 12);
  _$jscoverage['protocol/reply/Segment.js'][108]++;
  header[13] = 0;
  _$jscoverage['protocol/reply/Segment.js'][110]++;
  header.writeInt16LE(this.functionCode, 14);
  _$jscoverage['protocol/reply/Segment.js'][112]++;
  header.fill(0, 16);
  _$jscoverage['protocol/reply/Segment.js'][114]++;
  buffers.unshift(header);
  _$jscoverage['protocol/reply/Segment.js'][115]++;
  return Buffer.concat(buffers, length);
});
_$jscoverage['protocol/reply/Segment.js'][118]++;
Segment.prototype.getPart = (function (kind) {
  _$jscoverage['protocol/reply/Segment.js'][119]++;
  var parts = this.parts.filter((function isKindOf(part) {
  _$jscoverage['protocol/reply/Segment.js'][120]++;
  return part.kind === kind;
}));
  _$jscoverage['protocol/reply/Segment.js'][122]++;
  if (parts.length === 1) {
    _$jscoverage['protocol/reply/Segment.js'][123]++;
    return parts[0];
  }
  else {
    _$jscoverage['protocol/reply/Segment.js'][124]++;
    if (parts.length > 1) {
      _$jscoverage['protocol/reply/Segment.js'][125]++;
      return parts;
    }
  }
  _$jscoverage['protocol/reply/Segment.js'][127]++;
  return null;
});
_$jscoverage['protocol/reply/Segment.js'][130]++;
Segment.prototype.getReply = (function getReply() {
  _$jscoverage['protocol/reply/Segment.js'][131]++;
  var reply = new Reply(this.kind, this.functionCode);
  _$jscoverage['protocol/reply/Segment.js'][132]++;
  for (var i = 0; i < this.parts.length; i++) {
    _$jscoverage['protocol/reply/Segment.js'][133]++;
    reply.add(this.parts[i]);
}
  _$jscoverage['protocol/reply/Segment.js'][135]++;
  return reply;
});
_$jscoverage['protocol/reply/Segment.js'][138]++;
function Reply(kind, functionCode) {
  _$jscoverage['protocol/reply/Segment.js'][139]++;
  this.kind = kind;
  _$jscoverage['protocol/reply/Segment.js'][140]++;
  this.functionCode = functionCode;
  _$jscoverage['protocol/reply/Segment.js'][141]++;
  this.resultSets = [];
}
_$jscoverage['protocol/reply/Segment.js'][144]++;
Reply.prototype.addResultSetFragment = (function addResultSetFragment(name, value) {
  _$jscoverage['protocol/reply/Segment.js'][146]++;
  var resultSet;
  _$jscoverage['protocol/reply/Segment.js'][147]++;
  if (this.resultSets.length) {
    _$jscoverage['protocol/reply/Segment.js'][148]++;
    resultSet = this.resultSets[this.resultSets.length - 1];
  }
  _$jscoverage['protocol/reply/Segment.js'][150]++;
  if (name === "resultSet") {
    _$jscoverage['protocol/reply/Segment.js'][151]++;
    name = "data";
  }
  else {
    _$jscoverage['protocol/reply/Segment.js'][152]++;
    if (name === "resultSetId") {
      _$jscoverage['protocol/reply/Segment.js'][153]++;
      name = "id";
    }
    else {
      _$jscoverage['protocol/reply/Segment.js'][154]++;
      if (name === "resultSetMetadata") {
        _$jscoverage['protocol/reply/Segment.js'][155]++;
        name = "metadata";
      }
    }
  }
  _$jscoverage['protocol/reply/Segment.js'][157]++;
  if (! resultSet || resultSet[name]) {
    _$jscoverage['protocol/reply/Segment.js'][158]++;
    resultSet = {};
    _$jscoverage['protocol/reply/Segment.js'][159]++;
    resultSet[name] = value;
    _$jscoverage['protocol/reply/Segment.js'][160]++;
    this.resultSets.push(resultSet);
  }
  else {
    _$jscoverage['protocol/reply/Segment.js'][162]++;
    resultSet[name] = value;
  }
});
_$jscoverage['protocol/reply/Segment.js'][166]++;
Reply.prototype.add = (function add(part) {
  _$jscoverage['protocol/reply/Segment.js'][167]++;
  var name = util._2cc(PartKindName[part.kind]);
  _$jscoverage['protocol/reply/Segment.js'][168]++;
  var value = data[part.kind].read(part);
  _$jscoverage['protocol/reply/Segment.js'][169]++;
  if (/^resultSet/.test(name) || name === "tableName") {
    _$jscoverage['protocol/reply/Segment.js'][170]++;
    this.addResultSetFragment(name, value);
  }
  else {
    _$jscoverage['protocol/reply/Segment.js'][171]++;
    if (util.isUndefined(this[name])) {
      _$jscoverage['protocol/reply/Segment.js'][172]++;
      this[name] = value;
    }
    else {
      _$jscoverage['protocol/reply/Segment.js'][173]++;
      if (util.isArray(this[name])) {
        _$jscoverage['protocol/reply/Segment.js'][174]++;
        this[name].push(value);
      }
      else {
        _$jscoverage['protocol/reply/Segment.js'][176]++;
        var existingValue = this[name];
        _$jscoverage['protocol/reply/Segment.js'][177]++;
        this[name] = [existingValue, value];
      }
    }
  }
});
_$jscoverage['protocol/reply/Segment.js'].source = ["// Copyright 2013 SAP AG.","//","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//","// http: //www.apache.org/licenses/LICENSE-2.0","//","// Unless required by applicable law or agreed to in writing,","// software distributed under the License is distributed on an","// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,","// either express or implied. See the License for the specific","// language governing permissions and limitations under the License.","'use strict';","","var util = require('../../util');","var Part = require('./Part');","var data = require('../data');","var common = require('../common');","var FunctionCode = common.FunctionCode;","var SegmentKind = common.SegmentKind;","var PartKindName = common.PartKindName;","var MAX_PACKET_SIZE = common.MAX_PACKET_SIZE;","var PACKET_HEADER_LENGTH = common.PACKET_HEADER_LENGTH;","var SEGMENT_HEADER_LENGTH = common.SEGMENT_HEADER_LENGTH;","","module.exports = Segment;","","function Segment(kind, functionCode) {","  this.kind = kind || SegmentKind.INVALID;","  this.functionCode = functionCode || FunctionCode.NIL;","  this.parts = [];","}","","Segment.prototype.push = function push(part) {","  this.parts.push(part);","};","","Segment.prototype.inspect = function inpsect() {","  var lines = [];","  var kindName = common.SegmentKindName[this.kind];","  var fcodeName = common.FunctionCodeName[this.functionCode];","  lines.push('{\\n');","  lines.push('  kind: SegmentKind.' + kindName + ',\\n');","  lines.push('  functionCode: FunctionCode.' + fcodeName + ',\\n');","  lines.push('  parts: [\\n');","","  function inspectPart(part) {","    return part.inspect({","      indentOffset: 4","    });","  }","  lines.push(this.parts.map(inspectPart).join(',\\n') + '\\n');","  lines.push('  ]\\n');","  lines.push('}\\n');","  return lines.join('');","};","Segment.create = createSegment;","","function createSegment(buffer, offset) {","  var segment = new Segment();","  readSegment.call(segment, buffer, offset);","  return segment;","}","","Segment.read = readSegment;","","function readSegment(buffer, offset) {","  /* jshint validthis:true */","  offset = offset || 0;","","  var numberOfParts = buffer.readInt16LE(offset + 8);","  this.kind = buffer.readInt8(offset + 12);","  this.functionCode = buffer.readInt16LE(offset + 14);","  offset += SEGMENT_HEADER_LENGTH;","  for (var i = 0; i &lt; numberOfParts; i++) {","    var part = new Part();","    offset = Part.read.call(part, buffer, offset);","    this.push(part);","  }","  return offset;","}","","Segment.prototype.toBuffer = function toBuffer(size) {","  size = size || (MAX_PACKET_SIZE - PACKET_HEADER_LENGTH);","  var remainingSize = size - SEGMENT_HEADER_LENGTH;","  var length = SEGMENT_HEADER_LENGTH;","  var buffers = this.parts.map(function getPartBuffer(part) {","    var buffer = part.toBuffer(remainingSize);","    remainingSize -= buffer.length;","    length += buffer.length;","    return buffer;","  });","","  var header = new Buffer(SEGMENT_HEADER_LENGTH);","","  // Length of the segment, including the header","  header.writeInt32LE(length, 0);","  // Offset of the segment within the message buffer","  header.writeInt32LE(0, 4);","  // Number of contained parts","  header.writeInt16LE(this.parts.length, 8);","  // Number of segment within packet","  header.writeInt16LE(1, 10);","  // Segment kind","  header.writeInt8(this.kind, 12);","  // Filler","  header[13] = 0x00;","  // Function code","  header.writeInt16LE(this.functionCode, 14);","  // Filler","  header.fill(0x00, 16);","","  buffers.unshift(header);","  return Buffer.concat(buffers, length);","};","","Segment.prototype.getPart = function (kind) {","  var parts = this.parts.filter(function isKindOf(part) {","    return part.kind === kind;","  });","  if (parts.length === 1) {","    return parts[0];","  } else if (parts.length &gt; 1) {","    return parts;","  }","  return null;","};","","Segment.prototype.getReply = function getReply() {","  var reply = new Reply(this.kind, this.functionCode);","  for (var i = 0; i &lt; this.parts.length; i++) {","    reply.add(this.parts[i]);","  }","  return reply;","};","","function Reply(kind, functionCode) {","  this.kind = kind;","  this.functionCode = functionCode;","  this.resultSets = [];","}","","Reply.prototype.addResultSetFragment = function addResultSetFragment(name,","  value) {","  var resultSet;","  if (this.resultSets.length) {","    resultSet = this.resultSets[this.resultSets.length - 1];","  }","  if (name === 'resultSet') {","    name = 'data';","  } else if (name === 'resultSetId') {","    name = 'id';","  } else if (name === 'resultSetMetadata') {","    name = 'metadata';","  }","  if (!resultSet || resultSet[name]) {","    resultSet = {};","    resultSet[name] = value;","    this.resultSets.push(resultSet);","  } else {","    resultSet[name] = value;","  }","};","","Reply.prototype.add = function add(part) {","  var name = util._2cc(PartKindName[part.kind]);","  var value = data[part.kind].read(part);","  if (/^resultSet/.test(name) || name === 'tableName') {","    this.addResultSetFragment(name, value);","  } else if (util.isUndefined(this[name])) {","    this[name] = value;","  } else if (util.isArray(this[name])) {","    this[name].push(value);","  } else {","    var existingValue = this[name];","    this[name] = [existingValue, value];","  }","};"];
