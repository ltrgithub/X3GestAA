"use strict";

var generic = require('ez-streams').devices.generic;

/// !doc
/// ## ez-streams wrapper for oracle
/// 
/// `var ezoracle = require('ez-oracle');`
/// 
module.exports = {
	/// * `reader = ezoracle.reader(cursor)`  
	reader: function(connection, sql, args, columnDefs) {
		// console.log(">>>>> " + sql);
		var rd = connection.reader(sql, args);
		return generic.reader(function(_) {
			var row = rd && rd.nextRow(~_);
			return row == null ? (rd = undefined) : row;
		});
	},


	/// * `writer = ezoracle.writer(statement)`  
	writer: function(connection, sql) {
		var trace;
		var tablename;
/*
		trace = function(str) {
			try {
				if (!tablename) {
					var result = / (into|INTO) \"?(\w+)\"?\.\"?(\w+)\"]?/.exec(sql);
					tablename = result[2] + '.' + result[3];
				}
			} catch (err) {
				console.log("Could not retrieve tablename from " + sql);
			}
			console.log(tablename + " : " + str);
		}
*/
		trace && trace("writer initialized : " + sql);

		var statement = connection.prepare(sql);
		return generic.writer(function(_, row) {
			if (row === undefined) {
				statement = null; 
				return;
			} else if (statement) {
				var values = [];
				Object.keys(row).forEach(function(key)
				{
					var value = row[key];
					if (Buffer.isBuffer(value))
					{
						// Buffers must be sent to Oracle as hex strings
						value = value.toString('hex');
					}
					values.push(value);
				});
				trace && trace("Writing values " + JSON.stringify(values));
				statement.execute(values, ~_);
			}
		});
	},
};