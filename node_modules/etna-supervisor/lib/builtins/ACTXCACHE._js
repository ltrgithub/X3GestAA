"use strict";
var util = require("etna-supervisor/lib/util");


exports.constructor = util.defineClass(function(superv) {
	this.supervisor = superv;
	this.$exported = true;
	this.cache = {};
}, null, {
	init: function(_) {
		this.class = null;
		return this;
	},
	get: function(_, name) {
		if (!this.cache[name]) {
			this.cache[name] = {
				key: {}
			};
			this.cache[name].class = this.supervisor.load(_, 'Class', name);
		}
		return this.cache[name];
	}
});

function getProp(_, self, key, prop) {
	if (self.key[key]) return self.key[key].instance.getProperty(_, prop);

	self.key[key] = {};
	self.key[key].class = self.class;
	self.key[key].instance = self.key[key].class.createInstance(_);
	self.key[key].instance = self.key[key].class.loadInstance(_, self, key);
	return self.key[key].instance.getProperty(_, prop);
};

exports.cacheMethods = {
	AGETVALNUM: function(_, key, prop) {
		return getProp(_, this, key, prop);
	},
	AGETVALDAT: function(_, key, prop) {
		return getProp(_, this, key, prop);
	},
	AGETVALDEC: function(_, key, prop) {
		return getProp(_, this, key, prop);
	},
	AGETVALCHAR: function(_, key, prop) {
		return getProp(_, this, key, prop);
	}
};