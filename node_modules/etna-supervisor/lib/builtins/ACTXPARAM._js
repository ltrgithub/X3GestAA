"use strict";
var util = require("etna-supervisor/lib/util");
var X3Error = require("etna-engine/lib/runtime/errors").X3Error;

exports.constructor = util.defineClass(function(superv) {
	this.supervisor = superv;
	this.$exported = true;
	this.cache = {};
}, null, {
	init: function(_, className) {
		this.class = this.supervisor.load(_, 'Class', className);
		return this;
	},
	AGETVALNUM: function(_, key, propName) {
		var instance = this.cache[key];
		if (instance === undefined) {
			instance = this.cache[key] = this.class.loadInstance(_, key);
		}
		if (!instance) throw new X3Error(26, "instance not found: " + this.class.name + "/" + key);
		return instance.get(_, propName);
	},
	AGETUSERVALNUM: function(_, param) {
		return 0; //"TODO";
	},
	AGETVALCHAR: function(_, levcod, code, param) {
		return "TODO";
	}
});