"use strict";

var helpers = require('syracuse-core/lib/helpers');
var etnaServer = require("etna-supervisor/lib/server");
var tracerJs = require("syracuse-trace/lib/helper").getTracer("etna.supervisor");

var Client = helpers.defineClass(function(session, endpoint) {
	this.endpoint = endpoint;
	this.session = session;
}, null, {
	getSessionServiceLink: function(_, link) {
		var config = this.endpoint.getEtnaConfig(_, this.session);

		switch (link) {
			case "$rights":
				return {
					$url: "/sdata/x3/erp/" + this.endpoint.dataset(_) + "/ARIGHTS('" + config.session.userName + "')/$services/$rights"
				};
		}
		console.error("GETSESSIONSERVICELINK link: " + link);
		return null;
	},
	jsonSend: function(_, options) {
		var config = this.endpoint.getEtnaConfig(_, this.session);
		var request = {
			url: options.head.url,
			session: config.session,
			_request: {}
		};

		request._request.headers = Object.keys(options.head).reduce(function(r, p) {
			r[p] = options.head[p];
			return r;
		}, {});

		var resp = {};
		var response = {
			writeHead: function(status, head) {
				tracerJs.debug && tracerJs.debug("STUB writeHead");
				resp.head = head;
				resp.head.status = status;
			},
			end: function(body, options) {
				tracerJs.debug && tracerJs.debug("STUB end");
				resp.body = JSON.parse(body);
			}
		};

		etnaServer.httpDispatch(_, config, request, response);
		//console.log("JSONSEND resp:"+JSON.stringify(resp));
		return resp;
	}
});

exports.getClient = function(_, session, endpoint) {
	return new Client(session, endpoint);
};