"use strict";
var attributes  = require("etna-supervisor/lib/attributes");

function Value(value,parent,name,resources) {
	this._value 	= value;
	this.name 		= name;
	  	
  this.bindAttributes(parent,resources);
 }

Object.defineProperty( Value.prototype, "value", {
  set:function(value) {
    if(!this.getAttribute("$isReadonly"))  this._value   = value;
  },
  get :function() {
    return this._value;
  },
  enumerable: false,   
}) ;


Object.defineProperty( Value.prototype, "set", {
  value: function(_,value){
    if(!this.getAttribute("$isReadonly"))  this._value   = value;
  },
  enumerable: false   
});

Object.defineProperty( Value.prototype, "get", {
  value: function(_){
    return this._value;
  },
  enumerable: false   
});


attributes.addAttributes(Value.prototype);

exports.Value = Value;