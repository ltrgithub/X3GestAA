"use strict";
/*
Wraps an array of diagnosis in order to exhibit diagnoses as a collection of AERROR instances
*/

var X3Error = require("etna-engine/lib/runtime/errors").X3Error;
var tracerJs = require("syracuse-trace/lib/helper").getTracer("etna.supervisor");

function Errors(parent) {
	this.collection = true;
	this.parent = parent;
}

Object.defineProperty(Errors.prototype, "x3Maxtab", {
	value: function() {
		return this.parent.diagnoses.length;
	},
	enumerable: false
});

Object.defineProperty(Errors.prototype, "index", {
	value: function(_, position) {
		// AERROR starts at 1:
		if ((position - 1) >= this.parent.diagnoses.length) throw new X3Error(8, "collection index out of range :" + position);
		return this.parent.diagnoses[position - 1];
	},
	enumerable: false
});

exports.Errors = Errors;