"use strict";

var glob = require('streamline/lib/globals');
var util = require("etna-supervisor/lib/util");
var activ = require("etna-supervisor/lib/meta/activ");

exports.defineClass = function(constructor, parent, members) {
	// Add base members :

	members.scripts = function(_) {
		if (this._scripts === undefined) {
			this._scripts = this.supervisor.loadScripts(_, this) || null;
		}
		return this._scripts;
	};

	members.isActivated = function(_) {
		return (activ.getActiv(_, this.supervisor, this.data.CODACT) > 0);
	};

	members._x3Action = function(_, action) {
		return this.runScripts(_, "$METHODS", this.getX3ActionArgs(_, action));
	};

	members.ASETERROR = function(_, path, msg, severity) {
		console.log("baseClass ASETERROR " + [path, msg, severity].join(','));
		this.diagnoses.push(this.supervisor.new(_, 'Diagnosis', severity, path, msg));
		return severity;
	};

	return util.defineClass(function(superv, data, group) {
		this.supervisor = superv;
		this.data = data;
		this.diagnoses = [];

		// Call derived constructor :
		constructor.apply(this, arguments);
	}, parent, members);
};