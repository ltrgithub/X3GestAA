"use strict";

var util = require("etna-supervisor/lib/util");
var constants = require("etna-supervisor/lib/constants");

exports.constructor = util.defineClass(function(superv, severity, message, stackTrace) {
	this.$exported = true;
	this.supervisor = superv;
	this.severity = severity;
	this.message = message;
	this.stackTrace = stackTrace;
}, null, {
	init: function(_) {
		return this;
	},
	dataNode: function() {
		var severity = "success";
		switch (this.severity) {
			case constants.CST_AOK:
				severity = "success";
				break;
			case constants.CST_AERROR:
				severity = "error";
				break;
			case constants.CST_AINFO:
				severity = "info";
				break;
		}
		return {
			$severity: severity,
			$message: this.message,
			$stackTrace: this.stackTrace,
		};
	},
	get: function(_, name) {
		switch (name) {
			case 'DEL':
				return 1; // 1 stands for CST_ANO
			case 'MES':
				return this.message;
			case 'PRO':
				return this.PRO;
			case 'STA':
				return this.severity;
		}
	},
	x3Compare: function(b) {
		return this === b;
	},
});