Call OUVRE_TRACE("QLFAR_CONTEXT") From LECFIC
Call TESTSUITE()

Call FERME_TRACE From LECFIC

GTRACE = "QLFAR_CONTEXT_"+GACTX.USER
Call LEC_TRACE From LECFIC
End

$ERROR
Call CHECK_EQUAL(errn, EX) From AXUNIT
Resume


Funprog TESTSUITE()
Call TESTSUITE_START("CONTEXT", "CONTEXT") From AXUNIT

Call ADD_TESTCASE("TC_BASIC"	,"TC_BASIC",13) From AXUNIT
Call ADD_TESTCASE("TC_AFOLD"	,"TC_AFOLD",1) From AXUNIT
Call ADD_TESTCASE("TC_AINTL"	,"TC_AINTL",2) From AXUNIT

Local Clbfile  SUITE_RESULT
SUITE_RESULT = func AXUNIT.RUN_TESTSUITE("CONTEXT", "CONTEXT")
End SUITE_RESULT


Subprog TC_BASIC
Local Char USER1(50),USER2(50),LANDEF(10)
Local Integer EX
EX=147
Onerrgo ERROR

USER1 = GACTX.USER
Call CHECK_EQUAL([V]GACTX.USER,USER1) From AXUNIT
Call CHECK_EQUAL(len([V]GACTX.USER)>0,1) From AXUNIT

USER2 = [V]GACTX.USER
Call CHECK_EQUAL(USER1,USER2) From AXUNIT

Callmet GACTX.ACTX_SET_LANISO("fr-FR")
Call CHECK_EQUAL(GACTX.LANISO,"fr-FR") From AXUNIT

LANDEF = GACTX.LANDEF
LANDEF = GACTX.LANDEF
Call CHECK_EQUAL(LANDEF,LANDEF) From AXUNIT
Call CHECK_EQUAL(GACTX.LAN,GACTX.LAN) From AXUNIT

#Let's try to change it directly:
GACTX.LANISO="us-US"
Call CHECK_EQUAL(GACTX.LANISO,"fr-FR") From AXUNIT

Callmet GACTX.ACTX_SET_LANISO("en-US")
Call CHECK_EQUAL(GACTX.LANISO,"en-US") From AXUNIT

#Let's try to set an unknown iso :
Callmet GACTX.ACTX_SET_LANISO("er-ER") : # Value er-ER doesn't exists => LANDEF
Call CHECK_EQUAL(GACTX.LAN,GACTX.LANDEF) From AXUNIT
If GACTX.LANDEF="FRA"
Call CHECK_EQUAL(GACTX.LANISO,"fr-FR") From AXUNIT
Elsif GACTX.LANDEF="ENG"
Call CHECK_EQUAL(GACTX.LANISO,"en-US") From AXUNIT
Endif


EX=0
Call CHECK_EQUAL(GACTX.LEVWML ,99) From AXUNIT
Call CHECK_EQUAL(GACTX.AFOLDER,GACTX.AFOLDER) From AXUNIT
End

Subprog TC_AFOLD
Local Integer EX
EX=0
Call CHECK_EQUAL(GACTX.AFOLD.AVERSION ,GACTX.AFOLD.AVERSION) From AXUNIT
End

Subprog TC_AINTL
Local Integer EX
EX=0
[S]adxdcs=1940
Call CHECK_EQUAL(GACTX.AINTL.TWODIGITYEAR,1940) From AXUNIT

[S]adxdcs=1950
Call CHECK_EQUAL(GACTX.AINTL.TWODIGITYEAR,1950) From AXUNIT

#Call CHECK_EQUAL(GACTX.AINTL.SHORTDATE,GACTX.AINTL.SHORTDATE) From AXUNIT
#Call CHECK_EQUAL(GACTX.AINTL.LONGDATE,GACTX.AINTL.LONGDATE) From AXUNIT
#Call CHECK_EQUAL(GACTX.AINTL.SHORTTIME,GACTX.AINTL.SHORTTIME) From AXUNIT
#Call CHECK_EQUAL(GACTX.AINTL.LONGTIME,GACTX.AINTL.LONGTIME) From AXUNIT
#Call CHECK_EQUAL(GACTX.AINTL.SHORTDATETIM,GACTX.AINTL.SHORTDATETIM) From AXUNIT
#Call CHECK_EQUAL(GACTX.AINTL.LONGDATETIM,GACTX.AINTL.LONGDATETIM) From AXUNIT
#Call CHECK_EQUAL(GACTX.AINTL.DECIMALSEP,GACTX.AINTL.DECIMALSEP) From AXUNIT
#Call CHECK_EQUAL(GACTX.AINTL.THOUSANDSEP,GACTX.AINTL.THOUSANDSEP) From AXUNIT
#Call CHECK_EQUAL(GACTX.AINTL.FIRSTDAYWEEK,GACTX.AINTL.FIRSTDAYWEEK) From AXUNIT
#Call CHECK_EQUAL(GACTX.AINTL.NBGROUPSEP,GACTX.AINTL.NBGROUPSEP) From AXUNIT
End