"use strict";
QUnit.module(module.id);
var Jmql = require("etna-supervisor/lib/jmqlgen");

function testExpression(expression, expected) {
	var filter = Jmql.x3ToJmql(expression);
	var got = JSON.stringify(filter);
	strictEqual(got, expected);
}

test('string', 6, function() {
	testExpression("'F1_020' >= FIELD01", '{"FIELD01":{"$lte":"F1_020"}}');
	testExpression("FIELD01 = 'F1_020'", '{"FIELD01":"F1_020"}');
	testExpression("FIELD01 >= 'F1_020'", '{"FIELD01":{"$gte":"F1_020"}}');
	testExpression("FIELD01 >= 'F1_020' and  FIELD01 <='F1_035'", '{"FIELD01":{"$gte":"F1_020","$lte":"F1_035"}}');
	testExpression("FIELD01 >= 'F1_020' and  FIELD02 <='F2_010'", '{"FIELD01":{"$gte":"F1_020"},"FIELD02":{"$lte":"F2_010"}}');
	testExpression("left$(FIELD01,5) = 'F1_01'", '{"FIELD01":{"$regex":"F1_01.*","$options":"i"}}');


});

test('date', 1, function() {
		var today = new Date();
		ok(true, "today:" + today);
		var expected = {
			"FIELD02": today
		};
		testExpression("FIELD02 = date$", JSON.stringify(expected));
	};