#<AdxTL>@(#)2.0.0.0 $Revision$

# Qualification QLFAC_AVOID

Call OUVRE_TRACE("QLFAC_AVOID") From LECFIC
Call TESTSUITE()

Call FERME_TRACE From LECFIC
GTRACE = "QLFAC_AVOID_"+GACTX.USER
Call LEC_TRACE From LECFIC
End

#**
#* Subprog SETUP called at the beginning of the unit test suite
#*!c
Subprog SETUP
#Call LOG_LINE("SETUP : Database cleaning (fstat="+num$(fstat)+")") From AXUNIT
End

$ERROR_SETUP_NOTFOUND
Resume

#**
#* The main entry point of the unit test suite
#*
#*!
Funprog TESTSUITE()

Call TESTSUITE_START("AVOID", "Test suite for Class AISNULL/AVOID") From AXUNIT

Call ADD_TESTCASE("AVOID_TEST","AVOID test",25) From AXUNIT

Local Clbfile SUITE_RESULT
SUITE_RESULT = func AXUNIT.RUN_TESTSUITE("AVOID", "Test suite for Class AISNULL/AVOID")

End SUITE_RESULT

#**
#* Properties of Class AVOID
#*
#*!
Subprog AVOID_TEST()
Local Integer MY_STATUS

Local Datetime MY_DATETIME : Raz MY_DATETIME

Local Clbfile MY_CLOB(1) : Raz MY_CLOB
Local Blbfile MY_BLOB(1) : Raz MY_BLOB

Call CHECK_EQUAL(AVOID.ACHAR,"") From AXUNIT
Call CHECK_EQUAL(AVOID.ASHORT,0) From AXUNIT
Call CHECK_EQUAL(AVOID.AINT,0) From AXUNIT
Call CHECK_EQUAL(AVOID.ADEC,0.0) From AXUNIT
Call CHECK_EQUAL(AVOID.ADATE,[0/0/0]) From AXUNIT
Call CHECK_EQUAL(AVOID.ALIB,0) From AXUNIT
Call CHECK_EQUAL(num$(AVOID.ACLOB=MY_CLOB)-"ACLOB empty","1 ACLOB empty") From AXUNIT
Call CHECK_EQUAL(num$(AVOID.ABLOB=MY_BLOB)-"ABLOB empty","1 ABLOB empty") From AXUNIT
Call CHECK_EQUAL(num$(AVOID.AINS=null)-"AINS empty","1 AINS empty") From AXUNIT
Call CHECK_EQUAL(AVOID.AUUIDENT,NullUuid) From AXUNIT
Call CHECK_EQUAL(AVOID.ADATTIM,MY_DATETIME) From AXUNIT
Call CHECK_EQUAL(AVOID.ATINYINT,0) From AXUNIT


Local Clbfile MY_CLOB2(1)
Append MY_CLOB2, "ceci est le test de CLOB"
Call CHECK_EQUAL(num$(MY_CLOB2<>MY_CLOB)-"MY_CLOB2 not empty","1 MY_CLOB2 not empty") From AXUNIT

Local Blbfile MY_BLOB2(1)

AVOID.ACHAR="TEST"
AVOID.ASHORT=2
AVOID.AINT=3
AVOID.ADEC=4.5
AVOID.ADATE=date$
AVOID.ALIB=5
AVOID.ACLOB=MY_CLOB2
AVOID.ABLOB=MY_BLOB2
AVOID.AUUIDENT=getUuid
AVOID.ADATTIM=datetime$
AVOID.ATINYINT=5

Call CHECK_EQUAL(AVOID.ACHAR,"") From AXUNIT
Call CHECK_EQUAL(AVOID.ASHORT,0) From AXUNIT
Call CHECK_EQUAL(AVOID.AINT,0) From AXUNIT
Call CHECK_EQUAL(AVOID.ADEC,0.0) From AXUNIT
Call CHECK_EQUAL(AVOID.ADATE,[0/0/0]) From AXUNIT
Call CHECK_EQUAL(AVOID.ALIB,0) From AXUNIT
Call CHECK_EQUAL(num$(AVOID.ACLOB=MY_CLOB)-"ACLOB empty","1 ACLOB empty") From AXUNIT
Call CHECK_EQUAL(num$(AVOID.ABLOB=MY_BLOB)-"ABLOB empty","1 ABLOB empty") From AXUNIT
####NOT OK FOR THE MOMENT ####Call CHECK_EQUAL(num$(AVOID.AINS=null)-"AINS empty","1 AINS empty") From AXUNIT
Call CHECK_EQUAL(AVOID.AUUIDENT,NullUuid) From AXUNIT
Call CHECK_EQUAL(AVOID.ADATTIM,MY_DATETIME) From AXUNIT
Call CHECK_EQUAL(AVOID.ATINYINT,0) From AXUNIT

Call CHECK_EQUAL(num$(MY_CLOB2<>MY_CLOB)-"MY_CLOB2 not empty","1 MY_CLOB2 not empty") From AXUNIT

FreeGroup ASHW
End
