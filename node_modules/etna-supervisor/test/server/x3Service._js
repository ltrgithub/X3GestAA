"use strict";
var module = QUnit.module;
var assert = require("assert");
var config = require('config'); // must be first syracuse require
var x3Helper = require("etna-supervisor/test/fixtures/x3Helper");
var helpers = require("syracuse-core/lib/helpers");

var tracer; // = console.log;
var doStop = false;

module(config.unit_test.x3endpoint.folder + ".x3Service");

if (!config.unit_test || !config.unit_test.x3endpoint || !config.unit_test.run || !config.unit_test.run.x3Service) {
	test('X3 SERVICE UNIT TESTS DISABLED FOR NOW', 1, function() {
		ok(true, "work in progress");
	});
} else {

	asyncTest("start", function(_) {
		if (config.unit_test.x3endpoint.serverPort != config.unit_test.x3endpoint.localPort) {
			ok(x3Helper.initDatabase(_), "syracuse mongodb database initialized");
			x3Helper.initialize(_);
			ok(x3Helper.createObjects(_), "createObjects");
		} else {
			ok(true, "start");
		}
		start();
	});

	var cookie = null;

	function _getCookie(_) {
		cookie = cookie || x3Helper.getCookie(_);
		//!ok("cookie"   ,"cookie"   +JSON.stringify(cookie));
		return cookie;
	}

	asyncTest("About", function(_) {
		var about = x3Helper.get(_, _getCookie(_), x3Helper.x3Url("$service/ABOUT"), 200);
		ok(true, JSON.stringify(about));
		ok(true, about.solutionName !== undefined, "solutionName:" + about.solutionName);
		ok(true, about.folder !== undefined, "folder:" + about.folder);
		start();
	});

	//******************************************************************************

	asyncTest("stop server", 0, function(_) {
		if (config.unit_test.x3endpoint.serverPort != config.unit_test.x3endpoint.localPort) {
			x3Helper.stopServer();
		}
		start();
	});

	asyncTest("stop  tests", 0, function(_) {
		doStop = true;
		start();
	});
	// JavaScript Document
}