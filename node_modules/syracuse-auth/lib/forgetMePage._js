"use strict";

var locale = require('syracuse-core/lib/locale');
var authHelper = require('syracuse-auth/lib/helpers');
var helpers = require('syracuse-core/lib/helpers');
var loginPage = require('syracuse-auth/lib/loginPage');


function genPage(_, request, response) {


	var params = {};
	['loggedAtLabel', 'forgetMeLabel', 'changeUserLabel', 'enterLabel'].forEach(function(label) {
		params[label] = locale.format(module, label);
	});

	//params.js$photo = request.context. request.session.getUserProfile(_).user(_).$uuid
	params.js$login = request.session.getTokenLoginUser(_, request);
	params.js$hasCookie = request.session.checkPersistentCookie(_, request, false);

	// set error message if last authentication failed
	if (request.session && request.session.loginError) {
		params.errorMessage = request.session.loginError;
		// display it only once
		request.session.loginError = "";
	} else {
		params.errorMessage = "";
	}

	authHelper.genPage(_, response, __dirname + "/../html/forgetMe.html", params);

}

function submit(_, request, response) {
	var params = request.readAll(_);
	if (helpers.http.parseHeaders(request.headers || {})["content-type"] === "application/json") params = JSON.parse(params);
	if (!require('syracuse-auth/lib/dispatcher').ensureAuthenticated(_, request, response, params)) return;

	authHelper.redirect(_, request, response, request.session.authTargetUrl || '/', true);
}

exports.dispatch = authHelper.dispatcher(3, {
	page: genPage,
	submit: submit,
});