"use strict";

var locale = require('syracuse-core/lib/locale');
var authHelper = require('syracuse-auth/lib/helpers');
var adminHelper = require("syracuse-collaboration/lib/helpers").AdminHelper;
var helpers = require('syracuse-core/lib/helpers');
var config = require('config');

function genPage(_, request, response) {

	if (config.hosting.sitecheck) {
		var redirectUrl = require('syracuse-health/lib/suspend').getSiteStatus(_, request, response);

		if (redirectUrl) {
			response.writeHead(303, {
				"content-type": "text/html",
				location: redirectUrl
			});
			response.end('<html>Site is currenctly unavailable. Please click on <a href="' + redirectUrl + '">status information</a> for more details</html>');
			return false;
		}
	}

	// check if all endpoint have only on product associated. If it's the case we return the product name in order to be displayed in the page else nothin
	var listApplication = {};
	adminHelper.getEndpoints(_).forEach_(_, function(_, endpoint) {
		var application = endpoint.applicationRef(_);
		var id = application.application(_) + "_" + application.contract(_);
		if ((application.protocol(_) === "x3" || application.protocol(_) === "X3") && Object.keys(listApplication).indexOf(id) === -1) {
			listApplication[id] = application;
		}
	});
	var params = {};
	params['productName'] = '';
	if (Object.keys(listApplication).length === 1) {
		// we can display the product name
		params['productName'] = "ERP X3";
	} // else nothin

	['signInLabel', 'loginLabel', 'passwordLabel', 'keepConnectedLabel', 'dbGo', 'ldapGo', 'oauth2Title', 'sageIdTitle', 'sageIdSignOn', 'sageIdRegister', 'sageIdRegisterExist'].forEach(function(label) {
		params[label] = locale.format(module, label);
	});
	// set visibility flags for the different authentication methods
	['basic', 'digest', 'ldap', 'oauth2', 'sage-id'].forEach(function(method) {
		params[method + "Visibility"] = authHelper.isAllowed(method) ? 'visible' : 'hidden';
	});
	params.passwordVisibility = params.basicVisibility || params.digestVisibility || params.sageerpx3Visibility || params.ldapVisibility;

	params.js$oauth2s = JSON.stringify(require('syracuse-auth/lib/oauth2').getServerList(_));
	params.js$hasCookie = request.session.checkPersistentCookie(_, request, false);

	// set error message if last authentication failed
	if (request.session && request.session.loginError) {
		params.errorMessage = request.session.loginError;
		// display it only once
		request.session.loginError = "";
	} else {
		params.errorMessage = "";
	}

	authHelper.genPage(_, response, __dirname + "/../html/login.html", params);


}

function submit(_, request, response) {
	var params = request.readAll(_);
	if (helpers.http.parseHeaders(request.headers || {})["content-type"] === "application/json") params = JSON.parse(params);
	if (!require('syracuse-auth/lib/dispatcher').ensureAuthenticated(_, request, response, params)) return;

	authHelper.redirect(_, request, response, request.session.authTargetUrl || '/', true);
}

exports.dispatch = authHelper.dispatcher(3, {
	page: genPage,
	submit: submit,
});