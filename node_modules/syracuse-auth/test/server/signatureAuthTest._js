"use strict";

var helpers = require('syracuse-core/lib/helpers');
var globals = require('streamline-runtime').globals;
var config = require('config'); // must be first syracuse require
var adminTestFixtures = require("syracuse-collaboration/test/fixtures/adminTestFixtures");
var util = require('util');


var adminHelper = require("syracuse-collaboration/lib/helpers").AdminHelper;

var doStop = false;

QUnit.module(module.id, {
	setup: function() {},
	teardown: function() {}
});

var port = (config.unit_test && config.unit_test.serverPort) || 3004;

var realm = 'Syracuse';
var crypto = require('crypto');
//	hash function from RFC2617
function _h(value) {
	var hash = crypto.createHash('MD5');
	hash.update(value, "utf8");
	return hash.digest("hex");
}


var db;
asyncTest("init environnement", 1, function(_) {
	//
	db = adminTestFixtures.initializeTestEnvironnement(_);
	ok(db != null, "Environnement initialized");
	//
	start();
});

var signatureAuth = require("syracuse-auth/lib/signatureAuth");

var PASSWORD = "testtestpass";
var SIGNATURE = "testtestsig";
var USERNAME = "testtest";

asyncTest("put signature", 8, function(_) {
	try {
		var entity = db.model.getEntity(_, "user");
		var instance = db.fetchInstance(_, entity, {
			jsonWhere: {
				login: USERNAME
			}
		});

		strictEqual(instance, null, "User does not yet exist");

		var wronguser = signatureAuth.sign(_, SIGNATURE, USERNAME);
		strictEqual(JSON.parse(wronguser).$diagnoses.length, 1, "DB auth - ");
		console.log("Message for wrong user " + wronguser);


		var instance = entity.factory.createInstance(_, null, db);
		instance.login(_, USERNAME);
		instance.lastName(_, USERNAME);
		instance.setPassword(_, PASSWORD);
		instance.authentication(_, "db");
		instance.signature(_, _h(instance.login(_) + ":" + realm + ":" + SIGNATURE));
		instance.active(_, true);
		instance.save(_);

		var correctAuth = signatureAuth.sign(_, PASSWORD, USERNAME);
		strictEqual(JSON.parse(correctAuth).$diagnoses.length, 0, "DB auth - correct password");
		var wrongpwd = signatureAuth.sign(_, SIGNATURE, USERNAME);
		console.log("Message for wrong password " + wrongpwd);
		strictEqual(JSON.parse(wrongpwd).$diagnoses.length, 1, "DB auth - wrong password");
		strictEqual(wrongpwd === wronguser, false, "Different text wrong user - wrong password");


		instance.authentication(_, "sage-id");
		instance.save(_);

		var wrongpwd2 = signatureAuth.sign(_, PASSWORD, USERNAME);
		console.log("Second message for wrong password " + wrongpwd);
		strictEqual(JSON.parse(wrongpwd2).$diagnoses.length, 1, "sage-id auth - wrong password");
		strictEqual(wrongpwd2 === wrongpwd, true, "sage-id auth - wrong password: same text");
		strictEqual(JSON.parse(signatureAuth.sign(_, SIGNATURE, USERNAME)).$diagnoses.length, 0, "sage-id auth - correct password");
		instance.deleteSelf(_);
	} catch (e) {
		console.error("Error " + e.stack);
	}
	console.log(5);
	start();
});

asyncTest("stop tests", 0, function(_) {
	doStop = true;
	start();
});