"use strict";
var module = QUnit.module;
var convert = require("syracuse-rtf");

module("RTF to HTML converter");

function escape(html) {
    return html; //.replace(/\&/g, '&amp;').replace(/\</g, '&lt;').replace(/\>/g, '&gt;');
}

function RTF() {
    // RTF header is: 
    // \rtf <charset> \deff? <fonttbl> <filetbl>? <colortbl>? <stylesheet>? <listtables>? <revtbl>?
    var header = {
        charset: "\\rtf1\\ansi",
        deff: "\\deff0",
        fonttbl: "",
        filetbl: "",
        colortbl: "",
        stylesheet: "",
        listtables: "",
        revtbl: "",
        extra: "",
        _string: null,
        set: function(k, v) {
            this[k] = v;
            this._string = null;
        },
        get: function() {
            if (!this._string) {
                this._string = this.charset + this.deff + this.fonttbl + this.filetbl + this.colortbl + this.stylesheet + this.listtables + this.revtbl + this.extra;
            }
            return this._string;
        }
    };
    // RTF document is:
    // <info>? <docfmt>* <section>+ 
    var document = {
        info: "",
        docfmt: [],
        section: [],
        _string: null,
        get: function() {
            if (!this._string) {
                this._string = this.info + this.docfmt.join() + this.section.join();
            }
            return this._string;
        }
    };

    var obj = {
        equals: function(rtf, result, name) {
            strictEqual(escape(convert.toHtml("{" + header.get() + rtf + "}")), escape(result), name);
            return this;
        }
    };

    // expose header setter
    Object.keys(header).forEach(function(k) {
        if (k.charAt(0) !== '_') {
            obj[k] = function(v) {
                return header.set(k, v), obj;
            };
        }
    })
    return obj;
}

test('Combine Basic Emphasis', 9 + 5, function() {
    var rtf = new RTF();
    // rtf.equals("\\b bold", "<div><b>bold</b></div>", "Bold text");
    // rtf.equals("\\b bold\\b0", "<div><b>bold</b></div>", "Bold text with stop tag");
    // rtf.equals("\\i italic", "<div><i>italic</i></div>", "Italic text");
    // rtf.equals("\\i italic\\i0", "<div><i>italic</i></div>", "Italic text with stop tag");
    // rtf.equals("\\ul underline", "<div><u>underline</u></div>", "Underline text");
    // rtf.equals("\\ul underline\\ul0", "<div><u>underline</u></div>", "Underline text stop tag");
    // rtf.equals("\\ul underline\\ulnone", "<div><u>underline</u></div>", "Underline text stop all tag");
    // rtf.equals("\\strike strikethrough", "<div><s>strikethrough</s></div>", "Strikethrough text");
    // rtf.equals("\\strike strikethrough\\strike0", "<div><s>strikethrough</s></div>", "Strikethrough text stop tag");
    // rtf.equals("\\b\\i bold italic", "<div><b><i>bold italic</i></b></div>", "Bold italic");
    // rtf.equals("\\b\\ul bold underline", "<div><b><u>bold underline</u></b></div>", "Bold underline");
    // rtf.equals("\\b\\strike bold strikethrough", "<div><b><s>bold strikethrough</s></b></div>", "Bold strikethrough");
    // rtf.equals("\\i\\ul italic underline", "<div><i><u>italic underline</u></i></div>", "Italic underline");
    rtf.equals("\\i\\ul italic underline\\ulnone\\i0", "<div><i><u>italic underline</u></i></div>", "Italic underline stop tag");
    rtf.equals("\\i\\ul italic underline\\ulnone italic\\i0", "<div><i><u>italic underline</u>italic</i></div>", "Italic underline, then Italic");
    rtf.equals("\\i\\ul italic underline\\i0\\ulnone", "<div><i><u>italic underline</u></i></div>", "Italic underline stop tag bad order");
    rtf.equals("\\i\\ul italic underline\\i0 underline\\ulnone", "<div><i><u>italic underline</u></i><u>underline</u></div>", "Italic underline, then underline");
    // rtf.equals("\\i\\strike italic strikethrough", "<div><i><s>italic strikethrough</s></i></div>", "Italic strikethrough");
});
// /*
// test('X3 RTF Editor Input', 4, function() {
//     var rtf = new RTF("{\\rtf1\\ansi\\ansicpg1252\\deff0\\deflang1036{\\fonttbl{\\f0\\fswiss\\fprq2\\fcharset0 MS Sans Serif;}}\\viewkind4\\uc1\\pard\\f0\fs17", "\\par}");
//     rtf.equals("\\b bold", "<b>bold</b>", "Bold text");
//     rtf.equals("\\i italic", "<i>italic</i>", "Italic text");
//     rtf.equals("\\ul underline", "<u>underline</u>", "Underline text");
//     rtf.equals("\\strike strikethrough", "<s>strikethrough</s>", "Strikethrough text");
// });
// */
// test('Standard Font sizes', 16, function() {
//     var rtf = new RTF(),
//         sizes = [8, 9, 10, 11, 12, 14, 16, 18, 20, 22, 24, 26, 28, 36, 48, 72];
//     sizes.forEach(function(s) {
//         rtf.equals("\\fs" + s * 2 + " Hello " + s + "pt", '<span style="font-size:' + s + 'pt;">Hello ' + s + 'pt</span>', "Font " + s + "pt");
//     });
// });
// test('Atypic Font sizes', 5, function() {
//     var rtf = new RTF(),
//         sizes = [7.5, 8.5, 9.5, 10.5, 11.5];
//     sizes.forEach(function(s) {
//         rtf.equals("\\fs" + s * 2 + " Hello " + s + "pt", '<span style="font-size:' + s + 'pt;">Hello ' + s + 'pt</span>', "Font " + s + "pt");
//     });
// });
// test('Font Face', 2, function() {
//     var rtf = new RTF();
//     rtf //
//     .charset("\\rtf1\\ansi") //
//     .fonttbl("{\\fonttbl{\\f0 Arial;}{\\f1 Bitstream Charter;}}") //
//     .colortbl("{\\colortbl ;\\red0\\green0\\blue0;\\red255\\green0\\blue0;\\red0\\green255\\blue0;\\red0\\green0\\blue255;}") //
//     .extra("\\viewkind4\\uc1\\pard");
//     rtf.equals("{\\f0 Arial Font}", '<font face="Arial">Arial Font</font>', "Arial Font Face");
//     rtf.equals("{\\f0 Arial Font}{\\f1 Bitstream Charter Font}", //
//     '<font face="Arial">Arial Font</font><font face="Bitstream Charter">Bitstream Charter Font</font>', //
//     "Bitstream Charter Font (x2)");
// });
// test('Colors', 3 + 3, function() {
//     var rtf = new RTF();
//     rtf //
//     .charset("\\rtf1\\ansi\\ansicpg1252\\deff0\\deflang1036") //
//     .fonttbl("{\\fonttbl{\\f0\\fswiss\\fprq2\\fcharset0 MS Sans Serif;}}") //
//     .colortbl("{\\colortbl ;\\red0\\green0\\blue0;\\red255\\green0\\blue0;\\red0\\green255\\blue0;\\red0\\green0\\blue255;}") //
//     .extra("\\viewkind4\\uc1\\pard");
//     rtf.equals("\\cf2 Red color", '<span style="color:#ff0000;">Red color</span>', "Red color");
//     rtf.equals("\\cf3 Green color", '<span style="color:#00ff00;">Green color</span>', "Green color");
//     rtf.equals("\\cf4 Blue color", '<span style="color:#0000ff;">Blue color</span>', "Blue color");
//     rtf.equals("\\highlight2 Red background", '<span style="background-color:#ff0000;">Red background</span>', "Red background color");
//     rtf.equals("\\highlight3 Green background", '<span style="background-color:#00ff00;">Green background</span>', "Green background color");
//     rtf.equals("\\highlight4 Blue background", '<span style="background-color:#0000ff;">Blue background</span>', "Blue background color");
// });
// test('Unicode', 2, function() {
//     var rtf = new RTF();
//     rtf.equals("\\u65276", "ﻼ", "Chineese unicode character ");
//     rtf.equals("\\u65276?", "ﻼ", "Chineese unicode character and substituting ansi character ");
// });

// test('Bullet and Numbering', 1, function() {
//     var rtf = new RTF();
//     rtf //
//     .charset("\\rtf1\\ansi") //
//     .fonttbl("{\\fonttbl{\\f0\\fswiss\\fprq2\\fcharset0 MS Sans Serif;}{\\f1\\fnil\\fcharset2 Symbol;}}") //
//     .extra("\\viewkind4\\uc1\\pard");

//     // rtf.equals("\\bullet item1\\bullet item2", "<ul><li>item1</li><li>item2</li></ul>", "Simple Bullets");
//     // rtf.equals("\\bullet item1\\par\\bullet item2", "<ul><li>item1</li><p><li>item2</li></p></ul>", "Simple Bullets with paragraphs");
//     // A bullet is converted by word as below: 
//     // <span style='font-size:8.5pt;font-family:Symbol'>·</span>
//     // <span style='font-size:8.5pt;font-family:"MS Sans Serif","sans-serif"'>item1</span>
//     rtf.equals("{\\pntext\\f1\\'B7\\tab}{\\*\\pn\\pnlvlblt\\pnf1\\pnindent0{\\pntxtb\\'B7}}" + //
//     "\\fi-15\\li15\\lang1036\\f0\\fs17 item 1\\par\n" + //
//     "{\\pntext\\f1\\'B7\\tab}item 2\\par\n" + //
//     "{\\pntext\\f1\\'B7\\tab}item 3\\par\n" + //
//     "{\\pntext\\f1\\'B7\\tab}item 4\\par\n", //
//     '<div class="">\
// <ul>\
// <li><span style="font-size:8.5pt;"><font face="MS Sans Serif">item 1</font></span></li>\
// <li><span style="font-size:8.5pt;"><font face="MS Sans Serif">item 2</font></span></li>\
// <li><span style="font-size:8.5pt;"><font face="MS Sans Serif">item 3</font></span></li>\
// <li><span style="font-size:8.5pt;"><font face="MS Sans Serif">item 4</font></span></li>\
// </ul>\
// </div>'
// // '<div class="" style="left-margin:1px;">
// // <p><span style="font-size:8.5pt;"><font face="MS Sans Serif">item 2</font></span><span style="font-size:8.5pt;"><font face="MS Sans Serif">item 3</font></span><span style="font-size:8.5pt;"><font face="MS Sans Serif">item 4</font></span></p>
// // </div>
// // <font face="MS Sans Serif"><span style="font-size:8.5pt;">item 1</span></font>'
// //     '<div class="" style="left-margin: 1px;">\
// // <ul>\
// // <li><span style="font-size:8.5pt;"><font face="MS Sans Serif">item 2</font></span></li>\
// // <li><span style="font-size:8.5pt;"><font face="MS Sans Serif">item 3</font></span></li>\
// // <li><span style="font-size:8.5pt;"><font face="MS Sans Serif">item 4</font></span></li>\
// // <li><span style="font-size:8.5pt;"><font face="MS Sans Serif"></font></span></li>\
// // </ul>\
// // </div>' //
//     , "Bullet list");

//     // rtf //
//     // .charset("\\rtf1\\fbidis\\ansi") //
//     // .fonttbl("{\\fonttbl{\\f0\\fswiss\\fprq2\\fcharset0 MS Sans Serif;}{\\f1\\fnil\\fcharset2 Symbol;}}") //
//     // ;
//     // rtf.equals("\\ltrpar\\nowidctlpar\\fi-360\\li720\\f0\\fs24 1.\\tab item1\\par\n" +//
//     //     "2.\\tab item2\\f1\\fs22\\par", "<ol><li>item1</li><li>item2</li></ol>", "Simple Numbering");
// });


// test('Misc', 10, function() {
//     var rtf = new RTF();
//     rtf //
//     .charset("\\rtf1\\ansi") //
//     .fonttbl("{\\fonttbl{\\f0 Arial;}{\\f1 Bitstream Charter;}}") //
//     .colortbl("{\\colortbl ;\\red0\\green0\\blue0;\\red255\\green0\\blue0;\\red0\\green255\\blue0;\\red0\\green0\\blue255;}") //
//     .extra("\\viewkind4\\uc1\\pard");
//     rtf.equals( //
//     "\\par some nested styles: {\\b\\fs15 bold}, {\\i\\fs15 italic}\\par", //
//     '<p>some nested styles: <b><span style="font-size:7.5pt;">bold</span></b>, <i><span style="font-size:7.5pt;">italic</span></i></p><p></p>', //
//     "nested character formatting ");
//     rtf.equals( //
//     "\\par some combined styles: {\\b bold+ \\i italic+\\ul underlined} vs. normal", //
//     "<p>some combined styles: <b>bold+ <i>italic+<u>underlined</u></i></b> vs. normal</p>", //
//     "character formatting, combined styles");
//     rtf.equals( //
//     "\\par some combined and nested styles: {\\b bold, {\\i bold+italic}, \\ul bold+underlined}", // 
//     "<p>some combined and nested styles: <b>bold, <i>bold+italic</i></b><b>, <u>bold+underlined</u></b></p>", //
//     "character formatting, combined and nested styles");
//  rtf.equals("<div align='center'>centered text</div>", //
//         prefix+"\\pard \\qc centered text\\par "+suffix, "alignement  ");
//     rtf.equals("<ul><li>item1</li><li>item2</li></ul>", //
//         prefix+"\\pard {\\pntext }{\\*\\pn \\pnlvlblt {\\pntxtb \\'b7 }}item1\\par {\\pntext }item2\\par \\pard "+suffix, "unordered bulleted list  ");
//     rtf.equals("<ul><li><font face='Arial'><span style='font-size:12pt'>item1</span></font></li><li>item2</li></ul>", //
//         prefix+"{\\fonttbl{\\f0 Arial;}}\\pard {\\pntext }{\\*\\pn \\pnlvlblt {\\pntxtb \\'b7 }}{\\f0 {\\fs24 item1}}\\par {\\pntext }item2\\par \\pard "+suffix, "unordered bulleted list with text formatting ");
//     rtf.equals( //
//     "\\par \\qc centered text\\par another centered paragraph", //
//     '<div class="" align="center"><p>centered text</p><p>another centered paragraph</p></div>', //
//     "2 paragraphs, same formatting");
//     rtf.equals( //
//     "\\par \\qc centered text\\par \\pard second paragraph", //
//     '<div class="" align="center"><p>centered text</p></div><p>second paragraph</p>', //
//     "2 paragraphs, different formatting");
//     rtf.equals( //
//     "\\par \\qc \\b centered bold text\\par \\pard second paragraph", //
//     '<div class="" align="center"><p><b>centered bold text</b></p></div><p><b>second paragraph</b></p>', //
//     "2 paragraphs, different formatting");
//     rtf.equals( //
//     "\\par \\qc \\li600 centered text + left margin", //
//     '<div style="left-margin:40px" class="" align="center"><p>centered text + left margin</p></div>', //
//     " paragraph with 2 formattings");
//     rtf.equals( //
//     "{\\par \\qc centered text\\par second paragraph}", //
//     '<div class="" align="center"><p>centered text</p><p>second paragraph</p></div>', //
//     "2 formatted paragraphs in rtf group ");
//     rtf.equals( //
//     " \\fs15 \\par \\qc centered sized text", //
//     '<span style="font-size:7.5pt;"></span><div class="" align="center"><p><span style="font-size:7.5pt;">centered sized text</span></p></div>', //
//     "Paragraph formatting + Character formatting ");
//     rtf.equals( //
//     "\\par \\fs15 \\qc centered sized text", //
//     '<div class="" align="center"><p><span style="font-size:7.5pt;">centered sized text</span></p></div>', //
//     "Paragraph formatting + Character formatting II");
// /*
// rtf.equals("<span style=\"font-size:7.5pt;\">some <b>bold</b>text</span>", //
//         prefix+"\\fs15 some \\b bold\\b0 text"+suffix, "character formatting ,limited by tags with arg 0 b0 ");
// */
// });
/*test('maps', 1, function() {
    var rtf = "{\\rtf1\\ansi\\ansicpg1252\\deff0\\deflang1036{" + //
    "\\fonttbl\n" + //
    "{\\f0\\fnil\\fcharset0\\fprq0\\fttruetype Helvetica;}" + //
    "{\\f1\\fswiss\\fcharset0\\fprq2 Arial;}" + //
    "{\\f2\\fswiss\\fcharset0\\fprq2 Verdana;}" + //
    "{\\f3\\froman\\fcharset2\\fprq2 Symbol;}}" + //
    "{\\colortbl;\\red255\\green0\\blue0;\\red0\\green255\\blue0;\\red0\\green0\\blue255;}\n" + //
    "{{\\f1\\fs24 Ceci est un texte accentu}\n" + //
    "\\par\n\\par\n{\\f1 des {\\fs18 petits} et des {\\fs32 gros}.}" + //
    "\\par Hellou RTF Wörld\\par " + //
    "\\f0 some \\b bold\\b0, \\i italic\\i0, \\ul underlined\\ulnone  " + //
    "and \\strike strikethrough\\strike0 text " + //
    "}}";

    
    var html = "<div class=\"group\"><div class=\"group\"><font face=\"Arial\">" + //
    "<span style=\"font-size:12pt\">Ceci est un texte accentu</span></font></div>" + //
    "<p></p><p><div class=\"group\"><font face=\"Arial\">des "+ //
    "<div class=\"group\"><span style=\"font-size:9pt\">petits</span></div> et des "+ //
    "<div class=\"group\"><span style=\"font-size:16pt\">gros</span></div>.</font></div></p>" + //
    "<p>Hellou RTF Wörld</p>" + //
    "<p><font face=\"Helvetica\">some <b>bold</b>, <i>italic</i>, "+ //
    "<u>underlined</u> and <s>strikethrough</s>text </font></p>" + //
    "</div>" ;
    console.log(convert(rtf));
    //strictEqual(escape(convert(rtf)), escape(html));
});*/