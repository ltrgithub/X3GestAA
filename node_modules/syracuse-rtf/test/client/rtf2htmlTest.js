"use strict";
var module = QUnit.module;
var convert = require("syracuse-rtf");

module("RTF to HTML converter");

function escape(html) {
    return html; //.replace(/\&/g, '&amp;').replace(/\</g, '&lt;').replace(/\>/g, '&gt;');
}

function RTF() {
    var fonttbl = "",
        colortbl = "",
        charset = "{\\rtf1\\ansi",
        extra = "",
        suffix = "}",
        header;

    setHeader();

    function setHeader() {
        header = charset + fonttbl + colortbl + extra;
    }

    return {
        equals: function(rtf, result, name) {
            strictEqual(escape(convert(header + rtf + suffix)), escape(result), name);
            return this;
        },
        setCharset: function(v) {
            return setHeader(charset = v) || this;
        },
        setFonts: function(v) {
            return setHeader(fonttbl = v) || this;
        },
        setColors: function(v) {
            return setHeader(colortbl = v) || this;
        },
        setExtra: function(v) {
            return setHeader(extra = v) || this;
        }
    };
}

test('Combine Basic Emphasis', 9 + 5, function() {
    var rtf = new RTF();
    rtf.equals("\\b bold", "<b>bold</b>", "Bold text");
    rtf.equals("\\b bold\\b0", "<b>bold</b>", "Bold text with stop tag");
    rtf.equals("\\i italic", "<i>italic</i>", "Italic text");
    rtf.equals("\\i italic\\i0", "<i>italic</i>", "Italic text with stop tag");
    rtf.equals("\\ul underline", "<u>underline</u>", "Underline text");
    rtf.equals("\\ul underline\\ul0", "<u>underline</u>", "Underline text stop tag");
    rtf.equals("\\ul underline\\ulnone", "<u>underline</u>", "Underline text stop all tag");
    rtf.equals("\\strike strikethrough", "<s>strikethrough</s>", "Strikethrough text");
    rtf.equals("\\strike strikethrough\\strike0", "<s>strikethrough</s>", "Strikethrough text stop tag");

    rtf.equals("\\b\\i bold italic", "<b><i>bold italic</i></b>", "Bold italic");
    rtf.equals("\\b\\ul bold underline", "<b><u>bold underline</u></b>", "Bold underline");
    rtf.equals("\\b\\strike bold strikethrough", "<b><s>bold strikethrough</s></b>", "Bold strikethrough");
    rtf.equals("\\i\\ul italic underline", "<i><u>italic underline</u></i>", "Italic underline");
    rtf.equals("\\i\\strike italic strikethrough", "<i><s>italic strikethrough</s></i>", "Italic strikethrough");
});

/*
test('X3 RTF Editor Input', 4, function() {
    var rtf = new RTF("{\\rtf1\\ansi\\ansicpg1252\\deff0\\deflang1036{\\fonttbl{\\f0\\fswiss\\fprq2\\fcharset0 MS Sans Serif;}}\\viewkind4\\uc1\\pard\\f0\fs17", "\\par}");
    rtf.equals("\\b bold", "<b>bold</b>", "Bold text");
    rtf.equals("\\i italic", "<i>italic</i>", "Italic text");
    rtf.equals("\\ul underline", "<u>underline</u>", "Underline text");
    rtf.equals("\\strike strikethrough", "<s>strikethrough</s>", "Strikethrough text");
});
*/

test('Fonts', 6 + 3, function() {
    var rtf = new RTF();

    rtf.equals("\\fs16 Hello 8pt", '<span style="font-size:8pt">Hello 8pt</span>', "Font 8pt");
    rtf.equals("\\fs20 Hello 10pt", '<span style="font-size:10pt">Hello 10pt</span>', "Font 10pt");
    rtf.equals("\\fs24 Hello 12pt", '<span style="font-size:12pt">Hello 12pt</span>', "Font 12pt");
    rtf.equals("\\fs28 Hello 14pt", '<span style="font-size:14pt">Hello 14pt</span>', "Font 14pt");
    rtf.equals("\\fs36 Hello 18pt", '<span style="font-size:18pt">Hello 18pt</span>', "Font 18pt");
    rtf.equals("\\fs48 Hello 24pt", '<span style="font-size:24pt">Hello 24pt</span>', "Font 24pt");

    rtf //
    .setCharset("{\\rtf1\\ansi\\ansicpg1252\\deff0\\deflang1036") //
    .setFonts("{\\fonttbl{\\f0\\fswiss\\fprq2\\fcharset0 MS Sans Serif;}}") //
    .setColors("{\\colortbl ;\\red0\\green0\\blue0;\\red255\\green0\\blue0;\\red0\\green255\\blue0;\\red0\\green0\\blue255;}") //
    .setExtra("\\viewkind4\\uc1\\pard");
    // rtf.equals("\\cf2 Red color", '<font color="#ff0000">Red color</font>', "Red color");
    rtf.equals("\\cf2 Red color", '<span style="color: rgb(255,0,0);">Red color</span>', "Red color");    
    // rtf.equals("\\cf3 Green color", '<font color="#00ff00">Green color</font>', "Green color");
    rtf.equals("\\cf2 Green color", '<span style="color: rgb(0,255,0);">Green color</span>', "Green color");        
    // rtf.equals("\\cf4 Blue color", '<font color="#0000ff">Blue color</font>', "Blue color");
    rtf.equals("\\cf2 Blue color", '<span style="color: rgb(0,0,255);">Blue color</span>', "Blue color");    
});

test('Basic', 20, function() {
    var rtf = new RTF();

    rtf.equals("{\\fonttbl{\\f0 Arial;}}{\\f0 fontarial}", '<font face="Arial">fontarial</font>', "font face ");
    rtf.equals("{\\fonttbl{\\f0 Arial;}{\\f1 Bitstream Charter;}}{\\f0 fontarial}{\\f1 fontbitstreamcharter}", //
    '<font face="Arial">fontarial</font><font face="Bitstream Charter">fontbitstreamcharter</font>', "font face x2");
    rtf.equals("{\\fs15 fontsize7.5pt}", "<span style=\"font-size:7.5pt\">fontsize7.5pt</span>", "font-size ");
    rtf.equals("{\\colortbl;\\red255\\green0\\blue0;}{\\cf1 red}", '<font color="#ff0000">red</font>', "font color ");
    rtf.equals("{\\colortbl;\\red255\\green0\\blue0;}{\\highlight1 redbackground}", '<font bgcolor="#ff0000">redbackground</font>', "background color ");

    rtf.equals( //
    "\\par some nested styles: {\\b\\fs15 bold}, {\\i\\fs15 italic}\\par", //
    "<p>some nested styles: <b><span style=\"font-size:7.5pt\">bold</span></b>,<i><span style=\"font-size:7.5pt\">italic</span></i></p><p></p>", //
    "nested character formatting ");

    rtf.equals( //
    "\\par some combined styles: {\\b bold+ \\i italic+\\ul underlined} vs. normal", //
    "<p>some combined styles: <b>bold+ <i>italic+<u>underlined</u></i></b> vs. normal</p>", //
    "character formatting, combined styles");

    rtf.equals( //
    "\\par some combined and nested styles: {\\b bold, {\\i bold+italic}, \\ul bold+underlined}", // 
    "<p>some combined and nested styles: <b>bold, <i>bold+italic</i></b><b>, <u>bold+underlined</u></b></p>", //
    "character formatting, combined and nested styles");


/* rtf.equals("<div align='center'>centered text</div>", //
        prefix+"\\pard \\qc centered text\\par "+suffix, "alignement  ");
    rtf.equals("<ul><li>item1</li><li>item2</li></ul>", //
        prefix+"\\pard {\\pntext }{\\*\\pn \\pnlvlblt {\\pntxtb \\'b7 }}item1\\par {\\pntext }item2\\par \\pard "+suffix, "unordered bulleted list  ");
    rtf.equals("<ul><li><font face='Arial'><span style='font-size:12pt'>item1</span></font></li><li>item2</li></ul>", //
        prefix+"{\\fonttbl{\\f0 Arial;}}\\pard {\\pntext }{\\*\\pn \\pnlvlblt {\\pntxtb \\'b7 }}{\\f0 {\\fs24 item1}}\\par {\\pntext }item2\\par \\pard "+suffix, "unordered bulleted list with text formatting ");
    */

    rtf.equals( //
    "\\par \\qc centered text\\par another centered paragraph", //
    '<div class="parformat" align="center"><p>centered text</p><p>another centered paragraph</p></div>', //
    "2 paragraphs, same formatting");
    rtf.equals( //
    "\\par \\qc centered text\\par \\pard second paragraph", //
    '<div class="parformat" align="center"><p>centered text</p></div><p>second paragraph</p>', //
    "2 paragraphs, different formatting");

    rtf.equals( //
    "\\par \\qc \\b centered bold text\\par \\pard second paragraph", //
    '<div class="parformat" align="center"><p><b>centered bold text</b></p></div><p><b>second paragraph</b></p>', //
    "2 paragraphs, different formatting");

    rtf.equals( //
    "\\par \\qc \\li600 centered text + left margin", //
    '<div style="left-margin:40px" class="parformat" align="center"><p>centered text + left margin</p></div>', //
    " paragraph with 2 formattings");
    rtf.equals( //
    "{\\par \\qc centered text\\par second paragraph}", //
    '<div class="parformat" align="center"><p>centered text</p><p>second paragraph</p></div>', //
    "2 formatted paragraphs in rtf group ");

    rtf.equals( //
    " \\fs15 \\par \\qc centered sized text", //
    '<span style="font-size:7.5pt"></span><div class="parformat" align="center"><p><span style="font-size:7.5pt">centered sized text</span></p></div>', //
    "Paragraph formatting + Character formatting ");
    rtf.equals( //
    "\\par \\fs15 \\qc centered sized text", //
    '<div class="parformat" align="center"><p><span style="font-size:7.5pt">centered sized text</span></p></div>', //
    "Paragraph formatting + Character formatting II");

    rtf.equals("\\u65276", "ﻼ", "unicode character ");
    rtf.equals("\\u65276?", "ﻼ", "unicode character and substituting ansi character ");
    rtf.equals("\\u65276?", "ﻼ", "unicode character and substituting ansi character ");

    rtf.equals("\\bullet item1\\bullet item2", "<li>item1</li><li>item2</li>", "bullets ");
    rtf.equals("\\bullet item1\\par\\bullet item2", "<li>item1</li><p><li>item2</li></p>", "bullets with paragraphs ");

/*
rtf.equals("<span style=\"font-size:7.5pt\">some <b>bold</b>text</span>", //
        prefix+"\\fs15 some \\b bold\\b0 text"+suffix, "character formatting ,limited by tags with arg 0 b0 ");
*/

});

/*test('maps', 1, function() {
    var rtf = "{\\rtf1\\ansi\\ansicpg1252\\deff0\\deflang1036{" + //
    "\\fonttbl\n" + //
    "{\\f0\\fnil\\fcharset0\\fprq0\\fttruetype Helvetica;}" + //
    "{\\f1\\fswiss\\fcharset0\\fprq2 Arial;}" + //
    "{\\f2\\fswiss\\fcharset0\\fprq2 Verdana;}" + //
    "{\\f3\\froman\\fcharset2\\fprq2 Symbol;}}" + //
    "{\\colortbl;\\red255\\green0\\blue0;\\red0\\green255\\blue0;\\red0\\green0\\blue255;}\n" + //
    "{{\\f1\\fs24 Ceci est un texte accentu}\n" + //
    "\\par\n\\par\n{\\f1 des {\\fs18 petits} et des {\\fs32 gros}.}" + //
    "\\par Hellou RTF Wörld\\par " + //
    "\\f0 some \\b bold\\b0, \\i italic\\i0, \\ul underlined\\ulnone  " + //
    "and \\strike strikethrough\\strike0 text " + //
    "}}";

    
    var html = "<div class=\"group\"><div class=\"group\"><font face=\"Arial\">" + //
    "<span style=\"font-size:12pt\">Ceci est un texte accentu</span></font></div>" + //
    "<p></p><p><div class=\"group\"><font face=\"Arial\">des "+ //
    "<div class=\"group\"><span style=\"font-size:9pt\">petits</span></div> et des "+ //
    "<div class=\"group\"><span style=\"font-size:16pt\">gros</span></div>.</font></div></p>" + //
    "<p>Hellou RTF Wörld</p>" + //
    "<p><font face=\"Helvetica\">some <b>bold</b>, <i>italic</i>, "+ //
    "<u>underlined</u> and <s>strikethrough</s>text </font></p>" + //
    "</div>" ;
    console.log(convert(rtf));
    //strictEqual(escape(convert(rtf)), escape(html));
});*/