"use strict";
//
/* global QUnit: false, ok: false, asyncTest: false, test: false, equal: false, strictEqual: false, same: false, start: false, stop: false */

var RTF = require("./rtfHelper").RTF;

QUnit.module(module.id);

test('Combine Basic Emphasis', function() {
	var rtf = new RTF();
	rtf.equals("\\b bold", "<b>bold</b>", "Bold text");
	rtf.equals("\\b bold\\b0", "<b>bold</b>", "Bold text with stop tag");
	rtf.equals("\\i italic", "<i>italic</i>", "Italic text");
	rtf.equals("\\i italic\\i0", "<i>italic</i>", "Italic text with stop tag");
	rtf.equals("\\ul underline", "<u>underline</u>", "Underline text");
	rtf.equals("\\ul underline\\ul0", "<u>underline</u>", "Underline text stop tag");
	rtf.equals("\\ul underline\\ulnone", "<u>underline</u>", "Underline text stop all tag");
	rtf.equals("\\strike strikethrough", "<s>strikethrough</s>", "Strikethrough text");
	rtf.equals("\\strike strikethrough\\strike0", "<s>strikethrough</s>", "Strikethrough text stop tag");
	rtf.equals("\\b\\i bold italic", "<b><i>bold italic</i></b>", "Bold italic");
	rtf.equals("\\b\\ul bold underline", "<b><u>bold underline</u></b>", "Bold underline");
	rtf.equals("\\b\\strike bold strikethrough", "<b><s>bold strikethrough</s></b>", "Bold strikethrough");
	rtf.equals("\\i\\ul italic underline", "<i><u>italic underline</u></i>", "Italic underline");
	rtf.equals("\\i\\ul italic underline\\ulnone\\i0", "<i><u>italic underline</u></i>", "Italic underline stop tag");
	rtf.equals("\\i\\ul italic underline\\ulnone italic\\i0", "<i><u>italic underline</u>italic</i>", "Italic underline, then Italic");
	// rtf.equals("\\i\\ul italic underline\\i0\\ulnone", "<i><u>italic underline</u></i>", "Italic underline stop tag bad order");
	// rtf.equals("\\i\\ul italic underline\\i0 underline\\ulnone", "<i><u>italic underline</u></i><u>underline</u>", "Italic underline, then underline");
	rtf.equals("\\i\\strike italic strikethrough", "<i><s>italic strikethrough</s></i>", "Italic strikethrough");
});
test('Bold Unbold', function() {
	var rtf = new RTF();
	rtf.equals("{\\rtf1\\ansi\\ansicpg1252\\deff0\\deflang1036{\\fonttbl{\\f0\\fswiss\\fprq2\\fcharset0 MS Sans Serif;}} \\viewkind4\\uc1\\pard\\b\\f0\\fs17 line1\\par \\b0 line2\\par }", ' <p><b><font face="MS Sans Serif"><span style="font-size: 8.5pt;">line1</span></font></b></p><p><font face="MS Sans Serif"><span style="font-size: 8.5pt;">line2</span></font></p>', "Bold line1 unbold line2");
});
test('X3 RTF Editor Input', 4, function() {
	var rtf = new RTF("{\\rtf1\\ansi\\ansicpg1252\\deff0\\deflang1036{\\fonttbl{\\f0\\fswiss\\fprq2\\fcharset0 MS Sans Serif;}}\\viewkind4\\uc0\\pard\\f0\fs17", "\\par}");
	rtf.equals("\\b bold", "<b>bold</b>", "Bold text");
	rtf.equals("\\i italic", "<i>italic</i>", "Italic text");
	rtf.equals("\\ul underline", "<u>underline</u>", "Underline text");
	rtf.equals("\\strike strikethrough", "<s>strikethrough</s>", "Strikethrough text");
});

test('Standard Font sizes', function() {
	var rtf = new RTF(),
		sizes = [8, 9, 10, 11, 12, 14, 16, 18, 20, 22, 24, 26, 28, 36, 48, 72];
	sizes.forEach(function(s) {
		rtf.equals("\\fs" + s * 2 + " Hello " + s + "pt", '<span style="font-size: ' + s + 'pt;">Hello ' + s + 'pt</span>', "Font " + s + "pt");
	});
});
test('Atypic Font sizes', function() {
	var rtf = new RTF(),
		sizes = [7.5, 8.5, 9.5, 10.5, 11.5];
	sizes.forEach(function(s) {
		rtf.equals("\\fs" + s * 2 + " Hello " + s + "pt", '<span style="font-size: ' + s + 'pt;">Hello ' + s + 'pt</span>', "Font " + s + "pt");
	});
});
test('Font Face', function() {
	var rtf = new RTF();
	rtf //
	.charset("\\rtf1\\ansi") //
	.fonttbl("{\\fonttbl{\\f0 Arial;}{\\f1 Bitstream Charter;}}") //
	.colortbl("{\\colortbl ;\\red0\\green0\\blue0;\\red255\\green0\\blue0;\\red0\\green255\\blue0;\\red0\\green0\\blue255;}") //
	.extra("\\viewkind4\\uc0\\pard");
	rtf.equals("{\\f0 Arial Font}", '<font face="Arial">Arial Font</font>', "Arial Font Face");
	rtf.equals("{\\f0 Arial Font}{\\f1 Bitstream Charter Font}", //
		'<font face="Arial">Arial Font</font><font face="Bitstream Charter">Bitstream Charter Font</font>', //
		"Bitstream Charter Font (x2)");
});
test('Colors', function() {
	var rtf = new RTF();
	rtf //
	.charset("\\rtf1\\ansi\\ansicpg1252\\deff0\\deflang1036") //
	.fonttbl("{\\fonttbl{\\f0\\fswiss\\fprq2\\fcharset0 MS Sans Serif;}}") //
	.colortbl("{\\colortbl ;\\red0\\green0\\blue0;\\red255\\green0\\blue0;\\red0\\green255\\blue0;\\red0\\green0\\blue255;}") //
	.extra("\\viewkind4\\uc0\\pard");
	rtf.equals("\\cf2 Red color", '<span style="color: #ff0000;">Red color</span>', "Red color");
	rtf.equals("\\cf3 Green color", '<span style="color: #00ff00;">Green color</span>', "Green color");
	rtf.equals("\\cf4 Blue color", '<span style="color: #0000ff;">Blue color</span>', "Blue color");
	rtf.equals("\\highlight2 Red background", '<span style="background-color: #ff0000;">Red background</span>', "Red background color");
	rtf.equals("\\highlight3 Green background", '<span style="background-color: #00ff00;">Green background</span>', "Green background color");
	rtf.equals("\\highlight4 Blue background", '<span style="background-color: #0000ff;">Blue background</span>', "Blue background color");
});
test('Unicode', function() {
	var rtf = new RTF();

	rtf.equals("\\u65276", "ﻼ", "Chineese unicode character ");
	rtf.equals("\\u65276?", "ﻼ", "Chineese unicode character and substituting ansi character ");
});
test('More Fonts', function() {
	var rtf = new RTF();
	rtf //
	.charset("\\rtf1\\ansi") //
	.fonttbl("{\\fonttbl{\\f0 Arial;}{\\f1\\fswiss\\fprq2\\fcharset0 MS Sans Serif;}}") //
	.colortbl("{\\colortbl ;\\red0\\green0\\blue0;\\red255\\green0\\blue0;\\red0\\green255\\blue0;\\red0\\green0\\blue255;}") //
	.extra("\\viewkind4\\uc0\\pard");
	rtf.equals("\\f0\\fs18 Arial Font 9pt", '<font face="Arial"><span style="font-size: 9pt;">Arial Font 9pt</span></font>', "Arial Font Face 9pt");
	rtf.equals("\\f0\\fs18 Arial Font 9pt\\fs28  Arial Font 14pt", //
		'<font face="Arial"><span style="font-size: 9pt;">Arial Font 9pt<span style="font-size: 14pt;"> Arial Font 14pt</span></span></font>', "Arial Font Face 9pt then 14pt");
});

test('Bullet and Numbering', function() {
	var rtf = new RTF();
	rtf //
	.charset("\\rtf1\\ansi") //
	.fonttbl("{\\fonttbl{\\f0\\fswiss\\fprq2\\fcharset0 MS Sans Serif;}{\\f1\\fnil\\fcharset2 Symbol;}}") //
	.extra("\\viewkind4\\uc0\\pard");

	// A bullet is converted by word as below:
	// <span style='font-size:8.5pt;font-family:Symbol'>·</span>
	// <span style='font-size:8.5pt;font-family:"MS Sans Serif","sans-serif"'>item1</span>
	rtf.equals("{\\pntext\\f1\\'B7\\tab}{\\*\\pn\\pnlvlblt\\pnf1\\pnindent0{\\pntxtb\\'B7}}" + //
		"\\fi-15\\li720\\lang1036\\f0\\fs17 item 1\\par\n" + //
		"{\\pntext\\f1\\'B7\\tab}item 2\\par\n" + //
		"{\\pntext\\f1\\'B7\\tab}item 3\\par\n" + //
		"{\\pntext\\f1\\'B7\\tab}item 4\\par\n", //
		'<div style="margin-left: 36pt;">\
<ul>\
<li><font face="MS Sans Serif"><span style="font-size: 8.5pt;">item 1</span></font></li>\
<li><font face="MS Sans Serif"><span style="font-size: 8.5pt;">item 2</span></font></li>\
<li><font face="MS Sans Serif"><span style="font-size: 8.5pt;">item 3</span></font></li>\
<li><font face="MS Sans Serif"><span style="font-size: 8.5pt;">item 4</span></font></li>\
</ul></div>', "Bullet list");

	rtf.equals("{\\pntext\\f1\\'B7\\tab}{\\*\\pn\\pnlvlblt\\pnf1\\pnindent0{\\pntxtb\\'B7}}\
\\fi-15\\li720\\lang1036\\f0\\fs17 item 1.1\\par\
{\\pntext\\f1\\'B7\\tab}item 1.2\\par\\pard\
{\\pntext\\f1\\'B7\\tab}{\\*\\pn\\pnlvlblt\\pnf1\\pnindent0{\\pntxtb\\'B7}}\
\\fi-15\\li720\\lang1036\\f0\\fs17 item 2.1\\par\
{\\pntext\\f1\\'B7\\tab}item 2.2\\par", //
		'<div style="margin-left: 36pt;">\
<ul>\
<li><font face="MS Sans Serif"><span style="font-size: 8.5pt;">item 1.1</span></font></li>\
<li><font face="MS Sans Serif"><span style="font-size: 8.5pt;">item 1.2</span></font></li>\
</ul>\
</div>\
<div style="margin-left: 36pt;">\
<ul>\
<li><font face="MS Sans Serif"><span style="font-size: 8.5pt;">item 2.1</span></font></li>\
<li><font face="MS Sans Serif"><span style="font-size: 8.5pt;">item 2.2</span></font></li>\
</ul>\
</div>', "Bullet list");

	rtf = new RTF();
	rtf //
	.charset("\\rtf1\\ansi") //
	.fonttbl("{\\fonttbl{\\f0\\Arial;}{\\f1\\fnil\\fcharset2 Symbol;}}") //
	.extra("\\viewkind4\\uc0\\pard");

	rtf.equals("{\\pntext }{\\*\\pn \\pnlvlblt {\\pntxtb \\'b7 }}item1\\par {\\pntext }item2\\par", //
		"<div><ul><li>item1</li><li>item2</li></ul></div>", //
		"unordered bulleted list  ");

	rtf.equals("{\\pntext }{\\*\\pn \\pnlvlblt {\\pntxtb \\'b7 }}{\\f0 {\\fs24 item1}}\\par {\\pntext }item2\\par", //
		'<div><ul><li><font face="Arial"><span style="font-size: 12pt;">item1</span></font></li><li>item2</li></ul></div>', //
		"unordered bulleted list with text formatting ");

	// rtf //
	// .charset("\\rtf1\\fbidis\\ansi") //
	// .fonttbl("{\\fonttbl{\\f0\\fswiss\\fprq2\\fcharset0 MS Sans Serif;}{\\f1\\fnil\\fcharset2 Symbol;}}") //
	// ;
	// rtf.equals("\\ltrpar\\nowidctlpar\\fi-360\\li720\\f0\\fs24 1.\\tab item1\\par\n" +//
	//     "2.\\tab item2\\f1\\fs22\\par", "<ol><li>item1</li><li>item2</li></ol>", "Simple Numbering");
});

test('Alignment', function() {
	var rtf = new RTF();
	rtf //
	.charset("\\rtf1\\ansi") //
	.fonttbl("{\\fonttbl{\\f0 Arial;}{\\f1 Bitstream Charter;}}") //
	.colortbl("{\\colortbl ;\\red0\\green0\\blue0;\\red255\\green0\\blue0;\\red0\\green255\\blue0;\\red0\\green0\\blue255;}") //
	.extra("\\viewkind4\\uc0\\pard ");

	rtf.equals("\\qc centered text\\par", //
		'<div align="center"><p>centered text</p></div>', //
		"alignement  ");

	rtf.equals( //
		"\\qc centered text\\par another centered paragraph\\par", //
		'<div align="center"><p>centered text</p><p>another centered paragraph</p></div>', //
		"2 paragraphs, same formatting");

	rtf.equals( //
		"\\qc centered text\\par\\pard second paragraph\\par", //
		'<div align="center"><p>centered text</p></div><p>second paragraph</p>', //
		"2 paragraphs, different formatting");

	rtf.equals( //
		"\\qc \\b centered bold text\\par\\pard second paragraph\\par", //
		'<div align="center"><p><b>centered bold text</b></p></div><p><b>second paragraph</b></p>', //
		"2 paragraphs, different formatting");

	rtf.equals( //
		"\\qc \\li600 centered text + left margin\\par", //
		'<div style="margin-left: 30pt;" align="center"><p>centered text + left margin</p></div>', //
		" paragraph with 2 formattings");

	rtf.equals( //
		"{\\qc centered text\\par second paragraph\\par}", //
		'<div align="center"><p>centered text</p><p>second paragraph</p></div>', //
		"2 formatted paragraphs in rtf group ");

	rtf.equals( //
		"\\fs15 \\par \\qc centered sized text", //
		'<div align="center"><p><span style="font-size: 7.5pt;"></span></p><span style="font-size: 7.5pt;">centered sized text</span></div>', //
		"Paragraph formatting + Character formatting ");

	rtf.equals( //
		"\\par \\fs15 \\qc centered sized text", //
		'<div align="center"><p></p><span style="font-size: 7.5pt;">centered sized text</span></div>', //
		"Paragraph formatting + Character formatting II");
});

test('Misc', function() {
	var rtf = new RTF();
	rtf //
	.charset("\\rtf1\\ansi") //
	.fonttbl("{\\fonttbl{\\f0 Arial;}{\\f1 Bitstream Charter;}}") //
	.colortbl("{\\colortbl ;\\red0\\green0\\blue0;\\red255\\green0\\blue0;\\red0\\green255\\blue0;\\red0\\green0\\blue255;}") //
	.extra("\\viewkind4\\uc0\\pard ");

	rtf.equals( //
		"\\par some nested styles: {\\b\\fs15 bold}, {\\i\\fs15 italic}\\par", //
		'<p></p><p>some nested styles: <b><span style="font-size: 7.5pt;">bold</span></b>, <i><span style="font-size: 7.5pt;">italic</span></i></p>', //
		"nested character formatting ");

	rtf.equals( //
		"some combined styles: {\\b bold+ \\i italic+\\ul underlined} vs. normal\\par", //
		"<p>some combined styles: <b>bold+ <i>italic+<u>underlined</u></i></b> vs. normal</p>", //
		"character formatting, combined styles");

	rtf.equals( //
		"some combined and nested styles: {\\b bold, {\\i bold+italic}, \\ul bold+underlined}\\par", //
		"<p>some combined and nested styles: <b>bold, <i>bold+italic</i></b><b>, <u>bold+underlined</u></b></p>", //
		"character formatting, combined and nested styles");

	rtf.equals( //
		"first line\\line next line\\line and another one", //
		"first line<br>next line<br>and another one", //
		"newline");

	/*
rtf.equals("<span style=\"font-size:7.5pt;\">some <b>bold</b>text</span>", //
        prefix+"\\fs15 some \\b bold\\b0 text"+suffix, "character formatting ,limited by tags with arg 0 b0 ");
*/
});
/*test('maps', 1, function() {
    var rtf = "{\\rtf1\\ansi\\ansicpg1252\\deff0\\deflang1036{" + //
    "\\fonttbl\n" + //
    "{\\f0\\fnil\\fcharset0\\fprq0\\fttruetype Helvetica;}" + //
    "{\\f1\\fswiss\\fcharset0\\fprq2 Arial;}" + //
    "{\\f2\\fswiss\\fcharset0\\fprq2 Verdana;}" + //
    "{\\f3\\froman\\fcharset2\\fprq2 Symbol;}}" + //
    "{\\colortbl;\\red255\\green0\\blue0;\\red0\\green255\\blue0;\\red0\\green0\\blue255;}\n" + //
    "{{\\f1\\fs24 Ceci est un texte accentu}\n" + //
    "\\par\n\\par\n{\\f1 des {\\fs18 petits} et des {\\fs32 gros}.}" + //
    "\\par Hellou RTF Wörld\\par " + //
    "\\f0 some \\b bold\\b0, \\i italic\\i0, \\ul underlined\\ulnone  " + //
    "and \\strike strikethrough\\strike0 text " + //
    "}}";


    var html = "<div class=\"group\"><div class=\"group\"><font face=\"Arial\">" + //
    "<span style=\"font-size:12pt\">Ceci est un texte accentu</span></font></div>" + //
    "<p></p><p><div class=\"group\"><font face=\"Arial\">des "+ //
    "<div class=\"group\"><span style=\"font-size:9pt\">petits</span></div> et des "+ //
    "<div class=\"group\"><span style=\"font-size:16pt\">gros</span></div>.</font></div></p>" + //
    "<p>Hellou RTF Wörld</p>" + //
    "<p><font face=\"Helvetica\">some <b>bold</b>, <i>italic</i>, "+ //
    "<u>underlined</u> and <s>strikethrough</s>text </font></p>" + //
    "</div>" ;
    console.log(convert(rtf));
    //strictEqual(escape(convert(rtf)), escape(html));
});*/