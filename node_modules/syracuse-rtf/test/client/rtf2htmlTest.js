"use strict";
var module = QUnit.module;
var convert = require("syracuse-rtf");

var prefix = "{\\rtf1\\ansi"
var suffix = "}";

module("RTF to HTML converter");

function escape(html) {
    return html; //.replace(/\&/g, '&amp;').replace(/\</g, '&lt;').replace(/\>/g, '&gt;');
}

function fragmentEqual(rtf, result, name) {
    strictEqual(escape(convert(prefix + rtf + suffix)), escape(result), name);
}

test('Emphasis', 4, function() {
    fragmentEqual("{\\b bold}", "<b>bold</b>", "Default Bold");
    fragmentEqual("{\\i italic}", "<i>italic</i>", "Default Italic");
    fragmentEqual("{\\ul underline}", "<u>underline</u>", "Default Underline");
    fragmentEqual("{\\strike strikethrough}", "<s>strikethrough</s>", "Default Strikethrough");
});

test('Basic', 20, function() {

    fragmentEqual("{\\fonttbl{\\f0 Arial;}}{\\f0 fontarial}", "<font face=\"Arial\">fontarial</font>", "font face ");
    fragmentEqual("{\\fonttbl{\\f0 Arial;}{\\f1 Bitstream Charter;}}{\\f0 fontarial}{\\f1 fontbitstreamcharter}", //
    "<font face=\"Arial\">fontarial</font><font face=\"Bitstream Charter\">fontbitstreamcharter</font>", "font face x2");
    fragmentEqual("{\\fs15 fontsize7.5pt}", "<span style=\"font-size:7.5pt\">fontsize7.5pt</span>", "font-size ");
    fragmentEqual("{\\colortbl;\\red255\\green0\\blue0;}{\\cf1 red}", "<font color=\"#ff0000\">red</font>", "font color ");
    fragmentEqual("{\\colortbl;\\red255\\green0\\blue0;}{\\highlight1 redbackground}", "<font bgcolor=\"#ff0000\">redbackground</font>", "background color ");

    fragmentEqual( //
    "\\par some nested styles: {\\b\\fs15 bold}, {\\i\\fs15 italic}\\par", //
    "<p>some nested styles: <b><span style=\"font-size:7.5pt\">bold</span></b>,<i><span style=\"font-size:7.5pt\">italic</span></i></p><p></p>", //
    "nested character formatting ");

    fragmentEqual( //
    "\\par some combined styles: {\\b bold+ \\i italic+\\ul underlined} vs. normal", //
    "<p>some combined styles: <b>bold+ <i>italic+<u>underlined</u></i></b> vs. normal</p>", //
    "character formatting, combined styles");

    fragmentEqual( //
    "\\par some combined and nested styles: {\\b bold, {\\i bold+italic}, \\ul bold+underlined}", // 
    "<p>some combined and nested styles: <b>bold, <i>bold+italic</i></b><b>, <u>bold+underlined</u></b></p>", //
    "character formatting, combined and nested styles");


/* fragmentEqual("<div align='center'>centered text</div>", //
        prefix+"\\pard \\qc centered text\\par "+suffix, "alignement  ");
    fragmentEqual("<ul><li>item1</li><li>item2</li></ul>", //
        prefix+"\\pard {\\pntext }{\\*\\pn \\pnlvlblt {\\pntxtb \\'b7 }}item1\\par {\\pntext }item2\\par \\pard "+suffix, "unordered bulleted list  ");
    fragmentEqual("<ul><li><font face='Arial'><span style='font-size:12pt'>item1</span></font></li><li>item2</li></ul>", //
        prefix+"{\\fonttbl{\\f0 Arial;}}\\pard {\\pntext }{\\*\\pn \\pnlvlblt {\\pntxtb \\'b7 }}{\\f0 {\\fs24 item1}}\\par {\\pntext }item2\\par \\pard "+suffix, "unordered bulleted list with text formatting ");
    */

    fragmentEqual( //
    "\\par \\qc centered text\\par another centered paragraph", //
    "<div class=\"parformat\" align=\"center\"><p>centered text</p><p>another centered paragraph</p></div>", //
    "2 paragraphs, same formatting");
    fragmentEqual( //
    "\\par \\qc centered text\\par \\pard second paragraph", //
    "<div class=\"parformat\" align=\"center\"><p>centered text</p></div><p>second paragraph</p>", //
    "2 paragraphs, different formatting");

    fragmentEqual( //
    "\\par \\qc \\b centered bold text\\par \\pard second paragraph", //
    "<div class=\"parformat\" align=\"center\"><p><b>centered bold text</b></p></div><p><b>second paragraph</b></p>", //
    "2 paragraphs, different formatting");

    fragmentEqual( //
    "\\par \\qc \\li600 centered text + left margin", //
    "<div style=\"left-margin:40px\" class=\"parformat\" align=\"center\"><p>centered text + left margin</p></div>", //
    " paragraph with 2 formattings");
    fragmentEqual( //
    "{\\par \\qc centered text\\par second paragraph}", //
    "<div class=\"parformat\" align=\"center\"><p>centered text</p><p>second paragraph</p></div>", //
    "2 formatted paragraphs in rtf group ");

    fragmentEqual( //
    " \\fs15 \\par \\qc centered sized text", //
    "<span style=\"font-size:7.5pt\"></span><div class=\"parformat\" align=\"center\"><p><span style=\"font-size:7.5pt\">centered sized text</span></p></div>", //
    "Paragraph formatting + Character formatting ");
    fragmentEqual( //
    "\\par \\fs15 \\qc centered sized text", //
    "<div class=\"parformat\" align=\"center\"><p><span style=\"font-size:7.5pt\">centered sized text</span></p></div>", //
    "Paragraph formatting + Character formatting II");

    fragmentEqual("\\u65276", "ﻼ", "unicode character ");
    fragmentEqual("\\u65276?", "ﻼ", "unicode character and substituting ansi character ");
    fragmentEqual("\\u65276?", "ﻼ", "unicode character and substituting ansi character ");

    fragmentEqual("\\bullet item1\\bullet item2", "<li>item1</li><li>item2</li>", "bullets ");
    fragmentEqual("\\bullet item1\\par\\bullet item2", "<li>item1</li><p><li>item2</li></p>", "bullets with paragraphs ");

/*
fragmentEqual("<span style=\"font-size:7.5pt\">some <b>bold</b>text</span>", //
        prefix+"\\fs15 some \\b bold\\b0 text"+suffix, "character formatting ,limited by tags with arg 0 b0 ");
*/

});

/*test('maps', 1, function() {
    var rtf = "{\\rtf1\\ansi\\ansicpg1252\\deff0\\deflang1036{" + //
    "\\fonttbl\n" + //
    "{\\f0\\fnil\\fcharset0\\fprq0\\fttruetype Helvetica;}" + //
    "{\\f1\\fswiss\\fcharset0\\fprq2 Arial;}" + //
    "{\\f2\\fswiss\\fcharset0\\fprq2 Verdana;}" + //
    "{\\f3\\froman\\fcharset2\\fprq2 Symbol;}}" + //
    "{\\colortbl;\\red255\\green0\\blue0;\\red0\\green255\\blue0;\\red0\\green0\\blue255;}\n" + //
    "{{\\f1\\fs24 Ceci est un texte accentu}\n" + //
    "\\par\n\\par\n{\\f1 des {\\fs18 petits} et des {\\fs32 gros}.}" + //
    "\\par Hellou RTF Wörld\\par " + //
    "\\f0 some \\b bold\\b0, \\i italic\\i0, \\ul underlined\\ulnone  " + //
    "and \\strike strikethrough\\strike0 text " + //
    "}}";

    
    var html = "<div class=\"group\"><div class=\"group\"><font face=\"Arial\">" + //
    "<span style=\"font-size:12pt\">Ceci est un texte accentu</span></font></div>" + //
    "<p></p><p><div class=\"group\"><font face=\"Arial\">des "+ //
    "<div class=\"group\"><span style=\"font-size:9pt\">petits</span></div> et des "+ //
    "<div class=\"group\"><span style=\"font-size:16pt\">gros</span></div>.</font></div></p>" + //
    "<p>Hellou RTF Wörld</p>" + //
    "<p><font face=\"Helvetica\">some <b>bold</b>, <i>italic</i>, "+ //
    "<u>underlined</u> and <s>strikethrough</s>text </font></p>" + //
    "</div>" ;
    console.log(convert(rtf));
    //strictEqual(escape(convert(rtf)), escape(html));
});*/