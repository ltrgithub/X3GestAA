"use strict";
var module  = QUnit.module;
var assert  = require("assert");
var config  = require('syracuse-main/lib/nodeconfig').config; // must be first syracuse require
var helpers = require("syracuse-core/lib/helpers");
var path    = require("path");

var tracer  = (config.jedi && config.jedi.debug)?config.jedi.debug:null;

var JediFile    = require('syracuse-jedi/lib/jediFile');
var JediString  = require('syracuse-jedi/lib/jediString');

module("JEDI", {
	setup: function() {},
	teardown: function() {}
});

module("JediString");
asyncTest("TC1001",function(_) {
  var sTC1001 = {
    "$name":"line",
    "$after":null,
    "$properties": {
      "line"      :{"$type":"number","$format":"000000","$after":";"},
      "operation" :{"$type":"string","$after":";"},
      "montant"   :{"$type":"number","$format":"000000"}
    }
  }
  var rflow  = new JediString("1;operation 1;2001");
  var operation = rflow.parse(_,sTC1001);
  ok(operation.line      == 1            ,"line:"       +operation.line);
  ok(operation.operation == "operation 1","operation:"  +operation.operation);
  ok(operation.montant   == 2001         ,"montant:"    +operation.montant);
  start();
});

module("JediFile");
asyncTest("TC2001",2,function(_) {
  var sTC2001 = {
     "$name":"sTC2001",
     "$properties": {
      "operations"   :{
        "$type"  :"array",
        "$item":{
          "$type"  :"object",
          "$after" :"\r\n",
          "$properties": {
            "line"      :{"$type":"number","$format":"000000","$after":";"},
            "operation" :{"$type":"string","$after":";"},
            "montant"   :{"$type":"number","$format":"000000"}
          }
        } 
      }
    }
  }
  var rflow  = new JediFile(path.resolve("node_modules/syracuse-jedi/test/fixtures/TC2001.csv"),'r');

  var bankStatement = rflow.parse(_,sTC2001);
  var solde=0;
  ok("operations" in bankStatement,"operations");
 
  for(var operation in bankStatement.operations){
   solde += bankStatement.operations[operation].montant;
  }
  ok(solde == 105050,"solde:"+solde);
  
  start();
});


asyncTest("TC2002",3,function(_) {
  var sTC2002 = {
     "$name":"sTC2002",
     "$properties": {
      "operations"   :{
        "$type"  :"array",
        "$item":{
          "$type"  :"object",
          "$after" :"\r\n",
          "$properties": {
            "line"      :{"$type":"number","$format":"000000","$after":";"},
            "operation" :{"$type":"string","$after":";"},
            "montant"   :{"$type":"number","$format":"000000"}
          }
        } 
      }
    }
  }
  var rflow  = new JediFile(path.resolve("node_modules/syracuse-jedi/test/fixtures/TC2002.csv"),'r');

  var bankStatement = rflow.parse(_,sTC2002);
  var solde=0;
  var count=0;
  ok("operations" in bankStatement,"operations");
 
  for(var operation in bankStatement.operations){
   solde += bankStatement.operations[operation].montant;
   count += 1;
  }
  strictEqual(count,   10000,"count");
  strictEqual(solde,50005000,"solde");
 
  start();
});

asyncTest("TC2003",2,function(_) {
  var sTC2003 = {
     "$name":"sTC2003",
     "$properties": {
      "entete"   :{
        "$type"  :"array",
        "$maxItems":8,
        "$item":{
          "$type"  :"object",
          "$after" :"\r\n",
          "$properties": {
            "line"   :{"$type":"string"}
          }
        }
      },
      "operations"   :{
        "$type"  :"array",
        "$item":{
          "$type"  :"object",
          "$after" :"\r\n",
          "$properties": {
            "date":    {"$type":"date","$format":"DD/MM/YYYY","$after":";"},
            "libelle": {"$type":"string","$before":"\"","$after":"\";"},
            "montant": {"$type":"number","$format":"000000,00","$after":";"}
          }
        } 
      }
    }
  }
  var rflow  = new JediFile(path.resolve("node_modules/syracuse-jedi/test/fixtures/TC2003.csv"),'r');

  var bankStatement = rflow.parse(_,sTC2003);
  tracer && tracer.log(bankStatement);
  
  ok("operations" in bankStatement,"operations");
  var solde = 0
  for(var i in bankStatement.operations) {
   solde += bankStatement.operations[i].montant;
  }
  strictEqual(Math.floor(100*solde),-566314,"solde");
  start();
});

