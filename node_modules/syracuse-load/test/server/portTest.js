"use strict";
var balancer = require('syracuse-load/lib/balancer')
var util = require('util')

var qmodule = QUnit.module;

qmodule('balancer');

test('Balancer', 4, function() {
	var host1 = { hostname: "a", status: 3, children: 2};
	var host2 = { hostname: "b", status: 3, children: 3};
	var res = balancer.balance({ "a:N0": 1, "a:N1": 2}, [host1], "a")
	strictEqual(JSON.stringify(res), JSON.stringify([host1,"N0"]), "balance 1 port N0")
	var res = balancer.balance({ "a:N0": 2, "a:N1": 2}, [host1], "a")
	strictEqual(JSON.stringify(res), JSON.stringify([host1,"N0"]), "balance 1 port N0")
	var res = balancer.balance({ "a:N1": 2, "a:N0": 3}, [host1], "a")
	strictEqual(JSON.stringify(res), JSON.stringify([host1,"N1"]), "balance 1 port N1")
	var res = balancer.balance({ "a:N1": 1, "a:N0": 2, "b:N0": 1}, [host1, host2], "a")
	strictEqual(JSON.stringify(res), JSON.stringify([host2,"N2"]), "balance 2 port N2")
	
})

test('Host update', 13, function() {
	var hosts = [ { hostname: "A1", started: false, active: true}, { hostname: "A2", started: true}]
	var oldHosts = [ { hostname: "A1", started: true}, { hostname: "A2", started: false}]
	var res = balancer._updateHosts(oldHosts, hosts, "A1");
	strictEqual(res[0].hostname, "A1", "local host name")
	strictEqual(res[0].started, false, "local host started")
	strictEqual(res[1].hostname, "A2", "other host name")
	strictEqual(res[1].started, true, "other host started")
	strictEqual(res[0].status, 1, "status local host (init)")
	strictEqual(res[1].status, -4, "status other host (unknown)")
	strictEqual(res.length, 2, "number of hosts")

	var hosts = [ { hostname: "A1", active: true, started: true}, { hostname: "A2", active: true, started: true}]
	var oldHosts = [ { hostname: "A1", started: false}, { hostname: "A2", started: false}]
	var res = balancer._updateHosts(oldHosts, hosts, "A1");
	strictEqual(res[0].hostname, "A1", "local host name")
	strictEqual(res[1].status, -4, "other host unknown status")

	var hosts = [ { hostname: "A1", started: false}, { hostname: "A2", started: true}]
	var oldHosts = [ { hostname: "A1", started: true}]
	var res = balancer._updateHosts(oldHosts, hosts, "A3");
	strictEqual(res[0].hostname, "A1", "first host name")
	strictEqual(res[1].hostname, "A2", "other host name")
	strictEqual(res[1].started, true, "other host started")
	strictEqual(res.length, 2, "number of hosts")
})
