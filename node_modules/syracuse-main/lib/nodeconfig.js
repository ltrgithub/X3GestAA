// Note about circular references: nodeconfig.config contains all global configuration information. 
// Any information except config.sdata.endpoints is available in  
var config = {};
var util = require('util')
var os = require('os')
try {
	config = require("../../../nodelocal").config || {};
} 
catch (ex) {
	console.log(ex);
}
config.collaboration = {
	application: "syracuse",
	contract: "collaboration",
	dataset: "syracuse"
}

config.sdata = {
		pubkeyName : "SYRASVR1",
		signAlgorithm: "RSA-SHA256"
			};

// no circular references up to now. This object can be exported and used by other code
exports.config = config;


// the endpoints require a lot of other code and make circular references. Therefore this code will be loaded later
config.sdata.endpoints = [{
		contract: require("syracuse-collaboration/lib/contract").contract,
		datasets: {
			syracuse: {
				driver: "mongodb",
				port: 27017,
				hostname: config.sqlHostName || "localhost"
			}
		}
	},{
		contract: require("syracuse-search/lib/contract").contract,
		datasets: {
			syracuse: {
				driver: "mongodb",
				port: 27017,
				hostname: config.sqlHostName || "localhost"
			}
		}
	},{
		contract: require("sprint1/lib/settings/contract").contract,
		datasets: {
			sprint1: {
				driver: "mongodb",
				port: 27017,
				hostname: config.sqlHostName || "localhost"
//				login: "root",
//				password: config.sqlPassword || ""
			}
		}
	},{
		contract: require("zz/lib/test/contract").contract,
		datasets: {
			zz: {
				driver: "mongodb",
				port: 27017,
				hostname: config.sqlHostName || "localhost"
//				login: "root",
//				password: config.sqlPassword || ""
			}
		}
	}]

