"use strict";
// Note about circular references: nodeconfig.config contains all global configuration information. 
// Any information except config.sdata.endpoints is available in  
var config = {};
var util = require('util')
var os = require('os')
try {
	config = require("../../../nodelocal").config || {};
} 
catch (ex) {
	console.log(ex);
}

config.collaboration = config.collaboration || {};
config.collaboration.driver = config.collaboration.driver || "mongodb"
config.collaboration.port = config.collaboration.port || 27017
config.collaboration.hostname = config.collaboration.hostname || "localhost"
config.collaboration.application = config.collaboration.application || "syracuse"
config.collaboration.contract = config.collaboration.contract || "collaboration"
config.collaboration.dataset = config.collaboration.dataset || "syracuse"

config.sdata = {
		pubkeyName : "SYRASVR1",
		signAlgorithm: "RSA-SHA256"
			};

// no circular references up to now. This object can be exported and used by other code
exports.config = config;


// the endpoints require a lot of other code and make circular references. Therefore this code will be loaded later
config.sdata.endpoints = [{
		contract: require("syracuse-collaboration/lib/contract").contract,
		datasets: {
			syracuse: {
				driver: config.collaboration.driver,
				port: config.collaboration.port,
				hostname: config.collaboration.hostname
			}
		}
	},{
		contract: require("syracuse-search/lib/contract").contract,
		datasets: {
			syracuse: {
				driver: config.collaboration.driver,
				port: config.collaboration.port,
				hostname: config.collaboration.hostname
			}
		}
	},{
		contract: require("sprint1/lib/settings/contract").contract,
		datasets: {
			sprint1: {
				driver: config.collaboration.driver,
				port: config.collaboration.port,
				hostname: config.collaboration.hostname
//				login: "root",
//				password: config.sqlPassword || ""
			}
		}
	},{
		contract: require("zz/lib/test/contract").contract,
		datasets: {
			zz: {
				driver: config.collaboration.driver,
				port: config.collaboration.port,
				hostname: config.collaboration.hostname
//				login: "root",
//				password: config.sqlPassword || ""
			}
		}
	}]

