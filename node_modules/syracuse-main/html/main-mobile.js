"use strict";
var Site = require('syracuse-ui/lib/site/site').Site;
var MobileJSONPage = require('syracuse-ui/lib/mobile/mobileJSONPage').MobileJSONPage;

exports.main = function() {
	var site = new Site();
	site.$device = "mobile";
	site.onMainPageChange = function($itemPage, onLoaded) {
		var self = this;
		self.body.style.display = "none";
		$itemPage.boxParent = null;
		$itemPage.layoutSlot = self.body;
		self.resetMainPage();

		$itemPage.onMainPagechange = true;
		syra_pageBuilder.load({
			$itemPage: $itemPage,
			success: function(page) {
				self.mainPage = page;
				page.urlSeg = $itemPage.urlSeg;
				page.isMainPage = true;
				self.body.style.display = "";
				self.resizeItem();
				onLoaded && onLoaded(page);
			}
		});
	};
	site.drawPage = function() {
		var self = this;
		self.addDragDrop();
		$.auth = self.mobile = {
			notify: function(event, eventData, info) {
				switch (event) {
					case "pagechange":
						!this._onChangeApplying && this.resetData(eventData, info);
						break;
					case "pageload":
						!this._onChangeApplying && this.loadData(eventData, info);
						this._onChangeApplying = false;
						break;
				}
				return eventData;
			},
			applyChange: function($article) {
				if (!this.isApplyChangeDisabled) {
					var cw = self.mobilePageFrame.contentWindow;
					if (this.name && cw.$.proto.auth.applyAuth) {
						this._onChangeApplying = true;
						cw.$.proto.auth.applyAuth(this.name, $article);
					}
				}
			},
			resetData: function(eventData, info) {
				this.name = "";
			},
			loadData: function(data, info) {
				this.name = info.name;
				syra_site.onMainPageChange({
					urlSeg: syra_url.parse(info.url.origUri),
					initData: info.dataset,
					$representation: {
						$authorUrl: this.$authorUrl = info.$authorUrl,
						$prototype: info.$prototype,
						$article: data
					}
				});
			},
			toggleJsonEditor: function(show) {
				var mainPage = syra_site.mainPage;
				if (show) {
					mainPage.domItem.style.display = "none";
					this._jsonPage = new MobileJSONPage();
					syra_pageBuilder.initialize(this._jsonPage);
					this._jsonPage.layoutSlot = document.createElement("div");
					syra_site.body.appendChild(this._jsonPage.layoutSlot);
					this._jsonPage.load();
					this._jsonPage.fillEditors(mainPage.$prototype, mainPage.$item);
					this._jsonPage.isPageLoaded = true;
					syra_layout.ensureArticleVisibility(this._jsonPage);
				} else {
					mainPage.domItem.style.display = "";
					if (this._jsonPage) {
						if (this._jsonPage.layoutSlot) {
							syra_dom.remove(this._jsonPage.layoutSlot);
						}
						this._jsonPage.dispose();
						this._jsonPage = null;
					}
				}
			}

		};
		self.domItem = self.body = document.createElement("div");
		self._mobileWrapper = document.createElement("div");
		self._mobileWrapper.setAttribute("id", "s-mobile-site-wrapper");
		self.mobilePageSlot = document.createElement("div");
		self.mobilePageSlot.setAttribute("id", "s-mobile-page-slot");
		self.body.setAttribute("id", "s-site-body");
		self.body.setAttribute("tabindex", "1"); // add for receive keyboard event  for shortcut
		self._mobileWrapper.appendChild(self.mobilePageSlot);
		self._mobileWrapper.appendChild(self.body);
		self.layoutSlot.appendChild(self._mobileWrapper);

		self.mobilePageFrame = document.createElement("iframe");
		self.mobilePageFrame.className = "s-mobile-page-frame";
		self.mobilePageSlot.appendChild(self.mobilePageFrame);

		self.logon(function() {
			self.mobilePageFrame.setAttribute("src", "/syracuse-mobile/html/mobile-debug.html");
			self._onAfterLogon();
			self.layoutSlot.style.display = "";
			self.resizeItem();
		});
	};

	site._renderHeader = function() {
		this.header = document.createElement("header");
		this.header.id = "s-site-header";
		syra_dom.setZIndex(this.header);
		this.layoutSlot.insertBefore(this.header, this.layoutSlot.firstChild);

		this.headerTop = document.createElement("div");
		this.headerTop.id = "s-site-header-top";

		this.addLogo(this.headerTop);

		this.addPageDesignerOpener();

		var middleCell = document.createElement("div");
		middleCell.id = "s-site-header-middle-cell";
		this.headerTop.appendChild(middleCell);

		this.topPanel.addOpener(middleCell);

		this.addLogoutButton();

		this.addItem(this.headerTop, {
			$bind: "$help",
			$category: "link",
			$noText: true,
			$skin: "s-site-help-link"
		});

		this.header.appendChild(this.headerTop);
	};
	site.load();
};

if (require.main == module)
	exports.main();