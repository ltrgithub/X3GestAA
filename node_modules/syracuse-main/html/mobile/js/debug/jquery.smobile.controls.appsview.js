(function($) {
	var that = $.smobile || {};
	$.smobile = that;
	that.controls.AppsView = {
		handler: function(c, after) {
			var controller = this, html = [], options= c.data || {};
			controller.data = {};
			var _closeul = function() {
				after({ 
					html: html.join(''),
					bind : " " 
				});
			};
			var _hasApp = function(installed, appURL, baseURL) {
				var i = installed.length;
				while (i--) {
					var ia = installed[i];
					if ((ia.url == appURL) && (ia.baseURL == baseURL)) {
						return true;
					}	
				}
				return false;
			};
			var _removeInstalled = function(appsList, installed) {
				if (!installed || !installed.length) return appsList;
				var i = appsList.length;
				while (i--) {
					var app = appsList[i];
					var j = app.datasets.length;
					while (j--) {	
						if (_hasApp(installed, app.url, app.baseURL + app.datasets[j].dataset)) 
							app.datasets.splice(j, 1);
					}
					if (!app.datasets.length) appsList.splice(i, 1);
				}
				return appsList;
			};
			
			var _addinstalled = function(iapps) {
				if (iapps && iapps.length) {
					html.push('<div data-role="collapsible" data-theme="b" data-content-theme="d" data-collapsed-icon="arrow-r" data-expanded-icon="arrow-d"  data-collapsed="false" data-inset="true">');
					html.push('<h2>'+that.locale().applicationmanager.installed_apps+'</h2>')				
					html.push('<ul id="'+c.id + '_remove" data-role="listview"');
					html.push(' data-inset="false"');
					html.push('>');
					controller.data.remove = {};
					iapps.forEach(function(cd, index){
						controller.data.remove[cd.id] = cd;
						html.push('<li data-role="fieldcontain"');
						html.push(' class="' + "ui-li-has-icon " + that.ui.consts.menu_icon  +'"');
						html.push('>');
						html.push('<fieldset class="ui-grid-a"><div class="ui-block-a">');
						html.push($.smobile.ui.menuItem(cd.title, cd.description, cd.icon));
						html.push('</div><div class="ui-block-b"><button data-iconpos="top" data-mini="true" data-theme="b" data-icon="delete" id="'+ cd.id + '_remove" data-inline="false">'+that.locale().applicationmanager.uninstall+ '</button></div></fieldset>');
						html.push('</li>');
						
					});
					html.push('</ul>');
					html.push('</div>');
				} 
				_closeul();	
			};
			
			
			$.sdata.getInstalledApps(true, function(iapps) {
				$.sdata.applicationList({success: function(appsList) {
					appsList = appsList ||[];
					appsList = _removeInstalled(appsList, iapps);
					if (appsList.length) {
						html.push('<div data-role="collapsible" data-theme="b" data-content-theme="d" data-collapsed-icon="arrow-r" data-expanded-icon="arrow-d" data-inset="true" data-collapsed="false">');
						html.push('<h2>'+that.locale().applicationmanager.available_apps+'</h2>')				
						html.push('<ul id="'+c.id + '_install" data-split-icon="plus" data-role="listview"');
						html.push(' data-inset="false"');
						html.push('>');
						appsList.forEach(function(cd, index){
							cd.id = $.helpers.uuid();
							html.push('<li data-role="fieldcontain"');
							html.push(' class="' + "ui-li-has-icon " + that.ui.consts.menu_icon  +'"');
							html.push('>');
							html.push('<fieldset class="ui-grid-a"><div class="ui-block-a">');
							html.push($.smobile.ui.menuItem(cd.title, cd.description, cd.icon));
							html.push('</div><div class="ui-block-b"><button data-iconpos="top" data-mini="true" data-theme="e" data-icon="plus" id="'+ cd.id + '_install" data-inline="false">'+that.locale().applicationmanager.install+ '</button></div></fieldset>');
							if (cd.datasets.length) {
								cd.datasets.forEach(function(value){
									value.$name = $.helpers.uuid();
									html.push('<input  data-mini="true" type="checkbox" checked="'+ (value.selected?"true":"false") + '" name="'+value.$name+'" id="'+value.$name+'" class="custom" />');
									html.push('<label for="'+value.$name+'">'+value.description+'</label>');
								});
							} 
							html.push('</li>');
				
						});
						html.push('</ul></div>');
						html.push('</div>');
						controller.data.install = {};
						appsList.map(function(value) {
							controller.data.install[value.id] = value;
						});
						_addinstalled(iapps);
						
					} else _addinstalled(iapps);

				}});
				
			});
		},
		events: function($c, c) {
			var controller = this;
			if (controller.data.install) {
				Object.keys(controller.data.install).forEach(function(key) {
					var cd = controller.data.install[key];
					if (cd && cd.datasets && cd.datasets.length) {
						cd.datasets.forEach(function(dataset) {
							if (dataset.$name) {
								var $dataset = $("#" +dataset.$name);
								if ($dataset && $dataset.length) {
									$dataset.change(function(target) {
										/* select dataset */
										if (dataset.selected == null)
											dataset.selected = false;
										else
											dataset.selected = !dataset.selected;
									});								
								}
							}
						});					
					}
					var $install = $("#" + cd.id+ "_install");
					if ($install && $install.length) {
						$install.click(function(target) {
							if (controller.disabled) return;
							var mapId = cd.id;
							controller.disabled = true;
							controller.installApplication({
								success: function() { 
									controller.disabled = false;
									$.smobile.goHome(controller);
								},
								fail: function() { 
									controller.disabled = false;
								}
							},controller.data.install[mapId]);
						});
					}
					
					
				});
			}
			if (controller.data.remove) {
				Object.keys(controller.data.remove).forEach(function(key) {
					var cd = controller.data.remove[key];
					var $remove = $("#" + cd.id+ "_remove");
					if ($remove && $remove.length) {
						$remove.click(function(target) {
							/* select dataset */
							if (controller.disabled) return;
							var mapId = cd.id;
							controller.removeApplication({
								success: function() { 
									controller.disabled = false; 
									$.smobile.goHome(controller);
								},
								fail: function() { 
									controller.disabled = false; 
								}
							},mapId, controller.data.remove);
						});
					}
				
				});
			}
			
		}
		
	};
})(jQuery);    


