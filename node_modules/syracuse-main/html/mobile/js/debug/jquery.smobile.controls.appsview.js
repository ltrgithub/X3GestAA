(function($) {
	'use strict';
	var that = $.smobile || {};
	$.smobile = that;
	
	that.controls.AppsView = {
		_hasApp: function(installed, appURL, baseURL) {
			var i = installed.length;
			while (i--) {
				var ia = installed[i];
				if ((ia.url == appURL) && (ia.baseURL == baseURL)) {
					return true;
				}	
			}
			return false;
		},
		_removeInstalled: function(appsList, installed) {
			if (!installed || !installed.length) return appsList;
			var i = appsList.length;
			while (i--) {
				var app = appsList[i];
				var j = app.datasets.length;
				while (j--) {	
					if (that.controls.AppsView._hasApp(installed, app.url, app.baseURL + app.datasets[j].dataset)) 
						app.datasets.splice(j, 1);
				}
				if (!app.datasets.length) appsList.splice(i, 1);
			}
			return appsList;
		},
		_addinstalled:function(controller, id, iapps, html, refresh) {
			var $cont, $ul, buttons = [];
			controller.data.remove = {};
			if (refresh) {
				html = [];
				$cont = $('#' +id + '_remove_content');
				$ul = $('#' +id + '_remove');
				$ul.html('');
				if (!iapps || !iapps.length) {
					if (!$cont.hasClass('s-m-hidden')) $cont.addClass("s-m-hidden");
				} else {
					if ($cont.hasClass('s-m-hidden')) $cont.removeClass("s-m-hidden");
				}
			} else {
				html.push('<div id="'+id + '_remove_content" data-role="collapsible" data-theme="b" data-content-theme="d" data-collapsed-icon="arrow-r" data-expanded-icon="arrow-d"  data-collapsed="false" data-inset="true"');
				if (!iapps || !iapps.length) html.push(' class="s-m-hidden"');
				html.push('>');
				html.push('<h2>'+that.locale().applicationmanager.installed_apps+'</h2>')				
				html.push('<ul id="'+id + '_remove" data-role="listview"');
				html.push(' data-inset="false"');
				html.push('>');
			}
			if (iapps && iapps.length) {	
				iapps.forEach(function(cd, index){
					controller.data.remove[cd.id] = cd;
					html.push('<li data-role="fieldcontain"');
					html.push(' class="' + "ui-li-has-icon " + that.ui.consts.menu_icon  +'"');
					html.push('>');
					html.push('<div class="ui-grid-a"><div class="ui-block-a">');
					html.push($.smobile.ui.menuItem(cd.title, cd.description, cd.icon));
					html.push('</div><div class="ui-block-b"><button data-iconpos="top" data-mini="true" data-theme="b" data-icon="delete" id="'+ cd.id + '_remove" data-inline="false">'+that.locale().applicationmanager.uninstall+ '</button></div></div>');
					buttons.push({hid: cd.id + '_remove', id: cd.id});
					html.push('</li>');
					
				});
				if (refresh) {
					$ul.html(html.join(''));
					buttons.forEach(function(bid) {
						$('#'+bid.hid).button();
					});
					$ul.listview("refresh");
				}
			}
			controller.data.removeHtml = {};
			buttons.forEach(function(bid) {
				controller.data.removeHtml[bid.hid] = bid;
			});
			
			if (!refresh) {
				html.push('</ul>');
				html.push('</div>');
			}
		},

		_addtoinstall:function(controller, id, appsList, html, refresh) {
			var $cont, $ul, buttons = [], checkboxes = [];;
			controller.data.install = {};
			if (refresh) {
				html = [];
				$cont = $('#' +id + '_install_content');
				$ul = $('#' +id + '_install');
				$ul.html('');
				if (!appsList || !appsList.length) {
					if (!$cont.hasClass('s-m-hidden')) $cont.addClass("s-m-hidden");
				} else {
					if ($cont.hasClass('s-m-hidden')) $cont.removeClass("s-m-hidden");
				}
			} else {
				html.push('<div id="'+id + '_install_content"  data-role="collapsible" data-theme="b" data-content-theme="d" data-collapsed-icon="arrow-r" data-expanded-icon="arrow-d" data-inset="true" data-collapsed="false"');
				if (!appsList || !appsList.length) html.push(' class="s-m-hidden"');
				html.push('>');
				html.push('<h2>'+that.locale().applicationmanager.available_apps+'</h2>')				
				html.push('<ul id="'+id + '_install" data-split-icon="plus" data-role="listview"');
				html.push(' data-inset="false"');
				html.push('>');
			}
			if (appsList && appsList.length) {	
				appsList.forEach(function(cd, index){
					cd.id = $.helpers.uuid();
					html.push('<li data-role="fieldcontain"');
					html.push(' class="' + "ui-li-has-icon " + that.ui.consts.menu_icon  +'"');
					html.push('>');
					html.push('<div class="ui-grid-a"><div class="ui-block-a">');
					html.push($.smobile.ui.menuItem(cd.title, cd.description, cd.icon));
					html.push('</div><div class="ui-block-b"><button data-iconpos="top" data-mini="true" data-theme="e" data-icon="plus" id="'+ cd.id + '_install" data-inline="false">'+that.locale().applicationmanager.install+ '</button></div></div>');
					buttons.push({hid: cd.id + '_install', id: cd.id});
					if (cd.datasets.length) {
						cd.datasets.forEach(function(value){
							value.$name = $.helpers.uuid();
							html.push('<form>');
							html.push('<input  data-mini="true" type="checkbox" checked="'+ (value.selected?"true":"false") + '" name="'+value.$name+'" id="'+value.$name+'" class="custom" />');
							html.push('<label for="'+value.$name+'">'+value.description+'</label>');
							html.push('</form>');
							checkboxes.push({hid: value.$name, id: cd.id, dataset: value.$name});
						});
					} 
					html.push('</li>');
		
				});
				if (refresh) {
					$ul.html(html.join(''));
					buttons.forEach(function(bid) {
						$('#'+bid.hid).button();
					});
					checkboxes.forEach(function(bid) {
						$('#'+bid.hid).checkboxradio();
					});
					$ul.listview("refresh");
				}
			}
			if (!refresh) {
				html.push('</ul>');
				html.push('</div>');
			}
			controller.data.install = {};
			controller.data.installHtml = {};
			buttons.forEach(function(bid) {
				controller.data.installHtml[bid.hid] = bid;
			});
			controller.data.installCHtml = {};
			checkboxes.forEach(function(bid) {
				controller.data.installCHtml[bid.hid] = bid;
			});
			if (appsList) {
				appsList.map(function(value) {
					controller.data.install[value.id] = value;
				});
			}
		},
		
		handler: function(c, after) {
			var controller = this, html = [], options= c.data || {};
			controller.data = {};
			html.push('<div class="ui-body">')
			var _closeul = function() {
				html.push('</div>')
				after({ 
					html: html.join(''),
					bind : " " 
				});
			};
			$.sdata.getInstalledApps(true, function(iapps) {
				$.sdata.applicationList({success: function(appsList) {
					appsList = appsList ||[];
					appsList = that.controls.AppsView._removeInstalled(appsList, iapps);
					that.controls.AppsView._addtoinstall(controller, c.id, appsList, html);
					that.controls.AppsView._addinstalled(controller, c.id, iapps, html);
					_closeul();
				}});
			});
		},
		refresh: function(controller, options, $c, id) {
			var html = [];
			$.sdata.getInstalledApps(true, function(iapps) {
				$.sdata.applicationList({success: function(appsList) {
					appsList = appsList ||[];
					appsList = that.controls.AppsView._removeInstalled(appsList, iapps);
					that.controls.AppsView._addtoinstall(controller, id, appsList, html, true);
					that.controls.AppsView._addinstalled(controller, id, iapps, html, true);
					that.controls.AppsView.suppevents(controller, $c, id);
				}});
			});
		},
		suppevents: function(controller, $c, c) {
			Object.keys(controller.data.installCHtml).forEach(function(hid){
				$('#'+hid).change(function(event) {
					var obj  = controller.data.installCHtml[hid];
					var item = controller.data.install[obj.id];
					var j = item.datasets.length;
					while (j--) {
						var ds = item.datasets[j];
						if (ds.$name === obj.dataset) {
							if (ds.selected == null)
								ds.selected = false;
							else
								ds.selected = !ds.selected;
						}
						
					}
					
				});
			});
			/*
				Object.keys(controller.data.install).forEach(function(key) {
					var cd = controller.data.install[key];
					if (cd && cd.datasets && cd.datasets.length) {
						cd.datasets.forEach(function(dataset) {
							if (dataset.$name) {
								var $dataset = $("#" +dataset.$name);
								if ($dataset && $dataset.length) {
									$dataset.change(function(target) {
										if (dataset.selected == null)
											dataset.selected = false;
										else
											dataset.selected = !dataset.selected;
									});								
								}
							}
						});					
					}
			*/
		},
		events: function($c, c) {
			var controller = this;
			var $conti = $('#' +c.id + '_install_content');
			var $contr = $('#' +c.id + '_remove_content');
			$contr.click(function(event) {
				var ct = event.target;
				if (controller.disabled) return;
				while (ct) {
					if (ct.id) {
						var crd = controller.data.removeHtml[ct.id];
						if (crd) {
							var mapId = crd.id;
							controller.disabled = true; 
							controller.removeApplication({
								success: function() { 
									controller.disabled = false; 
									$.smobile.goHome(controller);
								},
								fail: function() { 
									controller.disabled = false; 
								}
							},mapId, controller.data.remove);
						
						}
						return; 
					}
					ct = ct.parentNode; 
				}
			});
			$conti.click(function(event) {
				var ct = event.target;
				if (controller.disabled) return;
				while (ct) {
					if (ct.id) {
						var crd = controller.data.installHtml[ct.id];
						if (crd) {
							var mapId = crd.id;
							controller.disabled = true; 
							controller.installApplication({
								success: function() { 
									controller.disabled = false; 
									$.smobile.goHome(controller);
								},
								fail: function() { 
									controller.disabled = false; 
								}
							},controller.data.install[mapId]);
						
						}
						return; 
					}
					ct = ct.parentNode; 
				}
			});
			that.controls.AppsView.suppevents(controller,  $c, c.id);
		}
		
	};
})(jQuery);    


