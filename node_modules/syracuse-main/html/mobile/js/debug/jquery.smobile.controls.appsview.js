"use strict"; 
(function($) {
	var that = $.smobile || {};
	$.smobile = that;
	var $helpers = $.helpers;
	var $sdata = $.sdata;
	var consts = $helpers.ui.consts;
	
	that.controls.AppsView = {
		_hasApp: function(installed, appURL, baseURL) {
			var i = installed.length;
			while (i--) {
				var ia = installed[i];
				if ((ia.url == appURL) && (ia.baseURL == baseURL)) {
					return true;
				}	
			}
			return false;
		},
		_removeInstalled: function(appsList, installed) {
			if (!installed || !installed.length) return appsList;
			var i = appsList.length;
			while (i--) {
				var app = appsList[i];
				var j = app.datasets.length;
				while (j--) {	
					if (that.controls.AppsView._hasApp(installed, app.url, app.baseURL + app.datasets[j].dataset)) 
						app.datasets.splice(j, 1);
				}
				if (!app.datasets.length) appsList.splice(i, 1);
			}
			return appsList;
		},
		_addinstalled:function(controller, id, iapps, html, refresh) {
			var $cont, $ul, buttons = [];
			controller.data.remove = {};
			if (refresh) {
				html = [];
				$cont = $('#' +id + '_remove_content');
				$ul = $('#' +id + '_remove');
				$ul.html('');
				if (!iapps || !iapps.length) {
					if (!$cont.hasClass('s-m-hidden')) $cont.addClass("s-m-hidden");
				} else {
					if ($cont.hasClass('s-m-hidden')) $cont.removeClass("s-m-hidden");
				}
			} else {
				html.push('<div id="'+id + '_remove_content" data-role="collapsible" data-theme="b" data-content-theme="d" data-collapsed-icon="arrow-d" data-expanded-icon="arrow-u"  data-collapsed="false" data-inset="true"');
				if (!iapps || !iapps.length) html.push(' class="s-m-hidden"');
				html.push('>');
				html.push('<h2>'+$helpers.locale().applicationmanager.installed_apps+'</h2>')				
				html.push('<ul id="'+id + '_remove" data-role="listview"');
				html.push(' data-inset="false"');
				html.push('>');
			}
			if (iapps && iapps.length) {	
				iapps.forEach(function(cd, index){
					controller.data.remove[cd.id] = cd;
					html.push('<li data-role="fieldcontain"');
					html.push(' class="' + "ui-li-has-icon " + $helpers.ui.consts.menu_icon  +'"');
					html.push('>');
					html.push('<div class="ui-grid-a"><div class="ui-block-a">');
					html.push($.smobile.ui.menuItem(cd.title, cd.description, cd.icon));
					html.push('</div><div class="ui-block-b"><button data-iconpos="top" data-mini="true" data-theme="g" data-icon="delete" id="'+ cd.id + '_remove" data-inline="false">'+$helpers.locale().applicationmanager.uninstall+ '</button></div></div>');
					buttons.push({hid: cd.id + '_remove', id: cd.id});
					html.push('</li>');
					
				});
				if (refresh) {
					$ul.html(html.join(''));
					buttons.forEach(function(bid) {
						$('#'+bid.hid).button();
					});
					$ul.listview("refresh");
				}
			}
			controller.data.removeHtml = {};
			buttons.forEach(function(bid) {
				controller.data.removeHtml[bid.hid] = bid;
			});
			
			if (!refresh) {
				html.push('</ul>');
				html.push('</div>');
			}
		},

		_addtoinstall:function(controller, id, appsList, html, refresh) {
			var $cont, $ul, buttons = [], checkboxes = [];;
			controller.data.install = {};
			if (refresh) {
				html = [];
				$cont = $('#' +id + '_install_content');
				$ul = $('#' +id + '_install');
				$ul.html('');
				if (!appsList || !appsList.length) {
					if (!$cont.hasClass('s-m-hidden')) $cont.addClass("s-m-hidden");
				} else {
					if ($cont.hasClass('s-m-hidden')) $cont.removeClass("s-m-hidden");
				}
			} else {
				html.push('<div id="'+id + '_install_content"  data-role="collapsible" data-theme="b" data-content-theme="d" data-collapsed-icon="arrow-d" data-expanded-icon="arrow-u" data-inset="true" data-collapsed="false"');
				if (!appsList || !appsList.length) html.push(' class="s-m-hidden"');
				html.push('>');
				html.push('<h2>'+$helpers.locale().applicationmanager.available_apps+'</h2>')				
				html.push('<ul id="'+id + '_install" data-split-icon="plus" data-split-theme="d" data-role="listview"');
				html.push(' data-inset="false"');
				html.push('>');
			}
			if (appsList && appsList.length) {	
				appsList.forEach(function(cd, index){
					cd.id = $helpers.uuid();
					html.push('<li data-role="fieldcontain">');
					html.push('<div class="s-m-appview"><div class="info">');		
					if (!cd.icon) cd.icon = consts.default_menu_name;
					var title = (cd.title || "").trim(), description = (cd.description || "").trim(), s ='';
					if (title.length==0) {
						title = description;
						description ="";
					}	
					var css = cd.icon.split(".");
					if (css.length == 1) css.splice(0, 0, consts.default_menu_class);
					html.push('<div class="icon s-m-menu-size '  + css.join(" ") +'"></div>');
					html.push('<div class="ttl" >');
					html.push('<h3>'+ (title.length>0 ? title : $helpers.locale().ui.notitle) +'</h3>');
					if (description.length>0) html.push('<p><strong>'+description+'</strong></p>');
					html.push('</div></div>');
					html.push('<div class="s-m-appview-lbl">');
					html.push('Select at least one endpoint');
					html.push('</div>');
					html.push('</div>');
					buttons.push({hid: cd.id + '_install', id: cd.id});
					if (cd.datasets.length) {
						var checked = (cd.datasets.length == 1);
						cd.datasets.forEach(function(value){
							value.selected = checked;
							
						});
						cd.datasets.forEach(function(value){
							value.$name = $helpers.uuid();
							html.push('<form>');
							html.push('<input  data-mini="true" type="checkbox"'+ (value.selected?' checked="true"':'') + ' name="'+value.$name+'" id="'+value.$name+'" class="custom" />');
							html.push('<label for="'+value.$name+'">'+value.description+'</label>');
							html.push('</form>');
							checkboxes.push({hid: value.$name, id: cd.id, dataset: value.$name});
						});
					} 					
					html.push('<button data-mini="true" data-theme="f" data-icon="plus" id="'+ cd.id + '_install" data-inline="false">'+$helpers.locale().applicationmanager.install+ '</button>');
					html.push('</li>');
		
				});
				if (refresh) {
					$ul.html(html.join(''));
					buttons.forEach(function(bid) {
						$('#'+bid.hid).button();
					});
					checkboxes.forEach(function(bid) {
						$('#'+bid.hid).checkboxradio();
					});
					$ul.listview("refresh");
				}
			}
			if (!refresh) {
				html.push('</ul>');
				html.push('</div>');
			}
			controller.data.install = {};
			controller.data.installHtml = {};
			buttons.forEach(function(bid) {
				controller.data.installHtml[bid.hid] = bid;
			});
			controller.data.installCHtml = {};
			checkboxes.forEach(function(bid) {
				controller.data.installCHtml[bid.hid] = bid;
			});
			if (appsList) {
				appsList.map(function(value) {
					controller.data.install[value.id] = value;
				});
			}
		},
		sync: false,
		asynchandler: function() {
			var obj = this;
			var controller = obj.controller;
			var id = obj.id;
			var html = [];
			$sdata.getInstalledApps(true, function(iapps) {
				$sdata.applicationList({success: function(appsList) {
					appsList = appsList ||[];
					appsList = that.controls.AppsView._removeInstalled(appsList, iapps);
					that.controls.AppsView._addtoinstall(controller, id, appsList, html, true);
					that.controls.AppsView._addinstalled(controller, id, iapps, html, true);
					that.controls.AppsView.suppevents(controller);
				}});
			});
		
		},
		handler: function(c, after) {
			var controller = this, html = [], options= c.data || {};
			controller.data = {};
			html.push('<div class="ui-body">')
			that.controls.AppsView._addtoinstall(controller, c.id, [], html, false);
			that.controls.AppsView._addinstalled(controller, c.id,[], html, false);
			html.push('</div>')
			return after({ 
				html: html.join(''),
				bind : " ",
				async: that.controls.AppsView.asynchandler.bind({controller: controller, id: c.id})
			});
			
		},
		refresh: function(controller, options, $c, id) {
			var html = [];
			$sdata.getInstalledApps(true, function(iapps) {
				$sdata.applicationList({success: function(appsList) {
					appsList = appsList ||[];
					appsList = that.controls.AppsView._removeInstalled(appsList, iapps);
					that.controls.AppsView._addtoinstall(controller, id, appsList, html, true);
					that.controls.AppsView._addinstalled(controller, id, iapps, html, true);
					that.controls.AppsView.suppevents(controller);
				}});
			});
		},
		suppevents: function(controller) {
			if (controller.data.installCHtml) {
				Object.keys(controller.data.installCHtml).forEach(function(hid){
					$('#'+hid).change(function(event) {
						var obj  = controller.data.installCHtml[hid];
						var item = controller.data.install[obj.id];
						var j = item.datasets.length;
						while (j--) {
							var ds = item.datasets[j];
							if (ds.$name === obj.dataset) {
								if (ds.selected == null)
									ds.selected = false;
								else
									ds.selected = !ds.selected;
							}
							
						}
						
					});
				});
			}
		},
		events: function($c, c) {
			var controller = this;
			var $conti = $('#' +c.id + '_install_content');
			var $contr = $('#' +c.id + '_remove_content');
			$contr.click(function(event) {
				var ct = event.target;
				if (controller.disabled) return;
				while (ct) {
					if (ct.id) {
						var crd = controller.data.removeHtml[ct.id];
						if (crd) {
							var mapId = crd.id;
							controller.disabled = true; 
							controller.removeApplication({
								success: function() { 
									controller.disabled = false; 
									$.smobile.goHome(controller);
								},
								fail: function() { 
									controller.disabled = false; 
								}
							},mapId, controller.data.remove);
						
						}
						return; 
					}
					ct = ct.parentNode; 
				}
			});
			$conti.click(function(event) {
				var ct = event.target;
				if (controller.disabled) return;
				try{
					while (ct) {
						if (ct.id) {
							var crd = controller.data.installHtml[ct.id];
							if (crd) {
								var mapId = crd.id;
								controller.disabled = true; 
								controller.installApplication({
									success: function() { 
										controller.disabled = false; 
										$.smobile.goHome(controller);
									},
									fail: function() { 
										controller.disabled = false; 
									}
								},controller.data.install[mapId]);
							
							}
							return; 
						}
						ct = ct.parentNode; 
					}
				}catch(e){
					controller.disabled = false;
					throw e;
				}
			});
			that.controls.AppsView.suppevents(controller);
		}
		
	};
})(jQuery);    


