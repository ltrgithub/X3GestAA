(function($) {
	var that = $.smobile || {};
	$.smobile = that;
	that.controls.SyncCheck = {
		handler : function(c, after) {
			var self = this;
			c.data = {label: that.locale().ui.sync_sync_data, value: false, action: " "};
			return that.controls.CheckBox.handler.apply(self, [c, after]);
			
		},
		events : function($c, c) {
			var controller = this;
			var $input = $c.find( '#'+ c.id + "_i");
			$input.change(function(target) {	
				var value = $input[0].checked;
				controller.resync = value;
			});
		}
		
	};
	var _status2css = function(value) {
		switch (value) {
			case $.sdata.STATUS.CREATED: 
				return "created";
				break;
			case $.sdata.STATUS.DELETED:
				return "deleted";
				break;
			case $.sdata.STATUS.MODIFIED:
				return "modified";
				break;
		}
		return "";
	};
	var _status2undoHint = function(value) {
		switch (value) {
			case $.sdata.STATUS.CREATED: 
				return $.smobile.locale().cancel_create;
				break;
			case $.sdata.STATUS.DELETED:
				return $.smobile.locale().ui.cancel_delete;
				break;
			case $.sdata.STATUS.MODIFIED:
				return $.smobile.locale().cancel_update;
				break;
		}
		return "";
	};
	
	that.controls.SyncFooter = {
		handler : function(c, after) {
			var controller = this;
			return $.sdata.getSyncCount({
				success: function(count) { 
					if (count) {
						c.data={ 
							"items": [
								{ title: that.locale().ui.sync_cancel_all, action: "undo" , "jmdata": {"data-icon":"delete", "data-transition": "none"} },
								{ title: that.locale().ui.sync_send_all, action: "sync", "jmdata": {"data-icon":"arrow-u", "data-transition": "none"} }
							]
						};
					} else {
						c.data={ 
							"items": [
								{ title:that.locale().ui.sync_resync_data, action: "sync", "jmdata": {"data-icon":"arrow-d", "data-transition": "none"} }
							]
						};
					}
					return that.controls.NavBar.handler.apply(controller, [c, after]);
				}
			});
				
		},
		events : function($c, c) {
			var controller = this;
			return that.controls.NavBar.events.apply(controller, [$c, c]);
		}
		
	};

	that.controls.SyncView = {
		handler: function(c, after) {
			var controller = this, html = [];
			controller.hasSyncView = true;
			var layout= {icon: true };	
			var _ondata = function() {
				html.push('<ul id="'+c.id + '" data-role="listview" data-split-icon="back" data-split-theme="d"');
				html.push(' data-inset="true"');
				html.push('>');
			}
			var _afterGetData = function(data) {
				html.push('</ul>');
				after({ 
					html: html.join(''),
					bind: " "
				});
			};
			$.sdata.getSyncData(function(data, error) {
				if (error) return _afterGetData(data);
				controller.data = data;
				if (data) {
					_ondata();
					Object.keys(data).forEach(function(value) {
						var meta = $.sdata.entityMeta(value);
						if (!meta) return ;
						html.push('<li data-role="list-divider">');
						html.push(meta.title|| value);
						html.push('</li>');
						var list  = data[value];
						list.forEach(function(cd) {
							html.push('<li');
							var css = [];
							css.push("ui-li-has-icon");
							//if (layout.icon_size) css.push(layout.icon_size);
							if (css.length) html.push(' class="' + css.join(" ")+'"');
							html.push('>');
							var coptions = [];
							coptions.push("<span class=\"ui-li-icon ui-li-thumb s-m-status "+ _status2css(cd.$info.status) +"\"></span>");
							coptions.push($.helpers.htmlEncode(cd.$info.title || "..."));
							if (cd.$info.last_error) {
								coptions.push("<p class=\"s-m-error\"><strong>");
								coptions.push("Error");
								coptions.push($.helpers.htmlEncode(cd.$info.last_error));
								coptions.push("</strong></p>");
							}
							
							if (cd.$info.status == $.sdata.STATUS.DELETED) {
								html.push('<a href="#">');
								html.push(coptions.join(""));
								html.push("</a>");
								html.push("<a href=\"#action-cancel"+ $.helpers.encodeJsmQuery("?url=" + encodeURIComponent(cd.$info.url)) +"\">"+  $.helpers.htmlEncode(_status2undoHint(cd.$info.status)) + "</a>");
							} else {
								var  opts =  {url: cd.$info.url +"/" + $.proto.sdataKey.workingCopies + "?representation=" + encodeURIComponent(cd.$info.representation)};
								that._addLink(html, opts, controller, function() {
									html.push(coptions.join(""));
								});
								html.push("<a href=\"#action-cancel"+ $.helpers.encodeJsmQuery("?url=" + encodeURIComponent(cd.$info.url)) +"\">"+  $.helpers.htmlEncode(_status2undoHint(cd.$info.status)) + "</a>");
							}
							html.push('</li>');
						});
					});
					_afterGetData(data);
				} else
					_afterGetData(data);
			});
		}
	};
})(jQuery);    


