"use strict"; 
(function($) {
	var that = $.smobile || {};
	$.smobile = that;
	var $helpers = $.helpers; // = require
	var _error2Type = function(value) {
		switch (value) {
			case $helpers.ERRORS.error:
				return "error";
				break;
			case $helpers.ERRORS.warning:
				return "warning";
				break;
			default : //case $helpers.ERRORS.info:
				return "info";
				break;
		}
	};
	
	var _error2Origine = function(value) {
		switch (value) {
			case $helpers.ERRORS.http: 
				return "http";
				break;
			case $helpers.ERRORS.db:
				return "db";
				break;
			default : //case $helpers.ERRORS.exception:
				return "app";
				break;
		}
	};
	
	that.controls.ErrorView = {
		_additem: function(cd, html, mail) {
			cd.data = cd.data || {};
			html.push('<li');
			var css = [], type = _error2Type(cd.type);
			css.push("ui-li-has-icon");
			css.push($helpers.ui.consts.normal_icon);
			css.push('s-error-' + type);
			if (css.length) html.push(' class="' + css.join(" ")+'"');
			html.push('>');
			html.push('<div class="'+$helpers.ui.consts.normal_icon_size+ ' s-error-icon"></div>');			
			html.push('<div class="s-error-ttl">' + $helpers.htmlEncode(cd.title) + '</div>');	
			if (mail) mail.push(cd.title);
			cd.data.message = cd.data.message || "";
			if (cd.data.message.length>0){
				var msg = cd.origin ? ["ORIGIN : " + _error2Origine(cd.origin).toUpperCase()] : [];
				msg = msg.concat(cd.data.message.replace(/\r\n/g,'\n').split("\n"));
				html.push('<div data-role="collapsible" data-mini="true" data-theme="t">');
				html.push('<h3><span class="s-m-error">'+ $helpers.locale().ui.msg_detail + '</span></h3>');
				html.push('<p class="s-m-error">')
				msg.forEach(function(m){		
					if (mail) mail.push(m);			
					html.push($helpers.htmlEncode(m) + ("<br />"));
				});
				html.push('</p>')
				html.push('</div>');
			}
			if (cd.data.solution){
				html.push("<p class=\"s-m-info\">");
				html.push($helpers.htmlEncode(cd.data.solution));
				html.push("</p>");
			}
			html.push("</li>");
		},
		_getCloseBox: function(id, html){
			//html.push('<div class="navBar"><a id="' + id + '-close" class="closeBox"></a></div>');
			var html=html || [];
			html.push('<li class="iconBar"><div>');
			html.push('<a id="' + id + '" data-role="button" data-icon="delete"  data-inline="true"  data-iconpos="notext" data-theme="c"></a></div></li>');
			return html;
		},
		_addMail:function(html, mail , id){
			if (mail){
				 id = id + "-mail";
				var body="",subject="Syracuse mobile error";
				mail.forEach(function(m){		
					body+=m+"\n"
				});
				html.push('<a id="' + id + '" href="mailto:?subject=' + encodeURIComponent(subject) + '&body=' + encodeURIComponent(body)  + '" data-icon="forward" data-role="button">Send mail</a>')
				return id;
			}
		},
		_isErrPage: function(){
			return  this.pageInfo.pageName.indexOf("apperror")==0 || this.pageInfo.pageName.indexOf("errors")==0
		},
		sync: true,
		handler: function(c, after) {
			var controller = this, html = [], options= c.data || {};
			var data = $helpers.lastErrors();
			var errPage = this.pageInfo.pageName.indexOf("apperror")==0 || this.pageInfo.pageName.indexOf("errors")==0;
			html.push('<ul id="'+c.id + '" data-role="listview"');
			html.push(' data-inset="true" class="s-m-error-view" data-closebox="' + !errPage + '"');
			html.push('>');
			controller.errorViewHasErrors = data && data.length>0;
			if (controller.errorViewHasErrors) {
				var cbId =!errPage ? c.id + '-close' : null;
				if (cbId && $("#" + cbId).length==0) that.controls.ErrorView._getCloseBox(cbId, html);
				var mail=[];
				data.forEach(function(cd){
					that.controls.ErrorView._additem(cd, html, mail);
				});
				// don't clear errors on err page to allow display on reload
				if (!errPage) $helpers.clearErrors();
			}
			if(mail) that.controls.ErrorView._addMail(html, mail, c.id)
			html.push('</ul>');
			controller.hasErrorView = true;
			after({ 
				html: html.join(''),
				bind: true
			});
		},
		refresh: function(controller, options, $c, id) {
			// FDB - TEMP - We display messages in ErrorView
			var data = $helpers.lastMessages();
			controller.errorViewHasErrors = data && data.length>0;
			if (controller.errorViewHasErrors) {
				var html=[], cbId = $c.data('closebox') ? id + '-close' : null, mailId;
				if (cbId && $("#" + cbId).length==0) that.controls.ErrorView._getCloseBox(cbId, html);
				var mail=[];
				data.forEach(function(cd){
					that.controls.ErrorView._additem(cd, html,mail);
				});
				if(mail) mailId = that.controls.ErrorView._addMail(html, mail, id)
				$c.html(html.join(''));	
				if (cbId) $("#" + cbId).button();
				if (mailId) $("#" + mailId).button();
			}
			$c.find("div:jqmData(role='collapsible')").each(function(index) {
				var $cc = $(this);
				$cc.collapsible();
			});
			$c.listview("refresh");
			return controller.errorViewHasErrors ? {$element: $c, id: id, uiClass: "ErrorView"} : null;
		},
		events: function($c, c) {
			if ($c.data('closebox')){
				$c.on("click","#" + c.id + '-close', function(e) {
					$c.empty();			
				});
			}
		}		
	}
})(jQuery);    


