"use strict"; 
(function($) {
	var that = $.smobile;
	var $helpers = $.helpers;
	var $proto = $.proto;
	that.controls = that.controls || {};
	var _controls = that.controls;
	_controls.ArraySimpleType={
		_renderContent: function(controller, options, cp, id, html, fieldData, createList) {
			if (options.title) html.push('<li data-role="list-divider">'+ options.title + '</li>');
			if (fieldData && fieldData.length) {
				fieldData.forEach(function(value, index){
					html.push('<li');	
					if (createList) {
						var iid = $helpers.uuid();
						html.push(' id="'+iid+'"');
						createList.push("#"+iid);
					}
					html.push('>');	
					
					value = $proto.htmlValue(null,null, cp,{$type:cp.$type},value, {useValue: true});
					html.push('<a href="#"> ');
					html.push(value);
					html.push('</a>');
					html.push('<a href="#" ');
					html.push('data-action="delete" data-index="'+index+ '"');				
					html.push('>');
					html.push('</a>'); 
					html.push('</li>'); 
				});
			}
		},
		_addLast: function(controller, options, cp, id, html, fieldData) {
			html.push('<li id="'+id + '_last">');
			html.push('<div class="ui-block">');
			html.push('<a id="'+id+'_new" data-role="button" data-action="new" data-mini="true" data-theme="f" data-icon="plus" data-iconpos="left" ');
			html.push('href="#">');
			html.push($helpers.locale().ui.add_item);
			html.push('</a>');
			html.push('</li>');
		},
		 
		refresh: function(controller, options, $c, id) {	
			var fieldData = controller.getValue(options.bind, null, []);
			var page = controller.getPageData();
			var cp = $proto.getProto(page, options.bind);
			var  html = [], cl= [];
			_controls.ArraySimpleType._renderContent(controller, options, cp, id, html, fieldData, cl);
			var save =$('#' +id +'_last').detach();
			$c.html(html.join(''));
			$c.append(save);
			cl.forEach(function(id) {
				$(id).trigger('create');
			});
			$c.listview("refresh");
		},

		createArraySimpleType: function(controller, c, fieldData) {
			if (fieldData == null)  fieldData = controller.getValue(c.data.bind, null, []);
			var options= c.data || {};
			var page = controller.getPageData();
			var cp = $proto.getProto(page, options.bind);
			var  html = [];
    		html.push('<ul id="'+c.id + '" data-role="listview"');
			html.push(' data-inset="true" data-split-icon="delete" data-split-theme="d"');			
			$helpers.addJqmData(options,html); 
			html.push('>');
			_controls.ArraySimpleType._renderContent(controller, options, cp, c.id, html, fieldData, null);
			_controls.ArraySimpleType._addLast(controller, options, cp, c.id, html, fieldData);
			html.push('</ul>');
			that.ui.addLinks(c.id, controller, html, cp, c.data.bind);
			return { 
				html: html.join(''),
				bind: options.bind,
				action: options.action,
				options: options
			};
		},	

		setValue: function(controller, c, value, next) {
			return next();		
		},
		sync: true,
		handler: function(c, after, layoutClass) {
			return after(_controls.ArraySimpleType.createArraySimpleType(this, c));
		},
		events: function($c, c) {
			var controller = this;
			var $ul = $c;
			$ul.click(function(e) {
				if (e && e.target) {
					var target = e.target, cp;
					while (target && target.tagName && (target.tagName.toUpperCase() != 'A'))
						target = target.parentNode;
					var p = $(target).attr("data-action");
					if (p === "delete") {
						p = $(target).attr("data-index");
						p = parseInt(p, 10); 
						var fieldData = controller.getValue(c.options.bind, null, []);
						fieldData.splice(p,1);
						controller.notifyChange();
						var tag = "LI";
						while (target && (target.tagName.toUpperCase() !== tag)) {
							target = target.parentNode;
						}
						if (target)  $(target).remove();
						 
					} else if (p === "new") {
						var page = controller.getPageData();
						cp = $proto.getProto(page, c.options.bind);
						var cv = {};
						$proto.proto2Value(cp, "value", cv);
						
						var fieldData = controller.getValue(c.options.bind, null, []);
						fieldData.push(cv.value);
						controller.setData(c.options.bind, fieldData, null);
						controller.notifyChange();
					}
				}
			});
		}
	};
	
})(jQuery);
