(function($) {
	'use strict';
	var that = $.smobile;
	that.controls = that.controls || {};
	that.controls.Picture = {
		_setPhoto: function(controller, $c, c, value) {
			var $image = $c.find('#'+ c.id + "_image");
			var $cont = $c.find('#'+ c.id + "_cont");
			var page = controller.getPageData();
			var cp = $.proto.getProto(page, c.options.bind);
			var _doNodata = function() {
				$cont.addClass("s-m-noimage");
				$image.addClass("s-m-hidden");
				$image[0].src = "";
			};
			if (!cp) return _doNodata();
			var _showImg = function() {
				$cont.removeClass("s-m-noimage");
				$image.removeClass("s-m-hidden");
			};
			value = value || (controller?controller.getValue(c.options.bind, null, null):null);
			if (value == null) {
				_doNodata();
			} else {
				var url = value.$url;
				if (!url && cp.$url)  {
					url = cp.$url.replace(/\~\{\$uuid\}/, "");
					url = $.proto.parseExpression(url, {data: controller.exprData(), $prototype: cp},"$url");
				}
				if (value.$value) {
					var ct = value.$contentType || "image/jpeg";
					$image[0].src = "data:"+ct+";base64,"+value.$value;
					_showImg();
				} else if (url) {
					if ($.proto.isExpression(url)) 
						url = $.proto.parseExpression(url, {data: controller.exprData(), $prototype: cp},"$url");
					$image[0].src = url;
					_showImg();
				} else _doNodata();
			}
		},
		createPicture: function(controller, c) {
			var options = c.data; 
			var html =[];
			html.push('<div class="s-m-state-block s-m-error" data-role="none" id="'+c.id+'_error"></div>');
			if (options.label) 
				html.push( $.helpers.htmlEncode(options.label));
			html.push('<div id="'+c.id+'">');
			html.push('<div id="'+c.id+'_cont" class="ui-body s-m-image-container s-m-noimage" >');
			html.push('<input id="'+c.id+'_input" class="s-hidden-file" accept="image/*" type="file" data-role="none" data-ajax="false" name="'+c.id+'_input"/>');
			html.push('<center><img class="s-m-image s-m-hidden" id="'+c.id+'_image" src="');
			html.push('"/></center>');
			html.push('</div>'); 
			html.push('<a id="'+c.id+'_file" data-role="button" data-mini="true" data-icon="file" data-inline="true">'+that.locale().ui.picture_file+'</a>');
			html.push('<a id="'+c.id+'_photo"  data-role="button" data-mini="true" data-icon="photo" data-inline="true">'+that.locale().ui.picture_photo+'</a>');
			html.push('</div>'); 
			return { 
				html: html.join(''),
				bind: options.bind,
				options: options
			};
		},
		sync: true,
		handler: function(c, after){
			return after(that.controls.Picture.createPicture(this, after));
		},
		checkValue:  function($c, c) {
			var controller = this;
			var e = $('#'+ c.id + "_error");
			e.html("");
			if (c.options.$isMandatory) {
				var value = controller.getValue(c.options.bind, null, null);
				if (!value) {
					var error = {field: $c, message: $.helpers.format(that.locale().ui.mandatory_field,[c.options.label])};
					controller.pushError(error);
					e.html(error.message);
				};
			} 
		},
		events: function($c, c) {
			var controller = this;
			var $file = $c.find('#'+ c.id + "_file");
			var $input = $c.find('#'+ c.id + "_input");
			var $photo = $c.find('#'+ c.id + "_photo");
			
			$photo.bind( "click", function(event, ui) {
				if (navigator.camera && navigator.camera.getPicture) {
					navigator.camera.getPicture(function(data) {
						var res = {
							$type: "image",
							$value: data,
							$fileName: "picture.jpeg",
							$contentType: "image/jpeg"
						};
						that.controls.Picture._setPhoto(controller, $c, c, res);
						controller.setData(c.options.bind, res);
						controller.notifyChange();
					}, function() {}, {
						quality : 30,
						destinationType: navigator.camera.DestinationType.DATA_URL
					});				
				} else {
					$.helpers.alert(that.locale().ui.picture_nocamera, function(){}, true);
				}
			});
			
			$file.bind( "click", function(event, ui) {
				var $cinput = $c.find('#'+ c.id + "_input");
				$cinput.click();
			});
			$input.bind( "change", function(event) {
				if (window.File && window.FileReader && window.FileList && window.Blob) {
					var files = event.target.files; // FileList object
					var res = {};
					if (files && files.length) {
						var f = files[0];
						if (!f.type.match('image.*')) return;
						res.$contentType = f.type;
						res.$fileName = f.name;
						res.$type = "image";
						var reader = new FileReader();
						reader.onload = (function(theFile, cont) {
							return function(e) {
								var i = e.target.result.indexOf("base64,")
								if (i > 0) 
									cont.$value = e.target.result.substring(i+7);
								else
									cont.$value = e.target.result;
								delete cont.$url;
								that.controls.Picture._setPhoto(controller, $c, c, cont);
								controller.setData(c.options.bind, cont);
								controller.notifyChange();
							};
						})(f, res);						
						reader.readAsDataURL(f);
					}
				}
			});
			
			that.controls.Picture._setPhoto(controller, $c, c);
		}
	};
})(jQuery);