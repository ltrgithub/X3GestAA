(function($) {
	'use strict';
	var that = $.smobile;
	that.controls = that.controls || {};
	that.controls.Lookup={
		createLookup: function(controller, c) {
			var options= c.data || {};
			var page = controller.getPageData();
			var cp = $.proto.getProto(page, options.bind);
			var html = ['<div data-role="fieldcontain" id="'+c.id+'">'];
			html.push('<div class="s-m-state-block s-m-error" data-role="none" id="'+c.id+'_error"></div>');
			html.push('<label id="'+c.id+'_l" class="ui-input-text" for="'+c.id+'_i">');
			if (options.$lookupurl) {
				var cd = {url: options.$lookupurl};
				that._addLink(html, cd, controller, function() {
					html.push($.helpers.htmlEncode(options.label)+(options.$isMandatory?"*":""));
				});	
			} else html.push($.helpers.htmlEncode(options.label)+(options.$isMandatory?"*":""))
			html.push('</label>');
			html.push('<input ');
			html.push('type="text" name="'+c.id+'" id="'+c.id+'_i" ');
			html.push('value="');
			var cv = controller.getValue(options.bind, null, 0);	
			options.$display = $.proto.extractFirstProp(cp.$value);
			if (cv) {
				var val = cv.$value;
				if (!cv.$value && (cv.$key || cv.$uuid)) {
					val = $.proto.parseExpression(cp.$value, {data: cv, $prototype: cp});
				}				
				html.push($.helpers.htmlEncode(val || ""));
			} 
			html.push('"');
			html.push('/>');
			html.push('</div>');
			options.$lookup = 1;
			return { 
				html: html.join(''),
				bind: options.bind,
				action: options.action,
				options: options
			};
		},	
		setValue: function(controller, c, value, next) {
			var $input = $( '#'+ c.id + "_i");
			var cv = {$uuid: value.$uuid, $key: value.$key };
			var page = controller.getPageData();
			var cp = $.proto.getProto(page, c.options.bind);
			cv.$value = $.proto.parseExpression(cp.$value, {data: value, $prototype: cp});
			$input.val(cv.$value);
			controller.checkChange(c.id, cv, next);
		},

		handler: function(c, after, layoutClass) {
			return after(that.controls.Lookup.createLookup(this, c));
		},
		events: function($c, c) {
			var controller = this;
			var $input = $c.find( '#'+ c.id + "_i");
			$input.blur(function() {
				if (c.bind) {
					var _aftercchange = controller.afterChangeHnd(c);
					controller.checkChange(c.id, {$value: $input.val()}, _aftercchange);
				}
			});
		}
	};
	that.controls.Lookup.checkValue = that.controls.Edit.checkValue;
	
})(jQuery);