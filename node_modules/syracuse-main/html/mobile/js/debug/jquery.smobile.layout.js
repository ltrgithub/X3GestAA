"use strict"; 
(function($) {
	var that = $.smobile || {};
	$.smobile = that;
	var $helpers = $.helpers;
	var layout = {
		GroupLayout:function(layoutData) {
			var  options= layoutData.data
			var b = ['<center><div id="'+layoutData.id+'" data-role="controlgroup"'];
			$helpers.addJqmData(options,b); 
			b.push('">');
			return {
				before: b.join(''),
				after: "</div></center>",
				childs: []
			}
		},
		FieldContainer:function(layoutData) {
			var  options= layoutData.data
			var b = ['<div id="'+layoutData.id+'" data-role="fieldcontain"'];
			$helpers.addJqmData(options,b); 
			b.push('">');
			return {
				before: b.join(''),
				after: "</div>",
				childs: []
			}
		},
		CollapsibleLayout:function(layoutData) {
			var  options= layoutData.data
			var b = ['<div id="'+layoutData.id+'" data-role="collapsible"  data-collapsed="'+(options.collapsed?"true":"false")+'"'];
			$helpers.addJqmData(options,b); 
			b.push('><h'+(layoutData.size || 3)+'>'+(options.text || "")+'</h'+(layoutData.size || 3)+'>');
			return {
				before: b.join(''),
				after: "</div>",
				childs: []
			}
			
		},
		CollapsibleSetsLayout:function(layoutData) {
			var  options= layoutData.data
			var b = ['<div id="'+layoutData.id+'" data-role="collapsible-set"'];
			$helpers.addJqmData(options,b); 
			b.push('>');
			
			return {
				before: b.join(''),
				after: "</div>",
				childs: []
			}
			
		},
		Block:function(layoutData) {
			var  options= layoutData.data
			var b = ['<div id="'+layoutData.id+'" data-role="controlgroup"'];
			$helpers.addJqmData(options,b); 
			b.push('">');
			return {
				before: b.join(''),
				after: "</div>",
				childs: []
			}
			
		},
		
		BlockBodyLayout:function(layoutData) {
			var  options= layoutData.data
			var b = ['<div id="'+layoutData.id+'" class="ui-body s-m-block'];
			$helpers.addJqmData(options,b, ["data-theme"], true, "ui-body-"); 
			b.push('">');
			return {
				before: b.join(''),
				after: "</div>",
				childs: []
			}
			
		},
		BlockLayout:function(layoutData) {
			var  options= layoutData.data
			var b = ['<div id="'+layoutData.id+'" class="'];
			$helpers.addJqmData(options,b, ["data-theme"], true, "ui-body-"); 
			b.push('">');
			return {
				before: b.join(''),
				after: "</div>",
				childs: []
			}
			
		},
		TabLayout:function(layoutData) {
			var controller = this, html = [];
			var  options= layoutData.data;
			html.push('<div id="'+layoutData.id+'" data-role="collapsible-set">');
			var res = {
				childs: []
			};
			var ccid = 	layoutData.id.substring(controller.prefix.length);		
			options.tabs.forEach(function(tab, index) {
				var chtml =['<div id="'+layoutData.id+ '_' + index +'" data-role="collapsible"']; 
				if (!index) 
					chtml.push(' data-collapsed="false">');
				else
					chtml.push('>');
				chtml.push('<h'+(layoutData.size || 3)+'>'+(tab || "")+'</h'+(layoutData.size || 3)+'>');	
				var l = {
					id: ccid + "_" + index,
					before: chtml.join(""),
					after: "</div>",
					childs: []
				};
				res.childs.push(l);
			});
			res.before = html.join('');
			res.after = "</div>";
			return res;
		},
		RowLayout:function(layoutData) {
			var controller = this, html = [];
			var  options= layoutData.data;
			var rclass = "s-m-l-table";
			if (options.responsive) rclass = rclass + " responsive";
			html.push('<div id="'+layoutData.id+'" class="'+ rclass + '">');
			var res = {
				childs: []
			};
			var ccid = 	layoutData.id.substring(controller.prefix.length);	
			options.widths.forEach(function(width, index) {
				if ((width.indexOf("%") < 0) && (width.indexOf("px") < 0)) 
				width = width + '%';
				var  cc="";
				// try to use css classes(for media query css)
				switch (width) {
					case "20%" :
						cc="s-proc-20";
						break;
					case "25%" :
						cc="s-proc-25";
						break;
					case "30%" :
						cc="s-proc-30";
						break;
					case "50%" :
						cc="s-proc-50";
						break;
					case "75%" :
						cc="s-proc-75";
						break;
					case "33%" :
					case "33.33%" :
						cc="s-proc-33";
						break;
					case "66%" :
					case "67%" :
					case "66.66%" :
						cc="s-proc-67";
						break;
					case "70%" :
						cc="s-proc-70";
						break;
						
				}
				var rclass = "s-m-l-row";
				if (options.responsive) rclass = rclass + " responsive";
				var chtml =['<div id="'+layoutData.id+ '_' + index +'" class="' + rclass +  (cc?(' '+cc):'') + '"'];
				if (!cc)  {
					chtml.push(' style="width:' + width+ ';"');
				}
				chtml.push('>');
				
				var l = {
					id: ccid + "_" + index,
					before: chtml.join(""),
					after: "</div>",
					childs: []
				};
				res.childs.push(l);
			});
			res.before = html.join('');
			res.after = "</div>";
			return res;
			
		}
		
	};
	
	
	that.addLayout = function(parentLayout, layoutData) {
		var controller = this;
		if (layout[layoutData.layout]) {
			var l = layout[layoutData.layout].apply(controller, [layoutData]);
			l.layoutClass = layoutData.layout;
			parentLayout.childs.push(l);
			return l;
		}
		return null
	};
})(jQuery);    
