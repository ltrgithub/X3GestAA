(function($) {
	'use strict';
	$.proto = $.proto || {};
	var $proto = $.proto;
	var $helpers = $.helpers;
	var that = $proto.auth || {};
	$proto.auth = that;
	function _checkExpression(item, proto) {
		var variables = [];
		item.$variables = item.$variables || {};
		var res = item.$expression.replace(/\{(.*?)\}/g, function(match, prop) {
			if (prop)
				variables.push(prop);
			return prop;
		});	
		Object.keys(item.$variables).forEach(function(varName){
			if (variables.indexOf(varName) < 0) {
				delete item.$variables[varName];
			}
		});
		variables.forEach(function(varName){
			if (!item.$variables[varName]) {
				item.$variables[varName] = {};
				if (proto.$properties[varName])
					item.$type = proto.$properties[varName].$type;
				
			}
			
		});
		
	};
	
	/* check article */
	function  _checkListViewArticle(proto, article) {
		if (!article || !article.$mobile) {
			article = {
				$mobile: true,
				layout: {
					$items: [
						{
							$line:1, 
							$expression:"{$title}",
							$title: true,
							$variables: {
								$title: {
									$styles:["themeA"]
								}
							}
						},
						{
							$line:1, 
							$expression:"{$description}",
							$variables: {
								$description: {
								}
							}
						}
						
					]
				}
			};
			//try to find a property de type image
			Object.keys(proto.$properties).forEach(function(pn) {
				var p = proto.$properties[pn];
				if (!article.layout.$image && (p.$type === "image")) {
					article.layout.$image = {$show: true, $bind: pn};
				}
			});
		}
		var l = article.layout;
		if (l.$hint && l.$hint.$show) {
			 _checkExpression(l.$hint, proto)
		}
		l.$items.forEach(function(item) {
			 _checkExpression(item, proto)
		});
		return article;
	};
	that.checkQueryArticle = _checkListViewArticle;
	function _execItem($item,html, options, exprData) {
		var tag = (options.tag?options.tag:($item.$title?"h3":"p"));
		html.push("<"+tag);
		var classes =[];
		if (options.cssClass) classes.push(options.cssClass);
		if ($item.$line && ($item.$line > 0)) classes.push("s-line-"+$item.$line);
		if ($item.$styles)
			$item.$styles.forEach(function(style){
				classes.push("s-style-"+style);
			});
		if (classes.length) {
			html.push(' class="');
			html.push(classes.join(' '));
			html.push('"');
		}
		html.push(">");
		var values = {};
		Object.keys($item.$variables).forEach(function(varName){
			var v = $item.$variables[varName];
			var exp = v.$expression || "{"+varName+"}", before="", after="", ismap = false;;
			
			if (v.$map) ismap = true;
			var ev =  $proto.parseExpression(exp, exprData,"$image", {html:!ismap, onlyValue:ismap});
			var css = ["s-m-style"];
			if (v.$styles && v.$styles.length) {
				v.$styles.forEach(function(style){
					css.push(style);
				});
			}
			if (ismap) {
				// ranges 
				var sv = v.$map[ev];
				if (ev != null)  css.push(sv);
			}
			if (css && (css.length > 1)){
				before = '<span class="s-m-inline '+css.join(' ') +'">'; 
				after = '</span>';
			}		
			values[varName] = before + ev + after;
		});
		html.push($item.$expression.replace(/\{(.*?)\}/g, function(match, prop) {
			return values[prop] || "";
		}));	
		html.push("</"+tag+">");
		return ""
	}
	function _execListViewArticle($article,html, options, controller, cp, cd) {
		var consts = $helpers.ui.consts; 
		var expData = {data: controller.exprData(cd), $prototype: cp};
		if ($article.layout.$image && $article.layout.$image.$show) {
			html.push('<div class="'+consts.normal_icon_size+' ' + consts.normal_noimage + '"');
			var icon = cd[$article.layout.$image.$bind];
			if (icon) {
				if (icon.$value) {
					icon = "data:"+(icon.$contentType || "image/jpeg")+";base64,"+icon.$value;
				} else {
					var curl = icon.$url;
					if (!curl && cp.$properties &&  cp.$properties[$article.layout.$image.$bind]) 
						curl = cp.$properties[$article.layout.$image.$bind].$url;
					if (curl) 
						icon = $proto.parseExpression(curl, expData,"$image");
					else
						icon = null;
					
				}
				
				if (icon) 
					html.push(' style="background: transparent url(\''+  icon.replace(/'/g, "\\'") + '\') no-repeat center center; background-size: 100% 100%"');
			}
			html.push('></div>');
		} 
		$article.layout.$items.forEach(function(item) {
			_execItem(item,html, {}, expData);
		});
		// add 	
		if ($article.layout.$hint && $article.layout.$hint.$show) {	
			var ci = $article.$layout.$hint;
			_execItem(ci,html, {tag:"span", cssClass: "ui-li-aside"}, expData);
		}

		
	};
	that.sdi = _execListViewArticle;
	
	
	
	 
})(jQuery);
