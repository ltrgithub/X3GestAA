'use strict';
(function($) {
	var that = $.smobile;
	that.controls = that.controls || {};
	/* used for $query or $lookup */
	that.controls.MultiField={
		handler: function(c, after) {
			var controller = this;
			var  options= c.data || {};
			var edit = (c.data.facet === "$edit");
			var page = controller.getPageData();
			if (!page)  return after({ html: "",options: {}});
			if (edit) {
				var controls = [];
				// for each field create a control
				options.fields.forEach(function(field){
					var cp = $.proto.getProto(page, field.$bind), cc = null;
					var scc ={id: c.id + "_" + field.$bind, data: {inline: false, bind: field.$bind}};
					if (field.$type == "application/x-string") {
						scc.data.type = "text";
						scc.data.label = cp.$title;
						scc.id = c.id + "_" + field.$bind;
						cc = that.controls.Edit.createEdit(controller, scc);
						cc.id = scc.id;
						cc.uiClass = "Edit";
						cc.scid = "_" + field.$bind;
						
					} else if (field.$type == "application/x-choice") {
						scc.data.type = "text";
						var items = [];
						scc.data.items = items;
						scc.data.$mandatory = true; 
						cp.$value.$enum.forEach(function(value) {
							items.push({value:value.$value, title:value.$title});
						})
						scc.data.label = cp.$title;
						scc.id = c.id + "_" + field.$bind;
						cc = that.controls.Combo.createCombo(controller, scc);
						cc.id = scc.id;
						cc.uiClass = "Combo";
						cc.scid = "_" + field.$bind;
					}
					if (cc) {
						controls.push(cc);
					}	
				})		
				if (controls.length)
					return after(controls);
				else
					return after(null);
			} else {
				var html = [];
				html.push('<table class="s-m-fieldlist"><tbody>');
				html.push('<th><td class="title"></td><td class="value"></td></th>');
				var entityProto = $.proto.getProto(page);
				options.fields.forEach(function(field){
					var cp = $.proto.getProto(page, field.$bind);
					html.push('<tr><td>');
					html.push('<strong>'+$.helpers.htmlEncode(cp.$title)+ '</strong>');
					html.push('</td><td>');
					html.push($.proto.htmlValue(controller.data,entityProto, cp,field));
					html.push('</td><tr>');
				});
				html.push('</tbody></table>');
				return after({ 
					html: html.join(''),
					bind: options.bind,
					options: options				
				});
			}
		}		
	};
})(jQuery);    
