"use strict";

var helpers = require('syracuse-core/lib/helpers');
var glob = require('streamline/lib/globals');

var Timing = helpers.defineClass(function(mod, tag, details) {
	this.module = mod;
	this.tag = tag;
	this.details = details;
	this.start = Date.now();
}, null, {
	end: function() {
		var cx = (glob.context || (glob.context = {}));
		var timings = (cx.timings || (cx.timings = []));
		timings.push({
			module: this.module.id,
			tag: this.tag,
			details: this.details,
			start: this.start,
			end: Date.now(),
		});
	}
})

exports.start = function(mod, tag, details) {
	return new Timing(mod, tag, details);
}

function hierarchize(timings, root) {
	root.children = [];
	var n;
	while ((n = timings.pop()) && n.start >= root.start) {
		root.children.push(hierarchize(timings, n));
	}
	if (n) timings.push(n);
	return root;
}

function format(n) {
	var mod = n.module.substring(n.module.indexOf('node_modules') + 13)
	var s = '<li><b>' + (n.end - n.start) + "ms</b> " + mod + " " + n.tag + " " + n.details;
	s += n.children ? ('<ul>' + n.children.map(format).join('') + '</ul>') : ''
	s += '</li>';
	return s;
}

var head = '<html>' + '<head><title>Syracuse Prototypes</title>' + '<link href="/syracuse-ui/themes/markdown.css" rel="stylesheet" type="text/css"/>' + '</head><body>';

var tail = '</body></html>';

exports.toHtml = function(requests) {
	var children = requests.map(function(timings) {
		timings = timings.slice(0);
		return hierarchize(timings, timings.pop());
	});
	return head + '<ul>' + children.map(format).join('') + '</ul>' + tail;
}