"use strict";

var sys = require("util");

var sources = {
	sessions: require("syracuse-session/lib/sessionManager")
};

function _explore(_, obj, depth, path) {
	return Object.keys(obj).reduce_(_, function(_, prev, s) {
		var g = obj[s];
		if (!g) return prev;
		if (Array.isArray(g)) {
			prev[s] = {
				description: s + " is Array with " + g.length + " elements",
				children: g.map_(_, function(_, child) {
					return (depth > 0) ? _explore(_, child, depth - 1, path) : Object.keys(child);
				}, {})
			};
		} else {
			switch (typeof g) {
				case "object":
					prev[s] = {
						description: s + " is Object with " + Object.keys(g).length + " keys",
						children: Object.keys(g).reduce_(_, function(_, prevChild, key) {
							if (depth > 0) {
								prevChild[key] = _explore(_, g[key], depth - 1, path);
							} else {
								prevChild[key] = key;
							}
							return prevChild;
						}, {})
					};
					break;
			}
		}
		//		prev[s] = s + (Array.isArray(g) ? " is Array with " + g.length + " elements" : " is Object with " + Object.keys(g).length + " keys");
		return prev;
	}, {});
}

exports.dumpGlobals = function(_, depth, path) {
	var segments = path.split("/");
	// init
	var g = Object.keys(sources).reduce_(_, function(_, prev, s) {
		prev[s] = sources[s].getGlobals(_);
		return prev;
	}, {});
	//
	return _explore(_, g, depth, path);
};