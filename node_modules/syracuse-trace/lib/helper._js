"use strict";

/// !doc
///
/// # Logging/tracing helper function  
///
/// Create a logger with options taken from nodelocal to override
/// the default options, making it simple for the applications to
/// specify the correct logger without having to know anything about
/// the options involved.

var globals = require('streamline/lib/globals');
var x3helper = require('syracuse-x3/lib/helpers');
var genLogger = require('syracuse-trace/lib/genLogger').genLogger;

function getTracer(_, logType, logFunc) {
	var tracer = null;
	// retrieve the config from globals rather than from nodelocal
	console.log("First time to try and get a logger->" + logType);
	var baseConfig = x3helper.config("traceConfig", globals.context.config);
	var traceConfig = x3helper.config(logType, baseConfig);

	var traceOptions = {
		logType: logType
	};

	if (traceConfig.level) {
		traceOptions.level = traceConfig.level;
	}
	if (traceConfig.transport) {
		traceOptions.transport = traceConfig.transport;
	}

	// May be an option here to extend options that can be configured
	// by the used at runtime beyond just enablement/level/transport

	tracer = new genLogger(logType, traceOptions);

	return tracer;
}

exports.getTracer = getTracer;