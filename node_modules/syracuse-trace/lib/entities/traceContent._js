"use strict";

var datetime = require('syracuse-core/lib/types/datetime');

exports.entity = {
	$titleTemplate: "Traces content",
	$valueTemplate: "{description}",
	$descriptionTemplate: "Content from {start} to {end}",
	$capabilities: "mailTemplate",
	$properties: {
		//		uuid: {
		//			$title: "UUID",
		//		},
		name: {
			$title: "Name",
			$isMandatory: true,
			$isReadOnly: true,
		},
		start: {
			$title: "Started at",
			$isReadOnly: true,
			$isNullable: true,
		},
		status: {
			$title: "Status",
			$enum: [{
				$title: "created",
				$value: "created",
			}, {
				$title: "running",
				$value: "running",
			}, {
				$title: "paused",
				$value: "paused",
			}, {
				$title: "complete",
				$value: "complete",
			}, {
				$title: "error",
				$value: "error",
			}],
			$default: "created",
			$isReadOnly: true,
		},
		size: {
			$title: "Size",
			$type: "integer",
			$compute: function(_, instance) {
				var recording = instance.recording(_);
				return recording.fileExists(_) ? recording.getProperties(_).length : null;
			},
		},
		recording: {
			$title: "Recording",
			$type: "binary",
			$isDisabled: false,
			$isReadOnly: true,
			$storage: "db_file",
		}
	},
	$init: function(_, instance) {
		instance.start(_, datetime.now().toString());
		//instance.uuid(_, instance.$uuid);
	},
	$defaultOrder: [
		["start", true]
	]
};