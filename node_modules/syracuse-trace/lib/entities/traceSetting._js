"use strict";

var path = require('path');
var globals = require('streamline/lib/globals');

var tracer1 = require("syracuse-trace/lib/helper").getTracer("test.1");
var tracer2 = require("syracuse-trace/lib/helper").getTracer("test.2");

exports.entity = {
	$canCreate: false,
	$canDelete: false,
	//$helpPage: "Administration-reference-Traces-Settings",
	$properties: {
		transport: {
			$title: "Log type",
			$displayLength: 15,
			$enum: [{
				$value: "console",
				$title: "Console"
			}, {
				$value: "storagearea",
				$title: "Storage Area"
			}, {
				$value: "mongo",
				$title: "MongoDB"
			}, {
				$value: "file",
				$title: "File"
			}],
			$default: "storagearea",
			$propagate: function(_, instance, val) {
				if (val === "file" && instance.location(_) === "") {
					instance.location(_, path.join(process.cwd(), "logs"));
				}
			}
		},
		expiry: {
			$title: "Expiration (minutes)",
			$type: "integer",
			$default: 120,
			$isDefined: function(_, instance) {
				return instance.transport(_) === "storagearea";
			},
			$isMandatory: function(_, instance) {
				return instance.transport(_) === "storagearea";
			}
		},
		location: {
			$title: "File system location",
			$default: "",
			$isDefined: function(_, instance) {
				return instance.transport(_) === "file";
			},
			$isMandatory: function(_, instance) {
				return instance.transport(_) === "file";
			}
		},
	},
	$titleTemplate: "Traces settings",
	$valueTemplate: "Traces settings",
	$descriptionTemplate: "Traces settings",
	$relations: {
		configs: {
			$title: "Traces configuration",
			$type: "traceConfigs",
			$isChild: true,
			$inv: "traceSettings"
		}
	},
	$services: {
		test: {
			$method: "POST",
			$title: "Test",
			$execute: function(_, context, instance) {
				tracer1.info && tracer1.info("trace 1 ..." + JSON.stringify() + "something", {});
				tracer2.info && tracer2.info("trace 2...");

			}
		}
	},

	$events: {
		$afterSave: [

			function(_, instance) {
				//console.log("TEST: "+JSON.stringify(instance.serializeInstance(_,false),null,2));
			}
		]
	}

};