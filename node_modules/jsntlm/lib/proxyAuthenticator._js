"use strict";
var NtlmAuthenticator = require("jsntlm/lib/ntlmAuthenticator").NtlmAuthenticator;
var perfmon = require('syracuse-perfmon');

function _proxyAuthenticate(callback, options) {
	var timing = perfmon.start(module, "proxyAuthenticate.all", options.host);
	var ntlmAuthentication = new NtlmAuthenticator(options.proxy.user, options.proxy.password, options.proxy.workstation, options.proxy.domain);
	ntlmAuthentication.createSession();
	var timingNegociate = perfmon.start(module, "proxyAuthenticate.genNegociate");
	var negociateMsg = ntlmAuthentication.generateNegociateMessage();
var t0 = Date.now(); while (Date.now() < t0 + 100);
	timingNegociate.end();
    console.log(">>> Negociate Message: " + negociateMsg);

    // Necessary to use only one TCP Stream for the two requests
    options.agent = new options.module.Agent();
    options.agent.maxSockets = 1;
    
    options.headers["Proxy-Connection"] = "Keep-Alive";
    options.headers["Proxy-Authorization"] = negociateMsg;

    //console.log("options: "+require('util').inspect(options));
    
    var _negociateRequest = options.module.request(options, function(negResult) {

        negResult.setEncoding('utf8');
        negResult.on('connect', function() {
			console.log("Connect");
		});
		negResult.on('data', function(chunk) {
			//console.log("Data received: "+chunk);
		});
		
		
//		req.response = function(_) {
//			var timing = perfmon.start(module, "httpClient.response", options.url);
//			try {
//				return originalResponse.call(req, _);
//			} finally {
//				timing.end();
//			}
//		}
		
		
		negResult.on('end', function() {
			console.log("Negociate request ended");
			if (negResult.statusCode !== 407) {
				callback(new Error("Proxy negociation returned "+negResult.statusCode+" status code instead of 407."));
			} else {
			    console.log('STATUS NEGOCIATE: ' + negResult.statusCode);
			    console.log('HEADERS NEGOCIATE: ' + JSON.stringify(negResult.headers, null, 2));
			}
		    var srvChallenge = negResult.headers["proxy-authenticate"];
		    console.log(">>> Server challenge message: " + srvChallenge);
		    
		    var cookie = negResult.headers["set-cookie"];
		    options.headers.cookie += "; " + cookie;

	        var authenticateMsg = ntlmAuthentication.generateAuthenticateMessage(srvChallenge);
            console.log(">>> Authenticate Message: " + authenticateMsg);
            options.headers["Proxy-Authorization"] = authenticateMsg;
//            var _authenticateRequest = options.module.request(options, function(authResult) {
//				authResult.on('data', function(chunk) {
//					// Print the body content
//					console.log(chunk);
//				});
//				authResult.on('end', function() {
//					if (authResult.statusCode && authResult.statusCode === 407) {
//						callback(new Error("Proxy authentication failed."));
//					} else {
//						console.log('STATUS AUTHENTICATE: ' + authResult.statusCode);
//						console.log('HEADERS AUTHENTICATE: ' + JSON.stringify(authResult.headers));
//						callback(null, true);
//					}
//				});
//            });
//            _authenticateRequest.end();
            timing.end();
            callback(null, true);
		});
    });
	_negociateRequest.on('error', function(e) {
		timing.end();
		callback(new Error('A problem occured with NTLM Negociate request: ' + e.message));
	});
    
    console.log("Send authenticate request");
    _negociateRequest.end();
}

exports.authenticate = function(_, options) {
    return _proxyAuthenticate(~_, options);
};