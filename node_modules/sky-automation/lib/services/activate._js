'use strict';

var helpers = require('../helpers');

module.exports = function(_, context, instance) {
	if (instance.status(_) !== 'provisioned' || !instance.uri(_) || instance.isTest(_)) return;

	var collabUrl = instance.uri(_) + '/sdata/syracuse/collaboration/syracuse/';

	// get the list of applications
	var result = helpers.client(_, collabUrl + 'applications');
	if (result.statusCode !== 200) return helpers.error('get applications', result);
	var application = result.body.$resources ? result.body.$resources.filter(function(res) {
		return res.application === 'x3';
	})[0] : {};

	// get the list of groups, which should contain Super Admin and Customer Admin groups
	result = helpers.client(_, collabUrl + 'groups');
	if (result.statusCode !== 200) return helpers.error('get groups', result);
	var groupIds = result.body.$resources.map(function(group) {
		return group.$uuid;
	});

	// create X3Solutions and endpoints
	var x3solution = {
		code: instance.ipX3(_),
		description: instance.ipX3(_),
		solutionName: 'X3V7',
		proxy: false,
		serverHost: instance.ipX3(_),
		serverPort: 1807
	};
	result = helpers.client(_, collabUrl + 'x3solutions', x3solution);
	if (result.statusCode !== 201) return helpers.error('init x3solutions', result);
	x3solution = result.body;

	var epSeed = {
		'description': 'SEED',
		'x3solution': {
			'$uuid': x3solution.$uuid
		},
		'x3ServerFolder': 'SEED',
		'application': 'x3',
		'applicationRef': {
			'$uuid': application.$uuid
		},
		'groups': groupIds,
		'dataset': 'SEED'
	};
	result = helpers.client(_, collabUrl + 'endPoints', epSeed);
	if (result.statusCode !== 201) return helpers.error('init endpoints', result);
	epSeed = result.body;

	// push license to site
	var subscriptions = instance.subscriptions(_)._array;
	var license = Array.isArray(subscriptions) && subscriptions.length ? subscriptions[0].license(_) : null;
	result = license ? helpers.client(_, instance.uri(_) + '/nannyCommand/notifyOne/license/set', license, 'PUT') : {};
	if (result.statusCode !== 201) return helpers.error('init license', result);

	// kick off the Search Index
	result = helpers.client(_, collabUrl + 'endPoints/$services/initSearchIndex', epSeed);
	if (result.statusCode !== 200) return helpers.error('init search index', result);

	// set Sage ID Email from customer as customer admin user email
	result = helpers.client(_, collabUrl + 'users');
	if (result.statusCode !== 200) return helpers.error('get users', result);
	var cadmin = result.body.$resources ? result.body.$resources.filter(function(res) {
		return res.login === 'cadmin';
	})[0] : null;
	var contacts = instance.customer(_).contacts(_)._array;
	var contact = Array.isArray(contacts) && contacts.length ? contacts[0] : null;

	if (cadmin && contact) {
		cadmin.login = contact.sageId(_);
		cadmin.email = contact.sageEmail(_);
		result = helpers.client(_, collabUrl + 'users', cadmin, 'PUT');
		if (result.statusCode !== 201) return helpers.error('set Sage ID data for customer admin', result);
	}
};
