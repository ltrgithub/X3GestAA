//SEI Site Activation
var config = require('config');
var aws_cloudflare = require('./cloudFlare/records');
var AWS = require('aws-sdk');
AWS.config.update(config.aws);
AWS.config.update({region: config.SEI.s3Region});  //Override with S3 bucket region

function activate(_, context, site) {

	var s3 = new AWS.S3();
	var seiSiteName = site.site(_) + '.sei';

	//Check if SEI site already exists by looking in config file stored on S3
	var params = {
	  Bucket: config.SEI.s3Bucket,
	  Key: config.SEI.key + '/CentralPointMapping.xml',
	};
	var obj = s3.getObject(params, ~_);
	var str = obj.Body.toString();
	var pos = str.indexOf(seiSiteName);
	if (pos > -1) {
	 	throw new Error('SEI site ' + seiSiteName + ' already exists.');
	 	return
	};

	var record = aws_cloudflare.addRecordByName(seiSiteName, ~_);

	//Build config entry for new site
	var custUrl = record.result.name;
	var viewerUrl = 'https://' + custUrl + ':8443';
	var configSetting = '  <centralPoint key="' + custUrl + '" value="\\\\' + site.ipORA(_) + '\\CentralPoint" viewerURL="' + viewerUrl + '"/>' + String.fromCharCode(13)
	pos = str.indexOf('</centralPoints>');
	str = str.substring(0,pos);
	str = str.substring(0,pos) + configSetting + '</centralPoints>';

	//Upload updated config file to S3
	var params = {
	  Bucket: config.SEI.s3Bucket,
	  Key: config.SEI.key + '/CentralPointMapping.xml',
	  Body: str,
	};
	var data = s3.putObject(params, ~_);

}

exports.activate = activate;
