'use strict';

module.exports = {
	$titleTemplate: 'Customer {customer}',
	$descriptionTemplate: '{description}',
	$helpPage: 'SKY-reference-customer',
	$valueTemplate: '{customer}',
	$createActionTitle: 'New customer',
	$listTitle: 'List of Customers',
	$properties: {
		customer: {
			$title: 'Customer',
			$linksToDetails: true,
			$isMandatory: true,
		},
		shortName: {
			$title: 'Short Name',
			$isMandatory: true,
		},
		accountNumber: {
			$title: 'Account Number',
			$isMandatory: true,
		},
		comments: {
			$title: 'Comments',
		},
	},
	$relations: {
		addresses: {
			$title: 'Address',
			$type: 'addresses',
			$isChild: true,
		},
		contacts: {
			$title: 'Contact',
			$type: 'contacts',
			$isChild: true,
		},
		sites: {
			$title: 'Sites',
			$type: 'sites',
			$inv: 'customer',
			$isComputed: true
		},
	},
	$searchIndex: {
		$fields: ['customer', 'description']
	},
	$uniqueConstraints: [
		['customer']
	],
	$services: {
		defaultSite: {
			$title: 'Default site',
			$method: 'GET',
			$isMethod: true,
			$execute: function(_, context, instance) {
				var db = context.db;
				var sites = db.fetchInstances(_, db.getEntity(_, 'site'), {
					jsonWhere: {
						'customer.$uuid': instance.$uuid,
						'isDefault': true
					}
				});
				return sites.length ? {
					$uuid: sites[0].$uuid,
					site: sites[0].site(_),
				} : {};
			},
		},
		test: {
			$title: 'Test script',
			$method: 'POST',
			$invocationMode: 'async',
			$capabilities: 'abort',
			$isMethod: true,
			$execute: function(_, context, instance) {
				require('../../scripts/test').step(instance.customer(_));
			},
		},
	},
};
