"use strict";
var globals = require('streamline-runtime').globals;
var x3client = require('syracuse-x3/lib/client');
var adminHelper = require("syracuse-collaboration/lib/helpers").AdminHelper;

//var tracer = require('syracuse-core').getTracer("x3Comm.gateway");
var tracer = {
	error: console.log,
	info: console.log,
	debug: console.log
};

exports.$exported = true;

function createClient(_) {
	tracer.debug && tracer.debug("createClient");
	var context = globals.context;

	try {
		tracer.debug && tracer.debug("locale:" + context.locale);

		var up = globals.context.session && globals.context.session.getUserProfile(_);
		if (up) {
			var endpoint = up.selectedEndpoint(_);
			tracer.debug && tracer.debug("endpoint");

			var user = up.user(_);
			var userName = user.getEndpointLogin(_, endpoint.$uuid).toLowerCase();
			tracer.debug && tracer.debug("user:" + userName);

			var config = {
				tracer: tracer,
				x3solution: endpoint.x3solution(_),
				x3serverTags: "",
				certificate: endpoint.x3solution(_).certificate(_)
			};
			tracer.debug && tracer.debug("client.create");
			var client = x3client.create(config);

			tracer.debug && tracer.debug("client.connect");
			var _x3 = client.connect(_, {
				server: endpoint.x3solution(_).serverHost(_),
				folder: endpoint.x3ServerFolder(_),
				locale: context.locale,
				runtimeLog: "",
				runtimeLogDir: ""
			});

			client.pid = _x3.pid;
			tracer.debug && tracer.debug("baseUrl:", endpoint.getBaseUrl(_));
			client.baseUrl = endpoint.getBaseUrl(_);

			var session = context && (context.httpSession || context.session);
			var peer = session && (session.getData("requestInfo") || {}).peerAddress;

			var adminEP = adminHelper.getCollaborationEndpoint(_);
			tracer.debug && tracer.debug("client.createSession");
			var sid = client.createSession(_, {
				locale: context.locale,
				userName: userName,
				adxtyp: 34, // adxtyp = 34 for rpc calls
				localePreferences: context.localePreferences,
				baseUrl: context && context.baseUrl,
				collaborationBaseUrl: adminEP && session ? session.host + adminHelper.getCollaborationEndpoint(_).getBaseUrl(_) : "",
				peerAddress: peer
			});

			tracer.debug && tracer.debug("client created");
			return client;
		}
	} catch (e) {
		console.error(e.stack);
	}
}

exports.gateway = function(_, script, operation, parameters) {
	tracer.debug && tracer.debug("syracuse-x3/lib/gateway/gateway:" + [script, operation, parameters].join(','));
	var context = globals.context;

	tracer.debug && tracer.debug("createClient");
	var client = createClient(_);
	if (client) {
		var response = client.jsonSend(_, {
			head: {
				"content-type": "application/json",
				accept: "application/json;vnd.sage=syracuse",
				url: client.baseUrl + "/$service/rpc?module=ASYRGATEWAY&name=GATEWAY",
				method: "POST",
			},
			body: {
				script: script,
				operation: operation,
				parameters: parameters
			}
		});
		tracer.debug && tracer.debug("client.sendRequest response:", response);
		return response.body.parameters;
	}
	return "";
};