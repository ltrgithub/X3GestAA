"use strict";
var helpers = require('syracuse-core/lib/helpers');
var CAdapiVariableLocalMenu = require('syracuse-x3/lib/fusion/CAdapiVariableLocalMenu').CAdapiVariableLocalMenu;

var CAdapiVariableCombo = exports.CAdapiVariableCombo = helpers.defineClass(function(srcLine, aEntityIndexBaseOne, aVarName, aID, aTdo, aFormat, aEntityState, aLocalMenu) {
	CAdapiVariableLocalMenu.call(this, srcLine, aEntityIndexBaseOne, aVarName, aID, aTdo, aFormat, aEntityState, aLocalMenu);
	this.disableList = null;
	this.disableModif = false;
}, CAdapiVariableLocalMenu, {
	clone: function() {
		var wVariable = new CAdapiVariableCombo(this.srcLine, this.entityIndexBaseOne, this.name, this.id, this.dataType, this.format, this.state, this.localMenu);
		wVariable.mustBeFormated = this.mustBeFormated;
		this.cloneValues(wVariable);
		return wVariable;
	},
	hasDchModifications: function() {
		return this.disableModif;
	},
	hasGuiModModifications: function() {
		return CAdapiVariableLocalMenu.prototype.hasGuiModModifications.call(this) || this.disableModif;
	},
	razModification: function() {
		CAdapiVariableLocalMenu.prototype.razModification.call(this);
		this.disableModif = false;
	},
	setServerDisabledChoice: function(choice) {
		if (choice == 0) {
			if (this.disableList != null) {
				this.disableList.clear();
			}
			this.disableModif = true;
		} else {
			if (this.disableList == null) {
				this.disableList = [];
			}
			if (!this.disableList.indexOf(choice)) {
				this.disableList.push(choice);
				this.disableModif = true;
			}
		}
		if (this.disableModif && this.srcLine != null) {
			this.srcLine.comboDchModifSet();
		}
	}

	// arr != null pour les grilles
	,
	toDchJSON: function(arr) {
		if (this.disableModif) {
			if (this.disableList == null || this.disableList.length === 0) {
				if (arr != null) {
					arr.push(null);
				}
				return null;
			} else {
				if (arr == null) {
					arr = [];
				}
				for (var item in this.disableList) {
					arr.push(item);
				}
				return arr;
			}
		}
		return null;
	},
	toJSON: function() {
		var object = CAdapiVariableLocalMenu.prototype.toJSON.call(this);
		var dch = toDchJSON(null);
		if (dch != null) {
			object.dch = dch;
		}
		return object;
	}
});