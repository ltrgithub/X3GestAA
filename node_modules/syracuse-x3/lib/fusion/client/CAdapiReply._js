"use strict";
var helpers = require('syracuse-core/lib/helpers');
var CAdonixReply = Object; //require('syracuse-x3/lib/fusion/CAdonixReply').CAdonixReply;
var CAdapiResources = require('syracuse-x3/lib/fusion/CAdapiResources').CAdapiResources;
var CAdapiMessage = require('syracuse-x3/lib/fusion/CAdapiMessage').CAdapiMessage;
var CAdapiInstance = require('syracuse-x3/lib/fusion/CAdapiInstance').CAdapiInstance;
var CAdapiInstances = require('syracuse-x3/lib/fusion/CAdapiInstances').CAdapiInstances;

/**
 * Structure publique de reponse a une requete fournie a l'application cliente.
 * */
var CAdapiReply = exports.CAdapiReply = helpers.defineClass(function(aAdapiClient, aOrderId, aSTAT, aReplyMessages) {
	aSTAT = aSTAT !== undefined ? aSTAT : 1;
	CAdonixReply.call(this, aOrderId, aSTAT, aReplyMessages);
	this.adapiClient = aAdapiClient;
	this.adapiInstances = null;
	this.targetEntity = null;
	this.targetIst = null;
	this.messages = [];
}, CAdonixReply, {
	addAdapiInstance: function(aAdapiInstance) {
		this.initAdapiInstances();
		this.adapiInstances.add(aAdapiInstance);
		if (aAdapiInstance.hasException()) {
			this.setTargetAdxId(aAdapiInstance.ist, aAdapiInstance.adapiEntity);
		}
		return aAdapiInstance;
	},
	addLogicalErrorMess: function(aObject, aMethod, aIst, aMessage) {
		console.error("!!!! ERROR: " + aMessage)
		if (this.adapiClient.isWithLogicalErrDetails()) {
			var wMessage = this.messages.getFirstMessageOfTtyp(CAdapiReply.WEBSERVER);
			if (wMessage == null) {
				var wMess = this.adapiClient.adapiResources.getMessage(CAdapiResources.KEYMESS_ERROR_LOGICAL);

				wMessage = new CAdapiMessage(CAdapiReply.WEBSERVER, this.adapiClient, wMess, false);

				this.messages.addMessage(wMessage);
			}
			wMessage.addWebServerLocicalMess(buildLogicalErrorMess(aObject, aMethod, aIst, aMessage));
		}
	},
	addMessage: function(aAdapiMessage) {
		this.messages.push(aAdapiMessage);
		return aAdapiMessage;
	},
	/* TODO overload
	addMessage: function(aType, aAction, aMessage, aTitre, aDefBtn, aSleep, aChx) {
		return this.addMessage(new CAdapiMessage(aType, aAction, aMessage, aTitre, aDefBtn, aSleep, aChx, this.adapiClient));
	},
	*/
	addTargetInstance: function() {
		var wFormatString = null;
		var wFormatedValue = null;
		var wServerValue = null;
		var wAdapiInstance;
		try {
			if (this.getTargetEntity() instanceof CAdapiVariable) {
				var wAdapiVariable = this.targetVariable;
				if (wAdapiVariable.acceptEditFormat()) {
					wFormatString = validTargetFormat(this.getTargetEntity().format);
					wFormatedValue = wAdapiVariable.formatX3ToEdit();
					wServerValue = wAdapiVariable.getServerValStr();
				}
			}
			wAdapiInstance = CAdapiInstance.newtarget(this.adapiClient, this.targetIst, wFormatString, wFormatedValue, this.stayInCommandMode);
			if (this.getTargetEntity() instanceof CAdapiVariableDate) {
				wAdapiInstance.setRoughValue((this.getTargetEntity()).getServerValStr());
			}
		} catch (e) {
			var wAdapiMessage = new CAdapiMessage(CAdapiReply.WEBSERVER, this.adapiClient, e.message, false);
			this.addMessage(wAdapiMessage);
			wAdapiInstance = CAdapiInstance.newtarget(this.adapiClient, this.targetIst, wFormatString, wServerValue, this.stayInCommandMode);
		}
		this.addAdapiInstance(wAdapiInstance);
		return wAdapiInstance;
	},
	findTargetEntity: function() {
		var wTargetEntity = null;
		if (this.targetIst) {
			wTargetEntity = this.findTargetEntity(this.targetIst);
		}
		if (wTargetEntity == null) {
			var wMess = this.adapiClient.adapiResources.getMessage(CAdapiResources.KEYMESS_ERROR_CURFORMAT_NOIST, this.targetIst == null ? "NULL" : this.targetIst.toStringDescr());
			this.adapiClient.addLogicalErrorMess(this, "getTargetFormat", this.targetIst == null ? "NULL" : this.targetIst.alphanumCodage, wMess);
		}
		return wTargetEntity;
	},
	/* TODO overload
	findTargetEntity: function(aStructIst) {

		var wModifiable = this.adapiClient.findModifiable(aStructIst);

		if (wModifiable != null && wModifiable instanceof CAdapiEntity) {
			return wModifiable;
		} else {
			return null;
		}
	},*/
	getTargetEntity: function() {
		if (this.targetEntity == null) {
			setTargetEntity(this.findTargetEntity());
		}
		return this.targetEntity;
	},
	getTargetVariable: function() {
		return this.getTargetEntity();
	},
	hasTargetEntityField: function() {
		var wAdapiEntity = this.getTargetEntity();
		return wAdapiEntity != null && wAdapiEntity instanceof CAdapiVariable;
	},
	initAdapiInstances: function() {
		if (this.adapiInstances == null) {
			this.adapiInstances = new CAdapiInstances();
		}
	},
	setOk: function(aStat) {
		this.status = aStat;
	},
	setStatusNOTOK: function(e) {
		this.status = 0;
		this.reason = this.reason || e;
		 this.messages.splice(0, 0, new CAdapiMessage(CAdonix.MSG_ERROR, 0, wMess, "", 0, 0, 0));
	},
	setStatusOK: function(aInfoMessage) {
		this.status = 1;
		this.addMessage(CAdonix.MSG_INFORMATION, 0, aInfoMessage, "", 0, 0, 0);
	},
	setTargetAdxIdEntity: function(aTargetIst, aAdapiEntity) {
		this.targetIst = aTargetIst;
		this.setTargetEntity(aAdapiEntity);
	},
	setTargetAdxId: function(aTargetIst, request) {
		this.setTargetAdxIdEntity(aTargetIst, this.findTargetEntity(aTargetIst));
		var instance = this.addTargetInstance();
		if (aTargetIst.isLeftListIst() && request.lefListLineSelected != -1) {
			instance.setNl(request.lefListLineSelected + 1);
		}
		this.adapiClient.setCurrentField(instance);
	},
	setTargetEntity: function(aTargetEntity) {
		this.targetEntity = aTargetEntity;
	},
	traverseAdapiInstances: function(aTraverser) {
		if (this.adapiInstances != null) {
			this.adapiInstances.traverseChilds(aTraverser);
		}
	},
	validTargetFormat: function(aFormat) {
		if (aFormat == null || !aFormat.isValid()) {
			var wMess = this.adapiClient.adapiResources.getMessage(CAdapiResources.KEYMESS_ERROR_CURFORMAT_NOFORMAT, this.targetIst.toStringDescr());
			this.adapiClient.addLogicalErrorMess(this, "getTargetFormat", this.targetIst.alphanumCodage, wMess);
			return wMess;
		} else {
			return aFormat.string;
		}
	}
});

CAdapiReply.WEBSERVER = 98;

CAdapiReply.buildLogicalErrorMess = function(aObject, aMethod, aIst, aMessage) {
	var wSB = new StringBuilder();
	wSB.append(CStringFacilities.getClasseName(aObject.class));
	wSB.append('^');
	wSB.append(aMethod);
	wSB.append('^');
	wSB.append(aIst);
	wSB.append('^');
	wSB.append(aMessage);
	return wSB.toString();
}