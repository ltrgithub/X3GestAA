package com.sage.x3.bundle.shared.adapi.client;

import com.adonix.util.CStringFacilities;
import com.adonix.util.ITraverser;
import com.adonix.util.reply.CReplyMessage;
import com.adonix.util.reply.CReplyMessages;
import com.adonix.x3.comm.client.adonix.CAdonix;
import com.adonix.x3.comm.client.adonix.CAdonixMessage;
import com.adonix.x3.comm.client.adonix.CAdonixReply;
import com.adonix.x3.comm.protocol.CStructIst;
import com.adonix.x3.formater.IFormat;
import com.sage.x3.bundle.shared.adapi.CAdapiEntity;
import com.sage.x3.bundle.shared.adapi.CAdapiException;
import com.sage.x3.bundle.shared.adapi.CAdapiInstance;
import com.sage.x3.bundle.shared.adapi.CAdapiInstances;
import com.sage.x3.bundle.shared.adapi.CAdapiMessage;
import com.sage.x3.bundle.shared.adapi.CAdapiResources;
import com.sage.x3.bundle.shared.adapi.CAdapiVariable;
import com.sage.x3.bundle.shared.adapi.CAdapiVariableDate;
import com.sage.x3.bundle.shared.adapi.IAdapiModifiable;

/**
 * Structure publique de reponse a une requete fournie a l'application cliente.
 * */
var CAdapiReply = helpers.defineClass(function() {}, CAdonixReply, {

	private static String LIB_METHOD_GET_TARGET_FORMAT = "getTargetFormat";

	public static String buildLogicalErrorMess(aObject, aMethod, aIst, aMessage) {
		var wSB = new StringBuilder();
		wSB.append(CStringFacilities.getClasseName(aObject.getClass()));
		wSB.append('^');
		wSB.append(aMethod);
		wSB.append('^');
		wSB.append(aIst);
		wSB.append('^');
		wSB.append(aMessage);
		return wSB.toString();
	}

	private IAdapiClient this.adapiClient;
	private CAdapiInstances this.adapiInstances = null;
	private CAdapiEntity this.targetEntity = null;

	public CAdapiReply(aAdapiClient, aRequest) {
		this(aAdapiClient, aRequest.getActionId(), OK);
	}

	public CAdapiReply(aAdapiClient, aOrderId, aSTAT) {
		TODO_SUPER(aAdapiClient.getTracer(), aOrderId, aSTAT);
		this.adapiClient = aAdapiClient;
	}

	public CAdapiReply(aAdapiClient, aOrderId, aSTAT, aReplyMessages) {
		TODO_SUPER(aAdapiClient.getTracer(), aOrderId, aSTAT, aReplyMessages);
		this.adapiClient = aAdapiClient;
	}, addAdapiInstance: function(aAdapiInstance) {
		initAdapiInstances();
		this.adapiInstances.add(aAdapiInstance);
		if (aAdapiInstance.hasException()) {
			this.setTargetAdxId(aAdapiInstance.getIst(), aAdapiInstance.getAdapiEntity());
		}
		return aAdapiInstance;
	}, addLogicalErrorMess: function(aObject, aMethod, aIst, aMessage) {
		if (this.adapiClient.isWithLogicalErrDetails()) {
			var wMessage = (CAdapiMessage) getMessages().getFirstMessageOfTtyp(CReplyMessage.WEBSERVER);
			if (wMessage == null) {
				var wMess = getAdapiClient().getAdapiResources().getMessage(CAdapiResources.KEYMESS_ERROR_LOGICAL);

				wMessage = new CAdapiMessage(CReplyMessage.WEBSERVER, this.adapiClient, wMess,false);

				getMessages().addMessage(wMessage);
			}
			wMessage.addWebServerLocicalMess(buildLogicalErrorMess(aObject, aMethod, aIst, aMessage));
		}
	}, addMessage: function(aAdapiMessage) {
		getMessages().addMessage(aAdapiMessage);
		return aAdapiMessage;
	}, addMessage: function(aType, aAction, aMessage, aTitre, aDefBtn, aSleep, aChx) {
		return this.addMessage(new CAdapiMessage(aType, aAction, aMessage, aTitre, aDefBtn, aSleep, aChx, this.adapiClient));
	}, addTargetInstance: function() {
		var wFormatString = null;
		var wFormatedValue = null;
		var wServerValue = null;
		var wAdapiInstance;
		try {
			if (getTargetEntity() instanceof CAdapiVariable) {
				var wAdapiVariable = getTargetVariable();
				if (wAdapiVariable.acceptEditFormat()) {
					wFormatString = validTargetFormat(getTargetEntity().getFormat());
					wFormatedValue = wAdapiVariable.formatX3ToEdit();
					wServerValue = wAdapiVariable.getServerValStr();
				}
			}
			wAdapiInstance = CAdapiInstance.newtarget(getAdapiClient(), getTargetIst(), wFormatString, wFormatedValue, getStayInCommandMode());
			if (getTargetEntity() instanceof CAdapiVariableDate) {
				wAdapiInstance.setRoughValue(((CAdapiVariableDate) getTargetEntity()).getServerValStr());
			}
		} catch (e) {
			var wAdapiMessage = new CAdapiMessage(CReplyMessage.WEBSERVER, this.adapiClient, e.getMessage(),false);
			this.addMessage(wAdapiMessage);
			wAdapiInstance = CAdapiInstance.newtarget(getAdapiClient(), getTargetIst(), wFormatString, wServerValue, getStayInCommandMode());
		}
		addAdapiInstance(wAdapiInstance);
		return wAdapiInstance;
	}, findTargetEntity: function() {
		var wTargetEntity = null;
		if (hasTargetIst()) {
			wTargetEntity = this.findTargetEntity(getTargetIst());
		}
		if (wTargetEntity == null) {
			var wMess = this.adapiClient.getAdapiResources().getMessage(CAdapiResources.KEYMESS_ERROR_CURFORMAT_NOIST);
			wMess = CStringFacilities.sprintf(wMess, getTargetIst()==null?"NULL":getTargetIst().toStringDescr());
			this.adapiClient.addLogicalErrorMess(this, LIB_METHOD_GET_TARGET_FORMAT,getTargetIst()==null?"NULL":getTargetIst().getAlphanumCodage(), wMess);
		}
		return wTargetEntity;
	}, findTargetEntity: function(aStructIst) {

		var wModifiable = this.adapiClient.findModifiable(aStructIst);

		if (wModifiable != null && wModifiable instanceof CAdapiEntity) {
			return (CAdapiEntity) wModifiable;
		} else {
			return null;
		}
	}, getAdapiClient: function() {
		return this.adapiClient;
	}, getTargetEntity: function() {
		if (this.targetEntity == null) {
			setTargetEntity(this.findTargetEntity());
		}
		return this.targetEntity;
	}, getTargetVariable: function() {
		return (CAdapiVariable) getTargetEntity();
	}, hasTargetEntityField: function() {
		var wAdapiEntity = getTargetEntity();
		return wAdapiEntity != null && wAdapiEntity instanceof CAdapiVariable;
	}, initAdapiInstances: function() {
		if (this.adapiInstances == null) {
			this.adapiInstances = new CAdapiInstances();
		}
	}, insertFirstMessage: function(aAdapiMessage) {
		getMessages().insertFirstMessage(aAdapiMessage);
		return aAdapiMessage;
	}, insertFirstMessage: function(aType, aAction, aMessage, aTitre, aDefBtn, aSleep, aChx) {
		return this.insertFirstMessage(new CAdapiMessage(aType, aAction, aMessage, aTitre, aDefBtn, aSleep, aChx, this.adapiClient));
	}, setOk: function(aSTAT) {
		TODO_SUPER.setStatus(aSTAT);
	}, setStatusNOTOK: function(aCommExceptionWhy, wMess) {
		TODO_SUPER.setStatusNOTOK();
		setCommExceptionWhy(aCommExceptionWhy);
		this.insertFirstMessage(CAdonix.MSG_ERROR, 0, wMess, "", 0, 0, 0);
	}, setStatusNOTOK: function(e) {
		if (this.isOk() && e instanceof CAdapiException && ((CAdapiException) e).isFormatException()) {
			TODO_SUPER.setStatusOK();
		} else if (e != null) {
			TODO_SUPER.setStatusNOTOK(e);
		} else {
			TODO_SUPER.setStatusNOTOK();
		}
	}, setStatusOK: function(aInfoMessage) {
		this.setStatusOK();
		this.addMessage(CAdonix.MSG_INFORMATION, 0, aInfoMessage, "", 0, 0, 0);
	}, setTargetAdxId: function(aTargetIst) {
		this.setTargetAdxId(aTargetIst, this.findTargetEntity(aTargetIst));
		if (hasTargetEntityField()) {
			addTargetInstance();
		}
	}, setTargetAdxId: function(aTargetIst, aAdapiEntity) {
		TODO_SUPER.setTargetAdxId(aTargetIst);
		setTargetEntity(aAdapiEntity);
	}, setTargetAdxId: function(aTargetIst, request) {
		this.setTargetAdxId(aTargetIst, this.findTargetEntity(aTargetIst));
		var instance = addTargetInstance();
		if (aTargetIst.isLeftListIst() && request.getLefListLineSelected() != -1l) {
			instance.setNl(request.getLefListLineSelected() + 1);
		}
		((CAdapiClient) getAdapiClient()).setCurrentField(instance);
	}, setTargetEntity: function(aTargetEntity) {
		this.targetEntity = aTargetEntity;
	}, traverseAdapiInstances: function(aTraverser) {
		if (this.adapiInstances != null) {
			this.adapiInstances.traverseChilds(aTraverser);
		}
	}, validTargetFormat: function(aFormat) {
		if (aFormat == null || !aFormat.isValid()) {
			var wMess = this.adapiClient.getAdapiResources().getMessage(CAdapiResources.KEYMESS_ERROR_CURFORMAT_NOFORMAT);
			wMess = CStringFacilities.sprintf(wMess, getTargetIst().toStringDescr());
			this.adapiClient.addLogicalErrorMess(this, LIB_METHOD_GET_TARGET_FORMAT, getTargetIst().getAlphanumCodage(), wMess);
			return wMess;
		} else {
			return aFormat.getString();
		}
	}
}