package com.sage.x3.bundle.shared.adapi.client;

import java.util.Observable;

var AdapiObservable = helpers.defineClass(function() {}, Observable, {

	public static enum ETypeJsonNode {
		SESSION, ACT, ENTITY, FUNC, SESSIONMNU, PREVIOUS, TARGET, TARGETACT, WINDOW;
	}

	private ETypeJsonNode typeJson = null;
	private boolean this.notified=false;
	public AdapiObservable(adapiClient) {
		if (adapiClient != null) {
			addObserver(adapiClient);
		}
	}, compareTo: function(o) {
		return getAdapiObservableId().compareTo(o.getAdapiObservableId());
	}, dispose: function() {
		deleteObservers();
	}, forceChange: function() {
		if (false && this.notified) {
			return;
		}
		if (getTypeJsonNode() != null) {// send only when jsonNode Type is
			// defined
			setChanged();
			notifyObservers();
		}
		this.notified=true;
	}, getAdapiObservableId: function() {
		return getClass().getName() + hashCode();
	}, getTypeJsonNode: function() {
		return typeJson;
	}, razModification: function() {
		this.notified=false;
	}, setTypeJsonNode: function(aType) { // change jsontype and
		// force change
		typeJson = aType;
		forceChange();
	}

	public , toJson: function();
}
