"use strict";
var helpers = require('syracuse-core/lib/helpers');
var CSDataEntryNoPayload = Object; //require('syracuse-x3/lib/fusion/CSDataEntryNoPayload').CSDataEntryNoPayload;

var SDataEntryExcep = exports.SDataEntryExcep = helpers.defineClass(function(schema, t) {
	CAdapiReply.call(this, schema);
	this.exep = t;
	this.contentType = "application/json";
	this.httpStatus = t.httpStatus;
}, CSDataEntryNoPayload, {
	toJSON: function() {
		return this.exep.toJSon();
	}
});

var FusionExcep = exports.FusionExcep = helpers.defineClass(function(info, reason, s, e) {
	this.clientInfo = info == null ? FusionClientInfo.NOCATCH : info;
	this.diag = null;
	this.httpStatus = s ? EHttpStatus.INTERSERVERROR.status : s.status;
	this.reason = CDiagnosis.excepCheckMsg(reason);
	if (e != null) {
		if (e instanceof CXSDataException) {
			this.diag = new CDiagnoses();
			var se = e;
			if (se.listDiagnosis != null) {
				for (var d in se.listDiagnosis) {
					this.diag.addDiagnosis(d);
				}
			}
		} else {
			this.diag = err2Diagnoses(e, true);
		}
	}
}, Error, {
	getMessage: function() {
		var s = new StringBuilder();
		if (this.clientInfo != null) {
			s.append(this.clientInfo.msgDef);
		}
		if (this.reason != null) {
			if (s.length() > 0) {
				s.append("\n");
			}
			s.append(this.reason);
		}
		if (s.length() == 0) {
			s.append(FusionClientInfo.NOCATCH.msgDef);
		}
		return s.toString();
	},
	toJSon: function() {
		var r = {};
		this.clientInfo.apendToJSon(r, this.reason);
		if (this.reason != null && !this.reason.isEmpty()) {
			r.errMsg = this.reason;
		}
		if (this.diag != null) {
			r.diagnoses = this.diag.toJSONArray();
		}
		return r;
	}

});


FusionExcep.err2Diagnoses = function(t, cause) {
	var diags = new CDiagnoses();
	var cur = t;
	//	while (cur != null) {
	var diag = cur instanceof CAdapiException ? cur.diagnose : null;
	if (diag == null) {
		diag = new CDiagnosis();
		diag.setMessage(cur.message);
		diag.setStackTrace(cur);
		diag.setStatusCode(500);
		diag.setSeverity(ESeverity.ERROR.toString());
		diag.setCode(ESDataErrorCode.ApplicationDiagnosis);
	}
	diags.addDiagnosis(diag);
	//	cur = !cause || cur.cause == cur ? null : cur.cause;
	//	}
	return diags;
}

FusionExcep.excep2IContent = function(req, info, t) {
	if (t == null) {
		throw new RuntimeException("Unexpected null exception");
	}
	if (req == null || req.adapter == null || req.adapter.schema == null) {
		throw new RuntimeException("Bad IRequest - No schema");
	}
	if (!(t instanceof FusionExcep)) {
		t = new FusionExcep(info != null ? info : FusionClientInfo.JAVA, t.message, EHttpStatus.INTERSERVERROR, t);
	}
	var x = new SDataEntryExcep(req.adapter.schema, t);
	try {
		Utils.toConsole("FUSION EXCEPTION\n" + x.toJSON().toString(3));
	} catch (e) {
		throw new RuntimeException("excep2IContent error", e);
	}
	return x;
}

FusionExcep.throwAdapiExcep = function(reason, i, t) {
	throw new FusionExcep(i == null ? FusionClientInfo.X3COM : i, reason, EHttpStatus.INTERSERVERROR, t);
}

FusionExcep.throwBadUrl = function(reason) {
	throw new FusionExcep(FusionClientInfo.BADURL, reason, EHttpStatus.NOTACCEPTABLE, null);
}

FusionExcep.throwConfigExcep = function(reason, t) {
	throw new FusionExcep(FusionClientInfo.CONFIG, reason, EHttpStatus.INTERSERVERROR, t);
}

FusionExcep.throwCreateCnx = function(reason, s) {
	throw new FusionExcep(FusionClientInfo.CREATECNX, reason, s, null);
}

FusionExcep.throwCreateSess = function(reason, s, t) {
	throw new FusionExcep(FusionClientInfo.CREATESESS, reason, s, t);
}

FusionExcep.throwSessBusy = function(reason) {
	throw new FusionExcep(FusionClientInfo.SESSBUSY, reason, EHttpStatus.NOTACCEPTABLE, null);
}

FusionExcep.throwSessNotFound = function(reason) {
	throw new FusionExcep(FusionClientInfo.SESSNOTFOUND, reason, EHttpStatus.NOTFOUND, null);
}