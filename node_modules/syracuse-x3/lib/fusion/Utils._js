"use strict"; var helpers = require('syracuse-core/lib/helpers');

import com.adonix.util.CXStringUtils;
import com.adonix.util.json.JSONArray;
import com.adonix.util.json.JSONObject;

var Utils = helpers.defineClass(function() {}, null, {

	public static final String VAL_TRUE = "true";
	public static final String VAL_YES = "yes";
	public static final String VAL_ON = "on";

	public static boolean emptyJson(o) {
		if (o == null) {
			return true;
		}
		if (o instanceof JSONArray) {
			return ((JSONArray) o).length() == 0;
		}
		if (o instanceof JSONObject) {
			return ((JSONObject) o).length() == 0;
		}
		return true;
	}

	public static boolean isTrue(val) {
		if (val==null) {
			return false;
		}
		val=val.toLowerCase();
		return val.equals(VAL_TRUE) || val.equals(VAL_YES) || val.equals(VAL_ON);
	}

	public static boolean json2Bool(o, key) {
		if (o == null || o.isNull(key)) {
			return false;
		}
		return o.optBoolean(key);
	}

	public static int json2Int(o, key, def) {
		if (o == null || o.isNull(key)) {
			return def;
		}
		return o.optInt(key, def);
	}
	public static Object json2Object(o, key) {
		if (o == null || o.isNull(key)) {
			return null;
		}
		return o.opt(key);
	}

	public static String json2Str(o, key, def) {
		if (o == null || o.isNull(key)) {
			return def;
		}
		return o.optString(key);
	}

	public static Object jsonParse(s) {
			if (s == null) {
				return null;
			}
			s = CXStringUtils.strFullTrim(s);
			if (s.isEmpty()) {
				return null;
			}
			if (s.charAt(0) == '{') {
				return new JSONObject(s);
			}
			if (s.charAt(0) == '[') {
				return new JSONArray(s);
			}
			return null;
	}

	public static double nanoS2ms(nano, nbDec) {
		return roundSup((double) nano / (double) 1000000, nbDec);
	}

	public static double roundInf(v, nbDec) {
		var e = Math.pow(10, nbDec);
		return Math.floor(v * e) / e;
	}

	public static double roundSup(v, nbDec) {
		var e = Math.pow(10, nbDec);
		return Math.rint(v * e) / e;
	}

	public static int str2Int(aStr, def) {
		try {
			return new Integer(Integer.parseInt(aStr));
		} catch (e) {
			return def;
		}
	}

	public static void toConsole(Object... args) {
		var s = new StringBuilder();
		for (x : args) {
			if (x != null) {
				s.append(" ").append(x.toString());
			}
		}
		System.out.println(s);
	}
}
