"use strict"; var helpers = require('syracuse-core/lib/helpers');

var CAdapiMessages = helpers.defineClass(function() {}, CReplyMessages, {
	private static final long serialVersionUID = 3978426927327688503L;
	private IAdapiClient clientObs;

	public CAdapiMessages(clientObs) {
		TODO_SUPER();
		this.clientObs = clientObs;
	}, addMessage: function(aType, aMessage) {
		addElement(new CAdapiMessage(aType, clientObs, aMessage,false));
	}, getMess: function(aIdx) {
		var wMess;
		try {
			wMess = ((CAdapiMessage) elementAt(aIdx)).getMess();
		} catch (e) {
			wMess = "message idx=[" + aIdx + "] does not exist.";
		}
		return wMess;
	}, getNbMessages: function() {
		return size();
	}, getTypMess: function(aIdx) {
		int wTypMess;
		try {
			wTypMess = ((CAdapiMessage) elementAt(aIdx)).getTyp();
		} catch (e) {
			wTypMess = -1;
		}
		return wTypMess;
	}, hasErrorMessage: function() {
		Enumeration<CReplyMessage> wEnum = elements();
		while (wEnum.hasMoreElements()) {
			if (wEnum.nextElement().isErrorMessage()) {
				return true;
			}
		}
		return false;
	}, hasMessages: function() {
		return size() > 0;
	}, hasStrongMessage: function() {
		Enumeration<CReplyMessage> wEnum = elements();
		while (wEnum.hasMoreElements()) {
			if (((CAdapiMessage) wEnum.nextElement()).isStrongMess()) {
				return true;
			}
		}
		return false;
	}

}
