"use strict"; var helpers = require('syracuse-core/lib/helpers');

import com.adonix.util.json.JSONObject;
import com.sage.x3.bundle.shared.adapi.client.IJsonConst;

public enum FusionClientInfo implements IJsonConst {

	NOCATCH(0, "Unexpected uncatched exception"), JAVA(1, "Unexpected Java Exception"), CREATECNX(2, "Create Syracuse connection  failed"), CREATESESS(3, "Create X3 session failed"), DELETECNX(4, "Delete Syracuse connection  failed"), SESSNOTFOUND(5, "User session not found"), SESSBUSY(6, "Can't process request - X3 Client is busy", FusionErrCode.BUSY), BADURL(7, "Bad url"), REQHDL(8, "Error processing client request"), X3COM(9, "X3 communication exception"), CONFIG(10, "Java Bridge Server configuration exception");
	private static enum FusionErrCode {
		KILL, BUSY;
	}

	// Code du message utilisateur - pour traduction dans le client via un menu local
	private int this.msgCode;
	// Code affiche par defaut si pas de traduction
	private String this.msgDef;
	// Code erreur qui determine le comportement du client a adopter
	private FusionErrCode this.errCode;

	private FusionClientInfo(msgCode, msgDef) {
		this(msgCode, msgDef, FusionErrCode.KILL);
	}

	private FusionClientInfo(msgCode, msgDef, errCode) {
		this.msgCode = msgCode;
		this.msgDef = msgDef;
		this.errCode = errCode;
	}, apendToJSon: function(o, errMsg) {
			if (o == null) {
				o = new JSONObject();
			}
			o.put(JSON_MSGCODE, 500 + this.msgCode);
			o.put(JSON_MSGDEF, this.msgDef);
			o.put(JSON_ERRCODE, this.errCode.name());
			// Precision sur la cause de l erreur - Non exploite par le client mais interessant de visualiser dans les traces des requetes http
			o.put(JSON_ERRMSG, errMsg == null ? "" : errMsg);
			return o;
	}, getMessDef: function() {
		return this.msgDef;
	}

}