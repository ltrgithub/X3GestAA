"use strict";
var helpers = require('syracuse-core/lib/helpers');
var CAdapiVariableDate = function() {};

var CAdapiVariablePeriod = helpers.defineClass(function(srcLine, aEntityIndexBaseOne, aVarName, aID, aTdo, aFormat, aEntityState, aLocalFormat, aPivotDate) {
	TODO_SUPER(srcLine, aEntityIndexBaseOne, aVarName, aID, aTdo, aFormat, aEntityState, aLocalFormat, aPivotDate);
}, CAdapiVariableDate, {
	callUnFormater: function(aValue) {
		var wReceivedCenturyAndYear = EMPTY;
		var wRoughDate = EMPTY;
		var wEditDate = TODO_SUPER.callUnFormater(aValue);
		try {
			var val = this.serverValStr;
			if (val != null && val.length() >= 4) {
				wReceivedCenturyAndYear = val.substring(0, 4);
				wRoughDate = wReceivedCenturyAndYear + wEditDate.substring(4);
			} else {
				wRoughDate = wEditDate;
			}
		} catch (e1) {
			var wE2 = CAdapiException.newFmtException(this.adapiClient, e1, "cant unformat value");
			wE2.addComplement(CStringFacilities.toStringDescr("Value", aValue));
			wE2.addComplement(CStringFacilities.toStringDescr("ReceivedCenturyAndYear", wReceivedCenturyAndYear));
			wE2.addComplement(CStringFacilities.toStringDescr("RoughDate", wRoughDate));
			wE2.addComplement(CStringFacilities.toStringDescr("Id", this.id));
			this.tracer.trace(this, "callUnFormater", wE2);
			throw wE2;
		}
		return wRoughDate;
	},
	clone: function() {
		var wLocalFormatAndSep = this.localFormatAndSep;
		var wPivotDate = this.pivotDate;
		var wVariable = new CAdapiVariablePeriod(this.srcLine, this.entityIndexBaseOne, this.name, this.id, this.dataType, this.format, this.state, wLocalFormatAndSep, wPivotDate);
		wVariable.setMustBeFormated(mustBeFormated());
		cloneValues(wVariable);
		return wVariable;
	}
});