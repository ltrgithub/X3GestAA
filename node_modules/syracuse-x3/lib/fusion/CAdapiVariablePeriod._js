"use strict"; var helpers = require('syracuse-core/lib/helpers');

var CAdapiVariablePeriod = helpers.defineClass(function() {}, CAdapiVariableDate, {

	protected CAdapiVariablePeriod(srcLine, aEntityIndexBaseOne, aVarName, aID, aTdo, aFormat, aEntityState, aLocalFormat, aPivotDate) {
		TODO_SUPER(srcLine, aEntityIndexBaseOne, aVarName, aID, aTdo, aFormat, aEntityState, aLocalFormat, aPivotDate);
	}, callUnFormater: function(aValue) {
		var wReceivedCenturyAndYear = EMPTY;
		var wRoughDate = EMPTY;
		var wEditDate = TODO_SUPER.callUnFormater(aValue);
		try {
			var val = getServerValStr();
			if (val != null && val.length() >= 4) {
				wReceivedCenturyAndYear = val.substring(0, 4);
				wRoughDate = wReceivedCenturyAndYear + wEditDate.substring(4);
			} else {
				wRoughDate = wEditDate;
			}
		} catch (e1) {
			var wE2 = CAdapiException.newFmtException(getAdapiClient(), e1, "cant unformat value");
			wE2.addComplement(CStringFacilities.toStringDescr("Value", aValue));
			wE2.addComplement(CStringFacilities.toStringDescr("ReceivedCenturyAndYear", wReceivedCenturyAndYear));
			wE2.addComplement(CStringFacilities.toStringDescr("RoughDate", wRoughDate));
			wE2.addComplement(CStringFacilities.toStringDescr("Id", getId()));
			getTracer().trace(this, "callUnFormater", wE2);
			throw wE2;
		}
		return wRoughDate;
	}, clone: function() {
		var wLocalFormatAndSep = getLocalFormatAndSep();
		var wPivotDate = getPivotDate();
		var wVariable = new CAdapiVariablePeriod(getSrcLine(), getEntityIndexBaseOne(), getName(), getId(), getDataType(), getFormat(), getState(), wLocalFormatAndSep, wPivotDate);
		wVariable.setMustBeFormated(mustBeFormated());
		cloneValues(wVariable);
		return wVariable;
	}
}
