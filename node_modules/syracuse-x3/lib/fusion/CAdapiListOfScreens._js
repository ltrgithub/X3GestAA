"use strict";
var helpers = require('syracuse-core/lib/helpers');
var CAdapiScreen = function() {};
var CAdapiListOfEntity = function() {};

var CAdapiScreenDummy = helpers.defineClass(function(aAdapiRequesterWindow, aEntityIndexbaseOne, aScreenId) {
	TODO_SUPER(aAdapiRequesterWindow, aEntityIndexbaseOne, aScreenId, null);
}, CAdapiScreen, {

	traverseChilds: function(aTraverser) {
		return this.traverseChilds(aTraverser);
	},
	traverseSettable: function(aStructIst, aAdapiSetter) {
		return aAdapiSetter.setAdapiModifiable(aStructIst, this);
	}
});

var serialVersionUID = "3618985585335743793";
var CAdapiListOfScreens = helpers.defineClass(function(aAdapiRequesterWindow) {
	TODO_SUPER(aAdapiRequesterWindow);
	this.screenLeftList = null;
	this.screenButtons = new CAdapiScreenDummy(aAdapiRequesterWindow, CAdapiScreen.SCREEN_BUTTONS_NUM_ZERO_BASED + 1, CAdapiScreen.SCREEN_ID_BUTTONS);
	this.screenTabTitles = new CAdapiScreenDummy(aAdapiRequesterWindow, CAdapiScreen.SCREEN_TABTITLES_NUM_ZERO_BASED + 1, CAdapiScreen.SCREEN_ID_TABTITLES);
}, CAdapiListOfEntity, {
	get: function(aIdx) {
		if (aIdx < CAdapiScreen.SCREEN_BUTTONS_NUM_ZERO_BASED && size() > aIdx) {
			return TODO_SUPER.get(aIdx);
		} else if (aIdx == CAdapiScreen.SCREEN_BUTTONS_NUM_ZERO_BASED) //32 => index base "one" = 33 => AG
		{
			return this.screenButtons;
		} else if (aIdx == CAdapiScreen.SCREEN_LEFTLIST_NUM_ZERO_BASED) //33 => index base "one" = 34 => AH
		{
			return this.screenLeftList;
		} else if (aIdx == CAdapiScreen.SCREEN_TABTITLES_NUM_ZERO_BASED) //34 => index base "one" = 35 => AI
		{
			return this.screenTabTitles;
		} else {
			return null;
		}
	},
	pushScreenLeftList: function(aAdapiScreen) {
		this.screenLeftList = aAdapiScreen;

		push(aAdapiScreen.id, aAdapiScreen);
	},
	traverseAll: function(aTraverser) {
		var wMax = size();
		var wScreen;
		var wI = 0;
		while (wI < wMax) {
			wScreen = get(wI);
			if (aTraverser.doWhenTraverse(wScreen, wI) == ITraverser.STOP_TRAVERSING) {
				return ITraverser.STOP_TRAVERSING;
			}
			if (wScreen.traverseAll(aTraverser) == ITraverser.STOP_TRAVERSING) {
				return ITraverser.STOP_TRAVERSING;
			}
			wI++;
		}
		return ITraverser.CONTINUE_TRAVERSING;
	},
	traverseChilds: function(aTraverser) {
		var wMax = size();
		var wEntry;
		var wI = 0;
		while (wI < wMax) {
			wEntry = get(wI);
			if (aTraverser.doWhenTraverse(wEntry, wI) == ITraverser.STOP_TRAVERSING) {
				return ITraverser.STOP_TRAVERSING;
			}
			wI++;
		}
		return ITraverser.CONTINUE_TRAVERSING;
	},
	traverseSettable: function(aStructIst, aAdapiSetter) {
		var wI = aStructIst.screenZeroBase;
		var wAdapiScreen = get(wI);
		if (wAdapiScreen == null) {
			var wMess = this.adapiClient.adapiResources.getMessage(CAdapiResources.KEYMESS_ERROR_SCRN_UNKNOWN);
			wMess = CStringFacilities.sprintf(wMess, CAdapiScreen.screenZeroBaseIdxToWhatScreen(wI), String.valueOf(size()), this.adapiRequesterWindow.id);
			aAdapiSetter.setLogicalErrMess(wMess);
			return false;
		}
		if (!aStructIst.isScreenIst()) {
			return wAdapiScreen.traverseSettable(aStructIst, aAdapiSetter);
		} else {
			return aAdapiSetter.setAdapiModifiable(aStructIst, wAdapiScreen);
		}
	}
});