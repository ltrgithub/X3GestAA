"use strict";
var helpers = require('syracuse-core/lib/helpers');
var Hashtable = Object; //require('syracuse-x3/lib/fusion/Hashtable').Hashtable;
var CAdapiException = require('syracuse-x3/lib/fusion/CAdapiException').CAdapiException;


var CAdapiListOfLocalMenus = exports.CAdapiListOfLocalMenus = helpers.defineClass(function() {
	Hashtable.call(this);
}, Hashtable, {
	addLocalMenu: function(aAdapiLocalMenu) {
		this[aAdapiLocalMenu.numId] = aAdapiLocalMenu;
	}
});

var MESS = "unknown choice=[%s] : menu [%s] has [%s] items";
var CAdapiLocalMenu = exports.CAdapiLocalMenu = helpers.defineClass(function(aNumId, aId, aChoices) {
	this.numId = aNumId;
	this.id = aId;
	this.choices = aChoices;
}, null, {
	getLib: function(aChoice) {
		if (aChoice < 1 || aChoice > this.choices.length) {
			var wMess = CStringFacilities.sprintf(MESS, aChoice.toString(), this.id, this.choices.length.toString());
			throw new Error(wMess);
		}
		return this.choices[aChoice - 1]; // base 0 !
	},
});

function extractIntLocalMenuId(aLocalMenuId) {
	aLocalMenuId = aLocalMenuId.substring(1); //pour enlever "M"
	return parseInt(aLocalMenuId,10);
}

var CAdapiListOfLocalMenusFactory = exports.CAdapiListOfLocalMenusFactory = {

	instanciateLocalMenus: function(aAdapiRequesterWindow, aWindowDescription, aLocalMenus) {
		var wLocalMenusNodes = aWindowDescription.MENLOC.MENL;
		var wMax = Array.isArray(wLocalMenusNodes) ? wLocalMenusNodes.length : 1;
		var wI = 0;
		var wLocalMenuId;
		var wLocalMenuNode;
		var wNbChoices;
		while (wI < wMax) {
			wLocalMenuNode = wMax === 1 ? wLocalMenusNodes : wLocalMenusNodes[wI];
			wLocalMenuId = wLocalMenuNode.$.NAM;
			wNbChoices = wLocalMenuNode.$.NBZ;
			var wNumId = extractIntLocalMenuId(wLocalMenuId);
			if (aLocalMenus[wNumId] != null) {
				throw new CAdapiException(aAdapiRequesterWindow.adapiClient, "CANT_ADD_LOCALMENU - AlreadyExist");
			}
			aLocalMenus.addLocalMenu(this.instanciateLocalMenu(aAdapiRequesterWindow.adapiClient, wNumId, wLocalMenuId, wNbChoices, wLocalMenuNode));
			wI++;
		}
	}
}

CAdapiListOfLocalMenusFactory.instanciateLocalMenu = function(aAdapiClient, aId, aLocalMenuID, aNbChoices, aLocalMenuNode) {
	var wLocalMenu;
	try {
		var wChoicesNodes = aLocalMenuNode.V;
		var wChoiceNode;
		var wMax = Array.isArray(wChoicesNodes) ? wChoicesNodes.length : 1;
		var wChoices = [];
		var wI = 0;
		while (wI < wMax) {
			wChoiceNode = wMax === 1 ? wChoicesNodes : wChoicesNodes[wI];
			wChoices[wI] = wChoiceNode;
			wI++;
		}
		wLocalMenu = new CAdapiLocalMenu(aId, aLocalMenuID, wChoices);
	} catch (e) {
		throw new CAdapiException(aAdapiClient, e, "CANT_ADD_LOCALMENU - instanciateLocalMenu");
	}
	return wLocalMenu;
}