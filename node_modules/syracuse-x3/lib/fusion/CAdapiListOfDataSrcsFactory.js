"use strict";
var helpers = require('syracuse-core/lib/helpers');

var ATT_DIM = "DIM";
var ATT_NAM = "NAM";
var ATT_NBP = "NBP";
var ATT_NBZ = "NBZ";
var TAG_DS = "DS";
var TAG_FLD = "FLD";

var CAdapiListOfDataSrcsFactory = {

	newEmptyDataSrc: function(aStackedWindow, aAdapiScreen, aEntityIndexBaseOne, aId, aDataSourceNode) {

		var wDim = aDataSourceNode.$[ATT_DIM];
		var wNbField = aDataSourceNode.$[ATT_NBZ];
		var wBasPagName = aDataSourceNode.$[ATT_NBP];
		var dataSrc = new CAdapiDataSrc(aStackedWindow, aAdapiScreen, aEntityIndexBaseOne, aId, wDim, wNbField, wBasPagName);
		var srcLine = newEmptyDataSrcLine(aStackedWindow, dataSrc, aId, aDataSourceNode);
		if (dataSrc.isBlocTableau()) {
			var wLineEntrySup = srcLine.clone();
			dataSrc.setEntrySup(wLineEntrySup);
			/*
			 * GLUTE: gestion des formats dans les colonnes des tableaux
			 *
			 * pour associer chacune des variables de la ligne a sa
			 * correspondante dans la ligne "wLineEntrySup" Note: sert ala
			 * propagation du format courant a chaque modification de valeur
			 */
			srcLine.setFormaterEntity(wLineEntrySup);
		}

		dataSrc.appendFirstBlankLine(srcLine);
		return dataSrc;
	},
	newEmptyDataSrcLine: function(aStackedWindow, aAdapiDataSrc, aId, aDataSourceNode) {
		var wNbField = aDataSourceNode.$[ATT_NBZ];
		var wAdapiDataSrcLine = new CAdapiDataSrcLine(aStackedWindow, aAdapiDataSrc, aId, wNbField);
		var wListOfX3Variables = aDataSourceNode[TAG_FLD];
		var wMax = Array.isArray(wListOfX3Variables) ? wListOfX3Variables.length : 1;
		var wVariable;
		var wVariableNode;
		var wI = 0;
		while (wI < wMax) {
			wVariableNode = wMax === 1 ? wListOfX3Variables : wListOfX3Variables[wI];
			wVariable = CAdapiVariableFactory.instanciateVariable(aStackedWindow, wAdapiDataSrcLine, wI + 1, aId, wVariableNode, 0);
			wAdapiDataSrcLine.addOneVar(wVariable);
			wI++;
		}
		return wAdapiDataSrcLine;
	},
	newScreenDataSrcs: function(aStackedWindow, aScreenNode, aAdapiScreen, aAdapiDataSrcs) {
		var wDataSourcesNodes = aScreenNode[TAG_DS];
		var wMax = Array.isArray(wDataSourcesNodes) ? wDataSourcesNodes.length : 1;
		var wDataSourceNode;
		var wAdapiDataSrc;
		var wDataSourceID;
		var wI = 0;
		while (wI < wMax) {
			wDataSourceNode = wMax === 1 ? wDataSourcesNodes : wDataSourcesNodes[wI];
			wDataSourceID = wDataSourceNode.$[ATT_NAM];
			wAdapiDataSrc = newEmptyDataSrc(aStackedWindow, aAdapiScreen, wI + 1, wDataSourceID, wDataSourceNode);
			aAdapiScreen.pushDataSrc(wDataSourceID, wAdapiDataSrc);
			aAdapiDataSrcs.push(wDataSourceID, wAdapiDataSrc);
			wI++;
		}
	}
};