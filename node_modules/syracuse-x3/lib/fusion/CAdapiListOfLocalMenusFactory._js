"use strict"; var helpers = require('syracuse-core/lib/helpers');

	var CAdapiListOfLocalMenus = helpers.defineClass(function() {},  Hashtable(Integer, CAdapiLocalMenu) {

		private static final long serialVersionUID = 3997312439574961005L;

		protected CAdapiListOfLocalMenus() {
			TODO_SUPER();
		}, addLocalMenu: function(aAdapiLocalMenu) {
			this.put(aAdapiLocalMenu.getNumId(), aAdapiLocalMenu);
		}

	}

	var CAdapiLocalMenu = helpers.defineClass(function() {}, null, {
		private static String MESS = "unknown choice=[%s] : menu [%s] has [%s] items";
		private String[] this.choices;
		private String this.id;
		private int this.numId;

		public CAdapiLocalMenu(aNumId, aId, String[] aChoices) {
			this.numId = aNumId;
			this.id = aId;
			this.choices = aChoices;
		}, getLib: function(aChoice) throws Exception {
			if (aChoice < 1 || aChoice > this.choices.length) {
				var wMess = CStringFacilities.sprintf(MESS, String.valueOf(aChoice), this.id, String.valueOf(this.choices.length));
				throw new Exception(wMess);
			}
			return this.choices[aChoice - 1]; // base 0 !
		}, getNumId: function() {
			return this.numId;
		}
	}

var CAdapiListOfLocalMenusFactory = helpers.defineClass(function() {}, null, {
	private static String ATT_NAM = "NAM";
	private static String ATT_NBZ = "NBZ";
	private static String TAG_MENL = "MENL";
	private static String TAG_V = "V";

	private static int extractIntLocalMenuId(aLocalMenuId) {
			aLocalMenuId = aLocalMenuId.substring(1);//pour enlever "M"
			return Integer.parseInt(aLocalMenuId);
	}

	private static CAdapiLocalMenu instanciateLocalMenu(aAdapiClient, aId, aLocalMenuID, aNbChoices, aLocalMenuNode) {
		var wLocalMenu;
		try {
			var wChoicesNodes = aLocalMenuNode.getElementsByTagName(TAG_V);
			var wChoiceNode;
			var wMax = wChoicesNodes.getLength();
			String[] wChoices = new String[wMax];
			var wI = 0;
			while (wI < wMax) {
				wChoiceNode = (Element) wChoicesNodes.item(wI);
				wChoices[wI] = CDomFacilities.getFirstTextValue(wChoiceNode);
				wI++;
			}
			wLocalMenu = new CAdapiLocalMenu(aId, aLocalMenuID, wChoices);
		} catch (e) {
			throw new CAdapiException(aAdapiClient, e, "CANT_ADD_LOCALMENU - instanciateLocalMenu");
		}
		return wLocalMenu;
	}

	protected static void instanciateLocalMenus(aAdapiRequesterWindow, aWindowDescription, aLocalMenus) {
		var wLocalMenusNodes = aWindowDescription.getElementsByTagName(TAG_MENL);
		var wMax = wLocalMenusNodes.getLength();
		var wI = 0;
		var wLocalMenuId;
		var wLocalMenuNode;
		int wNbChoices;
		while (wI < wMax) {
			wLocalMenuNode = (Element) wLocalMenusNodes.item(wI);
			wLocalMenuId = CDomFacilities.getAttributValue(wLocalMenuNode, ATT_NAM);
			wNbChoices = CDomFacilities.getAttributValueInt(wLocalMenuNode, ATT_NBZ);
			var wNumId = extractIntLocalMenuId(wLocalMenuId);
			if (aLocalMenus.get(wNumId) != null) {
				throw new CAdapiException(aAdapiRequesterWindow.getAdapiClient(), "CANT_ADD_LOCALMENU - AlreadyExist");
			}
			aLocalMenus.addLocalMenu(instanciateLocalMenu(aAdapiRequesterWindow.getAdapiClient(), wNumId, wLocalMenuId, wNbChoices, wLocalMenuNode));
			wI++;
		}
	}
}
