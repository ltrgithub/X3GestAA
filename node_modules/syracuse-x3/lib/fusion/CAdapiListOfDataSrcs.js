"use strict";
var helpers = require('syracuse-core/lib/helpers');
var CAdapiListOfEntity = require('syracuse-x3/lib/fusion/CAdapiListOfEntity').CAdapiListOfEntity;

var CAdapiListOfDataSrcs = exports.CAdapiListOfDataSrcs = helpers.defineClass(function(aAdapiRequesterWindow, aAdapiScreen) {
	CAdapiListOfEntity.call(this, aAdapiRequesterWindow);
	this.adapiScreen = aAdapiScreen;
}, CAdapiListOfEntity, {
	traverseAll: function(aTraverser) {
		var wMax = this.size();
		var wAdapiDataSrc;
		var wI = 0;
		while (wI < wMax) {
			wAdapiDataSrc = this.get(wI);
			if (aTraverser.doWhenTraverse(wAdapiDataSrc, wI) == true) {
				return true;
			}
			if (wAdapiDataSrc.traverseAll(aTraverser) == true) {
				return true;
			}
			wI++;
		}
		return false;
	},
	traverseChilds: function(aTraverser) {
		var wMax = this.size();
		var wEntry;
		var wI = 0;
		while (wI < wMax) {
			wEntry = this.get(wI);

			if (aTraverser.doWhenTraverse(wEntry, wI) == true) {
				return true;
			}
			wI++;
		}
		return false;
	},
	traverseSettable: function(aStructIst, aAdapiSetter) {
		var wI = aStructIst.blocZeroBase;
		if (wI < 0 || wI >= this.size()) {
			var wMess = this.adapiClient.adapiResources.getMessage(CAdapiResources.KEYMESS_ERROR_DSRC_UNKNOWN);
			wMess = CStringFacilities.sprintf(wMess, String.valueOf(wI), String.valueOf(this.size()), this.adapiScreen != null ? this.adapiScreen.getAdxId() : "???");
			aAdapiSetter.setLogicalErrMess(wMess);
			return false;
		}
		var wAdapiDataSrc = this.get(wI);
		return wAdapiDataSrc.traverseSettable(aStructIst, aAdapiSetter);
	}
});