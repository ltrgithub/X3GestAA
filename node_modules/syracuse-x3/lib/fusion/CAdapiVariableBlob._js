"use strict"; var helpers = require('syracuse-core/lib/helpers');

var CAdapiVariableBlob = helpers.defineClass(function() {}, CAdapiVariable, {
	protected final static String SVC_BLOB_ID = "Blob.svc";
	private CStructResu this.indirection = null;
	// TODO - Non utilisé - private String this.url;
	private int this.size;

	public CAdapiVariableBlob(srcLine, aEntityIndexBaseOne, aVarName, aID, aTdo, aSize, aFormat, aEntityState, aUrl) {
		TODO_SUPER(srcLine, aEntityIndexBaseOne, aVarName, aID, aTdo, aFormat, aEntityState);
		this.size = aSize;
		// TODO - Non utilisé - this.url = aUrl;
	}

	// Pas de format
	, acceptEditFormat: function() {
		return false;
	}, clone: function() {
		return null;
	}, controlBlobSize: function(aBlob) {
		var wMaxSize = 1024 * Math.pow(2, this.size) - 4;
		if (aBlob.size() > wMaxSize) {
			throw CAdapiException.newFmtException(getAdapiClient(), null, getAdapiClient().getAdapiResources().getMessage(CAdapiResources.KEYMESS_ERROR_UPLOAD_BLOB, String.valueOf(aBlob.size()), getId(), String.valueOf(wMaxSize), String.valueOf(this.size)));
		}
	}

	public , getBlob: function();

	, getDisplayValue: function() {
		return "/Fusion/Blob/TODO";// buildFullUrl();
	}, getIndirection: function() {
		return this.indirection;
	}, getSize: function() {
		return this.size;
	}, hasValueBlob: function() {
		return getServerValResu() != null && getServerValResu().hasBlobValue();
	}, setBrowserUnformatedValue: function(byte[] aBuffer) {
		this.setBrowserUnformatedValue(new CStructResu(getTracer(), CStructResu.X3TYP_BLOB, aBuffer));
	}, setBrowserUnformatedValue: function(aBrowserValue) {
		controlBlobSize(aBrowserValue.geBlobValue());
		TODO_SUPER.setBrowserUnformatedValue(aBrowserValue);
	}, setIndirection: function(i) {
		this.indirection = i;
	}

}
