"use strict";
var helpers = require('syracuse-core/lib/helpers');
var AdapiObservable = require('syracuse-x3/lib/fusion/AdapiObservable').AdapiObservable;

var CAdapiInstanceExeci = exports.CAdapiInstanceExeci = helpers.defineClass(function(xmlAck_call, client, ist) {
	AdapiObservable.call(this, client);
	this.instance = ist;
	this.xml = xmlAck_call;
	this.value = null;
	this.modeCommande = true;
	// En dernier
	setJsonType('TARGET');
}, AdapiObservable, {
	format: {
		get: function() {
			return this.instance == null ? "" : this.instance.format;
		}
	},
	getNl: function() {
		return 0;
	},
	getXid: function() {
		return this.instance == null ? "" : this.instance.ist.blocAlphaId.concat(this.instance.ist.fieldId);
	},
	hasFormat: function() {
		return this.instance == null ? false : this.instance.hasFormat();
	},
	setInstance: function(instance) {
		this.instance = instance;
	},
	setXml: function(xml) {
		this.xml = xml;
	},
	toJson: function() {
		var object = new JSONObject();
		object.put('type', 'rpc');
		var rpc = new JSONObject();
		rpc.put('xml', this.xml);
		object.put('rpc', rpc);
		var ist = new JSONObject();
		if (this.instance != null) {
			ist.put('xid', this.getXid());
			if (this.instance.hasFormat()) {
				ist.put('fmt', this.format);
			}
			ist.put('win', this.instance.ist.winAlphaId);
			ist.put('edit', true);
			rpc.put('ist', ist);
		}
		return object;
	}
});