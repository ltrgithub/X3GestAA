"use strict";
var helpers = require('syracuse-core/lib/helpers');
var CAdapiVariableLocalMenu = require('syracuse-x3/lib/fusion/CAdapiVariableLocalMenu').CAdapiVariableLocalMenu;

/**
 * Implementation du comportement d'une variable Adonix de type CkheckBox.
 * <p>
 * Le serveur Adonix gere les valeur Non/Oui via un menu local ou les codes
 * associ�s sont:
 * </p>
 * <ul>
 * <li>1 = Non</li>
 * <li>2 = Oui</li>
 * </ul>
 * <p>
 * La classe surcharge les m�thodes "setStreamValue" et "getStreamValue" de la
 * classe CAdapiVariable pour realiser les translations vers les valeurs
 * usuellement admise a savoir : 0 = Non, 1 = Oui.
 * </p>
 */

var VAR_X3_CHECK_OFF = "1";
var VAR_X3_CHECK_ON = "2";

var CAdapiVariableCheck = exports.CAdapiVariableCheck = helpers.defineClass(function(srcLine, aEntityIndexBaseOne, aVarName, aID, aTdo, aFormat, aEntityState, aLocalMenu) {
	CAdapiVariableLocalMenu.call(this, srcLine, aEntityIndexBaseOne, aVarName, aID, aTdo, aFormat, aEntityState, aLocalMenu);
}, CAdapiVariableLocalMenu, {
	clone: function() {
		var wVariable = new CAdapiVariableCheck(this.srcLine, this.entityIndexBaseOne, this.name, this.id, this.dataType, this.format, this.state, this.localMenu);
		wVariable.mustBeFormated = this.mustBeFormated;
		this.cloneValues(wVariable);
		return wVariable;
	},

	// 	        serveur   | adapi
	// 	------------------|----
	// 	non initialis�e 0 | 0
	// 	faux            1 | 0
	// 	vrai            2 | 1
	formatData: function(aValue) {
		return aValue;
	},
	getDisplayValue: function() {
		throw new Error("FIX isInteractiveSession -- from config")
		if (this.srcLine.client.isInteractiveSession()) {
			return this.formatData(this.getServerValStr());
		} else {
			if (isStateEditable()) {
				return this.formatData(this.getServerValStr());
			} else {
				return CAdapiVariableLocalMenu.prototype.getDisplayValue.call(this);
			}
		}
	},
	unFormatData: function(aValue) {
		return aValue;
	}
});