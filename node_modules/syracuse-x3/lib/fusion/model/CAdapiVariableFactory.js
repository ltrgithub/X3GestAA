"use strict";
var helpers = require('syracuse-core/lib/helpers');
var CAdapiFormat = require('syracuse-x3/lib/fusion/model/CAdapiFormat').CAdapiFormat;
var CAdapiVariableNum = require('syracuse-x3/lib/fusion/model/CAdapiVariableNum').CAdapiVariableNum;
var CAdapiVariableCheck = require('syracuse-x3/lib/fusion/model/CAdapiVariableCheck').CAdapiVariableCheck;
var CAdapiVariableRadio = require('syracuse-x3/lib/fusion/model/CAdapiVariableRadio').CAdapiVariableRadio;
var CAdapiVariableCombo = require('syracuse-x3/lib/fusion/model/CAdapiVariableCombo').CAdapiVariableCombo;
var CAdapiVariableRTF = require('syracuse-x3/lib/fusion/model/CAdapiVariableRTF').CAdapiVariableRTF;
var CAdapiVariableIMG = require('syracuse-x3/lib/fusion/model/CAdapiVariableIMG').CAdapiVariableIMG;
var CAdapiVariablePass = require('syracuse-x3/lib/fusion/model/CAdapiVariablePass').CAdapiVariablePass;
var CAdapiVariableIcone = require('syracuse-x3/lib/fusion/model/CAdapiVariableIcone').CAdapiVariableIcone;
var CAdapiVariableAlpha = require('syracuse-x3/lib/fusion/model/CAdapiVariableAlpha').CAdapiVariableAlpha;
var CAdapiVariablePeriod = require('syracuse-x3/lib/fusion/model/CAdapiVariablePeriod').CAdapiVariablePeriod;
var CAdapiVariableDate = require('syracuse-x3/lib/fusion/model/CAdapiVariableDate').CAdapiVariableDate;
var CAdapiEntity = require('syracuse-x3/lib/fusion/model/CAdapiEntity').CAdapiEntity;
var CStructResu = require('syracuse-x3/lib/fusion/types/CStructResu').CStructResu;


var VAR_TYPE_CHECK = 11;
var VAR_TYPE_ICONE = 29;
var VAR_TYPE_IMAGE = 17;
var VAR_TYPE_OFFICE = 33;
var VAR_TYPE_PASSWORD = 30;
var VAR_TYPE_RADIOGROUP = 9;
var VAR_TYPE_RICHEDIT = 8;

function extactType(aValue) {
	try {
		return parseInt(aValue.substring(0, aValue.indexOf(',')), 10);
	} catch (e) {
		return -1;
	}
}

function extractNbDecimalsFromSZ(aSZ) {
	var wPos = aSZ.indexOf('.');
	if (wPos > -1) {
		return parseInt(aSZ.substring(wPos + 1), 10);
	} else {
		return 0;
	}
}

function extractNbEntiersFromSZ(aSZ) {
	var wPos = aSZ.indexOf('.');
	if (wPos > -1) {
		return parseInt(aSZ.substring(0, wPos), 10);
	} else {
		return parseInt(aSZ, 10);
	}
}


exports.CAdapiVariableFactory = {
	instanciateLeftListColumn: function(aRequester, srcLine, aEntityIndexBaseOne, aVarId) {
		var wEF = CAdapiFormat.newEmptyFormat();

		var wVariable = new CAdapiVariableAlpha(srcLine, aEntityIndexBaseOne, aVarId, aVarId, CStructResu.TDO_ALPHA, wEF, CAdapiEntity.x3AffModeToEntityState(CAdapiEntity.X3VAR_MAF_SAISI));

		return wVariable;
	},

	instanciateVariable: function(aRequester, srcLine, aEntityIndexBaseOne, aId, aVariableNode, aForcedTDO) {
		var client = aRequester.client;
		var wVarId = aVariableNode.$.ID;
		var wVarName = aVariableNode.$.NAM;
		var wInputType = extactType(aVariableNode.$.TYP);
		var wDataType = aForcedTDO != 0 ? aForcedTDO : extactType(aVariableNode.$.TDO);
		var wSZ = aVariableNode.$.SZ;
		var wEntiers = extractNbEntiersFromSZ(wSZ);
		var wDecimals = extractNbDecimalsFromSZ(wSZ);
		var wVarSize = aForcedTDO != 0 ? 99 : wEntiers + wDecimals;
		var wFormatDef = aForcedTDO != 0 ? "" : aVariableNode.$.FMT;
		var wFormat = new CAdapiFormat(wFormatDef);
		var wEntityState = CAdapiEntity.x3AffModeToEntityState(extactType(aVariableNode.$.MAF));
		var wX3LocalMenu = null;
		var wConfig = client.clientConfig;
		var wVariable = null;
		switch (wDataType) {
			case CStructResu.TDO_SHORT:
			case CStructResu.TDO_INT:
			case CStructResu.TDO_BCD:
				wVariable = new CAdapiVariableNum(srcLine, aEntityIndexBaseOne, wVarName, wVarId, wDataType, wFormat, wEntityState);
				wVariable.setDecimal(wDecimals);
				break;
			case CStructResu.TDO_MENLOC:
				var wLocalMenuId = aVariableNode.$.MNU;
				wX3LocalMenu = aRequester.finLocalMenu(wLocalMenuId);
				if (wInputType == VAR_TYPE_CHECK) {
					wVariable = new CAdapiVariableCheck(srcLine, aEntityIndexBaseOne, wVarName, wVarId, wDataType, wFormat, wEntityState, wX3LocalMenu);
				} else if (wInputType == VAR_TYPE_RADIOGROUP) {
					wVariable = new CAdapiVariableRadio(srcLine, aEntityIndexBaseOne, wVarName, wVarId, wDataType, wFormat, wEntityState, wX3LocalMenu);
				} else {
					wVariable = new CAdapiVariableCombo(srcLine, aEntityIndexBaseOne, wVarName, wVarId, wDataType, wFormat, wEntityState, wX3LocalMenu);
				}
				break;
			case CStructResu.TDO_ALPHA:
				if (wInputType == VAR_TYPE_RICHEDIT) {
					wVariable = new CAdapiVariableRTF(srcLine, aEntityIndexBaseOne, wVarName, wVarId, wDataType, wFormat, wEntityState);
				} else if (wInputType == VAR_TYPE_IMAGE) {
					wVariable = new CAdapiVariableIMG(srcLine, aEntityIndexBaseOne, wVarName, wVarId, wDataType, wVarSize, wFormat, wEntityState);
				} else if (wInputType == VAR_TYPE_PASSWORD) {
					wVariable = new CAdapiVariablePass(srcLine, aEntityIndexBaseOne, wVarName, wVarId, wDataType, wFormat, wEntityState);
				} else if (wInputType == VAR_TYPE_ICONE) {
					wVariable = new CAdapiVariableIcone(srcLine, aEntityIndexBaseOne, wVarName, wVarId, wDataType, wFormat, wEntityState);
				} else {
					wVariable = new CAdapiVariableAlpha(srcLine, aEntityIndexBaseOne, wVarName, wVarId, wDataType, wFormat, wEntityState);
				}
				break;
			case CStructResu.TDO_DATE:
				var wLocalformat = wConfig.dateFormat;
				var wDatePivot = wConfig.datePivot;
				wFormat = this.valiDateFormat(client, wConfig, wFormat);
				if (aVariableNode.$.DAI != null) {
					wVariable = new CAdapiVariablePeriod(srcLine, aEntityIndexBaseOne, wVarName, wVarId, wDataType, wFormat, wEntityState, wLocalformat, wDatePivot);
				} else {

					wVariable = new CAdapiVariableDate(srcLine, aEntityIndexBaseOne, wVarName, wVarId, wDataType, wFormat, wEntityState, wLocalformat, wDatePivot);
				}
				break;
			case CStructResu.TDO_CLOB:
				wVariable = new CAdapiVariableRTF(srcLine, aEntityIndexBaseOne, wVarName, wVarId, wDataType, wFormat, wEntityState);
				break;
			case CStructResu.TDO_BLOB:
				if (wInputType == VAR_TYPE_OFFICE) {
					console.log("Office blob are ignored in fusion client");
				} else {
					wVariable = new CAdapiVariableIMG(srcLine, aEntityIndexBaseOne, wVarName, wVarId, wDataType, wVarSize, wFormat, wEntityState);
				}
				break;
			default:
				wVariable = new CAdapiVariableAlpha(srcLine, aEntityIndexBaseOne, wVarName, wVarId, wDataType, wFormat, wEntityState);
				break;
		}
		wVariable.mustBeFormatted = wConfig.isInteractiveSession && aForcedTDO == 0;
		if (aVariableNode.$.STX != null) {
			wVariable.setStyleFromDescr(aVariableNode.$.STX);
		}
		return wVariable;
	},

	valiDateFormat: function(aClient, aConfig, aFormat) {
		if (!aFormat.isValid()) {
			aFormat = new CAdapiFormat(this.valiServerDateFormatDef(aConfig.serverDateFormat));
		} else if (!aFormat.hasFormatChars()) {
			aFormat.setFormatChars(aConfig.serverDateFormat);
		}
		return aFormat;
	},

	valiServerDateFormatDef: function(aFormatDef) {
		if (aFormatDef == null) {
			aFormatDef = "";
		} else if (aFormatDef.indexOf(':') < 0) {
			aFormatDef = "DZz:" + aFormatDef;
		}
		return aFormatDef;
	}
}