"use strict";
var helpers = require('syracuse-core/lib/helpers');

var AdapiStatusIcon = exports.AdapiStatusIcon = helpers.defineClass(function(aImgId, aActionId, aVisible) {
	this.imgId = aImgId;
	this.actionId = aActionId;
	this.visible = aVisible;
}, null, {
	toJson: function() {
		// this.actionId = 0 pour les icone supprimÃ©s
		var ico = [];
		ico.push(this.visible ? this.actionId : 0);
		ico.push(this.imgId);
		return ico;
	},
	update: function(aActionId, aVisible) {
		this.actionId = aActionId;
		this.visible = aVisible;
	}
});

var AdapiStatusBar = exports.AdapiStatusBar = helpers.defineClass(function() {
	this.iconsList = {};
	this.text = [];

}, null, {
	addIconDef: function(aNumtext, aText, aImgId, aActionId) {
		if (aImgId == 0) {
			setText(aNumtext, aText);
		} else {
			var wVisible = aImgId > 0;
			if (!wVisible) {
				aImgId = aImgId * -1;
			}
			var key = new Integer(aImgId);
			var wStatusIcon = this.iconsList[key];
			if (wStatusIcon == null) {
				this.iconsList[key] = new AdapiStatusIcon(aImgId, aActionId, wVisible);
			} else {
				wStatusIcon.update(aActionId, wVisible);
			}
		}
	},
	setText: function(aNumText, aText) {
		if (aNumText < 1 || aNumText > 2) {
			aNumText = 1; // protection
		}
		if (aText != null && aText.length > 0) {
			this.text[aNumText - 1] = aText;
		} else {
			this.text[aNumText - 1] = null;
		}
	},
	toJson: function() {
		var statusbar = {};
		var text = [];
		for (var t in this.text) {
			if (t == null) {
				text.push("");
			} else {
				text.push(t);
			}
		}
		if (text.length !== 0) {
			statusbar.t = text;
		}
		var ico = [];
		for (var item in Object.keys(this.iconsList)) {
			ico.push(this.iconsList[item].toJson());
		}
		if (ico.length !== 0) {
			statusbar.ico = ico;
		}
		return statusbar;
	}
});