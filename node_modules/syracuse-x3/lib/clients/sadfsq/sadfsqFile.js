"use strict";

var helpers = require('@sage/syracuse-core').helpers;
var locale = require('streamline-locale');

exports.SadFsqFile = helpers.defineClass(function(options) {
	this.path = options.path ? decodeURIComponent(options.path).replace(/\\/g, "/") : null;
	this.name = options.name ? decodeURIComponent(options.name) : null;
	this.extension = options.extension ? options.extension : null;
	this.folder = options.folder ? options.folder : null;
	this.volume = options.volume ? options.volume.replace(/\\/g, "/") : null;
	this.server = options.server ? options.server : null;
	this.canonical = options.canonical ? decodeURIComponent(options.canonical) : null;
	if (options && options.describer) {
		var idx = options.describer.indexOf(",");
		if (idx !== -1) {
			if (idx === 0) throw new Error(locale.format(module, "noCanonical"));

			options.describer.split(',').map(function(item, i) {
				switch (i) {
					case 0:
						this.path = item.replace("\\", "/");
						break;
					case 1:
						this.name = item;
						break;
					case 2:
						this.extension = item;
						break;
					case 3:
						this.folder = item;
						break;
					case 4:
						this.volume = item.replace("\\", "/");
						break;
					case 5:
						this.server = item;
						break;
					default:
						throw new Error(locale.format(module, "tooManyPart"));
				}
			});
		} else {
			var lastIdxSep = options.describer.lastIndexOf('\\');
			if (lastIdxSep === -1) lastIdxSep = options.describer.lastIndexOf('/');
			if (lastIdxSep !== -1) {
				this.path = options.describer.substring(0, lastIdxSep).replace("\\", "/");
				this.name = options.describer.substring(lastIdxSep + 1);
				// get extension
				var spl = this.name.split('.');
				this.extension = spl.length > 1 ? spl[1] : null;
				this.name = spl[0];
			}
		}
	}

	// calcul canonicalName if necessaire
	if (!this.canonical) {
		this.canonical = "";
		if (this.server) {
			this.canonical += this.server;
			this.canonical += "@";
		} else {
			this.canonical += "@";
			if (this.folder) {
				this.canonical += this.folder + ".";
			}
		}
		if (this.volume) {
			this.canonical += this.volume;
		}
		if (this.path) {
			if (!this.path.indexOf('!')) {
				this.canonical += this.path.substring(1);
			} else {
				this.canonical += this.path;
			}
		}
		if (this.canonical.charAt(this.canonical.length - 1) !== '/') this.canonical += "/";
		if (this.name) this.canonical += this.name;
		if (this.extension) this.canonical += (this.name ? '$' : '.') + this.extension;

	}


}, null, {});