"use strict";
var helpers = require('syracuse-core/lib/helpers');
var commonClient = require('syracuse-x3/lib/clients/common/commonClient');
var AdxWhatComm = require('syracuse-x3/lib/clients/adxwhat/adxwhatComm').AdxWhatComm;
var config = require('config');



var AdxWhatClient = helpers.defineClass(function(_, hostname, port, user, password, secured, recOptions) {
	var options = {
		CommClass: AdxWhatComm,
		recOptions: recOptions,
		config: config.x3adxwhat
	};
	commonClient.CommonClient.call(this, _, options, hostname, port, user, password, secured);
}, commonClient.CommonClient, {
	env: function(_, infoId) {
		this.__connect(_, true);
		return this.communicator.processAsk(_, infoId);
	},
});

/// !doc
/// 
/// # AdxWhat Client  
/// AdxWhat is provided to retrieve environment variables from AdxAdmin server.  
/// The module is using adxwhat protocol layer implemented in [AdxWhatComm](./adxwhatComm.md).  
/// To use this module do require('syracuse-x3/lib/clients/adxwhat/adxwhatClient').  
/// And then, call the `env` function asynchronously to get the remote environment variable corresponding to `infoId`.  
/// 
/// ``` javascript
/// var adxwhat = require('syracuse-x3/lib/clients/adxwhat/adxwhatClient');
/// var myvar = adxwhat.env(_, connexion, infoId);
/// ```
/// 
/// * `connexion` is an object that contains connexion credentials :  
///    * `server` is the hostname of the adxadmin server.  
///    * `port` is the port on adxadmin is listenning.  
///    * `user` is the system user to use for the connection.  
///    * `password` is the password corresponding to the user.  
///    * `secure` is boolean that define if the connection is secured by user/password.  
/// * * `infoId` is the name of the remote environment variable.  
/// 
exports.env = function(_, connexion, infoId, recOptions) {
	var cli = new AdxWhatClient(_, connexion.hostname, connexion.port, connexion.user, connexion.password, connexion.secured, recOptions);
	return cli.env(_, infoId);
};