"use strict";
var helpers = require('syracuse-core/lib/helpers');
var CvgInstance = require('syracuse-x3/lib/convergence/model/CvgInstance').CvgInstance;
var CvgEntity = require('syracuse-x3/lib/convergence/model/CvgEntity').CvgEntity;
var CvgMenuWin = require('syracuse-x3/lib/convergence/model/CvgMenuWin').CvgMenuWin;
var CvgWinMenuList = require('syracuse-x3/lib/convergence/model/CvgMenuWin').CvgWinMenuList;
var CvgStackedWindows = require('syracuse-x3/lib/convergence/model/CvgStackedWindows').CvgStackedWindows;
var CvgVariable = require('syracuse-x3/lib/convergence/model/CvgVariable').CvgVariable;
var CvgDiagnose = require('syracuse-x3/lib/convergence/model/CvgDiagnose');

/**
 * Structure publique de reponse a une requete fournie a l'application cliente.
 * */
var CvgReply = helpers.defineClass(function(client, actionId) {
	this.actionId = actionId;
	this.client = client;
	this.poppedWindows = null;
	this.pushedWindows = null;
	this.winMenus = null;
	this.stayInCommandMode = false;
	this.status = 1;
}, null, {
	setTargetAdxId: function(ist, request) {
		var target = this.client.findModifiable(ist);
		if (target == null) {
			throw new Error("Target entity not found[" + ist.toString() + "]");
		}
		if (!(target instanceof CvgEntity)) {
			throw new Error("Bad target class [" + ist.toString() + "] - CvgEntity expected");
		}
		var isVar = target instanceof CvgVariable;
		if (request != null) {
			var instance, fmt = null,
				fmtValue = null,
				srvValue = null;
			try {
				instance = CvgInstance.newtarget(this.client, ist, fmt, fmtValue, this.stayInCommandMode);
				if (isVar) {
					instance.rawValue = target.getServerValStr();
				}
			} catch (e) {
				CvgDiagnose.create(this.client, 'WARNING', 98, "setTargetAdxId error", "", e, "Reply", null, true);
				instance = CvgInstance.newtarget(this.client, ist, fmt, srvValue, this.stayInCommandMode);
			}
			if (ist.isLeftListIst() && request.lefListLineSelected !== -1) {
				instance.nl = request.lefListLineSelected + 1;
			}
		} else {
			throw new Error("setTargetAdxId - Null request [" + ist.toString() + "]");
		}
	},
	addMenuWin: function(flag, actionId, label, menuId, rank, adxId, accelerateur) {
		if (this.winMenus == null) {
			this.winMenus = new CvgWinMenuList();
		}
		var winMenu = menuId === 307 || this.winMenus.containsMenu(menuId);
		var menu = new CvgMenuWin(this.client, actionId, flag, label, menuId, rank, adxId, accelerateur, !winMenu);
		if (winMenu) {
			this.winMenus.addMenu(menu);
		}
	},
	addPoppedWindow: function(aRequesterWindow) {
		if (this.poppedWindows == null) {
			this.poppedWindows = new CvgStackedWindows();
		}
		this.poppedWindows.push(aRequesterWindow);
	},
	addPushedWindow: function(aRequesterWindow) {
		if (this.pushedWindows == null) {
			this.pushedWindows = new CvgStackedWindows();
		}
		this.pushedWindows.push(aRequesterWindow);
		aRequesterWindow.setMenuList(this.winMenus);
		this.winMenus = null;
	}
});

exports.CvgReply = CvgReply;