"use strict";
var helpers = require('syracuse-core').helpers;
var CvgObservable = require('syracuse-x3/lib/convergence/model/CvgObservable').CvgObservable;

var CvgMessageObersable = exports.CvgMessageObersable = helpers.defineClass(function(message, client) {
	CvgObservable.call(this, client);
	this.message = message;
	this.jsonType = 'TARGET'; // mess superviseur/X3
	this.forceChange();
}, CvgObservable, {
	toJSON: function() {
		var target = {};
		target.type = "box";
		var box = {};

		box.type = this.message.type;
		box.def = this.message.chx;
		// box.put("to",get());
		box.tit = this.message.title;
		var li = [];
		li.push(this.message.message);
		box.li = li;
		box.to = this.message.sleep;
		target.box = box;
		if (this.message.btnsL) {
			try {
				box.btnsL = JSON.parse(this.message.btnsL);
			} catch (e) {}
		}
		return target;
	}

});

var ABORT = 99;
var WEBSERVER = 98;
var CvgMessage = exports.CvgMessage = helpers.defineClass(function(aType, aAction, aMessage, aTitle, aDefBtn, aSleep, aChx, clientObs, notify) {
	var split;
	this.action = aAction;
	if (aTitle && (split = aTitle.indexOf(String.fromCharCode(7)))) {
		// We have to use customized labels for buttons
		this.btnsL = aTitle.substr(0, split++);
		this.title = aTitle.substr(split);
	} else {
		this.title = aTitle;
	}
	this.message = aMessage;
	this.defBtn = aDefBtn;
	this.sleep = aSleep;
	this.chx = aChx;
	this.type = aType;
	this.replyAuto = aType === ABORT || aType === WEBSERVER ? true : false;
	if (clientObs != null && (notify == null || notify)) {
		new CvgMessageObersable(this, clientObs);
	}
}, null, {
	clone: function() {
		return new CvgMessage(this.typ, this.action, this.mess, this.title, this.btn, this.sleep, this.chx, this.clientObs);
	},
	traverseChilds: function(aTraverser) {
		return false;
	}
});