"use strict";
var helpers = require('syracuse-core/lib/helpers');
var CvgObservable = require('syracuse-x3/lib/convergence/model/CvgObservable').CvgObservable;

/**
 * Implementation d'une demande de service interactif
 *
 * AskPutFile <ask UIAask="AskPutFile" UILocalPath="#MyDocuments"
 * UILocalFileExts="xls" UILocalTimeStamp=">20040630" xCONNECTNUM="12354" />
 *
 * AskSelFile <ask UIAask="AskSelFile" UILocalPath="#MyDocuments"
 * UILocalFileExts="doc" UILocalTimeStamp=">20031231" xCONNECTNUM="12354" />
 *
 * AskReadTexFile <ask UIAask="AskReadTexFile" UILocalFileExts="txt"
 * xCONNECTNUM="12354" />
 *
 * AskExecShell <ask UIAask="AskExecShell"
 * UILocalShell=" AdxOfficeModule.hta cmd xlsinsert input 'TMP/data.csv'"
 * xDATAURL="/adxwebdata/GAILE610/GX3APP/" xCONNECTNUM="12354" />
 *
 * AskGetFile <ask UIAask="AskGetFile" UIRemoteBinary="0"
 * UILocalPath="#MyDocuments" UILocalFileName="200406.etebac"
 * xCONNECTNUM="12354" xTECHFILEID="YUKJRFGHSI"/>
 *
 *
 * @author Adonix Grenoble
 * @version 141
 */
var CvgAskUiAction = exports.CvgAskUiAction = helpers.defineClass(function(client, properties) {
	this._ask = {
		"$statement": null,
		"$parameters": {}
	};
	if (properties) {
		this._ask.$statement = properties.UIAsk;
		delete properties.UIAsk;
		var key;
		for (key in properties) {
			this._ask.$parameters[key] = properties[key];
		}
	}
	CvgObservable.call(this, client);
	this.setJsonType('TARGET');
}, CvgObservable, {
	toJSON: function() {
		return {
			type: "askui",
			askui: this._ask
		};
	}
});