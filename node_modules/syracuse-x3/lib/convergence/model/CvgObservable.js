"use strict";
var helpers = require('syracuse-core/lib/helpers');
var util = require('util');
var CvgClient = require('syracuse-x3/lib/convergence/client/CvgClient').CvgClient;
var CvgEntity = require('syracuse-x3/lib/convergence/model/CvgEntity').CvgEntity;
var counter = 0;

var CvgObservable = exports.CvgObservable = helpers.defineClass(function(client) {
	this.client = client;
	this.tracked = false;
	this.jsonType = null;
}, null, {
	compareTo: function(o) {
		return this.getObservableId().compareTo(o.getObservableId());
	},
	forceChange: function() {

		if (this.tracked) return;
		if (this.jsonType) {
			this.client && this.client.track(this); // this.client is null on prototype
			this.tracked = true;
		}
	},
	getObservableId: function() {
		return this.jsonType + (++counter);
	},
	razModification: function() {
		this.tracked = false;
	},
	setJsonType: function(aType) {
		this.jsonType = aType;
		this.forceChange();
	},
	// Used by CvgDiagnose to filter messages sent to client
	sendToClient: function(trackList, o) {
		return true;
	}
});