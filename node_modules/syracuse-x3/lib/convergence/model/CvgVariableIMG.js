"use strict";
var helpers = require('syracuse-core/lib/helpers');
var CvgVariableBlob = require('syracuse-x3/lib/convergence/model/CvgVariableBlob').CvgVariableBlob;
var CvgVariable = require('syracuse-x3/lib/convergence/model/CvgVariable').CvgVariable;
var CvgResu = require('syracuse-x3/lib/convergence/types/CvgResu').CvgResu;
var CvgResuTdo = require('syracuse-x3/lib/convergence/types/CvgResu').TDO;
var CvgEntity = require('syracuse-x3/lib/convergence/model/CvgEntity').CvgEntity;

/*
 * image png "2 pixels x 2 pixel transparent"
 */
var IMG_NO_IMAGE = [ //
	0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A, //
	0x00, 0x00, 0x00, 0x0D, 0x49, 0x48, 0x44, 0x52, //
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, //
	0x01, 0x03, 0x00, 0x00, 0x00, 0x48, 0x78, 0x9F, //
	0x67, 0x00, 0x00, 0x00, 0x06, 0x50, 0x4C, 0x54, //
	0x45, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xA5, //
	0xD9, 0x9F, 0xDD, 0x00, 0x00, 0x00, 0x02, 0x74, //
	0x52, 0x4E, 0x53, 0xFF, 0x00, 0xE5, 0xB7, 0x30, //
	0x4A, 0x00, 0x00, 0x00, 0x0C, 0x49, 0x44, 0x41, //
	0x54, 0x78, 0xDA, 0x63, 0x38, 0xC0, 0x70, 0x00, //
	0x00, 0x03, 0x04, 0x01, 0x81, 0x2A, 0xE5, 0x6E, //
	0x5A, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4E, //
	0x44, 0xAE, 0x42, 0x60, 0x82
];

var CvgVariableIMG = exports.CvgVariableIMG = helpers.defineClass(function(srcLine, aEntityIndexBaseOne, aVarName, aID, aTdo, aSize, aFormat, aEntityState) {
	CvgVariableBlob.call(this, srcLine, aEntityIndexBaseOne, aVarName, aID, aTdo, aSize, aFormat, aEntityState);
}, CvgVariableBlob, {
	clone: function() {
		var wVariable = new CvgVariableIMG(this.srcLine, this.entityIndexBaseOne, this.name, this.id, this.dataType, this.size, this.format, this.state);
		wVariable.mustBeFormatted = this.mustBeFormatted;
		if (this.indirection != null) {
			wVariable.setIndirection(this.indirection.clone());
		}
		this.cloneValues(wVariable);
		return wVariable;
	},
	setServerValue: function(aResu) {
		if (aResu.isNull() || aResu.value.length === 0) {
			//aResu = new CvgResu(CvgResuTdo["BLOB"], new Buffer(IMG_NO_IMAGE, 'hex'));
			aResu = new CvgResu(CvgResuTdo.NULL, null);
		}
		var uuid = this.srcLine.dataSrc.screen.requesterWindow.entityIdxAlpha + this.srcLine.dataSrc.screen.entityIdxAlpha + this.id;
		if (aResu.value) {
			this.uuid = uuid;
			try {
				this.client.services.blobSvc.register(this.uuid, new Buffer(aResu.value, 'binary'), "image");
			} catch (e) {
				// get current window 
				this.client.sendNotify(this.getAdxIst(), 1, e.message);
			}
		} else {
			this.uuid = "";
			this.client.services.blobSvc.unregister(uuid);
		}
		CvgVariable.prototype.setServerValue.call(this, aResu);
	},

});