"use strict";
var helpers = require('syracuse-core/lib/helpers');
var CvgObservable = require('syracuse-x3/lib/convergence/model/CvgObservable').CvgObservable;

var CvgReportSubmitted = exports.CvgReportSubmitted = helpers.defineClass(function(client, properties, error) {
	CvgObservable.call(this, client);
	
	this.host = properties.host;
	this.trackId = properties.trackId;
	this.title = properties.title;
	this.rank = properties.rank;
	this.mime = properties.mime;
	this.error = error;
	
	this.kind = "submitted";
	this.setJsonType('REPORT');
}, CvgObservable, {

	toJSON: function() {
		var res = {
	        uuid: this.trackId,
	        title: this.title,
            $location: "/print/{$host}/{$service}('{$uuid}')",
            services: {
               getState: {
                  $service: "$getState",
                  $uuid: this.trackId,
                  $host: this.host
               },
               cancel: {
                  $service: "$cancel",
                  $uuid: this.rank,
                  $host: this.host
               },
            },
            facet: "$viewer"
		}
		if (this.mime) {
			res.mime = this.mime;
		}
		if (this.error) {
	        res.$diagnoses = [{
	          severity: "error",
	          message: this.error.message,
	          stackTrace: this.error.stack
	        }];
		}else {
	        res.$diagnoses = [{
	          severity: "info",
	          message: "Request considered"
	        }];
	        if (!res.mime) {
	        	res.$diagnoses.push({
	        		severity: "info",
	        		message: "Unknow format"
	        	});
			}
		}
		return res;
	},
	
});

var CvgReportPending = exports.CvgReportPending = helpers.defineClass(function(client) {
	CvgObservable.call(this, client);
	this.kind = "pending";
	this.setJsonType('REPORT');
}, CvgObservable, {

	toJSON: function() {

	},
	
});

var CvgReportDone = exports.CvgReportDone = helpers.defineClass(function(client) {
	CvgObservable.call(this, client);
	this.kind = "done";
	this.setJsonType('REPORT');
}, CvgObservable, {

	toJSON: function() {
		
	},
	
});