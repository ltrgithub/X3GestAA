"use strict";
var CvgFormat = require('./CvgFormat').CvgFormat;
var CvgVariableNum = require('./CvgVariableNum').CvgVariableNum;
var CvgVariableCheck = require('./CvgVariableCheck').CvgVariableCheck;
var CvgVariableRadio = require('./CvgVariableRadio').CvgVariableRadio;
var CvgVariableCombo = require('./CvgVariableCombo').CvgVariableCombo;
var CvgVariableRTF = require('./CvgVariableRTF').CvgVariableRTF;
var CvgVariableIMG = require('./CvgVariableIMG').CvgVariableIMG;
var CvgVariableBlob = require('./CvgVariableBlob').CvgVariableBlob;
var CvgVariablePass = require('./CvgVariablePass').CvgVariablePass;
var CvgVariableIcone = require('./CvgVariableIcone').CvgVariableIcone;
var CvgVariableAlpha = require('./CvgVariableAlpha').CvgVariableAlpha;
var CvgVariablePeriod = require('./CvgVariablePeriod').CvgVariablePeriod;
var CvgVariableDate = require('./CvgVariableDate').CvgVariableDate;
var CvgEntity = require('./CvgEntity').CvgEntity;
var CvgResuTdo = require('../types/CvgResu').TDO;

var tracerStd = require('@sage/syracuse-core').getTracer("classic.std");

var VAR_TYPE_CHECK = 11;
var VAR_TYPE_ICONE = 29;
var VAR_TYPE_IMAGE = 17;
var VAR_TYPE_OFFICE = 33;
var VAR_TYPE_PASSWORD = 30;
var VAR_TYPE_RADIOGROUP = 9;
var VAR_TYPE_RICHEDIT = 8;

function extractType(aValue) {
	var typ = parseInt(aValue.substring(0, aValue.indexOf(',')), 10);
	return isNaN(typ) ? -1 : typ;
}

function extractNbDecimalsFromSZ(aSZ) {
	var wPos = aSZ.indexOf('.');
	if (wPos > -1) {
		return parseInt(aSZ.substring(wPos + 1), 10);
	} else {
		return 0;
	}
}

function extractNbIntsFromSZ(aSZ) {
	var wPos = aSZ.indexOf('.');
	if (wPos > -1) {
		return parseInt(aSZ.substring(0, wPos), 10);
	} else {
		return parseInt(aSZ, 10);
	}
}

exports.CvgVariableFactory = {
	instanciateLeftListColumn: function(aRequester, srcLine, aEntityIndexBaseOne, aVarId) {
		return new CvgVariableAlpha(srcLine, aEntityIndexBaseOne, aVarId, aVarId, CvgResuTdo.STRU, new CvgFormat(""), CvgEntity.x3AffModeToEntityState(CvgEntity.X3VAR_MAF_SAISI), aRequester);
	},

	instanciateVariable: function(aRequester, srcLine, aEntityIndexBaseOne, aId, aVariableNode, aForcedTDO) {
		var client = aRequester.client;
		var wVarId = aVariableNode.$.ID;
		var wVarName = aVariableNode.$.NAM;
		var wGty = aVariableNode.$.GTY;
		var wInputType = extractType(aVariableNode.$.TYP);
		var wDataType = aForcedTDO !== 0 ? aForcedTDO : extractType(aVariableNode.$.TDO);
		var wSZ = aVariableNode.$.SZ;
		var wInts = extractNbIntsFromSZ(wSZ);
		var wDecimals = extractNbDecimalsFromSZ(wSZ);
		var wVarSize = aForcedTDO !== 0 ? 99 : wInts + wDecimals;
		var wFormatDef = aForcedTDO !== 0 ? "" : aVariableNode.$.FMT;
		var wFormat = new CvgFormat(wFormatDef);
		var wEntityState = CvgEntity.x3AffModeToEntityState(extractType(aVariableNode.$.MAF));
		var wX3LocalMenu = null;
		var wConfig = client.clientConfig;
		var wVariable = null;
		switch (wDataType) {
			case CvgResuTdo.SHORT:
			case CvgResuTdo.INT:
			case CvgResuTdo.DCB:
				wVariable = new CvgVariableNum(srcLine, aEntityIndexBaseOne, wVarName, wVarId, wDataType, wFormat, wEntityState, aRequester);
				break;
			case CvgResuTdo.LIB:
				var wLocalMenuId = parseInt(aVariableNode.$.MNU, 10);
				wX3LocalMenu = aRequester.finLocalMenu(wLocalMenuId);
				if (wInputType === VAR_TYPE_CHECK) {
					wVariable = new CvgVariableCheck(srcLine, aEntityIndexBaseOne, wVarName, wVarId, wDataType, wFormat, wEntityState, wX3LocalMenu, aRequester);
				} else if (wInputType === VAR_TYPE_RADIOGROUP) {
					wVariable = new CvgVariableRadio(srcLine, aEntityIndexBaseOne, wVarName, wVarId, wDataType, wFormat, wEntityState, wX3LocalMenu, aRequester);
				} else {
					wVariable = new CvgVariableCombo(srcLine, aEntityIndexBaseOne, wVarName, wVarId, wDataType, wFormat, wEntityState, wX3LocalMenu, aRequester);
				}
				break;
			case CvgResuTdo.STRU:
				if (wInputType === VAR_TYPE_RICHEDIT) {
					wVariable = new CvgVariableRTF(srcLine, aEntityIndexBaseOne, wVarName, wVarId, wDataType, wFormat, wEntityState, aRequester);
				} else if (wInputType === VAR_TYPE_IMAGE) {
					wVariable = new CvgVariableIMG(srcLine, aEntityIndexBaseOne, wVarName, wVarId, wDataType, wVarSize, wFormat, wEntityState, aRequester);
				} else if (wInputType === VAR_TYPE_PASSWORD) {
					wVariable = new CvgVariablePass(srcLine, aEntityIndexBaseOne, wVarName, wVarId, wDataType, wFormat, wEntityState, aRequester);
				} else if (wInputType === VAR_TYPE_ICONE) {
					wVariable = new CvgVariableIcone(srcLine, aEntityIndexBaseOne, wVarName, wVarId, wDataType, wFormat, wEntityState, aRequester);
				} else {
					wVariable = new CvgVariableAlpha(srcLine, aEntityIndexBaseOne, wVarName, wVarId, wDataType, wFormat, wEntityState, aRequester);
				}
				break;
			case CvgResuTdo.DATE:
				if (aVariableNode.$.DAI != null) {
					wVariable = new CvgVariablePeriod(srcLine, aEntityIndexBaseOne, wVarName, wVarId, wDataType, wFormat, wEntityState, aRequester);
				} else {
					wVariable = new CvgVariableDate(srcLine, aEntityIndexBaseOne, wVarName, wVarId, wDataType, wFormat, wEntityState, aRequester);
				}
				break;
			case CvgResuTdo.CLOB:
				wVariable = new CvgVariableRTF(srcLine, aEntityIndexBaseOne, wVarName, wVarId, wDataType, wFormat, wEntityState, aRequester);
				break;
			case CvgResuTdo.BLOB:
				if (wInputType === VAR_TYPE_OFFICE) {
					tracerStd.warn && tracerStd.warn((new Date().toISOString()) + " Office blob are ignored in fusion client");
					wVariable = new CvgVariableBlob(srcLine, aEntityIndexBaseOne, wVarName, wVarId, wDataType, wVarSize, wFormat, wEntityState, aRequester);
				} else {
					wVariable = new CvgVariableIMG(srcLine, aEntityIndexBaseOne, wVarName, wVarId, wDataType, wVarSize, wFormat, wEntityState, aRequester);
				}
				break;
			default:
				wVariable = new CvgVariableAlpha(srcLine, aEntityIndexBaseOne, wVarName, wVarId, wDataType, wFormat, wEntityState, aRequester);
				break;
		}
		wVariable.mustBeFormatted = aForcedTDO === 0;
		if (aVariableNode.$.STX != null) {
			wVariable.setStyleFromDescr(aVariableNode.$.STX);
		}
		if (wGty && wGty === "12") {
			wVariable.isBo = true;
			client.boClient.variable = wVariable;
		}
		return wVariable;
	}
};