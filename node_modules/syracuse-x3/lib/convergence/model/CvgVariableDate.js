"use strict";
var helpers = require('syracuse-core/lib/helpers');
var CvgVariable = require('syracuse-x3/lib/convergence/model/CvgVariable').CvgVariable;
var CvgResu = require('syracuse-x3/lib/convergence/types/CvgResu').CvgResu;
var CvgDate = require('syracuse-x3/lib/convergence/types/CvgDate').CvgDate;

var FORMAT_JJMM = 5;
var FORMAT_JJMMAA = 1;
var FORMAT_JJMMSSAA = 2;
var FORMAT_LOCAL_JJMMSSAA = 1;
var FORMAT_LOCAL_MMJJSSAA = 2;
var FORMAT_LOCAL_SSAAMMJJ = 0;
var FORMAT_MMAA = 6;
var FORMAT_MMSSAA = 7;
var NO_FORMAT_LOCAL = -1;
var SEP_SLASH = '/';
var SEP_TIRET = '-';

/*
 				var client = this.client;
				var wConfig = client.clientConfig;
				var wFormat = new CvgFormat("");
				var wLocalformat = wConfig.dateFormat;
				var wDatePivot = wConfig.datePivot;
				wFormat = CvgVariableFactory.valiDateFormat(client, wConfig, wFormat);
				
				wFormat = this.valiDateFormat(client, wConfig, wFormat);
 */

setFormatChars: function() { 
	var wSB = "";

	var wOptions = this.getFormatOptions();
	if (wOptions != null)
		wSB += wOptions;

	wSB += ':';
	wSB += aFormatChars;

	this.format = wSB;
},
hasFormatChars: function() { 
	return this.getFormatChars() != null;
},
getFormatChars: function() {
	var wFormatChars = null;
	if (this.isValid()) {
		var wPos = this.format.indexOf(":");
		if (wPos > -1 && wPos < this.format.length - 1) {
			wFormatChars = this.format.substring(wPos + 1);
		}
	}
	return wFormatChars;
},

function valiDateFormat(aClient, aConfig, aFormat) {
	if (!aFormat.isValid()) {
		aFormat = new CvgFormat(this.valiServerDateFormatDef(aConfig.serverDateFormat));
	} else if (!aFormat.hasFormatChars()) {
		aFormat.setFormatChars(aConfig.serverDateFormat);
	}
	return aFormat;
},

function valiServerDateFormatDef(aFormatDef) {
	if (aFormatDef == null) {
		aFormatDef = "";
	} else if (aFormatDef.indexOf(':') < 0) {
		aFormatDef = "DZz:" + aFormatDef;
	}
	return aFormatDef;
}
function checkFormat(cli, fmt){
	if (fmt==null || !fmt.isValid()){
		var f="DZ:";
		
		
	}
	return fmt;
}

var CvgVariableDate = exports.CvgVariableDate = helpers.defineClass(function(srcLine, entityIdx, name, aID, aTdo, fmt, state) {
	CvgVariable.call(this, srcLine, entityIdx, name, aID, aTdo, checkFormat(srcLine.client,fmt), state);
}, CvgVariable, {
	clone: function() {
		var wVariable = new CvgVariableDate(this.srcLine, this.entityIndexBaseOne, this.name, this.id, this.dataType, this.format, this.state);
		wVariable.mustBeFormatted = this.mustBeFormatted;
		this.cloneValues(wVariable);
		return wVariable;
	},
	formatX3ToDisplay: function(aData) {
		if (!this.mustBeFormatted)  return aData.value;
		if (aData.value == null || aData.value.length==0 || aData.isDateNull())  return "";
		if (aData.value.length !== 8) {
			this.client.addLogicalErrorMess(this, "callFormater", this.getAdxId(), this.fmtExcepMsg('ERROR_FORMAT_EXCEPTION', 'FORMAT_RTOS', aData.value, "NOT AN ADONIX_DATE YYYYMMDD"));
			return aData.value + " ???";
		}
		return this.callFormater(aData.value);
	},
	formatEditToDisplay: function(aValue) {
		return aValue === "" ? "" : CvgVariable.prototype.formatEditToDisplay.call(this, aValue);
	},
	formatX3ToEdit: function() {
		if (this.serverValue != null && this.serverValue.value =="") return "";
		return CvgVariable.prototype.formatX3ToEdit.call(this);
	},
	initLocalFormatAndSep: function(aLocalFormatAndSep) {
		this.localFormatAndSep = aLocalFormatAndSep;
		if (aLocalFormatAndSep > 0) {
			var wKindFormat = aLocalFormatAndSep / 10;
			if (wKindFormat === 0) {
				this.localFormat = FORMAT_LOCAL_MMJJSSAA;
			} else if (wKindFormat === 1) {
				this.localFormat = FORMAT_LOCAL_JJMMSSAA;
			} else if (wKindFormat === 2) {
				this.localFormat = FORMAT_LOCAL_SSAAMMJJ;
			}
			var wKindSep = aLocalFormatAndSep % 10;
			if (wKindSep === 1) {
				this.localSep = SEP_SLASH;
			} else if (wKindSep === 2) {
				this.localSep = SEP_TIRET;
			}
		}
	},
	setServerResu: function(resu) {
		if (resu != null && CvgDate.DATE_ZERO === resu.value)  resu = null;
		CvgVariable.prototype.setServerResu.call(this,resu);
	},
	unFormatData: function(aValue) {
		if (!this.mustBeFormatted) return aValue;
		if (aValue == null) return null;
		if (aValue.length === 0) return aValue;
		aValue = this.callUnFormater(aValue);
		if (CvgResu.DATE_ZERO === aValue)  aValue = "";
		return aValue;
	}
});
