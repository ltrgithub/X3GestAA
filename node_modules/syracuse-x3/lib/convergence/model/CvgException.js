"use strict";
var helpers = require('syracuse-core/lib/helpers');
var CvgDiagnose = require('syracuse-x3/lib/convergence/model/CvgDiagnose').CvgDiagnose;

var CustomException = helpers.defineClass(function(client, e, message) {
	Error.call(this);
	Error.captureStackTrace(this, this); //super helper method to include stack trace in error object
	this.name = 'Custom Exception'; //set our function’s name as error name.
	// Error could be a strings, number...
	if (e && typeof e !="object") e = {message:e.toString()};
	this.message = e && e.message ?  e.message : (message ? message : ""); //set the error message
	this.inner = e;
	
	
}, Error, {
});
	
var CvgException = exports.CvgException = helpers.defineClass(function(client, e, message, recoveryCode, origin) {
	CustomException.call(this, client, e, message);
	this.name = 'CvgException'; //set our function’s name as error name.
	// Create diagnose exception (not tracked by the client !!)
	this.diagnose = new CvgDiagnose(client, 'ERROR', 500, message || this.message, e && e.stack ? e.stack : null, this, origin, recoveryCode || 'KILL', false)
}, CustomException, {
});
