"use strict";
var helpers = require('syracuse-core/lib/helpers');
var CvgObservable = require('syracuse-x3/lib/convergence/model/CvgObservable').CvgObservable;
var CvgEntity = require('syracuse-x3/lib/convergence/model/CvgEntity').CvgEntity;
var CvgScreenDummy = require('syracuse-x3/lib/convergence/model/CvgListOfScreens').CvgScreenDummy;
var CvgVariable = require('syracuse-x3/lib/convergence/model/CvgVariable').CvgVariable;
var CvgIst = require('syracuse-x3/lib/convergence/types/CvgIst').CvgIst;

var CvgPluginTarget = exports.CvgPluginTarget = helpers.defineClass(function(cli, plug) {
	CvgObservable.call(this, cli);

	this.plugin = plug;
	this.setJsonType('TARGET');
}, CvgObservable, {

	toJSON: function() {
		if (this.tracked) {
			var plug = {
				"class": this.plugin.class && this.plugin.class.toUpperCase(),
				name: this.plugin.name,
				type: this.plugin.type,
				id: this.plugin.method === "New" ? null : this.plugin.id,
				module: this.plugin.module,
				method: this.plugin.method.toLowerCase(),
				methodId: this.plugin.methodid
			};
			if (this.client.isPlugin && this.plugin.download) {
				plug.download = this.plugin.download;
			}
			if (this.client.isPlugin && this.plugin.upload) {
				plug.upload = this.plugin.upload;
			}
			if (plug.method === "new") {
				//add cookie session
				plug.cookieSess = this.client.syraSessionCookie;
			}

			return {
				type: "plugin",
				plugin: plug
			};
		} else {
			return null;
		}
	}
});
CvgPluginTarget.create = function(client, plugin) {
	return new CvgPluginTarget(client, plugin);
};