"use strict";
var helpers = require('syracuse-core/lib/helpers');
var CvgObservable = require('syracuse-x3/lib/convergence/model/CvgObservable').CvgObservable;
var CvgEntity = require('syracuse-x3/lib/convergence/model/CvgEntity').CvgEntity;
var CvgScreenDummy = require('syracuse-x3/lib/convergence/model/CvgListOfScreens').CvgScreenDummy;
var CvgVariable = require('syracuse-x3/lib/convergence/model/CvgVariable').CvgVariable;
var CvgIst = require('syracuse-x3/lib/convergence/types/CvgIst').CvgIst;

var CvgPluginTarget = exports.CvgPluginTarget = helpers.defineClass(function(cli, action, type, id, module) {
	CvgObservable.call(this, cli);
	switch (action) {
		case '1':
			this.name = "gant";
			this.method = "new";
			break;
		case '3':
			this.name = "gant";
			this.method = "delete";

			break;
		case '6':
			this.name = "scale";
			this.method = "new";

			break;
		case '8':
			this.name = "scale";
			this.method = "delete";
			break;
	}
	this.type = type;
	this.id = id;
	this.module = module;


	this.setJsonType('TARGET');
}, CvgObservable, {

	toJSON: function() {
		var plug = {
			name: this.name,
			type: this.type,
			id: this.id,
			module: this.module,
			method: this.method
		};

		return {
			plugin: plug
		};
	}
});
CvgPluginTarget.create = function(cli, name, type, id, module, method) {
	return new CvgPluginTarget(cli, name, type, id, module, method);
};