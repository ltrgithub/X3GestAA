"use strict";
var helpers = require('syracuse-core/lib/helpers');
var CvgVariable = require('syracuse-x3/lib/convergence/model/CvgVariable').CvgVariable;

var CvgVariableLocalMenu = exports.CvgVariableLocalMenu = helpers.defineClass(function(srcLine, aEntityIndexBaseOne, aVarName, aID, aTdo, aFormat, aEntityState, aLocalMenu) {
	CvgVariable.call(this, srcLine, aEntityIndexBaseOne, aVarName, aID, aTdo, aFormat, aEntityState);
	this.localMenu = aLocalMenu;
}, CvgVariable, {
	// True si la valeur formatee a du sens - false pour tout ce qui herite de menu car format non applique
	acceptEditFormat: function() {
		return false;
	},

	//abstract clone: function();
	// Fusion - Pas de format
	formatEditToDisplay: function(aValue) {
		return aValue;
	},
	getDisplayValue: function() {
		var val = this.serverValue;

		try {
			if (val == null) {
				return "";
			}
			if (this.localMenu == null) {
				throw new Error("no local menu available.");
			}
			if (val.isNum()) {
				if (val.value > 0) {
					return this.localMenu.getLib(val.value);
				} else {
					return "";
				}
			} else {
				return val.value;
			}
		} catch (e) {
			throw e; // for now
			console.error(e);
			return "";
		}
	},
	getValueForJson: function() {
		if (this.getServerValInt() == -999) {
			return this.getServerValStr();
		} else {
			return this.getServerValInt();
		}
	}
});