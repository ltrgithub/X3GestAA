"use strict";
var helpers = require('syracuse-core/lib/helpers');
var CvgObservable = require('syracuse-x3/lib/convergence/model/CvgObservable').CvgObservable;

var _log=true;
var CvgDiagnose = exports.CvgDiagnose = helpers.defineClass(function(client, severity, appCode, message, details, error, origin, recovery, track) {
	CvgObservable.call(this, client);
	this.severity = severity;
	this.appCode = appCode;
	this.message = message;
	this.error = error;
	this.origin = origin;
	this.details = details;
	this.recovery = recovery;
	// En dernier
	if (track)
		this.setJsonType('DIAGNOSE');
	
}, CvgObservable, {

	toJSON: function() {
		var diag = {
			message: this.message,
			severity: this.severity || 'ERROR',
			appCode: this.appCode || 500,
			$origin: "NodeJS: Convergence Server" + (this.origin ? (": "+this.origin) : ""),
			
		}
		if (this.details)
			diag.$details = this.details;
		
		if (this.error) {
			diag.$diagnoses = [{
				message: this.error.message,
				stackTrace: this.error.stack
	        }];
		}
		
        if (this.recovery) {
        	diag.$recoveryCode = this.recovery;
        }
        
		diag.$links = [{
           title: "Sage ERP X3 support web site",
           $url: "http://www.sage.com/support"
        }];
		return diag;
	},
	// Filter same diagnoses - send only one (ex: bad format in lists)
	sendToClient:function(trackList){
		if (trackList==null) return true;
		for (var i=0;i<trackList.length;i++){
			var d=trackList[i];
			if (d.message==this.message && d.details==this.details && d.origin==this.origin){
				if (d.error==null && this.error==null || (d.error!=null && this.error!=null && d.error.message!=null && this.error.message!=null)){
					return false;		 	
				}
			}
		}	
		if(_log) console.log("CvgDiagnose -> " + this.message +  (this.error ? "\n\t" + this.error.message : "")  +  (this.details ? "\n\t" + this.details : ""));
		return true;
	}

});