#<AdxTL>@(#)0.0.0.0 $Revision$
End

#**
#* Funprog HANDLER_GET()
#*!
Funprog HANDLER_GET(ACTX,ASWK,ARCV,PSYR,ASND)
Variable Instance ACTX Using =[V]CST_C_NAME_CLASS_CONTEXT
Variable Instance ASWK(1..) Using C_ASYRWRK
Variable Instance ARCV Using C_ASYRRCV
Variable Instance PSYR Using C_ASYR
Variable Instance ASND Using C_ASYRSND

Local Integer   ERROR : ERROR = [V]CST_AOK
ERROR = func  DET(ACTX,PSYR,ARCV,ASND,PSYR.CODREP,PSYR.CODFAC,PSYR.SELREP)
End ERROR

#------------------------------------------------------------#
# Request detail management (GET with a key)
#------------------------------------------------------------#
#------------------------------------------------------------------#
Funprog DET(ACTX,PSYR,ARCV,ASND,REPRES,TYPREP,KEYS)
Variable Instance ACTX Using =[V]CST_C_NAME_CLASS_CONTEXT
Variable Instance PSYR Using C_ASYR
Variable Instance ARCV Using C_ASYRRCV
Variable Instance ASND Using C_ASYRSND
Value    Char     REPRES , TYPREP , KEYS

Local Integer   ERROR : ERROR = [V]CST_AOK


Local Integer I , J , NUMLIN
Local Char    PRGREP(30)
Local Char    REPNAM(20)
Local Uuident UIDINS
Local Integer ASTAERR

Raz ASND.DATA

REPNAM = "DET"

#----------------------------#
# Define data Instance
#----------------------------#

Local Instance DET Using C_AREPENT : # Representation containing metadatas

#--------------------------------------------------#
# Load json presentation (metadata & data)
#--------------------------------------------------#
PRGREP = func SUBASW.PREFIX_TRT+REPRES : # WMREP

Call DESCRIPTION_REPRESENTATION(DET,REPNAM) From =PRGREP
If TYPREP = "$details"  & (dim(DET.AENAFAC)>0 & DET.AENAFAC(1)>=1 & DET.AENAFAC(1)<>2 ) or TYPREP = "$summary" & (dim(DET.AENAFAC)>0 & DET.AENAFAC(5)>=1 & DET.AENAFAC(5)<>2)
 ERROR = func ASYRSUB._ASETSTATUS(ACTX,"",0,[V]CST_AERROR,[V]CST_AHTTP_CONFLICT,func ASYRFNC.MES2(mess(14,149,1),PSYR.CODFAC,PSYR.CODREP))
 Goto EOF_DET_CONFLICT
Endif

DET.FCT = TYPREP

# Create instance representation
Local Instance WDET Using ="R_"+DET.REP
WDET = evalue ("Newinstance R_"+DET.REP+ " AllocGroup null")

# Load parameters
Call SET_REP_PARAMETERS(WDET,ARCV) From ASYRMAIN
# CCL
If DET.REP="SQUOTE"
 Local Char DETAILETAG(250),ETAG(250)
 Local File SQUOTE [__S]
 Read [__S]SQH0 = KEYS
 If !fstat
  If [__S]UPDDATTIM<>AVOID.ADATTIM
   DETAILETAG = num$([__S]UPDDATTIM)
  Else
   DETAILETAG = num$([__S]CREDATTIM)
  Endif
 Endif
 Close Local File [__S]

 ASND.HEADERCOD(1) = "ETag"
 ASND.HEADERVAL(1) = DETAILETAG

 ETAG = func ASYRMAIN.HEADVAL(ARCV,"If-None-Match")
 If ETAG <> ""
  If ETAG =DETAILETAG
   ERROR = func ASYRSUB._ASETSTATUS(ACTX,"",0,[V]CST_AERROR,[V]CST_AHTTP_NO_MODIFIED,"VVVVV")
   #ASND.STAT = 304
   ##ERROR = 1/0
   ERROR = [V]CST_AERROR
   End ERROR
  Endif
 Endif
Endif

# Load data (Read from CRUD)

Call _AREADSUP(WDET,KEYS,ERROR) From =func ACLAVALCRUD.GET_PREFIX_REP_READ+DET.REP
ASTAERR= fmet WDET._AERROR(ACTX,2)

If ERROR>[V]CST_AOK
 Goto EOF_DET
Endif

#------------------------------------------#
# JSON generation
#------------------------------------------#
Call DETAIL_JSON(DET,WDET,PSYR,ASND.DATA) From ASYRDATEDT


#------------------------------------------#
# Prepare response (OK)
#------------------------------------------#
ASND.URL            = PSYR.PREFIX+'/'+DET.CLA+"('"+KEYS+"')"
ASND.CONTTYPE = PSYR.CNTPRE+"."+nomap+"."+REPRES+"."+TYPREP

$EOF_DET
FreeGroup WDET

# Called before instanciating WDET
$EOF_DET_CONFLICT
FreeInstance [DET]
End ERROR
