"use strict";

/* jshint -W079 */
///* jshint unused: false */
/* global QUnit: false, ok: false, asyncTest: false, test: false, strictEqual: false, start: false */

var nodeconfig = require('syracuse-main/lib/nodeconfig').config;
var SadFsqClient = require('syracuse-x3/lib/clients/sadfsq/sadfsqClient').SadFsqClient;

var done;
QUnit.module(module.id, {
	setup: function() {},
	teardown: function() {
		if (done) {
			setTimeout(function() {
				process.kill(process.pid);
			}, 500);
		}
	}
});

var sadfs;
asyncTest("connect and create a folder and a file in server", function(_) {
	console.log("create client and connect");
	sadfs = new SadFsqClient(_, "ecvmdev2003x64", 1818, "Sagefr\\apisu", "Sage-2010", true);

	var output = sadfs.mkdir(_, {
		path: "C:\\APTEST"
	});

	console.log("mkdir : " + output);
	output = sadfs.readdir(_, {
		path: "C:\\"
	});
	console.log("ls dir " + JSON.stringify(output, null, 2));
	console.log("create file");
	var fd = sadfs.open(_, {
		path: "C:\\APTEST\\testdemo.txt"
	}, "w");
	sadfs.close(_, fd);
	var info = sadfs.stat(_, {
		path: "C:\\APTEST\\testdemo.txt"
	});
	console.log("info " + JSON.stringify(info, null, 2));
	start();
});

asyncTest("open remote created file and write something and close file", function(_) {

	var fd = sadfs.open(_, {
		path: "C:\\APTEST\\testdemo.txt"
	}, "r+");
	var buff = new Buffer("i write something my file", "utf-8");
	console.log("write in file : " + buff.toString('utf-8'));

	sadfs.write(_, fd, buff, 0, buff.length);
	sadfs.close(_, fd);

	console.log("append in file : i append information in my file");

	sadfs.appendFile(_, {
		path: "C:\\APTEST\\testdemo.txt"
	}, "i append information in my file");

	console.log("truncate the 5 first bytes");

	sadfs.truncate(_, {
		path: "C:\\APTEST\\testdemo.txt"
	}, 5);

	start();
});


asyncTest("read file", function(_) {
	var str = sadfs.readFile(_, {
		path: "C:\\APTEST\\testdemo.txt"
	});

	console.log("read :" + str);
	start();
});

asyncTest("remove remote file and remote directory ", function(_) {
	console.log("unlink file");
	sadfs.unlink(_, {
		path: "C:\\APTEST\\testdemo.txt"
	});
	console.log("remove folder");
	var output = sadfs.rmdir(_, {
		path: "C:\\APTEST"
	});
	console.log("rmdir : " + output);
	start();
});

asyncTest("disconnect", function(_) {
	sadfs.disconnect(_);
	start();
});

test("kill", function() {
	done = true;
	start();
});