"use strict";
// JavaScript Document
var module = QUnit.module;
var assert = require("assert");
var dataModel = require("syracuse-orm/lib/dataModel");
var x3Helper = require("syracuse-x3/test/fixtures/x3Helper");
var config = require('config'); // must be first syracuse require

var tracer; // = console.log;
var doStop = false;

module(config.unit_test.x3endpoint.folder + ".x3Search", {
	setup: function() {},
	teardown: function() {
		if (doStop) {
			setTimeout(function() {
				process.kill(process.pid);
			}, 100);
		}
	}
});


if (!config.unit_test || !config.unit_test.x3endpoint || !config.unit_test.run || !config.unit_test.run.x3Search) {
	return test('X3 SEARCH UNIT TESTS DISABLED FOR NOW', 1, function() {
		ok(true, "work in progress");
	});
}

asyncTest("start", function(_) {
	if (config.unit_test.x3endpoint.serverPort != config.unit_test.x3endpoint.localPort) {
		ok(x3Helper.initDatabase(_), "syracuse mongodb database initialized");
		x3Helper.initialize(_);
		ok(x3Helper.createObjects(_), "createObjects");
	} else {
		ok(true, "start");
	}
	start();
});

var cookie = null;

function _getCookie(_) {
	cookie = cookie || x3Helper.getCookie(_);
	return cookie;
}

//******************************************************************************

function _checkSearch(_, _representation) {
	try {
		var prototype = x3Helper.get(_, _getCookie(_), x3Helper.x3Url("$prototypes('" + _representation + ".$search')"), 200);
		tracer && tracer("prototype=", prototype);
		ok(true, "JSON prototype");
		var data = x3Helper.get(_, _getCookie(_), x3Helper.x3Url(prototype.$url.replace("{$baseUrl}/", "")), 200);
		ok(true, "JSON data");

	} catch (e) {
		ok(false, e);
		return test;
	}
}

// asyncTest("RIGHTS", function(_) {
// 	var data = x3Helper.get(_, _getCookie(_), x3Helper.x3Url("ARIGHTS(%27" + config.unit_test.QLF.user + "%27)/$services/$rights"), 200);
// 	//ok("RIGHTS"   ,JSON.stringify(data));
// 	ok(data.$accessCodes, "$accessCodes");
// 	ok(data.$authorizedFunctions, "$authorizedFunctions");
// 	start();
// });

asyncTest("ABANK", 4, function(_) {
	_checkSearch(_, "ABANK");
	start();
});

asyncTest("ADOPAR", 4, function(_) {
	_checkSearch(_, "ADOPAR");
	start();
});

asyncTest("AOBJET", 4, function(_) {
	_checkSearch(_, "AOBJET");
	start();
});

asyncTest("PARSTA1", 4, function(_) {
	_checkSearch(_, "PARSTA1");
	start();
});
asyncTest("PARSTA2", 4, function(_) {
	_checkSearch(_, "PARSTA2");
	start();
});
asyncTest("TABCOEFF", 4, function(_) {
	_checkSearch(_, "TABCOEFF");
	start();
});
asyncTest("TABCOUNTRY", 4, function(_) {
	_checkSearch(_, "TABCOUNTRY");
	start();
});
asyncTest("TABCUR", 4, function(_) {
	_checkSearch(_, "TABCUR");
	start();
});
asyncTest("TABFOR", 4, function(_) {
	_checkSearch(_, "TABFOR");
	start();
});
asyncTest("TABUNIT", 4, function(_) {
	_checkSearch(_, "TABUNIT");
	start();
});


//******************************************************************************
asyncTest("stop server", 0, function(_) {
	if (config.unit_test.x3endpoint.serverPort != config.unit_test.x3endpoint.localPort) {
		x3Helper.stopServer();
	}
	start();
});

asyncTest("stop  tests", 0, function(_) {
	doStop = true;
	start();
});