"use strict";
var module = QUnit.module;
var assert = require("assert");
var config = require('syracuse-main/lib/nodeconfig').config; // must be first syracuse require
var dataModel = require("syracuse-orm/lib/dataModel");
var x3Helper = require("syracuse-x3/test/fixtures/x3Helper");
var helpers = require("syracuse-core/lib/helpers");

var tracer = console.log;
var doStop = false;

module(config.QLF.folder + ".x3Batch", {
	setup: function() {},
	teardown: function() {
		if (doStop) {
			setTimeout(function() {
				process.kill(process.pid);
			}, 100);
		}
	}
});

asyncTest("start", function(_) {
	ok(x3Helper.initDatabase(_), "syracuse mongodb database initialized");

	x3Helper.initialize(_, function(_) {
		ok(x3Helper.createObjects(_), "createObjects");
		start();
	});
});

var cookie = null;

function _getCookie(_) {
	cookie = cookie || x3Helper.getCookie(_);
	//!ok("cookie"   ,"cookie"   +JSON.stringify(cookie));
	return cookie;
}

var Batch = function(_code) {
	this.code = _code;
	this.batch = {};
	this.batch.$url = x3Helper.x3Url(_code + "/$batch?representation=" + _code + ".$edit");
	this.batch.$resources = [];

	this.delete = function(_, _key) {
		var _resource = {};
		_resource.$httpMethod = "DELETE";
		_resource.$key = _key;
		_resource.$url = "{$baseUrl}/" + this.code + "('" + _key + "')?representation=" + this.code + ".$edit";
		this.batch.$resources.push(_resource);
	};

	this.create = function(_, _resource) {
		_resource.$httpMethod = "POST";
		_resource.$url = x3Helper.x3Url(this.code + "?representation=" + this.code + ".$edit");
		this.batch.$resources.push(_resource);
	};

	this.update = function(_, _resource, _key) {
		_resource.$httpMethod = "PUT";
		_resource.$httpifMatch = 1;
		_resource.$baseUrl = "/sdata/x3/erp/" + config.QLF.dataset;
		_resource.$prototype = "{$baseUrl}/$prototype('{$representation}.$thumb')";
		_resource.$representation = this.code;
		_resource.$url = "{$baseUrl}/" + this.code + "('" + _key + "')?representation=" + this.code + ".$edit";
		_resource.$type = "application/json;vnd.sage=syracuse";
		_resource.$etag = 1;
		_resource.$actions = {
			"$save": {
				"$isHidden": false,
				"$isDisabled": false,
				"$links": {
					"$query": {
						"$isHidden": false
					},
					"$details": {
						"$isHidden": false
					},
					"$edit": {
						"$isHidden": false
					}
				}
			},
			"$abort": {
				"$isHidden": false,
				"$isDisabled": false,
				"$links": {
					"$query": {
						"$isHidden": false
					},
					"$details": {
						"$isHidden": false
					}
				}
			}
		};

		this.batch.$resources.push(_resource);
		/*dbg*/
		//ok(true,"DBG batch:"+JSON.stringify(this.batch));
	};

	this.get = function(_, _param) {
		var _resource = {};
		_resource.$httpMethod = "GET";
		_resource.$url = x3Helper.x3Url(this.code + "?representation=" + this.code + ".$query");
		if (typeof(_param) == 'string') {
			_resource.$url += "?" + _param;
		}
		this.batch.$resources.push(_resource);
	};

	this.post = function(_) {
		/*dbg*/
		ok(true, "DBG post:" + JSON.stringify(this.batch));
		var response = x3Helper.post(_, _getCookie(_), this.batch.$url, this.batch, 200);
		/*dbg*/
		ok(true, "DBG response:" + JSON.stringify(response));
		return response;
	};
};

var Representation = function(_repName) {
	this.repName = _repName;
	this.uuid = helpers.uuid.generate();

	this.read = function(_, _key) {
		// Get the $details prototype :
		this.proDetails = x3Helper.get(_, _getCookie(_), x3Helper.x3Url("$prototypes('" + this.repName + ".$details')"), 200);
		/*dbg*/
		//ok(true,this.repName+".$details prototype");

		var data = x3Helper.get(_, _getCookie(_), x3Helper.x3Url(this.repName + "(%27" + _key + "%27)?representation=" + this.repName + ".$details"), 200);
		/*dbg*/
		//ok(true,this.repName+".$details data"); 
		/*dbg*/
		//console.log("*** data:",data);
		/*dbg*/
		//ok(true,"DBG read:"+JSON.stringify(data));
		return data;
	};
};

/*******************************************************************************
 testIssue1475 :  
*******************************************************************************/
function testIssue1475(_) {
	asyncTest("AQCQRY02 Create OK" + x3Helper.gitHubIssue(1475), function(_) {
		var data = {
			"FIELD01": 200,
			"FIELD02": 2001
		};
		var batch = new Batch("AQCQRY02");
		batch.delete(_, data.FIELD01);
		batch.create(_, data);
		batch.post(_);

		var representation = new Representation("AQCQRY02");
		var response = representation.read(_, data.FIELD01);
		strictEqual(data.FIELD01, response.FIELD01, "FIELD01=" + data.FIELD01);
		strictEqual(data.FIELD02, response.FIELD02, "FIELD02=" + data.FIELD02);
		start();
	});

	asyncTest("AQCQRY02 CRUD OK" + x3Helper.gitHubIssue(1475), function(_) {
		var data1 = {
			"FIELD01": 201,
			"FIELD02": 2011
		};
		var batch = new Batch("AQCQRY02");
		batch.delete(_, data1.FIELD01);
		batch.create(_, data1);
		var data2 = {
			"FIELD01": 201,
			"FIELD02": 2011
		};
		data2.FIELD02 = 2012;
		batch.update(_, data2, data2.FIELD01);
		batch.post(_);

		var representation = new Representation("AQCQRY02");
		var response = representation.read(_, data2.FIELD01);
		strictEqual(data2.FIELD01, response.FIELD01, "FIELD01=" + data2.FIELD01);
		strictEqual(data2.FIELD02, response.FIELD02, "FIELD02=" + data2.FIELD02);
		start();
	});

	asyncTest("AQCQRY02 GET", function(_) {
		var batch = new Batch("AQCQRY02");
		batch.get(_);
		batch.post(_);
		start();
	});
}

/*******************************************************************************
 testIssue1704 :  
*******************************************************************************/
function testIssue1704(_) {
	asyncTest("AQCQRY02 Delete" + x3Helper.gitHubIssue(1704), function(_) {
		var batch = new Batch("AQCQRY02");
		var data = {
			"FIELD01": 123,
			"FIELD02": 2001
		};
		batch.delete(_, data.FIELD01);
		var response = batch.post(_);
		/*dbg*/
		strictEqual(404, response.$resources[0].$httpStatus, "$httpStatus:" + response.$resources[0].$httpStatus);
		start();
	});

}

/*******************************************************************************
 testAUTILIS :  
*******************************************************************************/
function testAUTILIS(_) {
	asyncTest("AUTILIS GET", function(_) {
		var prototype = x3Helper.get(_, _getCookie(_), x3Helper.x3Url("$prototypes('AUTILIS.$query')"), 200);
		var proUrl = x3Helper.x3Url(prototype.$properties.$resources.$item.$properties.AUSPIC.$url.replace("{$baseUrl}/", ""));
		/*dbg*/
		ok(true, "DBG proUrl:" + proUrl);

		var batch = new Batch("AUTILIS");
		batch.get(_, "count=20");
		var response = batch.post(_);
		/*dbg*/
		ok(true, "DBG response.$resources[0].$resources.length:" + response.$resources[0].$resources.length);
		for (var i = 0; i < response.$resources[0].$resources.length; i++) {
			//!ok(true,"DBG USR:"+response.$resources[0].$resources[i].USR);
			var imgUrl = proUrl.replace("{USR}", response.$resources[0].$resources[i].USR);
			ok(true, "DBG imgUrl:" + imgUrl);
			var image = x3Helper.getImage(_, _getCookie(_), imgUrl, 200);

		}
		start();
	});
}

testIssue1475(_);
testIssue1704(_);
//!testAUTILIS(_);

//******************************************************************************

asyncTest("stop server", 0, function(_) {
	x3Helper.stopServer();
	start();
});
asyncTest("stop  tests", 0, function(_) {
	doStop = true;
	start();
});
// JavaScript Document