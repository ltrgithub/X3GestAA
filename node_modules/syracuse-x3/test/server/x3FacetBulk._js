// JavaScript Document
"use strict";

var module 		= QUnit.module;
var assert 		= require("assert" );
var dataModel 	= require("syracuse-orm/lib/dataModel");
var registry   	= require("syracuse-sdata/lib/sdataRegistry");
var x3Helper   	= require("syracuse-x3/test/fixtures/x3Helper");

//
var tracer = console.log;

var config = require('syracuse-main/lib/nodeconfig').config; // must be first syracuse require
//force basic auth
config.session = config.session || {};
config.session.auth = "basic";
config.QLF = config.QLF || {
    dataset    : "x3_unit_test",
    user       : "qlf",
    folder     : "SUPERV",
    serverHost : "sodaix02",
    serverPort : 17001
  };

var port           = 3004;
var baseUrl        = "http://localhost:" + port

var doStop = false;
module("x3PrototypesTest", {
	setup: function() {},
	teardown: function() {
		if (doStop) {
			setTimeout(function() {
				process.kill(process.pid);
			}, 100)
		}
	}
});

asyncTest("start", function(_) {
	ok(x3Helper.initDatabase(_),"syracuse mongodb database initialized");

	x3Helper.initialize(_,function(_) {
		ok(x3Helper.createObjects(_),"createObjects");
		start();
	});
});


//******************************************************************************

function checkJSON(_,_representation){
  var cookie = x3Helper.getCookie(_, "admin", "admin");
  var name = _representation + ".$bulk";
  try {
    console.log("**** URL:","/sdata/x3/erp/"+config.QLF.dataset+"/"+_representation+"?representation=" + _representation+ ".$bulk");
  	var prototype = x3Helper.get(_, cookie, baseUrl + "/sdata/x3/erp/"+config.QLF.dataset+"/"+_representation+"?representation=" + _representation+ ".$bulk", 200);
    console.log("prototype=",prototype);
    strictEqual(true,true,"The JSON of "+ _representation + ".$bulk is well formed");
   } catch (e) {
    strictEqual(true,false,"The JSON of "+ _representation + ".$bulk isn't well formed");
    return test;
  }   
}

asyncTest("AUTILIS    JSON",3, function(_) {checkJSON(_,"AUTILIS") ;  start(); });


//******************************************************************************

asyncTest("stop server", 0, function(_) {
	x3Helper.stopServer();
	start();
});
asyncTest("stop  tests", 0, function(_) {
	doStop = true;
	start();
});