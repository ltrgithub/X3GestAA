"use strict";
var locale = require('syracuse-core/lib/locale');
var CvgClient = require('syracuse-x3/lib/convergence/client/CvgClient').CvgClient;
var CvgSession = require('syracuse-x3/lib/cvgSession');
var mongodb = require('streamline-mongodb');
var CvgIst = require('syracuse-x3/lib/convergence/types/CvgIst').CvgIst;
var x3helpers = require('syracuse-x3/lib/helpers');
var helpers = require('syracuse-core/lib/helpers');
var x3writer = require("syracuse-x3/lib/convergence/automata/x3writer");
var config = require('config'); // must be first syracuse require
var CvgClientWS = require("syracuse-x3/lib/clients/soap/CvgClientWS").CvgClientWS;
var adminHelper = require("syracuse-collaboration/lib/helpers").AdminHelper;

var adminTestFixtures = require("syracuse-collaboration/test/fixtures/adminTestFixtures");
var dataModel = require("syracuse-orm/lib/dataModel");
var registry = require("syracuse-sdata/lib/sdataRegistry");
var jsonImport = require("syracuse-import/lib/jsonImport");
var globals = require('streamline/lib/globals');

var flows = require("streamline/lib/util/flows");
var localConfig = x3helpers.config("x3fusion", null, {});
var done;

QUnit.module(module.id, {
	setup: function() {},
	teardown: function() {
		if (done) {
			setTimeout(function() {
				process.kill(process.pid);
			}, 500);
		}
	}
});
var context = {
	endpoint: function(_) {
		return adminHelper.getEndpoint(_, {
			jsonWhere: {
				dataset: "SUPERV"
			}
		});
	},
	request: {
		session: {
			host: "http://localhost:8124"
		}
	},
	httpSession: {
		getData: function(param) {
			return {};
		}
	},
	baseUrl: "http://localhost:8124"
};



asyncTest("Ws Classic Soap Client -  connect / disconnect ", function(_) {
	// get user

	var cli = new CvgClientWS(_, context.endpoint(_), "admin", "fr-FR", context);
	start();
});

asyncTest("Ws Classic Soap Client -  call sub program", function(_) {

	start();
});

asyncTest("Ws Classic Soap Client -  call technical sub program", function(_) {

	start();
});


asyncTest("Ws Classic Soap Client -  call sub program and manage error", function(_) {

	start();
});


test("kill", function() {
	done = true;
	start();
});