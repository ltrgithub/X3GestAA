"use strict";

const entityHelper = require('etna/lib/x3js/entity-helper');
const classDescriptor = require('etna/lib/x3js/class-descriptor').descriptor;
const enumDescriptor = require('etna/lib/x3js/enum-descriptor').descriptor;
const messageDescriptor = require('etna/lib/x3js/message-descriptor').descriptor;
const unitTestDescriptor = require('etna/lib/x3js/unit-test-descriptor').descriptor;

function synchronize(_, context, options) {
	entityHelper.fromCurrentSession(_, classDescriptor).synchronize(_, context, options);
	entityHelper.fromCurrentSession(_, enumDescriptor).synchronize(_, context, options);
	entityHelper.fromCurrentSession(_, messageDescriptor).synchronize(_, context, options);
	entityHelper.fromCurrentSession(_, unitTestDescriptor).synchronize(_, context, options);
}

exports.addCommonServices = function(entity) {
	Object.assign(entity.$services, {
		initialize: {
			$method: "POST",
			$isMethod: false,
			$facets: ["$query"],
			$title: "Initialize lists",
			$invocationMode: "async",
			$execute(_, context) {
				synchronize(_, context);
			}
		},
		reload: {
			$method: "POST",
			$isMethod: false,
			$facets: ["$query"],
			$title: "Reload sources",
			$invocationMode: "async",
			$execute(_, context) {
				synchronize(_, context, {
					onlyFiles: true
				});
			}
		},

	});
}