"use strict";

exports.entity = {
	$canDelete: true,
	$canCreate: true,
	$canEdit: false,
	$capabilities: "",
	$properties: {
		name: {
			$title: 'name',
			$compute: function(_, instance) {
				return instance.unitTest(_).name(_);
			}
		},
		passed: {
			$title: "passed",
			$type: 'boolean',
			$compute: function(_, instance) {
				const results = instance.caseResults(_).toArray(_);
				return results.filter_(_, (_, res) => !res.passed(_)).length === 0;
			}
		},
		duration: {
			$title: "duration (ms)",
			$type: 'integer',
		}
	},
	$functions: {
		fill(_, result) {
			this.unitTest(_, result.unitTest);
			this.duration(_, result.result.stats.duration);
			const caseResults = this.caseResults(_);
			const tests = result.result.tests.map(t => {
				return Object.assign({
					name: t.title,
					failures: result.result.failures.filter(f => f.title === t.title),
					pending: result.result.pending.filter(f => f.title === t.title),
					passes: result.result.passes.filter(f => f.title === t.title),
				}, t);
			});
			tests.forEach_(_, (_, test) => {
				caseResults.add(_).fill(_, test);
			});
		},
	},
	$relations: {
		unitTest: {
			$type: "x3jsUnitTest",
			$title: "unit test",
		},
		caseResults: {
			$type: "x3jsUnitTestCaseResults",
			$title: "case results",
			$isChild: true,
			$isReadOnly: true,
		},
	},
};