"use strict";

function updateAll(_, instance, saving) {
	entityHelper.fromInstance(_, instance, unitTestDescriptor).updateAll(_, instance, saving);
}

exports.entity = {
	$canDelete: true,
	$canCreate: false,
	$canEdit: false,
	$capabilities: "",
	$titleTemplate: "Unit test run {stamp}",
	$listTitle: "List of Unit Tests Runs",
	$descriptionTemplate: " ",
	$valueTemplate: " ",
	$properties: {
		stamp: {
			$title: "time",
			$type: 'datetime',
			$linksToDetails: true,
		},
		passed: {
			$title: "passed",
			$type: 'boolean',
			$compute: function(_, instance) {
				const results = instance.suiteResults(_).toArray(_);
				return results.filter_(_, (_, res) => !res.passed(_)).length === 0;
			}
		},
		duration: {
			$title: "duration (ms)",
			$type: 'integer',
		},
	},
	$relations: {
		suiteResults: {
			$type: "x3jsUnitTestSuiteResults",
			$title: "suite results",
			$isChild: true,
			$isReadOnly: true,
		},
	},
	$functions: {
		fill(_, beg, end, results) {
			this.stamp(_, beg);
			this.duration(_, end.value - beg.value);
			const suiteResults = this.suiteResults(_)
			results.forEach_(_, (_, res) => {
				suiteResults.add(_).fill(_, res);
			});
		},
	},
	$defaultOrder: [
		["stamp", true]
	],
};