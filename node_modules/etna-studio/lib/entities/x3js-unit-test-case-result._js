"use strict";

exports.entity = {
	$canDelete: true,
	$canCreate: true,
	$canEdit: false,
	$capabilities: "",
	$properties: {
		name: {
			$title: "test case",
			$type: 'string',
		},
		passed: {
			$title: "passed",
			$type: 'boolean',
			$compute: function(_, instance) {
				return instance.errorCount(_) === 0;
			}
		},
		assertionCount: {
			$title: "assertions",
			$type: 'integer',
		},
		successCount: {
			$title: "successes",
			$type: 'integer',
		},
		errorCount: {
			$title: "errors",
			$type: 'integer',
			$compute: function(_, instance) {
				return instance.assertionCount(_) - instance.successCount(_);
			},
		},
		duration: {
			$title: "duration (ms)",
			$type: 'integer',
		},
	},
	$relations: {
		errors: {
			$type: "x3jsUnitTestAssertionResults",
			$title: "errors",
			$isChild: true,
			$isReadOnly: true,
		},
	},
	$functions: {
		fill(_, result) {
			this.name(_, result.name);
			this.assertionCount(_, result.passes.length + result.failures.length + result.pending.length);
			this.successCount(_, result.passes.length);
			this.duration(_, result.duration);
			const errors = this.errors(_);
			result.failures.forEach_(_, (_, f) => {
				errors.add(_).fill(_, f);
			});
			result.pending.forEach_(_, (_, f) => {
				errors.add(_).fill(_, f, true);
			});
		},
	},
};