"use strict";

var tds = require('tedious') ;
var bcd = require('etna-engine/lib/runtime/bcd') ;

exports.tdsColumnsToRow = function( columns ) {
	var col, exi, row, _i, _len;

    if (!columns) return null;

    row = {};
    for (_i = 0, _len = columns.length; _i < _len; _i++) {
        col = columns[_i];

        exi = row[col.metadata.colName];
        if (exi != null) {
            if (exi instanceof Array) {
                exi.push(col.value);
            } else {
                row[col.metadata.colName] = [exi, col.value];
            }
        } else {
        	row[col.metadata.colName] = col.value;
        }
	}
	return row;
}

exports.tdsAddParameters = function( req, args ) {

    for(var i = 0; args && i < args.length; i++) {

        if(/^[0-9a-fA-F]{8}[0-9a-fA-F]{4}[0-9a-fA-F]{4}[0-9a-fA-F]{4}[0-9a-fA-F]{12}$/.test(args[i])) {
            req.addParameter( i, tds.TYPES.UniqueIdentifierN ,args[i] ) ;
        }  
        else if(args[i] instanceof Date) 
        {
            req.addParameter( i, tds.TYPES.DateTime ,args[i] ) ;
        }
        else if (bcd.isBCD( args[i]))
        {
			req.addParameter( i, tds.TYPES.NVarChar, bcd.toString( args[i] ) ) ;
        }
        else if( (typeof args[i]) === "number")
        {
            if(args[i] % 1) {
                cfg.trace && cfg.trace("***decimal***");
                req.addParameter( i, tds.TYPES.Decimal ,args[i] ) ;
            } else {
                cfg.trace && cfg.trace("***integer***");
                req.addParameter( i, tds.TYPES.Int ,args[i] ) ;
            }
        }
        else
        {
            req.addParameter( i, tds.TYPES.NVarChar ,args[i] ) ;
        }
    }	
}