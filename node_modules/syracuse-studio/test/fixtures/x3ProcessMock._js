"use strict";
var helpers = require('syracuse-core/lib/helpers');
var jsxml = require("jsxml/lib/jsxml");
var uuid = require('syracuse-core/lib/uuid');
var dbgpHelper = require('syracuse-studio/lib/pub/dbgpHelper');
var $uuid = require('./eclipseClientMock').$uuid;
var ez = require('ez-streams');

var dbgpMessageQueue = initMessageQueue();

function X3ProcessMock() {}

exports.X3ProcessMock = helpers.defineClass(X3ProcessMock, null, {
	startDebug: function(_) {
		var address = dbgpHelper.getDbgpProxyAddress(_).split(":");
		this.stream = ez.devices.net.tcpClient(parseInt(address[1], 10), address[0]).connect(_);
		var q = dbgpMessageQueue,
			m;
		while ( !! (m = q.shift())) {
			this._sendPayload(_, m);
		}
		this.stream && this.stream.close(_);
		this.stream && this.stream.destroy();
		this.stream = null;
		return true;
	},

	_sendPayload: function(_, data) {
		if (typeof(data) === "object")
			data = jsxml.stringify(data);

		try {
			this.stream.write(_, data);
		} catch (e) {
			this.stream && this.stream.destroy();
			this.stream = null;
			throw e;
		}
	},

	_waitForCommand: function(_) {
		try {
			var cmd = "",
				c = 0;
			while ((c = this.stream.read(_, 1, false)).charCodeAt(0) !== 0) {
				cmd += c;
			}
			return cmd + "\0";
		} catch (e) {
			this.stream && this.stream.destroy();
			this.stream = null;
			throw e;
		}
	}
});

function initMessageQueue() {
	return [{
		init: {
			$: {
				idekey: $uuid,
				session: $uuid,
				fileuri: "",
				thread: 1234,
				parent: "/Sage/sagedev/SUPDVLP/runtime",
				server: "AWS-X3-DEVSUP.sagefr.adinternal.com:17000/SUPERV/erbou/101007375",
				language: "X3",
				protocol_version: "1.0"
			},
			engine: {
				$: {
					version: "17r.219"
				}
			},
			author: {
				$value: "Sage"
			},
			url: {
				$cdata: "http://www.sage.com"
			},
			copyright: {
				$cdata: "Copyright (c) 2000-2014 Sage"
			},
		}
	}];
}