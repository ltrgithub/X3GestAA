"use strict";

/* jshint -W079 */
///* jshint unused: false */
/* global QUnit: false, ok: false, asyncTest: false, test: false, strictEqual: false, start: false */

var nodeconfig = require('syracuse-main/lib/nodeconfig').config;
var AdxWhatClient = require('syracuse-adxadmin/lib/adxwhat/adxwhatClient').AdxWhatClient;


var adxwhat;

var done;
QUnit.module(module.id, {
	setup: function() {},
	teardown: function() {
		if (done) {
			setTimeout(function() {
				process.kill(process.pid);
			}, 500);
		}
	}
});


asyncTest("client class instanciation", function(_) {
	var sadUnitConfig = nodeconfig.x3adxwhat && nodeconfig.x3adxwhat.qunit || {};
	var connCtx = {
		server: sadUnitConfig.server ? sadUnitConfig.server : "sodaix02",
		port: sadUnitConfig.port ? sadUnitConfig.port : 17000,
		user: sadUnitConfig.user ? sadUnitConfig.user : "apisu",
		pass: sadUnitConfig.pass ? sadUnitConfig.pass : "CRYPT:xkvvaTccvr",
		secure: sadUnitConfig.secure ? sadUnitConfig.secure : true
	};

	//console.log("connCtx: " + JSON.stringify(connCtx, null, 2));
	var recOptions = {
		recMode: sadUnitConfig.online ? "REC" : "PLAY",
		fileName: "apiTest.json",
		path: "node_modules/syracuse-adxadmin/lib/adxwhat/data"
	};
	if (recOptions.recMode === "REC") recOptions.overwrite = true; // always override file
	adxwhat = new AdxWhatClient(_, connCtx.server, connCtx.port, connCtx.user, connCtx.pass, connCtx.secure, recOptions);


	strictEqual(adxwhat.stream != null, true, "Stream is opened");

	start();
});

asyncTest("ADXDIR", function(_) {
	var res = adxwhat.env(_, "ADXDIR");
	strictEqual(res, "/produits/v170/SOLSUPV7/runtime", "ADXDIR OK");

	start();
});



asyncTest("client disconnect", function() {
	adxwhat.disconnect();
	strictEqual(adxwhat.stream == null, true, "Stream is closed");

	start();
});




test("kill", function() {
	done = true;
	start();
});