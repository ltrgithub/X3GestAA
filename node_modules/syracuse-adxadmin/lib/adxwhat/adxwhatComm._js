"use strict";

var helpers = require('syracuse-core/lib/helpers');
var locale = require("syracuse-core/lib/locale");
var commonComm = require('syracuse-adxadmin/lib/common/commonComm._js');
var nodeconfig = require('syracuse-main/lib/nodeconfig');
var tracer = nodeconfig.config && nodeconfig.config.x3adxwhat && nodeconfig.config.x3adxwhat.protocol && nodeconfig.config.x3adxwhat.protocol.trace;



var WHAT_ID = 9;
var WHAT_SECURE_ID = 109;
/// !doc
/// 
/// # AdxWhatComm module
/// 
/// DO NOT USE THIS MODULE DIRECTLY !!!  
/// This documentation is only provided to understand the protocol layer !  
/// 
/// To interface with adxadmin server, please refer to [AdxWhatClient module API](https://github.com/Sage-ERP-X3/Syracuse/blob/master/node_modules/syracuse-adxadmin/lib/adxwhat/adxwhatClient.md "AdxWhatClient module API").
/// 
/// ---
exports.AdxWhatComm = helpers.defineClass(function(_, stream) {
	commonComm.CommonComm.call(this, _, stream, tracer);
}, commonComm.CommonComm, {

	/// # Connection / Disconnection
	/// 
	/// This chapter describes connection and disconnection sequences with Safe X3 AdxAdmin server component.
	/// 
	/// 
	/// ##**Connection**
	/// 
	/// Opening classic TCP/IP socket on 'server:port' with AdxAdmin server.  
	/// 
	///   - **First step** : open session.  
	///   - Request :  
	///      - **1-byte** : The service ID : 9 by default and 109 for secure mode.  
	///      - **1-byte** : The length to follow.  
	///      - **1-byte** : The user string length.  
	///      - **N-bytes** : The user.
	///      - **1-byte** : The user string length.  
	///      - **N-bytes** : The user.  
	///      - **1-byte** : The password string length.  
	///      - **N-bytes** : The password
	///   - Reply :  
	///      - **4-bytes** : (integer LE) The adonix process PID or -1 if an error occurred.  
	///      - **[1-byte]** : Only if -1 : The message length.  
	///      - **[4-bytes]** : Only if -1 : (integer LE) The adonix error code.  
	///      - **[N-bytes]** : Only if -1 : The error message.  
	/// 
	/// ---
	/// 
	connect: function(_, user, password, secured) {
		var serviceId = secured ? WHAT_SECURE_ID : WHAT_ID;
		this._connect(_, serviceId, user, password, secured);

	},

	disconnect: function(_) {
		this._disconnect(_);
	},


});