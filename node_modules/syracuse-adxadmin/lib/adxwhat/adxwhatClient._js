"use strict";
var helpers = require('syracuse-core/lib/helpers');
var commonClient = require('syracuse-adxadmin/lib/common/commonClient._js');
var AdxWhatComm = require('syracuse-adxadmin/lib/adxwhat/adxwhatComm').AdxWhatComm;
var config = require('syracuse-main/lib/nodeconfig').config;



exports.AdxWhatClient = helpers.defineClass(function(_, hostname, port, user, password, secured, recOptions) {
	var options = {
		CommClass: AdxWhatComm,
		recOptions: recOptions,
		config: config.x3adxwhat
	};
	commonClient.CommonClient.call(this, _, options, hostname, port, user, password, secured);
}, commonClient.CommonClient, {

	/// !doc
	/// 
	/// # AdxWhat Client  
	/// AdxWhat is provided to retrieve environnement variables from AdxAdmin server.  
	/// The module is using adxwhat protocol layer implemented in [AdxWhatComm](./sadfsqComm.md).  
	/// To use this module do require('syracuse-adxadmin/lib/adxwhat/adxwhatClient').AdxWhatClient.  
	/// All the methods are asynchronous.  
	/// ``` javascript
	/// var AdxWhatClient = require('syracuse-adxadmin/lib/adxwhat/adxwhatClient').AdxWhatClient;
	/// var adxwhat = new AdxWhatClient(_, "server", "port", "user", "password", secure);
	/// ```
	/// * `server` is the hostname of the adxadmin server.  
	/// * `port` is the port on adxadmin is listenning.  
	/// * `user` is the system user to use for the connection.  
	/// * `password` is the password corresponding to the user.  
	/// * `secure` is boolean that define if the connection is secured by user/password.  
	/// 
	/// 

	/// 
	/// -------------
	/// ### env :
	/// ``` javascript
	/// adxwhat.env(_, infoId);  
	/// ```
	/// Get the remote environment variable corresponding to `infoId`.  
	/// 
	/// * `infoId` is the name of the remote environment variable.  
	/// 
	env: function(_, infoId) {
		this.__connect(_);
		return this.communicator.processAsk(_, infoId);
	},

	disconnect: function() {
		this._disconnect();
	},

});