exports.contract = {
    application: "syracuse",
    contract: "collaboration",
    resources: require('./strings').resources,
    entities: {
        user: require('./entities/user').entity,
        group: require('./entities/group').entity,
        endPoint: require('./entities/endPoint').entity,
        role: require('./entities/role').entity,
        userEndpoint: require('./entities/userEndpoint').entity,
        localePreference: require('./entities/localePreference').entity,
        userProfile: require('./entities/userProfile').entity,
        userPreference: require('./entities/userPreference').entity,
        application: require('./entities/application').entity,
        x3server: require('./entities/x3server').entity,
        oauth2: require('./entities/oauth2').entity,
        ldap: require('./entities/ldap').entity,
        patch: require('./entities/patch').entity,
        apatch: require('./entities/apatch').entity,
        patchLevel: require('./entities/patchLevel').entity,
        setting: require('./entities/setting').entity,
        // tools
        importTool: require('./entities/importTool').entity,
        searchAdmin: require('./entities/searchAdmin').entity,
        sessionInfo: require('./entities/sessionInfo').entity,
        fusionSessionInfo: require('./entities/fusionSessionInfo').entity,
		moduleVersion: require('./entities/moduleVersion').entity,
        // authoring
        configuration: require('./entities/page/configuration').entity,
        portlet: require('./entities/page/portlet').entity,
//        pagePortlet: require('./entities/page/pagePortlet').entity,
        menuItem: require('./entities/page/menuItem').entity,
        menuItemParameter: require('./entities/page/menuItemParameter').entity,
        menuCategory: require('./entities/page/menuCategory').entity,
        shell: require('./entities/page/shell').entity,
        page: require('./entities/page/page').entity,
        pageFileLoader: require('./entities/page/pageFileLoader').entity,
        pageFileLoaderItem: require('./entities/page/pageFileLoaderItem').entity,
        pageData: require('./entities/page/pageData').entity,
        pageDataHistory: require('./entities/page/pageDataHistory').entity,
        pageDataHistoryItem: require('./entities/page/pageDataHistoryItem').entity,
        dashboardDef: require('./entities/page/dashboardDef').entity,
        dashboardVariant: require('./entities/page/dashboardVariant').entity,
        dashboardVignette: require('./entities/page/dashboardVignette').entity,
        dashboardAuth: require('./entities/page/dashboardAuth').entity,
        pageDef: require('./entities/page/pageDef').entity,
        pageVariant: require('./entities/page/pageVariant').entity,
        pageAuth: require('./entities/page/pageAuth').entity,
        // storage area
        team: require('./entities/storage/team').entity,
        document: require('./entities/storage/document').entity,
        storageVolume: require('./entities/storage/storageVolume').entity,
        storageVolumeItem: require('./entities/storage/storageVolumeItem').entity,
        selectVolumeEndpoint: require('./entities/storage/selectVolumeEndpoint').entity,
        storageVolumeQuery: require('./entities/storage/storageVolumeQuery').entity,
        uploadVolumeItem: require('./entities/storage/uploadVolumeItem').entity,
        documentTag: require('./entities/storage/documentTag').entity,
        documentTagCategory: require('./entities/storage/documentTagCategory').entity,
        // lookups
        lookupLocale: require('./entities/lookupLocale').entity,
        lookupX3Folder: require('./entities/lookupX3Folder').entity,
        lookupEntity: require('./entities/lookupEntity').entity,
        lookupEntityAttr: require('./entities/lookupEntityAttr').entity,
        lookupRepresentation: require('./entities/lookupRepresentation').entity,
        // basic scheduler
        automate: require('./entities/scheduler/automate').entity,
        automateEvent: require('./entities/scheduler/automateEvent').entity,
        automateTask: require('./entities/scheduler/automateTask').entity,
        serverLog: require('./entities/serverLog').entity,
        // excel
        excelBrowseDatasource: require('./entities/excelBrowseDatasource').entity,
        excelOrderAttr: require('./entities/excelOrderAttr').entity,
        // history
        navHistory: require('./entities/navHistory').entity,
        // word
        msoMailMergeDS: require('./entities/msoMailMergeDS').entity,
        msoMailMergeDSSel: require('./entities/msoMailMergeDSSel').entity,
        msoMailMergeDocSel: require('./entities/msoMailMergeDocSel').entity,
        msoReportMode: require('./entities/msoReportMode').entity,
        msoTestEntity: require('./entities/msoTestEntity').entity,

        // Soap Web services
        soapWebService: require('./entities/soap/server/soapWebService').entity,
        soapEntity: require('./entities/soap/server/soapEntity').entity,
        soapRepresentation: require('./entities/soap/server/soapRepresentation').entity,
        // Soap Stubs
        soapStub: require('./entities/soap/client/soapStub').entity,
        soapStubPort: require('./entities/soap/client/soapStubPort').entity,
        soapStubOperation: require('./entities/soap/client/soapStubOperation').entity,
    },
    representations: {
        // representation name here, not entity name (but might be the same as the entity name)
        user: require('./representations/user').representation,
        userMob: require('./representations/userMob').representation,
        role: require('./representations/role').representation,
        roleMob: require('./representations/roleMob').representation,
        endPoint: require('./representations/endpoint').representation,
        group: require('./representations/group').representation,
        groupMob: require('./representations/groupMob').representation,
        team: require('./representations/team').representation,
        storageVolumeQuery: require('./representations/storageVolumeQuery').representation,
        portlet: require('./representations/portlet').representation,
        menuItem: require('./representations/menuItem').representation,
        pageData: require('./representations/pageData').representation,
        dashboardDef: require('./representations/dashboardDef').representation,
        pageDef: require('./representations/pageDef').representation,
        documentExcel: require('./representations/documentExcel').representation,
        documentExcelSI: require('./representations/documentExcelSI').representation,
        excelBrowseDsEntity: require('./representations/excelBrowseDsEntity').representation,
        excelBrowseDsMenuItem: require('./representations/excelBrowseDsMenuItem').representation,
        userProfileMob: require('./representations/userProfileMob').representation,
        
        automate: require('./representations/automate').representation,

        uploadVolumeItem: require('./representations/uploadVolumeItem').representation,
        
        msoMailMergeDS: require('./representations/msoMailMergeDS').representation,
        msoMailMergeDSSel: require('./representations/msoMailMergeDSSel').representation,
        msoMailMergeDSSelEntity: require('./representations/msoMailMergeDSSelEntity').representation,
        msoMailMergeDSSelMenu: require('./representations/msoMailMergeDSSelMenu').representation,
        msoMailMergeDocSel: require('./representations/msoMailMergeDocSel').representation,
        msoWordDocument: require('./representations/msoWordDocument').representation,
        msoMailMergeTemplate: require('./representations/msoMailMergeTemplate').representation,
        msoReportTemplate: require('./representations/msoReportTemplate').representation,
        msoReportMode: require('./representations/msoReportMode').representation,
        
        soapWebService: require('./representations/soapWebService').representation,
        soapStub: require('./representations/soapStub').representation,
    },
    searchFacets: {
        group: {
            $title: "Groups",
            $lookup: {
                $entity: "group",
                $keyField: "description"
            },
            $fields: {
                user: "groups",
                group: "description"
            }
        },
        role: {
            $title: "Roles",
            $lookup: {
                $entity: "role",
                $keyField: "description"
            },
            $fields: {
                group: "role",
                role: "description"
            }
        },
        menuCategory: {
            $title: "Categories",
            $fields: {
                portlet: "categories",
                menuItem: "categories"
            }
        },
        endpoint: {
        	$title: "Endpoints",
        	$fields: {
        		application: "endpoints",
        		endPoint: "descriptions",
        		group: "endPoints",
        		portlet: "endpoint",
        		x3server: "endpoints"
        	}
        }
    },
    dbMeta: {
        version: 23,
        initScript: "syracuse-admin-init.json",
        updateScript: "syracuse-collaboration/lib/updateScript"
    }
};
