"use strict";

exports.contract = {
	application: "syracuse",
	contract: "collaboration",
	resources: require('./strings').resources,
	entities: {
		user: require('./entities/user/user').entity,
		licenseData: require('./entities/licenseData').entity,
		licensePartData: require('./entities/licensePartData').entity,
		licenseBadgeData: require('./entities/licenseBadgeData').entity,
		licenseModuleData: require('./entities/licenseModuleData').entity,
		group: require('./entities/user/group').entity,
		role: require('./entities/user/role').entity,
		roleBoProfile: require('./entities/user/roleBoProfile').entity,
		menuProfileToRole: require('./entities/user/menuProfileToRole').entity,
		userEndpoint: require('./entities/user/userEndpoint').entity,
		userProfile: require('./entities/user/userProfile').entity,
		userPreference: require('./entities/user/userPreference').entity,
		oauth2: require('./entities/user/oauth2').entity,
		ldap: require('./entities/user/ldap').entity,
		ldapAttributeName: require('./entities/user/ldapAttributeName').entity,
		x3UserImport: require('./entities/user/x3UserImport').entity,
		userRepresentationPref: require('./entities/user/userRepresentationPref').entity,

		endPoint: require('./entities/endPoint').entity,
		badge: require('./entities/badge').entity,
		localePreference: require('./entities/localePreference').entity,
		application: require('./entities/application').entity,
		x3server: require('./entities/x3server').entity,
		friendServer: require('./entities/friendServer').entity,
		license: require('./entities/license').entity,
		patch: require('./entities/patch').entity,
		apatch: require('./entities/apatch').entity,
		host: require('./entities/host').entity,
		connectionData: require('./entities/connectionData').entity,
		certificate: require('./entities/certificate').entity,
		caCertificate: require('./entities/caCertificate').entity,
		patchLevel: require('./entities/patchLevel').entity,
		setting: require('./entities/setting').entity,
		// tools
		exportProfile: require('./entities/import_export/exportProfile').entity,
		exportProfileItem: require('./entities/import_export/exportProfileItem').entity,
		exportProfileObject: require('./entities/import_export/exportProfileObject').entity,
		selectExportTarget: require('./entities/import_export/selectExportTarget').entity,
		importTool: require('./entities/import_export/importTool').entity,
		importSession: require('./entities/import_export/importSession').entity,
		importSessionType: require('./entities/import_export/importSessionType').entity,
		personalizationManagement: require('./entities/indus/personalizationManagement').entity,
		exportPersonalization: require('./entities/indus/exportPersonalization').entity,
		selectPMScheduler: require('./entities/indus/selectPMScheduler').entity,
		searchAdmin: require('./entities/searchAdmin').entity,
		sessionInfo: require('./entities/sessionInfo').entity,
		cvgSession: require('./entities/cvgSession').entity,
		cvgReuseClient: require('./entities/cvgReuseClient').entity,
		cvgRecord: require('./entities/cvgRecord').entity,
		moduleVersion: require('./entities/moduleVersion').entity,
		entityAttribute: require('./entities/import_export/entityAttribute').entity,
		executeMongoOrder: require('./entities/indus/executeMongoOrder').entity,
		// authoring
		configuration: require('./entities/page/configuration').entity,
		portlet: require('./entities/page/portlet').entity,
		vignetteRegroup: require('./entities/page/vignetteRegroup').entity,
		menuItem: require('./entities/page/menuItem').entity,
		menuItemParameter: require('./entities/page/menuItemParameter').entity,
		menuCategory: require('./entities/page/menuCategory').entity,
		page: require('./entities/page/page').entity,
		pageData: require('./entities/page/pageData').entity,
		//		pageDataHistory: require('./entities/page/pageDataHistory').entity,
		//		pageDataHistoryItem: require('./entities/page/pageDataHistoryItem').entity,
		dashboardDef: require('./entities/page/dashboardDef').entity,
		dashboardVariant: require('./entities/page/dashboardVariant').entity,
		dashboardVignette: require('./entities/page/dashboardVignette').entity,
		dashboardAuth: require('./entities/page/dashboardAuth').entity,
		pageDef: require('./entities/page/pageDef').entity,
		pageVariant: require('./entities/page/pageVariant').entity,
		pageAuth: require('./entities/page/pageAuth').entity,
		fusionPageDefConvert: require('./entities/page/fusionPageDefConvert').entity,
		authoringSaveParam: require('./entities/page/authoringSaveParam').entity,
		// V6 dashboards
		//		userProxy: require('./entities/page/v6Dashboard/userProxy').entity,
		//		tradeProfileProxy: require('./entities/page/v6Dashboard/tradeProfileProxy').entity,
		//		v6DashboardImport: require('./entities/page/v6Dashboard/v6DashboardImport').entity,
		//		v6DashboardUserLogin: require('./entities/page/v6Dashboard/v6DashboardUserLogin').entity,
		//		v6DashboardTradeCode: require('./entities/page/v6Dashboard/v6DashboardTradeCode').entity,
		// storage area
		team: require('./entities/storage/team').entity,
		document: require('./entities/storage/document').entity,
		storageVolume: require('./entities/storage/storageVolume').entity,
		storageVolumeItem: require('./entities/storage/storageVolumeItem').entity,
		storageVolumeQuery: require('./entities/storage/storageVolumeQuery').entity,
		uploadVolumeItem: require('./entities/storage/uploadVolumeItem').entity,
		documentTag: require('./entities/storage/documentTag').entity,
		documentTagCategory: require('./entities/storage/documentTagCategory').entity,
		v6DocumentProxy: require('./entities/storage/v6DocumentProxy').entity,
		// lookups
		selectEndpoint: require('./entities/selectEndpoint').entity,
		lookupLocale: require('./entities/lookupLocale').entity,
		lookupX3Folder: require('./entities/lookupX3Folder').entity,
		lookupEntity: require('./entities/lookupEntity').entity,
		lookupEntityAttr: require('./entities/lookupEntityAttr').entity,
		lookupRepresentation: require('./entities/lookupRepresentation').entity,

		lookupX3ActivityCode: require('./entities/msoffice/lookupX3ActivityCode').entity,
		lookupX3Company: require('./entities/msoffice/lookupX3Company').entity,
		lookupX3Legislation: require('./entities/msoffice/lookupX3Legislation').entity,
		lookupTemplatePurposes: require('./entities/msoffice/lookupTemplatePurposes').entity,

		representationProxy: require('./entities/introspection/representationProxy').entity,
		entityProxy: require('./entities/introspection/entityProxy').entity,

		// basic scheduler
		automate: require('./entities/scheduler/automate').entity,
		automateEvent: require('./entities/scheduler/automateEvent').entity,
		automateTask: require('./entities/scheduler/automateTask').entity,
		serverLog: require('./entities/serverLog').entity,
		selectScheduler: require('./entities/scheduler/selectScheduler').entity,
		// notification framework
		notificationEvent: require('./entities/notificationEvent').entity,
		notificationServer: require('./entities/notificationServer').entity,
		notificationTime: require('./entities/notificationTime').entity,
		// excel
		excelBrowseDatasource: require('./entities/msoffice/excelBrowseDatasource').entity,
		excelOrderAttr: require('./entities/msoffice/excelOrderAttr').entity,
		// history
		navHistory: require('./entities/navHistory').entity,
		// word
		msoMailMergeDS: require('./entities/msoffice/msoMailMergeDS').entity,
		msoMailMergeDSSel: require('./entities/msoffice/msoMailMergeDSSel').entity,
		msoMailMergeDocSel: require('./entities/msoffice/msoMailMergeDocSel').entity,
		msoReportMode: require('./entities/msoffice/msoReportMode').entity,
		msoTestEntity: require('./entities/msoffice/msoTestEntity').entity,
		msoWordTemplateDocument: require('./entities/msoffice/msoWordTemplateDocument').entity,

		// Soap Web services
		soapWebService: require('./entities/soap/server/soapWebService').entity,
		soapEntity: require('./entities/soap/server/soapEntity').entity,
		soapRepresentation: require('./entities/soap/server/soapRepresentation').entity,
		// Soap Stubs
		soapStub: require('./entities/soap/client/soapStub').entity,
		soapStubPort: require('./entities/soap/client/soapStubPort').entity,
		soapStubOperation: require('./entities/soap/client/soapStubOperation').entity,
		systemInfo: require('./entities/systemInfo').entity,

		// Rest Configs
		restWebService: require('./entities/rest/restWebService').entity,
		restHeader: require('./entities/rest/restHeader').entity,
		restParameter: require('./entities/rest/restParameter').entity,

		proxyConfiguration: require('./entities/proxyConfiguration').entity,
		proxyConfigurationExclude: require('./entities/proxyConfigurationExclude').entity,

		// Business Objects
		boServer: require('./entities/bo/boServer').entity,
		boProfile: require('./entities/bo/boProfile').entity,

		// Async job
		asyncOperation: require('./entities/asyncOperation').entity,

		translationTool: require('./entities/translationTool').entity,
		// Security
		securityProfile: require('./entities/securityProfile').entity,
		securityProfileItem: require('./entities/securityProfileItem').entity,

		filterTest: require('./entities/filterTest').entity,
		APLSTD: require('./entities/APLSTD').entity,
		TABLAN: require('./entities/TABLAN').entity,
	},
	representations: {
		// representation name here, not entity name (but might be the same as the entity name)
		user: require('./representations/user').representation,
		userMob: require('./representations/userMob').representation,
		role: require('./representations/role').representation,
		roleMob: require('./representations/roleMob').representation,
		endPoint: require('./representations/endPoint').representation,
		group: require('./representations/group').representation,
		groupMob: require('./representations/groupMob').representation,
		team: require('./representations/team').representation,
		storageVolumeQuery: require('./representations/storageVolumeQuery').representation,
		portlet: require('./representations/portlet').representation,
		vignetteRegroup: require('./representations/vignetteRegroup').representation,
		notificationEvent: require('./representations/notificationEvent').representation,
		menuItem: require('./representations/menuItem').representation,
		dashboardDef: require('./representations/dashboardDef').representation,
		pageDef: require('./representations/pageDef').representation,
		authoringSaveParam: require('./representations/authoringSaveParam').representation,
		documentExcel: require('./representations/msoffice/documentExcel').representation,
		documentExcelSI: require('./representations/msoffice/documentExcelSI').representation,
		excelBrowseDsEntity: require('./representations/msoffice/excelBrowseDsEntity').representation,
		excelBrowseDsMenuItem: require('./representations/msoffice/excelBrowseDsMenuItem').representation,
		userProfileMob: require('./representations/userProfileMob').representation,
		license: require('./representations/license').representation,
		host: require('./representations/host').representation,
		setting: require('./representations/setting').representation,
		automate: require('./representations/automate').representation,

		importTool: require('./representations/importTool').representation,
		x3UserImport: require('./representations/x3UserImport').representation,
		searchAdmin: require('./representations/searchAdmin').representation,
		personalizationManagement: require('./representations/personalizationManagement').representation,

		uploadVolumeItem: require('./representations/uploadVolumeItem').representation,

		msoMailMergeDS: require('./representations/msoffice/msoMailMergeDS').representation,
		msoMailMergeDSSel: require('./representations/msoffice/msoMailMergeDSSel').representation,
		msoMailMergeDSSelEntity: require('./representations/msoffice/msoMailMergeDSSelEntity').representation,
		msoMailMergeDSSelMenu: require('./representations/msoffice/msoMailMergeDSSelMenu').representation,
		msoMailMergeDocSel: require('./representations/msoffice/msoMailMergeDocSel').representation,
		msoWordDocument: require('./representations/msoffice/msoWordDocument').representation,
		msoMailMergeTemplate: require('./representations/msoffice/msoMailMergeTemplate').representation,
		msoReportTemplate: require('./representations/msoffice/msoReportTemplate').representation,
		msoReportMode: require('./representations/msoffice/msoReportMode').representation,
		msoPptDocument: require('./representations/msoffice/msoPptDocument').representation,
		msoWordTemplateDocument: require('./representations/msoffice/msoWordTemplateDocument').representation,

		soapWebService: require('./representations/soapWebService').representation,
		soapStub: require('./representations/soapStub').representation,
		//exportProfile: require('./representations/exportProfile').representation,
		document: require('./representations/storage/document').representation,
		systemInfo: require('./representations/systemInfo').representation,

		filterTest: require('./representations/filterTest').representation,
	},
	searchFacets: {
		group: {
			$title: "Groups",
			$lookup: {
				$entity: "group",
				$keyField: "description"
			},
			$fields: {
				user: "groups",
				group: "description"
			}
		},
		role: {
			$title: "Roles",
			$lookup: {
				$entity: "role",
				$keyField: "description"
			},
			$fields: {
				group: "role",
				role: "description"
			}
		},
		menuCategory: {
			$title: "Categories",
			$fields: {
				portlet: "categories",
				menuItem: "categories"
			}
		},
		endpoint: {
			$title: "Endpoints",
			$fields: {
				application: "endpoints",
				endPoint: "descriptions",
				group: "endPoints",
				portlet: "endpoint",
				x3server: "endpoints"
			}
		},
		documentTags: {
			$title: "Document tags",
			$fields: {
				documentTag: "description",
				document: "tags"
			}
		}
	},
	dbMeta: {
		version: 49,
		initScript: ["syracuse-admin-init.json", "x3-init.json", "x3-dashboards-user.json", "x3-dashboards-home.json", "x3-pages.json"],
		updateScript: "syracuse-collaboration/lib/updateScript"
	}
};