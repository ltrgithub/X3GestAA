"use strict";

var config = require("syracuse-main/lib/nodeconfig").config;
var EdiProcess = require("syracuse-edi/lib/EdiProcess");

exports.entity = {
	$capabilities: "",
	$titleTemplate: "EDI list process running",
	$descriptionTemplate: " ",
	$properties: {
		idProcess: {
			$title: "id Processus" // id of the edi process
		},
		idMessageMapping: {
			$title: "Id of Message Mapping",
			$type: "json"
		},
		idSequentialFile: {
			$title: "id of Sequential File",
			$type: "json"
		},
		idEdiFlow: {
			$title: "id of Edi Flow",
			$type: "json"
		},
		idProtocol: {
			$title: "id of protocol",
			$type: "json"
		}
	},
	$relations: {},

	$functions: {
		getMessageMapping: function(_) {
			return EdiProcess.getEdiEntity(_, {
				filter: {
					sdataFilter: "id eq '" + self.idMessageMapping + "'"
				}
			});
		},
		getSequentialFile: function(_) {
			return EdiProcess.getEdiEntity(_, {
				filter: {
					sdataFilter: "id eq '" + self.idMessageMapping + "'"
				}
			});
		},
		getEdiFlow: function(_) {
			return EdiProcess.getEdiEntity(_, {
				filter: {
					sdataFilter: "id eq '" + self.idMessageMapping + "'"
				}
			});
		},
		getProtocol: function(_) {
			return EdiProcess.getEdiEntity(_, {
				filter: {
					sdataFilter: "id eq '" + self.idMessageMapping + "'"
				}
			});
		}
	},
	$services: {},
	$expire: function(_, instance) {
		/*/ set in hard the value, it will be configured after
         if (config.edi.cache.timeout) { // timeout + 1
         return (config.edi.cache.timeout + 1) * 60000;
         }*/
	}

};