"use strict";

exports.entity = {
	$titleTemplate: "Word report",
	$descriptionTemplate: " ",
	$valueTemplate: " ",
	
	$isPersistent: false,
	$properties: {
        reportMode: {
            $title: "Word report",
            $enum: [{
				$value: "choose_tpl",
				$title: "Choose existing template"
			},{
				$value: "new_tpl",
				$title: "Create template"
			},{
				$value: "mod_tpl",
				$title: "Modify template"
			}],
            $default: "choose_tpl"
        },
        msoCurrentRepresentation: {
        	$title: "Representation",
        	$isDisabled: true
        },
        msoLocaleCode: {
        	$title: "Locale Code",
        	$isDisabled: true
        },
		cpy: {
			$type: "string",
			$title: "Company",
			$isDisabled: true
		},
		leg: {
			$type: "string",
			$title: "Legislation",
			$isDisabled: true
		},
		activ: {
			$type: "string",
			$title: "Activity Code",
			$isDisabled: true
		},
		endpoint: {
			$type: "string",
			$title: "Endpoint",
			$isDisabled: true,
			$isHidden: true
		}
	},
    $relations: {
    	document: {
			$title: "Template",
			$type: "msoWordTemplateDocument",
			$isDisabled: function(_, instance) {
                return instance.reportMode(_) === "new_tpl";
			},
			$isMandatory: function(_, instance) {
				return instance.reportMode(_) !== "new_tpl";
			},
			$lookupFilter: function(_, instance) {
				var filters = [];
				_addFilter(filters, "templateClass", instance.msoCurrentRepresentation(_));
				_addFilter(filters, "templateType", "report");
				_addFilter(filters, "localeCode", instance.msoLocaleCode(_));
				_addFilter(filters, "cpy", instance.cpy(_));
				_addFilter(filters, "leg", instance.leg(_));
				_addFilter(filters, "activ", instance.activ(_));
				_addFilter(filters, "endpoint", instance.endpoint(_));
				
				var filter = { 
					"$and": filters
				};
				return filter;
			} 
    	}
	},
	$init: function(_, instance, context) {
		var params = context.parameters;
		if (!params)
			return;
		instance.msoCurrentRepresentation(_, params.$msoRepr);
		instance.msoLocaleCode(_, params.$msoLocale);
		instance.cpy(_, params.$msoCpy);
		instance.leg(_, params.$msoLeg);
		instance.activ(_, params.$msoActiv);
		instance.endpoint(_, params.$msoEndpoint);
	}
}

function _addFilter(filters, property, value) {
	if (value) {
		var filter = {};
		filter[property] = value;
		filters.push(filter);
	}
}