"use strict"

var jsurl = require("jsurl");

exports.entity= {
	$titleTemplate: "Select export target",
	$valueTemplate: "",
	$isPersistent: false,
	$canSave: false,
	$capabilities: "",
	$properties: {
		targetType: {
			$title: "Target type",
			$enum: [{ $value: "download", $title: "Direct download" }, 
			        { $value: "file", $title: "Server file" }, 
			        { $value: "db_file", $title: "Collaboration area" },
			        { $value: "server", $title: "Friend server direct transfer" }],
			$default: "download"
		},
		path: {
			$title: "File name",
			$description: "The file will be stored on the server's import folder",
			$isHidden: function(_, instance) {
				return (instance.targetType(_) !== "file");
			},
			$isMandatory: function(_, instance) {
				return (instance.targetType(_) === "file");
			}
		},
		storageDescription: {
			$title: "Description",
			$isHidden: function(_, instance) {
				return instance.targetType(_) !== "db_file";
			},
			$isMandatory: function(_, instance) {
				return instance.targetType(_) === "db_file";
			}
		},
		parameters: {
			$title: "Parameters",
			$isHidden: true,
			$compute: function(_, instance) {
				return jsurl.stringify({
					targetType: instance.targetType(_),
					path: instance.path(_),
					storageDescription: instance.storageDescription(_),
					storageVolume: (instance.storageVolume(_) && instance.storageVolume(_).$uuid),
					friendServer: (instance.friendServer(_) && instance.friendServer(_).$uuid)
				});
			}
		}
	},
	$relations: {
		storageVolume: {
			$title: "Volume",
			$type: "storageVolume",
			$isHidden: function(_, instance) {
				return instance.targetType(_) !== "db_file";
			},
			$isMandatory: function(_, instance) {
				return instance.targetType(_) === "db_file";
			}
		},
		friendServer: {
			$title: "Server",
			$type: "friendServer",
			$isHidden: function(_, instance) {
				return instance.targetType(_) !== "server";
			},
			$isMandatory: function(_, instance) {
				return instance.targetType(_) === "server";
			}
		}
	}
}