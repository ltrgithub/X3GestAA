"use strict";



function _checkDefaultButton(_, instance) {
	// check if default has be active or not depending of already data entered as the default theme
	var crt = instance._db.fetchInstances(_, instance._db.getEntity(_, "theme"));
	var existsDefault = false;
	for (var i = 0; crt && i < crt.length && !existsDefault; i++) {
		existsDefault = crt[i].default(_) && crt[i].$uuid !== instance.$uuid;
	}

	return existsDefault;

}

exports.entity = {
	$properties: {
		code: {
			$title: "Code",
			$linksToDetails: true,
			$isMandatory: true,
			$isUnique: true
		},
		description: {
			$title: "description",
			$isMandatory: true,
		},
		"default": {
			$tite: "default",
			$type: "boolean",
			$isReadOnly: function(_, instance) {
				return _checkDefaultButton(_, instance);
			},
		}
	},
	$titleTemplate: "Theme",
	$descriptionTemplate: "Custumized theme",
	$valueTemplate: "{description}",
	$helpPage: "Administration-reference-Roles",
	$factoryIncludes: ["code", "description"],

	$relations: {
		cssFiles: {
			$title: "list of css files",
			$type: "cssFiles",
			$isChild: true
		}
	},
	$events: {

	},
	$searchIndex: {
		$fields: ["code"]
	}
};