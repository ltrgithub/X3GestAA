"use strict";

var adminHelper = require("syracuse-collaboration/lib/helpers").AdminHelper;
var locale = require("syracuse-core/lib/locale");
var globals = require("streamline/lib/globals");

exports.entity = {
	$titleTemplate: "Select vignette",
	$valueTemplate: "{endpoint}",
	$isPersistent: false,
	$canSave: false,
	$properties: {
		applicationId: {
			$title: "Application",
//			$type: "application",
			$isHidden: true
		}
	},
	$relations: {
		endpoint: {
			$title: "Endpoint",
			$type: "endPoint",
			$propagate: function(_, instance) {
				instance.applicationId(_, instance.endpoint(_) && instance.endpoint(_).applicationRef(_) && instance.endpoint(_).applicationRef(_).$uuid);
			},
			defaultValue: function(_, instance) {
				var up = globals.context.session && globals.context.session.getUserProfile(_);
				return up.selectedEndpoint(_);
			}
		}
	},
	$links: function(_, instance) {
		function _makeLink(title, type) {
			var searchUrl = lkUrl.replace("%7BlinkType%7D", type);
			return {
				$title: title,
				$url: searchUrl.replace("application.%24key", "application"),
				$searchUrl: searchUrl,
				$method: "GET",
				$isDisabled: !enabled
			};
		}
		var lks = {};
		var admEp = adminHelper.getCollaborationEndpoint(_);
		var lkUrl = admEp.getBaseUrl(_) + "/portlets?representation=portlet.$query&count=200";
		lkUrl += "&select=" + encodeURIComponent("code,title,module,categories");
		lkUrl += "&where=" + encodeURIComponent("((type eq '$page') and (linkType eq '{linkType}') and (application.$key eq '" + instance.applicationId(_) + "' or application eq null))");
		var enabled = instance.endpoint(_) != null;
		lks.requests = _makeLink(locale.format(module, "requestsTitle"), "$request");
		lks.processes = _makeLink(locale.format(module, "processesTitle"), "$process");
		lks.stats = _makeLink(locale.format(module, "statsTitle"), "$stats");
		lks.representation = _makeLink(locale.format(module, "representationTitle"), "$representation");
		lks.extLink = _makeLink(locale.format(module, "extLinkTitle"), "$external");
		//
		return lks;
	}
};