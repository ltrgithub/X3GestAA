"use strict";

var adminHelper = require("syracuse-collaboration/lib/helpers").AdminHelper;
var locale = require("syracuse-core/lib/locale");

exports.entity = {
	$titleTemplate: "Select vignette",
	$valueTemplate: "{endpoint}",
	$properties: {},
	$relations: {
		endpoint: {
			$title: "Endpoint",
			$type: "endPoint",
			$propagate: function(_, instance) {
				instance.application(_, instance.endpoint(_) && instance.endpoint(_).applicationRef(_));
			}
		},
		application: {
			$title: "Application",
			$type: "application",
			$isHidden: true
		}
	},
	$links: function(_, instance) {
		var lks = {};
		var admEp = adminHelper.getCollaborationEndpoint(_);
		var lkUrl = admEp.getBaseUrl(_) + "/portlets?representation=portlet.$query";
		lkUrl += "&" + encodeURIComponent("where=((type eq '$page') and (itemType eq '{itemType}'))");
		var enabled = instance.endpoint(_) != null;
		lks.requests = {
				$title: locale.format(module, "requestsTitle"),
				$url: lkUrl.replace("{itemType}", "$request"),
				$method: "GET",
				$isDisabled = !enabled
			};
		lks.processes = {
				$title: locale.format(module, "processesTitle"),
				$url: lkUrl.replace("{itemType}", "$process"),
				$method: "GET",
				$isDisabled = !enabled
			};
		lks.stats = {
				$title: locale.format(module, "statsTitle"),
				$url: lkUrl.replace("{itemType}", "$stats"),
				$method: "GET",
				$isDisabled = !enabled
			};
		lks.representation = {
				$title: locale.format(module, "representationTitle"),
				$url: lkUrl.replace("{itemType}", "$representation"),
				$method: "GET",
				$isDisabled = !enabled
			};
		lks.extLink = {
				$title: locale.format(module, "extLinkTitle"),
				$url: lkUrl.replace("{itemType}", "$external"),
				$method: "GET",
				$isDisabled = !enabled
			};
		//
		return lks;
	}
};