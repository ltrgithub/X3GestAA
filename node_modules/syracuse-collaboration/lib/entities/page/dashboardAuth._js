"use strict"

var adminHelper = require("syracuse-collaboration/lib/helpers").AdminHelper;

var tracer = console.log;
var tracer = null;

exports.entity = {
	$isPersistent: false,
	$properties: {
		content: {
			$title: "Content",
			$type: "json"
		}
	},
	$functions: {
		$setId: function(_, context, id) {
			
		},
		$setParameters: function(_, context) {
			this._initialize(_, context);
			//
			this._pageId = context.instanceId;
			this._pageContext = context.parameters && context.parameters.pageContext;
		},
		$save: function(_, saveRes) {
			var pageData;
			var dashboard;
			var variant;
			var pageEntity;
			//
			pageEntity = this._db.model.getEntity("dashboardDef");
			//
			tracer && tracer("dashboardAuth: save page data for variant id: " + this._pageId);
			if(this._pageId) {
				var where = {};
				where["variants"] = this._pageId;
				dashboard = this._db.fetchInstance(_, pageEntity, {
					jsonWhere: where
				});
				variant = dashboard && dashboard.variants(_).get(_, this._pageId);
			} else {
				// for now, a dashboard MUST exist to be authored !!!
				return;
			}
			//
			pageData = variant.pageData(_);
			if(!pageData) {
				// create
				tracer && tracer("dashboardAuth: create page data for variant id: " + this._pageId);
				pageData = variant.createChild(_, "pageData");
				variant.pageData(_, pageData);
			}
			pageData.content(_, JSON.stringify(this.content(_)));
			dashboard.addRelatedInstance(pageData);
			//
			dashboard.save(_);
		}
	}
}