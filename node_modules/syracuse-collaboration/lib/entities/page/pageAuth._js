"use strict"

var adminHelper = require("syracuse-collaboration/lib/helpers").AdminHelper;

var tracer = console.log;
var tracer = null;

exports.entity = {
	$isPersistent: false,
	$properties: {
		content: {
			$title: "Content",
			$type: "json"
		}
	},
	$functions: {
		$setId: function(_, context, id) {
			
		},
		$setParameters: function(_, context) {
			this._initialize(_, context);
			//
			this._pageId = context.instanceId;
			this._pageContext = context.parameters && context.parameters.pageContext;
		},
		$save: function(_, saveRes) {
			var pageData;
			var pageDef;
			var variant;
			var pageEntity;
			//
			pageEntity = this._db.model.getEntity("pageDef");
			//
			if(this._pageId) {
				var where = {};
				where["variants"] = this._pageId;
				pageDef = this._db.fetchInstance(_, pageEntity, {
					jsonWhere: where
				});
				variant = pageDef && pageDef.variants(_).get(_, this._pageId);
			} else {
				if(this._pageContext) {
					pageDef = pageEntity.factory.createInstance(_, null, this._db);
					// pageContext is application.contract.representation.facet[.variant]
					var parts = this._pageContext.split(".");
					pageDef.facet(_, parts[3]);
					pageDef.application(_, adminHelper.getApplication(_, parts[0], parts[1]));
					pageDef.representation(_, parts[2]);
					pageDef.title(_, this._pageContext);
					// create a variant
					variant = pageDef.variants(_).add(_);
				} else
					return;
			}
			//
			pageData = variant.pageData(_);
			if(!pageData) {
				// create
				pageData = variant.createChild(_, "pageData");
				variant.pageData(_, pageData);
			}
			pageData.content(_, JSON.stringify(this.content(_)));
			pageDef.addRelatedInstance(pageData);
			//
			pageDef.save(_);
		}
	}
}