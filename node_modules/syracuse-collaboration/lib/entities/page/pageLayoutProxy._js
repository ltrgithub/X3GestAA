"use strict";

var locale = require("syracuse-core/lib/locale");
var globals = require('streamline/lib/globals');

exports.entity = {
	$isPersistent: false,
	$properties: {
		content: {
			$title: "Content",
			$type: "json"
		}
	},
	$functions: {
		getLayout: function(_, id, withCreate) {
			var self = this;
			var db = self._db;
			//
			var ids = id.split(",");
			var pIds = ids[0].split(".");
			var pageVariant = pIds[0];
			var pageId = pIds[1];
			//
			var bIds = (ids[1] && ids[1].split(".")) || [];
			var bindVariant = bIds[0];
			var bindId = bIds[1];
			//
			var layoutEnt = db.getEntity(_, "pageLayout");
			var layout = db.fetchInstance(_, layoutEnt, {
				jsonWhere: {
					page: pageId,
					binding: bindId
				}
			});
			if (!layout && withCreate) {
				var pageEnt = layoutEnt.$relations.page.getTargetEntity(pageVariant);
				var page = db.fetchInstance(_, pageEnt, pageId);
				layout = layoutEnt.createInstance(_, db);
				layout.page(_, page, pageVariant);
				if (bindVariant && bindId) {
					var bindEnt = layoutEnt.$relations.page.getTargetEntity(bindVariant);
					if (!bindEnt) throw new Error(locale.format(module, "bindEntityNotFound", bindVariant));
					var bind = db.fetchInstance(_, bindEnt, bindId);
					if (bind) layout.binding(_, bind, bindVariant);
				}
			}
			return layout;
		},
		$setId: function(_, context, id) {
			var self = this;
			// id is a composed of: "pageVariant.pageUuid[,bindVariant.bindUuid]
			self._layoutId = id;
			var layout = self.getLayout(_, id);
			//
			if (layout) self.content(_, JSON.parse(layout.content(_) || "{}"));
			else self.content(_, null);
		},
		$save: function(_, saveRes) {
			var self = this;
			//
			var layout = self.getLayout(_, self._layoutId, true);
			layout.content(_, JSON.stringify(self.content(_)));
			layout.save(_, null, {
				shallowSerialize: true
			});
			saveRes.$diagnoses = saveRes.$diagnoses || [];
			layout.getAllDiagnoses(_, saveRes.$diagnoses, {
				addEntityName: true,
				addPropName: true
			});
			// cache reset
			globals.context.session && globals.context.session.resetCache && globals.context.session.resetCache("landingPage");
		}
	}
};