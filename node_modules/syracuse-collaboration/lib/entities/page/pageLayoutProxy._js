"use strict";

var locale = require("syracuse-core/lib/locale");
var globals = require('streamline/lib/globals');

function _getLayout(_, db, id, withCreate) {
	//
	var ids = id.split(",");
	var pIds = ids[0].split(".");
	var pageVariant = pIds.shift();
	var pageId = pIds.join(".");
	//
	var bIds = (ids[1] && ids[1].split(".")) || [];
	var bindVariant = bIds[0];
	var bindId = bIds[1];
	//
	var layoutEnt = db.getEntity(_, "pageLayout");
	var filter = pageVariant === "pageContext" ? {
		pageContext: pageId,
		binding: bindId
	} : {
		page: pageId,
		binding: bindId
	};
	//
	var layout = db.fetchInstance(_, layoutEnt, {
		jsonWhere: filter
	});
	if (!layout && withCreate) {
		//
		layout = layoutEnt.createInstance(_, db);
		var page;
		switch (pageVariant) {
			case "pageContext":
				layout.pageContext(_, pageId);
				break;
			case "pageVariant":
				var pageEnt = db.getEntity(_, "pageDef");
				var pageDef = db.fetchInstance(_, pageEnt, {
					jsonWhere: {
						variants: pageId
					}
				});
				page = pageDef.variants(_).get(_, pageId);
				layout.page(_, page, pageVariant);
				break;
			default:
				var pageEnt = layoutEnt.$relations.page.getTargetEntity(pageVariant);
				page = db.fetchInstance(_, pageEnt, pageId);
				layout.page(_, page, pageVariant);
		}
		if (bindVariant && bindId) {
			var bindEnt = layoutEnt.$relations.binding.getTargetEntity(bindVariant);
			if (!bindEnt) throw new Error(locale.format(module, "bindEntityNotFound", bindVariant));
			var bind = db.fetchInstance(_, bindEnt, bindId);
			if (bind) layout.binding(_, bind, bindVariant);
		}
	}
	return layout;
}

exports.entity = {
	$isPersistent: false,
	$properties: {
		content: {
			$title: "Content",
			$type: "json"
		}
	},
	$functions: {
		$setId: function(_, context, id) {
			var self = this;
			// id is a composed of: "pageVariant.pageUuid[,bindVariant.bindUuid]
			self._layoutId = id;
			var layout = _getLayout(_, self._db, id);
			//
			if (layout) self.content(_, JSON.parse(layout.content(_) || "{}"));
			else self.content(_, null);
		},
		$save: function(_, saveRes) {
			var self = this;
			//
			var layout = _getLayout(_, self._db, self._layoutId, true);
			layout.content(_, JSON.stringify(self.content(_)));
			layout.save(_, null, {
				shallowSerialize: true
			});
			saveRes.$diagnoses = saveRes.$diagnoses || [];
			layout.getAllDiagnoses(_, saveRes.$diagnoses, {
				addEntityName: true,
				addPropName: true
			});
			// cache reset
			globals.context.session && globals.context.session.resetCache && globals.context.session.resetCache("landingPage");
		}
	},
	// global entity functions
	getLayoutContentFromId: function(_, db, id) {
		var layout = _getLayout(_, db, id);
		return layout && JSON.parse(layout.content(_));
	}
};