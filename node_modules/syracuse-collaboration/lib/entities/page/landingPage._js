"use strict";

var globals = require('streamline/lib/globals');
var sys = require("util");

exports.entity = {
	$titleTemplate: "Landing page",
	$valueTemplate: "{title}",
	$properties: {
		pageName: {
			$title: "Page name",
			$isMandatory: true,
			$pattern: "^[a-zA-Z0-9_]*$",
			$patternMessage: "Page name can only contain a to z, A to Z, 0 to 9 and _ caracters",
			$linksToDetails: true,
			$isUnique: true
		},
		title: {
			$title: "Title",
			$isMandatory: true,
			$linksToDetails: true,
			$isLocalized: true
		},
		description: {
			$title: "Description",
			$isLocalized: true
		},
		useCurrentEndpoint: {
			$title: "Use current endpoint",
			$type: "boolean",
			$isNullable: true
		}
	},
	$relations: {
		vignettes: {
			$type: "landingPageVignettes",
			$title: "Vignettes",
			$isChild: true
		},
		roles: {
			$type: "roles",
			$title: "Roles",
			$inv: "landingPages",
			$isComputed: true,
			$propagate: function(_, instance) {
				// a landing page attached to a role shouldn't be attached to a user because he shouldn't be able to modify it anymore
				instance.owner(_, null);
			}
		},
		owner: {
			$type: "user",
			$title: "User",
			$inv: "landingPages"
		}
	},
	$events: {
		$beforeSave: [
			function(_, instance, params) {
				globals.context.session && globals.context.session.resetCache && globals.context.session.resetCache("landingPage");
				// add module to origin page
				if (params && params.originUser) {
					var user = instance._db.fetchInstance(_, instance._db.getEntity(_, "user"), params.originUser);
					if (user) {
						instance.owner(_, user);
					}
				}
			}
		]
	},
};