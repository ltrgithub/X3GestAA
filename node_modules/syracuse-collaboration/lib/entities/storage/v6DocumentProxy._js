"use strict"

var jsurl = require("jsurl");
var streams = require("streamline/lib/streams/streams");

function _deleteDocument(_, v6DocUrl, headers) {
	var par = {
		url: v6DocUrl,
		method: "DELETE",
		headers: headers 
	};
	var resp = streams.httpRequest(par).end().response(_);
	try {
		var content = JSON.parse(resp.readAll(_));
		return {
			statusCode: resp.statusCode,
			$diagnoses: content && content.$diagnoses
		}
	} catch(e) {
		return {
			statusCode: 500,
			$diagnoses: [{
				$severity: "error",
				$message: e.message
			}]
		}
	}
}

exports.entity = {
	$isPersistent: false,
	$canEdit: false,
	$canDelete: false,
	$capabilities: "",
	$properties: {
		content: {
			$title: "Document",
			$type: "binary",
			$storage: function(_, instance) {
				return "x3";
			},
			$url: function(_, instance) {
				return instance._properties.v6DocUrl;
			}
		},
		parameters: {
			$isHidden: true,
			$compute: function(_, instance) {
				return jsurl.toString(instance._properties);
			}
		}
	},
	$functions: {
		$setParameters: function(_, context) {
		},
		$setId: function(_, context, id) {
			var self = this;
			var params = (context && context.parameters) || {};
			params.fileName = id;
			self._properties = params;
			self.v6DocUrl(_, params.v6DocUrl);
		}
	},
	$services: {
		deleteDocument: {
			$title: "Delete document",
			$method: "POST",
			$isMethod: true,
			$confirm: "The document will be deleted. Do you want to continue ?",
			$urlParameters: "parameters={parameters}",
			$execute: function(_, context) {
				var p = context.parameters && context.parameters.parameters && jsurl.parse(context.parameters.parameters);
				//
				return _deleteDocument(_, p.v6DocUrl, context.request.headers);
			}
		},
		transferToCollaboration: {
			$title: "Transfer to Collaboration Area",
			$method: "POST",
			$isMethod: true,
			$confirm: "The document will be transfered to the Collaboration Area and will be deleted from X3. Do you want to continue ?",
			$urlParameters: "parameters={parameters}",
			$execute: function(_, context) {
				var p = context.parameters && context.parameters.parameters && jsurl.parse(context.parameters.parameters);
				//
				//_createDocument(_, p);
				//
				return _deleteDocument(_, p, context.request.headers);
			}
		}
	}
}