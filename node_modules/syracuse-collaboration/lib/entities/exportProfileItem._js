"use strict";

var sys = require("util");
var adminHelper = require("syracuse-collaboration/lib/helpers").AdminHelper;
var locale = require("syracuse-core/lib/locale");

exports.entity = {
	$titleTemplate: "Export",
	$descriptionTemplate: "Administration data export",
	$valueTemplate: "{title}",
	$properties: {
		className: {
			$title: "Class Name",
			$isMandatory: true,
			$isUnique: true
		},
		title: {
			$title: "Title",
			$isMandatory: true
		},
		/*representation: {
			$title: "Representation",
			$isMandatory: true
		},*/
		contract :{
		$isHidden: true,
		defaultValue: "collaboration"
		},
		application: {
		$isHidden: true,
		defaultValue: "syracuse",
		
		
		},
		
		/*exportAll: {
			$title: "Export all",
			$type: "boolean"
		}*/
	},
	$relations: {
		exportedObjects: {
			$title: "Exported objects",
			// for now we must provide a type (might change later) but the real type is dynamicaly defined in className propagate
			$type: "exportProfileObjects",
			$isDynamicType: true,
		},	
		



		entityKeyAttribute: {
			$title: "Profile Item Key",
			$type: "entityAttributes",
			$isMandatory: true,
			$isChild: true,
			$select: {
				$title: "Attributes",
				$type:  "lookupEntityAttr", 
				//$type: "portlet",
				//$fieldMap: { portlet: "$uuid" }
				$fieldMap: { name: "name"},
				$parameters: "application={application}&contract={contract}&entity={className}"
				
			},
		},
			entityAttribute: {
			$title: "Profile Item Attributes",
			$type: "entityAttributes",
			$isChild: true,
			$select: {
				$title: "Attributes",
				$type:  "lookupEntityAttr", 
				$fieldMap: { name: "name" /*, title: "title", type : "attrType"*/},
				$parameters: "application={application}&contract={contract}&entity={className}"
				
			},
		},

	},
	$functions: {
		 


		$serialize: function(_) {
			// dynamicaly define the $select link
			var self = this;
			var res = self._internalSerialize(_);
			//console.log("parent is: "+sys.inspect(self._parent));
			//console.log("parent endpoint: " +sys.inspect( self._parent._data.endpoint)) ;
			//console.log("RES: "+ sys.inspect(res)) ;
			var ep = adminHelper.getEndpoint(_, {
				jsonWhere: {
					application: "{applicationName}",
					contract: "{contractName}",
					dataset: "{endpointName}"
				}
			});

			if(self._parent && self._parent._data.endpoint && self.className(_) /*&& self.representation(_)*/) {
				// get "exportedObjects" $properties node
				res.$properties = res.$properties || {};
				res.$properties.exportedObjects = res.$properties.exportedObjects || {};
				var l = res.$properties.exportedObjects.$links = res.$properties.exportedObjects.$links || {};
				l.$select = {
					$type: "application/json; vnd-sage=syracuse",
					$url: [self._parent._data.endpoint.getBaseUrl(_), self.className(_)].join("/") + "?representation=" + self.className(_) /*self.representation(_)*/ + ".$select"
				}
			}
			// 
			return res;
		}
	},
	$searchIndex: {
		$fields: ["title"]
	}
};