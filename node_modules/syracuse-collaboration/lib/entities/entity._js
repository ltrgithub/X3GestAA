"use strict";

var locale = require("syracuse-core/lib/locale");
// Meta entity containing metadata for sync protocol
exports.entity = {
	$canCreate: false,
	$canDelete: false,
	$canEdit: false,
	$properties: {
		name: {
			$title: "Entity name",
			$isMandatory: true,
			$isUnique: true,
			$linksToDetails: true
		},
		tick: {
			$title: "Tick",
			$type: "integer",
			$default: 0
		},
		conflictPriority: {
			$title: "Conflict priority",
			$type: "integer",
			$maximum: 9
		},
		endpoint: {
			$title: "Endpoint",

		},
		digest: {
			$title: "Digest",
			$type: "json"
		}
	},
	$functions: {
		makeDigest: function(_) {
			var endpoint = this.endpoint(_);
			var dig = [{
				$endpoint: endpoint,
				$tick: this.tick(_),
				$conflictPriority: this.conflictPriority(_),
				$stamp: this.$updDate

			}];
			(this.digest(_) || []).forEach(function(element) {
				dig.push(element);
			});
			return {
				$origin: endpoint,
				$resources: dig
			};
		},
		putDigest: function(_, digest) {
			for (var i = 0; i < digest.$resources.length; i++) {
				if (digest.$resources[i].$endpoint === digest.$origin) {
					var localPart = digest.$resources.splice(i, 1)[0];
					this.digest(_, digest.$resources);
					this.conflictPriority(_, 0 + localPart.$conflictPriority);
					this.tick(_, 0 + localPart.$tick);
					return;
				}
			}
			throw new Error(locale.format(module, "noOrigin", entity.name));
		}
	}
};