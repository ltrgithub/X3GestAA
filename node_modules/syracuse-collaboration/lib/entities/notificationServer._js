"use strict";

var locale = require("syracuse-core/lib/locale");
var config = require('config');
var mail = require("syracuse-email/lib/mail");
var tracer; // = console.log

exports.entity = {
	$titleTemplate: "Notification server",
	$valueTemplate: "{description}",
	$properties: {
		code: {
			$title: "Name",
			$isMandatory: true,
			$isUnique: true,
			$linksToDetails: true
		},
		description: {
			$title: "Description",
			$isLocalized: true
		},
		type: {
			$title: "Type",
			$enum: [{
				$value: "SMTP",
				$title: "SMTP"
			}],
			$default: "SMTP"
		},
		host: {
			$title: "Mail server",
			$isMandatory: true
		},
		port: {
			$title: "Port",
			$type: "integer",
			$default: 0
		},
		secureConnection: {
			$title: "Secure connection",
			$type: "boolean",
			$default: false
		},
		clientHost: {
			$title: "Client server name",
		},
		authentication: {
			$title: "Authentication",
			$default: "none",
			$enum: [{
				$value: "none",
				$title: "No authentication"
			}, {
				$value: "password",
				$title: "Authentication with user and password"
			}]
		},
		user: {
			$title: "User",
			$isHidden: function(_, instance) {
				return instance.authentication(_) !== "password";
			}
		},
		password: {
			$title: "Password",
			$isHidden: function(_, instance) {
				return instance.authentication(_) !== "password";
			}
		},
		sender: {
			$title: "Sender email",
			$format: "$email",
			$isMandatory: true
		},
		idleTime: {
			$title: "Idle time",
			$type: "integer",
			$default: 10000
		}
	},
	$relations: {},
	$functions: {
		notify: function(_, user, title, text) {
			var email = user.email(_);
			if (!email) throw new Error(locale.format(module, "noRecipient"));
			var emailOptions = {
				from: this.sender(_),
				to: email,
				subject: title,
				text: text
			};
			tracer && tracer("Notify server " + this.code(_) + " subject " + title);
			mail.sendMail(_, this, emailOptions);
			return;
		}
	}
};