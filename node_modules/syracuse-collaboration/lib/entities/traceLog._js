"use strict";

var date = require("syracuse-core/lib/types/date");
var datetime = require("syracuse-core/lib/types/datetime");
var adminHelper = require('syracuse-collaboration/lib/helpers').AdminHelper;

exports.createTraceLog = function(_, name, data) {
	var db = adminHelper.getCollaborationOrm(_);
	var entity = db.getEntity(_, "traceLog");
	var tlog = entity.createInstance(_, db);

	tlog.source(_, name);
	tlog.level(_, data.title);
	tlog.session(_, data.session);
	tlog.message(_, data.message);
	tlog.method(_, data.method);
	tlog.path(_, data.path);
	tlog.line(_, data.line);
	tlog.pos(_, data.pos);
	tlog.file(_, data.file);
	tlog.stack(_, data.stack);
	tlog.save(_);
};

exports.entity = {
	$titleTemplate: "Trace logs",
	$descriptionTemplate: "Log trace for all platform modules",
	$helpPage: "Administration-reference-Trace-logs",
	$properties: {
		source: {
			$title: "Source",
			$type: "string",
			$isMandatory: true
		},
		stamp: {
			$title: "Date/time stamp",
			$type: "datetime",
			$isMandatory: true,
			defaultValue: function(_) {
				return [datetime.now()];
			}
		},
		session: {
			$title: "Session",
			$type: "string"
		},
		level: {
			$title: "Level",
			$isMandatory: true
		},
		message: {
			$title: "Message",
			$isMandatory: true,
			$type: "string"
		},
		method: {
			$title: "Method",
			$isMandatory: false,
			$type: "string"
		},
		path: {
			$title: "Path",
			$isMandatory: false,
			$type: "string"
		},
		line: {
			$title: "Line Number",
			$isMandatory: false,
			$type: "integer"
		},
		pos: {
			$title: "Position",
			$isMandatory: false,
			$type: "integer"
		},
		file: {
			$title: "Source File",
			$isMandatory: false,
			$type: "string"
		},
		stack: {
			$title: "Stack Trace",
			$isMandatory: false,
			$type: "string"
		},
		expiration: {
			$title: "Expires",
			$type: "datetime",
			$default: datetime.fromJsDate(new Date(0))
		}
	},
	$functions: {
		$setId: function(_, context, id) {
			return;
		}
	}
};