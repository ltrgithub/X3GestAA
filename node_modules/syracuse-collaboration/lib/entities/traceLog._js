"use strict";

var date = require("syracuse-core/lib/types/date");
var datetime = require("syracuse-core/lib/types/datetime");
var adminHelper = require('syracuse-collaboration/lib/helpers').AdminHelper;

exports.createTraceLog = function(_, name, data) {
	var db = adminHelper.getCollaborationOrm(_);
	var entity = db.model.getEntity(_, "traceLog");
	var log = entity.createInstance(_, db);

	log.source(_, name);
	log.level(_, data.title);
	log.message(_, data.message);
	log.method(_, data.method);
	log.path(_, data.path);
	log.line(_, data.line);
	log.pos(_, data.pos);
	log.file(_, data.file);
	log.stack(_, data.stack);
	log.save(_);
};

exports.entity = {
	$titleTemplate: "Trace logs",
	$canCreate: false,
	$canEdit: false,
	$helpPage: "Administration-reference-Trace-logs",
	$properties: {
		source: {
			$title: "Source",
			$type: "string",
			$isMandatory: true
		},
		stamp: {
			$title: "Date/time stamp",
			$type: "datetime",
			$isMandatory: true,
			defaultValue: function(_) {
				return [datetime.now()];
			}
		},
		level: {
			$title: "Level",
			$isMandatory: true
		},
		message: {
			$title: "Message",
			$isMandatory: true,
			$type: "string"
		},
		method: {
			$title: "Method",
			$isMandatory: false,
			$type: "string"
		},
		path: {
			$title: "Path",
			$isMandatory: false,
			$type: "string"
		},
		line: {
			$title: "Line Number",
			$isMandatory: false,
			$type: "integer"
		},
		pos: {
			$title: "Position",
			$isMandatory: false,
			$type: "integer"
		},
		file: {
			$title: "Source File",
			$isMandatory: false,
			$type: "string"
		},
		stack: {
			$title: "Stack Trace",
			$isMandatory: false,
			$type: "string"
		},
		expiration: {
			$title: "Expires",
			$type: "datetime",
			$default: datetime.fromJsDate(new Date(0))
		}
	},
	$functions: {
		$setId: function(_, context, id) {
			return;
		}
	}
};