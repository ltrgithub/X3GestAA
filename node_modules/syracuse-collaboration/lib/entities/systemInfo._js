"use strict";
var child_process = require("child_process");
var streams = require("streamline/lib/streams/server/streams");

function sh(_, cmd, args) {
	try {
		var child = child_process.spawn(cmd, args);
		child.stdout.setEncoding("utf8");
		child.stderr.setEncoding("utf8")
		var resF = new streams.ReadableStream(child.stdout).readAll();
		var errF =  new streams.ReadableStream(child.stderr).readAll();
		return (resF(_) || '') + (errF(_) || '');
	} catch (ex) {
		return ex.message;
	}
}

var entity = exports.entity = {
	$titleTemplate: "System Information",
	$key: "1",
	$isPersistent: false,
	$canEdit: false,
	$canDelete: false,
	$keyPager: true,
	$isProxyClass: true,
	$properties: {
		gitBranch: {
			$title: "GIT Branch",
			$compute: function(_, instance) {
				var status = sh(_, 'git', ['status']);
				var matches = /On branch (\w+)/.exec(status);
				return (matches && matches[1]) || status;
			},
		},
		gitSHA1: {
			$title: "GIT SHA1",
			$compute: function(_, instance) {
				return sh(_, 'git', ['rev-parse', 'HEAD']);
			},
		},
		gitURL: {
			$title: "GIT URL",
			$format: "$url",
			$compute: function(_, instance) {
				return "https://github.com/Sage-ERP-X3/Syracuse/commit/" + instance.gitSHA1(_);
			},
		},
	},
	$relations: {},
	$functions: {
		$setId: function(_, context, id) {

		}
	}
}

Object.keys(process.env).sort().forEach(function(key) {
	entity.$properties[key] = {
		$title: key,
		$compute: function(_, instance) {
			return process.env[key];
		}
	}
});

