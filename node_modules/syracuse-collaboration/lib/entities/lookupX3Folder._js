"use strict";

var streams = require("streamline/lib/streams/streams");
var locale = require("syracuse-core/lib/locale");

exports.entity = {
	$isPersistent: false,
	$titleTemplate: "Folder",
	$descriptionTemplate: "Folder",
	$valueTemplate: "{name}",
	$properties: {
		name: {
			$title: "Name"
		},
		version: {
			$title: "Version"
		}
	},
	// standard functions
	$fetchInstances: function(_, context, parameters) {
		var self = this;
		// get the endpoint (working copy)
		var ep = context.httpSession[context.parameters.trackingId];
		if(!ep) throw new Error(locale.format(module, "endpointNotFound", context.parameters.trackingId));
		// get folders.json from solution web public rep.
		var x3server = ep.x3server(_);
		if(!x3server) return [];
		var url = "http://"+[(x3server.webServer(_) || x3server.serverHost(_))+":"+x3server.webServerPort(_), 
		                 "Adonix_"+ep.getSolutionName(_), "FOLDERS.json"].join("/");		
		var options = {
			url: url,
			method: "GET"
		}
		var request = streams.httpRequest(options);
		var resp = request.end().response(_);
		var items = [];
		if(resp.statusCode >= 400) {
			var error = new Error(resp.readAll(_));
			error.statusCode = resp.statusCode;
			throw error;
		} else {
			var folders = JSON.parse(resp.readAll(_));
			folders.folders.forEach_(_, function(_, folder) {
				var item = self.factory.createInstance(_, null, context.db, context);
				item.name(_, folder.name);
				item.version(_, folder.version);
				//
				items.push(item);
			});
			//
//			context.totalCount = folders.folders.length;
		}
		//
		return items;
	},
	$defaultOrder: [["name", true]]
}