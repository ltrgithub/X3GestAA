"use strict"

var dataModel = require("syracuse-orm/lib/dataModel");
var sdataRegistry = require("syracuse-sdata/lib/sdataRegistry");
var flows = require('streamline/lib/util/flows');
var helpers = require("syracuse-core/lib/helpers");
var adminHelper = require("syracuse-collaboration/lib/helpers").AdminHelper;
var locale = require("syracuse-core/lib/locale");

exports.entity = {
	$properties: {
		name: {
			$title: "Name"
		},
		title: {
			$title: "Title"
		},
		attrType: {
			$title: "Type"
		}
	},
	$fetchInstances: function(_, context, parameters) {
		var self = this;
		//
		var preliminary = [];
		var application = adminHelper.getApplication(_, context.parameters.application, context.parameters.contract);
		if(!application)
			return [];
		if(application.protocol(_) === "syracuse") {
			var contract = sdataRegistry.getContract(application.application(_), application.contract(_));
			var model = dataModel.make(contract);
			var entityName = model.singularize(context.parameters.entity);
			var entity = model.getEntity(entityName);
			entity && flows.eachKey(_, entity.$properties, function(_, key, prop) {
				var instance = self.factory.createInstance(_, null, context.db, context);
				instance.name(_, key);
				instance.title(_, prop.$title || key);
				instance.attrType(_, prop.$type);
				preliminary.push(instance);
			});
			entity && flows.eachKey(_, entity.$relations, function(_, key, prop) {
				var instance = self.factory.createInstance(_, null, context.db, context);
				instance.name(_, key);
				instance.title(_, prop.$title || key);
				instance.attrType(_, prop.$type);
				preliminary.push(instance);
			});
		}
		//
		return preliminary;
	},
	$defaultOrder: [["name", true]]
}