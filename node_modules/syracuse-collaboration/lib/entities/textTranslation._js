"use strict";

var sys = require("util");
var adminHelper = require("syracuse-collaboration/lib/helpers").AdminHelper;
var extractTexts = require("syracuse-translation/lib/resourcesExtract");
var jsurl = require("jsurl");

exports.entity = {
	$properties: {
		code: {
			$title: "Code",
			$isMandatory: true,
			$isUnique: true,
			/*$propagate: function(_, instance, val) {
				var ap = adminHelper.getCollaborationApplication(_);
				instance.application(_, ap);

			}*/
		},
		description: {
			$title: "Description",
			$linksToDetails: true,
			$isMandatory: true,
				$isUnique: true
			},
		applicationName: {
			//$isHidden: true,
			/*$compute: function(_, instance) {
				return (instance.application(_) && instance.application(_).application(_)) || "X3";
			}*/
		},
		contractName: {
			//$isHidden: true,
			/*$compute: function(_, instance) {
				return (instance.application(_) && instance.application(_).contract(_)) || "erp";
			}*/
		},
		endpointName: {
			//$isHidden: true,
			/*$compute: function(_, instance) {
				return (instance.endpoint(_) && instance.endpoint(_).dataset(_)) || "erp/X3";
			}*/
		},
		
		
	},
	$titleTemplate: "Translation",
	$descriptionTemplate: "translation syracuse messages",
	$valueTemplate: "{description}",
	$relations: {
		application: {
			$title: "Application",
			$type: "application",
			$isDefined: true,
			$isMandatory: true,
			/*defaultValue:  function(_) {
				return adminHelper.getCollaborationApplication(_);
			}*/
		},
		endpoint: {
			$title: "Endpoint",
			$type: "endPoint",
			$isMandatory: true,
			$isDefined: true,
			/*defaultValue:  function(_) {
				return adminHelper.getCollaborationEndpoint(_);
			}*/
		}
	},
	$services: {
	    textTranslation: {
			$method : "GET",
			$isMethod : true,
			$title : "Translation",
			$type: "application/x-translation",
			/*$parameters: {
				$url: "{$baseUrl}/selectExportTargets/$template/$workingCopies?representation=selectExportTarget.$edit&role={$role}",
				$method: "POST",
				$properties: {
					parameters: {
						$type: "application/x-string"
					}
				}
			},*/
			$execute : function(_, context, instance) {
				//if (!instance) return?????????
				var opt = context.parameters.parameters && jsurl.parse(context.parameters.parameters);
				console.log("**********texts translation: "/*+sys.inspect(instance)*/) ;
				/*instance.$diagnoses = instance.$diagnoses || [];
				opt.$diagnoses = instance.$diagnoses;*/
				extractTexts.extractTexts(_, instance, opt);
			}
		}
	},
	$searchIndex: {
		$fields: ["description"]
	}
};