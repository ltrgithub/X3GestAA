"use strict";

var sys = require("util");
var check = require("syracuse-license/lib/check");

exports.entity = {
	$properties: {
		description: {
			$title: "Description",
			$linksToDetails: true,
			$isLocalized: true,
			$isMandatory: true,
			
				$isUnique: true
			},
		functionProfile: {
			$title: "Function Profile"
		},
		explorer: {
			$title: "Explorer",
			$type: "graph",
			$format: "d3.nodeChart",
			$relations: {
				groups: {
					users: { $selected: false, },
				},
				badges: { $selected: false },
				securityProfile: { $selected: false },
			}
		},
	},
	$titleTemplate: "Role",
	$descriptionTemplate: "Roles allows personalized configurations for users",
	$valueTemplate: "{description}",
	$relations: {
		groups: {
			$title: "Groups",
			$type: "groups",
			$inv: "role",
			isComputed: true
		},	
		badges: {
			$title: "Badges",
			$type: "badges",
			$inv: "roles"
		},
		securityProfile: {
			$title: "Security profile",
			$type: "securityProfile",
			$inv: "roles"
		}
	},
	$events: {
		$beforeSave: [function(_, instance) { // named user check
			instance.$diagnoses = instance.$diagnoses || [];
		
			if (check.checkNamed(_, instance, instance.$diagnoses)) {
				// tell other servers about this change after saving
				instance.tmpLicenseChangeMarker = true;
			} else {
				if (instance.tmpLicenseChangeMarker) instance.tmpLicenseChangeMarker = null;
			}
		}],

		$afterSave: [function(_, instance) { // named user check
			if (instance.tmpLicenseChangeMarker) {
				check.propagateChange(_);
				instance.tmpLicenseChangeMarker = null;
			}
		}]
	},
	$searchIndex: {
		$fields: ["description", "functionProfile", "groups"]
	}
};