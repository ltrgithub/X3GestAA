"use strict";

var locale = require("syracuse-core/lib/locale");
var sys = require("util");



function _disabled(_, instance) {
	var endp = instance.endpoint(_);
	if (!endp) return true;
	return (endp.protocol(_) !== "x3");
}

exports.entity = {
	//	$signed: ["login", "endpoint"],
	$properties: {
		login: {
			$title: "User Login",
			// $isMandatory: true,
			$displayLength: 10
		}
	},
	$titleTemplate: "{user.login}",
	$relations: {
		user: {
			$type: "user",
			$inv: "endpoints"
		},
		endpoint: {
			$type: "endPoint",
			$title: "Endpoint",
			$isMandatory: true,
			$displayLength: 15
		}
	},
	$links: function(_, instance) {
		var endpoint = instance.endpoint(_);
		if (_disabled(_, instance)) {
			return {};
		}
		var url = endpoint.getBaseUrl(_).replace("/sdata/", "/trans/") + "/$sessions?f=GESAUS/2//M/" + instance.login(_);
		var result = {
			"x3user": {
				"$url": url,
				"$method": "GET",
				"$target": "blank",
				"$title": locale.format(module, "x3user")
			}
		};
		return result;
	},
	$services: {
		createUser: {
			/* $isDisabled: _disabled(_, instance), */
			$method: "POST",
			$isMethod: true,
			$title: "Create X3 user",
			$execute: function(_, context, instance) {
				var endpoint = instance.endpoint(_);
				if (_disabled(_, instance)) {
					instance.$addError(locale.format(module, "noX3Endpoint"));
					return;
				}
				var mappings = endpoint.menuProfileToRoles(_);
				if (!mappings) {
					instance.$addError(locale.format(module, "noRoles"));
					return;
				}
				var mappings = mappings.toArray(_, true);
				if (!mappings.length) {
					instance.$addError(locale.format(module, "noRoles"));
					return;
				}
				var translation = []; // corresponding $uuid of role
				translation.length = mappings.length;
				var j = mappings.length;
				while (--j >= 0) {
					translation[j] = mappings[j].role(_).$uuid;
				}
				var results = [];
				var user = instance._parent;
				// loop over the groups of the user
				var groups = user.groups(_).toArray(_, true); // do not consider instances which have been marked for deletion				
				var j = groups.length;
				while (--j >= 0) {
					var group = groups[j];
					var roleId = group.role(_).$uuid;
					var k = translation.length;
					while (--k >= 0) {
						if (translation[k] === roleId) {
							results.push(mappings[k]);
						}
					}
				};
				if (results.length === 0) {
					instance.$addError(locale.format(module, "noFitRoles"));
					return;
				} else if (results.length > 1) {
					// TODO: choose correct profession code
					console.log("Select first profession code " + results[0].professionCode(_));
				}
				var professionCode = results[0].professionCode(_);
				var login = instance.login(_);
				var orm = endpoint.getOrm(_);
				var ent = orm.getEntity(_, "ASYRAUS");
				/* not necessary
				var inst = orm.fetchInstance(_, ent, {
					jsonWhere: { "USR": login}

				});
				if (inst){
						instance.$addError(locale.format(module, "userExists", login));
						return;											
				}
				*/
				var newUser = ent.createInstance(_, orm, null);
				newUser.USR(_, login);
				newUser.ADDEML(_, instance._parent.email(_));
				var firstName = instance._parent.firstName(_);
				newUser.FIRSTNAME(_, firstName);
				var lastName = instance._parent.lastName(_);
				newUser.LASTNAME(_, lastName);
				newUser.CODMET(_, professionCode);
				newUser.save(_);
				newUser.getAllDiagnoses(_, instance.$diagnoses);
			}
		}
	}
};