"use strict";

var adminHelper = require("syracuse-collaboration/lib/helpers").AdminHelper;

exports.entity = {
	$properties: {
		lastLocaleCode: {
			$title: "Last locale code"
		},
		sitePreferences: {
			$title: "Site preferences",
			$type: "json"
		},
		lastLandingPageName: {
			$title: "Last landing page name"
		}
	},
	$relations: {
		lastRole: {
			$type: "role",
			$title: "Last selected role",
			$nullOnDelete: true
		},
		lastEndpoint: {
			$type: "endPoint",
			$title: "Last selected endpoint",
			$nullOnDelete: true
		},
		lastTheme: {
			$type: "theme",
			$title: "Last selected theme",
			$nullOnDelete: true
		},
		applicationConnections: {
			$type: "applicationConnectionItems",
			$title: "Application connections",
			$isChild: true
		}
	},
	$functions: {
		getAppConnection: function(_, ep) {
			if (!ep) return null;
			var appConnItems = this.applicationConnections(_).toArray(_).filter_(_, function(_, ac) {
				var acEp = ac.endpoint(_);
				return acEp && acEp.$uuid && acEp.$uuid === ep.$uuid;
			});
			if (appConnItems && appConnItems.length) {
				return appConnItems[0];
			}
		},
		setAppConnection: function(_, ep, proto, data) {
			if (!ep || !proto || !data) return;
			var inst = this.getAppConnection(_, ep);
			//
			if (inst) {
				if (!inst.proto(_) || inst.proto(_) !== proto) {
					proto = typeof proto === "string" ? proto : JSON.stringify(proto);
					inst.proto(_, proto);
				}
				if (!inst.data(_) || inst.data(_) !== data) {
					data = typeof data === "string" ? data : JSON.stringify(data);
					inst.data(_, data);
				}
				if (!inst.endpoint(_)) inst.endpoint(_, ep);
			} else {
				var db = adminHelper.getCollaborationOrm(_);
				inst = db.getEntity(_, "applicationConnectionItem").createInstance(_, db);
				inst.endpoint(_, ep);
				proto = typeof proto === "string" ? proto : JSON.stringify(proto);
				inst.proto(_, proto);
				data = typeof data === "string" ? data : JSON.stringify(data);
				inst.data(_, data);
			}
			//
			this.applicationConnections(_).set(_, inst);
			return inst;
		}
	}
};