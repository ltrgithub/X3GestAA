"use strict";

var locale = require("syracuse-core/lib/locale");
var globals = require('streamline/lib/globals');
var x3helper = require('syracuse-x3/lib/helpers');

var serverModules = {
	collaboration: "collaboration",
	hrm: "hrm",
	help: "help",
	search: "search",
	classicAction: "classicAction",
	classicProtocol: "classicProtocol",
	classicSession: "classicSession"
};

exports.entity = {
	$titleTemplate: "Server tracing",
	$isPersistent: false,
	$canDelete: false,
	$canCreate: false,
	$canSave: false,
	$autoRecreateWorkingCopy: true,
	$properties: {
		logErrorsToConsole: {
			$title: "Log errors to console",
			$type: "boolean",
			$isMandatory: true
		}
	},
	$relations: {
		modules: {
			$type: "traceConfigDetails",
			$isChild: true
		}
	},
	$functions: {
		$setId: function(_, context, id) {
			var self = this;
			var baseConfig = x3helper.config("traceConfig", globals.context.config);

			// Use globals to populate this list
			Object.keys(serverModules).forEach_(_, function(_, key) {
				console.log(key);
				var a_mod = self.modules(_).add(_);
				a_mod.name(_, serverModules[key]);
				a_mod.description(_, locale.format(module, serverModules[key]));
				var traceConfig = x3helper.config(serverModules[key], baseConfig);
				a_mod.enabled(_, traceConfig && traceConfig.enabled || false);
				a_mod.level(_, traceConfig && traceConfig.level || "error");
				a_mod.transport(_, traceConfig && traceConfig.transport || "console");
			});
		}
	},
	/// ## Services
	$services: {
		/// * **submit**: Apply changes
		submit: {
			$method: "POST",
			// $confirm: "This operation will change the X3 runtime configuration of all subsequent sessions.\n\nDo you want to continue ?",
			$isMethod: true,
			$title: "Submit",
			$execute: function(_, context, instance) {
				var baseConfig = x3helper.config("traceConfig", globals.context.config);

				var mods = instance.modules(_).toArray(_);
				mods.forEach_(_, function(_, mod) {
					var traceName = mod.name(_);
					var traceConfig = x3helper.config(traceName, baseConfig);
					traceConfig.enabled = mod.enabled(_);
				});
			}
		},
		reset: {
			$method: "POST",
			$isMethod: true,
			$title: "Reset",
			$execute: function(_, context, instance) {}
		}
	},
};