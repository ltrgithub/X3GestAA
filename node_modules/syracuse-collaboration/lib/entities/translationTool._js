"use strict";

var sys = require("util");
var adminHelper = require("syracuse-collaboration/lib/helpers").AdminHelper;
var translation = require("syracuse-translation/lib/translation");
var jsurl = require("jsurl");
var helpers = require("syracuse-core/lib/helpers");

exports.entity = {
	$isPersistent: false,
	$canSave: false,

	$titleTemplate: "Translation",
	$descriptionTemplate: "Translation of syracuse messages and administration data",
	$valueTemplate: "{description}",
	$relations: {
		endpoint: {
			$title: "Production environnement endpoint",
			$description: "Select the endpoint used as reference for translation teams",
			$type: "endPoint",
			$isMandatory: true,
			$isDefined: true,
			$lookupFilter: {
				protocol: "x3"
			}
		}
	},
	$services: {
		fromSyracuseToX3: {
			$method: "POST",
			$isMethod: true,
			$title: "Syracuse -> X3",
			$invocationMode: "async",
			$execute: function(_, context, instance, parameters) {
				instance.$diagnoses = instance.$diagnoses || [];
				var t = context && context.tracker;
				var d = t ? (t.$diagnoses = t.$diagnoses || []) : null;
				var options = parameters || {};
				options.$diagnoses = d;

				translation.extractResources(_, instance, options, t);
				translation.extractAdminResources(_, instance, options, t);
				translation.extractDotnetResources(_, instance, options, t);

			}
		},
		fromX3toSyracuse: {
			$method: "POST",
			$isMethod: true,
			$title: "X3 -> Syracuse",
			$invocationMode: "async",
			$execute: function(_, context, instance, parameters) {
				instance.$diagnoses = instance.$diagnoses || [];
				var t = context && context.tracker;
				var d = t ? (t.$diagnoses = t.$diagnoses || []) : null;
				var options = parameters || {};
				options.$diagnoses = d;
				translation.updateResources(_, instance, parameters, context);
				translation.updateAdminResources(_, instance, parameters, context);
				translation.updateDotnetResources(_, instance, options, context);
			}
		}
		/*,
		fromSyracuseToX3Admin: {
			$method: "POST",
			$isMethod: true,
			$title: "Admin resources, Syracuse -> X3",
			$invocationMode: "async",
			$execute: function(_, context, instance, parameters) {
				try {

					instance.$diagnoses = instance.$diagnoses || [];

					var t = context && context.tracker;
					var d = t ? (t.$diagnoses = t.$diagnoses || []) : null;
					var options = parameters || {};
					options.$diagnoses = d;
					translation.extractAdminResources(_, instance, options, t);

				} catch (e) {
					console.log("fromSyracuseToX3Admin ERROR\n" + e.stack);
				}
			}
		},
		fromX3toSyracuseAdmin: {
			$method: "POST",
			$isMethod: true,
			$title: "Admin resources, X3 -> Syracuse",
			$invocationMode: "async",
			$execute: function(_, context, instance, parameters) {
				translation.updateAdminResources(_, instance, parameters, context);
			}
		},
		fromSyracuseToX3Dotnet: {
			$method: "POST",
			$isMethod: true,
			$title: "Dotnet resources, Syracuse -> X3",
			$invocationMode: "async",
			$execute: function(_, context, instance, parameters) {
				try {

					instance.$diagnoses = instance.$diagnoses || [];

					var t = context && context.tracker;
					var d = t ? (t.$diagnoses = t.$diagnoses || []) : null;
					var options = parameters || {};
					options.$diagnoses = d;

					translation.extractDotnetResources(_, instance, options, context);
				} catch (e) {
					console.log("fromSyracuseToX3Dotnet ERROR\n" + e.stack);
				}
			}
		},
		fromX3toSyracuseDotnet: {
			$method: "POST",
			$isMethod: true,
			$title: "Dotnet resources, X3 -> Syracuse",
			$invocationMode: "async",
			$execute: function(_, context, instance, parameters) {
				try {

					instance.$diagnoses = instance.$diagnoses || [];

					var t = context && context.tracker;
					var d = t ? (t.$diagnoses = t.$diagnoses || []) : null;
					var options = parameters || {};
					options.$diagnoses = d;

					translation.updateDotnetResources(_, instance, options, context);
				} catch (e) {
					console.log("fromX3toSyracuseDotnet  ERROR\n" + e.stack);
				}
			}
		}*/
	}
};