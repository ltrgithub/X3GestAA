"use strict";

var globals = require('streamline/lib/globals');
var locale = require("syracuse-core/lib/locale");
var config = require('config'); // must be first syracuse require
var adminHelper = require("syracuse-collaboration/lib/helpers").AdminHelper;




exports.entity = {
	$isPersistent: false,
	$canSave: false,
	$titleTemplate: "X3 actions",
	$descriptionTemplate: "Administration task to schedule X3 action",
	$valueTemplate: "{action}",

	$properties: {
		action: {
			$title: "Action Name",
			$type: "string"
		}
	},
	$fetchInstances: function(_, context, parameters) {
		var facet = parameters.facet;
		var endpoint = adminHelper.getEndpoint(_, {
			dataset: parameters.ep
		});

		var dbX3 = endpoint && endpoint.getOrm(_);
		var dbAdmin = adminHelper.getCollaborationOrm(_);
		var className = parameters.class;
		var device = parameters.device;
		var entity = dbX3.getEntity(_, className, facet, device);
		var repName = parameters.rep || className;

		var prototype = entity.getPrototype(_, repName, facet, device);
		// check list of actions
		var actions = prototype && prototype.$actions;


		var model = dbAdmin.model;
		var entityAction = model.getEntity(_, "x3ClassAction");
		var arr = [];
		for (var i = 0; i < Object.keys(actions).length; i++) {
			var act = Object.keys(actions)[i];
			if (act.indexOf('$') !== 0) {
				var inst = entityAction.factory.createInstance(_, null, dbAdmin);
				inst.action(_, act);
				arr.push(inst);
			}
		}
		return arr;

	},
	$relations: {},
	$services: {}
};