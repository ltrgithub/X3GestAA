"use strict";

var importTool = require("syracuse-import/lib/jsonImport");
var adminHelper = require("syracuse-collaboration/lib/helpers").AdminHelper;
var helpers = require('syracuse-core/lib/helpers');

exports.entity = {
	$isPersistent: false,
	$canSave: false,
	$titleTemplate: "Data import assistant",
	$descriptionTemplate: "Generic import interface. Choose a file name is based in \"import\" folder.",
	$properties: {
		fileName: {
			$title: "File name"
		},
		createSession: {
			$title: "Create import session",
			$type: "boolean"
		}
	},
	$relations: {
		endpoint: {
			$title: "Endpoint",
			$type: "endPoint",
			$isMandatory: true
		}
	},
	$init: function(_, instance) {
		instance.fileName(_, "syracuse-admin-init.json");
		// init to admin endpoint
		var ep = adminHelper.getEndpoint(_, {
			application: "syracuse",
			contract: "collaboration",
			dataset: "syracuse"
		});
		if (ep) instance.endpoint(_, ep);
	},
	$functions: {
		$setParameters: function(_, context) {
			if (!this.$uuid) {
				this.$uuid = this.$key = helpers.uuid.generate();
				this.$created = true;
			}
		},
		$save: function(_, saveRes) {
			importTool.jsonImport(_, this.endpoint(_).getOrm(_), this.fileName(_), {
				importMode: "update",
				$diagnoses: saveRes.$diagnoses,
				createSession: (this.endpoint(_) && this.endpoint(_).dataset(_) === "syracuse")
			});
		}
	},
	$services: {
		import: {
			$title: "Import",
			$method: "POST",
			$isMethod: true,
			$invocationMode: "async",
			$capabilities: "abort",
			$execute: function(_, context, instance) {
				var t = context && context.tracker;
				var d = t ? (t.$diagnoses = t.$diagnoses || []) : null;
				importTool.jsonImport(_, instance.endpoint(_).getOrm(_), instance.fileName(_), {
					importMode: "update",
					$diagnoses: d,
					tracker: t,
					createSession: instance.createSession(_) && (instance.endpoint(_) && instance.endpoint(_).dataset(_) === "syracuse")
				});
			}
		}
	}
};