"use strict";

var helpers = require('syracuse-core/lib/helpers');
var locale = require("syracuse-core/lib/locale");
var util = require("util");
var globals = require('streamline/lib/globals');
var adminHelper = require("syracuse-collaboration/lib/helpers").AdminHelper;
var PrintClient = require('syracuse-x3/lib/print/client/PrintClient').PrintClient;
var forEachKey = helpers.object.forEachKey;
var nodeconfig = require('syracuse-main/lib/nodeconfig');

var config = nodeconfig.config && nodeconfig.config.x3print;
var hostname = config && config.server && config.server.hostname || "ecvmdev2003x64";
var port = config && config.server && config.server.port || 1890;

var _status = {
	99 : "unexpected error",
	98 : "unknow job",
	97 : "internal error",
	0 : "job started",
	1 : "read DB pending",
	2 : "read finished",
	3 : "read canceled",
	4 : "job stacked",
	5 : "job finished",
	6 : "job failed",
	7 : "job canceled",
}
var printClient;
function getClient(_, jobId) {
	var self = this;
	if (printClient == null) {
		printClient = new PrintClient(_, hostname, port);
	}
	return printClient;
}

function getDiagnose(severity, message) {
	return [JSON.stringify({
	    $diagnoses: [{
	        severity: "error",
	        message: message
	    }]
	})];
}

exports.entity = {
	$titleTemplate: "Print Jobs",
	$descriptionTemplate: "Name identifies a service",
	$valueTemplate: "{description}",
	$createActionTitle: "New print job",
	$listTitle: "List of print jobs",
	$properties: {
		name: {
			$title: "Name",
			$isMandatory: true,
			$linksToDetails: true,
			$isUnique: true
		},
	},
	$relations: {

	},
	$functions: {

	},
	$services: {
		getState: {
			$title: "Status",
			$description: "Get print job status",
			$method: "POST",
			$isMethod: false,
			$execute: function(_, context) {
				console.log("Tracker: "+JSON.stringify(context.tracker,null,2));
				console.log("Parameters: "+JSON.stringify(context.parameters,null,2));
				
				var res = {
						headers: {
							"content-type": "application/json"
						},
				}
				context.tracker.response.head = {
					"content-type": "application/json"
				}
				
				printClient = getClient(_);
				var jobId = context.parameters.jobId;
				var status = printClient.getState(_, jobId);
				switch(status.code) {
					case 0:
					case 1:
					case 2:
					case 3:
					case 4:
					case 5:
					case 6:
					case 7:
						res.body = getDiagnose("info", _status[status.code] + (status.message && status.message.length ? ": " + status.message : ""));
						break;
					case 97:
					case 98:
					case 99:
						res.body = getDiagnose("error", _status[status.code] + (status.message && status.message.length ? ": " + status.message : ""));
					default:
						res.body = getDiagnose("error", "Unknow status code: "+status.code);
						return res;
				}
				
				context.tracker.phase = _status[status.code];
				
				if (status.message && status.message.length !== 0)
					context.tracker.phaseDetail = status.message;
				
				return res;
			}
		},
	},
	$events: {},
	$uniqueConstraints: [["name"]]
}