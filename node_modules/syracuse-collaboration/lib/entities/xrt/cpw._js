"use strict";

var adminHelper = require("syracuse-collaboration/lib/helpers").AdminHelper;
var date = require("syracuse-core/lib/types/date");

exports.entity = {
	$isPersistent: false,
	$properties: {
		account: {
			title: "Account"
		},
		transactionType: {
			title: "Transaction type"
		},
		amount: {
			title: "Amount",
			type: "real"
		},
		date: {
			title: "Date",
			type: "date"
		}
	},
	$fetchInstances: function(_, context, parameters) {
		var self = this;
		var orm = adminHelper.getCollaborationOrm(_);
		var coll = orm.db.collection("Transaction", _);
		var start = (new Date()).getTime();
		console.log("Start: ", (new Date()));
		var datas = coll.aggregate([{
			"$match": {
				"date": {
					"$lt": new Date("2015-04-01"),
					"$gte": new Date("2015-03-01")
				},
				"account": {
					"$lte": 0,
					"$gte": 50
				},
			}
		}, {
			"$group": {
				"_id": {
					"account": "$account",
					date: "$date"
				},
				"amount": {
					"$sum": "$amount"
				}
			}
		}, {
			$sort: {
				"_id.account": 1
			}
		}], _);
		//
		console.log("Got cursor: ", (new Date()).getTime() - start);
		var results = [];
		datas.reduce_(_, function(_, prev, crt) {
			if (!prev || prev.account(_) !== "" + crt.account) {
				if (prev) results.push(prev);
				//
				prev = {};
				prev.account = crt.account;
			}
			prev["date" + ((new Date(crt.date)).getDate() - 1)] = crt.amount;
			return prev;
		}, null);
		return results;
	}
};