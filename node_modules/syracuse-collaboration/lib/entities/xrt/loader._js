"use strict";

exports.entity = {
	$isPersistent: false,
	$properties: {
		accounts: {
			$type: "integer"
		},
		transactionTypes: {
			$type: "integer"
		},
		transactions: {
			$type: "integer"
		},
		append: {
			$type: "boolean"
		}
	},
	$services: {
		generate: {
			$method: "POST",
			$isMethod: true,
			$title: "Generate",
			$invocationMode: "async",
			$capabilities: "abort",
			$execute: function(_, context, instance) {
				try {
					if (!instance.append(_)) instance._db.db.collection("Transaction").drop(_);
				} catch (e) {

				}
				var yBase = (new Date("2015-01-01")).getTime();
				var dFactor = 24 * 3600 * 1000;
				var coll = instance._db.db.collection("Transaction", _);
				var buf = [];
				for (var ii = 0; ii < instance.transactions(_); ii++) {
					if (context.tracker) {
						context.tracker.progress = Math.round(ii * 100 / instance.transactions(_));
						if (context.tracker.abortRequested) break;
					}
					if (ii !== 0 && Math.round(ii / 1000) * 1000 === ii) {
						coll.insert(buf, _);
						buf = [];
					} else {
						var date = (new Date(yBase + dFactor * Math.round(365 * Math.random())));
						buf.push({
							account: Math.round(instance.accounts(_) * Math.random()),
							transactionType: Math.round(instance.transactionTypes(_) * Math.random()),
							date: date,
							year: date.getFullYear(),
							month: date.getMonth(),
							day: date.getDay(),
							amount: Math.round(Math.random() * 100000)
						});
					}
				}
				if (buf.length) {
					coll.insert(buf, _);
					buf = [];
				}
				coll.ensureIndex("acc_tt_date", {
					account: 1,
					transactionType: 1,
					date: 1
				}, _);
				coll.ensureIndex("date", {
					date: 1
				}, _);
			}
		}
	}
};