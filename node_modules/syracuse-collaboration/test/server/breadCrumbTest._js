"use strict";

var helpers = require('syracuse-core/lib/helpers');
var locale = require('syracuse-core/lib/locale');
var jsonImport = require("syracuse-import/lib/jsonImport");

var config = require('syracuse-main/lib/nodeconfig').config; // must be first syracuse require
var navPageHelper = require("syracuse-collaboration/lib/entities/page/navPageHelper");

var adminHelper = require("syracuse-collaboration/lib/helpers").AdminHelper;
var adminTestFixtures = require("syracuse-collaboration/test/fixtures/adminTestFixtures");

locale.setCurrent(_, "en-US");

//force basic auth
config.session = config.session || {};
config.session.auth = "basic";
//no integration server
config.integrationServer = null;

helpers.pageFileStorage = false;

var tracer; // = console.log;


var port = (config.unit_test && config.unit_test.serverPort) || 3004;
var baseUrl = "http://localhost:" + port;

var done;
QUnit.module(module.id, {
	setup: function() {},
	teardown: function() {}

});



var db;
asyncTest("init server", 1, function(_) {
	//
	db = adminTestFixtures.initializeTestEnvironnement(_);
	ok(db != null, "Environnement initialized");
	//
	start();
});

asyncTest("import unit test navigation page", 2, function(_) {
	// import
	var diag = [];
	jsonImport.jsonImport(_, db, "test/syracuse-admin-navi-unittest-breadcrumb.json", {
		$diagnoses: diag
	});
	// check page here
	var page = db.fetchInstance(_, db.getEntity(_, "navigationPage"), {
		jsonWhere: {
			pageName: "home"
		}
	});
	ok(page != null, "Page found ok");
	strictEqual(page.modules(_).getLength(), 2, "Modules count ok");

	start();
});

asyncTest("Test breadcrumb generation ", function(_) {
	var date = new Date().getTime();
	var id = "syracuse.collaboration.user";
	var breadCrumb = navPageHelper.getBreadcrumb(_, date, id);

	strictEqual(JSON.stringify(breadCrumb), '[{"title":"All"},{"title":"Administration"},{"title":"Administration"},{"title":"Users"}]', "bread crumb for user ok (syracuse collaboration)");
	strictEqual(navPageHelper.hasChanged(date), false, "check updated date for menuMap");

	// unknow key
	breadCrumb = navPageHelper.getBreadcrumb(_, date, "");
	strictEqual(JSON.stringify(breadCrumb), '[]', "bread crumb for user ok (syracuse collaboration)");
	strictEqual(navPageHelper.hasChanged(date), false, "check updated date for menuMap");

	// id for erp
	id = "x3.erp.GESAUS";
	breadCrumb = navPageHelper.getBreadcrumb(_, date, id);

	strictEqual(JSON.stringify(breadCrumb), '[{"title":"All"},{"title":"Setup"},{"title":"Users"}]', "bread crumb for user ok (erp x3 endpoint)");
	strictEqual(navPageHelper.hasChanged(date), false, "check updated date for menuMap");

	id = "syracuse.collaboration.user";
	breadCrumb = navPageHelper.getBreadcrumb(_, date, id);

	strictEqual(JSON.stringify(breadCrumb), '[{"title":"All"},{"title":"Administration"},{"title":"Administration"},{"title":"Users"}]', "bread crumb for user ok (syracuse collaboration)");
	strictEqual(navPageHelper.hasChanged(date), false, "check updated date for menuMap");

	start();
});