var module = QUnit.module;
var helpers = require('syracuse-core/lib/helpers');
var uuid = helpers.uuid;
var forEachKey = helpers.object.forEachKey;
var types = require('syracuse-core/lib/types/allTypes');
var config = require('syracuse-main/lib/nodeconfig').config; // must be first syracuse require
var dataModel = require("syracuse-orm/lib/dataModel");
var registry = require("syracuse-sdata/lib/sdataRegistry");
var mongodb = require("mongodb");
var streams = require('streamline/lib/streams/streams');
var sys = require("util");
var adminHelper = require("syracuse-collaboration/lib/helpers").AdminHelper;
var jsonExport = require("syracuse-import/lib/jsonExport") ;
//
var tracer = console.log;
//var tracer = null;
//
//force basic auth
config.session = config.session || {};
config.session.auth = "basic";
helpers.pageFileStorage = false;

var adminTestFixtures = require("syracuse-collaboration/test/fixtures/adminTestFixtures");
var endPoint = adminTestFixtures.modifyCollaborationEndpoint("mongodb_admin_test");

var baseUrl = "http://localhost:3004"
var contractUrl = "/sdata/syracuse/collaboration/mongodb_admin_test/";
var port = 3004;
var acceptLanguage = "fr,fr-fr";


var cookie = "";


function getCookie(_, login, pass) {
	var response = new streams.httpRequest({
		url: baseUrl + "/syracuse-main/html/main.html",
		user: login || "guest",
		password: pass || "guest"
	}).end().response(_);
	response.readAll(_);
	strictEqual(response.statusCode, 200, "user authenticated");
	return response.headers["set-cookie"];
}

function post(_, cookie, url, data, statusCode, adminUrl) {
	var response = streams.httpRequest({
		method: "post",
		url: url.indexOf("http") == 0 ? url : baseUrl + "/sdata/syracuse/collaboration/mongodb_admin_test/" + url,
		headers: {
			"content-type": "application/json",
			cookie: cookie
		}
	}).end(JSON.stringify(data)).response(_);
	strictEqual(response.statusCode, statusCode || 201, "status verified");
	return JSON.parse(response.readAll(_));
}

function put(_, cookie, url, data, statusCode) {
	var response = streams.httpRequest({
		method: "put",
		url: url.indexOf("http") == 0 ? url : baseUrl + "/sdata/syracuse/collaboration/mongodb_admin_test/" + url,
		headers: {
			"content-type": "application/json",
			cookie: cookie
		}
	}).end(JSON.stringify(data)).response(_);
	strictEqual(response.statusCode, statusCode || 200, "status verified");
	return JSON.parse(response.readAll(_));
}

function get(_, cookie, url, statusCode, headers) {
	var head = {
		cookie: cookie
	}
	headers && forEachKey(headers, function(key, value) {
		head[key] = value;
	});
	var response = streams.httpRequest({
		method: "get",
		url: url.indexOf("http") == 0 ? url : baseUrl + "/sdata/syracuse/collaboration/mongodb_admin_test/" + url,
		headers: head
	}).end().response(_);
	strictEqual(response.statusCode, statusCode || 200, "status verified");
	var resp = response.readAll(_);
	try {
		return JSON.parse(resp);
	} catch (ex) {
		return resp;
	}
}

function del(_, cookie, url, statusCode) {
	var response = streams.httpRequest({
		method: "delete",
		url: baseUrl + "/sdata/syracuse/collaboration/mongodb_admin_test/" + url,
		headers: {
			cookie: cookie
		}
	}).end().response(_);
	strictEqual(response.statusCode, statusCode || 200, "status verified");
	return JSON.parse(response.readAll(_));
}

var doStop = false;
module("syracuseAdministrationTest", {
	setup: function() {},
	teardown: function() {
		if (doStop) {
			setTimeout(function() {
				process.kill(process.pid);
			}, 100)
		}
	}
});



asyncTest("init database", 1, function(_) {
	var server = new mongodb.Server(endPoint.datasets["mongodb_admin_test"].hostname, endPoint.datasets["mongodb_admin_test"].port, {});
	var db = new mongodb.Db(config.collaboration.dataset, server, {});
	db = db.open(_);
	db.dropDatabase(_);
	//
	ok(true, "mongodb initialized");

	start();
});

//start syracuse server
var syracuse;
//wait server initialization
asyncTest("initialize syracuse test server", 1, function(_) {
	syracuse = require('syracuse-main/lib/syracuse');
	syracuse.initializerStatus.on("initialized", function() {
		ok(true, "server initialized");
		syracuse.server.listen(null, port);
		start();
	});
});

asyncTest("export Profile Item", 12, function(_) {

	cookie = getCookie(_);
	
	var body = post(_, cookie, "exportProfileItems", {
		/*className: "applications",
		title: "Applications",
		contract : "collaboration",
		application:  "syracuse",*/
		});
		console.log("body: "+ JSON.stringify(body,null,2))  ;

		start();
	});
	


/*asyncTest("export Profile", 12, function(_) {

	cookie = getCookie(_);
	
	var body = post(_, cookie, "exportProfiles", {
		description: "Test Export Profile",
		code : "TEP",
		endpoint : {	
		}
		});
		console.log("body: "+ JSON.stringify(body,null,2))  ;
		start();
	});
	*/

	


asyncTest("stop  tests", 0, function(_) {
	doStop = true;
	start();
});


