"use strict";

var ph = require('node-phantom-simple');
var path = require("path");

exports = module.exports = Object.create(ph);

function Page() {};
var pageProto = Page.prototype;
pageProto.open = function(url, settings, _) {
	return this._obj.open(url, settings, ~_);
};
pageProto.evaluate = function(fn, _) {
	return this._obj.evaluate(fn, ~_);
};

function Phantom() {};
var phantomProto = Phantom.prototype;
phantomProto.createPage = function(_) {
	var pg = new Page();
	pg._obj = this._obj.createPage(~_);
	pg._obj.onConsoleMessage = console.log;
	pg._obj.onError = function(msg, trace) {
		var msgStack = ['ERROR: ' + msg];

		if (trace && trace.length) {
			msgStack.push('TRACE:');
			trace.forEach(function(t) {
				msgStack.push(' -> ' + t.file + ': ' + t.line + (t.function ? ' (in function "' + t.function +'")' : ''));
			});
		}
		console.error(msgStack.join('\n'));
	};
	return pg;
};
phantomProto.injectJs = function(filename, _) {
	return this._obj.injectJs(filename, ~_);
};
phantomProto.addCookie = function(cookie, _) {
	return this._obj.addCookie(cookie, _);
};
phantomProto.clearCookies = function(_) {
	return this._obj.clearCookies(~_);
};
phantomProto.deleteCookie = function(cookie, _) {
	return this._obj.deleteCookie(cookie, ~_);
};
phantomProto.set = function(property, value, _) {
	return this._obj.set(property, value, ~_);
};
phantomProto.get = function(property, _) {
	return this._obj.get(property, ~_);
};
phantomProto.exit = function(_) {
	return this._obj.exit(~_);
};
phantomProto.on = function() {
	this._obj.on.apply(this._obj, arguments);
};

exports.create = function(_, options) {
	var opt = options || {};
	if (!opt.phantomPath) opt.phantomPath = path.join(__dirname, "node_modules/phantomjs/lib/phantom/phantomjs");
	var vph = new Phantom();
	vph._obj = ph.create(~_, opt);
	vph.process = vph._obj.process;
	return vph;
};