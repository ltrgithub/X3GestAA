"use strict";

var ga = require('syracuse-analytics');
var locale = require("syracuse-core/lib/locale");

var tracer = require("syracuse-trace/lib/helper").getTracer("analytics");

exports.hitPage = function(_, context, params, options) {
	params = params || {};
	options = options || {};
		
	// title and module are mandatory
	if (!options.title || !options.module) {
		tracer.debug && tracer.debug("Do not send stats for page '" + params.id + "'");
		return;
	}
	
	// Get session information
	var session = context && (context.httpSession || context.session);

	var view, idParts = params.id && params.id.split(',');
	if (idParts.length > 0) {
		var parts = idParts[0].split('.');
		view = parts && parts[3];
	}

	// Prepare required values for hits
	var pv = ga.collect.pageview({
		v: 1, // Protocol version
		tid: "UA-63873235-1", // Tracking ID - default is following ID of property pepx3-test
		cid: session && session.getData("userID"),
		ul: locale.current.toLowerCase(),
		ua:context.request.headers['user-agent'],
		uip: session && (session.getData("requestInfo") || {}).peerAddress,
		dh: context.request.headers.host,
		dp: "/" + view,
		dt: options.item,
	}, {
		AppName: options.app,
		AppUser: options.userId,
		AppModule: options.module,
		AppPlatform: params.device,
		AppLinkTyp: options.type,
		AppFacet: options.facet,
		AppCustomiz: options.variant
	});
	
	tracer.debug && tracer.debug("Page view parameters: " + JSON.stringify(pv.params,null,2));
	ga.httpRequest(_, context, pv.query());
};