"use strict";

var helpers = require('syracuse-core/lib/helpers');
var ga = require('syracuse-analytics');
var locale = require("syracuse-core/lib/locale");
var check = require("syracuse-license/lib/check");
var patchtools = require('syracuse-patch/lib/patchtools');

var tracer = require("syracuse-trace/lib/helper").getTracer("analytics");

var _CUSTOMER_ID;
var _VERSION;

function getCustomerId() {
	if (!_CUSTOMER_ID) {
		var licenses = check.validLicenses();
		if (licenses.length > 0) {
			_CUSTOMER_ID = licenses[0].licensedTo && ((licenses[0].licensedTo.registrationNumber ? licenses[0].licensedTo.registrationNumber + " - " : "") + licenses[0].licensedTo.name);
		}
	}
	return _CUSTOMER_ID;
}

function getVersion(_) {
	var version;
	if (!_VERSION) {
		version = patchtools.readVersionFile(patchtools.BASE_DIRECTORY, _);
		if (!version) return "Unknown";
		_VERSION = version.relNumber + "-" + version.patchNumber;
	}
	return _VERSION;
}

exports.hitPage = function(_, context, params, options) {
	params = params || {};
	options = options || {};

	// title and module are mandatory
	if (!options.force && (!options.title || !options.module)) {
		tracer.debug && tracer.debug("Do not send stats for page '" + params.id + "'");
		return;
	}

	// Get session information
	var session = context && (context.httpSession || context.session);

	var view, idParts = params.id && params.id.split(',');
	if (idParts.length > 0) {
		var parts = idParts[0].split('.');
		view = parts && parts[3];
	}

	var descrMap = options.selectedEp && options.selectedEp.applicationRef(_)._data.description;
	var appName = descrMap && (descrMap["en-us"] || descrMap["fr-fr"]);


	// Prepare required values for hits
	var pv = ga.collect.pageview({
		v: 1, // Protocol version
		tid: "UA-63873235-1", // Tracking ID - default is following ID of property pepx3-test
		cid: session && session.getData("userID"),
		ul: locale.current.toLowerCase(),
		ua: context.request.headers['user-agent'],
		uip: session && (session.getData("requestInfo") || {}).peerAddress,
		dh: context.request.headers.host,
		dp: "/" + view,
		dt: options.title,
	}, {
		AppCustomer: getCustomerId(),
		AppName: appName,
		AppInternal: helpers.uuid.generate('-'),
		AppUser: options.userId,
		AppVersion: getVersion(_),
		AppModule: options.module,
		AppPlatform: params.device,
		AppLinkTyp: options.type,
		AppCustomiz: options.variant,
		AppFacet: options.facet
	});

	tracer.debug && tracer.debug("Page view parameters: " + JSON.stringify(pv.params, null, 2));
	ga.send(_, context, pv.query());
};