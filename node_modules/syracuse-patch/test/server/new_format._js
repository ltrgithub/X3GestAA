var module = QUnit.module;
var patch = require("syracuse-patch/lib/integrate");
var unit = require("syracuse-patch/test/fixtures/unit");
var fs = require("fs");
module("patch");

asyncTest("start", 0, function(_) { fs.mkdir("patchunittest", _); start(); })

asyncTest("create_text", 1, function(_) {
	patch.patch("patchunittest", __dirname+"/../fixtures/new_format_create_text.patch", {}, _);
	var errors = unit.testhash("patchunittest", { '/test.txt': '9dd83901c82306a3b6cd3b2bfb63f3f0e68fcce6' }, _);
	strictEqual(errors, "");
	start(); });

asyncTest("no_lf_at_end", 1, function(_) {
	patch.patch("patchunittest", __dirname+"/../fixtures/new_format_no_lf_at_end.patch", {}, _);
	var errors = unit.testhash("patchunittest", { '/test.txt': '5573b41b7439efe2e8464ffb8b9bf3c2ac319f94' }, _);
	strictEqual(errors, "");
	start(); });

asyncTest("changes", 1, function(_) {
	patch.patch("patchunittest", __dirname+"/../fixtures/new_format_changes.patch", {}, _);
	var errors = unit.testhash("patchunittest", { '/test.txt': '176e6b183c1d269024de4637d89ad36d79fca959' }, _);
	strictEqual(errors, "");
	start(); });

asyncTest("add_lf_at_end", 1, function(_) {
	patch.patch("patchunittest", __dirname+"/../fixtures/new_format_add_lf_at_end.patch", {}, _);
	var errors = unit.testhash("patchunittest", { '/test.txt': '9e89a7597986d94be045e55763d8994c7f370689' }, _);
	strictEqual(errors, "");
	start(); });

asyncTest("binary", 1, function(_) {
	patch.patch("patchunittest", __dirname+"/../fixtures/new_format_binary.patch", {}, _);
	var errors = unit.testhash("patchunittest", { '/asferror.bin': '48754b71f34c82de8cfc3a061d78af5d4d7c3921',
  '/test.txt': '9e89a7597986d94be045e55763d8994c7f370689' }, _);
	strictEqual(errors, "");
	start(); });

asyncTest("more_changes", 1, function(_) {
	patch.patch("patchunittest", __dirname+"/../fixtures/new_format_more_changes.patch", {}, _);
	var errors = unit.testhash("patchunittest", { '/asferror.bin': '37159e5445cbca75d46dbef3c0e82b7124f3bf1d',
  '/test.txt': 'fb0848b517a2cbb8015fdf83b44337df95c7493d' }, _);
	strictEqual(errors, "");
	start(); });

asyncTest("remove", 1, function(_) {
	patch.patch("patchunittest", __dirname+"/../fixtures/new_format_remove.patch", {}, _);
	var errors = unit.testhash("patchunittest", {}, _);
	strictEqual(errors, "");
	start(); });

asyncTest("end", 0, function(_) { unit.rmdirRec("patchunittest", _); start(); })
