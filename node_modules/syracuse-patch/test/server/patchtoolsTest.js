"use strict";
QUnit.module(module.id);
var patchtools = require("syracuse-patch/lib/patchtools");

// Test for relNumberCmp
test("relNumberCmp", 5, function(_) {
	strictEqual(patchtools.relNumberCmp("2", "11") < 0, true, "Release number 2 smaller than 11");
	strictEqual(patchtools.relNumberCmp("11.", "11") > 0, true, "Release number 11. bigger 11");
	strictEqual(patchtools.relNumberCmp("2..1", "2.1") === 0, true, "Release number 2..1 equals 2.1");
	strictEqual(patchtools.relNumberCmp("2.4.1", "3.0") < 0, true, "Release number 2.4.1 smaller than 3.0");
	strictEqual(patchtools.relNumberCmp("2..4", "2.4.0") < 0, true, "Release number 2.4 smaller than 2.4.0");
});

// test for rights elevation
test("elevate", 5, function(_) {
	strictEqual(patchtools.elevate(""), "664", "elevation of empty rights");
	strictEqual(patchtools.elevate("000"), "664", "elevation of 000 is 664");
	strictEqual(patchtools.elevate("755"), "775", "elevation of 755 is 775");
	strictEqual(patchtools.elevate("123"), "767", "elevation of 123 is 767");
	strictEqual(patchtools.elevate("1444"), "1664", "elevation of 1444 is 1664");
});