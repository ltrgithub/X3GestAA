"use strict";

var adminHelper = require("syracuse-collaboration/lib/helpers").AdminHelper;
var locale = require("syracuse-core/lib/locale");
var globals = require("streamline/lib/globals");
var hrmHelper = require('syracuse-hrm/lib/hrmHelper');

exports.$exported = true;

/// !doc
/// 
/// # HRM Site Wizard Helper  
/// This helper module facilitate installation and uninstallation needed to be able to have HRM portals links on Syracuse navigation page.  
/// To use this module do `var wizardHelper = require('syracuse-hrm/lib/wizardHelper')`.  
/// All the methods are asynchronous.  
/// 

/// 
/// -------------
/// ### install :
/// ``` javascript
/// wizardHelper.install(_, siteName, webServers, devmode);  
/// ```
/// It allows to create HRM site, menu item, menu block and menu module automatically.  
/// 
/// * `siteName` : `String` : is the name of the HRM site.  
/// * `webServers` is an array of objects that represent Safe X3 Web Servers.  
/// Each object must contain two properties :  
///     * host : `String`. The hostname of the server.   
///     * port : `Integer`. The port of the Tomcat server.  
/// 
/// ``` javascript
///    var webServers = [{  
///         host: "server_1",  
///         port: 28880  
///    }, {  
///         host: "server_2",  
///         port: 8080  
///    }];  
/// ```  
/// 
/// * `devmode` : `String` : define if severals menu items have to be created (one global and one per server ).  
/// 
exports.install = function(_, siteName, webServers, devmode) {
	var db = adminHelper.getCollaborationOrm(_);
	var selectedEp = globals.context.session.getUserProfile(_).selectedEndpoint(_);
	// Get/update or create hrmSite instance
	var options = {
		name: siteName,
		devmode: (devmode > 0),
		ep: selectedEp,
		webServers: webServers
	};
	var hrmSite = hrmHelper.getHrmSite(_, db, {
		solution: selectedEp.x3SolutionName(_),
		folder: selectedEp.x3ServerFolder(_),
		site: siteName
	});

	if (!hrmSite) {
		hrmSite = hrmHelper.createHrmSite(_, db, options);
	} else {
		hrmHelper.updateHRMSite(_, db, hrmSite, options);
	}
	return hrmSite.install(_);
};

/// 
/// -------------
/// ### uninstall :
/// ``` javascript
/// wizardHelper.uninstall(_, siteName);  
/// ```
/// It allows to remove HRM site, menu items, menu block and menu module automatically.  
/// 
/// * `siteName` : `String` : is the name of the HRM site.  
/// 
exports.uninstall = function(_, siteName) {
	var db = adminHelper.getCollaborationOrm(_);
	var selectedEp = globals.context.session.getUserProfile(_).selectedEndpoint(_);
	var hrmSite = hrmHelper.getHrmSite(_, db, {
		solution: selectedEp.x3SolutionName(_),
		folder: selectedEp.x3ServerFolder(_),
		site: siteName
	});
	var _diagnoses = hrmSite.uninstall(_);
	if (hrmSite.deleteSelf(_) === true) {
		_diagnoses.push({
			$severity: "info",
			$message: locale.format(module, "removeSiteOk", hrmSite.name(_))
		});
	} else {
		_diagnoses.push({
			$severity: "error",
			$message: locale.format(module, "removeSiteFailed", hrmSite.name(_))
		});
	}
	return _diagnoses;
};