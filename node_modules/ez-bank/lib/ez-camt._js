"use strict";
var path    = require("path");
var config  = require(path.resolve("nodelocal.js")).config || {};
var tracer  = (config.jedi && config.jedi.debug)?config.jedi.debug:null;

function Monitor() {
  var startTick = new Date();
  var tick = startTick;
  console.log("start monitoring:"+tick);
  return function(_step) {
    var newTick =new Date(); 
    console.log(_step+':'+(newTick-tick)+':'+(newTick-startTick));
    tick = newTick;
  }
}
var monitor = new Monitor();

monitor("ez-streams");
var ez = require("ez-streams");


//var path="./node_modules/ez-bank/test/fixtures/camt/camt053-voorbeeldbestand";
var path="./node_modules/ez-bank/test/fixtures/camt/camt.053.001.01-1";
var src = ez.devices.file.text.reader(path + ".xml");
var dst = ez.devices.file.text.writer(path + ".json");

//var camt53    = require(__dirname + "/camt.053.001.01.json");
var camt53 = {
    "$split": "/Document/BkToCstmrStmtV01/Stmt/Ntry",
    "$.Document.BkToCstmrStmtV01.Stmt.Ntry": {
        "RELBANK": {}
    }
};

function jsonPath(_node,_path) {
	var node = _node;
	_path.split("/").forEach(function(elt) {
		node = node[elt];
	});	
	return node;
} 

function map(_mapper) {
	tracer && tracer.log("jedi map");
	
	return function(_, _reader, _writer) {
		var recordIn;
    var recordOut;
  	while(recordIn = _reader.read(_)) {
      recordOut = recordIn;
      _writer.write(_,recordOut);
  	}
  } 
} 

monitor("transform");
var relbank  = require(__dirname + "/x3relbank.json");
var mapX3    = require(__dirname + "/camt_2_relbank.json");
var entries = src 
.transform(ez.transforms.xml.parser(camt53.$split))
.transform(map(camt53))
.transform(ez.transforms.json.formatter())
.pipe(_, dst);
monitor("end");
