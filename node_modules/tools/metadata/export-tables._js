"use strict";

exports.run = function(_, exporter) {
	var t0 = Date.now();
	var getTableColumns = exporter.getTableColumns,
		executeSql = exporter.executeSql,
		writeResource = exporter.writeResource,
		trace = exporter.trace;

	var ATABLE_COLUMNS = getTableColumns(_, "ATABLE");
	var ATABZON_COLUMNS = getTableColumns(_, "ATABZON");
	var ATABIND_COLUMNS = getTableColumns(_, "ATABIND");

	trace && trace("loading list of tables")
	var TABLE_NAMES = executeSql(_, "select CODFIC_0 from ATABLE").map(function(elt) {
		return elt.CODFIC_0;
	});

	TABLE_NAMES.forEach_(_, exporter.config.parallel || 4, function(_, name, i) {
		trace && trace((i + 1) + "/" + TABLE_NAMES.length + ": exporting table definition " + name);
		var data = executeSql(_, "select " + ATABLE_COLUMNS + " from ATABLE where CODFIC_0='" + name + "'")[0];
		data.COLUMNS = executeSql(_, "select " + ATABZON_COLUMNS.replace(/\bCODFIC_0,/, '') + //
		" from ATABZON where CODFIC_0='" + name + "' ORDER BY NUMLIG_0");
		data.INDEXES = executeSql(_, "select " + ATABIND_COLUMNS.replace(/\bCODFIC_0,/, '') + //
		" from ATABIND where CODFIC_0='" + name + "' ORDER BY NUMLIG_0");
		exporter.writeResource(!_, {
			path: exporter.moduleNames[data.MODULE_0] + "/" + (data.CODACT_0 || "STD") + "/TABLES/",
			name: data.CODFIC_0,
			data: data
		});
	});
	trace && trace(TABLE_NAMES.length + " tables exported in " + Math.round((Date.now() - t0) / 1000) + " seconds");	
}
