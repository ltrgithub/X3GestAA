"use strict";

exports.run = function(_, exporter) {
	var t0 = Date.now();
	var executeSql = exporter.executeSql,
		trace = exporter.trace;

	var ATEXTRA_COLUMNS = exporter.getTableColumns(_, "ATEXTRA").filter(function(col) {
			return col !== 'CODFIC_0';
		});

	trace && trace("loading list of texts");
	var TEXT_ELTS = executeSql(_, "select distinct CODFIC_0,LANGUE_0 from ATEXTRA");

	TEXT_ELTS.forEach_(_, exporter.config.parallel || 4, function(_, elt, i) {
		// trace && trace((i + 1) + "/" + TEXT_ELTS.length + ": exporting text definition " + elt.CODFIC_0 + " " //
		//   + elt.LANGUE_0);

		var data = executeSql(_, "select CODFIC_0,MODULE_0,CODACT_0 from ATABLE where CODFIC_0=:1", [elt.CODFIC_0 || ''])[0];
		if (!data) {
			trace && trace("WARNING! ATABLE record not found for " + elt.CODFIC_0 + " (" + elt.LANGUE_0 + ")");
			return;
		}
		data.TEXTS = executeSql(_, "select " + ATEXTRA_COLUMNS + " from ATEXTRA where CODFIC_0=:1 and" //
			+ " LANGUE_0=:2 order by ZONE_0,IDENT1_0,IDENT2_0", [elt.CODFIC_0 || '', elt.LANGUE_0 || '']);
		
		exporter.writeResource(!_, {
			path: exporter.moduleNames[data.MODULE_0] + "/" + (data.CODACT_0 || "STD") + "/TEXTS/" + elt.LANGUE_0,
			name: elt.CODFIC_0,
			data: data
		});
	});
	trace && trace(TEXT_ELTS.length + " texts exported in " + Math.round((Date.now() - t0) / 1000) + " seconds");
}
