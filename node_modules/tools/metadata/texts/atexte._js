"use strict";

var fs = require('streamline-fs');

exports.run = function(_, exporter) {
	var t0 = Date.now();
	var executeSql = exporter.executeSql,
		trace = exporter.trace;

	var ATEXTE_COLUMNS = exporter.getTableColumns(_, "ATEXTE");

	var objectTypes = ["", "DICTIONARY", "SCREENS", "OBJECTS", "DOCUMENTS", "DATATYPES", "ACTIONS", //
	  "PARAMETERS", "ACTIVITYCODES", "FUNCTIONS", "MISC", "WINDOWS", "INQUIRIES", "BATCHTASKS", //
	  "DASHBOARD", "WINDOWS", "FREE", "FREE", "FREE", "FREE", "DIMENSIONS", "REPORTS", //
		"TRANSACTIONTYPES", "STYLES", "REPORTS", "REPORTS"];
	var entities = [null, null, "screens", "objects", null, "datatypes", "actions", //
		"parameters", "activitycodes", "functions", null, "windows", "inquiries", null,  //
		null, "windows", null, null, null, null, null, "reports", //
		null, null, null, null];

	trace && trace("loading list of texts");
	var TEXT_elt = executeSql(_, "select distinct TYPOBJ_0,NOMOBJ_0,LAN_0 from ATEXTE order by TYPOBJ_0,NOMOBJ_0");

	TEXT_elt.forEach_(_, exporter.config.parallel || 4, function(_, elt, i) {
		// trace && trace((i + 1) + "/" + TEXT_elt.length + ": exporting text definition " + objectTypes[elt.TYPOBJ_0] + " " + elt.NOMOBJ_0);
		trace && trace((i + 1) + "/" + TEXT_elt.length + ": exporting text definition " //
		  + objectTypes[elt.TYPOBJ_0] + " " + elt.NOMOBJ_0 + " " + elt.LAN_0);

		var meta = null;		
		if (entities[elt.TYPOBJ_0] && fs.exists("../entities/" + entities[elt.TYPOBJ_0] + "._js")) {
			var entity = require("../entities/" + entities[elt.TYPOBJ_0]).entity;
			meta = executeSql(_,"select " +
				(entities[elt.TYPOBJ_0] === "parameters" ? "CHAPITRE_0,CODACT_0" : "MODULE_0,CODACT_0") //
				+ " from " + entity.tableName + " where " + entity.primaryKey + "='" + //
				(elt.NOMOBJ_0 ? elt.NOMOBJ_0.replace(/'/g, "") : "") + "'")[0];
		}

		var data = executeSql(_, "select " + ATEXTE_COLUMNS + " from ATEXTE where LAN_0='" + elt.LAN_0 + "'"
			+ (elt.TYPOBJ_0 ? (" and TYPOBJ_0='" + elt.TYPOBJ_0) + "'" : "") //
			+ (elt.NOMOBJ_0 ? (" and NOMOBJ_0='" + elt.NOMOBJ_0) + "'" : "") + " order by NUMERO_0, LAN_0");
		if (!data.length) return;

		exporter.writeResource(!_, {
			path: (meta ? (exporter.moduleNames[meta.MODULE_0] || (meta.CHAPITRE_0 ? ("GLOBAL/" //
				+ meta.CHAPITRE_0) : "GLOBAL") + "/" + (meta.CODACT_0 || "STD")) : "GLOBAL/STD") //
				+ "/" + (elt.TYPOBJ_0 ? objectTypes[elt.TYPOBJ_0] : "MISC") + "/" + elt.LAN_0,
      name: (meta ? elt.NOMOBJ_0 : "_ALL_"), //only want NOMOBJ as name if a real entity
			data: data
		});

	});
	trace && trace(TEXT_elt.length + " texts exported in " + Math.round((Date.now() - t0) / 1000) + " seconds");
}
