"use strict";

var fs = require('streamline-fs');

var config = require('../../../nodelocal').config;
if (!config.metadata) throw new Error("config.metadata missing");

var entities = function (_, testEntity) {
	return testEntity ? [require("./entities/" + testEntity).entity] : //
		fs.readdir(__dirname + "/entities/", _).map_(_, function(_, filename) {
			return /(.*)\.(_js)/.test(filename) ? require("./entities/" + filename).entity : null;
		}).filter(function(entity) {
			return entity != null;
		});
}

var t0 = Date.now();
var trace = config.metadata.trace;

function runExporter(_, tester) {
	var exporter = require("tools/metadata/exporter").newExporter(config.metadata);
	if (!tester) exporter.clean(_);
	exporter.init(_);

	if (tester !== "texts") {
		var entityExporter = require("tools/metadata/export-entity");
		entities(_, tester).forEach_(_, function(_, entity) {
			entityExporter.run(_, exporter, entity);
		});
	}
	if (!tester || tester === "texts") {
		var textExporter = require("tools/metadata/export-texts");
		textExporter.run(_, exporter);
	}
}

function runImporter(_) {
	var importer = require("tools/metadata/importer").newImporter(config.metadata);
	importer.init(_);
	if (!config.metadata.testEntity) importer.createTables(_);
	entities.forEach_(_, function(_, entity) {
		importer.fillTables(_, entity);
	});
}

switch (process.argv[2]) {
	case '-i':
	case '--import':
		runImporter(_);
		break;
	case '-t':
	case '--test':
		runExporter(_, process.argv[3]);
		break;
	default:
		runExporter(_);
}

trace && trace(entities.length + " resource(s) processed in " + Math.round((Date.now() - t0) / 1000) + " seconds");
