"use strict";

exports.run = function(_, exporter) {
	var t0 = Date.now();
	var getTableColumns = exporter.getTableColumns,
		executeSql = exporter.executeSql,
		writeResource = exporter.writeResource,
		trace = exporter.trace;

	var AMSK_COLUMNS = getTableColumns(_, "AMSK");
	var AMSKZON_COLUMNS = getTableColumns(_, "AMSKZON");
	var AMSKACT_COLUMNS = getTableColumns(_, "AMSKACT");
	var AMSKPAR_COLUMNS = getTableColumns(_, "AMSKPAR");

	trace && trace("loading list of tables")
	var MASK_NAMES = executeSql(_, "select CODMSK_0 from AMSK order by CODMSK_0").map(function(elt) {
		return elt.CODMSK_0;
	}).filter(function(s) {
		return "WXYZ".indexOf(s[0]) < 0;
	});

	MASK_NAMES.forEach_(_, exporter.config.parallel || 4, function(_, name, i) {
		trace && trace((i + 1) + "/" + MASK_NAMES.length + ": exporting mask definition " + name);
		var data = executeSql(_, "select " + AMSK_COLUMNS + " from AMSK where CODMSK_0='" + name + "'")[0];
		data.FIELDS = executeSql(_, "select " + AMSKZON_COLUMNS.replace(/\bCODMSK_0,/, '') + //
		" from AMSKZON where CODMSK_0='" + name + "' order by NUMLIG_0");
		data.ACTIONS = executeSql(_, "select " + AMSKACT_COLUMNS.replace(/\bCODAFF_0,/, '') + //
		" from AMSKACT where CODAFF_0='" + name + "' order by NOACT_0");
		data.PARAMS = executeSql(_, "select " + AMSKPAR_COLUMNS.replace(/\bCODAFF_0,/, '') + //
		" from AMSKPAR where CODAFF_0='" + name + "' order by CODZON_0");
		exporter.writeResource(!_, {
			path: exporter.moduleNames[data.MODULE_0] + "/" + (data.CODACT_0 || "STD") + "/MASKS/",
			name: data.CODMSK_0,
			data: data
		});
	});
	trace && trace(MASK_NAMES.length + " masks exported in " + Math.round((Date.now() - t0) / 1000) + " seconds");
}