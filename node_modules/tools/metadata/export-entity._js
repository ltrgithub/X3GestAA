"use strict";

exports.run = function(_, exporter, entity) {
	var t0 = Date.now();
	var buildExecute = exporter.buildExecute,
		trace = exporter.trace;

	var mainColumns = exporter.getTableColumns(_, entity.tableName);
	var mainKey = entity.primaryKey;
	var childrenCols = Object.keys(entity.children).reduce_(_, function(_, r, childName) {
		var child = entity.children[childName];
		r[childName] = exporter.getTableColumns(_, child.tableName).filter(function(col) {
			return col !== ((child.parentKey || mainKey) + '_0');
		}).join(',');
		return r;
	}, {});

	trace && trace(entity.title + ": loading list");
	var elts = buildExecute(_, mainKey, entity.tableName, mainKey).filter(function(s) {
		return !~entity.excludedInitials.indexOf(s[mainKey][0]);
	});

	elts.forEach_(_, exporter.config.parallel || 4, function(_, elt, i) {
		trace && trace((i + 1) + "/" + elts.length + ": exporting " + entity.title + ": " + exporter.objVals(elt));

		var data = buildExecute(_, mainColumns, entity.tableName, null, elt)[0];
		Object.keys(entity.children).forEach_(_, function(_, childName) {
			var child = entity.children[childName];
			data[childName] = buildExecute(_, childrenCols[childName], child.tableName, child.orderBy, elt, child.parentKey || mainKey);
		});
		exporter.writeResource(!_, {
			path: (exporter.moduleNames[data.MODULE] || (data.CHAPITRE ? ("CHAPTERS/" + data.CHAPITRE) : "GLOBAL")) + "/" + entity.subdir,
			name: elt[mainKey],
			data: data
		});
	});
	trace && trace(entity.title + ": " + elts.length + " resources exported in " + Math.round((Date.now() - t0) / 1000) + " seconds");
};
