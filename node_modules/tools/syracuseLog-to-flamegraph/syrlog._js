"use strict"
/*
This tools transform a log generated by the syracuse server a csv file which
can be loaded in the flamegraph online application : http://thlorenz.github.io/flamegraph/web/
*/

var ez   = require('ez-streams');

function consoleWriter() {
	var id=0;
	return ez.devices.generic.writer(function(_, item) {
		item && console.log(item);
		});
};

var fileIn	= process.argv[2];
var fileOut	= process.argv[3];
console.log("fileIn:"+fileIn);
console.log("fileOut:"+fileOut);

//var dst = consoleWriter();

var src = ez.devices.file.text.reader(fileIn); 
var dst = ez.devices.file.text.writer(fileOut);

src.transform(function(_, reader, writer) {
	var log = JSON.parse(reader.readAll(_));

	var sumDuration=function(node) {
		var total=node.duration || 0;
		node.children && node.children.forEach(function(child) {
			total += sumDuration(child);
		});
		return total;
	}

	var total = sumDuration(log);
	console.log("total:"+total);

	var write=function(_,writer,node,total,level) {
		var ident = new Array(level).join(' ');
		var duration ;
		var symbol;
		if(node.duration) {
			duration = 1000*node.duration;
			symbol = ident+node.details+" ("+duration.toFixed(2)+ " ms)";
		} else {
			duration = 0;
			symbol = ident+"MAIN ("+total.toFixed(2)+ " s)";
		}
		writer.write(_, {
			"Running Time":duration.toFixed(1)+"ms   "+((0.1*(duration/total))).toFixed(1) +"%",
			Self:1,
			"":" ",
			"Symbol Name":symbol
		});		

		node.children && node.children.forEach_(_,function(_,child) {
			write(_,writer,child,total,(level+1));
		});

	}
		
	write(_,writer,log,total,1);

})
.transform(ez.transforms.csv.formatter())
.pipe(_,dst);
