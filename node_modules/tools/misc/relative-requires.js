"use strict";
const fs = require('fs');
const fsp = require('path');

const root = fsp.join(__dirname, '../../..');

function restructureFile(file, mod, depth) {
	const oldText = fs.readFileSync(file, 'utf8');
	var newText = oldText.split('\n').map(s => s.replace(/^([^"']*)require\(["'](.*)["']\)/g, function(all, beg, p) {
		const segs1 = mod.split('/');
		const prefix = segs1.splice(0, mod[0] === '@' ? 2 : 1).join('/');
		if (p.indexOf(prefix) !== 0) return all;
		const segs2 = p.substring(prefix.length + 1).split('/');
		while (segs1[0] && segs1[0] === segs2[0]) {
			segs1.shift();
			segs2.shift();
		}
		if (segs1.length) return beg + "require('" + '../'.repeat(segs1.length) + segs2.join('/') + "')";
		else return beg + "require('./" +  segs2.join('/') + "')";
	})).join('\n');
	if (newText !== oldText) {
		console.log("saving " + file);
		fs.writeFileSync(file, newText, 'utf8');
	}
}

function restructureDir(dir, mod, depth) {
	if (!fs.existsSync(dir)) return;
	fs.readdirSync(dir).forEach(name => {
		if (name === '.git' || name === 'node_modules' || name === 'html' || name === 'js' || name === 'dist') return;
		if (/^(syracuse-ui|ui-|uml-|bundle-|npm-|scm-)/.test(name)) return;
		const f = fsp.join(dir, name);
		if (fs.lstatSync(f).isDirectory()) {
			restructureDir(f, mod ? mod + '/' + name : name, depth + 1);
		} else {
			if (/\._?[jt]s$/.test(name) && depth > 0) restructureFile(f, mod, depth);
		}
	})
}

restructureDir(fsp.join(root, 'node_modules'), '', 0);
