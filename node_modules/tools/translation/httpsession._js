"use strict";
var http = require("ez-streams").devices.http;

var acceptLanguage = "fr,fr-fr";

function create(_, baseUrl, login, pass) {
	baseUrl = baseUrl || "http://localhost:8124";
	if (baseUrl.charAt(baseUrl.length - 1) === "/") {
		baseUrl = baseUrl.substr(0, baseUrl.length - 1);
	}
	var cookie, maxlen = 400;
	login = login || "admin";
	pass = pass || "admin";

	function getCookie(_, login, pass) {
		var url = baseUrl + "/sdata";
		// console.error("getCookie on " + url);
		var req = http.client({
			url: url,
			user: login,
			password: pass
		});
		var response = req.end().response(_);
		var data = response.readAll(_);
		// console.error("set-cookie=" + response.headers["set-cookie"]);
		// console.error("=== data ===\n" + data);

		return response.headers["set-cookie"];
	}

	function post(_, url, data, options) {
		console.log("\nPOST " + url + "\n");
		options = options || {};
		var ctype = options.contentType || "text/plain;charset=utf-8";
		if (data && typeof(data) === "object") {
			ctype = "application/json;vnd.sage=syracuse; charset=utf-8";
			data = JSON.stringify(data);
		}
		var response = http.client({
			method: "post",
			url: url.indexOf("http") === 0 ? url : baseUrl + url,
			headers: {
				"content-type": ctype,
				"accept": "application/json;vnd.sage=syracuse; charset=utf-8",
				cookie: cookie
			}
		}).end(data).response(_);

		return readResp(_, response);
	}

	function put(_, url, data, options) {
		options = options || {};
		console.log("\nPUT " + url + "\n");
		// console.log(JSON.stringify(data) + "\n");
		var ctype = options.contentType || "text/plain;charset=UTF-8";
		if (data && typeof(data) === "object") {
			ctype = "application/json;vnd.sage=syracuse; charset=utf-8";
			data = JSON.stringify(data);
		}
		var headers = {
			"content-type": ctype,
			"accept": "application/json;vnd.sage=syracuse; charset=utf-8",
			"x-file-name": options.xfilename,
			cookie: cookie
		};

		if (options.debug) {
			headers["pragma"] = "debug-immediate";
		}

		var response = http.client({
			method: "put",
			url: url.indexOf("http") === 0 ? url : baseUrl + url,
			headers: headers
		}).end(data).response(_);

		return readResp(_, response);
	}

	function get(_, url, options) {
		console.log("\nGET " + url + "\n");
		options = options || {};
		var response = http.client({
			method: "get",
			url: url.indexOf("http") === 0 ? url : baseUrl + url,

			headers: {
				cookie: cookie,
				"Accept-Language": acceptLanguage,
				accept: "application/json;vnd.sage=syracuse; charset=utf-8"
			}
		}).end().response(_);
		return readResp(_, response);
	}

	function del(_, url, options) {
		console.log("\nDELETE " + url + "\n");
		var response = http.client({
			method: "delete",
			url: url.indexOf("http") === 0 ? url : baseUrl + url,

			headers: {
				cookie: cookie,
				"Accept-Language": acceptLanguage,
				accept: "application/json;vnd.sage=syracuse; charset=utf-8"
			}
		}).end().response(_);
		return readResp(_, response);
	}

	function readResp(_, response) {
		var resp = {
			status: response.status,
			headers: response.headers,
			data: response.readAll(_)
		};
		// console.log(response.headers["content-type"] + ">>>\n");
		// if (resp && resp.length > maxlen)
		// 	console.log(resp.substr(0, 3 * maxlen / 4) + "\n...\n" + resp.substr(-maxlen / 4));
		// else
		// console.log(resp);
		if (/application\/json/.exec(response.headers["content-type"]))
			resp.data = JSON.parse(resp.data);
		return resp;
	}

	function replyInError(reply) {
		var errors, r;
		if (reply.status >= 400)
			return true;
		if (reply && typeof(reply.data) === "object") {
			r = reply.data;
			if (r && r.$diagnoses) {
				errors = r.$diagnoses.filter(function(d) {
					return d.$severity === "error";
				}) || [];
				if (errors.length > 0) {
					console.error(JSON.stringify(errors));
					return true;
				}
			}
		}
		return false;
	}

	cookie = getCookie(_, login, pass);

	return {
		get: get,
		post: post,
		put: put,
		del: del,
		replyInError: replyInError,
	};
}

exports.create = create;
