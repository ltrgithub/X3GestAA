#<AdxTL>@(#)1.0.0.0 $Revision$
Local Clbfile SUITE_RESULT
SUITE_RESULT = func TESTSUITE()

Call FERME_TRACE From LECFIC
GTRACE = "QLFAR_89474_"+GACTX.USER
Call LEC_TRACE From LECFIC
End

# ---------- TEST_SUITE getbit/setbit ------------------------------
# ------------------------------------------------------------------

Funprog TESTSUITE()
Local Char RES(255)

Call TESTSUITE_START("QLFAR_89474", "QLFAR_89474") From AXUNIT

Call ADD_TESTCASE("TST_GETBIT", "Test getbit", 32) From AXUNIT
Call ADD_TESTCASE("TST_SETBIT", "Test setbit", 63) From AXUNIT

Local Clbfile  SUITE_RESULT
SUITE_RESULT = func AXUNIT.RUN_TESTSUITE("QLFAR_89474", "QLFAR_89474")
End SUITE_RESULT

Subprog TST_GETBIT( )
Local Integer A,I
Local Integer T(1..32)
#Local Tinyint T(1..32)
# 101010110101110111101100
T(1) = 0 : T(2) = 0 : T(3) = 1 : T(4) = 1 : T(5) = 0 : T(6) = 1 : T(7) = 1 : T(8) = 1
T(9) = 1 : T(10) = 0 : T(11) = 1 : T(12) = 1 : T(13) = 1 : T(14) = 0 : T(15) = 1 : T(16) = 0
T(17) = 1 : T(18) = 1 : T(19) = 0 : T(20) = 1 : T(21) = 0 : T(22) = 1 : T(23) = 0 : T(24) = 1
A = 11230700

For I=1 To 32
  Call CHECK_EQUAL( getBit(A, I), T(I) ) From AXUNIT
Next I
End


Subprog TST_SETBIT( )
Local Integer A,I

#Local Tinyint T(1..32)
Local Integer T(1..32)

A = 11230700
# 101010110101110111101100

T(1) = 0 : T(2) = 0 : T(3) = 1 : T(4) = 1 : T(5) = 0 : T(6) = 1 : T(7) = 1 : T(8) = 1
T(9) = 1 : T(10) = 0 : T(11) = 1 : T(12) = 1 : T(13) = 1 : T(14) = 0 : T(15) = 1 : T(16) = 0
T(17) = 1 : T(18) = 1 : T(19) = 0 : T(20) = 1 : T(21) = 0 : T(22) = 1 : T(23) = 0 : T(24) = 1

# setbit to 1
For I=1 To 31
  Call CHECK_EQUAL( setBit(A, I, 1), A+(!T(I)*(2^(I-1))) ) From AXUNIT
Next I

# setbit to 0
For I=1 To 32
  Call TRACE("setBit(A, I, 0):"+num$(setBit(A, I, 0))) From ASYRCOM
  Call TRACE("A-(T(I)*(2^(I-1))):"+num$(A-(T(I)*(2^(I-1))))) From ASYRCOM
  Call CHECK_EQUAL( setBit(A, I, 0), A-(T(I)*(2^(I-1))) ) From AXUNIT
Next I


End
