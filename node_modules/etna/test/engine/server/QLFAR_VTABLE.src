#<AdxTL>@(#)8.0.0.0 $Revision$
Local Clbfile RESULT
RESULT = func TESTSUITE()

Call FERME_TRACE From LECFIC
GTRACE = "QLFAR_VTABLE_"+GACTX.USER
Call LEC_TRACE From LECFIC

End

Funprog TESTSUITE()
Local Integer EX
Local Clbfile  SUITE_RESULT


Call ADD_TESTCASE("BASIC", "Basic For", 40) From AXUNIT
Call ADD_TESTCASE("ONEKEY", "For With Key one part", 120) From AXUNIT
Call ADD_TESTCASE("TWOKEY", "For With Key two parts", 40) From AXUNIT
Call ADD_TESTCASE("TWOKEYUNLIM", "For With Key two parts table unlimited", 40) From AXUNIT
Call ADD_TESTCASE("TWOKEYUNLIMWH1", "For With Key two parts table unlimited with one where", 42) From AXUNIT
Call ADD_TESTCASE("VTBREAD", "Test Read", 6) From AXUNIT


SUITE_RESULT = func AXUNIT.RUN_TESTSUITE("VTABLE", "File From Variable")
End SUITE_RESULT

$ERROR
Local Char TT(255),TT1(255)
TT=num$(errn)-errmes$(errn)
TT1=num$(EX)-errmes$(EX)
Call CHECK_EQUAL(TT, TT1) From AXUNIT
EX = 0
Resume

# ################################################################
Subprog VTBREAD( )
Local Integer TA(1..10)
Local Integer TB(1..10)
Local Char TC(25)(1..10)
Local Char TD(25)(1..10)


Local Integer I,J

For I = 1 To 10
    TA(I) = 10-I+1
    TB(I) = I
    TC(I) = "STR"+num$(I)
    TD(I) = "STR"+num$(I)
Next

Local File    (
&   Integer A,
&   Integer B,
&   Char    C(25),
&   Char    D(25))
&             From Variable
&   TA,TB,TC,TD As [ANB]

Read [ANB] First
Call CHECK_EQUAL([ANB]A, 10) From AXUNIT

Read [ANB] Last
Call CHECK_EQUAL([ANB]A, 1) From AXUNIT

Filter [ANB] Order By Key KK=[ANB]A
Read [ANB]KK=5
Call CHECK_EQUAL([ANB]A, 5) From AXUNIT

Read [ANB] First
Call CHECK_EQUAL([ANB]A, 1) From AXUNIT

Read [ANB] Last
Call CHECK_EQUAL([ANB]A, 10) From AXUNIT

Call CHECK_EQUAL("ok", "ok") From AXUNIT

Close Local File [ANB]
End

# ################################################################
Subprog BASIC
Local Integer TA(1..10)
Local Integer TB(1..10)
Local Char TC(25)(1..10)
Local Char TD(25)(1..10)


Local Integer I,J

For I = 1 To 10
    TA(I) = 10-I+1
    TB(I) = I
    TC(I) = "STR"+num$(I)
    TD(I) = "STR"+num$(I)
Next

Local File    (
&   Integer A,
&   Integer B,
&   Char    C(25),
&   Char    D(25))
&             From Variable
&   TA,TB,TC,TD As [ANB]


J = 1
For [ANB]
    Call CHECK_EQUAL(TA(J), [ANB]A) From AXUNIT
    Call CHECK_EQUAL(TB(J), [ANB]B) From AXUNIT
    Call CHECK_EQUAL(TC(J), [ANB]C) From AXUNIT
    Call CHECK_EQUAL(TD(J), [ANB]D) From AXUNIT
    J+=1
Next 


End

# ################################################################
Subprog ONEKEY
Local Integer TA(1..10)
Local Integer TB(1..10)
Local Char TC(25)(1..10)
Local Char TD(25)(1..10)


Local Integer I,J

For I = 1 To 10
    TA(I) = 10-I+1
    TB(I) = I
    TC(I) = "STR"+num$(I)
    TD(I) = "STR"+num$(I)
Next

Local File    (
&   Integer A,
&   Integer B,
&   Char    C(25),
&   Char    D(25))
&             From Variable
&   TA,TB,TC,TD As [ANB]

Filter [ANB] Order By Key KK=[ANB]A

J = 10
For [ANB]
    Call CHECK_EQUAL(TA(J), [ANB]A) From AXUNIT
    Call CHECK_EQUAL(TB(J), [ANB]B) From AXUNIT
    Call CHECK_EQUAL(TC(J), [ANB]C) From AXUNIT
    Call CHECK_EQUAL(TD(J), [ANB]D) From AXUNIT
    J-=1
Next 

Filter [ANB]
Close Local File [ANB]

Local File    (
&   Integer A,
&   Integer B,
&   Char    C(25),
&   Char    D(25))
&             From Variable
&   TA,TB,TC,TD As [ANB]  Order By Key KK=[ANB]A

J = 10
For [ANB]KK
    Call CHECK_EQUAL(TA(J), [ANB]A) From AXUNIT
    Call CHECK_EQUAL(TB(J), [ANB]B) From AXUNIT
    Call CHECK_EQUAL(TC(J), [ANB]C) From AXUNIT
    Call CHECK_EQUAL(TD(J), [ANB]D) From AXUNIT
    J-=1
Next 

Filter [ANB]
Close Local File [ANB]

Local File    (
&   Integer A,
&   Integer B,
&   Char    C(25),
&   Char    D(25))
&             From Variable
&   TA,TB,TC,TD As [ANB]  Order By A

J = 10
For [ANB]
    Call CHECK_EQUAL(TA(J), [ANB]A) From AXUNIT
    Call CHECK_EQUAL(TB(J), [ANB]B) From AXUNIT
    Call CHECK_EQUAL(TC(J), [ANB]C) From AXUNIT
    Call CHECK_EQUAL(TD(J), [ANB]D) From AXUNIT
    J-=1
Next 

End

# ################################################################
Subprog TWOKEY
Local Integer TA(1..10)
Local Integer TB(1..10)
Local Char TC(25)(1..10)
Local Char TD(25)(1..10)


Local Integer I,J

For I = 1 To 10
    TA(I) = 10-I+1
    TB(I) = I
    TC(I) = "STR"+num$(I)
    TD(I) = "STR"+num$(I)
Next

Local File    (
&   Integer A,
&   Integer B,
&   Char    C(25),
&   Char    D(25))
&             From Variable
&   TA,TB,TC,TD As [ANB]

Filter [ANB] Order By Key KK=[ANB]A;[ANB]B

J = 10
For [ANB]
    Call CHECK_EQUAL(TA(J), [ANB]A) From AXUNIT
    Call CHECK_EQUAL(TB(J), [ANB]B) From AXUNIT
    Call CHECK_EQUAL(TC(J), [ANB]C) From AXUNIT
    Call CHECK_EQUAL(TD(J), [ANB]D) From AXUNIT
    J-=1
Next 

Filter [ANB]
Close Local File [ANB]


End

# ################################################################
Subprog TWOKEYUNLIM
Local Integer TA(1..)
Local Integer TB(1..)
Local Char TC(25)(1..)
Local Char TD(25)(1..)


Local Integer I,J

For I = 1 To 10
    TA(I) = 10-I+1
    TB(I) = I
    TC(I) = "STR"+num$(I)
    TD(I) = "STR"+num$(I)
Next

Local File    (
&   Integer A,
&   Integer B,
&   Char    C(25),
&   Char    D(25))
&             From Variable
&   TA,TB,TC,TD As [ANB]

Filter [ANB] Order By Key KK=[ANB]A;[ANB]B

J = 10
For [ANB]
    Call CHECK_EQUAL(TA(J), [ANB]A) From AXUNIT
    Call CHECK_EQUAL(TB(J), [ANB]B) From AXUNIT
    Call CHECK_EQUAL(TC(J), [ANB]C) From AXUNIT
    Call CHECK_EQUAL(TD(J), [ANB]D) From AXUNIT
    J-=1
Next 

Filter [ANB]
Close Local File [ANB]


End

# ################################################################
Subprog TWOKEYUNLIMWH1
Local Integer TA(1..)
Local Integer TB(1..)
Local Char TC(25)(1..)
Local Char TD(25)(1..)


Local Integer I,J,N

For I = 1 To 10
    TA(I) = 10-I+1
    TB(I) = I
    TC(I) = "STR"+num$(I)
    TD(I) = "STR"+num$(I)
Next

Local File    (
&   Integer A,
&   Integer B,
&   Char    C(25),
&   Char    D(25))
&             From Variable
&   TA,TB,TC,TD As [ANB] 

Filter [ANB] Where A <= 5 Order By Key KK=[ANB]A;[ANB]B

J = 10
N = 0
For [ANB]
    Call CHECK_EQUAL(TA(J), [ANB]A) From AXUNIT
    Call CHECK_EQUAL(TB(J), [ANB]B) From AXUNIT
    Call CHECK_EQUAL(TC(J), [ANB]C) From AXUNIT
    Call CHECK_EQUAL(TD(J), [ANB]D) From AXUNIT
    J-=1
    N+=1
Next 
Call CHECK_EQUAL(N, 5) From AXUNIT

Filter [ANB]
Close Local File [ANB]

Local File    (
&   Integer A,
&   Integer B,
&   Char    C(25),
&   Char    D(25))
&             From Variable
&   TA,TB,TC,TD As [ANB] Where A <= 5

Filter [ANB] Order By Key KK=[ANB]A;[ANB]B

J = 10
N = 0
For [ANB]
    Call CHECK_EQUAL(TA(J), [ANB]A) From AXUNIT
    Call CHECK_EQUAL(TB(J), [ANB]B) From AXUNIT
    Call CHECK_EQUAL(TC(J), [ANB]C) From AXUNIT
    Call CHECK_EQUAL(TD(J), [ANB]D) From AXUNIT
    J-=1
    N+=1
Next 
Call CHECK_EQUAL(N, 5) From AXUNIT

Filter [ANB]
Close Local File [ANB]



End

