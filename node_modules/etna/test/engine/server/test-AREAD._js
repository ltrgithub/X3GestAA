"use strict";
QUnit.module(module.id);

var glob = require('streamline/lib/globals');
var runtime = require("etna/lib/engine/runtime/runtime");
var helper = require("etna/test/engine/fixtures/helper");

var script;
var superv;

function nanos(hr) {
	return hr[0] * 1e9 + hr[1];
}

asyncTest("start", (_) => {
	var supervisor = require('etna/lib/supervisor/supervisor');
	var config = require("etna/lib/util/nodeconfig").config;
	var etnaConfig = helper.getEtnaConfigForUnitTest(_, config.unit_test.etnaEndPoint);
	superv = supervisor.create(_, etnaConfig);
	require("etna/lib/engine/runtime/variables").initStack(superv);
	require("etna/lib/supervisor/builtins/ACTX").init(_, etnaConfig.session, superv);
	ok(true, "start");
	start();
});


asyncTest("TC_AREAD", (_) => {
	ok(true, "TC_AREAD 0");
	var superv = glob.context.x3frame.context.superv;
	var instance = superv.newInstance(_, "ADOPAR");
	instance.AREAD(_, "SUP", "FMTDAT");

	var chapitre = instance.get(_, "CHAPITRE");
	strictEqual(chapitre, "SUP");

	var max = 100;
	var hrtime = process.hrtime();
	for (var i = 0; i < max; i++) {
		instance.AREAD(_, "SUP", "FMTDAT");
	}
	var diff = process.hrtime(hrtime);
	ok(true, "AREAD=" + Math.floor(nanos(diff) / max) + " ns, " + Math.floor(nanos(diff) / (1e3 * max)) + " us, " + Math.floor(nanos(diff) / (1e6 * max)) + " ms");

	start();
});
