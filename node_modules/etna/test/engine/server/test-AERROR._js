"use strict";
QUnit.module(module.id);

var glob = require('streamline/lib/globals');
var runtime = require("etna/lib/engine/runtime/runtime");
var helper = require("etna/test/engine/fixtures/helper");
var constants = require("etna/lib/supervisor/constants");

var script;
var superv;

function nanos(hr) {
	return hr[0] * 1e9 + hr[1];
}

asyncTest("start", _ => {
	var supervisor = require('etna/lib/supervisor/supervisor');
	var config = require("etna/lib/util/nodeconfig").config;
	var etnaConfig = helper.getEtnaConfigForUnitTest(_, config.unit_test.etnaEndPoint);
	superv = supervisor.create(_, etnaConfig);
	require("etna/lib/engine/runtime/variables").initStack(superv);
	require("etna/lib/supervisor/builtins/ACTX").init(_, etnaConfig.session, superv);
	ok(true, "start");
	start();
});


asyncTest("TC_AERROR", _ => {
	ok(true, "TC_AERROR 0");
	var superv = glob.context.x3frame.context.superv;
	var instance = superv.newInstance(_, "ADOPAR");
	instance.AREAD(_, "SUP", "FMTDAT");

	var chapitre = instance.get(_, "CHAPITRE");
	strictEqual(chapitre, "SUP");

	instance.ASETERROR(_, "CHAPITRE", "Celine DION sings AC/DC", constants.CST_AERROR);
	instance.ASETERROR(_, "PARAM", "The Cure remix", constants.CST_AERROR);
	instance.ASETERROR(_, "CHAPITRE", "Neil Young new EP", constants.CST_AOK);
	instance.ASETERROR(_, "", "Liam Gallagher drunk", constants.CST_AOK);
	instance.ASETERROR(_, "CHAPITRE", "Pixies new bass player", constants.CST_AOK);

	var err = instance.getDiagnoses(_);
	strictEqual(err[0].get(_, "MES"), "Celine DION sings AC/DC");
	strictEqual(err[1].get(_, "MES"), "The Cure remix");
	strictEqual(err[2].get(_, "MES"), "Neil Young new EP");
	strictEqual(err[3].get(_, "MES"), "Liam Gallagher drunk");
	strictEqual(err[4].get(_, "MES"), "Pixies new bass player");

	// collections
	var instance_c1 = superv.newInstance(_, "AQCCOL01");
	instance_c1.set(_, "KEY1", "TEST1");
	instance_c1.set(_, "FIELD1", "Header");

	var ln = instance_c1.ADDLINE(_, "LINCOL", constants.CST_ALASTPOS);
	var instance_c2_0 = instance_c1.get(_, "LINCOL").getChildren()[ln - 1];

	instance_c2_0.set(_, "KEY1", "TEST1");
	instance_c2_0.set(_, "LINNO", 1);
	instance_c2_0.set(_, "LINFLD", "Line1");

	var ln = instance_c1.ADDLINE(_, "LINCOL", constants.CST_ALASTPOS);
	var instance_c2_1 = instance_c1.get(_, "LINCOL").getChildren()[ln - 1];

	instance_c2_1.set(_, "KEY1", "TEST2");
	instance_c2_1.set(_, "LINNO", 2);
	instance_c2_1.set(_, "LINFLD", "Line2");

	instance_c1.ASETERRORCAT(_, "FIELD1", "Celine DION sings AC/DC", constants.CST_AERROR, 5);
	instance_c1.ASETERRORCAT(_, "", "Elvis Alive", constants.CST_AFATAL, 6);
	instance_c2_0.ASETERRORCAT(_, "KEY1", "The Cure remix", constants.CST_AERROR, 7);
	instance_c2_1.ASETERROR(_, "LINNO", "Neil Young new EP", constants.CST_AOK);
	instance_c2_0.ASETERROR(_, "", "Liam Gallagher drunk", constants.CST_AOK);
	instance_c2_0.ASETERROR(_, "KEY1", "BB King dead", constants.CST_AFATAL);
	instance_c2_1.ASETERROR(_, "LINNO", "Pixies new bass player", constants.CST_AOK);

	// I want all errors
	var args = [];
	var status = instance_c1.ASEARCHINFOS(_, constants.CST_ALL, "", constants.CST_AFATAL, 0);
	strictEqual(status, constants.CST_AOK);

	do {
		status = instance_c1.xmetAGETNEXTINFOS(_, args);
	} while ((status === constants.CST_AOK) && (args[0] === constants.CST_AINFO));

	strictEqual(status, constants.CST_AOK);
	strictEqual(args[0], constants.CST_AERROR);
	strictEqual(args[1], "FIELD1");
	strictEqual(args[2], "Zone");
	strictEqual(args[3], "Celine DION sings AC/DC");
	strictEqual(args[4], 5);
	strictEqual(args[5], "");

	status = instance_c1.xmetAGETNEXTINFOS(_, args);
	strictEqual(status, constants.CST_AOK);
	strictEqual(args[0], constants.CST_AFATAL);
	strictEqual(args[1], "");
	strictEqual(args[2], "");
	strictEqual(args[3], "Elvis Alive");
	strictEqual(args[4], 6);
	strictEqual(args[5], "");

	status = instance_c1.xmetAGETNEXTINFOS(_, args);
	strictEqual(status, constants.CST_AOK);
	strictEqual(args[0], constants.CST_AERROR);
	strictEqual(args[1], "LINCOL(1).KEY1");
	strictEqual(args[2], "Clé");
	strictEqual(args[3], "The Cure remix");
	strictEqual(args[4], 7);
	strictEqual(args[5], "");

	status = instance_c1.xmetAGETNEXTINFOS(_, args);
	strictEqual(status, constants.CST_AOK);
	strictEqual(args[0], constants.CST_AOK);
	strictEqual(args[1], "LINCOL(2).LINNO");
	strictEqual(args[2], "Ligne");
	strictEqual(args[3], "Neil Young new EP");
	strictEqual(args[4], 0);
	strictEqual(args[5], "");

	status = instance_c1.xmetAGETNEXTINFOS(_, args);
	strictEqual(status, constants.CST_AOK);
	strictEqual(args[0], constants.CST_AOK);
	strictEqual(args[1], "LINCOL(1)");
	strictEqual(args[2], "");
	strictEqual(args[3], "Liam Gallagher drunk");
	strictEqual(args[4], 0);
	strictEqual(args[5], "");

	status = instance_c1.xmetAGETNEXTINFOS(_, args);
	strictEqual(status, constants.CST_AOK);
	strictEqual(args[0], constants.CST_AFATAL);
	strictEqual(args[1], "LINCOL(1).KEY1");
	strictEqual(args[2], "Clé");
	strictEqual(args[3], "BB King dead");
	strictEqual(args[4], 0);
	strictEqual(args[5], "");

	status = instance_c1.xmetAGETNEXTINFOS(_, args);
	strictEqual(status, constants.CST_AOK);
	strictEqual(args[0], constants.CST_AOK);
	strictEqual(args[1], "LINCOL(2).LINNO");
	strictEqual(args[2], "Ligne");
	strictEqual(args[3], "Pixies new bass player");
	strictEqual(args[4], 0);
	strictEqual(args[5], "");

	status = instance_c1.xmetAGETNEXTINFOS(_, args);
	//notStrictEqual(status, constants.CST_AOK);

	var maxSeverityAll = instance_c1.AGETMAXERRORALL(_);
	strictEqual(maxSeverityAll, constants.CST_AFATAL);

	var maxSeverity = instance_c1.AGETMAXERROR(_);
	strictEqual(maxSeverity, constants.CST_AFATAL);

	var args = [constants.CST_ALL];

	status = instance_c1.xmetAGETMAXERRORTXT(_, args);
	strictEqual(status, constants.CST_AOK);
	strictEqual(args[1], ""); // No PRO
	strictEqual(args[2], constants.CST_AFATAL);
	strictEqual(args[3], ""); // No Label
	strictEqual(args[4], "Elvis Alive");
	strictEqual(args[5], 6);
	strictEqual(args[6], "");


	var instance_c3 = superv.newInstance(_, "AQCCOL01");
	instance_c3.set(_, "KEY1", "TEST3");
	instance_c3.set(_, "FIELD1", "Header3");

	instance_c3.ASETERRORCAT(_, "FIELD1", "Lemmy Kilmister heart attack", constants.CST_AERROR, 5);
	instance_c3.ASETERRORCAT(_, "", "Telephone come back", constants.CST_AFATAL, 6);

	status = instance_c3.AGETERRORSFROM(_, instance_c1, "Instance1 Env");
	strictEqual(status, constants.CST_AOK);


	// I want all errors
	var args = [];
	var status = instance_c3.ASEARCHINFOS(_, constants.CST_ALL, "", constants.CST_AFATAL, 0);
	strictEqual(status, constants.CST_AOK);

	do {
		status = instance_c3.xmetAGETNEXTINFOS(_, args);
	} while ((status === constants.CST_AOK) && (args[0] === constants.CST_AINFO));
	strictEqual(status, constants.CST_AOK);
	strictEqual(args[0], constants.CST_AERROR);
	strictEqual(args[1], "FIELD1");
	strictEqual(args[2], "Zone");
	strictEqual(args[3], "Celine DION sings AC/DC");
	strictEqual(args[4], 5);
	strictEqual(args[5], "Instance1 Env");

	status = instance_c3.xmetAGETNEXTINFOS(_, args);
	strictEqual(status, constants.CST_AOK);
	strictEqual(args[0], constants.CST_AFATAL);
	strictEqual(args[1], "");
	strictEqual(args[2], "");
	strictEqual(args[3], "Elvis Alive");
	strictEqual(args[4], 6);
	strictEqual(args[5], "Instance1 Env");

	status = instance_c3.xmetAGETNEXTINFOS(_, args);
	strictEqual(status, constants.CST_AOK);
	strictEqual(args[0], constants.CST_AERROR);
	strictEqual(args[1], "LINCOL(1).KEY1");
	strictEqual(args[2], "Clé");
	strictEqual(args[3], "The Cure remix");
	strictEqual(args[4], 7);
	strictEqual(args[5], "Instance1 Env");

	status = instance_c3.xmetAGETNEXTINFOS(_, args);
	strictEqual(status, constants.CST_AOK);
	strictEqual(args[0], constants.CST_AOK);
	strictEqual(args[1], "LINCOL(2).LINNO");
	strictEqual(args[2], "Ligne");
	strictEqual(args[3], "Neil Young new EP");
	strictEqual(args[4], 0);
	strictEqual(args[5], "Instance1 Env");

	status = instance_c3.xmetAGETNEXTINFOS(_, args);
	strictEqual(status, constants.CST_AOK);
	strictEqual(args[0], constants.CST_AOK);
	strictEqual(args[1], "LINCOL(1)");
	strictEqual(args[2], "");
	strictEqual(args[3], "Liam Gallagher drunk");
	strictEqual(args[4], 0);
	strictEqual(args[5], "Instance1 Env");

	status = instance_c3.xmetAGETNEXTINFOS(_, args);
	strictEqual(status, constants.CST_AOK);
	strictEqual(args[0], constants.CST_AFATAL);
	strictEqual(args[1], "LINCOL(1).KEY1");
	strictEqual(args[2], "Clé");
	strictEqual(args[3], "BB King dead");
	strictEqual(args[4], 0);
	strictEqual(args[5], "Instance1 Env");

	status = instance_c3.xmetAGETNEXTINFOS(_, args);
	strictEqual(status, constants.CST_AOK);
	strictEqual(args[0], constants.CST_AOK);
	strictEqual(args[1], "LINCOL(2).LINNO");
	strictEqual(args[2], "Ligne");
	strictEqual(args[3], "Pixies new bass player");
	strictEqual(args[4], 0);
	strictEqual(args[5], "Instance1 Env");

	do {
		status = instance_c3.xmetAGETNEXTINFOS(_, args);
	} while ((status === constants.CST_AOK) && (args[0] === constants.CST_AINFO));

	strictEqual(status, constants.CST_AOK);
	strictEqual(args[0], constants.CST_AERROR);
	strictEqual(args[1], "FIELD1");
	strictEqual(args[2], "Zone");
	strictEqual(args[3], "Lemmy Kilmister heart attack");
	strictEqual(args[4], 5);
	strictEqual(args[5], "");

	status = instance_c3.xmetAGETNEXTINFOS(_, args);
	strictEqual(status, constants.CST_AOK);
	strictEqual(args[0], constants.CST_AFATAL);
	strictEqual(args[1], "");
	strictEqual(args[2], "");
	strictEqual(args[3], "Telephone come back");
	strictEqual(args[4], 6);
	strictEqual(args[5], "");

	status = instance_c3.xmetAGETNEXTINFOS(_, args);


	// filter on STATUS
	// ########################
	status = instance_c3.ASEARCHINFOS(_, constants.CST_ALL, "", constants.CST_AFATAL, 1);
	strictEqual(status, constants.CST_AOK);


	status = instance_c3.xmetAGETNEXTINFOS(_, args);
	strictEqual(status, constants.CST_AOK);
	strictEqual(args[0], constants.CST_AFATAL);
	strictEqual(args[1], "");
	strictEqual(args[2], "");
	strictEqual(args[3], "Elvis Alive");
	strictEqual(args[4], 6);
	strictEqual(args[5], "Instance1 Env");

	status = instance_c3.xmetAGETNEXTINFOS(_, args);
	strictEqual(status, constants.CST_AOK);
	strictEqual(args[0], constants.CST_AFATAL);
	strictEqual(args[1], "LINCOL(1).KEY1");
	strictEqual(args[2], "Clé");
	strictEqual(args[3], "BB King dead");
	strictEqual(args[4], 0);
	strictEqual(args[5], "Instance1 Env");

	status = instance_c3.xmetAGETNEXTINFOS(_, args);
	strictEqual(status, constants.CST_AOK);
	strictEqual(args[0], constants.CST_AFATAL);
	strictEqual(args[1], "");
	strictEqual(args[2], "");
	strictEqual(args[3], "Telephone come back");
	strictEqual(args[4], 6);
	strictEqual(args[5], "");

	status = instance_c3.xmetAGETNEXTINFOS(_, args);

	// filter on PROPERTY
	// ########################
	status = instance_c3.ASEARCHINFOS(_, constants.CST_ACURRENT, "FIELD1", constants.CST_AFATAL, 0);
	strictEqual(status, constants.CST_AOK);

	status = instance_c3.xmetAGETNEXTINFOS(_, args);
	strictEqual(status, constants.CST_AOK);
	strictEqual(args[0], constants.CST_AERROR);
	strictEqual(args[1], "FIELD1");
	strictEqual(args[2], "Zone");
	strictEqual(args[3], "Celine DION sings AC/DC");
	strictEqual(args[4], 5);
	strictEqual(args[5], "Instance1 Env");

	status = instance_c3.xmetAGETNEXTINFOS(_, args);
	strictEqual(status, constants.CST_AOK);
	strictEqual(args[0], constants.CST_AERROR);
	strictEqual(args[1], "FIELD1");
	strictEqual(args[2], "Zone");
	strictEqual(args[3], "Lemmy Kilmister heart attack");
	strictEqual(args[4], 5);
	strictEqual(args[5], "");

	status = instance_c3.xmetAGETNEXTINFOS(_, args);

	status = instance_c2_0.ADELETEERROR(_, "KEY1");
	strictEqual(status, constants.CST_AOK);
	status = instance_c1.ADELETEERRORALL(_);
	strictEqual(status, constants.CST_AOK);

	var max = 100;
	var hrtime = process.hrtime();
	for (var i = 0; i < max; i++) {
		instance.AREAD(_, "SUP", "FMTDAT");
	}
	var diff = process.hrtime(hrtime);
	ok(true, "AREAD=" + Math.floor(nanos(diff) / max) + " ns, " + Math.floor(nanos(diff) / (1e3 * max)) + " us, " + Math.floor(nanos(diff) / (1e6 * max)) + " ms");

	start();
});
