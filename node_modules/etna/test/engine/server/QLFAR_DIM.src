Local Clbfile RESULT
RESULT=func TESTSUITE()
Call FERME_TRACE From LECFIC
GTRACE = "QLFAR_DIM_"+GACTX.USER
Call LEC_TRACE From LECFIC
End


#**
#* The main entry point of the unit test suite for Requirement 69072
#*

Funprog TESTSUITE()
Call ADD_TESTCASE("TC_DECL", "DECL: declaration", 12) From AXUNIT
Call ADD_TESTCASE("TC_SUBPROG", "SUBPROG: Pass array", 5) From AXUNIT
Call ADD_TESTCASE("TC_DELA", "'DELA' - Delete row", 2) From AXUNIT
Call ADD_TESTCASE("TC_INSA", "'INSA' - Insert row", 2) From AXUNIT
Call ADD_TESTCASE("TC_SORTA", "'SORTA' - Sort a dimensioned variable",2) From AXUNIT
Call ADD_TESTCASE("TC_EVALUE", "'EVALUE",4) From AXUNIT
End func AXUNIT.RUN_TESTSUITE("REQ-69072", "DATE GMT")

$ERROR
Call CHECK_EQUAL(errn, EX) From AXUNIT
EX = 0
Resume

Subprog TC_DECL
Integer EX
Onerrgo ERROR
Local Date MY_DATE
Local Integer MY_INT(0)
Local Integer MY_INT1(1)
Local Integer MY_INT2(12)
Local Integer MY_INT3(1..15)
Local Integer MY_INT4(1..)
Local Integer MY_INT5(-1000..1000)

Call CHECK_NOTEQUAL(dim(MY_DATE),-1) From AXUNIT

Call CHECK_EQUAL(dim(MY_INT),0) From AXUNIT
Call CHECK_EQUAL(dim(MY_INT1),1) From AXUNIT
Call CHECK_EQUAL(dim(MY_INT2),12) From AXUNIT
Call CHECK_EQUAL(dim(MY_INT3),15) From AXUNIT
Call CHECK_EQUAL(dim(MY_INT4),32767) From AXUNIT
Call CHECK_EQUAL(dim(MY_INT5),2001) From AXUNIT

Local Integer I,J
I=50
J=75
Local Integer MY_INT6(0..I)
Call CHECK_EQUAL(dim(MY_INT6),I+1) From AXUNIT

Local Integer MY_INT7(I)
Call CHECK_EQUAL(dim(MY_INT7),I) From AXUNIT

Local Integer MY_INT8(0..J)
Call CHECK_EQUAL(dim(MY_INT8),J+1) From AXUNIT

Local Integer MY_INT9(J)
Call CHECK_EQUAL(dim(MY_INT9),J) From AXUNIT

#Test on undeclared variable
Call CHECK_EQUAL(dim([L]DOS),-1) From AXUNIT

End

Subprog TC_SUBPROG
Integer EX
Onerrgo ERROR
Local Date MYDATE


Local Integer MY_INT2(12)
Local Integer MY_INT3(1..15)
Local Integer MY_INT4(1..)
Local Integer MY_INT5(-1000..1000)

Local Integer MY_INT6(3,4,5,6)

Call SUB_INT2(MY_INT2(3..8))
Call SUB_INT2A(MY_INT2(3..8))
Call SUB_INT3(MY_INT3)
Call SUB_INT5(MY_INT5)
#TODO ? Call SUB_INT6(MY_INT6)
End

Subprog SUB_INT2(MY_SUBINT)
  Value Integer MY_SUBINT
  # receive elements 3,4,5,6,7,8 into MY_SUBINT(0..5)
  Call CHECK_EQUAL(dim(MY_SUBINT),6) From AXUNIT
End

Subprog SUB_INT2A(MY_SUBINT)
  Value Integer MY_SUBINT(1..)
  # receive elements 3,4,5,6,7,8 into MY_SUBINT(1..6)
  Call CHECK_EQUAL(dim(MY_SUBINT),6) From AXUNIT
End

Subprog SUB_INT3(MY_SUBINT)
  Value Integer MY_SUBINT
  Call CHECK_EQUAL(dim(MY_SUBINT),15) From AXUNIT
End

Subprog SUB_INT5(MY_SUBINT)
  Value Integer MY_SUBINT
  # array sent through as -1000 to 1000 and received as 0 to 2000
  MY_SUBINT(2000)=7
  Call CHECK_EQUAL(dim(MY_SUBINT),2001) From AXUNIT
  Call CHECK_EQUAL(MY_SUBINT(2000),7) From AXUNIT
End

Subprog SUB_INT6(MY_SUBINT)
  Value Integer MY_SUBINT
  Local Integer EX

  # array sent through with dimensions 3,4,5,6
  Call CHECK_EQUAL(dim(MY_SUBINT,1),3) From AXUNIT
  Call CHECK_EQUAL(dim(MY_SUBINT,2),4) From AXUNIT
  Call CHECK_EQUAL(dim(MY_SUBINT,3),5) From AXUNIT
  Call CHECK_EQUAL(dim(MY_SUBINT,4),6) From AXUNIT

  EX=50   # Function/array not defined for  value
  Local Integer TST
  Onerrgo ERROR
  TST = dim(MY_SUBINT,5)

End

Subprog TC_DELA
Integer EX
Onerrgo ERROR
Local Date MY_DATE(10)
Local Integer I, GOT_INT, EXP_INT

For I=0 To 4
  MY_DATE(I)=date$+I
Next

For I=5 To 9
MY_DATE(I)=date$-I
Next

Call CHECK_EQUAL(dim(MY_DATE),10) From AXUNIT
Dela 3, 2 MY_DATE
Call CHECK_EQUAL(dim(MY_DATE),10) From AXUNIT

End


Subprog TC_INSA
Integer EX
Onerrgo ERROR
Local Date MY_DATE(10)
Local Integer I, GOT_INT, EXP_INT

For I=0 To 4
  MY_DATE(I)=date$+I
Next

For I=5 To 9
MY_DATE(I)=date$-I
Next

# 2 rows are inserted but last two rows are pushed off the array - dim stays at 10
Call CHECK_EQUAL(dim(MY_DATE),10) From AXUNIT
Insa 3, 2 MY_DATE
Call CHECK_EQUAL(dim(MY_DATE),10) From AXUNIT

End

Subprog TC_SORTA
Integer EX
Onerrgo ERROR
Local Date MY_DATE(10)
Local Integer I, GOT_INT, EXP_INT

For I=0 To 4
  MY_DATE(I)=date$+I
Next

For I=5 To 9
MY_DATE(I)=date$-I
Next

Sorta 10 MY_DATE
# 2 rows are inserted but last two rows are pushed off the array - dim stays at 10
Call CHECK_EQUAL(date$-9, MY_DATE(0)) From AXUNIT
Call CHECK_EQUAL(date$+4, MY_DATE(9)) From AXUNIT

End

Subprog TC_EVALUE
Local Integer VAL1
Local Integer I:I=1

Call CHECK_EQUAL(evalue("dim(VAL"+num$(I)+")"),1) From AXUNIT
Call CHECK_EQUAL(evalue("dim([L]VAL"+num$(I)+")"),1) From AXUNIT
Call CHECK_EQUAL(evalue("dim(VAL"+num$(I)+",0)"),1) From AXUNIT
Call CHECK_EQUAL(evalue("dim([L]VAL"+num$(I)+",0)"),1) From AXUNIT
End
