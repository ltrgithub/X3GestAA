"use strict";
var mongodb = require("mongodb");

exports.getEtnaConfigForUnitTest = function(_, endpointName) {
	var config = require("etna/lib/util/nodeconfig").config;
	var collaboration = config.collaboration || {};
	var server = new mongodb.Server(collaboration.hostname || "localhost", collaboration.port || 27017, {});

	var db = new mongodb.Db("syracuse", server, {
		w: 1 //"majority"
	});
	db.open(_);
	try {
		var endPoint = db.collection('EndPoint', _).find({
			application: 'x3',
			contract: 'erp',
			dataset: endpointName

		}).toArray(_)[0];

		return {
			endpointName: config.unit_test.etnaEndPoint,
			solutionName: endPoint.x3SolutionName,
			folderName: endPoint.x3ServerFolder,
			solutionPath: endPoint.etnaSolutionPath,
			mongo: {
				host: endPoint.etnaMongoHost,
				port: endPoint.etnaMongoPort,
				database: endPoint.x3SolutionName + '-' + endPoint.x3ServerFolder
			},
			sql: {
				driver: endPoint.etnaDriver,
				user: endPoint.etnaDatabaseUser,
				password: endPoint.etnaDatabasePassword,
				database: endPoint.etnaOracleSID,
				port: endPoint.etnaDatabasePort,
				hostname: endPoint.etnaDatabaseHost
			},
			/*
            session:{
                "id": "6d4754e0-d4cc-4317-903b-ff3be10cd160",
                "login": "admin",
                "userName": "AQCORE",
                "locale": "en-US",
                "localePreferences": {
                    "_id": "9b648750-8925-4f28-afed-10aebf3d66c2",
                    "code": "en-US",
                    "description": {
                        "default": "English (United States)",
                        "en-us": "English (United States)"
                    },
                    "enabled": true,
                    "firstDayOfWeek": 0,
                    "longDate": "dddd, MMMM dd, yyyy",
                    "longDatetime": "dddd, MMMM dd, yyyy h:mm:ss tt",
                    "longTime": "h:mm:ss tt",
                    "numberDecimalSeparator": ".",
                    "numberGroupSeparator": " ",
                    "numberGroupSize": 3,
                    "shortDate": "M/d/yyyy",
                    "shortDatetime": "M/d/yyyy h:mm tt",
                    "shortTime": "h:mm tt"
                }
            }*/
			session: {
				"id": "cf45e0fe-853e-4858-89f6-24a79e3fe758",
				"login": "admin",
				"userName": "AQCORE",
				"locale": "fr-FR",
				"localePreferences": {
					"_id": "157279cf-2852-4674-bf66-9e5e36ccc606",
					"code": "fr-FR",
					"description": {
						"default": "français (France)",
						"en-us": "français (France)"
					},
					"enabled": true,
					"firstDayOfWeek": 1,
					"longDate": "dddd d MMMM yyyy",
					"longDatetime": "dddd d MMMM yyyy HH:mm:ss",
					"longTime": "HH:mm:ss",
					"numberDecimalSeparator": ",",
					"numberGroupSeparator": " ",
					"numberGroupSize": 3,
					"shortDate": "dd/MM/yyyy",
					"shortDatetime": "dd/MM/yyyy HH:mm",
					"shortTime": "HH:mm"
				}
			}
		};
	} finally {
		db.close();
	}
};


exports.getTestApi = function(_) {
	const config = require('config');
	const etnaConfig = exports.getEtnaConfigForUnitTest(_, config.unit_test.etnaEndPoint);
	if (!etnaConfig) throw new Error("test endpoint does not exist: " + config.unit_test.etnaEndPoint);
	const supervisor = require('etna/lib/supervisor/supervisor').create(_, etnaConfig);
	require("etna/lib/engine/runtime/variables").initStack(supervisor);
	require("etna/lib/supervisor/builtins/ACTX").init(_, etnaConfig.session, supervisor);
	return supervisor.api;
}