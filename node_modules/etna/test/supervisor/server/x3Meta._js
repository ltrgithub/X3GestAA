"use strict";
QUnit.module(module.id);

const glob = require('streamline/lib/globals');
const runtime = require("etna/lib/engine/runtime/runtime");
const supervisor = require('etna/lib/supervisor/supervisor');
const config = require("etna/lib/util/nodeconfig").config;
const helper = require("etna/test/engine/fixtures/helper");

var superv;

function checkMeta(_,type,collection,key) {
	ok(true, type+"s");
	var rs = superv.mongoStore.collection(collection, _).find({}).toArray(_);
	rs.forEach_(_,(_,record) => { 
		try {
			var data = superv.load(_,type, record[key]);
		} catch(e) {
			ok(false,type+" "+record[key]+": "+e.message);
		}
	});
	start();
}

asyncTest("start", function(_) {
	let etnaConfig = helper.getEtnaConfigForUnitTest(_, config.unit_test.etnaEndPoint);
	superv = supervisor.create(_, etnaConfig);
	require("etna/lib/engine/runtime/variables").initStack(superv);
	ok(true, "start");
	start();
});

asyncTest("Tables", function(_) {
	checkMeta(_,"Table","ATABLE","CODFIC");
});

asyncTest("Classes", function(_) {
	checkMeta(_,"Class","ACLASSE","CODCLA");
});

asyncTest("Representations", function(_) {
	checkMeta(_,"Representation","ASHW","CODREP");
});
