#<AdxTL>@(#)0.0.0.0 $Revision$
Local Clbfile RESULT
RESULT =  func TESTSUITE()

#GTRACE ="QLFAC_TABSUBDIV_"+GACTX.USER
Call LEC_TRACE From LECFIC
End

#**
#* Subprog SETUP called at the beginning of the unit test suite
#*!
Subprog SETUP
# Database cleaning
Local File TABSUBDIV [ATU]
Trbegin [ATU]
Delete [ATU] Where CRY="CF" : # and (COD="AA" | COD="PA")
Commit
Call LOG_LINE("SETUP : Database cleaning (fstat="+num$(fstat)+")") From AXUNIT
End

#**
#* The main entry point of the unit test suite
#*
#*!
Funprog TESTSUITE()


Call TESTSUITE_START("TABSUBDIV", "Test suite for Class TABSUBDIV") From AXUNIT

Call ADD_TESTCASE("TABSUBDIV_CREATION","Creation of Unit IL",6) From AXUNIT
Call ADD_TESTCASE("TABSUBDIV_READ","Read Unit IL",1) From AXUNIT
Call ADD_TESTCASE("TABSUBDIV_UPDATE","Update Unit IL",2) From AXUNIT
Call ADD_TESTCASE("TABSUBDIV_DELETE","Deletion of Unit IL",1) From AXUNIT

Local Clbfile SUITE_RESULT
SUITE_RESULT = func AXUNIT.RUN_TESTSUITE("TABSUBDIV", "SYRA_TABSUBDIV")

End SUITE_RESULT

#**
#* Create
#*!
Subprog TABSUBDIV_CREATION()
Local Integer MY_STATUS
Local Instance QLFATU Using C_TABSUBDIV
QLFATU = NewInstance C_TABSUBDIV AllocGroup null

# Initialize Instance
[L]MY_STATUS = fmet QLFATU.AINIT()
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT

#**
#* This insert fails - has invalid type value

#*!
QLFATU.CRY = ""
QLFATU.TYP = 1

Local Integer ILINE

If pat(ver$(0),"etna*")>0
 ILINE=1
Else
 ILINE=fmet QLFATU.ADDLINE("COLATU", [V]CST_ALASTPOS)
Endif

QLFATU.COLATU(ILINE).COD = "AA"
QLFATU.COLATU(ILINE).INTIT="SAT descr"
[L]MY_STATUS = fmet QLFATU.AINSERT()
Call CHECK_EQUAL("AINSERT"+num$([L]MY_STATUS),"AINSERT"+num$([V]CST_AERROR)) From AXUNIT

Local Integer I
For I=1 To maxtab(QLFATU.AERROR)
 If  QLFATU.AERROR(I).STA=[V]CST_AERROR & QLFATU.AERROR(I)<>null & QLFATU.AERROR(I).DEL<>2
   Call LOG_LINE(QLFATU.AERROR(I).PRO-":"-QLFATU.AERROR(I).MES) From AXUNIT
 Endif
Next I
FreeGroup QLFATU


# Test default subdivision default

QLFATU = NewInstance C_TABSUBDIV AllocGroup null

Local File TABCOUNTRY  [TCY]

Filter [TCY] Where  [TCY]ETATFLG=1 and [TCY]ETATFLG2=2
Read[TCY]Last
If !fstat
  # Initialize Instance
  [L]MY_STATUS = fmet QLFATU.AINIT()
  Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT

  QLFATU.CRY = [TCY]CRY
  Call CHECK_EQUAL(QLFATU.TYP,3) From AXUNIT
Endif

FreeGroup QLFATU

QLFATU = NewInstance C_TABSUBDIV AllocGroup null

# Initialize Instance
[L]MY_STATUS = fmet QLFATU.AINIT()
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT

#**
#* This insert succeeds
#*!
QLFATU.CRY = "CF"
QLFATU.TYP = 2

If pat(ver$(0),"etna*")>0
 ILINE=1
Else
 ILINE=fmet QLFATU.ADDLINE("COLATU", [V]CST_ALASTPOS)
Endif

QLFATU.COLATU(ILINE).COD = "AA"
QLFATU.COLATU(ILINE).CRY =  QLFATU.CRY
QLFATU.COLATU(ILINE).TYP = QLFATU.TYP
QLFATU.COLATU(ILINE).INTIT="SAT descr"
[L]MY_STATUS = fmet QLFATU.AINSERT()
Call CHECK_EQUAL("AINSERT"+num$([L]MY_STATUS),"AINSERT"+num$([V]CST_AOK)) From AXUNIT
FreeGroup QLFATU
End

#**
#* Read an unit
#*!
Subprog TABSUBDIV_READ()
Local Integer MY_STATUS
Local Instance QLFATU Using C_TABSUBDIV
QLFATU = NewInstance With C_TABSUBDIV

[L]MY_STATUS = fmet QLFATU.AREAD("CF",2)
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT
FreeGroup QLFATU
End

#**
#* Update an unit
#*!
Subprog TABSUBDIV_UPDATE()
Local Integer MY_STATUS,ILINE
Local Instance QLFATU Using C_TABSUBDIV
QLFATU = NewInstance C_TABSUBDIV AllocGroup null

[L]MY_STATUS = fmet QLFATU.AREAD("CF",2)
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT

[L]MY_STATUS = fmet QLFATU.AUPDATE()
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT
Gosub WRITE_ERRORS

FreeGroup QLFATU
End

#**
#* Write errors to log
#*!
$WRITE_ERRORS
  Local Integer I
  For I=1 To maxtab(QLFATU.AERROR)
    If  QLFATU.AERROR(I)<>null & QLFATU.AERROR(I).DEL<>2
      Call CHECK_EQUAL(QLFATU.AERROR(I).PRO-":"-QLFATU.AERROR(I).MES,QLFATU.AERROR(I).PRO-":"-QLFATU.AERROR(I).MES) From AXUNIT
    Endif
  Next I
Return

#**
#* Delete an unit
#*!
Subprog TABSUBDIV_DELETE()
Local Integer MY_STATUS
Local Instance QLFATU Using C_TABSUBDIV
QLFATU = NewInstance C_TABSUBDIV AllocGroup null

[L]MY_STATUS = fmet QLFATU.AREAD("CF",2)
[L]MY_STATUS = fmet QLFATU.ADELETE()
Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AOK) From AXUNIT

FreeGroup QLFATU
End

