# Notes :
# QLF events/actions on collections
# Example: An order that has lines that have sublines (3 levels)
#    AQCCOL01 = Header class
#    AQCCOL02 = Line class
#    AQCCOL03 = Sub-line class
#
# Persistent class
# - Class Property Actions
# - test the event INIT
# - test the event CONTROL
# - test the event PROPAGATE
# - test the event GET


# - Class Event Actions
# - test the event AREAD
# -   test the event AREAD_BEFORE
# -   test the event AREAD_AFTER
#   test the event AINSERT
#   test the event ADELETE
#   test the event AUPDATE
#   test the event AINIT

# - Class Event Actions on a collection within a class
Local Clbfile TMP_CLBFILE(2)
TMP_CLBFILE= func TESTSUITE()
Call FERME_TRACE From LECFIC

GTRACE = "QLFAC_I_COLLECTION_"+GACTX.USER
Call LEC_TRACE From LECFIC
End

Subprog SETUP
# delete old data
Local File AQCCOL01 [AQCC01]  # Header
Local File AQCCOL02 [AQCC02]  # Line
Local File AQCCOL03 [AQCC03]  # Subline
Trbegin [AQCC01]
Delete [AQCC01] Where 1=1
Delete [AQCC02] Where 1=1
Delete [AQCC03] Where 1=1
Commit

Local File AQCCOL10 [AQCC10]  # Header
Local File AQCCOL11 [AQCC11]  # Line
Local File AQCCOL12 [AQCC12]  # Subline 1
Local File AQCCOL13 [AQCC13]  # Subline 2
Local File AQCCOL14 [AQCC14]  # Subline 3
Trbegin [AQCC10]
Delete [AQCC10] Where 1=1
Delete [AQCC11] Where 1=1
Delete [AQCC12] Where 1=1
Delete [AQCC13] Where 1=1
Delete [AQCC14] Where 1=1
Commit
End


Funprog TESTSUITE()
Call ADD_TESTCASE("TC_AINSERT","TC_AINSERT"-"1 header class - 2 subclasses (Header has details, Details have details)" ,254) From AXUNIT
Call ADD_TESTCASE("TC_AUPDATE","TC_AUPDATE"-"1 header class - 2 subclasses (Update first subclass)" ,24) From AXUNIT
Call ADD_TESTCASE("TC_ADELETE","TC_ADELETE"-"1 header class - 2 subclasses (Delete first subclass)" ,10) From AXUNIT
End func AXUNIT.RUN_TESTSUITE("QLFAC_I_COLLECTION", "QLFAC_I_COLLECTION")


Subprog TC_AINSERT
Local Char TC(255),EVENT(50)
Local Integer MY_STATUS,ASTATUS,LINE_NUM,SUBLINE_NUM
Local Instance MY_INSTANCE Using C_AQCCOL01
MY_INSTANCE = NewInstance C_AQCCOL01

TC="Initialize Instance"
Call CHECK_EQUAL(TC,TC) From AXUNIT
[L]MY_STATUS = fmet MY_INSTANCE.AINIT()
Call CHECK_NOTEQUAL([L]MY_STATUS,[V]CST_AERROR) From AXUNIT
EVENT="AINIT"
Call DISP_MSG(EVENT,MY_INSTANCE)

TC="Assign properties"
Call CHECK_EQUAL(TC,TC) From AXUNIT
MY_INSTANCE.KEY1="TEST1"
MY_INSTANCE.FIELD1="Header"
EVENT="ASSIGN_HEADER"
Call DISP_MSG(EVENT,MY_INSTANCE)


TC="Add line to instance"
Call CHECK_EQUAL(TC,TC) From AXUNIT
[L]LINE_NUM = fmet MY_INSTANCE.LINCOL.AADD([V]CST_ALASTPOS)
EVENT="ADDLINE_LINCOL_AQCCOL01"
Call DISP_MSG(EVENT,MY_INSTANCE)

TC="Assign properties in line colletion"
Call CHECK_EQUAL(TC,TC) From AXUNIT
MY_INSTANCE.LINCOL(LINE_NUM).KEY1 = "TEST1"
MY_INSTANCE.LINCOL(LINE_NUM).LINNO = 1
MY_INSTANCE.LINCOL(LINE_NUM).LINFLD = "Line"
EVENT="ASSIGN_LINCOL"
Call DISP_MSG(EVENT,MY_INSTANCE)


TC="Add sub-line to line instance"
[L]SUBLINE_NUM = fmet MY_INSTANCE.LINCOL(LINE_NUM).SUBLINCOL.AADD([V]CST_ALASTPOS)
Call CHECK_EQUAL(TC,TC) From AXUNIT
EVENT="ADDLINE_SUBLINCOL_AQCCOL02"
Call DISP_MSG(EVENT,MY_INSTANCE)

TC="Assign properties in sub-line colletion"
Call CHECK_EQUAL(TC,TC) From AXUNIT
MY_INSTANCE.LINCOL(LINE_NUM).SUBLINCOL(SUBLINE_NUM).KEY1 = "TEST1"
MY_INSTANCE.LINCOL(LINE_NUM).SUBLINCOL(SUBLINE_NUM).LINNO = 1
MY_INSTANCE.LINCOL(LINE_NUM).SUBLINCOL(SUBLINE_NUM).SUBLINNO = 1
MY_INSTANCE.LINCOL(LINE_NUM).SUBLINCOL(SUBLINE_NUM).LINFLD = "Sub-line"
EVENT="ASSIGN_SUBLINCOL"
Call DISP_MSG(EVENT,MY_INSTANCE)

TC="Insert instance"
[L]MY_STATUS = fmet MY_INSTANCE.AINSERT()
Call CHECK_NOTEQUAL([L]MY_STATUS,[V]CST_AERROR) From AXUNIT
EVENT="AINSERT1_AQCCOL01"
Call DISP_MSG(EVENT,MY_INSTANCE)
FreeGroup MY_INSTANCE
End

Subprog TC_AUPDATE()
Local Char TC(255),EVENT(50)
Local Integer MY_STATUS,ASTATUS
Local Instance MY_INSTANCE Using C_AQCCOL10


call CREATE_INSTANCE("TESTUPDATE")

TC="Update instance with multi-level collections with DELLINE"
Call CHECK_EQUAL(TC,TC) From AXUNIT


TC="Level 0 Read"
Local Instance MY_INSTANCE Using C_AQCCOL10
MY_INSTANCE = NewInstance C_AQCCOL10
[L]MY_STATUS = fmet MY_INSTANCE.AREAD("TESTUPDATE")
Call CHECK_EQUAL(TC-num$([L]MY_STATUS),TC-num$([V]CST_AOK)) From AXUNIT
FreeGroup MY_INSTANCE

TC="Level 1 Read"
Local Instance MY_INSTANCE Using C_AQCCOL11
MY_INSTANCE = NewInstance C_AQCCOL11
[L]MY_STATUS = fmet MY_INSTANCE.AREAD("TESTUPDATE",1)
Call CHECK_EQUAL(TC-num$([L]MY_STATUS),TC-num$([V]CST_AOK)) From AXUNIT
FreeGroup MY_INSTANCE

TC="Level 2 Read"
Local Instance MY_INSTANCE Using C_AQCCOL12
MY_INSTANCE = NewInstance C_AQCCOL12
[L]MY_STATUS = fmet MY_INSTANCE.AREAD("TESTUPDATE",1,1)
Call CHECK_EQUAL(TC-num$([L]MY_STATUS),TC-num$([V]CST_AOK)) From AXUNIT
FreeGroup MY_INSTANCE

TC="Level 3 Read"
Local Instance MY_INSTANCE Using C_AQCCOL13
MY_INSTANCE = NewInstance C_AQCCOL13
[L]MY_STATUS = fmet MY_INSTANCE.AREAD("TESTUPDATE",1,1,1)
Call CHECK_EQUAL(TC-num$([L]MY_STATUS),TC-num$([V]CST_AOK)) From AXUNIT
FreeGroup MY_INSTANCE

TC="Level 4 Read"
Local Instance MY_INSTANCE Using C_AQCCOL14
MY_INSTANCE = NewInstance C_AQCCOL14
[L]MY_STATUS = fmet MY_INSTANCE.AREAD("TESTUPDATE",1,1,1,1)
Call CHECK_EQUAL(TC-num$([L]MY_STATUS),TC-num$([V]CST_AOK)) From AXUNIT
FreeGroup MY_INSTANCE                               

# Read then Update
Local Instance MY_INSTANCE Using C_AQCCOL10
MY_INSTANCE = NewInstance C_AQCCOL10

[L]MY_STATUS = fmet MY_INSTANCE.AREAD("TESTUPDATE")
TC="Read instance with collections"
Call CHECK_EQUAL(TC-num$([V]CST_AOK),TC-num$([L]MY_STATUS)) From AXUNIT

TC="Delete line SUBCOL1(1) instance with collections"
Call CHECK_EQUAL(TC,TC) From AXUNIT

If [L]MY_STATUS = [V]CST_AOK
   [L]MY_STATUS = fmet MY_INSTANCE.SUBCOL0(1).SUBCOL1.ADEL(1)               # Delete Entire instance
   TC="SUBCOL1 line number 1 deleted"
   Call CHECK_EQUAL(TC-num$([L]MY_STATUS),TC-num$([V]CST_AOK)) From AXUNIT
   EVENT = "ADELLINE1_AQCCOL10"
   Call DISP_MSG(EVENT,MY_INSTANCE)
   If [L]MY_STATUS = [V]CST_AOK
     TC="Update instance"
     Call CHECK_EQUAL(TC,TC) From AXUNIT
     [L]MY_STATUS = fmet MY_INSTANCE.AUPDATE()
   Endif
Endif
FreeGroup MY_INSTANCE                                     # Clear memory

TC="Level 0 Read"
Local Instance MY_INSTANCE Using C_AQCCOL10
MY_INSTANCE = NewInstance C_AQCCOL10
[L]MY_STATUS = fmet MY_INSTANCE.AREAD("TESTUPDATE")
Call CHECK_EQUAL(TC-num$([L]MY_STATUS),TC-num$([V]CST_AOK)) From AXUNIT
FreeGroup MY_INSTANCE

TC="Level 1 Read"
Local Instance MY_INSTANCE Using C_AQCCOL11
MY_INSTANCE = NewInstance C_AQCCOL11
[L]MY_STATUS = fmet MY_INSTANCE.AREAD("TESTUPDATE",1)
Call CHECK_EQUAL(TC-num$([L]MY_STATUS),TC-num$([V]CST_AOK)) From AXUNIT
FreeGroup MY_INSTANCE

TC="Level 2 Read"
Local Instance MY_INSTANCE Using C_AQCCOL12
MY_INSTANCE = NewInstance C_AQCCOL12
[L]MY_STATUS = fmet MY_INSTANCE.AREAD("TESTUPDATE",1,1)
Call CHECK_EQUAL(TC-num$([L]MY_STATUS),TC-num$([V]CST_AERROR)) From AXUNIT
FreeGroup MY_INSTANCE

TC="Level 3 Read"
Local Instance MY_INSTANCE Using C_AQCCOL13
MY_INSTANCE = NewInstance C_AQCCOL13
[L]MY_STATUS = fmet MY_INSTANCE.AREAD("TESTUPDATE",1,1,1)
Call CHECK_EQUAL(TC-num$([L]MY_STATUS),TC-num$([V]CST_AERROR)) From AXUNIT
FreeGroup MY_INSTANCE

TC="Level 4 Read"
Local Instance MY_INSTANCE Using C_AQCCOL14
MY_INSTANCE = NewInstance C_AQCCOL14
[L]MY_STATUS = fmet MY_INSTANCE.AREAD("TESTUPDATE",1,1,1,1)
Call CHECK_EQUAL(TC-num$([L]MY_STATUS),TC-num$([V]CST_AERROR)) From AXUNIT
FreeGroup MY_INSTANCE
End


Subprog DISP_MSG(EVENT,OBJ)
Value Char EVENT
Value Instance OBJ Using OBJECT
Gosub DISPLAY_MESSAGES
End



Subprog TC_ADELETE
Local Char TC(255),EVENT(50)
Local Integer MY_STATUS,SUBCOL0_NUM,SUBCOL1_NUM,SUBCOL2_NUM,SUBCOL3_NUM
Local Instance MY_INSTANCE Using C_AQCCOL10

call CREATE_INSTANCE("TEST1")


# Read then Delete
Local Instance MY_INSTANCE Using C_AQCCOL10
MY_INSTANCE = NewInstance C_AQCCOL10
[L]MY_STATUS = fmet MY_INSTANCE.AREAD("TEST1")
TC="....Read instance with collections"
Call CHECK_EQUAL(TC-num$([V]CST_AOK),TC-num$([L]MY_STATUS)) From AXUNIT

If [L]MY_STATUS = [V]CST_AOK
  [L]MY_STATUS = fmet MY_INSTANCE.ADELETE()        # Delete Entire instance
  TC="    Delete instance and all 4 levels"
  Call CHECK_EQUAL(TC-num$([L]MY_STATUS),TC-num$([V]CST_AOK)) From AXUNIT

  TC="Level 0 Read"
  Local Instance MY_INSTANCE Using C_AQCCOL10
  MY_INSTANCE = NewInstance C_AQCCOL10
  [L]MY_STATUS = fmet MY_INSTANCE.AREAD("TEST1")
  Call CHECK_EQUAL(TC-num$([L]MY_STATUS),TC-num$([V]CST_AERROR)) From AXUNIT
  FreeGroup MY_INSTANCE

  TC="Level 1 Read"
  Local Instance MY_INSTANCE Using C_AQCCOL11
  MY_INSTANCE = NewInstance C_AQCCOL11
  [L]MY_STATUS = fmet MY_INSTANCE.AREAD("TEST1",1)
  Call CHECK_EQUAL(TC-num$([L]MY_STATUS),TC-num$([V]CST_AERROR)) From AXUNIT
  FreeGroup MY_INSTANCE

  TC="Level 2 Read"
  Local Instance MY_INSTANCE Using C_AQCCOL12
  MY_INSTANCE = NewInstance C_AQCCOL12
  [L]MY_STATUS = fmet MY_INSTANCE.AREAD("TEST1",1,1)
  Call CHECK_EQUAL(TC-num$([L]MY_STATUS),TC-num$([V]CST_AERROR)) From AXUNIT
  FreeGroup MY_INSTANCE

  TC="Level 3 Read"
  Local Instance MY_INSTANCE Using C_AQCCOL13
  MY_INSTANCE = NewInstance C_AQCCOL13
  [L]MY_STATUS = fmet MY_INSTANCE.AREAD("TEST1",1,1,1)
  Call CHECK_EQUAL(TC-num$([L]MY_STATUS),TC-num$([V]CST_AERROR)) From AXUNIT
  FreeGroup MY_INSTANCE

  TC="Level 4 Read"
  Local Instance MY_INSTANCE Using C_AQCCOL14
  MY_INSTANCE = NewInstance C_AQCCOL14
  [L]MY_STATUS = fmet MY_INSTANCE.AREAD("TEST1",1,1,1,1)
  Call CHECK_EQUAL(TC-num$([L]MY_STATUS),TC-num$([V]CST_AERROR)) From AXUNIT
  FreeGroup MY_INSTANCE
   
Endif
FreeGroup MY_INSTANCE                                     # Clear memory
End

Subprog TC_COL_AINSERT
Local Char TC(255),EVENT(50)
Local Integer MY_STATUS,ASTATUS,LINE_NUM,SUBLINE_NUM
Local Instance MY_INSTANCE Using C_AQCCOL01
MY_INSTANCE = NewInstance C_AQCCOL01

[L]MY_STATUS = fmet MY_INSTANCE.AINIT()
Call WRITE_COL_MSGS(MY_INSTANCE,"AINIT")
Call WRITE_COL_MSGS(MY_INSTANCE.LINCOL,"AINIT_HEADER")
MY_INSTANCE.KEY1="TEST1"
MY_INSTANCE.FIELD1="Header"
Call WRITE_COL_MSGS(MY_INSTANCE,"ASSIGN_HEADER")
[L]LINE_NUM = fmet MY_INSTANCE.ADDLINE("LINCOL",[V]CST_ALASTPOS)
Call WRITE_COL_MSGS(MY_INSTANCE,"ADDLINE_LINCOL")
Call WRITE_COL_MSGS(MY_INSTANCE.LINCOL,"ADDLINE_LINCOL")
Call WRITE_COL_MSGS(MY_INSTANCE.LINCOL.SUBLINCOL,"ADDLINE_LINCOL")
MY_INSTANCE.LINCOL(LINE_NUM).KEY1 = "TEST1"
Call WRITE_COL_MSGS(MY_INSTANCE.LINCOL,"ASSIGN_LINCOL")
MY_INSTANCE.LINCOL(LINE_NUM).LINNO = 1
Call WRITE_COL_MSGS(MY_INSTANCE.LINCOL,"ASSIGN_LINCOL")
MY_INSTANCE.LINCOL(LINE_NUM).LINFLD = "Line"
Call WRITE_COL_MSGS(MY_INSTANCE.LINCOL,"ASSIGN_LINCOL")
[L]SUBLINE_NUM = fmet MY_INSTANCE.LINCOL.ADDLINE("SUBLINCOL",[V]CST_ALASTPOS)
Call WRITE_COL_MSGS(MY_INSTANCE,"ADDLINE_SUBLINCOL")
Call WRITE_COL_MSGS(MY_INSTANCE.LINCOL,"ADDLINE_SUBLINCOL")
Call WRITE_COL_MSGS(MY_INSTANCE.LINCOL.SUBLINCOL,"ADDLINE_SUBLINCOL")
MY_INSTANCE.LINCOL(LINE_NUM).SUBLINCOL(SUBLINE_NUM).KEY1 = "TEST1"
Call WRITE_COL_MSGS(MY_INSTANCE.LINCOL.SUBLINCOL,"ASSIGN_SUBLINCOL")
MY_INSTANCE.LINCOL(LINE_NUM).SUBLINCOL(SUBLINE_NUM).LINNO = 1
Call WRITE_COL_MSGS(MY_INSTANCE.LINCOL.SUBLINCOL,"ASSIGN_SUBLINCOL")
MY_INSTANCE.LINCOL(LINE_NUM).SUBLINCOL(SUBLINE_NUM).SUBLINNO = 1
Call WRITE_COL_MSGS(MY_INSTANCE.LINCOL.SUBLINCOL,"ASSIGN_SUBLINCOL")
MY_INSTANCE.LINCOL(LINE_NUM).SUBLINCOL(SUBLINE_NUM).LINFLD = "Sub-line"
Call WRITE_COL_MSGS(MY_INSTANCE.LINCOL.SUBLINCOL,"ASSIGN_SUBLINCOL")

[L]MY_STATUS = fmet MY_INSTANCE.AINSERT()
Call WRITE_COL_MSGS(MY_INSTANCE,"AINSERT1")
Call WRITE_COL_MSGS(MY_INSTANCE.LINCOL,"AINSERT1")
Call WRITE_COL_MSGS(MY_INSTANCE.LINCOL.SUBLINCOL,"AINSERT1")
FreeGroup MY_INSTANCE
End

Subprog TC_COL_ADELETE
Local Char TC(255),EVENT(50)
Local Integer MY_STATUS,SUBCOL0_NUM,SUBCOL1_NUM,SUBCOL2_NUM,SUBCOL3_NUM
Local Instance MY_INSTANCE Using C_AQCCOL10
MY_INSTANCE = NewInstance C_AQCCOL10

TC="Delete instance with multi-level collections"
Call CHECK_EQUAL(TC,TC) From AXUNIT

TC="Create instance with header + 4 collections"
Call CHECK_EQUAL(TC,TC) From AXUNIT
[L]MY_STATUS = fmet MY_INSTANCE.AINIT()
Call CHECK_EQUAL("AINIT"-num$([V]CST_AOK),"AINIT"-num$([L]MY_STATUS)) From AXUNIT
MY_INSTANCE.KEY1="TEST1"
MY_INSTANCE.FIELD1="Header"
[L]SUBCOL0_NUM = fmet MY_INSTANCE.ADDLINE("SUBCOL0",[V]CST_ALASTPOS)
MY_INSTANCE.SUBCOL0(SUBCOL0_NUM).KEY1 = "TEST1"
MY_INSTANCE.SUBCOL0(SUBCOL0_NUM).LINNO = 1
MY_INSTANCE.SUBCOL0(SUBCOL0_NUM).LINFLD = "Line 0"
[L]SUBCOL1_NUM = fmet MY_INSTANCE.SUBCOL0.ADDLINE("SUBCOL1",[V]CST_ALASTPOS)
MY_INSTANCE.SUBCOL0(SUBCOL0_NUM).SUBCOL1(SUBCOL1_NUM).KEY1 = "TEST1"
MY_INSTANCE.SUBCOL0(SUBCOL0_NUM).SUBCOL1(SUBCOL1_NUM).LINNO = 1
MY_INSTANCE.SUBCOL0(SUBCOL0_NUM).SUBCOL1(SUBCOL1_NUM).SUBLIN1 = 1
MY_INSTANCE.SUBCOL0(SUBCOL0_NUM).SUBCOL1(SUBCOL1_NUM).LINFLD = "Sub-line 1"
[L]SUBCOL2_NUM = fmet MY_INSTANCE.SUBCOL0.SUBCOL1.ADDLINE("SUBCOL2",[V]CST_ALASTPOS)
MY_INSTANCE.SUBCOL0(SUBCOL0_NUM).SUBCOL1(SUBCOL1_NUM).SUBCOL2(SUBCOL2_NUM).KEY1 = "TEST1"
MY_INSTANCE.SUBCOL0(SUBCOL0_NUM).SUBCOL1(SUBCOL1_NUM).SUBCOL2(SUBCOL2_NUM).LINNO = 1
MY_INSTANCE.SUBCOL0(SUBCOL0_NUM).SUBCOL1(SUBCOL1_NUM).SUBCOL2(SUBCOL2_NUM).SUBLIN1 = 1
MY_INSTANCE.SUBCOL0(SUBCOL0_NUM).SUBCOL1(SUBCOL1_NUM).SUBCOL2(SUBCOL2_NUM).SUBLIN2 = 1
MY_INSTANCE.SUBCOL0(SUBCOL0_NUM).SUBCOL1(SUBCOL1_NUM).SUBCOL2(SUBCOL2_NUM).LINFLD = "Sub-line 2"
[L]SUBCOL3_NUM = fmet MY_INSTANCE.SUBCOL0.SUBCOL1.SUBCOL2.ADDLINE("SUBCOL3",[V]CST_ALASTPOS)
MY_INSTANCE.SUBCOL0(SUBCOL0_NUM).SUBCOL1(SUBCOL1_NUM).SUBCOL2(SUBCOL2_NUM).SUBCOL3(SUBCOL3_NUM).KEY1 = "TEST1"
MY_INSTANCE.SUBCOL0(SUBCOL0_NUM).SUBCOL1(SUBCOL1_NUM).SUBCOL2(SUBCOL2_NUM).SUBCOL3(SUBCOL3_NUM).LINNO = 1
MY_INSTANCE.SUBCOL0(SUBCOL0_NUM).SUBCOL1(SUBCOL1_NUM).SUBCOL2(SUBCOL2_NUM).SUBCOL3(SUBCOL3_NUM).SUBLIN1 = 1
MY_INSTANCE.SUBCOL0(SUBCOL0_NUM).SUBCOL1(SUBCOL1_NUM).SUBCOL2(SUBCOL2_NUM).SUBCOL3(SUBCOL3_NUM).SUBLIN2 = 1
MY_INSTANCE.SUBCOL0(SUBCOL0_NUM).SUBCOL1(SUBCOL1_NUM).SUBCOL2(SUBCOL2_NUM).SUBCOL3(SUBCOL3_NUM).SUBLIN3 = 1
MY_INSTANCE.SUBCOL0(SUBCOL0_NUM).SUBCOL1(SUBCOL1_NUM).SUBCOL2(SUBCOL2_NUM).SUBCOL3(SUBCOL3_NUM).LINFLD = "Sub-line 3"

[L]MY_STATUS = fmet MY_INSTANCE.AINSERT()
Call CHECK_EQUAL("AINSERT"-num$([V]CST_AOK),"AINSERT"-num$([L]MY_STATUS)) From AXUNIT
FreeGroup MY_INSTANCE                                     # Clear memory

# Read then Delete
Local Instance MY_INSTANCE Using C_AQCCOL10
MY_INSTANCE = NewInstance C_AQCCOL10
[L]MY_STATUS = fmet MY_INSTANCE.AREAD("TEST1")
TC="Read instance with collections"
Call CHECK_EQUAL(TC-num$([V]CST_AOK),TC-num$([L]MY_STATUS)) From AXUNIT

If [L]MY_STATUS = [V]CST_AOK
   [L]MY_STATUS = fmet MY_INSTANCE.ADELETE()                        # Delete Entire instance
   Call WRITE_COL_MSGS(MY_INSTANCE,"ADELETE1")
   Call WRITE_COL_MSGS(MY_INSTANCE.SUBCOL0,"ADELETE1")
   Call WRITE_COL_MSGS(MY_INSTANCE.SUBCOL0.SUBCOL1,"ADELETE1")
   Call WRITE_COL_MSGS(MY_INSTANCE.SUBCOL0.SUBCOL1.SUBCOL2,"ADELETE1")
   Call WRITE_COL_MSGS(MY_INSTANCE.SUBCOL0.SUBCOL1.SUBCOL2.SUBCOL3,"ADELETE1")
   TC="Delete instance and all 4 levels"
   Call CHECK_EQUAL(TC-num$([L]MY_STATUS),TC-num$([V]CST_AOK)) From AXUNIT
Endif
FreeGroup MY_INSTANCE                                     # Clear memory

TC="Level 0 Read"
Local Instance MY_INSTANCE Using C_AQCCOL10
MY_INSTANCE = NewInstance C_AQCCOL10
[L]MY_STATUS = fmet MY_INSTANCE.AREAD("TEST1")
Call CHECK_EQUAL(TC-num$([L]MY_STATUS),TC-num$([V]CST_AERROR)) From AXUNIT
FreeGroup MY_INSTANCE

TC="Level 1 Read"
Local Instance MY_INSTANCE Using C_AQCCOL11
MY_INSTANCE = NewInstance C_AQCCOL11
[L]MY_STATUS = fmet MY_INSTANCE.AREAD("TEST1",1)
Call CHECK_EQUAL(TC-num$([L]MY_STATUS),TC-num$([V]CST_AERROR)) From AXUNIT
FreeGroup MY_INSTANCE

TC="Level 2 Read"
Local Instance MY_INSTANCE Using C_AQCCOL12
MY_INSTANCE = NewInstance C_AQCCOL12
[L]MY_STATUS = fmet MY_INSTANCE.AREAD("TEST1",1,1)
Call CHECK_EQUAL(TC-num$([L]MY_STATUS),TC-num$([V]CST_AERROR)) From AXUNIT
FreeGroup MY_INSTANCE

TC="Level 3 Read"
Local Instance MY_INSTANCE Using C_AQCCOL13
MY_INSTANCE = NewInstance C_AQCCOL13
[L]MY_STATUS = fmet MY_INSTANCE.AREAD("TEST1",1,1,1)
Call CHECK_EQUAL(TC-num$([L]MY_STATUS),TC-num$([V]CST_AERROR)) From AXUNIT
FreeGroup MY_INSTANCE

TC="Level 4 Read"
Local Instance MY_INSTANCE Using C_AQCCOL14
MY_INSTANCE = NewInstance C_AQCCOL14
[L]MY_STATUS = fmet MY_INSTANCE.AREAD("TEST1",1,1,1,1)
Call CHECK_EQUAL(TC-num$([L]MY_STATUS),TC-num$([V]CST_AERROR)) From AXUNIT
FreeGroup MY_INSTANCE

End




$DISPLAY_MESSAGES
  Gosub EVENTS_DATA
  Local Integer I,NB_MSG
  Local Char MESSAGES(250)(1..)
  NB_MSG=func  AGETMESSAGES(OBJ,MESSAGES)
  Call CHECK_NOTEQUAL("EVENT ["+EVENT+"]","") From AXUNIT
  # Check messages
  Case EVENT
    When "AINIT"                      : Call COMPARE_MESSAGES(MESSAGES,EVENT_AINIT)
    When "ASSIGN_HEADER"              : Call COMPARE_MESSAGES(MESSAGES,EVENT_ASSIGN_HEADER)
    When "ADDLINE_LINCOL_AQCCOL01"    : Call COMPARE_MESSAGES(MESSAGES,EVENT_ADDLINE_LINCOL_AQCCOL01)
    When "ASSIGN_LINCOL"              : Call COMPARE_MESSAGES(MESSAGES,EVENT_ASSIGN_LINCOL)
    When "ADDLINE_SUBLINCOL_AQCCOL02" : Call COMPARE_MESSAGES(MESSAGES,EVENT_ADDLINE_SUBLINCOL_AQCCOL02)
    When "ASSIGN_SUBLINCOL"           : Call COMPARE_MESSAGES(MESSAGES,EVENT_ASSIGN_SUBLINCOL)
    When "AINSERT1_AQCCOL01"          : Call COMPARE_MESSAGES(MESSAGES,EVENT_AINSERT1_AQCCOL01)
    When "ADELETE1_AQCCOL10"          : Call COMPARE_MESSAGES(MESSAGES,EVENT_ADELETE1_AQCCOL10)
    When "ADELETE1_AQCCOL11"          : Call COMPARE_MESSAGES(MESSAGES,EVENT_ADELETE1_AQCCOL11)
    When "ADELETE1_AQCCOL12"          : Call COMPARE_MESSAGES(MESSAGES,EVENT_ADELETE1_AQCCOL12)
    When "ADELETE1_AQCCOL13"          : Call COMPARE_MESSAGES(MESSAGES,EVENT_ADELETE1_AQCCOL13)
    When "ADELETE1_AQCCOL14"          : Call COMPARE_MESSAGES(MESSAGES,EVENT_ADELETE1_AQCCOL14)
    When "ADELLINE1_AQCCOL10"         : Call COMPARE_MESSAGES(MESSAGES,EVENT_ADELLINE1_AQCCOL10)
    When "AUPDATE_AQCCOL10"           : Call COMPARE_MESSAGES(MESSAGES,EVENT_AUPDATE_AQCCOL10)
    When Default:  : Call CHECK_EQUAL("["+EVENT+"] not found","") From AXUNIT
  Endcase
  # clear messages
  Callmet OBJ.ADELETEERROR(CST_ALLERRORS)
Return

Subprog COMPARE_MESSAGES(GOT_MSG, EXPECTED_MSG)
Value Char GOT_MSG()
Variable Char EXPECTED_MSG()()
Local Char GOT_MESSAGE(255), EXPECTED_MESSAGE(255)
Local Integer  I

For I=1 To maxtab(GOT_MSG)
  If I<=maxtab(EXPECTED_MSG)
    If len(EXPECTED_MSG(I))
     Call CHECK_EQUAL(GOT_MSG(I),EXPECTED_MSG(I)) From AXUNIT
    Else
     Call CHECK_EQUAL(GOT_MSG(I),GOT_MSG(I)) From AXUNIT
    Endif
    #Call CHECK_EQUAL('IDX+=1 : EVENTS_AUPDATE_AQCORDERA(IDX)= "'+GOT_MSG(I)+'"','') From AXUNIT
  Else
    Call CHECK_EQUAL("More got messages than expected messages ["+GOT_MSG(I)+"]","") From AXUNIT
  Endif
Next
If I<maxtab(EXPECTED_MSG)
  Call CHECK_EQUAL("More expected messages than got messages ["+EXPECTED_MSG(I)+"]","") From AXUNIT
Endif
End


$EVENTS_DATA
Local Integer IDX : IDX=0
Local Char EVENT_AINIT(255)(0..)
EVENT_AINIT(IDX)= "AINIT"
IDX+=1 : EVENT_AINIT(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL01] CURPRO=[KEY1] ARULE=[INIT]"
IDX+=1 : EVENT_AINIT(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL01] CURPRO=[FIELD1] ARULE=[INIT]"
IDX+=1 : EVENT_AINIT(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL01] CURPRO=[CREDATTIM] ARULE=[INIT]"
IDX+=1 : EVENT_AINIT(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL01] CURPRO=[UPDDATTIM] ARULE=[INIT]"
IDX+=1 : EVENT_AINIT(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL01] CURPRO=[AUUID] ARULE=[INIT]"
IDX+=1 : EVENT_AINIT(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL01] CURPRO=[CREUSR] ARULE=[INIT]"
IDX+=1 : EVENT_AINIT(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL01] CURPRO=[UPDUSR] ARULE=[INIT]"
IDX+=1 : EVENT_AINIT(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL01] CURPRO=[PROPERTY] ARULE=[INIT]"
IDX+=1 : EVENT_AINIT(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL01] CURPTH=[] AEVENT=[AINIT]"

Local Integer IDX : IDX=0
Local Char EVENT_ASSIGN_HEADER(255)(0..)
EVENT_ASSIGN_HEADER(IDX)= "ASSIGN_HEADER"
IDX+=1 : EVENT_ASSIGN_HEADER(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL01] CURPRO=[KEY1] ARULE=[CONTROL]"
IDX+=1 : EVENT_ASSIGN_HEADER(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL01] CURPRO=[KEY1] ARULE=[PROPAGATE]"
IDX+=1 : EVENT_ASSIGN_HEADER(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL01] CURPRO=[FIELD1] ARULE=[CONTROL]"
IDX+=1 : EVENT_ASSIGN_HEADER(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL01] CURPRO=[FIELD1] ARULE=[PROPAGATE]"

Local Integer IDX : IDX=0
Local Char EVENT_ADDLINE_LINCOL_AQCCOL01(255)(0..)
EVENT_ADDLINE_LINCOL_AQCCOL01(IDX)= "ADDLINE_LINCOL_AQCCOL01"
IDX+=1 : EVENT_ADDLINE_LINCOL_AQCCOL01(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL01] CURPTH=[LINCOL] AEVENT=[ADDLINE_BEFORE]"
IDX+=1 : EVENT_ADDLINE_LINCOL_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL02] CURPRO=[KEY1] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_LINCOL_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL02] CURPRO=[LINCOL.KEY1] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_LINCOL_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL02] CURPRO=[LINNO] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_LINCOL_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL02] CURPRO=[LINCOL.LINNO] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_LINCOL_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL02] CURPRO=[LINFLD] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_LINCOL_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL02] CURPRO=[LINCOL.LINFLD] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_LINCOL_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL02] CURPRO=[CREDATTIM] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_LINCOL_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL02] CURPRO=[LINCOL.CREDATTIM] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_LINCOL_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL02] CURPRO=[UPDDATTIM] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_LINCOL_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL02] CURPRO=[LINCOL.UPDDATTIM] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_LINCOL_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL02] CURPRO=[AUUID] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_LINCOL_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL02] CURPRO=[LINCOL.AUUID] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_LINCOL_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL02] CURPRO=[CREUSR] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_LINCOL_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL02] CURPRO=[LINCOL.CREUSR] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_LINCOL_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL02] CURPRO=[UPDUSR] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_LINCOL_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL02] CURPRO=[LINCOL.UPDUSR] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_LINCOL_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL02] CURPRO=[PROPERTY] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_LINCOL_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL02] CURPRO=[LINCOL.PROPERTY] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_LINCOL_AQCCOL01(IDX)="Event Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL02] CURPTH=[] AEVENT=[AINIT]"
IDX+=1 : EVENT_ADDLINE_LINCOL_AQCCOL01(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL02] CURPTH=[LINCOL] AEVENT=[AINIT]"
IDX+=1 : EVENT_ADDLINE_LINCOL_AQCCOL01(IDX)="Event Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL02] CURPTH=[] AEVENT=[ADDLINE_AFTER]"
IDX+=1 : EVENT_ADDLINE_LINCOL_AQCCOL01(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL02] CURPTH=[LINCOL] AEVENT=[ADDLINE_AFTER]"

Local Integer IDX : IDX=0
Local Char EVENT_ASSIGN_LINCOL(255)(0..)
EVENT_ASSIGN_LINCOL(IDX)= "ASSIGN_LINCOL"
IDX+=1 : EVENT_ASSIGN_LINCOL(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL02] CURPRO=[KEY1] ARULE=[CONTROL]"
IDX+=1 : EVENT_ASSIGN_LINCOL(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL02] CURPRO=[LINCOL.KEY1] ARULE=[CONTROL]"
IDX+=1 : EVENT_ASSIGN_LINCOL(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL02] CURPRO=[KEY1] ARULE=[PROPAGATE]"
IDX+=1 : EVENT_ASSIGN_LINCOL(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL02] CURPRO=[LINCOL.KEY1] ARULE=[PROPAGATE]"
IDX+=1 : EVENT_ASSIGN_LINCOL(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL02] CURPRO=[LINNO] ARULE=[CONTROL]"
IDX+=1 : EVENT_ASSIGN_LINCOL(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL02] CURPRO=[LINCOL.LINNO] ARULE=[CONTROL]"
IDX+=1 : EVENT_ASSIGN_LINCOL(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL02] CURPRO=[LINNO] ARULE=[PROPAGATE]"
IDX+=1 : EVENT_ASSIGN_LINCOL(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL02] CURPRO=[LINCOL.LINNO] ARULE=[PROPAGATE]"
IDX+=1 : EVENT_ASSIGN_LINCOL(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL02] CURPRO=[LINFLD] ARULE=[CONTROL]"
IDX+=1 : EVENT_ASSIGN_LINCOL(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL02] CURPRO=[LINCOL.LINFLD] ARULE=[CONTROL]"
IDX+=1 : EVENT_ASSIGN_LINCOL(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL02] CURPRO=[LINFLD] ARULE=[PROPAGATE]"
IDX+=1 : EVENT_ASSIGN_LINCOL(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL02] CURPRO=[LINCOL.LINFLD] ARULE=[PROPAGATE]"

Local Integer IDX : IDX=0
Local Char EVENT_ADDLINE_SUBLINCOL_AQCCOL02(255)(0..)
EVENT_ADDLINE_SUBLINCOL_AQCCOL02(IDX)= "ADDLINE_SUBLINCOL_AQCCOL02"
IDX+=1 : EVENT_ADDLINE_SUBLINCOL_AQCCOL02(IDX)="Event Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL02] CURPTH=[SUBLINCOL] AEVENT=[ADDLINE_BEFORE]"
IDX+=1 : EVENT_ADDLINE_SUBLINCOL_AQCCOL02(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL02] CURPTH=[LINCOL.SUBLINCOL] AEVENT=[ADDLINE_BEFORE]"
IDX+=1 : EVENT_ADDLINE_SUBLINCOL_AQCCOL02(IDX)="Property Action Execute CSTD=[AQCCOL03_CSTD] CLASS=[C_AQCCOL03] CURPRO=[KEY1] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_SUBLINCOL_AQCCOL02(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL03] CURPRO=[SUBLINCOL.KEY1] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_SUBLINCOL_AQCCOL02(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL03] CURPRO=[LINCOL.SUBLINCOL.KEY1] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_SUBLINCOL_AQCCOL02(IDX)="Property Action Execute CSTD=[AQCCOL03_CSTD] CLASS=[C_AQCCOL03] CURPRO=[LINNO] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_SUBLINCOL_AQCCOL02(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL03] CURPRO=[SUBLINCOL.LINNO] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_SUBLINCOL_AQCCOL02(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL03] CURPRO=[LINCOL.SUBLINCOL.LINNO] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_SUBLINCOL_AQCCOL02(IDX)="Property Action Execute CSTD=[AQCCOL03_CSTD] CLASS=[C_AQCCOL03] CURPRO=[SUBLINNO] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_SUBLINCOL_AQCCOL02(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL03] CURPRO=[SUBLINCOL.SUBLINNO] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_SUBLINCOL_AQCCOL02(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL03] CURPRO=[LINCOL.SUBLINCOL.SUBLINNO] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_SUBLINCOL_AQCCOL02(IDX)="Property Action Execute CSTD=[AQCCOL03_CSTD] CLASS=[C_AQCCOL03] CURPRO=[LINFLD] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_SUBLINCOL_AQCCOL02(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL03] CURPRO=[SUBLINCOL.LINFLD] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_SUBLINCOL_AQCCOL02(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL03] CURPRO=[LINCOL.SUBLINCOL.LINFLD] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_SUBLINCOL_AQCCOL02(IDX)="Property Action Execute CSTD=[AQCCOL03_CSTD] CLASS=[C_AQCCOL03] CURPRO=[CREDATTIM] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_SUBLINCOL_AQCCOL02(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL03] CURPRO=[SUBLINCOL.CREDATTIM] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_SUBLINCOL_AQCCOL02(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL03] CURPRO=[LINCOL.SUBLINCOL.CREDATTIM] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_SUBLINCOL_AQCCOL02(IDX)="Property Action Execute CSTD=[AQCCOL03_CSTD] CLASS=[C_AQCCOL03] CURPRO=[UPDDATTIM] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_SUBLINCOL_AQCCOL02(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL03] CURPRO=[SUBLINCOL.UPDDATTIM] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_SUBLINCOL_AQCCOL02(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL03] CURPRO=[LINCOL.SUBLINCOL.UPDDATTIM] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_SUBLINCOL_AQCCOL02(IDX)="Property Action Execute CSTD=[AQCCOL03_CSTD] CLASS=[C_AQCCOL03] CURPRO=[AUUID] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_SUBLINCOL_AQCCOL02(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL03] CURPRO=[SUBLINCOL.AUUID] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_SUBLINCOL_AQCCOL02(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL03] CURPRO=[LINCOL.SUBLINCOL.AUUID] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_SUBLINCOL_AQCCOL02(IDX)="Property Action Execute CSTD=[AQCCOL03_CSTD] CLASS=[C_AQCCOL03] CURPRO=[CREUSR] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_SUBLINCOL_AQCCOL02(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL03] CURPRO=[SUBLINCOL.CREUSR] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_SUBLINCOL_AQCCOL02(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL03] CURPRO=[LINCOL.SUBLINCOL.CREUSR] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_SUBLINCOL_AQCCOL02(IDX)="Property Action Execute CSTD=[AQCCOL03_CSTD] CLASS=[C_AQCCOL03] CURPRO=[UPDUSR] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_SUBLINCOL_AQCCOL02(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL03] CURPRO=[SUBLINCOL.UPDUSR] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_SUBLINCOL_AQCCOL02(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL03] CURPRO=[LINCOL.SUBLINCOL.UPDUSR] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_SUBLINCOL_AQCCOL02(IDX)="Property Action Execute CSTD=[AQCCOL03_CSTD] CLASS=[C_AQCCOL03] CURPRO=[PROPERTY] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_SUBLINCOL_AQCCOL02(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL03] CURPRO=[SUBLINCOL.PROPERTY] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_SUBLINCOL_AQCCOL02(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL03] CURPRO=[LINCOL.SUBLINCOL.PROPERTY] ARULE=[INIT]"
IDX+=1 : EVENT_ADDLINE_SUBLINCOL_AQCCOL02(IDX)="Event Action Execute CSTD=[AQCCOL03_CSTD] CLASS=[C_AQCCOL03] CURPTH=[] AEVENT=[AINIT]"
IDX+=1 : EVENT_ADDLINE_SUBLINCOL_AQCCOL02(IDX)="Event Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL03] CURPTH=[SUBLINCOL] AEVENT=[AINIT]"
IDX+=1 : EVENT_ADDLINE_SUBLINCOL_AQCCOL02(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL03] CURPTH=[LINCOL.SUBLINCOL] AEVENT=[AINIT]"
IDX+=1 : EVENT_ADDLINE_SUBLINCOL_AQCCOL02(IDX)="Event Action Execute CSTD=[AQCCOL03_CSTD] CLASS=[C_AQCCOL03] CURPTH=[] AEVENT=[ADDLINE_AFTER]"
IDX+=1 : EVENT_ADDLINE_SUBLINCOL_AQCCOL02(IDX)="Event Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL03] CURPTH=[SUBLINCOL] AEVENT=[ADDLINE_AFTER]"
IDX+=1 : EVENT_ADDLINE_SUBLINCOL_AQCCOL02(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL03] CURPTH=[LINCOL.SUBLINCOL] AEVENT=[ADDLINE_AFTER]"

Local Integer IDX : IDX=0
Local Char EVENT_ASSIGN_SUBLINCOL(255)(0..)
EVENT_ASSIGN_SUBLINCOL(IDX)= "ASSIGN_SUBLINCOL"
IDX+=1 : EVENT_ASSIGN_SUBLINCOL(IDX)="Property Action Execute CSTD=[AQCCOL03_CSTD] CLASS=[C_AQCCOL03] CURPRO=[KEY1] ARULE=[CONTROL]"
IDX+=1 : EVENT_ASSIGN_SUBLINCOL(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL03] CURPRO=[SUBLINCOL.KEY1] ARULE=[CONTROL]"
IDX+=1 : EVENT_ASSIGN_SUBLINCOL(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL03] CURPRO=[LINCOL.SUBLINCOL.KEY1] ARULE=[CONTROL]"
IDX+=1 : EVENT_ASSIGN_SUBLINCOL(IDX)="Property Action Execute CSTD=[AQCCOL03_CSTD] CLASS=[C_AQCCOL03] CURPRO=[KEY1] ARULE=[PROPAGATE]"
IDX+=1 : EVENT_ASSIGN_SUBLINCOL(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL03] CURPRO=[SUBLINCOL.KEY1] ARULE=[PROPAGATE]"
IDX+=1 : EVENT_ASSIGN_SUBLINCOL(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL03] CURPRO=[LINCOL.SUBLINCOL.KEY1] ARULE=[PROPAGATE]"
IDX+=1 : EVENT_ASSIGN_SUBLINCOL(IDX)="Property Action Execute CSTD=[AQCCOL03_CSTD] CLASS=[C_AQCCOL03] CURPRO=[LINNO] ARULE=[CONTROL]"
IDX+=1 : EVENT_ASSIGN_SUBLINCOL(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL03] CURPRO=[SUBLINCOL.LINNO] ARULE=[CONTROL]"
IDX+=1 : EVENT_ASSIGN_SUBLINCOL(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL03] CURPRO=[LINCOL.SUBLINCOL.LINNO] ARULE=[CONTROL]"
IDX+=1 : EVENT_ASSIGN_SUBLINCOL(IDX)="Property Action Execute CSTD=[AQCCOL03_CSTD] CLASS=[C_AQCCOL03] CURPRO=[LINNO] ARULE=[PROPAGATE]"
IDX+=1 : EVENT_ASSIGN_SUBLINCOL(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL03] CURPRO=[SUBLINCOL.LINNO] ARULE=[PROPAGATE]"
IDX+=1 : EVENT_ASSIGN_SUBLINCOL(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL03] CURPRO=[LINCOL.SUBLINCOL.LINNO] ARULE=[PROPAGATE]"
IDX+=1 : EVENT_ASSIGN_SUBLINCOL(IDX)="Property Action Execute CSTD=[AQCCOL03_CSTD] CLASS=[C_AQCCOL03] CURPRO=[SUBLINNO] ARULE=[CONTROL]"
IDX+=1 : EVENT_ASSIGN_SUBLINCOL(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL03] CURPRO=[SUBLINCOL.SUBLINNO] ARULE=[CONTROL]"
IDX+=1 : EVENT_ASSIGN_SUBLINCOL(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL03] CURPRO=[LINCOL.SUBLINCOL.SUBLINNO] ARULE=[CONTROL]"
IDX+=1 : EVENT_ASSIGN_SUBLINCOL(IDX)="Property Action Execute CSTD=[AQCCOL03_CSTD] CLASS=[C_AQCCOL03] CURPRO=[SUBLINNO] ARULE=[PROPAGATE]"
IDX+=1 : EVENT_ASSIGN_SUBLINCOL(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL03] CURPRO=[SUBLINCOL.SUBLINNO] ARULE=[PROPAGATE]"
IDX+=1 : EVENT_ASSIGN_SUBLINCOL(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL03] CURPRO=[LINCOL.SUBLINCOL.SUBLINNO] ARULE=[PROPAGATE]"
IDX+=1 : EVENT_ASSIGN_SUBLINCOL(IDX)="Property Action Execute CSTD=[AQCCOL03_CSTD] CLASS=[C_AQCCOL03] CURPRO=[LINFLD] ARULE=[CONTROL]"
IDX+=1 : EVENT_ASSIGN_SUBLINCOL(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL03] CURPRO=[SUBLINCOL.LINFLD] ARULE=[CONTROL]"
IDX+=1 : EVENT_ASSIGN_SUBLINCOL(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL03] CURPRO=[LINCOL.SUBLINCOL.LINFLD] ARULE=[CONTROL]"
IDX+=1 : EVENT_ASSIGN_SUBLINCOL(IDX)="Property Action Execute CSTD=[AQCCOL03_CSTD] CLASS=[C_AQCCOL03] CURPRO=[LINFLD] ARULE=[PROPAGATE]"
IDX+=1 : EVENT_ASSIGN_SUBLINCOL(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL03] CURPRO=[SUBLINCOL.LINFLD] ARULE=[PROPAGATE]"
IDX+=1 : EVENT_ASSIGN_SUBLINCOL(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL03] CURPRO=[LINCOL.SUBLINCOL.LINFLD] ARULE=[PROPAGATE]"

Local Integer IDX : IDX=0
Local Char EVENT_AINSERT1_AQCCOL01(255)(0..)
EVENT_AINSERT1_AQCCOL01(IDX)= "AINSERT1_AQCCOL01"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL01] CURPTH=[] AEVENT=[AINSERT_CONTROL_BEFORE]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Event Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL02] CURPTH=[] AEVENT=[AINSERT_CONTROL_BEFORE]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL02] CURPTH=[LINCOL] AEVENT=[AINSERT_CONTROL_BEFORE]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Event Action Execute CSTD=[AQCCOL03_CSTD] CLASS=[C_AQCCOL03] CURPTH=[] AEVENT=[AINSERT_CONTROL_BEFORE]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Event Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL03] CURPTH=[SUBLINCOL] AEVENT=[AINSERT_CONTROL_BEFORE]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL03] CURPTH=[LINCOL.SUBLINCOL] AEVENT=[AINSERT_CONTROL_BEFORE]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL01] CURPRO=[KEY1] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL01] CURPRO=[FIELD1] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL01] CURPRO=[CREDATTIM] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL01] CURPRO=[UPDDATTIM] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL01] CURPRO=[AUUID] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL01] CURPRO=[CREUSR] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL01] CURPRO=[UPDUSR] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL01] CURPRO=[PROPERTY] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL02] CURPRO=[KEY1] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL02] CURPRO=[LINCOL.KEY1] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL02] CURPRO=[LINNO] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL02] CURPRO=[LINCOL.LINNO] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL02] CURPRO=[LINFLD] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL02] CURPRO=[LINCOL.LINFLD] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL02] CURPRO=[CREDATTIM] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL02] CURPRO=[LINCOL.CREDATTIM] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL02] CURPRO=[UPDDATTIM] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL02] CURPRO=[LINCOL.UPDDATTIM] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL02] CURPRO=[AUUID] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL02] CURPRO=[LINCOL.AUUID] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL02] CURPRO=[CREUSR] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL02] CURPRO=[LINCOL.CREUSR] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL02] CURPRO=[UPDUSR] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL02] CURPRO=[LINCOL.UPDUSR] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL02] CURPRO=[PROPERTY] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL02] CURPRO=[LINCOL.PROPERTY] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL03_CSTD] CLASS=[C_AQCCOL03] CURPRO=[KEY1] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL03] CURPRO=[SUBLINCOL.KEY1] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL03] CURPRO=[LINCOL.SUBLINCOL.KEY1] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL03_CSTD] CLASS=[C_AQCCOL03] CURPRO=[LINNO] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL03] CURPRO=[SUBLINCOL.LINNO] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL03] CURPRO=[LINCOL.SUBLINCOL.LINNO] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL03_CSTD] CLASS=[C_AQCCOL03] CURPRO=[SUBLINNO] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL03] CURPRO=[SUBLINCOL.SUBLINNO] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL03] CURPRO=[LINCOL.SUBLINCOL.SUBLINNO] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL03_CSTD] CLASS=[C_AQCCOL03] CURPRO=[LINFLD] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL03] CURPRO=[SUBLINCOL.LINFLD] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL03] CURPRO=[LINCOL.SUBLINCOL.LINFLD] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL03_CSTD] CLASS=[C_AQCCOL03] CURPRO=[CREDATTIM] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL03] CURPRO=[SUBLINCOL.CREDATTIM] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL03] CURPRO=[LINCOL.SUBLINCOL.CREDATTIM] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL03_CSTD] CLASS=[C_AQCCOL03] CURPRO=[UPDDATTIM] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL03] CURPRO=[SUBLINCOL.UPDDATTIM] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL03] CURPRO=[LINCOL.SUBLINCOL.UPDDATTIM] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL03_CSTD] CLASS=[C_AQCCOL03] CURPRO=[AUUID] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL03] CURPRO=[SUBLINCOL.AUUID] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL03] CURPRO=[LINCOL.SUBLINCOL.AUUID] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL03_CSTD] CLASS=[C_AQCCOL03] CURPRO=[CREUSR] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL03] CURPRO=[SUBLINCOL.CREUSR] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL03] CURPRO=[LINCOL.SUBLINCOL.CREUSR] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL03_CSTD] CLASS=[C_AQCCOL03] CURPRO=[UPDUSR] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL03] CURPRO=[SUBLINCOL.UPDUSR] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL03] CURPRO=[LINCOL.SUBLINCOL.UPDUSR] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL03_CSTD] CLASS=[C_AQCCOL03] CURPRO=[PROPERTY] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL03] CURPRO=[SUBLINCOL.PROPERTY] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL03] CURPRO=[LINCOL.SUBLINCOL.PROPERTY] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Event Action Execute CSTD=[AQCCOL03_CSTD] CLASS=[C_AQCCOL03] CURPTH=[] AEVENT=[ACONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Event Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL03] CURPTH=[SUBLINCOL] AEVENT=[ACONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL03] CURPTH=[LINCOL.SUBLINCOL] AEVENT=[ACONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Event Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL02] CURPTH=[] AEVENT=[ACONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL02] CURPTH=[LINCOL] AEVENT=[ACONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL01] CURPTH=[] AEVENT=[ACONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Event Action Execute CSTD=[AQCCOL03_CSTD] CLASS=[C_AQCCOL03] CURPTH=[] AEVENT=[AINSERT_CONTROL_AFTER]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Event Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL03] CURPTH=[SUBLINCOL] AEVENT=[AINSERT_CONTROL_AFTER]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL03] CURPTH=[LINCOL.SUBLINCOL] AEVENT=[AINSERT_CONTROL_AFTER]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Event Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL02] CURPTH=[] AEVENT=[AINSERT_CONTROL_AFTER]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL02] CURPTH=[LINCOL] AEVENT=[AINSERT_CONTROL_AFTER]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL01] CURPTH=[] AEVENT=[AINSERT_CONTROL_AFTER]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL01] CURPTH=[] AEVENT=[AINSERT_BEFORE]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL01] CURPRO=[CREUSR] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL01] CURPRO=[CREUSR] ARULE=[PROPAGATE]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL01] CURPRO=[UPDUSR] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL01] CURPRO=[CREDATTIM] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL01] CURPRO=[CREDATTIM] ARULE=[PROPAGATE]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL01] CURPRO=[UPDDATTIM] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Event Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL02] CURPTH=[] AEVENT=[AINSERT_BEFORE]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL02] CURPTH=[LINCOL] AEVENT=[AINSERT_BEFORE]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL02] CURPRO=[CREUSR] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL02] CURPRO=[LINCOL.CREUSR] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL02] CURPRO=[CREUSR] ARULE=[PROPAGATE]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL02] CURPRO=[LINCOL.CREUSR] ARULE=[PROPAGATE]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL02] CURPRO=[UPDUSR] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL02] CURPRO=[LINCOL.UPDUSR] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL02] CURPRO=[CREDATTIM] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL02] CURPRO=[LINCOL.CREDATTIM] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL02] CURPRO=[CREDATTIM] ARULE=[PROPAGATE]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL02] CURPRO=[LINCOL.CREDATTIM] ARULE=[PROPAGATE]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL02] CURPRO=[UPDDATTIM] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL02] CURPRO=[LINCOL.UPDDATTIM] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Event Action Execute CSTD=[AQCCOL03_CSTD] CLASS=[C_AQCCOL03] CURPTH=[] AEVENT=[AINSERT_BEFORE]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Event Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL03] CURPTH=[SUBLINCOL] AEVENT=[AINSERT_BEFORE]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL03] CURPTH=[LINCOL.SUBLINCOL] AEVENT=[AINSERT_BEFORE]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL03_CSTD] CLASS=[C_AQCCOL03] CURPRO=[CREUSR] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL03] CURPRO=[SUBLINCOL.CREUSR] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL03] CURPRO=[LINCOL.SUBLINCOL.CREUSR] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL03_CSTD] CLASS=[C_AQCCOL03] CURPRO=[CREUSR] ARULE=[PROPAGATE]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL03] CURPRO=[SUBLINCOL.CREUSR] ARULE=[PROPAGATE]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL03] CURPRO=[LINCOL.SUBLINCOL.CREUSR] ARULE=[PROPAGATE]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL03_CSTD] CLASS=[C_AQCCOL03] CURPRO=[UPDUSR] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL03] CURPRO=[SUBLINCOL.UPDUSR] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL03] CURPRO=[LINCOL.SUBLINCOL.UPDUSR] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL03_CSTD] CLASS=[C_AQCCOL03] CURPRO=[CREDATTIM] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL03] CURPRO=[SUBLINCOL.CREDATTIM] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL03] CURPRO=[LINCOL.SUBLINCOL.CREDATTIM] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL03_CSTD] CLASS=[C_AQCCOL03] CURPRO=[CREDATTIM] ARULE=[PROPAGATE]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL03] CURPRO=[SUBLINCOL.CREDATTIM] ARULE=[PROPAGATE]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL03] CURPRO=[LINCOL.SUBLINCOL.CREDATTIM] ARULE=[PROPAGATE]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL03_CSTD] CLASS=[C_AQCCOL03] CURPRO=[UPDDATTIM] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL03] CURPRO=[SUBLINCOL.UPDDATTIM] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Property Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL03] CURPRO=[LINCOL.SUBLINCOL.UPDDATTIM] ARULE=[CONTROL]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Event Action Execute CSTD=[AQCCOL03_CSTD] CLASS=[C_AQCCOL03] CURPTH=[] AEVENT=[AINSERT_AFTER]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Event Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL03] CURPTH=[SUBLINCOL] AEVENT=[AINSERT_AFTER]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL03] CURPTH=[LINCOL.SUBLINCOL] AEVENT=[AINSERT_AFTER]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Event Action Execute CSTD=[AQCCOL02_CSTD] CLASS=[C_AQCCOL02] CURPTH=[] AEVENT=[AINSERT_AFTER]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL02] CURPTH=[LINCOL] AEVENT=[AINSERT_AFTER]"
IDX+=1 : EVENT_AINSERT1_AQCCOL01(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL01] CURPTH=[] AEVENT=[AINSERT_AFTER]"





Local Integer IDX : IDX=0
Local Char EVENT_ADELETE1_AQCCOL10(255)(0..)
EVENT_ADELETE1_AQCCOL10(IDX)= "ADELETE1_AQCCOL10"
IDX+=1 : EVENT_ADELETE1_AQCCOL10(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL10] CURPTH=[] AEVENT=[ADELETE_CONTROL_BEFORE]"
IDX+=1 : EVENT_ADELETE1_AQCCOL10(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL10] CURPTH=[] AEVENT=[ADELETE_CONTROL_AFTER]"
IDX+=1 : EVENT_ADELETE1_AQCCOL10(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL10] CURPTH=[] AEVENT=[ADELETE_BEFORE]"
IDX+=1 : EVENT_ADELETE1_AQCCOL10(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL10] CURPTH=[] AEVENT=[ADELETE_AFTER]"

Local Integer IDX : IDX=0
Local Char EVENT_ADELETE1_AQCCOL11(255)(0..)
EVENT_ADELETE1_AQCCOL11(IDX)= "ADELETE1_AQCCOL11"
IDX+=1 : EVENT_ADELETE1_AQCCOL11(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL11] CURPTH=[] AEVENT=[ADELETE_CONTROL_BEFORE]"
IDX+=1 : EVENT_ADELETE1_AQCCOL11(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL11] CURPTH=[SUBCOL0] AEVENT=[ADELETE_CONTROL_BEFORE]"
IDX+=1 : EVENT_ADELETE1_AQCCOL11(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL11] CURPTH=[] AEVENT=[ADELETE_CONTROL_AFTER]"
IDX+=1 : EVENT_ADELETE1_AQCCOL11(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL11] CURPTH=[SUBCOL0] AEVENT=[ADELETE_CONTROL_AFTER]"
IDX+=1 : EVENT_ADELETE1_AQCCOL11(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL11] CURPTH=[] AEVENT=[ADELETE_BEFORE]"
IDX+=1 : EVENT_ADELETE1_AQCCOL11(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL11] CURPTH=[SUBCOL0] AEVENT=[ADELETE_BEFORE]"
IDX+=1 : EVENT_ADELETE1_AQCCOL11(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL11] CURPTH=[] AEVENT=[ADELETE_AFTER]"
IDX+=1 : EVENT_ADELETE1_AQCCOL11(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL11] CURPTH=[SUBCOL0] AEVENT=[ADELETE_AFTER]"

Local Integer IDX : IDX=0
Local Char EVENT_ADELETE1_AQCCOL12(255)(0..)
EVENT_ADELETE1_AQCCOL12(IDX)= "ADELETE1_AQCCOL12"
IDX+=1 : EVENT_ADELETE1_AQCCOL12(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL12] CURPTH=[] AEVENT=[ADELETE_CONTROL_BEFORE]"
IDX+=1 : EVENT_ADELETE1_AQCCOL12(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL12] CURPTH=[SUBCOL1] AEVENT=[ADELETE_CONTROL_BEFORE]"
IDX+=1 : EVENT_ADELETE1_AQCCOL12(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL12] CURPTH=[SUBCOL0.SUBCOL1] AEVENT=[ADELETE_CONTROL_BEFORE]"
IDX+=1 : EVENT_ADELETE1_AQCCOL12(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL12] CURPTH=[] AEVENT=[ADELETE_CONTROL_AFTER]"
IDX+=1 : EVENT_ADELETE1_AQCCOL12(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL12] CURPTH=[SUBCOL1] AEVENT=[ADELETE_CONTROL_AFTER]"
IDX+=1 : EVENT_ADELETE1_AQCCOL12(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL12] CURPTH=[SUBCOL0.SUBCOL1] AEVENT=[ADELETE_CONTROL_AFTER]"
IDX+=1 : EVENT_ADELETE1_AQCCOL12(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL12] CURPTH=[] AEVENT=[ADELETE_BEFORE]"
IDX+=1 : EVENT_ADELETE1_AQCCOL12(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL12] CURPTH=[SUBCOL1] AEVENT=[ADELETE_BEFORE]"
IDX+=1 : EVENT_ADELETE1_AQCCOL12(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL12] CURPTH=[SUBCOL0.SUBCOL1] AEVENT=[ADELETE_BEFORE]"
IDX+=1 : EVENT_ADELETE1_AQCCOL12(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL12] CURPTH=[] AEVENT=[ADELETE_AFTER]"
IDX+=1 : EVENT_ADELETE1_AQCCOL12(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL12] CURPTH=[SUBCOL1] AEVENT=[ADELETE_AFTER]"
IDX+=1 : EVENT_ADELETE1_AQCCOL12(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL12] CURPTH=[SUBCOL0.SUBCOL1] AEVENT=[ADELETE_AFTER]"

Local Integer IDX : IDX=0
Local Char EVENT_ADELETE1_AQCCOL13(255)(0..)
EVENT_ADELETE1_AQCCOL13(IDX)= "ADELETE1_AQCCOL13"
IDX+=1 : EVENT_ADELETE1_AQCCOL13(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL13] CURPTH=[] AEVENT=[ADELETE_CONTROL_BEFORE]"
IDX+=1 : EVENT_ADELETE1_AQCCOL13(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL13] CURPTH=[SUBCOL2] AEVENT=[ADELETE_CONTROL_BEFORE]"
IDX+=1 : EVENT_ADELETE1_AQCCOL13(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL13] CURPTH=[SUBCOL1.SUBCOL2] AEVENT=[ADELETE_CONTROL_BEFORE]"
IDX+=1 : EVENT_ADELETE1_AQCCOL13(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL13] CURPTH=[SUBCOL0.SUBCOL1.SUBCOL2] AEVENT=[ADELETE_CONTROL_BEFORE]"
IDX+=1 : EVENT_ADELETE1_AQCCOL13(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL13] CURPTH=[] AEVENT=[ADELETE_CONTROL_AFTER]"
IDX+=1 : EVENT_ADELETE1_AQCCOL13(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL13] CURPTH=[SUBCOL2] AEVENT=[ADELETE_CONTROL_AFTER]"
IDX+=1 : EVENT_ADELETE1_AQCCOL13(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL13] CURPTH=[SUBCOL1.SUBCOL2] AEVENT=[ADELETE_CONTROL_AFTER]"
IDX+=1 : EVENT_ADELETE1_AQCCOL13(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL13] CURPTH=[SUBCOL0.SUBCOL1.SUBCOL2] AEVENT=[ADELETE_CONTROL_AFTER]"
IDX+=1 : EVENT_ADELETE1_AQCCOL13(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL13] CURPTH=[] AEVENT=[ADELETE_BEFORE]"
IDX+=1 : EVENT_ADELETE1_AQCCOL13(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL13] CURPTH=[SUBCOL2] AEVENT=[ADELETE_BEFORE]"
IDX+=1 : EVENT_ADELETE1_AQCCOL13(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL13] CURPTH=[SUBCOL1.SUBCOL2] AEVENT=[ADELETE_BEFORE]"
IDX+=1 : EVENT_ADELETE1_AQCCOL13(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL13] CURPTH=[SUBCOL0.SUBCOL1.SUBCOL2] AEVENT=[ADELETE_BEFORE]"
IDX+=1 : EVENT_ADELETE1_AQCCOL13(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL13] CURPTH=[] AEVENT=[ADELETE_AFTER]"
IDX+=1 : EVENT_ADELETE1_AQCCOL13(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL13] CURPTH=[SUBCOL2] AEVENT=[ADELETE_AFTER]"
IDX+=1 : EVENT_ADELETE1_AQCCOL13(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL13] CURPTH=[SUBCOL1.SUBCOL2] AEVENT=[ADELETE_AFTER]"
IDX+=1 : EVENT_ADELETE1_AQCCOL13(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL13] CURPTH=[SUBCOL0.SUBCOL1.SUBCOL2] AEVENT=[ADELETE_AFTER]"

Local Integer IDX : IDX=0
Local Char EVENT_ADELETE1_AQCCOL14(255)(0..)
EVENT_ADELETE1_AQCCOL14(IDX)= "ADELETE1_AQCCOL14"
IDX+=1 : EVENT_ADELETE1_AQCCOL14(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL14] CURPTH=[] AEVENT=[ADELETE_CONTROL_BEFORE]"
IDX+=1 : EVENT_ADELETE1_AQCCOL14(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL14] CURPTH=[SUBCOL3] AEVENT=[ADELETE_CONTROL_BEFORE]"
IDX+=1 : EVENT_ADELETE1_AQCCOL14(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL14] CURPTH=[SUBCOL2.SUBCOL3] AEVENT=[ADELETE_CONTROL_BEFORE]"
IDX+=1 : EVENT_ADELETE1_AQCCOL14(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL14] CURPTH=[SUBCOL1.SUBCOL2.SUBCOL3] AEVENT=[ADELETE_CONTROL_BEFORE]"
IDX+=1 : EVENT_ADELETE1_AQCCOL14(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL14] CURPTH=[SUBCOL0.SUBCOL1.SUBCOL2.SUBCOL3] AEVENT=[ADELETE_CONTROL_BEFORE]"
IDX+=1 : EVENT_ADELETE1_AQCCOL14(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL14] CURPTH=[] AEVENT=[ADELETE_CONTROL_AFTER]"
IDX+=1 : EVENT_ADELETE1_AQCCOL14(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL14] CURPTH=[SUBCOL3] AEVENT=[ADELETE_CONTROL_AFTER]"
IDX+=1 : EVENT_ADELETE1_AQCCOL14(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL14] CURPTH=[SUBCOL2.SUBCOL3] AEVENT=[ADELETE_CONTROL_AFTER]"
IDX+=1 : EVENT_ADELETE1_AQCCOL14(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL14] CURPTH=[SUBCOL1.SUBCOL2.SUBCOL3] AEVENT=[ADELETE_CONTROL_AFTER]"
IDX+=1 : EVENT_ADELETE1_AQCCOL14(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL14] CURPTH=[SUBCOL0.SUBCOL1.SUBCOL2.SUBCOL3] AEVENT=[ADELETE_CONTROL_AFTER]"
IDX+=1 : EVENT_ADELETE1_AQCCOL14(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL14] CURPTH=[] AEVENT=[ADELETE_BEFORE]"
IDX+=1 : EVENT_ADELETE1_AQCCOL14(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL14] CURPTH=[SUBCOL3] AEVENT=[ADELETE_BEFORE]"
IDX+=1 : EVENT_ADELETE1_AQCCOL14(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL14] CURPTH=[SUBCOL2.SUBCOL3] AEVENT=[ADELETE_BEFORE]"
IDX+=1 : EVENT_ADELETE1_AQCCOL14(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL14] CURPTH=[SUBCOL1.SUBCOL2.SUBCOL3] AEVENT=[ADELETE_BEFORE]"
IDX+=1 : EVENT_ADELETE1_AQCCOL14(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL14] CURPTH=[SUBCOL0.SUBCOL1.SUBCOL2.SUBCOL3] AEVENT=[ADELETE_BEFORE]"
IDX+=1 : EVENT_ADELETE1_AQCCOL14(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL14] CURPTH=[] AEVENT=[ADELETE_AFTER]"
IDX+=1 : EVENT_ADELETE1_AQCCOL14(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL14] CURPTH=[SUBCOL3] AEVENT=[ADELETE_AFTER]"
IDX+=1 : EVENT_ADELETE1_AQCCOL14(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL14] CURPTH=[SUBCOL2.SUBCOL3] AEVENT=[ADELETE_AFTER]"
IDX+=1 : EVENT_ADELETE1_AQCCOL14(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL14] CURPTH=[SUBCOL1.SUBCOL2.SUBCOL3] AEVENT=[ADELETE_AFTER]"
IDX+=1 : EVENT_ADELETE1_AQCCOL14(IDX)="Event Action Execute CSTD=[AQCCOL01_CSTD] CLASS=[C_AQCCOL14] CURPTH=[SUBCOL0.SUBCOL1.SUBCOL2.SUBCOL3] AEVENT=[ADELETE_AFTER]"


Local Integer IDX : IDX=0
Local Char EVENT_ADELLINE1_AQCCOL10(255)(0..)
EVENT_ADELLINE1_AQCCOL10(IDX)= "ADELLINE1_AQCCOL10"
IDX+=1 : EVENT_ADELLINE1_AQCCOL10(IDX)="Event Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL10] CURPTH=[] AEVENT=[AREAD_BEFORE]"
IDX+=1 : EVENT_ADELLINE1_AQCCOL10(IDX)="Event Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL10] CURPTH=[] AEVENT=[AREAD_AFTER]"
IDX+=1 : EVENT_ADELLINE1_AQCCOL10(IDX)="Event Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL11] CURPTH=[SUBCOL1] AEVENT=[ADELLINE_BEFORE]"
IDX+=1 : EVENT_ADELLINE1_AQCCOL10(IDX)="Event Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL11] CURPTH=[SUBCOL0.SUBCOL1] AEVENT=[ADELLINE_BEFORE]"

Local Integer IDX : IDX=0
Local Char EVENT_AUPDATE_AQCCOL10(255)(0..)
EVENT_AUPDATE_AQCCOL10(IDX)= "AUPDATE_AQCCOL10"
IDX+=1 : EVENT_AUPDATE_AQCCOL10(IDX)="Event Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL10] CURPTH=[] AEVENT=[AREAD_BEFORE]"
IDX+=1 : EVENT_AUPDATE_AQCCOL10(IDX)="Event Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL10] CURPTH=[] AEVENT=[AREAD_AFTER]"
IDX+=1 : EVENT_AUPDATE_AQCCOL10(IDX)="Event Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL10] CURPTH=[] AEVENT=[AUPDATE_CONTROL_BEFORE]"
IDX+=1 : EVENT_AUPDATE_AQCCOL10(IDX)="Property Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL10] CURPRO=[KEY1] ARULE=[CONTROL]"
IDX+=1 : EVENT_AUPDATE_AQCCOL10(IDX)="Property Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL10] CURPRO=[FIELD1] ARULE=[CONTROL]"
IDX+=1 : EVENT_AUPDATE_AQCCOL10(IDX)="Property Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL10] CURPRO=[CREDATTIM] ARULE=[CONTROL]"
IDX+=1 : EVENT_AUPDATE_AQCCOL10(IDX)="Property Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL10] CURPRO=[UPDDATTIM] ARULE=[CONTROL]"
IDX+=1 : EVENT_AUPDATE_AQCCOL10(IDX)="Property Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL10] CURPRO=[AUUID] ARULE=[CONTROL]"
IDX+=1 : EVENT_AUPDATE_AQCCOL10(IDX)="Property Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL10] CURPRO=[CREUSR] ARULE=[CONTROL]"
IDX+=1 : EVENT_AUPDATE_AQCCOL10(IDX)="Property Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL10] CURPRO=[UPDUSR] ARULE=[CONTROL]"
IDX+=1 : EVENT_AUPDATE_AQCCOL10(IDX)="Property Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL10] CURPRO=[PROPERTY] ARULE=[CONTROL]"
IDX+=1 : EVENT_AUPDATE_AQCCOL10(IDX)="Property Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL11] CURPRO=[KEY1] ARULE=[CONTROL]"
IDX+=1 : EVENT_AUPDATE_AQCCOL10(IDX)="Property Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL11] CURPRO=[SUBCOL0.KEY1] ARULE=[CONTROL]"
IDX+=1 : EVENT_AUPDATE_AQCCOL10(IDX)="Property Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL11] CURPRO=[LINNO] ARULE=[CONTROL]"
IDX+=1 : EVENT_AUPDATE_AQCCOL10(IDX)="Property Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL11] CURPRO=[SUBCOL0.LINNO] ARULE=[CONTROL]"
IDX+=1 : EVENT_AUPDATE_AQCCOL10(IDX)="Property Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL11] CURPRO=[LINFLD] ARULE=[CONTROL]"
IDX+=1 : EVENT_AUPDATE_AQCCOL10(IDX)="Property Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL11] CURPRO=[SUBCOL0.LINFLD] ARULE=[CONTROL]"
IDX+=1 : EVENT_AUPDATE_AQCCOL10(IDX)="Property Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL11] CURPRO=[CREDATTIM] ARULE=[CONTROL]"
IDX+=1 : EVENT_AUPDATE_AQCCOL10(IDX)="Property Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL11] CURPRO=[SUBCOL0.CREDATTIM] ARULE=[CONTROL]"
IDX+=1 : EVENT_AUPDATE_AQCCOL10(IDX)="Property Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL11] CURPRO=[UPDDATTIM] ARULE=[CONTROL]"
IDX+=1 : EVENT_AUPDATE_AQCCOL10(IDX)="Property Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL11] CURPRO=[SUBCOL0.UPDDATTIM] ARULE=[CONTROL]"
IDX+=1 : EVENT_AUPDATE_AQCCOL10(IDX)="Property Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL11] CURPRO=[AUUID] ARULE=[CONTROL]"
IDX+=1 : EVENT_AUPDATE_AQCCOL10(IDX)="Property Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL11] CURPRO=[SUBCOL0.AUUID] ARULE=[CONTROL]"
IDX+=1 : EVENT_AUPDATE_AQCCOL10(IDX)="Property Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL11] CURPRO=[CREUSR] ARULE=[CONTROL]"
IDX+=1 : EVENT_AUPDATE_AQCCOL10(IDX)="Property Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL11] CURPRO=[SUBCOL0.CREUSR] ARULE=[CONTROL]"
IDX+=1 : EVENT_AUPDATE_AQCCOL10(IDX)="Property Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL11] CURPRO=[UPDUSR] ARULE=[CONTROL]"
IDX+=1 : EVENT_AUPDATE_AQCCOL10(IDX)="Property Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL11] CURPRO=[SUBCOL0.UPDUSR] ARULE=[CONTROL]"
IDX+=1 : EVENT_AUPDATE_AQCCOL10(IDX)="Property Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL11] CURPRO=[PROPERTY] ARULE=[CONTROL]"
IDX+=1 : EVENT_AUPDATE_AQCCOL10(IDX)="Property Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL11] CURPRO=[SUBCOL0.PROPERTY] ARULE=[CONTROL]"
IDX+=1 : EVENT_AUPDATE_AQCCOL10(IDX)="Event Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL11] CURPTH=[] AEVENT=[ACONTROL]"
IDX+=1 : EVENT_AUPDATE_AQCCOL10(IDX)="Event Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL11] CURPTH=[SUBCOL0] AEVENT=[ACONTROL]"
IDX+=1 : EVENT_AUPDATE_AQCCOL10(IDX)="Event Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL10] CURPTH=[] AEVENT=[ACONTROL]"
IDX+=1 : EVENT_AUPDATE_AQCCOL10(IDX)="Event Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL10] CURPTH=[] AEVENT=[AUPDATE_CONTROL_AFTER]"
IDX+=1 : EVENT_AUPDATE_AQCCOL10(IDX)="Event Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL10] CURPTH=[] AEVENT=[AUPDATE_BEFORE]"
IDX+=1 : EVENT_AUPDATE_AQCCOL10(IDX)="Property Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL10] CURPRO=[UPDUSR] ARULE=[CONTROL]"
IDX+=1 : EVENT_AUPDATE_AQCCOL10(IDX)="Property Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL10] CURPRO=[UPDUSR] ARULE=[PROPAGATE]"
IDX+=1 : EVENT_AUPDATE_AQCCOL10(IDX)="Property Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL10] CURPRO=[UPDDATTIM] ARULE=[CONTROL]"
IDX+=1 : EVENT_AUPDATE_AQCCOL10(IDX)="Property Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL10] CURPRO=[UPDDATTIM] ARULE=[PROPAGATE]"
IDX+=1 : EVENT_AUPDATE_AQCCOL10(IDX)="Event Action Execute CSTD=[AQCCOL10_CSTD] CLASS=[C_AQCCOL10] CURPTH=[] AEVENT=[AUPDATE_AFTER]"Return


Funprog AGETMESSAGES(OBJ,ERRORS)
Variable Instance OBJ Using OBJECT
Variable Char ERRORS()
Local Integer MY_STATUS, ERR_STATUS,ERR_CATEGORY
Local Integer  NBERRORS
Local Integer AI
Local Char ERR_PROPERTY(250),ERR_PROPERTY_LABEL(250),ERR_MESSAGE(250),ERR_ENVIRONMENT(250)
[L]MY_STATUS = fmet OBJ.ASEARCHINFOS([V]CST_ALL,AVOID.ACHAR,[V]CST_AFATAL,0)
Call CHECK_EQUAL([L]MY_STATUS, [V]CST_AOK) From AXUNIT
While [L]MY_STATUS = [V]CST_AOK # & NBERRORS<25
  [L]MY_STATUS = fmet OBJ.AGETNEXTINFOS( [L]ERR_STATUS, [L]ERR_PROPERTY, [L]ERR_PROPERTY_LABEL, [L]ERR_MESSAGE, [L]ERR_CATEGORY, [L]ERR_ENVIRONMENT)
  If [L]MY_STATUS = [V]CST_AOK
    If [L]ERR_STATUS <> [V]CST_ADEL and [L]ERR_STATUS <> [V]CST_ANEWDEL
      NBERRORS+=1
      #ERRORS(NBERRORS) = "Property=["+[L]ERR_PROPERTY+"] Property Label=["+[L]ERR_PROPERTY_LABEL
#&      + "] Message=["+[L]ERR_MESSAGE+"] Category=["+num$([L]ERR_CATEGORY)+"] Environment=["+[L]ERR_ENVIRONMENT+"]"
      ERRORS(NBERRORS)=[L]ERR_MESSAGE
    Endif
  Endif
Wend
End NBERRORS

#**
#* Write messages to log
#*!
Subprog WRITE_COL_MSGS(OBJ,MSG_TYPE)
Value Instance OBJ Using OBJECT
Value Char MSG_TYPE
If OBJ=null : End : Endif
Local Integer I
For I=1 To maxtab(OBJ.AERROR)
 If  OBJ.AERROR(I)<>null & OBJ.AERROR(I).DEL<>2
    Call LOG_LINE('IDX+=1 : COL_'+MSG_TYPE+'(IDX)="'+OBJ.AERROR(I).PRO-":"-OBJ.AERROR(I).MES+'"')
 Endif
Next

# clear messages
Callmet OBJ.ADELETEERROR(CST_ALLERRORS)

End
#**
#* Write messages to log
#*!
Subprog WRITE_PROPERTY_MESSAGES(OBJ,MSG_TYPE,I)
Value Instance OBJ Using OBJECT
#Value Instance OBJ Using =[V]CST_C_NAME_CLASS_CONTEXT
Value Char MSG_TYPE
Variable Integer I
Local Integer J
Call LOG_LINE('Local Char PROPERTY_'+MSG_TYPE+'(255)(0..)')
Call LOG_LINE('Local Integer IDX : IDX=0')
For I=1 To maxtab(OBJ.AERROR)
 If  OBJ.AERROR(I)<>null & OBJ.AERROR(I).DEL<>2
   J+=1
   Call LOG_LINE('IDX+=1 : PROPERTY_'+MSG_TYPE+'(IDX)="'+OBJ.AERROR(I).PRO-":"-OBJ.AERROR(I).MES+'"')
 Endif
Next I
If J=0
  Call LOG_LINE('IDX+=1 : PROPERTY_'+MSG_TYPE+'(IDX)="No messages or errors found"')
Endif

End

#**
#* Write messages to log
#*!
Subprog WRITE_METHOD_MESSAGES(OBJ,MSG_TYPE,I)
Value Instance OBJ Using OBJECT
#Value Instance OBJ Using =[V]CST_C_NAME_CLASS_CONTEXT
Value Char MSG_TYPE
Variable Integer I
Local Integer J
Call LOG_LINE('Local Char METHOD_'+MSG_TYPE+'(255)(0..)')
Call LOG_LINE('Local Integer IDX : IDX=0')
#For I=1 To maxtab(OBJ.AERROR)
 If  OBJ.AERROR(I)<>null & OBJ.AERROR(I).DEL<>2
   J+=1
   Call LOG_LINE('IDX+=1 : METHOD_'+MSG_TYPE+'(IDX)="'+OBJ.AERROR(I).PRO-":"-OBJ.AERROR(I).MES+'"')
 Endif
#Next I
If J=0
  Call LOG_LINE('IDX+=1 : METHOD_'+MSG_TYPE+'(IDX)="No messages or errors found"')
Endif
End

Subprog LOG_LINE(LINE)
  Openo func AXUNIT.LOG_NAME, -1 Using [LOG_]
  Iomode adxium GUTF8 Using [LOG_]
  Iomode adxirs "" Using [LOG_]
  Wrseq LINE Using [LOG_]
  Wrseq chr$(10) Using [LOG_]
  Openo Using [LOG_]
End


Subprog CREATE_INSTANCE(KEY1)
Value char KEY1

Local Integer MY_STATUS,SUBCOL0_NUM,SUBCOL1_NUM,SUBCOL2_NUM,SUBCOL3_NUM

TC="Create instance with header + 4 collections"
Call CHECK_EQUAL(TC,TC) From AXUNIT

Local Instance MY_INSTANCE Using C_AQCCOL10
MY_INSTANCE = NewInstance C_AQCCOL10

[L]MY_STATUS = fmet MY_INSTANCE.AINIT()
Call CHECK_NOTEQUAL([L]MY_STATUS,[V]CST_AERROR) From AXUNIT
MY_INSTANCE.KEY1=KEY1
MY_INSTANCE.FIELD1="Header"
[L]SUBCOL0_NUM = fmet MY_INSTANCE.SUBCOL0.AADD([V]CST_ALASTPOS)
MY_INSTANCE.SUBCOL0(SUBCOL0_NUM).KEY1 = KEY1
MY_INSTANCE.SUBCOL0(SUBCOL0_NUM).LINNO = 1
MY_INSTANCE.SUBCOL0(SUBCOL0_NUM).LINFLD = "Line 0"
[L]SUBCOL1_NUM = fmet MY_INSTANCE.SUBCOL0(SUBCOL0_NUM).SUBCOL1.AADD([V]CST_ALASTPOS)
MY_INSTANCE.SUBCOL0(SUBCOL0_NUM).SUBCOL1(SUBCOL1_NUM).KEY1 = KEY1
MY_INSTANCE.SUBCOL0(SUBCOL0_NUM).SUBCOL1(SUBCOL1_NUM).LINNO = 1
MY_INSTANCE.SUBCOL0(SUBCOL0_NUM).SUBCOL1(SUBCOL1_NUM).SUBLIN1 = 1
MY_INSTANCE.SUBCOL0(SUBCOL0_NUM).SUBCOL1(SUBCOL1_NUM).LINFLD = "Sub-line 1"
[L]SUBCOL2_NUM = fmet MY_INSTANCE.SUBCOL0(SUBCOL0_NUM).SUBCOL1(SUBCOL1_NUM).SUBCOL2.AADD([V]CST_ALASTPOS)
MY_INSTANCE.SUBCOL0(SUBCOL0_NUM).SUBCOL1(SUBCOL1_NUM).SUBCOL2(SUBCOL2_NUM).KEY1 = KEY1
MY_INSTANCE.SUBCOL0(SUBCOL0_NUM).SUBCOL1(SUBCOL1_NUM).SUBCOL2(SUBCOL2_NUM).LINNO = 1
MY_INSTANCE.SUBCOL0(SUBCOL0_NUM).SUBCOL1(SUBCOL1_NUM).SUBCOL2(SUBCOL2_NUM).SUBLIN1 = 1
MY_INSTANCE.SUBCOL0(SUBCOL0_NUM).SUBCOL1(SUBCOL1_NUM).SUBCOL2(SUBCOL2_NUM).SUBLIN2 = 1
MY_INSTANCE.SUBCOL0(SUBCOL0_NUM).SUBCOL1(SUBCOL1_NUM).SUBCOL2(SUBCOL2_NUM).LINFLD = "Sub-line 2"
[L]SUBCOL3_NUM = fmet MY_INSTANCE.SUBCOL0(SUBCOL0_NUM).SUBCOL1(SUBCOL1_NUM).SUBCOL2(SUBCOL2_NUM).SUBCOL3.AADD([V]CST_ALASTPOS)
MY_INSTANCE.SUBCOL0(SUBCOL0_NUM).SUBCOL1(SUBCOL1_NUM).SUBCOL2(SUBCOL2_NUM).SUBCOL3(SUBCOL3_NUM).KEY1 = KEY1
MY_INSTANCE.SUBCOL0(SUBCOL0_NUM).SUBCOL1(SUBCOL1_NUM).SUBCOL2(SUBCOL2_NUM).SUBCOL3(SUBCOL3_NUM).LINNO = 1
MY_INSTANCE.SUBCOL0(SUBCOL0_NUM).SUBCOL1(SUBCOL1_NUM).SUBCOL2(SUBCOL2_NUM).SUBCOL3(SUBCOL3_NUM).SUBLIN1 = 1
MY_INSTANCE.SUBCOL0(SUBCOL0_NUM).SUBCOL1(SUBCOL1_NUM).SUBCOL2(SUBCOL2_NUM).SUBCOL3(SUBCOL3_NUM).SUBLIN2 = 1
MY_INSTANCE.SUBCOL0(SUBCOL0_NUM).SUBCOL1(SUBCOL1_NUM).SUBCOL2(SUBCOL2_NUM).SUBCOL3(SUBCOL3_NUM).SUBLIN3 = 1
MY_INSTANCE.SUBCOL0(SUBCOL0_NUM).SUBCOL1(SUBCOL1_NUM).SUBCOL2(SUBCOL2_NUM).SUBCOL3(SUBCOL3_NUM).LINFLD = "Sub-line 3"
[L]MY_STATUS = fmet MY_INSTANCE.AINSERT()
Call CHECK_EQUAL("AINSERT"-num$([V]CST_AOK),"AINSERT"-num$([L]MY_STATUS)) From AXUNIT
FreeGroup MY_INSTANCE
End