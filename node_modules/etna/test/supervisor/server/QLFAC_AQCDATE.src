#<AdxTL>@(#)0.0.0.0 $Revision$
Local Clbfile TMP_CLBFILE(2)
TMP_CLBFILE= func TESTSUITE()
Call FERME_TRACE From LECFIC

GTRACE = "QLFAC_AQCDATE_"+GACTX.USER
Call LEC_TRACE From LECFIC

End

#**
#* Subprog SETUP called at the beginning of the unit test suite to clean then environment
#*!c
Subprog SETUP
Local Instance INS Using C_AQCDATE
INS = NewInstance C_AQCDATE AllocGroup null
Local Integer MY_STATUS
# Create a simple instance
Callmet INS.AINIT()
[L]MY_STATUS = fmet INS.AREAD("DATE_TEST")
If [L]MY_STATUS = [V]CST_AOK
  Callmet INS.ADELETE()# Only the index is expected for AINIT; errors on more fields.
Endif
#Delete the instance

End

Subprog TEARDOWN
End

#**
#* The main entry point of the unit test suite
#*
#*!
Funprog TESTSUITE()

Call TESTSUITE_START("AQCDATE", "Test suite for Class AQCDATE") From AXUNIT
Call ADD_TESTCASE("AQCDATE","Test all dates - year 2015",20) From AXUNIT
Local Clbfile SUITE_RESULT
SUITE_RESULT = func AXUNIT.RUN_TESTSUITE("AQCDATE", "SYRA_AQCDATE")
End SUITE_RESULT

#**
#* AQCDATE_CONTROLS
#*
#*!
Subprog AQCDATE()
Local Integer MY_STATUS, WLIN
Local Instance INS Using C_AQCDATE
INS = NewInstance C_AQCDATE AllocGroup null

# Create a simple instance
[L]MY_STATUS = fmet INS.AINIT()
INS.KEY1 = "DATE_TEST"
INS.DATEFIELD = [01/01/2015]

[L]MY_STATUS = fmet INS.AINSERT()

If [L]MY_STATUS<>[V]CST_AOK
  Call CHECK_EQUAL([L]MY_STATUS,[V]CST_AERROR) From AXUNIT
  Gosub WRITE_ERRORS
Endif

# Try all possible dates -year 2015
Local Integer I
Local Date TEST_DATE
TEST_DATE = [31/12/2014]
#For I=1 To 365
For I=1 To 10
  TEST_DATE +=20
  INS.DATEFIELD = TEST_DATE
  Call CHECK_EQUAL("Property update:"-INS.DATEFIELD,"Property update:"-TEST_DATE) From AXUNIT
  [L]MY_STATUS = fmet INS.AUPDATE
  If [L]MY_STATUS<>[V]CST_AOK
    Call CHECK_EQUAL("Update"-num$([L]MY_STATUS),"Update"-num$([V]CST_AOK)) From AXUNIT
    Gosub WRITE_ERRORS
  Endif
  [L]MY_STATUS = fmet INS.AREAD("DATE_TEST")
  If [L]MY_STATUS<>[V]CST_AOK
    Call CHECK_EQUAL("Read"-num$([L]MY_STATUS),"Read"-num$([V]CST_AOK)) From AXUNIT
    Gosub WRITE_ERRORS
  Endif
  Call CHECK_EQUAL("Instance read:"-INS.DATEFIELD,"Instance read:"-TEST_DATE) From AXUNIT
Next
End

FreeGroup INS

End




#**
#* Write errors to log
#*!
$WRITE_ERRORS
Local Integer I
For I=1 To maxtab(INS.AERROR)
 If  INS.AERROR(I)<>null & INS.AERROR(I).DEL<>2
    Call CHECK_NOTEQUAL("Property: ["+INS.AERROR(I).PRO+"]"-":"-INS.AERROR(I).MES,"") From AXUNIT
 Endif
Next I
Callmet INS.ADELETEERROR(CST_ALLERRORS)
Return

