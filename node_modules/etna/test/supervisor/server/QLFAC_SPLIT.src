#<AdxTL>@(#)1.0.0.0 $Revision$
# author:eboyard
# date:13/02/2012
#
Local Clbfile RESULT(4)
RESULT = func TESTSUITE()
GTRACE="QLFAC_SPLIT_"+GACTX.USER
Call LEC_TRACE From LECFIC

End

#**
#* The main entry point of the unit test suite
#*
#*!
Funprog TESTSUITE()
Call TESTSUITE_START("QLFSUP_SPLIT", "QLFSUP_SPLIT") From AXUNIT

Call ADD_TESTCASE("TC001","SPLIT",10) From AXUNIT

Local Clbfile SUITE_RESULT
SUITE_RESULT = func AXUNIT.RUN_TESTSUITE("QLFSUP_SPLIT", "QLFSUP_SPLIT")

End SUITE_RESULT


#**
#* SPLIT(ARRAY,TEXT,SEP)
#* Split the string TEXT on SEP and store the result in the TBL array
#*
#* @param TBL
#* @param TEXT
#* @param SEP
#*!
Funprog SPLIT(ARRAY,TEXT,SEP)
Variable Char ARRAY()(0..)
Value Char TEXT
Value Char SEP

Local Char STRING(255)
Local Integer I
STRING = TEXT

Local Integer POS
POS=-1
Raz ARRAY

If len(STRING) > 0
 POS = dim(ARRAY,-1)

 While STRING<>""
  I = instr(1,STRING,SEP)
  If I
   ARRAY(POS) = left$(STRING,I-1)
   POS += 1
   STRING   = right$(STRING,I+len(SEP))
  Else
   ARRAY(POS) = STRING
   POS += 1
   Break
  Endif

 Wend
Endif
End POS


#**
# TC001:
#*!
Subprog TC001()

Local Char    ARRAY1(250)(0..)
Local Char    ARRAY2(250)(1..)
Local Char    ARRAY3(250)(1..)
Local Char    TEXT(250)

Local Integer R
R=int(0/2)
Call CHECK_EQUAL("int(0/2)"-num$(R),"int(0/2)"-num$(0)) From AXUNIT
R=int(1/2)
Call CHECK_EQUAL("int(1/2)"-num$(R),"int(1/2)"-num$(0)) From AXUNIT
R=int(2/2)
Call CHECK_EQUAL("int(2/2)"-num$(R),"int(2/2)"-num$(1)) From AXUNIT
R=int(3/2)
Call CHECK_EQUAL("int(3/2)"-num$(R),"int(3/2)"-num$(1)) From AXUNIT

ARRAY3(1) = "A"
ARRAY3(2) = "B"
ARRAY3(3) = "C"
Local Integer I,J
I = find("A",ARRAY3)
Call CHECK_EQUAL("Find A in array"-num$(I),"Find A in array"-num$(1)) From AXUNIT
J = find("B",ARRAY3)
Call CHECK_EQUAL("Find B in array"-num$(J),"Find B in array"-num$(2)) From AXUNIT

TEXT = "i1p1.i1p2~i2p1.i2p2"
If func SPLIT(ARRAY1,TEXT,"~") > 0
 Call CHECK_EQUAL("Split array part 1"-ARRAY1(0),"Split array part 1"-"i1p1.i1p2") From AXUNIT
 Call CHECK_EQUAL("Split array part 2"-ARRAY1(1),"Split array part 2"-"i2p1.i2p2") From AXUNIT
 Call SPLIT(ARRAY2,ARRAY1(0),".")
Endif
Call CHECK_EQUAL("Split array part 1"-ARRAY2(1),"Split array part 1"-"i1p1") From AXUNIT
Call CHECK_EQUAL("Split array part 2"-ARRAY2(2),"Split array part 2"-"i1p2") From AXUNIT
End

