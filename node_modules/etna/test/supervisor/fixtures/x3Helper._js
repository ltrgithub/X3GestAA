"use strict";

const sys = require("util");
const ez = require('ez-streams');
const helpers = require('syracuse-core').helpers;
const config = require('config'); // must be first syracuse require

var cookie = "";
var port = 8124;
var baseUrl = "http://localhost:" + port;

console.log("baseUrl:" + baseUrl);

var acceptLanguage = "fr-fr";
var tracer; // = console.log;


exports.url = function(_url) {
	return "/sdata/x3/erp/" + config.unit_test.etnaEndPoint + "/" + (_url || "");
};

exports.x3Url = function(_url) {
	return baseUrl + "/sdata/x3/erp/" + config.unit_test.etnaEndPoint + "/" + (_url || "");
};


exports.gitHubIssue = function(issue) {
	return ' (<a href="https://github.com/Sage-ERP-X3/Syracuse/issues/' + issue + '">Issue #' + issue + ' </a>)';
};

exports.get = function(_, cookie, url, statusCode, facet) {
	var type = facet || "generic.$details";
	var response = ez.devices.http.client({
		method: "get",
		url: url,
		headers: {
			cookie: cookie,
			"accept-language": acceptLanguage,
			accept: "application/json;vnd.sage=syracuse"
		}
	}).end().response(_);
	if (typeof(statusCode) != 'undefined') {
		strictEqual(response.statusCode, statusCode, "GET:" + url);
	}
	var resources = JSON.parse(response.readAll(_));
	return resources;
};

exports.post = function(_, cookie, url, data, statusCode, returnFullResponse) {
	var response = ez.devices.http.client({
		method: "post",
		url:url,
		headers: {
			"Accept": "application/json;vnd.sage=syracuse",
			"content-type": "application/json",
			"accept-language": acceptLanguage,
			cookie: cookie
		}
	}).end(JSON.stringify(data)).response(_);
	if (typeof(statusCode) != 'undefined') {
		strictEqual(response.statusCode, statusCode, "POST:" + url);
	}
	if (returnFullResponse) return {
		headers: response.headers,
		body: JSON.parse(response.readAll(_))
	};
	else return JSON.parse(response.readAll(_));
};

exports.delete = function(_, cookie, url, data, statusCode) {
	try {
		var response = ez.devices.http.client({
			method: "post",
			url:url,
			headers: {
				"Accept": "application/json;vnd.sage=syracuse",
				"content-type": "application/json",
				"accept-language": acceptLanguage,
				"X-HTTP-Method-Override": "DELETE",
				cookie: cookie
			}
		}).end().response(_).readAll(_);
	} catch (e) {
		ok(false, "exception in ez.devices.http.client:" + e.message);
	}
	if (typeof(statusCode) != 'undefined') {
		strictEqual(response.statusCode, statusCode, "DELETE:" + url);
	}
	try {
		return JSON.parse(response);
	} catch (e) {
		ok(false, "exception in JSON.parse:" + e.message + "-" + response);
	}
};

exports.put = function(_, cookie, url, data, statusCode, returnFullResponse) {
	var response = ez.devices.http.client({
		method: "put",
		url:url,
		headers: {
			"referer": url,
			"Accept": "application/json;vnd.sage=syracuse",
			"content-type": "application/json",
			"accept-language": acceptLanguage,
			cookie: cookie
		}
	}).end(JSON.stringify(data)).response(_);
	if (typeof(statusCode) != 'undefined') {
		/*dbg*/
		//ok(true, "DBG received statusCode:" + response.statusCode);
		/*dbg*/
		//ok(true, "DBG expected statusCode:" + statusCode);
		strictEqual(response.statusCode, statusCode, "PUT:" + url);
	}
	if (returnFullResponse) return {
		headers: response.headers,
		body: JSON.parse(response.readAll(_))
	};
	else {
		try {
			var body = response.readAll(_);
			return JSON.parse(body);
		} catch (e) {
			ok(false, "PUT " + url + " :\ndata:\n" + JSON.stringify(data) + "\nparse failed on:" + body);
		}
	}
};

exports.getCookie = function(_, login, pass, isolanguage) {
	var response = new ez.devices.http.client({
		url: baseUrl + "/sdata",
		user: login || "admin",
		password: pass || "admin",
		headers: {
			"accept-language": isolanguage || "fr-fr",
			"accept": "application/json"
		}
	}).end().response(_);
	response.readAll(_);

	strictEqual(response.statusCode, 200, "user authenticated");
	tracer && tracer("Get cookie headers (46): " + sys.inspect(response.headers));
	acceptLanguage = response.headers["content-language"] || acceptLanguage;
	return response.headers["set-cookie"];
};

