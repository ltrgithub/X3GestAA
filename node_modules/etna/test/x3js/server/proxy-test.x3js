"use strict";

const helper = require("etna/test/engine/fixtures/helper");
const date = require('syracuse-core').types.date;
const config = require('config');

QUnit.module(module.id, {});

function nop() {}

if (typeof Proxy !== "undefined" && config.unit_test && config.unit_test.etnaEndPoint) {
	var folder;

	asyncTest("connect ", 1, (_) => {
		folder = helper.getTestFolder(_);
		ok(folder != null);
		start();
	});

	asyncTest("query", 1, (_) => {
		const BankSortCodes = folder.classes.system$BankSortCodes;
		var count = 0;
		BankSortCodes.query(_)
		.where({ code: { $like: '%3%' } })
		.execute(_)
		.forEach(_, (_, b) => {
			console.error(count, b.code$, b.validFrom$);
			count++;
		});
		ok(count > 2, "query worked");
		start();
	});

	asyncTest("basic create", 2, (_) => {
		const BankSortCodes = folder.classes.system$BankSortCodes;
		var bank = BankSortCodes.create(_, {
			countryCode: "FR",
			code: "ZABA2",
		});
		ok(bank != null, "BankSortCodes instance exists");
		console.error("KEYS", Object.getOwnPropertyNames(bank));
		bank.validFrom$ = date.today();
		strictEqual(bank.code$, "ZABA2", "verifying bank property");
		start();
	});

} else if (typeof Proxy === "undefined") {
	test("TEST SKIPPED: Proxies are not available. Start node.js with --harmony-proxies option", 0, nop);
} else {
	test("TEST SKIPPED: ETNA endpoint is not configured", 0, nop);
}