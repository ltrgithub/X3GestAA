"use strict";

import * as x3js from 'x3js';
import * as helper from 'etna/test/engine/fixtures/helper';
import * as config from 'config';

const TableRef = x3js.class('system.TableRef')

QUnit.module(module.id, {});

function nop() {}

if (typeof Proxy !== "undefined" && config.unit_test && config.unit_test.etnaEndPoint) {
	var api;

	asyncTest("connect ", 1, _ => {
		api = helper.getTestFolder(_);
		ok(api != null);
		start();
	});

	asyncTest("query", 11, _ => {
		var count = 0;
		TableRef.query(_)
		.execute(_)
		.limit(5)
		.forEach(_, (_, b, i) => {
			ok(i == 0 || b.code$.length >= 2, 'code length: ' + b.code$);
			equal(typeof b.phoneFormat$, 'string', 'phone format: ' + b.phoneFormat$);
			count++;
		});
		ok(count == 5, "query worked");
		start();
	});
} else if (typeof Proxy === "undefined") {
	test("TEST SKIPPED: Proxies are not available. Start node.js with --harmony-proxies option", 0, nop);
} else {
	test("TEST SKIPPED: ETNA endpoint is not configured", 0, nop);
}