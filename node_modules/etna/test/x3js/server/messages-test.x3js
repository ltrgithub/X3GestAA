"use strict";

import * as x3js from 'x3js';
import * as helper from 'etna/test/engine/fixtures/helper';
import * as config from 'config';
import BusinessIntelligence from '../fixtures/system/messages/business-intelligence';

QUnit.module(module.id, {});

function nop() {}

if (typeof Proxy !== "undefined" && config.unit_test && config.unit_test.etnaEndPoint) {
	var folder;

	asyncTest("connect ", 1, (_) => {
		folder = helper.getTestFolder(_);
		ok(folder != null);
		start();
	});

	asyncTest("retrieving and formmatting messages", 3, (_) => {
		strictEqual(BusinessIntelligence.factTable(_), 'Fact table', 'message without parameters');
		strictEqual(BusinessIntelligence.dimensionUsedByHierarchy(_, 'foo', 'bar'), 'Dimension foo is used by hierarchy  bar', 'message with 2 parameters');
		asyncThrows(_, _ => BusinessIntelligence.factTabllle(_), /invalid message.*factTabllle/, 'throws with buggy message name');
		start();
	});

} else if (typeof Proxy === "undefined") {
	test("TEST SKIPPED: Proxies are not available. Start node.js with --harmony-proxies option", 0, nop);
} else {
	test("TEST SKIPPED: ETNA endpoint is not configured", 0, nop);
}