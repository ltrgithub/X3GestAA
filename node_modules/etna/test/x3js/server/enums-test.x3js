"use strict";

import * as x3js from 'x3js';
import * as helper from 'etna/test/engine/fixtures/helper';
import * as config from 'config';

const HighLow = x3js.enum('system.HighLow');

QUnit.module(module.id, {});

function nop() {}

if (typeof Proxy !== "undefined" && config.unit_test && config.unit_test.etnaEndPoint) {
	var folder;

	asyncTest("connect ", 1, _ => {
		folder = helper.getTestFolder(_);
		ok(folder != null);
		start();
	});

	test("accessing enum members", 3, () => {
		strictEqual(HighLow.HIGH, 1, 'HighLow.HIGH');
		strictEqual(HighLow.LOW, 2, 'HighLow.LOW');
		throws(() => HighLow.HIGGH, /invalid enum value.*HIGGH/, 'throws with buggy member name');
	});

	test("accessing enum names and values", 4, () => {
		strictEqual(HighLow.$name(1), 'HIGH');
		strictEqual(HighLow.$name(2), 'LOW');
		deepEqual(HighLow.$names(), ['HIGH', 'LOW']);
		deepEqual(HighLow.$values(), [1, 2]);
		// Object.keys does not work with harmony-reflect
	});

	asyncTest("accessing enum texts", 2, _ => {
		strictEqual(HighLow.$text(_, 1), 'High');
		strictEqual(HighLow.$text(_, 2), 'Low');
		start();
	});
} else if (typeof Proxy === "undefined") {
	test("TEST SKIPPED: Proxies are not available. Start node.js with --harmony-proxies option", 0, nop);
} else {
	test("TEST SKIPPED: ETNA endpoint is not configured", 0, nop);
}