"use strict";

var X3Error = require('./errors').X3Error;

class Slots {
	constructor() {
		var self = this;
		self._current = 1;
		self._slots = [];
		self._free = 0;
		return self;
	}
	init() {
		return this;
	}
	size() {
		return this._size;
	}
	getSlot() {
		var s;
		if (this._free === 0) {
			s = {
				_number: this._current,
				_next: undefined,
				_data: undefined,
			};
			this._slots[this._current] = s;
			this._current += 1;
		} else {
			s = this._slots[this._free];
			this._free = s._next;
			s._next = undefined;
		}
		return s._number;
	}
	freeSlot(n) {
		var s = this._slots[n];
		s._next = this._free;
		s._data = undefined;
		this._free = n;
	}
	get(n) {
		if ((n < 1) || (n >= this._current) || (this._slots[n]._next !== undefined)) return undefined;
		return this._slots[n]._data;
	}
	set(n, data) {
		if ((n < 1) || (n >= this._current) || (this._slots[n]._next !== undefined)) throw new X3Error(26, "Get invalid Slot" + self._current);
		this._slots[n]._data = data;
	}

};

exports.Slots = Slots;