import { _ } from 'streamline-runtime';
import * as ez from 'ez-streams';
import { Record } from '../../engine/drivers/types';
import { KeyExpression } from './types'
import * as util from './util';
import * as basic from './basic';
import * as arrays from './arrays';
import * as variables from './variables';
import { DBTableVAR } from './dbtablevar'

export function reader(vtb: DBTableVAR, key: KeyExpression, nat: string) {
	const names = Object.keys(vtb.values);
	const guide = key.guide;

	return ez.devices.generic.reader(function (_: _) {
		var pos = vtb.curpos[nat];
		vtb.curpos['curr'] = nat;
		if (pos < vtb.lines) {
			var row: Record = {};
			for (var i = 0; i < names.length; i++) {
				row[names[i]] = arrays.instructions.INDEX(vtb.tables[i], [basic.instructions.C(guide[pos] + vtb.bases[i])])(_);
			}
			pos += 1;
			vtb.curpos[nat] = pos;
			return row;
		}
		vtb.curpos[nat] = -1;
		return undefined;
	}, function stop(_: _) {});
}
