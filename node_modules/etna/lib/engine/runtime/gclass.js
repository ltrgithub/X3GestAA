"use strict";

var helpers = require('syracuse-core').helpers;
var tracer = require('syracuse-core').getTracer("etna.engine");
var X3Error = require('./errors').X3Error;

// --------------------------------------------------------------
class VGClass {
	constructor(tbl) {
		this.table = tbl;
		this.inFrontOf = undefined;
	}

	get ADXFNAME() {
		var self = this;
		var tb = Object.keys(this.table.desc.columns).reduce(function(o, kn) {
			var c = self.table.desc.columns[kn];
			o.push(c.data.CODZONE);
			return o;
		}, ["~W"]);
		return [1, "", tb, 0, tb.length - 1];
	}

	set ADXFNAME(value) {
		throw new X3Error(26, "Property adxfname is readonly");
	}

	get TAIREC() {
		return 471;
	}

	set TAIREC(value) {
			throw new X3Error(26, "Property tairec is readonly");
	}

	get NBZON() {
		return Object.keys(this.table.desc.columns).length + 1 //(~W);
	}

	set NBZON(value) {
			throw new X3Error(26, "Property nbzon is readonly");
	}

	get FILENUME() {
		return 0;
	}

	set FILENUME(value) {
			throw new X3Error(26, "Property filenume is readonly");
	}

	get KEYNAME() {
		return this.table.keys.reduce(function(t, k) {
			if (!k.hidden) t.push(k.name);
			return t;
		}, []);
	}

	set KEYNAME(value) {
		throw new X3Error(26, "Property keyname is readonly");
	}

	get KEYUNIQ() {
		return this.table.keys.reduce(function(t, k) {
			if (!k.hidden) t.push((k.unique) ? 1 : 0);
			return t;
		}, []);
	}

	set KEYUNIQ(value) {
		throw new X3Error(26, "Property keyuniq is readonly");
	}

	get KEYLEN() {
		return this.table.keys.reduce(function(t, k) {
			if (!k.hidden) t.push(0);
			return t;
		}, []);
	}

	set KEYLEN(value) {
		throw new X3Error(26, "Property keylen is readonly");
	}

	get NBIND() {
		return this.table.keys.reduce(function(t, k) {
			if (!k.hidden) t += 1;
			return t;
		}, 0);
	}

	set NBIND(value) {
			throw new X3Error(26, "Property nbind is readonly");
	}

	get CURRIND() {
		var ck = this.table.currkey;

		for (var i = 0, j = 1, k; i < this.table.keys.length; i++) {
			k = this.table.keys[i];
			if (i === ck) return j;
			else if (!k.hidden) j++;
		}
		return 0;
	}

	set CURRIND(ck) {
		for (var i = 0, j = 1, k; i < this.table.keys.length; i++) {
			k = this.table.keys[i];
			if (k.hidden) continue;
			else if (j === ck) break;
			else j++;
		}
		if (i >= this.table.keys.length) throw new X3Error(50, "");
		this.table.currkey = i;
	}

	get CURRLEN() {
		var ck = this.table.keys[this.table.currkey];

		return (ck.items.length === this.table.currlen) ? 0 : this.table.currlen;
	}

	set CURRLEN(np) {
		var ck = this.table.keys[this.table.currkey];

		if ((np > ck.items.length) || (np < 0)) throw new X3Error(50, "");
		this.table.currlen = (np === 0) ? ck.items.length : np;
	}
};

// --------------------------------------------------------------


// --------------------------------------------------------------
exports.GClass = helpers.defineClass(function(tbl) {
	var self = this;
	self.values = new VGClass(tbl);
	self.types = {
		ADXFNAME: " S",
		NBZON: " I",
		KEYNAME: " S",
		KEYUNIQ: " I",
		KEYLEN: " I",
		FILENUME: " I",
		NBIND: " I",
		CURRIND: " I",
		CURRLEN: " I",
		TAIREC: " I",
	};
	return self;
}, null, {});