"use strict";
/*
http://localhost:8124/sdata/x3/erp/etnaOracle/STATS('DOM')?representation=STATS~DOM.$cube
*/
var glob = require('streamline/lib/globals');
var util = require("etna/lib/supervisor/util");
var bcd = require("etna/lib/engine/runtime/bcd");
var Clbfile = require('etna/lib/engine/runtime/tclbfile').Clbfile;

var runtime = require("etna/lib/engine/runtime/runtime");
var ASYR = require("etna/lib/supervisor/builtins/ASYR");
var ASYRSND = require("etna/lib/supervisor/builtins/ASYRSND");
var ASYRRCV = require("etna/lib/supervisor/builtins/ASYRRCV");
var HttpError = util.HttpError;

var tracerJs = require('syracuse-core').getTracer("etna.supervisor");

function loadScript(_, script) {
	try {
		return runtime.requireScript(_, "WMSTS" + script);
	} catch (e) {
		throw new HttpError(404, "statistic not found: " + script);
	}
}

exports.proto = function(_, httpContext, script, facet) {
	var mod = loadScript(_, script);
	var psyr = new(ASYR.constructor)(httpContext);

	var args = {
		ACTX: {
			type: "AY",
			value: glob.context.x3session.actx
		},
		PSYR: {
			type: "AY",
			value: psyr
		},
		WCLOB: {
			type: "AT",
			value: new Clbfile("")
		},
		TIME_UPD: {
			type: "AN",
			value: bcd.fromDouble(0)
		},
		LEVEL_NUM: {
			type: "BS",
			value: 0
		},
		TYPE_REPRES: {
			type: "BS",
			value: "$query"
		}
	};
	runtime.executeProg(_, mod, "PROTO_JSON", args);
	return args.WCLOB.value.x3ToString();
};

exports.query = function(_, httpContext, script, query) {
	var mod = loadScript(_, script);
	var asnd = new(ASYRSND.constructor)(httpContext);
	var arcv = new(ASYRRCV.constructor)(httpContext.superv, httpContext.qs);
	var args = {
		ASND: {
			type: "LY",
			value: asnd
		},
		ARCV: {
			type: "LY",
			value: arcv
		}
	};
	runtime.executeProg(_, mod, "$GET", args);
	tracerJs.debug && tracerJs.debug(JSON.stringify(args.ASND.value.DATA));
	return args.ASND.value.DATA;
};