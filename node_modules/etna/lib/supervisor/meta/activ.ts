import { _ } from 'streamline-runtime';
import * as util from '../util';
const Helper = util.Helper;
const date = require('syracuse-core').types.date;
import * as bcd from '../../engine/runtime/bcd';
import * as uuid from '../../engine/runtime/uuid';
import * as tuuid from '../../engine/runtime/tuuid';
const datetime = require('syracuse-core').types.datetime;
import * as variables from '../../engine/runtime/variables';
import { Supervisor } from '../supervisor';

export interface ActivData {
	DIME: number;
	DIMMAX: number;
	DIMFIL: number;
}
export class Activ extends Helper {
	supervisor: Supervisor;
	data: ActivData;
	constructor(superv: Supervisor, data: ActivData) {
		super();
		this.supervisor = superv;
		this.data = data;
	}
	init(_: _) {
		return this;
	}
	get dimension() {
		if (this.data.DIMFIL > 0 && this.data.DIME > 0 && this.data.DIMMAX > 0) {
			return Math.min(Math.max(this.data.DIMFIL, this.data.DIME), this.data.DIMMAX);
		} else if (this.data.DIMFIL > 0 && this.data.DIME > 0) {
			return Math.max(this.data.DIMFIL, this.data.DIME);
		} else if (this.data.DIMFIL > 0) {
			return this.data.DIMFIL;
		}
		return 0;
	}
};

export const collectionName = 'ACTIV';
export const keyName = 'CODACT';
export const Constructor = Activ;

export function getActiv(_: _, supervisor: Supervisor, cod: string) {
	if (!cod || cod === '') return 1;
	const activ = supervisor.load(_, 'Activ', cod);
	//if (!activ) return 0;  //  GH 6167
	//if (!activ) return 1; // GH 6167

	if (activ === undefined || activ === null) return 1;
	if (activ.data.FLACT !== 2) return 0;
	else if (activ.data.TYP === 2) return activ.data.DIME;
	else return 1;
}
