"use strict";

var util = require('util');
var Slot = require("etna/lib/supervisor/slot").Slot;


class SlotInstance extends Slot {
	constructor(parent, property) {
		super(parent, property);
		this.instance = null;
		this.prop = property;
	}

	initFromParent(_, parent) {
		const property = this.prop;
		var instance = property.supervisor.new(_, 'Instance', property.collection.class, parent).afterCreate(_);
		instance.collection = property.collection;
		if(property.collection) instance.initMaps(_, property.collection,parent);
		instance.proName = property.name;
		instance.proJsName = property.jsName;
		this.instance = instance;
	}

	_get(_, raw) {
		return this.instance._get(_, raw);
	}

	oldValue(_) {
		return this.instance.oldValue(_);
	}

	_set(_, value, raw) {
		return this.instance._set(_, value, raw);
	}

	deleteDiagnoses(_) {
		this.instance.deleteDiagnoses(_);
	}

	getDiagnoses(_) {
		return this.instance.getDiagnoses(_);
	}

	addDiagnose(_, severity, message, category) {
		return this.instance.addDiagnose(_, severity, message, category);
	}

	onMapChange(_, property, value) {
		return this.instance.onMapChange(_, property, value);
	}

	controlFormat(_) {
	}

	fromRecord(_, record, colnIndex) {
		return this.instance.fromRecord(_, record, colnIndex);
	}

}

exports.SlotInstance = SlotInstance;
