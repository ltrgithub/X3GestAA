"use strict";
var util = require("etna/lib/supervisor/util");

var tracerJs = require('syracuse-core').getTracer("etna.supervisor");


exports.getIndex = function(_, superv, mappingData) {
	tracerJs.debug && tracerJs.debug("mappingData.TABLNK " + mappingData.TABLNK);
	var childTable = superv.load(_, 'Table', mappingData.TABLNK);
	return mappingData.CLELNK ?
		util.find(childTable.indexes, 'name', mappingData.CLELNK) :
		childTable.indexes[0];
};

exports.getKeys = function(_, mappingData, record) {
	var keys = mappingData.EXPLNK.split(';').map(function(exp) {
		// for now ignore [F:XXX] part - see later
		if (exp.indexOf(']') > 0) {
			var p = exp.substring(exp.indexOf(']') + 1);
			return record[p];
		} else {
			return (record[exp] !== undefined) ? record[exp] : exp;
		}
	});
	tracerJs.debug && tracerJs.debug("relation keys " + JSON.stringify(keys));
	return keys;
};