"use strict";

var util = require('util');
var SlotLob = require("etna/lib/supervisor/slotlob").SlotLob;
var tblbfile = require('etna/lib/engine/runtime/tblbfile');
var Blbfile = tblbfile.Blbfile;

class SlotBlob extends SlotLob {
	constructor(parent, property) {
		super(parent, property);
	}

	_set(_, value, raw) {
		if (value !== undefined && typeof value === 'string') {
			//dbg:console.log(this.name+" =>Blbfile");
			value = tblbfile.fromBase64(value);
		}
		return super._set(_, value, raw);
	}

	_get(_,raw) {
		if(raw) return this._value;// For resource.toJson  
		
		if(!this._value) {
			var data = this.read(_);
			if(data !== undefined) this._value = new Blbfile(data);
		}
		return super._get(_,raw);
	}

	get field() {
		return (this.property.data.LOBFLD || "BLOB") + '_0';
	}

	get table() {
		return this.property.data.LOBTAB || "ABLOB";
	}	
}

exports.SlotBlob = SlotBlob;

exports.newSlotBlob = function(property) {
	return function(_, parent) {
		return new SlotBlob(parent, property);
	};
};
