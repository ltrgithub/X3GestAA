"use strict";

const glob = require('streamline/lib/globals');
import * as util from '../supervisor/util';
const tracerJs = require('syracuse-core').getTracer("etna.supervisor");

export function getIndex(_: _,  superv, mappingData) {
	tracerJs.debug && tracerJs.debug("mappingData.TABLNK " + mappingData.TABLNK);
	const childTable = superv.load(_, 'Table', mappingData.TABLNK);

	return mappingData.CLELNK ? util.find(childTable.indexes, 'name', mappingData.CLELNK) : childTable.indexes[0];
};

export function getKeys(_: _,  mappingData, record) {
	const keys = mappingData.EXPLNK.split(';').map_(_, (_, exp) => {
		// for now ignore [F:XXX] part - see later
		const lexp = exp.toUpperCase();

		if (exp.indexOf(']') > 0) {
			var p = exp.substring(exp.indexOf(']') + 1);
			return record[p];
		} else if (lexp.substring(0, 6) === "GACTX.") {
			return glob.context.x3session.actx.get(_, lexp.substring(6));
		} else {
			return record[exp] !== undefined ? record[exp] : exp;
		}
	});

	tracerJs.debug && tracerJs.debug("relation keys " + JSON.stringify(keys));
	return keys;
};