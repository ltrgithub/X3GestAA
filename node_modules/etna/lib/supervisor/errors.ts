import { _ } from 'streamline-runtime';
import { BaseInstance } from './dyn/baseInstance';
import { Diagnosis } from './dyn/diagnosis';
/*
Wraps an array of diagnosis in order to exhibit diagnoses as a collection of AERROR instances
*/

import { X3Error } from '../engine/runtime/errors';
const tracerJs = require('syracuse-core').getTracer("etna.supervisor");

export class Errors {
	parent: BaseInstance;
	collection: boolean;
	diagnoses: Diagnosis[];

	constructor(_: _,  parent: BaseInstance) {
		this.collection = true;
		this.diagnoses = parent.getDiagnoses(_);
	}
	x3Maxtab() {
		return this.diagnoses.length;
	}
	index(_: _,  position: number) {
		// AERROR starts at 1:
		if (position - 1 >= this.diagnoses.length) throw new X3Error(8, "collection index out of range: " + position);
		return this.diagnoses[position - 1];
	}
}

;