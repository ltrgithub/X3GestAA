"use strict";
/*
Wraps an array of diagnosis in order to exhibit diagnoses as a collection of AERROR instances
*/

const X3Error = require("etna/lib/engine/runtime/errors").X3Error;
const tracerJs = require('syracuse-core').getTracer("etna.supervisor");

class Errors {
	constructor(_, parent) {
		this.collection = true;
		this.diagnoses = parent.getDiagnoses(_);
	}
	x3Maxtab() {
		return this.diagnoses.length;
	}
	index(_, position) {
		// AERROR starts at 1:
		if (position - 1 >= this.diagnoses.length) throw new X3Error(8, "collection index out of range: " + position);
		return this.diagnoses[position - 1];
	}
}

exports.Errors = Errors;