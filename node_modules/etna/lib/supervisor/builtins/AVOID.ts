"use strict";

const variables = require('etna/lib/engine/runtime/variables');
const util = require("etna/lib/supervisor/util");
const Helper = util.Helper;

class AVOID extends Helper {
	constructor() {
		super();
		this.$exported = true;
	}
	get(_, name) {
		switch (name) {
			case "ADATE":
				return variables.clone(variables.types['D'].default);
			case "ADATTIM":
				return variables.clone(variables.types['E'].default);
			case "ASHORT":
				return variables.clone(variables.types['J'].default);
			case "AINT":
				return variables.clone(variables.types['I'].default);
			case "ALIB":
				return variables.clone(variables.types['I'].default);
			case "ACHAR":
				return variables.clone(variables.types['S'].default);
			case "ADEC":
				return variables.clone(variables.types['N'].default);
			case "ADOUBLE":
				return variables.clone(variables.types['W'].default);
			case "ACLOB":
				return variables.clone(variables.types['T'].default);
			case "ABLOB":
				return variables.clone(variables.types['B'].default);
			case "AUUID":
				return variables.clone(variables.types['Z'].default);
			case "AINS":
				return variables.clone(variables.types['Y'].default);
			case "AUUIDENT":
				return variables.clone(variables.types['Z'].default);
			case "ATINYINT":
				return variables.clone(variables.types['V'].default);
		}
		return "";
	}
};

exports.Constructor = AVOID;