"use strict";
var util = require("etna/lib/supervisor/util");
var Helper = util.Helper;
var constants = require("etna/lib/supervisor/constants");


class ACTXCACHE extends Helper {
	constructor(superv) {
		super();
		this.supervisor = superv;
		this.$exported = true;
		this.cache = {};
	}
	init(_) {
		this.class = null;
		return this;
	}
	get(_, name) {
		if (!this.cache[name]) {
			var clas = this.cache[name] = this.supervisor.load(_, 'Class', name);
			clas.parent = this;
		}
		return this.cache[name];
	}
};

exports.constructor = ACTXCACHE;

function getProp(_, clas, key, prop) {
	var cache = clas.parent.cache[clas.name];
	if (!cache[key]) {
		var instance = clas.createInstance(_);
		var status = instance.read(_, [key]);
		if (status !== constants.CST_AERROR) {
			cache[key] = instance;
		} else {
			return null;
		}
	}
	return cache[key].get(_, prop);
};

exports.cacheMethods = {
	AGETVALNUM: function(_, key, prop) {
		return getProp(_, this, key, prop);
	},
	AGETVALDAT: function(_, key, prop) {
		return getProp(_, this, key, prop);
	},
	AGETVALDEC: function(_, key, prop) {
		return getProp(_, this, key, prop);
	},
	AGETVALCHAR: function(_, key, prop) {
		return getProp(_, this, key, prop);
	}
};