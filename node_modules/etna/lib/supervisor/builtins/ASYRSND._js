"use strict";

const util = require("etna/lib/supervisor/util");
const Helper = util.Helper;
const Clbfile = require('etna/lib/engine/runtime/tclbfile').Clbfile;

class ASYRSND extends Helper {
	constructor(httpContext) {
		super();
		this.httpContext = httpContext;
		this.$exported = true;
		this.data = new Clbfile("");
		this.mode = 0;
	}
	get(_, name) {
		switch (name) {
			case "DATA":
				return this.data;
			case "MODE":
				return this.mode;
		}
	}
	set(_, name, value) {
		switch (name) {
			case "DATA":
				return this.data = typeof value === 'string' ? new Clbfile(value) : value;
			case "MODE":
				return this.mode = value;
		}
	}
	get DATA() {
		return this.data;
	}
	$send(_) {
		const data = this.data.x3ToString();

		this.data = new Clbfile("");

		switch (this.mode) {
			case 0:
				this.httpContext.response.writeHead(200, {
					"content-type": "application/json"
				});
				this.httpContext.response.end(data, "utf8");
				break;
			case 1:
				this.httpContext.response.writeHead(200, {
					"content-type": "application/json"
				});
				this.httpContext.response.write(_, data, "utf8");
				this.mode = 2;
				break;
			case 2:
				this.httpContext.response.write(_, data, "utf8");
				break;
			case 3:
				this.httpContext.response.end(data, "utf8");
				this.mode = 0;
				break;
		}
		return true;
	}
};
exports.constructor = ASYRSND;