"use strict";

const glob = require('streamline/lib/globals');
import * as util from './util';

export const functions = {
	AVG: {
		count: -1,
		fn() {}
	},
	FIND: {
		count: -1,
		fn(val, args) {}
	},
	FINDOBJ: {
		async: true,
		count: -1,
		fn(_, val, target, property, range) {}
	},
	MAX: {
		count: -1,
		fn() {}
	},
	MAXCOL: {
		async: true,
		count: -1,
		fn(_, target, property, range) {}
	},
	MIN: {
		count: -1,
		fn() {}
	},
	SUM: {
		count: -1,
		fn() {}
	},
	PRD: {
		count: -1,
		fn() {}
	},
	UNI: {
		count: -1,
		fn() {}
	},
	VAR: {
		count: -1,
		fn() {}
	},
	SIGMA: { // parser needs it in this table but fn will never be called
		count: -1
	}
};

export const instructions = {
	SIGMA(field, args) {
		return function sigma$do(_) {
			for (var i = 0; i < args.length; i++) {
				args[i] && args[i](_);
			}
		};
	}
};