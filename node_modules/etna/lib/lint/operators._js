"use strict";

// Unary operators

exports.instructions = ["USUB", "UADD", "NOT"].reduce((r, i) => {
	r[i] = function (f1) {
		return function op1$do(_: _) {};
	};
	return r;
}, {});

//Binary operators
exports.instructions = ["ADD", "SUB", "MUL", "DIV", "MOD", "POW", "XOR", "EQ", "NE", "LT", "LE", "GT", "GE", "AND", "OR", "PLUSEQ", "MINUSEQ", "MULEQ", "DIVEQ"].reduce((r, i) => {
	r[i] = function (f1, f2) {
		return function op2$do(_: _) {};
	};
	return r;
}, exports.instructions);