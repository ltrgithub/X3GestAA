"use strict";

require('harmony-reflect'); // to get ES6 Proxy API
const runtime = require('etna/lib/engine/runtime/runtime');

exports.create = def => {
	if (!def.name) throw new Error(`messages name missing`);
	if (!def.dictCode) throw new Error(`${def.name}: dict code missing`);
	if (!def.messages) throw new Error(`${def.name}: messages missing`);
	return new Proxy(def, {
		get(def, name) {
			const id = def.messages[name];
			if (id == null) throw new Error(`${def.name}: invalid message name: ${name}`);
			return (_, ...args) => {
				const fmt = runtime.functions.MESS.fn(_, id, def.dictCode, 1);
				if (fmt == null) throw new Error(`${def.name}.${name}: null message`);
				if (args.length === 0) return fmt;
				return fmt.replace(/\$(\d+)\$/g, (all, i) => {
					if (i > args.length) throw new Error(`${def.name}.${name}: too many parameters: ${args.length}`);
					return args[parseInt(i) - 1];
				});
			};
		},
		ownKeys(def) {
			return Object.keys(def.messages);
		},
	});
}
