"use strict";

import { helpers } from '@sage/syracuse-core';
const locale = require('streamline-locale');




import * as config from 'config'; // must be first syracuse require
import * as adminTestFixtures from '../../collaboration/fixtures/adminTestFixtures';
import {BrokerDB,getBroker} from "../../../src/pub-sub/broker";
import { inspect } from 'util';

//force basic auth
config.session = config.session || {};
config.session.auth = "basic";


import { assert } from 'chai';
Object.keys(assert).forEach(key => {
	if (key !== 'isNaN') global[key] = assert[key];
});
var db;
var smessage;

describe(module.id, () => {
	it('init server', function(_) {
	  locale.setCurrent(_, "en-US");
	  db = adminTestFixtures.initializeTestEnvironnement(_);
	  ok(db != null, "Environnement initialized");
	});
	
	it('Test send message topic1', function(_) {	
	  var broker = getBroker(_);	  
  	  var data = broker.publishAndWaitOn(_, "topic-1","message-1");
      ok(data == "message-1", "Message 1 recieved " + data);
	  data = broker.publishAndWaitOn(_, "topic-2","message-2");
	  ok(data == "message-2", "Message 2 recieved " + data);	
	});

	it('Test subscribe/unsubscribe', function(_) {	 		  	  
	  var broker = new BrokerDB();
	  broker.initDatabase(_,db);
	  var c1 = broker.subscribe(_,"discovery",function(_,data){});
	  ok(c1, "Client c1 subscribe to channel discovery");
	  var c2 = broker.subscribe(_,"discovery",function(_,data){});
	  ok(c2, "Client c2 subscribe to channel discovery");
	  var c3 = broker.subscribe(_,"bbc",function(_,data){});
	  ok(c3, "Client c3 subscribe to channel bbc");

	  ok(Object.keys(broker.channels).length == 2, Object.keys(broker.channels).length  + " channels in use ");
	  ok(broker.channels["discovery"].clients.length == 2, "Two clients in channel discovery");
	  c1.unSubscribe();
	  ok(broker.channels["discovery"].clients.length == 1, "One client in channel discovery");
	  c2.unSubscribe();
	  ok(broker.channels["discovery"].clients.length == 0, "Zero clients in channel discovery");  	  
	  ok(broker.channels["bbc"].clients.length == 1, "One client in channel bbc");  	  
	  c3.unSubscribe();
	  ok(broker.channels["bbc"].clients.length == 0, "Zero clients in channel bbc");  	  
	});
});