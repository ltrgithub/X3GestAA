"use strict";

import * as config from 'config';
import * as url from 'url';
import * as mock from '../load-balancer/mock';

export function notifyEnd(_) {
	config.shutDownMarker = true;
}

export function dispatcher(config) {
	return function(_, request, response) {
		if (request.fromNanny || (request._request && request._request.fromNanny) ||  
			(config.system && config.system.unsafeForceNanny)) {
			// this is called when all sessions should end
			if (request.url.indexOf("/notifyEnd") >= 0 && url.parse(request.url).pathname === "/notifyEnd") {
				response.writeHead(200, {
					"Content-Type": "text/plain"
				});
				console.log("NOTIFY END");
				response.end('OK');
				notifyEnd(_); // function which manages end of sessions
				return;
			}

			// this is called when all sessions should end
			if (request.url.indexOf("/notificationAll") >= 0 && url.parse(request.url).pathname === "/notificationAll") {
				response.writeHead(200, {
					"Content-Type": "text/plain"
				});
				require('../scheduler/scheduler').scheduleAll(_); // function which updates local notification array
				response.end('OK');
				return;
			}
		}
		response.writeHead("404", {});
		return response.end("Resource not found.");
	};
};