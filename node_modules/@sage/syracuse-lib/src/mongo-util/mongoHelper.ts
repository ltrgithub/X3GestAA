"use strict";
import * as mongodb from 'mongodb';

// central code for establishing MongoDB connection
export function connect(callback, collaboration, tenantId) {
	collaboration = collaboration || {};
	collaboration.driver = collaboration.driver || "mongodb";
	if (collaboration.driver !== "mongodb") return callback && callback("Only MongoDB supported for handling licenses");
	
	let opt = (mongodb || {}).options || {
		db: {
			w: 1
		}
	};
	// name of Syracuse database (dependent on tenantId)
	let dbname = collaboration.databaseName ? collaboration.databaseName : (collaboration.database || "syracuse");
	if (tenantId) dbname = tenantId + '-' + dbname;	
	let mongoUser = "";
	let mechanism = "";
	if (collaboration.mongoX509Cert) {
		let certdata = collaboration.mongoX509Cert;
		if (!Array.isArray(certdata)) certdata = [certdata];
		let name = certdata[0];
		let cas = [];
		for (var i = 1; i<certdata.length; i++) {
			cas.push(certdata[i]);
		}
		let certtools = require('../load-balancer/certTools');
		let res = certtools.getData(name, cas);
		// for MongoDB driver 2.2, SSL options are not any more in the 'server' object
		opt.server = opt.server || {};
		if (!("sslValidate" in opt.server)) opt.server.sslValidate = true;
		opt.server.sslKey = res.key;
		opt.server.sslCert = res.cert;
		opt.server.sslCA = res.ca;
		mongoUser = encodeURIComponent(res.dn)+"@";
		mechanism = "?authMechanism=MONGODB-X509&ssl=true";
	}
	let dbUrl = "mongodb://" + mongoUser+(collaboration.connectionString || (collaboration.hostname || "localhost") + ":" + (collaboration.port || 27017)) + "/" + dbname+mechanism;
	// console.log("Connection URL", dbUrl);
	return mongodb.MongoClient.connect(dbUrl, opt, callback);
};
