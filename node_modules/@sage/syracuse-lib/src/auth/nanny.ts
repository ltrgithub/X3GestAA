"use strict";

var helpers = require('@sage/syracuse-core').helpers;
var tracer = helpers.debug.tracer("session.trace");
import * as config from 'config';
import * as mock from '../load-balancer/mock';
import * as config from 'config';
import * as checkUser from '../auth/checkUser';
import * as authHelper from '../auth/helpers';
var changePasswordError = require('../auth/changePassword').changePasswordError;

// Authorization for internal requests which are redirected from child process to child process internally within one load balancer (nanny).
// The authorization header must contain "Nanny" followed by a space and the login name UTF8 encoded, then base64 encoded.
// This does not work for external requests, because "fromNanny" must be set
// please ensure that the login name exists and has all the rights because otherwise there will be a redirection to a login page (which is nonsense)
export function authenticate(_, request, response, session) {
	var credentials = /^Nanny\s([\w\+\/]+\=*)/.exec(request.headers.authorization);
	if (!(credentials && credentials[1])) return false;
	var usr = new Buffer(credentials[1], "base64");
	usr = usr.toString("utf8");

	if (!usr) return false;

	if (request.fromNanny || (request._request && request._request.fromNanny) ||  
		(config.system && config.system.unsafeForceNanny)) {
		checkUser.checkUserLogin(_, session, usr);

		session.authData = {
			user: usr
		};
		return true;
	}
	return false;
};