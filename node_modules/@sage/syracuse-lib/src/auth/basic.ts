"use strict";

import { helpers } from '@sage/syracuse-core';
var tracer = helpers.debug.tracer("session.trace");
import * as config from 'config';
const locale = require('streamline-locale');
import * as checkUser from '../auth/checkUser';
import * as authHelper from '../auth/helpers';
import { changePasswordError } from '../auth/changePassword';

function unauthorized() {
	return authHelper.unauthorized('Basic realm=' + config.session.realm);
}

export function authenticate(_, request, response, session) {
	var credentials = /^basic\s([\w\+\/]+\=*)/i.exec(request.headers.authorization);
	if (!(credentials && credentials[1])) throw unauthorized();
	var usrpwd = new Buffer(credentials[1], "base64");
	// use UTF8 for new login screen
	usrpwd = usrpwd.toString("utf8");
	var index = usrpwd.indexOf(':');
	if (index < 0) throw unauthorized();

	var login = usrpwd.substr(0, index);
	var pass = usrpwd.substr(index + 1);

	if (!(login && pass)) throw unauthorized();

	var user = checkUser.fromLoginPage(_, request, "basic", login, pass, 'Basic realm=' + config.session.realm);

	// redirect to password change dialog if requested by config
	if (user.mustChangePassword(_)) throw changePasswordError(_, request, response, user);

	tracer && tracer("User authenticated.");
	session.authData = {
		user: login,
		authorization: request.headers.authorization
	};
	return true;
};