"use strict";
import * as React from 'react';
import { Ajax, bindAjaxWatcher, IAjaxObserver } from './ajax';
import { logRequestCount } from '../quality/qualityController';

export class AjaxWatcher extends React.Component<{}, {}> implements IAjaxObserver {
    count: number;
    node: HTMLDivElement;
    constructor(props: any, context: any) {
        super(props, context);
        this.count = 0;
    }
    componentDidMount() {
        bindAjaxWatcher(this);
        this.showCount();
    }
    onAjaxSend = () => {
        this.count++;
        this.showCount();
        return true;
    }
    onAjaxResponse = () => {
        this.count = Math.max(this.count - 1, 0);
        this.showCount();
        return true;
    }
    componentWillUnmount() {
        bindAjaxWatcher(null);
        this.node = null;
    }
    showCount() {
        if (this.node) {
            logRequestCount(this.count);
            this.node.style.display = this.count ? "" : "none";
            this.node.textContent = this.count.toString();
        }
    }
    render() {
        return <div id='s_app_ajax_watcher' ref={(node) => this.node = node} />;
    }
}