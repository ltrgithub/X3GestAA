import * as React from 'react';
import { shallow, mount, render } from 'enzyme';
import { renderToJson } from 'enzyme-to-json';
import { IFieldProps, EditField } from '../../field';
import { StringField } from '../stringField';

describe('Test Suite for stringField', function () {

	let props: IFieldProps;

	it('<StringField /> hidden renders correctly', () => {
		props = { hidden: true, value: 'the value' };
		const wrapper = shallow(<StringField {...props} />);
		expect(wrapper.contains(<noscript />)).toBe(true);
	});

	it('<StringField /> value should be "the value"', () => {
		props = { editable: true, value: 'the value' };
		const wrapper = render(<StringField {...props} />);
		expect(wrapper.find('input').val()).toEqual('the value');
	});

	it('<StringField /> compare to snapshot', () => {
		props = { editable: true, value: 'the value' };
		const wrapper = render(<StringField {...props} />);
		const json = renderToJson(wrapper);
		expect(json).toMatchSnapshot();
	});

	it('<EditField /> editable renders correctly', () => {
		props = { editable: true, value: 'the value' };
		const wrapper = shallow(<EditField inputType="text" {...props} />);
		expect(wrapper.find('.s_edit_input')).toHaveLength(1);
	});

	it('<EditField /> compare to snapshot', () => {
		props = { editable: true, value: 'the value' };
		const wrapper = render(<EditField inputType="text" {...props} />);
		const json = renderToJson(wrapper);
		expect(json).toMatchSnapshot();
	});
});