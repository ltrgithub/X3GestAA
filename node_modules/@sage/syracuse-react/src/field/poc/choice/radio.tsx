"use strict";
import * as React from 'react';
import { IFieldState, getCssStatus } from '../field';
import './radio.less';
export interface IProps {
	id: string,
	value: any,
	title: string,
	checked: boolean,
	disabled: boolean,
	readOnly: boolean,
	onChange: (value: any) => void
}

interface IState {
	checked?: boolean,
	focused?: boolean
}

export class Radio extends React.Component<IProps, IState> {
	onFocus = () => {
		this.setState({
			focused: true
		});
	}
	onChange = () => {
		this.props.onChange && this.props.onChange(this.props.value);
	}
	onBlur = () => {
		this.setState({
			focused: false
		});
	}
	render() {
		let status = getCssStatus(this.props.disabled, this.state && this.state.focused);
		return <div className={"s_choice_rd"}>
			<input type="radio"
				disabled={this.props.disabled}
				readOnly={this.props.readOnly}
				className="s_choice_rd_input"
				id={this.props.id}
				checked={this.props.checked}
				onFocus={this.onFocus}
				onChange={this.onChange}
				onBlur={this.onBlur}
			/>
			<label htmlFor={this.props.id} className={"s_choice_rd_label " + status}>
				<i className={"s_choice_rd_check " + status + (this.props.checked ? " s_checked" : "")}>{" "}</i>
				<i className={"s_choice_rd_focus " + status}>{" "}</i>
				{this.props.title}
			</label>
		</div>
	}
}