"use strict";
import * as React from 'react';
import  {getLocalString} from '../../../culture/localString';
import { EndpointItem } from './endpoint/endpointItem';
import { Dropdown } from './dropdown';
import { IEndpoint } from '../../endpoint';
import { IProfileEndpointSelect } from '../profileBarProps';

interface IProps extends IProfileEndpointSelect {
    lookupUrl: string,
    selected: IEndpoint,
    endpoints: IEndpoint[]
}
export class EndpointSelect extends React.Component<IProps, {}> {
    getRecords = () => {
        let unSelected: any[] = [];
        let selectedId = this.props.selected && this.props.selected.$uuid;
        for (let endpoint of this.props.endpoints) {
            if (selectedId != endpoint.$uuid) {
                unSelected.push(endpoint);
            }
        }
        return {
            title: "description",
            selected: this.props.selected,
            unselected: unSelected
        };
    }
    renderItem = (endpoint: IEndpoint) => {
        return <EndpointItem endpoint={endpoint} />
    }
    render() {
        return <Dropdown
            qualityBind="selectedEndpoint"
            className="s_profile_bar_textlink"
            getRecords={this.getRecords}
            renderItem={this.renderItem}
            moreUrl={this.props.lookupUrl}
            moreTitle={getLocalString("profile_endpoint_details")}
            onSelected={this.props.onSelectEndpoint}>
            <EndpointItem endpoint={this.props.selected}
                emptyNatureHidden={true}
                className="s_profile_bar_endpoint" />
        </Dropdown>;
    }
}