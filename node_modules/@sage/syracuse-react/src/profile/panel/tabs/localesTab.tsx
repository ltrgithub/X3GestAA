"use strict";
import * as React from 'react';
import { culture, ILocalePreferences } from '../../../culture/culture';
import { getLocalString } from '../../../culture/localString';
import { ScrollList } from '../../../common/list/list';
import { Link } from '../../../link/link';
import { IProfileLocaleSelect } from '../../bar/profileBarProps';

interface ILocalesTabProps extends IProfileLocaleSelect {
	locales: ILocalePreferences[]
	selected: ILocalePreferences,
	onMoreClick: () => void
}
interface ILocaleProps extends IProfileLocaleSelect {
	value: ILocalePreferences
}

class LocaleLink extends React.Component<ILocaleProps, {}> {
	onClick = () => {
		this.props.onSelectLocale(this.props.value);
	}
	render() {
		return <a className="s_profile_panel_list_item"
			data-s-profile-locale={this.props.value.code}
			onClick={this.onClick}>
			<div className="row">
				<div className="col-xs-6">
					{this.props.value.description}
				</div>
				<div className="col-xs-4">
					{this.props.value.code}
				</div>
			</div>
		</a>
	}
}

export class LocalesTab extends React.Component<ILocalesTabProps, {}> {
	renderList() {
		let selectedId = this.props.selected && this.props.selected.$uuid;
		let rows = [];
		for (let locale of this.props.locales) {
			if (selectedId != locale.$uuid) {
				rows.push(<LocaleLink key={locale.$uuid} value={locale} onSelectLocale={this.props.onSelectLocale} />);
			}
		}
		return <ScrollList className="s_profile_panel_list">{rows}</ScrollList>;
	}
	render() {
		let description = this.props.selected ? (this.props.selected.code || this.props.selected.description) : culture.languageCode;
		return <div className="s_profile_panel_tabs_body s_profile_locales">
			{this.renderList()}
			<Link
				className="s_profile_locales_more"
				title={getLocalString("profile_locales_more")}
				onClick={this.props.onMoreClick} />
		</div>;
	}
}