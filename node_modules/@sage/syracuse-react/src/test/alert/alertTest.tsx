"use strict";
import * as React from 'react';
import Section from '../../section/section';
import { AlertPanel } from '../../alert/panel/alertPanel';
import { alertBox, IAlertBox } from '../../alert/alert';
import { Link } from '../../link/link';
import { alertBoxUnits } from './alertBoxUnits';
import { alertPanelUnits } from './alertPanelUnits';
import { syraAlertBoxUnits } from './syraUnits';
import * as SyraAlert from '../../syra/alert/syraAlert';
import { AlertPage } from '../../alert/page/alertPage';


interface ISectionProps {
    title?: string,
    units: any,
    click?: (value: any) => void
}

class AlertPageSection extends React.Component<ISectionProps, {}>{
    render() {
        let links: any[] = [];
        for (let unit of this.props.units) {
            links.push(<Link
                key={unit.title}
                className="s_textLink"
                value={unit}
                title={unit.title}
                onClick={this.props.click} />);
        }
        return <Section title={this.props.title}>{links}</Section>;
    }
}

class AlertBoxSection extends React.Component<ISectionProps, {}>{
    render() {
        let links: any[] = [];
        for (let unit of this.props.units) {
            links.push(<Link
                key={unit.title}
                className="s_textLink"
                value={unit}
                title={unit.title}
                onClick={this.props.click} />);
        }
        return <Section title={this.props.title}>{links}</Section>;
    }
}

class AlertPanelSection extends React.Component<ISectionProps, {
    selectedUnit?: any
}>{
    onClick = (value: any) => {
        this.setState({
            selectedUnit: value
        });
    }
    render() {
        let links: any[] = [];
        for (let unit of this.props.units) {
            links.push(<Link
                key={unit.title}
                className="s_textLink"
                value={unit}
                title={unit.title}
                onClick={this.onClick} />);
        }
        let box: any;
        if (this.state && this.state.selectedUnit) {
            box = <AlertPanel {...this.state.selectedUnit} />;
        }
        return <Section title="DiagnosePanel">{links}{box}</Section>;
    }
}

export default class AlertTest extends React.Component<{}, {
    page: number
}>{
    static representationName: string = "alert";
    renderDefault() {
        return <div>
            <AlertBoxSection title="AlertBox"
                units={alertBoxUnits}
                click={(value: IAlertBox) => alertBox(value)} />
            <AlertPanelSection units={alertPanelUnits} />
            <AlertBoxSection title="SyraAlertBox"
                units={syraAlertBoxUnits}
                click={(value: any) => SyraAlert.modal(value)} />
            <Section title="Page"><Link
                className="s_textLink"
                value={404}
                title={"Show404"}
                onClick={(value) => this.setState({
                    page: value
                })} /></Section>
        </div>;
    }
    render() {
        return (this.state && this.state.page) ?
            <AlertPage status={this.state.page} diagnoses={[(syraAlertBoxUnits[3] as any).$diagnoses[0]]} />
            : this.renderDefault();
    }
}