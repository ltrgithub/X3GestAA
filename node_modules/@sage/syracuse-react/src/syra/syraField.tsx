"use strict";
import * as React from 'react';
import * as Sdata from '../dataStore/sdata';
import { IFieldProps } from '../field/poc/field';
import { syra_site } from './utility/syra_site';

export class SyraField extends React.Component<IFieldProps, {}> {
    static get sdataType() {
        return Sdata.type.string;
    }
    private slot: HTMLElement;
    private syraField: any;

    componentDidMount() {
        if (this.slot) {
            syra_site.addReactField({
                slot: this.slot,
                $prototype: this.props.store.$prototype,
                dataset: this.props.store.dataset,
                editable: this.props.editable,
                bind: this.props.bind
            }, (syraField: any) => {
                this.syraField = syraField;
            });
        }
    }
    componentDidUpdate() {
        if (this.syraField) {
            this.syraField.applyReactChange(this.props.store.dataset);
        }
    }
    componentWillUnmount() {
        if (this.syraField) {
            this.syraField.dispose();
            this.syraField = null;
        }
    }
    render() {
        if (this.props.hidden) {
            return <noscript />;
        }
        return <div className="s_field_syra" ref={(node) => this.slot = node}></div>;
    }
}