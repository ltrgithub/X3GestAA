"use strict";
import * as React from 'react';
import * as ReactDom from 'react-dom';
import { AlertLargeField } from '../../../alert/field/alertField';
import { Severity, IDiagnose } from '../../../alert/alert';
import * as Dom from '../../../utility/html/dom';
import { ISyraField } from '../../syraType';
import { getSeverityCss } from '../../../alert/diagnose/severity';

export class SyraAlertLargeField {
    root: HTMLDivElement;
    severityCss: string;
    constructor(private field: ISyraField) {
        this.root = field.diagsSlot = Dom.div("s_alert_largefield_syra", this.field._core);
    }
    decorateField(on: boolean, severity?: Severity) {
        let node = this.field.refDescriptionItem || this.field.descriptionItem;
        node && Dom.toggleClass(node, "s-field-desc-diagnose", on);
        if (on) {
            this.severityCss = getSeverityCss(severity);
        }
        Dom.toggleClass(this.field._dataValue, this.severityCss, on);
        this.field.$setValue && this.field.$setValue();
    }
    update(diagnoses: IDiagnose[]) {
        this.decorateField(true, diagnoses[0].severity);
        ReactDom.render(<AlertLargeField diagnoses={diagnoses} />, this.root);
    }
    dispose() {
        if (this.field) {
            this.root && ReactDom.unmountComponentAtNode(this.root);
            Dom.remove(this.root)
            this.decorateField(false);
            this.field = this.root = this.field.diagsSlot = null;
        }
    }
}