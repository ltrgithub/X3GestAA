"use strict";
import { Sortable,ISortableProps } from '../../common/sortable/sortable';
import * as Dom from '../../utility/html/dom';

class SyraSortable {
    private sortable: Sortable;
    constructor(private props: ISortableProps) {
        this.props.root.addEventListener("mousedown", this.handleMousedown, false);        
    }
    get handle():any{
        return (this.props as any).handle;
    }
    handleMousedown = (event: MouseEvent) => {
        event.preventDefault();
        if ((event.target as any).syraSortableHandle == this.handle) {
            let node = Dom.getParentByTag(event.target as HTMLElement, "LI", this.props.root);
            if (node) {
                this.props.htmlMode=true;
                this.sortable = new Sortable(node, this.props);
                event.stopPropagation();
            }
        }
    }
    setNodeHandle(node: HTMLElement) {
        (node as any).syraSortableHandle = this.handle;
        return node;
    }
    dispose() {
        if (this.props && this.props.root) {
            this.props.root.removeEventListener("mousedown", this.handleMousedown);
        }
        this.sortable && this.sortable.dispose();
    }
}

export function add(props: any) {
    return new SyraSortable(props);
}