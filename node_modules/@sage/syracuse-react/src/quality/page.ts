"use strict";
import { syra_item } from '../syra/utility/syra_item';
import * as Utility from './utility';
import * as Field from './field';

function logRowInfo(record: any, node: HTMLElement) {
    if (node) {
        node.setAttribute("data-s-record", record.$uuid);
        if (record.$isSelected !== undefined) {
            node.setAttribute("data-s-selected", record.$isSelected);
        }
    }
}

function logClassicPage(page: any) {
    page.domItem.setAttribute("data-s-page-type", "classic");
    let blocks = page.fusionBar && page.fusionBar.blocks;
    if (blocks) {
        for (let block of blocks) {
            block.header.setAttribute("data-s-left-list-block", block.index);
        }
    }
}

export function logFetch(page: any, status: any) {
    if (page.qualityIsLoaded && page.domItem) {
        page.domItem.setAttribute("data-s-page-fetch", status);
    }
}

export function logEndChange(page: any) {
    if (page.qualityIsLoaded) {
        
        let map = syra_item.getMap();
        for (let id in map) {
            let item = map[id];
            if (item == page) {
                page.body && page.body.setAttribute("data-s-body", "1");
                page.domItem.setAttribute("data-s-page", item.id);
            }
            if (item.page == page) {
                item.isFusionPage && logClassicPage(item);
                if (item.isArticle && item.domItem) {
                    item.domItem.setAttribute("data-s-article", item.id);
                }
                item.isMenuItem && Utility.logMenu(item);
                item.isSection && Utility.logSection(item);
                (item.isField || item.isArrayField) && Field.logField(item);

                if (item.popupCard) {
                    item.popupCard.picker_menus && item.popupCard.picker_menus.link.setAttribute("data-s-picker", "menus");
                }
                if (item.isRecordArticle) {
                    Utility.logPickers(item);
                    if (item.isFilterArticle) {
                        item.domItem && item.domItem.setAttribute("data-s-filter-record", item.$uuid);
                    }
                    else {
                        logRowInfo(item, item.domItem);
                        logRowInfo(item, item.dataRow);
                        logRowInfo(item, item.fixedRow);
                        logRowInfo(item, item.rowCard && item.rowCard.row);
                        logRowInfo(item, item.outCardSlot);
                        logRowInfo(item, item.rowCard && item.rowCard.contentSlot && item.rowCard.contentSlot.outCardSlot);
                        if (item.treeNode) {
                            item.treeNode.slot.setAttribute("data-s-tree-node", item.$uuid);
                            item.treeNode.slot.setAttribute("data-s-tree-node-opened", item.treeNode.isOpened ? "1" : "0");
                            item.treeNode.slot.setAttribute("data-s-tree-node-visible", item.treeNode.isVisible ? "1" : "0");
                            //item.treeNode.item && item.treeNode.item.setAttribute("data-s-record", item.$uuid);
                        }
                        item.getRecordIndex && item.domItem && item.domItem.setAttribute("data-s-record-index", item.getRecordIndex());
                    }
                }

            }
        }
    }
}