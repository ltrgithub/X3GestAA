"use strict";
import * as React from 'react';
import { Link } from '../../../link/link';
import Scrollbar from '../../../common/scroll/scrollbar/scrollbar';
import * as Events from '../../../event/events';
import { getLocalString } from '../../../culture/localString';
import { SitemapSubmodule } from '../../sitemap/groups';
import { ISitemapItem } from '../../sitemap/items';
import { MenuBlockBody, IITemsEvent, IBodyProps } from './menuBlock';

export interface IItemsColProps extends IITemsEvent {
	submodule: SitemapSubmodule,
	title: string,
	items?: ISitemapItem[]
}

export class ItemsCol extends React.Component<IItemsColProps, {}>{
	body: HTMLElement;
	scrollbar: Scrollbar;

	componentDidMount() {
		Events.resize.subscribe(this.onResize);
	}
	onResize = () => {
		this.body.style.height = ((this.body.parentNode as HTMLElement).clientHeight - this.body.offsetTop) + "px";
	}
	onCollapse = () => {
		this.scrollbar.resize();
	}
	componentWillUnmount() {
		Events.resize.unsubscribe(this.onResize);
		this.body = this.scrollbar = null;
	}
	render() {
		return <div className="s_sitemapedit_col">
			<div className="s_sitemapedit_col_header">
				<div className="s_sitemapedit_col_title">{getLocalString("sitemapedit_items")}</div>
				{this.props.onCreateMenuBlock &&
					<Link
						className="s_sitemapedit_col_link"
						title={getLocalString("sitemapedit_create_block")}
						value={null}
						onClick={this.props.onCreateMenuBlock} />}
				{this.props.onAddMenus &&
					<Link
						className="s_sitemapedit_col_link"
						title={getLocalString("sitemapedit_add_menus")}
						value={null} onClick={this.props.onAddMenus} />}
			</div>
			<div className="s_sitemapedit_col_body" ref={(node) => this.body = node}>
				<Scrollbar ref={(node) => this.scrollbar = node}>
					<MenuBlockBody items={this.props.items} onCollapse={this.onCollapse} {...this.props as IBodyProps } />
				</Scrollbar>
			</div>
			{this.props.children}
		</div>
	}
}