"use strict";
import * as React from 'react';
import { getLocalString } from '../../culture/localString';
import { Profile } from '../../profile/profile';
import { Link } from '../../link/link';
import { keyCommands } from '../../shortcut/keySpot';

export class SitemapLink extends React.Component<{
    profile: Profile,
    opener?: boolean,
    css?: string;
    opened: boolean,
    onClick: () => void
}, {}>{
    timeout: number;
    componentDidMount() {
        this.checkLoading();
    }
    componentDidUpdate() {
        this.checkLoading();
    }
    checkLoading() {
        if (!this.props.profile.sitemap) {
            this.timeout = window.setInterval(() => {
                if (this.props.profile.sitemap) {
                    window.clearInterval(this.timeout);
                    this.forceUpdate();
                }
            }, 300);
        }
    }
    componentWillUnmount() {
        this.timeout && window.clearInterval(this.timeout);
    }
    render() {
        let title: string, icon, css = "s_profile_bar_iconlink", disabled: boolean;
        if (this.props.opener) {
            title = this.props.profile.sitemap ? "profile_sitemap_open" : "profile_sitemap_loading";
            icon = "compass";
            //disabled = this.props.opened || (this.props.profile.sitemap == null);
            disabled = this.props.profile.sitemap == null;
        }
        else {
            title = "profile_sitemap_close";
            icon = "close";
            css = "s_profile_bar_close_popup " + css;
        }
        return <li className={this.props.css}><Link
            disabled={disabled}
            icon={icon}
            data-s-sitemap-link="1"
            className={css}
            title={getLocalString(title)}
            shortcuts={keyCommands.goToSitemap}
            onClick={this.props.onClick} />
        </li>;
    }
}