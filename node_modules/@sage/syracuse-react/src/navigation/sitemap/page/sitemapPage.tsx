"use strict";
import * as React from 'react';
import { Link } from '../../../link/link';
import { SitemapModulesBar } from './sitemapModulesBar';
import Scrollbar from '../../../common/scroll/scrollbar/scrollbar';
import { Module } from './module';
import { getLocalString } from '../../../culture/localString';
import { ISitemapPageProps } from './props';
import { SitemapModule } from '../groups';
import './sitemapPage.less';

export default class SitemapPage extends React.Component<ISitemapPageProps, {}>{
	bar: SitemapModulesBar;
	refreshBar() {
		this.bar && this.bar.forceUpdate();
	}
	componentWillUnmount() {
		this.bar = null;
	}
	renderCollapseLink(collapse: boolean) {
		return <Link
			title={getLocalString(collapse ? "sitemap_collapseAll" : "sitemap_expandAll")}
			className="s_sitemap_button"
			value={collapse}
			onClick={this.props.onCollapseAllModules}
		/>;
	}
	render() {
		//Header text to be reintroduced when search functionality is implemented
		if (this.props.modules) {
			return <article className="s_sitemap_page">
				<header className='s_sitemap_page_header'>
					<div className='s_sitemap_page_header_bar'>
						{/*<div className='s_sitemap_page_title'>{getLocalString("sitemap_title").replace("{name}", this.props.userFirstName)}</div>*/}
						<div className='s_sitemap_page_title'></div>
						<div className="s_sitemap_buttons">
							{this.renderCollapseLink(true)}
							{this.renderCollapseLink(false)}
						</div>
					</div>
				</header>
				<div className="s_sitemap_page_body">
					<SitemapModulesBar
						ref={(bar) => this.bar = bar}
						modules={this.props.modules}
						onSelectModule={this.props.onSelectModule} />
					<div className="s_sitemap_content" >
						<Scrollbar isAutoOverflow={true} onScroll={this.props.onModuleBodyScroll}>
							<ul className="s_sitemap_modules" id="s_sitemap_modules">
								{this.props.modules.map((mod) =>
									<Module
										key={mod.$uuid}
										module={mod}
										onMenuClick={this.props.onMenuClick}
										onSwitchBookmark={this.props.onSwitchBookmark}
										onModuleCollapse={this.props.onModuleCollapse}
										onSubModuleCollapse={this.props.onSubModuleCollapse}
										onMenuBlockCollapse={this.props.onMenuBlockCollapse} />)}
							</ul>
						</Scrollbar>
					</div>
				</div>
			</article>;
		}
		return <noscript />;
	}
}