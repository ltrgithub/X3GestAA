"use strict";
import * as React from 'react';
import { Link } from '../../../link/link';
import { ScrollList } from '../../../common/list/list';
import { Icon } from '../../../common/icon/icon';
import { SitemapModule } from '../groups';
import { ISitemapSearch } from './props';


export interface ISitemapModulesBar {
	modules:  SitemapModule[],
	onSelectModule: (module: SitemapModule) => void,
	searchFilter: string
}

export class SitemapModulesBar extends React.Component<ISitemapModulesBar, {}>{
	renderModule = (mod: SitemapModule) => {
        return;
    }
	render() {
		let body: any[] = [], selectedIndex: number;
		for (let mod of this.props.modules) {
			let css = "s_sitemap_bar_module";
			if (mod.selected) {
				selectedIndex = this.props.modules.indexOf(mod);
				css += " s_selected";
			}
			body.push(<div key={mod.$uuid + '_container'}>
				<Link
				 	key={mod.$uuid + '_link'}
					id={mod.$uuid + "_bar"}
					title={mod.title}
					value={mod}
					className={css}
					onClick={this.props.onSelectModule} 
					highlightText={this.props.searchFilter ? this.props.searchFilter : null}
					highlightClassName={"s_sitemap_highlight_text"}/>
					
				<Icon key={mod.$uuid + '_icon'} name={"next"} className={"s_sitemap_modules_bar_icon_i s_btn_i"} />
			</div>);
		}
		return <div className="s_sitemap_modules_bar_slot">
			<ScrollList className="s_sitemap_bar_modules" selectedIndex={selectedIndex}>
				{body}
			</ScrollList>
		</div>;
	}
}
