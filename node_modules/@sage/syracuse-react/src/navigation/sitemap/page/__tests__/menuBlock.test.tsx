import TestHelper from '../../../../__tests__/testHelper';
import * as React from 'react';
import * as Enzyme from 'enzyme';
import {MenuBlock} from '../menuBlock';
import { SitemapBlock } from '../../items';
import { IMenuBlockProps } from '../props';

describe('MenuBlock', function () {

    const a =  TestHelper.fixtures.getSitemap().modules[0].submodules[0];
    const menuBlock:SitemapBlock = (TestHelper.fixtures.getSitemap().modules[0].submodules[0].children[1] as SitemapBlock);

    describe('Snapshots', function() {
        const render: (props: IMenuBlockProps) => Cheerio =
            (props) => Enzyme.render(<MenuBlock {...props} />)

        const defaultProps:IMenuBlockProps = {
            menuBlock: (menuBlock as SitemapBlock),
            onMenuClick: ()=>{},
            onSwitchBookmark: ()=>{},
            onMenuBlockCollapse: ()=>{},
            searchFilter: ""
        }
        it("should compare to not highlighted MenuBlock snapshot", ()=> {
            let wrapper = render({...defaultProps});
            expect(wrapper).toMatchSnapshot();
            expect(wrapper.children('li').children('.s_sitemap_menublock_link').contents().filter(
                function(){return this.nodeType === 3;}
            ).text()).toBe('Settings');
            expect(wrapper.children('li').children('span').length).toBe(0);
            wrapper = render({...defaultProps, searchFilter:"notfound"});
            expect(wrapper.children('li').children('.s_sitemap_menublock_link').contents().filter(
                function(){return this.nodeType === 3;}
            ).text()).toBe('Settings');
            expect(wrapper.children('li').children('span').length).toBe(0);
        });

        it("should compare to highlighted MenuBlock snapshot", ()=>{
            const wrapper = render({...defaultProps, searchFilter:"sett"});
            expect(wrapper).toMatchSnapshot();
            expect(wrapper.children('li').children('.s_sitemap_menublock_link').contents().filter(function(){
                return this.nodeType === 3 || this.name === 'span';
            }).text()).toBe('Settings');
            expect(wrapper.children('li').children('.s_sitemap_menublock_link').children('span').length).toBe(1);
            expect(wrapper.children('li').children('.s_sitemap_menublock_link').children('span').hasClass('s_sitemap_highlight_text')).toBe(true);
            expect(wrapper.children('li').children('.s_sitemap_menublock_link').children('span').text()).toBe("Sett");
        });

    });

});
