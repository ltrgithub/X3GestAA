import TestHelper from '../../../../__tests__/testHelper';
import * as React from 'react';
import * as Enzyme from 'enzyme';
import { Menu } from '../menu';
import { SitemapMenu } from '../../items';
import { IMenuProps } from '../props';

describe('Menu', function () {
    const menu: SitemapMenu = TestHelper.fixtures.getSitemap().modules[0].submodules[0].children[0] as SitemapMenu;
    const render: (props: IMenuProps) => Cheerio =
        (props) => Enzyme.render(<Menu {...props} />)

    const defaultProps: IMenuProps = {
        menu: menu,
        onMenuClick: () => { },
        onSwitchBookmark: () => { },
        searchFilter: ""
    }

    it('should compare to not highlighted Menu item snapshot', () => {
        const wrapper = render({ ...defaultProps });
        expect(wrapper).toMatchSnapshot();
    });

    it('should not highlight the Menu item if the title doesnt match the search string', () => {
        let wrapper = render({ ...defaultProps });
        expect(wrapper.children('li').children('a').first().text()).toBe("Server logs");
        expect(wrapper.children('li').children('a').first().children('span').length).toBe(0);
        wrapper = render({ ...defaultProps, searchFilter: "notfound" });
        expect(wrapper.children('li').children('a').first().text()).toBe("Server logs");
        expect(wrapper.children('li').children('a').first().children('span').length).toBe(0);
    });

    it('should compare to highlighted Menu item snapshot', () => {
        const wrapper = render({ ...defaultProps, searchFilter: "Ser" });
        expect(wrapper).toMatchSnapshot();
    });

    it('should highlight the Menu item if the title matches the search string', () => {
        let wrapper = render({ ...defaultProps, searchFilter: "Ser" });
        expect(wrapper.children('li').children('a').first().text()).toBe("Server logs");
        expect(wrapper.children('li').children('a').first().children('span').length).toBe(1);
        expect(wrapper.children('li').children('a').first().children('span').text()).toBe("Ser");
        expect(wrapper.children('li').children('a').first().children('span').hasClass('s_sitemap_highlight_text')).toBe(true);
    });

});