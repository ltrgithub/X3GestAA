"use strict";
import * as React from 'react';
import { getLocalString } from '../../../culture/localString';
import { Link } from '../../../link/link';
import { SitemapBlock, SitemapMenu } from '../items';
import { MenuBlock } from './menuBlock';
import { Menu } from './menu';
import { ISubModuleProps } from './props';

export class Submodule extends React.Component<ISubModuleProps, {}>{
	renderBody() {
		let cols: any[][] = [[], [], []];
		let colIndex = 0;
		for (let item of this.props.submodule.children) {
			let col = cols[colIndex];
			if (item.variantKey == "menuBlock") {
				let menuBlock: SitemapBlock = item as SitemapBlock;
				col.push(<MenuBlock key={menuBlock.$uuid}
					menuBlock={menuBlock}
					onMenuClick={this.props.onMenuClick}
					onSwitchBookmark={this.props.onSwitchBookmark}
					onMenuBlockCollapse={this.props.onMenuBlockCollapse} />);
			}
			else {
				let menu: SitemapMenu = item as SitemapMenu;
				col.push(<Menu key={menu.$uuid}
					menu={menu}
					onMenuClick={this.props.onMenuClick}
					onSwitchBookmark={this.props.onSwitchBookmark} />);
			}
			if ((++colIndex) == 3) {
				colIndex = 0;
			}
		}
		return <div className="s_sitemap_submodule_row row">
			<ul className="s_sitemap_submodule_col col-sm-4">{cols[0]}</ul>
			<ul className="s_sitemap_submodule_col col-sm-4" >{cols[1]}</ul>
			<ul className="s_sitemap_submodule_col col-sm-4">{cols[2]}</ul>
		</div>;
	}
	render() {
		return <li className="s_sitemap_submodule">
			<Link
				className="s_sitemap_submodule_link"
				title={this.props.submodule.title}
				icon={this.props.submodule.collapsed ? "dir_down" : "dir_up"}
				iconText="left"
				description={this.props.submodule.collapsed ? getLocalString("section_expand") : getLocalString("section_collapse")}
				value={this.props.submodule}
				onClick={this.props.onSubModuleCollapse} />
			{!this.props.submodule.collapsed && this.renderBody()}
		</li>;
	}
}