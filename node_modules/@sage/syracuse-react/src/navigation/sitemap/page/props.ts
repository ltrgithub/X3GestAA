"use strict";
import { SitemapModule, SitemapSubmodule } from '../groups';
import { SitemapBlock, SitemapMenu } from '../items';

interface IBookmarkProps {
    onMenuClick: (menu: SitemapMenu, evet: MouseEvent) => void,
    onSwitchBookmark: (menu: SitemapMenu) => void
}

interface ICollapseProps {
    onModuleCollapse: (module: SitemapModule) => void,
    onSubModuleCollapse: (submodule: SitemapSubmodule) => void,
    onMenuBlockCollapse: (menuBlock: SitemapBlock) => void
}

export interface ISitemapPageProps extends IBookmarkProps, ICollapseProps  {
    userFirstName: string,
    modules: SitemapModule[],
    onModuleBodyScroll: () => void,
    onSelectModule: (module: SitemapModule) => void,
    onCollapseAllModules: (collapse?: boolean) => void,
    onSearch: (text: string) => void,
    onClearSearch: () => void,
    onSearchResultIterate: (text: string) => number,
    searchResult: ISitemapSearch
}

export interface IModuleProps extends IBookmarkProps, ICollapseProps {
    module: SitemapModule,
    searchFilter: string
}

export interface ISubModuleProps extends IBookmarkProps {
    submodule: SitemapSubmodule
    onSubModuleCollapse: (submodule: SitemapSubmodule) => void,
    onMenuBlockCollapse: (menuBlock: SitemapBlock) => void,
    searchFilter: string
}

export interface IMenuBlockProps extends IBookmarkProps {
    collapsed?: boolean,
    menuBlock: SitemapBlock,
    onMenuBlockCollapse: (menuBlock: SitemapBlock) => void,
    searchFilter: string
}

export interface IMenuProps extends IBookmarkProps {
    menu: SitemapMenu,
    searchFilter: string
}



/****** Sitemap Search  *****/

export interface ISitemapSearchResult {
    occurence: number,
    uuid: string
}
export interface ISitemapSearchDisplay {
    searchFilter: string,
    searchCurrentItem: ISitemapSearchResult
}
export interface ISitemapSearch extends ISitemapSearchDisplay{
    searchCurrentIndex: number,
    searchTotalResults: number
}
/****** End Sitemap Search  *****/





