"use strict";
import * as React from 'react';
import { getLocalString } from '../../../culture/localString';
import { Link } from '../../../link/link';
import { SitemapMenu, setMenuDescription } from '../items';
import { IMenuProps } from './props';

interface IState {
	description?: string,
	bookmarkVisible?: boolean
}

export class Menu extends React.Component<IMenuProps, IState>{
	constructor(props: IMenuProps, context: any) {
		super(props, context);
		this.state = {
			description: setMenuDescription(props.menu.dataset),
			bookmarkVisible: false
		};
	}
	onSwitchBookmark = () => {
		this.props.onSwitchBookmark(this.props.menu);
	}
	onMouseEnter = () => {
		if (!this.state.bookmarkVisible) {
			this.setState({
				bookmarkVisible: true
			});
		}
		return false;
	}
	onMouseLeave = () => {
		if (!this.props.menu.bookmarked) {
			this.setState({
				bookmarkVisible: false
			});
		}
	}
	renderBookmark() {
		let css = this.state.bookmarkVisible ? "s_sitemap_bookmark_visble" : "";
		if (this.props.menu.bookmarked) {
			return <Link
				className={css + " s_sitemap_bookmark_on"}
				icon="star"
				title={getLocalString("bookmarks_switch_off")}
				onClick={this.onSwitchBookmark} />
		}
		else {
			return <Link
				className={css + " s_sitemap_bookmark"}
				icon="star_empty"
				title={getLocalString("bookmarks_switch_on")}
				onClick={this.onSwitchBookmark} />
		}
	}
	render() {
		return <li className="s_sitemap_menu"
			onMouseEnter={this.onMouseEnter}
			onMouseLeave={this.onMouseLeave}>
			<Link
				className="s_sitemap_menu_link"
				data-s-sitemap-link={this.props.menu.dataset.convergenceFunction || this.props.menu.dataset.entity}
				title={this.props.menu.title}
				url={this.props.menu.url.href}
				description={this.state.description}
				value={this.props.menu}
				onClick={this.props.onMenuClick}
			/>
			{this.renderBookmark()}
		</li>;
	}
}