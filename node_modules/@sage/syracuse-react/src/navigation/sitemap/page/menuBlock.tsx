"use strict";
import * as React from 'react';
import { getLocalString } from '../../../culture/localString';
import { Link } from '../../../link/link';
import { SitemapBlock, SitemapMenu } from '../items';
import { Menu } from './menu';
import { IMenuBlockProps } from './props';

export class MenuBlock extends React.Component<IMenuBlockProps, {}>{
	renderBody() {
		let children: any[] = []
		for (let item of this.props.menuBlock.children) {
			if (item.variantKey == "menuBlock") {
				let menuBlock: SitemapBlock = item as SitemapBlock;
				children.push(<MenuBlock key={menuBlock.$uuid}
					menuBlock={menuBlock}
					onMenuClick={this.props.onMenuClick}
					onMenuBlockCollapse={this.props.onMenuBlockCollapse}
					onSwitchBookmark={this.props.onSwitchBookmark} />);
			}
			else {
				let menu: SitemapMenu = item as SitemapMenu;
				children.push(<Menu key={menu.$uuid}
					menu={menu}
					onMenuClick={this.props.onMenuClick}
					onSwitchBookmark={this.props.onSwitchBookmark} />);
			}
		}
		return <ul className="s_sitemap_menublock_body">
			{children}
		</ul>;
	}
	render() {
		return <li className="s_sitemap_menublock">
			<Link
				className="s_sitemap_menublock_link"
				title={this.props.menuBlock.title}
				icon={this.props.menuBlock.collapsed ? "dir_down" : "dir_up"}
				iconText="left"
				description={this.props.menuBlock.collapsed ? getLocalString("section_expand") : getLocalString("section_collapse")}
				value={this.props.menuBlock}
				onClick={this.props.onMenuBlockCollapse} />
			{!this.props.menuBlock.collapsed && this.renderBody()}
		</li>;
	}
}