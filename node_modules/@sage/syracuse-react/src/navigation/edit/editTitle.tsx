import * as React from 'react';
import { Link } from '../../link/link';
import { getLocalString } from '../../culture/localString';

import './editTitle.less';

export interface IEditField {
    onApply: (value: string) => void,
    onCancel?: () => void,
    value?: string,
    className: string,
    onChange?: (value: string) => void
}

export class EditField extends React.Component<IEditField, {}> {
    input: HTMLInputElement;

    componentDidMount() {
        this.input.value = this.props.value ? this.props.value : '';
        this.input.focus();
    }

    onChange = () => {
        this.props.onChange && this.props.onChange(this.input.value);
    }

    onKeyPress = (ev: React.KeyboardEvent<any>) => {
        if (ev.key == 'Enter') {
            this.props.onApply(this.input.value);
        }
    }
    onKeyUp = (ev: React.KeyboardEvent<any>) => {
        if (ev.key == 'Escape') {
            ev.preventDefault();
            ev.stopPropagation();
            this.props.onCancel();
        }
    }
    componentWillUnmount() {
        this.input = null;
    }
    render() {
        return <div className={this.props.className + "_edit_field s_edit_field"}>
            <input className="s_edit_field_input"
                type="text"
                spellCheck={false}
                ref={(input) => { this.input = input; }}
                onKeyPress={this.onKeyPress}
                onKeyUp={this.onKeyUp}
                onChange={this.onChange} />
            <Link className="s_edit_field_link"
                icon="close"
                onClick={this.props.onCancel}
                title={getLocalString("editField_cancel")} />
        </div>
    }
}
