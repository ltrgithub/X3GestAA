"use strict";
import * as React from 'react';
import { ISitemapEntity } from '../../sitemap/groups';
import { Icon } from '../../../common/icon/icon';
import {Caroussel} from '../../../common/scroll/caroussel/caroussel';

interface IGroupsProps {
    selected: ISitemapEntity,
    groups: ISitemapEntity[],
    onSelect: (group: ISitemapEntity) => void
}

export class Groups extends React.Component<IGroupsProps, {}>{
    renderGroups() {
        if (this.props.groups && this.props.groups.length) {
            let groups: any[] = [];
            for (let group of this.props.groups) {
                groups.push(<Group key={group.dataset.$uuid}
                    onSelect={this.props.onSelect}
                    selected={this.props.selected == group}
                    group={group} />);
            }
            return <ul className="s_breadcrumb_groups_body">{groups}</ul>;
        }
    }
    render() {
        return <div className="s_breadcrumb_groups">
            <Caroussel>
                {this.renderGroups()}
            </Caroussel>
        </div>
    }
}

interface IGroupProps {
    selected: boolean,
    group: ISitemapEntity,
    onSelect: (group: ISitemapEntity) => void
}
class Group extends React.Component<IGroupProps, {}>{
    handleClick = () => {
        this.props.onSelect(this.props.group);
    }
    handleMouseEnter = () => {
        this.handleClick();
    }
    render() {
        let css = "s_breadcrumb_group" + (this.props.selected ? " s_selected" : "");
        return <li className={css}
            onMouseEnter={this.handleMouseEnter}
            onClick={this.handleClick}
            id={this.props.group.dataset.$uuid}>
            <div className="s_breadcrumb_group_title">{this.props.group.dataset.title}</div>
            <Icon className="s_breadcrumb_group_next" name="next" />
        </li>;
    }
}