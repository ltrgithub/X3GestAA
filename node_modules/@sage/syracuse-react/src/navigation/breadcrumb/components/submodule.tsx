"use strict";
import * as React from 'react';
import { SitemapModule, SitemapSubmodule } from '../../sitemap/groups';
import { Link } from '../../../link/link';
import { Items} from './items';
import { IProps } from './props';

interface ISubmodulesProps extends IProps {
	module: SitemapModule
}

export class Submodules extends React.Component<ISubmodulesProps, {}>{
	render() {
		let submodules: any[] = [];
		for (let submodule of this.props.module.submodules) {
			submodules.push(<Submodule
				key={submodule.$uuid}
				submodule={submodule}
				{...this.props as IProps} />);
		}
		return <ul className="s_breadcrumb_submodules">
			{submodules}
		</ul>
	}
}

interface ISubmoduleProps extends IProps {
	submodule: SitemapSubmodule
}
export class Submodule extends React.Component<ISubmoduleProps, {}>{
	get expanded(): boolean {
		return this.props.expandedList[this.props.submodule.$uuid];
	}
	render() {
		let css = (this.props.path.submodule == this.props.submodule ? "s_selected " : "") + "s_breadcrumb_submodule_link";
		return <li className="s_breadcrumb_submodule">
			<Link
				className={css}
				title={this.props.submodule.title}
				icon={this.expanded ? "dir_down" : "next"}
				iconText="left"
				value={this.props.submodule}
				onClick={this.props.onExpand} />
			{this.expanded &&
				<div className="s_breadcrumb_subgroup">
					<Items items={this.props.submodule.children} {...this.props as IProps} />
				</div>}
		</li>;
	}
}