"use strict";
import * as React from 'react';
import * as ReactDom from 'react-dom';
import * as Dom from '../../utility/html/dom';
import { SitemapPageController } from '../../navigation/sitemap/page/sitemapPageController';
import { IPageProps } from '../../page/page';
import * as pageFactory from '../../page/pageFactory';
import * as Slider from './appPageSlider';
import './appBody.less';

export default class AppBody extends React.Component<{
    mainPageProps?: IPageProps,
    fullReactMode?: boolean
}, {}> {
    bodyTop: HTMLDivElement;
    bodyBottom: HTMLDivElement;
    sitemapOpened?: boolean;
    slider: Slider.AppPageSlider;
    triggerToggle: () => void;

    showMainPage() {
        this.sitemapOpened && this.triggerToggle();
    }
    componentDidMount() {
        this.bodyTop.className = Slider.CSS_OUT;
        this.bodyBottom.className = Slider.CSS_IN;
    }
    componentWillUnmount() {
        this.slider && this.slider.dispose();
        this.triggerToggle = this.bodyTop = this.bodyBottom = this.slider = null;
    }
    onSitemapMounted = () => {
        this.slider && this.slider.dispose();
        this.slider = new Slider.AppPageSlider(this.bodyBottom, this.bodyTop, Slider.Direction.ToBottom);
    }
    onToggleSitemap = (triggerToggle: () => void) => {
        this.triggerToggle = triggerToggle;
        this.sitemapOpened = !this.sitemapOpened;
        if (!this.sitemapOpened) {
            this.slider && this.slider.dispose();
            this.bodyBottom.className = Slider.CSS_IN;
            this.slider = new Slider.AppPageSlider(this.bodyTop, this.bodyBottom, Slider.Direction.ToTop, () => {
                ReactDom.unmountComponentAtNode(this.bodyTop);
            });
        }
        else {
            this.bodyTop.className = Slider.CSS_IN;
            ReactDom.render(<SitemapPageController onMounted={this.onSitemapMounted} profile={this.props.mainPageProps.profile} />, this.bodyTop);
        }
    }
    render() {
        return <div id={Dom.site.body.id}>
            <div id="s_app_body_anim_top" ref={(item) => this.bodyTop = item} />
            <div id="s_app_body_anim_bottom" ref={(item) => this.bodyBottom = item} >
                {this.props.mainPageProps && pageFactory.create(this.props.mainPageProps, this.props.fullReactMode)}
            </div>
        </div>
    }
}