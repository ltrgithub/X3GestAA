"use strict";

export interface ISyraModal {
    disposed: boolean,
    openerBox?: any,
    deactivated: boolean,
    content: any,
    page?:any,
    activate: (activated: boolean) => void,
    close: (validated?: boolean, dispose?: any) => void
}

let _stack: ISyraModal[] = [];

export function closeAll(box: any, dispose: any) {
    if (_stack) {
        for (var ii = 0, jj = _stack.length; ii < jj; ii++) {
            var over = _stack[ii];
            if (over && !over.disposed && over.openerBox == box) {
                over.openerBox = null;
                _stack.splice(ii, 1);
                ii--;
                jj--;
                over.close(undefined, dispose);
            }
        }
    }
}

export function activateAll(box: any, activated: boolean) {
    if (_stack) {
        for (let over of _stack) {
            if (!over.disposed && over.openerBox == box) {
                over.content && activateAll(over.content, activated);
                over.activate(activated);
            }
        }
    }
}

export function getMostOverPage(): ISyraModal {
    if(_stack){
        let over = _stack[_stack.length - 1];
        if(over && !over.deactivated){
            return over.page;
        }        
    }
}


export function push(modal: ISyraModal): ISyraModal {
    _stack.push(modal);
    return modal;
}

export function remove(modal: ISyraModal) {
    if (_stack) {
        let index = _stack.indexOf(modal);
        index >= 0 && _stack.splice(index, 1);
    }
}