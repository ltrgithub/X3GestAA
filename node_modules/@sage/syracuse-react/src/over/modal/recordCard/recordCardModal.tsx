"use strict";
import * as React from 'react';
import * as ReactDom from 'react-dom';
import * as Dom from '../../../utility/html/dom';
import * as Events from '../../../event/events';
import { Link } from '../../../link/link';
import Overlay from '../../overlay/overlay';
import { getLocalString } from '../../../culture/localString';
import './recordCardModal.less';

export interface ICardModalProps {
	deactivated: boolean, //classicPage compatibility
	onDidMount: (body: HTMLElement) => void,
	onResize?: (maxHeight: number) => void,
	onOk?: () => void,
	onClose: () => void
}
export class CardModal extends React.Component<ICardModalProps, {}> {
	private body: HTMLElement;
	private overlay: Overlay;

	componentDidMount() {
		this.props.onDidMount(this.body);
		Events.resize.subscribe(this.onResize);
	}
	onResize = () => {
		let header = this.body.previousSibling as HTMLElement;
		let footer = this.body.nextSibling as HTMLElement;
		let maxHeight = document.body.clientHeight * 0.7;
		maxHeight -= (header.getBoundingClientRect().height + footer.getBoundingClientRect().height);
		this.body.style.maxHeight = maxHeight + "px";
		this.props.onResize && this.props.onResize(maxHeight);
	}
	componentDidUpdate(prevProps: ICardModalProps) {
		if (this.props.deactivated != (prevProps && prevProps.deactivated)) {
			Dom.hide(ReactDom.findDOMNode(this) as HTMLElement, this.props.deactivated);
		}
	}
	componentWillUnmount() {
		Events.resize.unsubscribe(this.onResize);
		this.body = this.overlay = null;
	}
	render() {
		return <Overlay ref={(node) => this.overlay = node}>
			<div className="s_modal_dialog" data-s-dialog-modal="true">
				<article className="s_modal_content">
					<Link
						className="s_modal_close"
						icon={"close"}
						title={getLocalString("diag_close")}
						onClick={this.props.onClose} />
					<div className="s_modal_body" ref={(node) => this.body = node}>
						{this.props.children}
					</div>
					<footer className={"s_modal_footer"}>
						{this.props.onOk && <Link
							className="s_modal_footer_link"
							title={getLocalString("over_ok")}
							onClick={this.props.onOk} />}
						<Link
							className="s_modal_footer_link"
							title={getLocalString("over_close")}
							onClick={this.props.onClose} />
					</footer>
				</article>
			</div>
		</Overlay>;
	}
}
