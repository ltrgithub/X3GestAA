"use strict";
import { initialize } from './browser';

function supportJqueryBrowser() {
    // Use of jQuery.browser is frowned upon.
    // More details: http://api.jquery.com/jQuery.browser
    // jQuery.uaMatch maintained for back-compat
    let oldJquery: any = jQuery;
    oldJquery.uaMatch = function (ua: any) {
        ua = ua.toLowerCase();
        let match: any = /(chrome)[ \/]([\w.]+)/.exec(ua) ||
            /(webkit)[ \/]([\w.]+)/.exec(ua) ||
            /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(ua) ||
            /(msie) ([\w.]+)/.exec(ua) ||
            ua.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(ua) ||
            [];

        return {
            browser: match[1] || "",
            version: match[2] || "0"
        };
    };
    let matched = oldJquery.uaMatch(navigator.userAgent);
    let browser: any = {};
    if (matched.browser) {
        browser[matched.browser] = true;
        browser.version = matched.version;
    }
    // Chrome is Webkit, but Webkit is also Safari.
    if (browser.chrome) {
        browser.webkit = browser.chrome;
    }
    else
        if (browser.webkit) {
            browser.safari = true;
        }
    oldJquery.browser = browser;
}

export function detect() {
    supportJqueryBrowser();
    let ua = window.navigator.userAgent;
    let M = ua.match(/(opera|chrome|safari|firefox|msie)\/?\s*(\.?\d+(\.\d+)*)/i);
    if (M) {
        let item = ua.match(/version\/([\.\d]+)/i)
        if (item != null) {
            M[2] = item[1];
        }
        initialize(M[1].toLowerCase(), M[2]);
    }
    else {
        let msie = ua.indexOf('MSIE ');
        if (msie > 0) {
            initialize("msie", parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10));
        }
        else {
            let trident = ua.indexOf('Trident/');
            if (trident > 0) {
                // IE 11 => return version number
                let rv = ua.indexOf('rv:');
                initialize("msie", parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10));
            }
            else {
                let edge = ua.indexOf('Edge/');
                if (edge > 0) {
                    initialize("msie", parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10));
                }
                else {
                    initialize(navigator.appName.toLowerCase(), navigator.appVersion);
                }
            }
        }
    }
}