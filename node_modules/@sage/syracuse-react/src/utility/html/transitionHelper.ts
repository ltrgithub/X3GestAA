
export function addClassWithAnimation(node: HTMLElement, className: string, timeout?: number): Promise<void> {
    return new Promise<void>((res, rej) => {
        setTimeout(() => {
            let timeoutRef: any = null;
            const callback = () => {
                clearTimeout(timeoutRef);
                node.removeEventListener('transitionend', callback);
                res();
            }

            if (timeout) {
                timeoutRef = setTimeout(callback, timeout);
            }

            node.addEventListener('transitionend', callback);
            node.classList.add(className);
        });
    });
}

export function removeClassWithAnimation(node: HTMLElement, className: string, timeout?: number): Promise<void> {
    return new Promise<void>((res, rej) => {
        setTimeout(() => {
            let timeoutRef: any = null;
            const callback = () => {
                clearTimeout(timeoutRef);
                node.removeEventListener('transitionend', callback);
                res();
            }

            if (timeout) {
                timeoutRef = setTimeout(callback, timeout);
            }

            node.addEventListener('transitionend', callback);
            node.classList.remove(className);
        });
    });
}