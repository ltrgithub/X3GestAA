"use strict";
import * as React from 'react';
import { getLocalString } from '../../culture/localString';
import { Link } from '../../link/link';
import { SeverityIcon } from './severity';
import { IDiagnose, IDiagnoseTechnical } from '../alert';
import './diagnose.less';


export class Technical extends React.Component<IDiagnoseTechnical, {}>{
	render() {
		return <div className="s_diagnose_body">
			{this.props.sdataCode && <pre>{getLocalString("alertbox_diag_appCode") + this.props.sdataCode}</pre>}
			{this.props.stackTrace && <pre>{this.props.stackTrace}</pre>}
		</div>;
	}
}

export class Diagnose extends React.Component<IDiagnose, {
	opened: boolean
}>{
	constructor(props: IDiagnose, context: any) {
		super(props, context);
		this.state = {
			opened: false
		};
	}
	get hasBody(): boolean {
		return (this.props.sdataCode || this.props.stackTrace) != null;
	}
	renderOpenBody() {
		return <Link
			className="s_diagnose_open_body"
			icon={this.state.opened ? "up" : "down"}
			title={this.state.opened ? getLocalString("alertbox_diagnose_hide_detail") : getLocalString("alertbox_diagnose_show_detail")}
			onClick={this.onOpenClick} />;
	}
	onOpenClick = () => {
		this.setState({
			opened: !this.state.opened
		});
	}
	render() {
		return <li className="s_diagnose">
			<div className="s_diagnose_msg">
				<pre className="s_diagnose_msg_pre">
					<SeverityIcon severity={this.props.severity} className="s_diagnose_msg_i" />
					{this.props.message}
				</pre>
				{this.hasBody && this.renderOpenBody()}
			</div>
			{(this.state.opened && this.hasBody) && <Technical {...this.props as IDiagnoseTechnical} />}
		</li>;
	}
}    