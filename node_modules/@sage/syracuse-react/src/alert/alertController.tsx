"use strict";
import * as React from 'react';
import { IAlertBox, parseSdataDiagnoses } from '../alert/alert';
import { bindController, IAlertController } from './alert';
import { AlertBox } from './box/alertBox';

export default class AlertController extends React.Component<{
}, {
        boxProps: IAlertBox
    }> implements IAlertController {
    delayTimeout: number;
    private resetDelay() {
        if (this.delayTimeout) {
            clearTimeout(this.delayTimeout);
            this.delayTimeout = 0;
        }
    }
    private toggleBox = (boxProps: IAlertBox) => {
        this.resetDelay();
        if (boxProps && boxProps.description && boxProps.description.diagnoses) {
            boxProps.description.diagnoses = parseSdataDiagnoses(boxProps.description.diagnoses);
        }
        this.setState({
            boxProps: boxProps
        });
    }
    onOpenBox = (boxProps: IAlertBox) => {
        if (boxProps.delay) {
            this.delayTimeout = window.setTimeout(()=>this.toggleBox(boxProps), boxProps.delay);
        }
        else {
            this.toggleBox(boxProps);
        }
    }
    componentDidMount() {
        bindController(this);
    }
    componentWillUnmount() {
        this.resetDelay();
        bindController(null);
    }
    render() {
        if (this.state && this.state.boxProps) {
            return <AlertBox {...this.state.boxProps}
                onClose={(closeBy: string, autoClose?: boolean, escape?: boolean) => {
                    this.state.boxProps.onClose && this.state.boxProps.onClose(closeBy)
                    this.toggleBox(null);
                }} />;
        }
        return null;
    }
}