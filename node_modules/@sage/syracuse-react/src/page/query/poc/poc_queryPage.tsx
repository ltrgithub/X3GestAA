"use strict";
import * as React from 'react';
import * as Sdata from '../../../dataStore/sdata';
import { Url } from '../../../route/url';
import ArrayField from '../../../field/poc/array/array';
import Splitter from '../../../common/splitter/splitter';
import { IPageProps,PageFrame } from '../../page';
import POC_EntityController from '../../entity/poc/poc_entityController';

interface IQueryPageProps extends IPageProps {
    queryMeta: any,
    queryValue: any,
    selectedEntityUrl: Url,
    selectedRecord: Sdata.IEntity
    onEditEntity: (url:string) => void,
    onRecordSelected: (record: any) => void
}

export default class POC_QueryPage extends React.Component<IQueryPageProps, {}>  {
    render() {
        return < PageFrame>
            <Splitter position="left">
                <ArrayField
                    height="100%"
                    meta={this.props.queryMeta}                    
                    value={this.props.queryValue}
                    selectedRecord={this.props.selectedRecord}
                    onRecordSelected={this.props.onRecordSelected} />
                <POC_EntityController
                    key={(this.props.selectedEntityUrl && this.props.selectedEntityUrl.$facet == Sdata.Facet.edit)? "edit" : "read"}
                    profile={this.props.profile}
                    sdataUrl={this.props.selectedEntityUrl}
                    onEditEntity={this.props.onEditEntity} />
            </Splitter>
        </ PageFrame>;
    }
}