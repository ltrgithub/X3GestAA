"use strict";
import * as React from 'react';
import { IPageLoadError } from '../pageLoader';
import { AlertPage } from '../../alert/page/alertPage';
import { SyraPage, ISyraPageState } from '../syraPage';
import * as Sdata from '../../dataStore/sdata';
import { SyraMainPage } from '../syraMainPage';
import { IPageProps } from '../page';
import { Ajax, AjaxResponse } from '../../ajax/ajax';

export class SoapController extends React.Component<IPageProps, ISyraPageState> {
    syraPage: SyraPage;
    ajax: Ajax;
    componentDidMount() {
        this.syraPage = new SyraPage();
        this.ajax = new Ajax()
        this.ajax.get({
            url: this.props.sdataUrl.stringify().replace("%24request", "$request"), //temp replace wait syracuse correction
            end: (response: AjaxResponse) => {
                if (response.ok) {
                    response.data.$isEditMode = true;
                    this.syraPage.loadRepresentation(this.props.sdataUrl, response.data);
                    this.syraPage.loadSyraPage(() => this.forceUpdate());
                }
                else {
                    this.notifyLoadError({
                        diagnoses: response.error.diagnoses
                    });
                }
            }
        });
    }
    onViewMount = (body: HTMLElement) => {
        this.syraPage.slotDidMount(body);
        if (this.props.onMainPageLoaded) {
            this.syraPage.addHistoryLinks();
            this.props.onMainPageLoaded(this.syraPage.title, this.syraPage.description, this.syraPage.page);
        }
    }
    componentWillUnmount() {
        this.ajax && this.ajax.dispose();
        this.syraPage && this.syraPage.dispose();
    }
    notifyLoadError(error: IPageLoadError) {
        this.setState({
            loadError: error
        });
    }
    render() {
        if (this.state && this.state.loadError) {
            return <AlertPage {...this.state.loadError} />;
        }
        else {
            if (this.syraPage && this.syraPage.page) {
                return <SyraMainPage onDidMount={this.onViewMount}
                    onResize={this.syraPage.onResize} />;
            }
        }
        return null;
    }
}