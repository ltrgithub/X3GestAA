"use strict";
import * as Sdata from '../dataStore/sdata';
import { Ajax, AjaxResponse } from '../ajax/ajax';
import Store from '../dataStore/store';
import * as FieldFactory from '../field/fieldFactory';
import { IFieldProps } from '../field/poc/field'

export function read(store: Store, success: (data?: any) => void): Ajax {
    let ajax = new Ajax()
    ajax.get({
        url: this.sdataUrl.stringify(),
        end: (response: AjaxResponse) => {
            if (response.ok) {
                store.applyDelta(response.data);
                success(response.data);
            }
        }
    });
    return ajax;
}


export function createField(props?: IFieldProps) {
    props = props || {};
    let meta = props.meta = props.store.getMeta(props.bind);
    if (meta) {
        props.value = props.store.getValue(props.bind);
        props.hidden = meta.$isHidden;
        props.readOnly = meta.$isReadOnly;
        props.disabled = meta.$isDisabled;
        props.mandatory = meta.$isMandatory;
        props.title = props.store.parse(meta.$title);
        props.description = props.store.parse(meta.$description);
        props.diagnoses = meta.$diagnoses;
        return FieldFactory.create(props.meta.$type, props);
    }
}