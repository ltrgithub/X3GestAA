"use strict";
import * as React from 'react';
import { PopupLink } from '../../over/popup/popupLink';
import { TrackersLink } from './trackers';
import { Tracker, IDataTracker, bindChangeEvent} from '../trackerController';

export class TrackersController extends React.Component<{}, {
    trackers: IDataTracker[],
    trackerAdded?:boolean
}>{
    map: any = {};
    constructor(props: any, context: any) {
        super(props, context);
        this.state = {
            trackers: []
        };
        bindChangeEvent(this.onChange);
    }
    onChange = (tracker: Tracker) => {
        let trackerAdded = false;
        if(!this.map[tracker.store.$uuid]){
            this.map[tracker.store.$uuid] = tracker;
            this.state.trackers.push(tracker.store.dataset);
            trackerAdded = true;
        }
        this.setState({
            trackers: this.state.trackers,
            trackerAdded:trackerAdded
        });
    }
    onDelete = (dataset: IDataTracker) => {
        let tracker = this.map[dataset.$uuid];
        delete this.map[dataset.$uuid]
        tracker.dispose();
        this.state.trackers.splice(this.state.trackers.indexOf(dataset), 1);
        this.setState({
            trackers: this.state.trackers,
            trackerAdded: false
        });
    }
    onLinkClick = (dataset: IDataTracker, bind: string) => {
        this.map[dataset.$uuid].onLinkClick(bind);
    }
    componentWillUnmount() {
        bindChangeEvent(null);
        for (let uuid in this.map) {
            this.map[uuid].dispose();
        }
    }
    render() {
        if (this.state.trackers.length) {
            return <TrackersLink
                list={this.state.trackers}
                trackerAdded={this.state.trackerAdded}
                onDelete={this.onDelete}
                onLinkClick={this.onLinkClick} />;
        }
        return null;
    }
}