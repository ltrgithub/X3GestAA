"use strict";
import * as React from 'react';
import * as Sdata from '../../dataStore/sdata';
import { IDataTracker } from '../trackerController';
import './trackerProgress.less';

export class TrackerProgress extends React.Component<{
    tracker: IDataTracker
}, {}> {
    getTopSeverity($diagnoses: Sdata.IDiagnose[]): string {
        let order = ["success", "info", "warning", "error"];
        let pound = 0;
        if ($diagnoses) {
            for (let diagnose of $diagnoses) {
                switch (diagnose.$severity) {
                    case "success":
                        pound = 0;
                        break;
                    case "info":
                        pound = 1;
                        break;
                    case "warning":
                        pound = 2;
                        break;
                    default:
                        return "error";
                }
            }
        }
        return order[pound];
    }
    render() {
        let tracker = this.props.tracker;
        let bar: any;
        if (tracker.isProcessing) {
            bar = <div className="s_tracker_progress_bar"/>;
        }
        else {
            bar = <div className={"s_tracker_end s_tracker_" + this.getTopSeverity(tracker.$diagnoses)} />;
        }
        return <div className="s_tracker_progress">
            {bar}
            {tracker.progress && (tracker.progress + " %")}
        </div >;
    }
}
