"use strict";
var _jsxml = require("js-xml");
require('@sage/ui-chart/public/deps/highcharts/highcharts.src');

var _symbols = {};

var SymbolManager = function(slot){
    initSymbols();
    this.slot = slot;
    this.renderer = new Highcharts.Renderer(this.slot, 0, 0);
}

SymbolManager.prototype.get = function(colId, id){
    var col = _symbols[colId];
    // return null;
    return col && col[id];
};

SymbolManager.prototype.getSvg = function(symbol, cx, cy, width, height, opt){
    if (symbol.size) {
        width = symbol.size.width || width;
        height = symbol.size.height || height;
    }
    symbol.box = symbol.box || this.getBBox(symbol);
    
    var box = symbol.box, scaleX = width / (box.width || 1), scaleY = height / (box.height || 1), scale = (scaleX + scaleY) / 2, svg = '';
    
    svg += '<g' + (opt.link || '') + (opt.filter || '');
    svg += ' transform="scale(' + scale + ") translate(" + (cx / scale - (box.x + box.width / 2)) + " " + (cy / scale - (box.y + box.height / 2)) + ')"';
    svg += '>';
    svg += symbol.def;
    svg += '</g>';
    return svg;
};

SymbolManager.prototype.getBBox = function(symbol){
    var groups = [], renderer = this.renderer, root, box;
    
    function create(s){
        groups.unshift(root);
        traverse(s.svg, {
            visit: function(k, v){
                if (k === "$") 
                    return false;
                if (k === "g") {
                    var id = (v.$ || {}).id;
                    groups.unshift(renderer.g(id).attr({
                        id: id
                    }).add(groups[0]));
                    return true;
                }
                else {
                    renderer.createElement(k).attr(v.$).add(groups[0]);
                }
            },
            leave: function(k, v){
                if (k === "g") {
                    groups.shift();
                }
            }
        });
        groups.shift();
        return s;
    }
    
    function traverse(obj, visitor, key){
        if (!obj || typeof obj != "object") {
            return;
        }
        var nodes, n;
        var keys = Object.keys(obj);
        for (var mm = 0, kk = keys.length; mm < kk; mm++) {
            var key = keys[mm];
            var value = obj[key];
            nodes = Array.isArray(value) ? value : [value];
            for (var i = 0, len = nodes.length; i < len; i++) {
                n = nodes[i];
                if (visitor.visit(key, n)) {
                    if (typeof n === "object") {
                        traverse(n, visitor, key);
                    }
                    visitor.leave && visitor.leave(key, n);
                }
            }
        }
    }
    
    root = renderer.g(symbol.id).attr({
        id: symbol.id
    }).add();
    create(symbol);
    box = root.getBBox();
    box.cx = box.x + box.width / 2;
    box.cy = box.y + box.height / 2;
    return box;
};

SymbolManager.prototype.destroy = function(){
    this.renderer && this.renderer.destroy();
};

function initSymbols(){
    if (!_symbols.$initialized) {
        var s, def, collec;
        function init(col, k){
            s = col[k];
            s.id = k;
            def = s.def;
            s.def = '<g class="s-vp-' + k + '">' + def + "</g>";
            s.svg = safeParseXml("<svg>" + def + "</svg>").svg;
        }
        _symbols = {
            "elt_processus_1": {
                "elmt1": {
                    def: '<circle fill="#41A940" cx="124.75" cy="127.5" r="98"/>',
                    size: {
                        width: 24,
                        height: 24
                    }
                },
                "elmt2": {
                    def: '<circle fill="#FFFFFF" cx="122.5" cy="125.5" r="92"/><g><path fill="#41A940" d="M124.25,226.5c-55.967,0-101.5-45.532-101.5-101.5c0-55.967,45.533-101.5,101.5-101.5c55.968,0,101.5,45.533,101.5,101.5C225.75,180.968,180.218,226.5,124.25,226.5z M124.25,37.033c-48.505,0-87.967,39.461-87.967,87.967s39.462,87.967,87.967,87.967c48.506,0,87.967-39.461,87.967-87.967C212.217,76.495,172.756,37.033,124.25,37.033z"/></g>',
                    size: {
                        width: 24,
                        height: 24
                    }
                },
                "elmt6": {
                    def: '<circle fill="#FFFFFF" cx="110.35" cy="110.151" r="44.131"/><polygon fill="#666666" points="160.914,152.686 152.882,160.717 136.566,144.41 144.603,136.369"/><path fill="#666666" d="M186.668,169.322c3.55,3.549,3.55,9.305,0,12.865l-4.288,4.278c-3.554,3.558-9.311,3.558-12.861,0l-22.973-22.978c-3.554-3.55-3.554-9.305-0.004-12.855l4.287-4.288c3.551-3.549,9.317-3.549,12.867,0L186.668,169.322z"/><path fill="#666666" d="M110.35,61.297c-26.984,0-48.854,21.869-48.854,48.854c0,26.986,21.869,48.854,48.854,48.854c26.985,0,48.852-21.868,48.852-48.854C159.202,83.166,137.335,61.297,110.35,61.297z M110.35,149.962c-21.996,0-39.82-17.814-39.82-39.812c0-21.996,17.824-39.815,39.82-39.815s39.819,17.819,39.819,39.815C150.169,132.147,132.347,149.962,110.35,149.962z"/><path fill="#666666" d="M120.365,134.337c-19.487,0-35.293-15.805-35.293-35.297c0-0.519,0.054-1.024,0.079-1.54c-2.572,4.162-4.084,9.058-4.084,14.303c0,15.072,12.218,27.288,27.285,27.288c5.821,0,11.198-1.838,15.632-4.939C122.796,134.276,121.586,134.337,120.365,134.337z"/>',
                    size: {
                        width: 36,
                        height: 36
                    }
                },
                "elmt7": {
                    def: '<rect x="97.155" y="49.461" fill="#FFFFFF" width="74.6" height="106.292"/><rect x="164.797" y="87.219" fill="#FFFFFF" width="15.916" height="20.59"/><path fill="#666666" d="M174.16,89.902H93.587V58.568c0-7.405,6.023-13.429,13.429-13.429h53.715c7.405,0,13.43,6.023,13.43,13.429V89.902L174.16,89.902z M102.54,80.95h62.667V58.568c0-2.467-2.006-4.476-4.477-4.476h-53.715c-2.468,0-4.476,2.009-4.476,4.476V80.95L102.54,80.95z"/><path fill="#666666" d="M160.73,161.524h-53.715c-7.405,0-13.429-6.023-13.429-13.429v-44.763h80.573v44.763C174.16,155.501,168.136,161.524,160.73,161.524z M102.54,112.287v35.809c0,2.471,2.008,4.477,4.476,4.477h53.715c2.471,0,4.477-2.006,4.477-4.477v-35.809H102.54z"/><rect x="111.58" y="121.238" fill="#666666" width="44.762" height="8.953"/><rect x="111.58" y="134.667" fill="#666666" width="31.333" height="8.952"/><path fill="#666666" d="M178.724,80.95H89.198c-7.414,0-13.429,6.015-13.429,13.429v26.86c0,7.414,6.015,13.429,13.429,13.429h4.389v-22.38h80.573v22.38h4.563c7.415,0,13.429-6.015,13.429-13.429v-26.86C192.152,86.964,186.139,80.95,178.724,80.95z M172.01,103.333c-3.707,0-6.716-3.009-6.716-6.716c0-3.708,3.009-6.715,6.716-6.715c3.706,0,6.714,3.007,6.714,6.715C178.724,100.324,175.716,103.333,172.01,103.333z"/>',
                    size: {
                        width: 36,
                        height: 36
                    }
                }
            }
        };
        
        Object.keys(_symbols).forEach(function(k){
            collec = _symbols[k];
            Object.keys(collec).forEach(init.bind(null, collec));
            collec.id = k;
        });
        _symbols.$initialized = true;
    }
}

function safeParseXml(xml){
    try {
        return _jsxml.parse(xml);
    } 
    catch (e) {
        return {};
    }
}

exports.create = function(slot){
    return new SymbolManager(slot);
};
