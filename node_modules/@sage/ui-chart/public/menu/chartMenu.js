"use strict";
var _ext = require('syracuse-ui/lib/extend/extendGateway');

exports.openMenu = function(widget, index, picker){
    var field = widget.context.field.attachedField;
    if (field && !field.$isDisabled) {
        var dataset = (widget.dataset || [])[index || 0] || {};
        var uuid = dataset.$uuid || index;
        widget.context.field.page.externalAdapter.onGraphClickPicker({
            field: widget.context.field,
            rcdUuid: uuid,
            pickerType: "menus",
            grapLevel: "measure",
            doEvent: function(err, menus){
                var $links = {}, menuCount = menus && menus.length || 0;
                if (menuCount) {
                    for (var ii = 0; ii < menuCount; ii++) {
                        $links["link-" + ii] = menus[ii];
                    }
                    _ext.menu.open(widget.context, {
                        $scope: {
                            $prototype: widget.context.prototype.$item,
                            dataset: dataset,
                            delta: {
                                $links: $links
                            }
                        },
                        picker: picker,
                        onMenuClick: function(options){
                            var link = {
                                linkCtx: options.menu.linkCtx || "",
                                linkId: options.menu.linkId
                            };
                            exports.execLink(widget.context,options.menu.articleParent, link);
                            return false;
                        }
                    });
                }
            }
        });
    }
};


exports.execLink = function(context,article, options, recordIndex){
    if (article.page.externalAdapter.onGraphClickLink({
        field: article,
        link: options
    })) {
        var record = article.record;
        if (!record) {
            record = article.record = _ext.item.addRecord({
                $prototype: article.$prototype.$item,
                dataset: article.dataset && article.dataset[recordIndex || 0] || {},
                delta: options.$item,
				page: article.page,
                articleParent: article
            });
        }
        else {
            record.applyChange(options.$item);
        }
        var $links = options.$item["$links" || "$actions"];
        _ext.menu.fire(context,{
            scope: record,
            $bind: Object.keys($links)[0]
        });
    }
};
