"use strict";
var helpers = require('@sage/syracuse-core').helpers;

function ChildFieldRecord() {}

exports.ChildFieldRecord = helpers.defineClass(ChildFieldRecord, null, {
	load: function(initData) {
		syra_article.add(this);
		this.$mnPickersCss = this.$mnPickersCss || "s-record-picker";
		this.$iconPath = this.list.$iconPath;
		this.$defaultSkinSection = this.$defaultSkinBlock = "s-h3";
		this.domItem = this.list._core;
		this.menusSlot = syra_dom.div(this.list.$skin + "-actions-cell", this.articleParent.header || this.domItem);
		this.domItem.syraItem = this.menusSlot.syraItem = this.id;
		this.page.addItem(syra_dom.div(this.list.$skin + "-record", this.domItem), this.list.$item.$cardItem, this);
		syra_article.endDraw(this, initData);
	},
	onAddMenuItem: function($bind, $menu) {
		if (this.menusSlot) {
			var item = this.page.addItem(null, {
				$bind: $bind,
				$category: "link",
				$skin: "s-record-picker",
				$menu: $menu,
				$icon: {
					$mode: "icon",
					$path: this.list.$iconPath
				}
			}, this);
			if ($bind == "$edit") {
				var $delete = this.menuItems.$delete && this.menuItems.$delete[0];
				this.menusSlot.insertBefore(item.domItem, $delete && $delete.domItem);
			} else {
				this.menusSlot.appendChild(item.domItem);
			}
			delete item.$item.$menu;
		}
	},
	onAddMenuPicker: function(btn) {
		this.menusSlot && this.menusSlot.appendChild(btn.link);
	},
	ensureDataSet: function() {
		return this.dataset = this.articleParent.ensureDataSet();
	},
	remove: function() {
		syra_dom.remove(this.domItem);
	},
	applyMetaData: function(metaData) {
		if (metaData.$isReadOnly !== undefined || metaData.$isDisabled != undefined) {
			if (metaData.$isReadOnly !== undefined) {
				this.$isReadOnly = metaData.$isReadOnly;
			}
			if (metaData.$isDisabled !== undefined) {
				this.$isDisabled = metaData.$isDisabled;
			}
			syra_menus.applyFieldState(this);
		}
	}
});