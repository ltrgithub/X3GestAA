"use strict";
var List = require('syracuse-ui/lib/scroll/list').List;
var _classicActions = require('syracuse-ui/lib/fusion/core/client/sap/srvactions');

var _panel;

exports.open = function(page, field) {
	page.externalAdapter.onFieldClickPicker({
		field: field || page,
		pickerType: "devTools",
		doEvent: function() {
			if (!_panel) {
				_panel = new Panel();
			} else {
				_panel.dispose();
			}
		}
	});
};

exports.scroll = function(direction) {
	_panel && _panel.scroll(direction);
};
exports.validate = function() {
	_panel && _panel.validate();
};
exports.toggleBody = function() {
	_panel && _panel.toggleBody();
};
exports.refreshTitle = function() {
	_panel && _panel.refreshTitle();
};

function Panel() {
	this.render = function() {
		var self = this;
		self.slot = syra_dom.div("s_devtool");
		self.header = syra_dom.div("s-list-primary-btn-devtool-header s-list-primary-btn-primary", self.slot)
		self.titleBtn = syra_button.add({
			parent: self,
			slot: self.header,
			css: "s-list-primary-btn-devtool-header s-list-primary-btn-primary",
			fontIcon: "node_expanded",
			click: function() {
				self.toggleBody();
			}
		});
		self.closeBtn = syra_button.add({
			parent: self,
			slot: self.header,
			text: syra_local.over_close,
			css: "s-list-primary-btn-devtool-header s-list-primary-btn-primary",
			//css: this.$skin + "-page-close",
			fontIcon: "close",
			iconOnly: true,
			click: function() {
				self._popup && self._popup.close();
			}
		});

		self.body = syra_dom.div("s_devtool_body", self.slot);
		self.selectedIndex = 0;
		self.expanded = true;
		self.fillList();
		self.refreshTitle();

		self._popup = syra_popup.open({
			content: syra_site,
			slot: self.slot,
			isAutoClose: false,
			resizable: null,
			draggable: true,
			my: "left top",
			at: "left top",
			of: syra_site.siteApp,
			onResize: function(maxHeight, panel) {
				self._applyPreferences();
				if (self.list) {
					self.list.resize(maxHeight);
					self.setFocus();
				}
			},
			onEndDrag: function() {
				self._savePreferences();
			},
			close: function() {
				self._savePreferences();
				self.dispose();
			}
		});

		self._applyPreferences();
		self.setFocus();

	};
	this._cleanList = function() {
		if (this.list) {
			this.list.dispose();
			for (var ii = 0, jj = this.items.length; ii < jj; ii++) {
				var item = this.items[ii];
				item.isMenuItem ? item.dispose() : syra_button.dispose(item);
			}
		}
	};
	this.fillList = function(page) {
		this._cleanList();
		this.list = new List({
			parentNode: this.body,
			css: "s-list-primary"
		});

		this._items = [this.list.addItem(syra_site, {
			$bind: "site_help_center",
			$category: "link",
			$skin: "s-list-primary-btn-devtool-default s-list-primary-btn-default"
		})];

		if (page && page.isFusionPage) {
			var keys = ["GMAINT", "LCKSRC", "VERSYMB", "XXSEATRT", "ARECSRC", "RECHMESS", "LECTRACE", "EXETRT"];
			for (var ii = 0, jj = keys.length; ii < jj; ii++) {
				var key = keys[ii];
				this._items.push(this.list.addButton({
					parent: this,
					text: key,
					$classicFunction: key,
					css: "s-list-primary-btn-devtool-default s-list-primary-btn-default",
					click: this.handleClassicLinkClick
				}));
			}
			keys = ["SRV_ADXEXECUTE", "SRV_CALCULATRICE", "SRV_DEBUGGER", "LCL_TOGGLE_LOG"];
			for (var ii = 0, jj = keys.length; ii < jj; ii++) {
				var key = keys[ii];
				this._items.push(this.list.addItem(page, {
					$bind: _classicActions[key.substr(0, 4) === "SRV_" ? "getSrvAction" : "getLocalAction"](key),
					$category: "link",
					$skin: "s-list-primary-btn-devtool-default s-list-primary-btn-default"
				}, ii != 0 ? null : "s-list-primary-top-sep"));
			}
		}
		syra_dom.setZIndex(self.slot);
	};
	this.toggleBody = function(expanded) {
		this.expanded = (expanded === undefined) ? !this.expanded : expanded;
		this.refreshTitle();
		this.setFocus();
		this._savePreferences();
	};
	this.refreshTitle = function() {
		syra_button.setText(this.titleBtn, "Dev tools for " + syra_site.userProfile.selectedEndpoint.dataset, this.expanded ? "node_expanded" : "node_collapsed", this.expanded ? syra_local.sitemap_collapse : syra_local.sitemap_expand);
	};
	this._savePreferences = function() {
		localStorage.setItem("devToolsPanel", JSON.stringify({
			$top: this.slot.style.top,
			$left: this.slot.style.left,
			expanded: !this.expanded,
			$currItem: this.selectedIndex
		}));
	};
	this._applyPreferences = function() {
		var pref = localStorage.getItem("devToolsPanel");
		pref = pref && JSON.parse(pref) || null;
		if (pref) {
			this.slot.style.top = pref.$top;
			this.slot.style.left = pref.$left;
			if (this.list) {
				if (pref.expanded != this.expanded) {
					this.toggleBody(pref.expanded);
				}
				if (pref.$currItem != null) {
					this.selectedIndex = pref.$currItem != null && pref.$currItem >= 0 && pref.$currItem < this._items.length ? pref.$currItem : 0;
					this.setFocus();
				}
			}
		}
	};

	this.setFocus = function() {
		if (this.expanded) {
			this.selectedIndex = Math.max(Math.min(this.selectedIndex, this._items.length - 1), 0);
			var btn = this._items[this.selectedIndex];
			(btn.link || btn.domItem).focus();
		}
	};
	this.scroll = function(direction) {
		var count = this._items.length;
		if (this.expanded && count > 1) {
			this.selectedIndex += (direction == "down" ? 1 : -1);
			this.selectedIndex = this.selectedIndex < 0 ? count - 1 : (this.selectedIndex == count ? 0 : this.selectedIndex);
			this.setFocus();
		}
	};
	this.validate = function() {
		if (self.list && this.expanded && this.selectedIndex >= 0) {
			self._items[this.selectedIndex].domItem.click();
		} else {
			this.toggleBody(true);
		}
	};
	this._handleClassicLinkClick = function() {
		syra_fusion.executeFusionFunc({
			urlSeg: {
				classicParams: {
					functionCode: this.$classicFunction
				}
			}
		});
	};
	this.dispose = function() {
		if (this.isDisposed) {
			this.isDisposed = true;
			syra_button.dispose(this.titleBtn);
			this._popup && this._popup.close();
			this._cleanList();
		}
	}

	this.render();
}