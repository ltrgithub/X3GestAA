"use strict";
var List = require('@sage/syracuse-ui/lib/scroll/list').List;

function _extractKeyFromUrl($url) {
	var $key = $url.split(",");
	$key = $key.length >= 3 ? $key[2] : null; //null for default
	if ($key) {
		$key = $key.split("'")[0];
	}
	return $key || "default";
}

exports.disableOpener = function(page, disabled) {
	page.designViewsPopup && page.designViewsPopup.close();
	syra_button.disable(page.designerViewBtn, disabled);
};

exports.registerDesignViews = function(page, select) {
	delete page.$selectedDesignView;
	if (!page.authoringSlot) {
		page.authoringSlot = syra_dom.div("s_page_authoring_slot");
		if (!syra_site.isOfficeSite &&
			!page.authoringDisabled &&
			syra_site.userProfile.authoringAllowed &&
			!page.isVignettePage &&
			!(page.$facet == "$lookup" && page.isFusionPage) && ["$summary", "$landing_edit", "$landing", "$navigation", "$navigation_edit"].indexOf(page.$facet) < 0) {
			page.authoringBtn = syra_button.add({
				parent: page,
				slot: page.authoringSlot,
				text: syra_local.site_btn_authoring,
				css: "s_page_authoring_btn",
				iconOnly: true,
				newFontIcon: "customize",
				checkWorkingCopy: true,
				click: function() {
					var page = this.parent;
					page && syra_site.switchItemDesigner(page, true);
				}
			});
		}
		page.domTitleBar.parentNode.insertBefore(page.authoringSlot, page.domTitleBar.nextSibling);
	}
	if (page.$views) {
		for (var ii = 0, jj = page.$views.length; ii < jj; ii++) {
			var $view = page.$views[ii];
			if ($view.$selected) {
				page.$selectedDesignView = $view;
			}
			$view.$key = _extractKeyFromUrl($view.$url);
		}
	}
	if (select) {
		if (select !== true) {
			delete page.$selectedDesignView;
		}
		_switchView(page, page.$selectedDesignView || select);
	}

	if (page.$selectedDesignView) { // && page.$views.length > 1) {
		var $view;
		for (var ii = 0, jj = page.$views.length; ii < jj; ii++) {
			$view = page.$views[ii];
			if ($view.$selected) {
				break;
			}
		}
		var tip = $view.$title + " (" + $view.$code + ")";
		if (!page.designerViewBtn) {
			var btn = {
				slot: page.authoringSlot,
				parent: page,
				text: $view.$title,
				title: tip,
				css: "s-designer-view-btn"
			};
			if (page.$views.length > 1) {
				btn.click = function() {
					_toggle(this.parent);
				};
				btn.fontIcon = "expand_m";
			} else {
				btn.isIndicator = true;
			}
			page.designerViewBtn = syra_button.add(btn);
		} else {
			syra_button.setText(page.designerViewBtn, $view.$title, undefined, tip);
		}
	} else {
		syra_button.remove(page.designerViewBtn);
		delete page.designerViewBtn;
	}
};

function _switchView(page, $view, $views) {
	if ($view.$url) {
		syra_ajax.get({
			page: page,
			url: $view.$url,
			end: function(response) {
				if (response.ok) {
					var data = response.data;
					if (data.$prototype) {
						setTimeout(function() {
							if (data.$prototype) {
								data.$prototype.$representationUrl = page.$prototype.$representationUrl;
							}
							var $itemPage = {
								layoutSlot: page.layoutSlot,
								$category: page.$pageCategory,
								$representation: data,
								urlSeg: page.urlSeg
							};
							if (value == "default") {
								delete $itemPage.urlSeg.params.pageview;
							} else {
								$itemPage.urlSeg.params.pageview = value;
							}
							$itemPage.urlSeg.stringify();
							syra_history.push($itemPage.urlSeg.url);
						}, 100);
					} else {
						if (data.$authorUrl) {
							page.$authorUrl = data.$authorUrl;
						}
						page.$views = data.$views || page.$views;
						//TEMP for V7 Patch6. Will be updated for patch7 
						if ($views) {
							var selectedView;
							for (var ii = 0, jj = page.$views.length; ii < jj; ii++) {
								if (page.$views[ii].$selected) {
									selectedView = page.$views[ii];
									break;
								}
							}
							if (selectedView) {
								for (var ii = 0, jj = $views.length; ii < jj; ii++) {
									if ($views[ii].$url != selectedView.$url) {
										delete $views[ii].$selected;
									} else {
										$views[ii].$selected = true;
									}
								}
								page.$views = $views;
							}
						}
						exports.registerDesignViews(page);
						if (page.designViewsPopup) {
							_toggle(page); //close
							_toggle(page); //open
						}
						if (data.$article) {
							delete data.$article.$menus;
							if (page.convertPersistToVolatil) {
								page.convertPersistToVolatil(data.$article);
							}
							if (page.$item.$menus) {
								data.$article.$menus = syra_site.clone(page.$item.$menus);
							}
							page.reloadLayout(data.$article, true);
						}
						if (page.urlSeg) {
							$view.$key = _extractKeyFromUrl($view.$url);
							page.urlSeg.params.pageview = $view.$key;
							page.urlSeg.stringify();
							if (!syra_site.mobile) {
								syra_history.replaceState(page.urlSeg.url);
								page.urlSeg = syra_url.parse(page.urlSeg.url);
							}
						}
						if (page.designer) {
							page.designer.toggleUIDesign(page, true);
							page.designer.selectItem(null, true);
							exports.disableOpener(page, true);
							page.designer.loadPageStorage();
						}
					}
				} else {
					syra_alert.show(response.error.diagnoses, page);
				}
			}
		});
	}
}

function _toggle(page) {
	if (!page.designerViewBtn.link.syraIsDisabled) {
		if (!page.designViewsPopup) {
			if (page.$views.length > 1) {
				page.designViewList = new List({
					css: "s-list-primary",
					scroll: true
				});
				for (var ii = 0, jj = page.$views.length; ii < jj; ii++) {
					var $view = page.$views[ii];
					var btn = page.designViewList.addButton({
						parent: page,
						text: $view.$title,
						click: function() {
							var page = this.parent;
							var $view = page.$views[this.$viewIndex];
							(page.$selectedDesignView != $view) && _switchView(page, $view, page.$views);
							setTimeout(function() {
								page.designViewsPopup && page.designViewsPopup.close();
							}, 10);
						},
						$viewIndex: ii
					});
					btn.syraTip = 1;
					if ($view.$selected) {
						syra_button.setText(page.designerViewBtn, btn.text);
						var li = btn.link.parentNode;
						li.parentNode.insertBefore(li, li.parentNode.firstChild);
						syra_dom.toggleClass(btn.link, "s-selected", true);
						syra_dom.toggleClass(li, "s-selected", true);
					}
				}

				page.designViewsPopup = syra_popup.open({
					slot: page.designViewList.scrollSlot,
					my: "right top",
					at: "right bottom",
					of: page.designerViewBtn.link,
					onResize: function(maxHeight) {
						if (page.designViewList) {
							page.designViewList.resize(maxHeight);
						}
					},
					close: function() {
						if (page.designViewList) {
							page.designViewList.empty();
							page.designViewList.dispose();
						}
						page.designViewList = page.designViewsPopup = null;
					}
				});
			}
		} else {
			page.designViewsPopup.close();
		}
	}
}

exports.dispose = function(page) {
	page.designViewsPopup && page.designViewsPopup.close();
	page.designViewsPopup = page.designerViewBtn = page.$views = page.$selectedDesignView = null;
};