"use strict";

/*
 Copyright (c)2012 Sage.
 http://wwww.sage.com
 */
/**
 * @fileoverview Printer selection/configuration management
 */

var helpers = require('@sage/syracuse-core').helpers;
var printerSetup = require('@sage/syracuse-ui/lib/site/aside/printerSetup');
var EventManager = require('../evtmanager').EventManager;
var util = require('@sage/syracuse-ui/lib/fusion/tools/util');

var _evtHandlingModules = {
	"selimp": require('../eventhandling/selimp').SelimpEventHandling
};

function PrinterAccess() {}

exports.PrinterAccess = helpers.defineClass(PrinterAccess, EventManager, {
	initialize: function(params, onInitComplete, sapController, winRank) {
		var winId = syra_fusion.sapUtil.getWinId(winRank),
			stackParams;
		stackParams = {
			"id": winId,
			"name": "printerSetup",
			"mainPage": false,
			"$itemPage": printerSetup.getPage(),
			"_resumeAct": "PRINTER_SEL_CANCEL"
		};
		this._dialogStack = [];
		this._winRank = winRank;
		this._sapController = sapController;
		// Init private event manager
		this.evtManagerInit(_evtHandlingModules, ["sap", "ui"], {
			"printerController": this,
			"sapController": this._sapController,
			"siteUUID": "~selimp"
		});
		this.evtManagerComplete();
		// Open "setup" dialog
		this.stackDialog(winId, params.$data, {}, stackParams, onInitComplete);
	},

	_getDialogInfo: function(dialogId) {
		var len, i, ret = -1;
		for (i = 0, len = this._dialogStack.length; i < len; i++) {
			if (this._dialogStack[i].id == dialogId) {
				ret = i;
				break;
			}
		}
		return ret >= 0 ? {
			"rank": ret,
			"dlg": this._dialogStack[ret]
		} : null;
	},

	openProperties: function(params, onInitComplete) {
		var winId = syra_fusion.sapUtil.getWinId(this._winRank + 1),
			stackParams;
		stackParams = {
			"id": winId,
			"name": "printerProperties",
			"mainPage": false,
			"$itemPage": printerSetup.getPropertiesPage(),
			"_resumeAct": "PRINTER_OPTS_CANCEL"
		};
		this.stackDialog(winId, params.$data, {}, stackParams, onInitComplete);
	},

	isOnGoing: function() {
		return this._dialogStack.length > 0;
	},

	displaySetup: function(params) {
		var dlgId = syra_fusion.sapUtil.getWinId(this._winRank),
			dlgInfo = this._getDialogInfo(dlgId);
		this.trigger("sap.extdlg.activate", {
			"target": dlgInfo ? dlgInfo.dlg.page : null,
			"type": "activate",
			"data": params.$data
		}, dlgId, true);
	},

	stackDialog: function(winId, initialData, dlgDefinition, loadParams, onInitComplete) {
		var self = this;

		function _onWinOpenErr(dgns) {
			onInitComplete(loadParams._resumeAct, {});
		}
		loadParams.$itemPage.$x3Facet = "message";
		this._sapController._siteController.loadRepresentation(loadParams, null,

			function(page) {
				var $fusionPageMeta = syra_fusion.syraUtil.getFusionPageMeta(page),
					isMainDlg = !self.isOnGoing();
				if ($fusionPageMeta) {
					$fusionPageMeta._privateEventManager = self;
				}
				self._dialogStack.push({
					"id": winId,
					"page": page
				});
				self._sapController.registerLoadedWindow(winId, dlgDefinition, page, initialData);
				self.trigger("sap.extdlg.loaded", {
					"target": page,
					"type": "loaded",
					"data": {}
				}, winId, isMainDlg);
				onInitComplete();
				self.trigger("sap.extdlg.activate", {
					"target": page,
					"type": "activate",
					"data": null
				}, winId, isMainDlg);
			},
			function(response) {
				_onWinOpenErr(util.getLoadPageErrFromAjax(response, winId.name, null));
			},
			null, _onWinOpenErr);
	},

	unstackDialog: function() {
		var occur = this._dialogStack.length - 1,
			dlgId = this._dialogStack[occur].id;
		delete this._dialogStack[occur].page;
		this._dialogStack.splice(occur, 1);
		this._sapController.stubWinClose([dlgId], null, {});
	},

	abort: function() {
		while (this.isOnGoing()) {
			this.unstackDialog();
		}
		this.trigger("sap.extdlg.abort", {
			"target": null,
			"type": "abort",
			"data": {}
		});
	},

	dispose: function() {
		this.abort();
		if (this._evtMngrComplete) {
			this.evtManagerDispose();
		}
		delete this._sapController;
	}
});