

function canonTest(xml, result, options) {
	var res = jsxml.canon(jsxml.parse(xml), options);
	deepEqual(res, result, "canon " + xml);
}

test('canonicalization', 10, function() {
	canonTest('<a/>', {
		a: {}
	});
	canonTest('<a xmlns="url1" x="3"><b>4</b><c xmlns="url1" y="5">6</c><d xmlns="url2" z="7">8</d></a>', {
		$xmlns: {
			"url1": {
				$prefix: "$1",
				$properties: {
					a: {
						$properties: {
							x: {
								$type: "application/x-string",
								$xmlAtb: true
							},
							b: {
								$type: "application/x-string"
							},
							c: {
								$type: "application/json",
								$prototype: "c"
							}
						}
					},
					c: {
						$properties: {
							y: {
								$type: "application/x-string",
								$xmlAtb: true
							},
							$value: {
								$type: "application/x-string"
							}
						}
					}
				}
			},
			"url2": {
				$prefix: "$2",
				$properties: {
					d: {
						$properties: {
							z: {
								$type: "application/x-string",
								$xmlAtb: true
							},
							$value: {
								$type: "application/x-string"
							},
						}
					},
				}
			},
		},
		$1: {
			a: {
				x: '3',
				b: '4',
				c: {
					y: '5',
					$value: '6',
				},
				$2: {
					d: {
						z: '7',
						$value: '8',
					},
				}
			}
		},
	});
	canonTest('<n1:a xmlns:n1="url1" x="3"><n1:b>4</n1:b><n1:c xmlns="url1" y="5">6</n1:c><n2:d xmlns:n2="url2" z="7">8</n2:d></n1:a>', {
		$xmlns: {
			"url1": {
				$prefix: "$1",
				$sourcePrefix: "n1",
				$properties: {
					a: {
						$properties: {
							x: {
								$type: "application/x-string",
								$xmlAtb: true
							},
							b: {
								$type: "application/x-string"
							},
							c: {
								$type: "application/json",
								$prototype: "c"
							}
						}
					},
					c: {
						$properties: {
							y: {
								$type: "application/x-string",
								$xmlAtb: true
							},
							$value: {
								$type: "application/x-string"
							}
						}
					}
				}
			},
			"url2": {
				$prefix: "$2",
				$sourcePrefix: "n2",
				$properties: {
					d: {
						$properties: {
							z: {
								$type: "application/x-string",
								$xmlAtb: true
							},
							$value: {
								$type: "application/x-string"
							},
						}
					},
				}
			},
		},
		$1: {
			a: {
				x: '3',
				b: '4',
				c: {
					y: '5',
					$value: '6',
				},
				$2: {
					d: {
						z: '7',
						$value: '8',
					},
				}
			}
		},
	});
	canonTest('<a><b>2</b><b>3</b></a>', {
		a: {
			b: ["2", "3"]
		}
	});
	canonTest('<a xmlns="url1"><b>2</b><b>3</b></a>', {
		$xmlns: {
			"url1": {
				$prefix: "$1",
				$properties: {
					a: {
						$properties: {
							b: {
								$type: "application/x-array",
								$item: {
									$type: "application/x-string"
								}
							}
						}
					}
				}
			}
		},
		$1: {
			a: {
				b: ["2", "3"]
			}
		}
	});
	canonTest('<a><b><c>2</c></b><b><c>3</c></b></a>', {
		a: {
			b: [{
				c: "2"
			}, {
				c: "3"
			}]
		}
	});
	canonTest('<n1:a xmlns:n1="url1"><n1:b><n1:c>2</n1:c></n1:b><n1:b><n1:c>3</n1:c></n1:b></n1:a>', {
		$xmlns: {
			"url1": {
				$prefix: "$1",
				$sourcePrefix: "n1",
				$properties: {
					a: {
						$properties: {
							b: {
								$type: "application/x-array",
								$item: {
									$type: "application/json",
									$prototype: "b"
								}
							}
						}
					},
					b: {
						$properties: {
							c: {
								$type: "application/x-string"
							}
						}
					}
				}
			}
		},
		$1: {
			a: {
				b: [{
					c: "2"
				}, {
					c: "3"
				}]
			}
		}
	});
	canonTest('<n1:a xmlns:n1="url1" x="2"/>', {
		$xmlns: {
			"url1": {
				$prefix: "$1",
				$sourcePrefix: "n1",
				$properties: {
					a: {
						$properties: {
							x: {
								$type: "application/x-string",
								$xmlAtb: true
							}
						}
					}
				}
			},
		},
		$1: {
			a: {
				x: "2",
			}
		}
	});
	canonTest('<n1:a xmlns:n1="url1"><n1:b x="2"/></n1:a>', {
		$xmlns: {
			"url1": {
				$prefix: "$1",
				$sourcePrefix: "n1",
				$properties: {
					a: {
						$properties: {
							b: {
								$type: "application/json",
								$prototype: 'b'
							}
						}
					},
					b: {
						$properties: {
							x: {
								$type: "application/x-string",
								$xmlAtb: true
							}
						}
					}
				}
			},
		},
		$1: {
			a: {
				b: {
					x: "2"
				}
			}
		}
	});
	canonTest('<n1:a xmlns:n1="url1" xmlns:n2="url2"><n1:b x="2" n2:y="3"/></n1:a>', {
		$xmlns: {
			"url1": {
				$prefix: "$1",
				$sourcePrefix: "n1",
				$properties: {
					a: {
						$properties: {
							b: {
								$type: "application/json",
								$prototype: 'b'
							}
						}
					},
					b: {
						$properties: {
							x: {
								$type: "application/x-string",
								$xmlAtb: true
							}
						}
					}
				}
			},
			"url2": {
				$prefix: "$2",
				$sourcePrefix: "n2",
				$properties: {
					y: {
						$type: "application/x-string",
						$xmlAtb: true
					}
				}
			},
		},
		$1: {
			a: {
				b: {
					x: "2",
					$2: {
						y: "3",
					}
				}
			}
		}
	});
});