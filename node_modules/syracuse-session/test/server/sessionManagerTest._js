"use strict";

var baseUrl = "http://localhost:3004"
var port = 3004;
var config = require('syracuse-main/lib/nodeconfig').config; // must be first syracuse require
//force basic auth
config.session = config.session || {};
config.session.auth = "basic";

var streams = require('streamline/lib/streams/streams');
var requestCount = 0;

QUnit.module(module.id, {
	setup: function() {},
	teardown: function() {
		if (requestCount == 2) {
			syracuse.server.close();
			setTimeout(function() {
				process.kill(process.pid);
			}, 100)
		}
	}
});

function getCookie(_) {
	var response = new streams.httpRequest({
		url: baseUrl + "/syracuse-main/html/main.html",
		user: "guest",
		password: "guest"
	}).end().response(_);
	response.readAll(_);
	strictEqual(response.statusCode, 200, "user authenticated");
	return response.headers["set-cookie"];
}

//start syracuse server
var syracuse;
// wait server initialization
asyncTest("initialize syracuse test server", 1, function(_) {
	syracuse = require('syracuse-main/lib/syracuse');
	syracuse.initializerStatus.on("initialized", _ << function(_) {
		ok(true, "server initialized");
		syracuse.server.listen(_, port);
		start();
	});
});

asyncTest("sessionManager - createSession", 1, function(_) {
	requestCount++;
	var response = new streams.httpRequest({
		url: baseUrl + "/sdata"
	}).end().response(_);
	strictEqual(response.statusCode, 401, "Authorization Required");
	start();
});
asyncTest("sessionManager - useSession", 2, function(_) {
	requestCount++;
	var response = new streams.httpRequest({
		url: baseUrl + "/sdata",
		user: "guest",
		password: "guest"
	}).end().response(_);
	strictEqual(response.statusCode, 200, "user authenticated");
	ok(response.headers["set-cookie"] != null, "cookie set")
	start();
});