"use strict";

var config = require('config');
var globals = require('streamline/lib/globals');
var sa = require("syracuse-orm/lib/storageArea");
var jsxml = require('js-xml');



exports.entity = {
	$capabilities: "",
	$titleTemplate: "EDI Cache Entity",
	$descriptionTemplate: " ",
	$properties: {
		id: {
			$title: "id", // id of the edi process context , must be unique (ex X3 name + type )
		},
		type: {
			$title: "type of flow", // class json/ representation etc...
			$default: "jsoncache"
		},
		etag: {
			$title: "ETag",
		},
		json: { // json correspond to the context used for a edi process
			$title: "object",
			$type: "json",
			$isHidden: true
		},
		xmlPathId: {
			$title: "Xml paths document id",
			//$isHidden: true,
			$propagate: function(_, instance, val) {
				globals.context.session.xmlPathId = val;
			}
		},
		xsdFiles: {
			$title: "list of xsd file as a json array"
		}


	},
	$relations: {

	},

	$functions: {
		getXsdFile: function(_) {
			var xsd = null;
			if (this.xsdFiles(_)) {
				// retrive the xsd files content depending of the uuid
				xsd = sa.readAll(_, {
					jsonWhere: {
						$uuid: this.xsdFiles(_)
					}
				}).toString('utf8');
			}
			// merge files to have one only xsd file in order to validate 

			return xsd;
		},

	},
	$services: {},

	$uniqueConstraints: [
		["id", "type"]
	]

};