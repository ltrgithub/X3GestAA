"use strict";
var config = require('syracuse-main/lib/nodeconfig').config; // must be first syracuse require
var trace = config.edi && config.edi.parser && config.edi.parser.trace;
var seqFileType = require('syracuse-edi/lib/enumType').SEQFILE;
var adminHelper = require("syracuse-collaboration/lib/helpers").AdminHelper;

/**
 * Created by apisu on 01/07/2014.
 * parse of the edi file to a json structure regarding a specific context
 */


///
/// ### function parse that create a json file from Edi sequential file(s)
///  parse(_,buff,ediCached[,json])
///     filesBuff : buffer of the files read in string or binary
///     ediCached : contains all element for generation
exports.serialize = function(_, opt) {
	var process = opt.process;
	var input = opt.input;
	var json = opt.json;
	var seqFile = process.sequentialFile(_);
	// retrieve prototype
	var facet = "$details";
	var endpointX3 = opt.endpoint;
	var entity = endpointX3.getModel(_).getEntity(_, process.x3ClassName(_), facet);
	var prototype = entity && entity.getPrototype(_, entity.name, facet);

	if (seqFile && seqFile.TYPFIL === seqFileType.FIXEDFILE) {
		trace && trace("number of files to parse " + input.length);
		trace && trace("sizeFixed " + (seqFile.TYPFIL === seqFileType.FIXEDFILE));

		return _serializeFixedSize(json, seqFile, prototype);
	} else {

	}
};


function _serializeFixedSize(json, seqFile, prototype) {

}