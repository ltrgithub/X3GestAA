"use strict";

var helpers = require("syracuse-core/lib/helpers");
var adminHelper = require("syracuse-collaboration/lib/helpers");
var applications = {};

exports.register = function(endpoints) {
	endpoints.forEach( function(endpoint) {
		var application = applications[endpoint.contract.application] ||
		(applications[endpoint.contract.application] = {
				name: endpoint.contract.application,
				contracts: {}
			});
		var contract = application.contracts[endpoint.contract.contract] ||
		(application.contracts[endpoint.contract.contract] = helpers.object.extend({
				name: endpoint.contract.contract,
				datasets: endpoint.datasets
			}, endpoint.contract));
		helpers.object.forEachKey(endpoint.datasets, function(name, ds) {
			ds.name = name;
			// narwhal stuff
			ds.driver = ds.driver || "com.mysql.jdbc.Driver";
			ds.url = ds.url || "jdbc:mysql:///" + name;
			// nodejs stuff
			ds.hostname = ds.hostname || "localhost";
			ds.database = name;
			ds.port = ds.port || 3306;
			ds.login = ds.login || null; // must pass null rather than undefined
			ds.password = ds.password || null; // must pass null rather than undefined
			ds.dirty = true;
		})
	});
}
exports.applications = applications;

exports.getContract = function(application, contract, failIfNull) {
	var app = helpers.object.get(applications, application, failIfNull);
	return app && helpers.object.get(app.contracts, contract, failIfNull);
}

exports.getDataset = function(_, contract, datasetName) {
	if(contract.datasets && contract.datasets[datasetName])
		return contract.datasets[datasetName];
	//
	var ep = adminHelper.AdminHelper.getEndpoint(_, {
		application: contract.application,
		contract: contract.contract,
		dataset: datasetName
	});
	if(ep) {
		if(ep.protocol(_) !== "syracuse")
			throw new Exception("Request of non Syracuse dataset");
		var dataset = {
			driver: ep.databaseDriver(_),
			hostname: ep.databaseHost(_),
			port: ep.databasePort(_),
			database: datasetName
		}
		//
		contract.datasets[datasetName] = dataset;
		return dataset;
	}
	//
	return null;
}

exports.loadAllEndpoints = function(_) {
	var app = adminHelper.AdminHelper.getCollaborationApplication(_);
	if(!app) return;
	var eps = adminHelper.getEndpoints(_, {jsonWhere:{applicationRef:app.$uuid}});
	eps && eps.forEach_(_, function(_, ep) {
		if(!ep.applicationRef(_)) return;
		var appName = ep.applicationRef(_).application(_);
		var ctrName = ep.applicationRef(_).contract(_);
		var application = applications[appName] ||
		(applications[appName] = {
				name: appName,
				contracts: {}
			});
		var contract = application.contracts[ctrName] ||
		(application.contracts[ctrName] = {
				name: ctrName
			});
		contract.datasets = contract.datasets || {};
		// create datasets only for syracuse endpoints as the others don't need database info
//		if(ep.applicationRef(_).protocol(_) === "syracuse")
			contract.datasets[ep.dataset(_)] = {
					driver: ep.databaseDriver(_),
					hostname: ep.databaseHost(_),
					port: ep.databasePort(_),
					database: ep.dataset(_)
				};
	});
}
