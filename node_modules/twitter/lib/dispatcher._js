"use strict";
var syracuse;
var url = require('url');
var config = require('config');
var globals = require("streamline/lib/globals");
var twitterAPI = require('./twitter');

var twitter;
var requestToken;
var requestTokenSecret;

exports.dispatcher = function(config) {
	var routes = {
		query:function(_, request, response, qs) {
			console.log("twitter.dispatcher:query");
			twitter = new twitterAPI({
			    consumerKey: '9Nlj5l1ZlIpszvqN74xFEAaq1',
			    consumerSecret: 'yyuSwRa0dC3Gl2LOtE2RDeLJQIttyEZPJkN7Hrw2ZzO81O7GTw',
			    callback: 'http://127.0.0.1:8124/twitter/callback'
			});

			var results = twitter.getRequestToken([_]);
			requestToken = results[0];
			requestTokenSecret = results[1];

			var location = "https://twitter.com/oauth/authenticate?oauth_token="+requestToken;
			console.log("redirect to "+location);
			var headers = {
				"content-type": "text/html; charset=utf8",
				"location": location,
			};
			response.writeHead(307, headers);
			response.end('<html><head><title>Redirecting...</title></head>' + //
				'<body><a href="' + location + '">click here to continue</a></body></html>', "utf8");			
			},
			callback:function(_, request, response, qs) {
				console.log("twitter.dispatcher:callback");

				twitter.getAccessToken(requestToken, requestTokenSecret, qs.oauth_verifier, 
					function(error, accessToken, accessTokenSecret, results) {
					    if (error) {
					        console.log(error);
					    } else {
	    					console.log(twitter.search({q:'sage'}, 
										accessToken, 
										accessTokenSecret, 
										function(e, data, response) {
											console.log("search.callback:")
											console.log(e);
											console.log(data);
											console.log(response);		
										}));
							response.writeHead(200, {});
							response.end();

					        //store accessToken and accessTokenSecret somewhere (associated to the user)
					        //Step 4: Verify Credentials belongs here
					    }
				});

		},
	};

	return function(_, request, response, qs) {
		console.log("twitter.dispatcher " + request.url);
		console.log("twitter.dispatcher " + request.url.split('/'));

		var parsed = url.parse(request.url, true);
		console.log("parsed.query:"+JSON.stringify(parsed.query));

		var route = routes[parsed.pathname.split('/')[2]];
		if (route) {
			return route(_, request, response, parsed.query);
		} else {
			response.writeHead(200, {
				"Content-Type": "application/json"
			});
			response.end('bad url', "\t");
		}
	};
};