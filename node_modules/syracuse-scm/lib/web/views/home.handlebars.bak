<h1 class="title">Software Configuration Management</h1>

<link rel="stylesheet" href="/css/home.css">

<script type="text/javascript">

function updateStep(steps, index, globalCb)
{
	function launchNextStep()
	{
		if (index < steps.length - 1)
			updateStep(steps, index + 1, globalCb);
	}

	if (steps[index].condition)
	{
		if (!steps[index].condition())
		{
			// This step must be skipped
			if (index == steps.length - 1)
			{
				// this was the last step
				globalCb && globalCb();
			}
			else
				launchNextStep();
			return;
		}
	}
	
	var configId = $("#select_configs option:selected").val();
	// Send ajax request to update the selected configuration
	var liIndex = "update_step_" + index;
	$("#ul_update_operations").append("<li id='" + liIndex + "' class='waiting'>" + steps[index].label + "</li>");
	var data = {configId:configId};
	if (steps[index].prepareData)
		steps[index].prepareData(data);

	$.ajax({
		type: 'POST',
		data: JSON.stringify(data),
		contentType: 'application/json',
		url: steps[index].url,
		success: function(data) {
			$("#" + liIndex).removeClass("waiting").addClass("ok");
			$("#" + liIndex).text($("#" + liIndex).text() + " : " + data.result);
			steps[index].success && steps[index].success(data);
		    launchNextStep();
		},
		error: function(err)
		{
			$("#" + liIndex).removeClass("waiting").addClass("ko");
			$("#" + liIndex).append("<div class='div_update_error'>" + 
				"<div class='div_update_error_title'>Failed : " + err.statusText + " (" + err.status + ")</div>" +
				"<div class='div_update_error_text'>" + err.responseText + "</div></div>");
			globalCb && globalCb();
		},
		complete: function ()
		{
			if (index == steps.length - 1)
			{
				// last step
				globalCb && globalCb();
			}
		}
	});
}

function update()
{	
	var needToStartStopServers;
	var pulledFiles;
	var patchFile;

	$("#div_update").show();
	$("#btn_update").hide();
	$("#ul_update_operations").empty();
	var steps = [

	{
		label : "Update from Git",
		url:'/actions/update/gitUpdate',
		success: function(data)
		{
			needToStartStopServers = data.needToStartStopServers;
			pulledFiles = data.files;
		},
	},
	{
		label : "Generate patch file",
		url:'/actions/update/generatePatch',
		prepareData: function(data)
		{
			data.files = pulledFiles;
			delete pulledFiles;
		},
		success: function(data)
		{
			patchFile = data.patchFile;
		},
	},
	{
		label : "Stop servers",
		url:'/actions/update/stopServers',
		condition : function() { return needToStartStopServers;},
	},
	{
		label : "Copy pulled files",
		url:'/actions/update/copyFiles',
	},
	{
		label : "Start servers",
		url:'/actions/update/startServers',
		condition : function() { return needToStartStopServers;},
	},

	{
		label : "Import patch",
		url:'/actions/update/importPatch',
		prepareData: function(data)
		{
			data.patchFile = "toto.dat"; //  patchFile;
		},
	},
	];
	updateStep(steps, 0, function(success)
	{
		$("#btn_update").show();	
	});
}

</script>

<div id="div_configs">
Choose a configuration
<select id="select_configs">
  {{#each scmConfigs}}
    <option value="{{id}}">{{label}} - {{gitFolder}} [{{gitBranch}}]</option>
  {{/each}}
</select>
</div>
<div id="div_update">
<div id="div_update_title">Update in progress ... please wait ...</div>
<ul id="ul_update_operations">
</ul>
</div>

<div id="div_actions">
<button id="btn_update" onclick="update();return false;">Update</button>
</div>

