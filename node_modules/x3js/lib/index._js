"use strict";

const runtime = require('etna/lib/engine/runtime/runtime');
const tdate = require('etna/lib/engine/runtime/tdate');
const tdatetime = require('etna/lib/engine/runtime/tdatetime');
const tuuid = require('etna/lib/engine/runtime/tuuid');
const tblbfile = require('etna/lib/engine/runtime/tblbfile');

const STRING_API = {
	format: (fmt, val) => {
		return runtime.functions.FORMAT$.fn(fmt, val);
	}
}

const BLOB_API = {
	fromBase64: str => new tblbfile.Blbfile(new Buffer(str, 'base64')),
};

const PREDICATES = {
	startsWith: function(str, ignoreCase) {
		return {
			$regex: "^" + str,
			$options: ignoreCase ? 'i' : undefined,
		};
	}
}

module.exports = {
	get string() {
		return STRING_API;
	},
	get date() {
		return tdate;
	},
	get datetime() {
		return tdatetime;
	},
	get uuid() {
		return tuuid;
	},
	get blob() {
		return BLOB_API;
	},
	get predicates() {
		return PREDICATES;
	},	
}