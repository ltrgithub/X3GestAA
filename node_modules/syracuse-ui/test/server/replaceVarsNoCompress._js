"use strict";

var config = require('config'); // must be first syracuse require
var helpers = require('syracuse-core/lib/helpers');
var sys = require("util");

var phantom = require("syracuse-phantomjs");
var mongodb = require('mongodb');

var adminHelper = require("syracuse-collaboration/lib/helpers").AdminHelper;
var adminTestFixtures = require("syracuse-collaboration/test/fixtures/adminTestFixtures");

var tracer = console.log;

var testData = require('../fixtures/testContract');
var testEndPoint = testData.endpoint;

testEndPoint.datasets = {
	test: {
		driver: "mongodb",
		database: "test",
		hostname: "localhost",
		port: config.collaboration.port || 27017
	}
};
config.sdata.endpoints.push(testEndPoint);


QUnit.module(module.id, {
	setup: function() {},
	teardown: function() {}
});

var port = (config.unit_test && config.unit_test.serverPort) || 3004;
var serverUrl = "http://localhost:" + port;
var sdataUrl = "/sdata/unit_test/ui/test";
var baseUrl = serverUrl + sdataUrl;

var db;
asyncTest("init database", 1, function(_) {
	//
	var server = new mongodb.Server(testEndPoint.datasets.test.hostname,
		testEndPoint.datasets.test.port, {});
	db = adminTestFixtures.newMongoDb(testEndPoint.datasets.test.database,
		server, {});
	db = db.open(_);
	db.dropDatabase(_);
	//
	db = adminTestFixtures.initializeTestEnvironnement(_, null, null, true);
	ok(db != null, "Environnement initialized");

	start();
});

var cookie;
var parent1;
var propUrl;
asyncTest("data setup", 5, function(_) {
	cookie = adminTestFixtures.getCookie(_, serverUrl, "admin", "admin");
	//
	parent1 = adminTestFixtures.post(_, cookie, baseUrl + "/parentEntities", {
		code: "test_code",
		children: [{
			code: "child1",
			children: [{
				code: "sub_child1"
			}]
		}]
	}, 201);
	adminTestFixtures.post(_, cookie, serverUrl + parent1.$shortUrl + "/children('" + parent1.children[0].$uuid + "')/children('" + parent1.children[0].children[0].$uuid + "')/binProp", {
		test: 1
	}, 204, false, {
		"x-file-name": "testFile.txt"
	});
	var body = adminTestFixtures.get(_, cookie, serverUrl + parent1.$shortUrl + "?representation=parentEntity.$details", 200);
	propUrl = serverUrl + parent1.$shortUrl + "/children('" + parent1.children[0].$uuid + "')/children('" + parent1.children[0].children[0].$uuid + "')/binProp";
	body = adminTestFixtures.get(_, cookie, propUrl, 200);
	//    console.log("body", sys.inspect(body, null, 4));

	start();
});

asyncTest("open page with nocompress=true", 3, function(_) {
	var ph = phantom.create(_);
	var page = ph.createPage(_);
	// open
	var status = page.open(serverUrl + "/syracuse-main/html/main.html?url=" + encodeURIComponent(parent1.$shortUrl + "?representation=parentEntity.$details"), {
		headers: {
			Authorization: adminTestFixtures.makeBasicAuthorizationToken("admin", "admin")
		}
	}, _);
	strictEqual(status, "success", "Page open success");

	var binPropProtoUrl = page.evaluate(function() {
		return window.syra_site.mainPage.$prototype.$properties.children.$item.$properties.children.$item.$properties.binProp.$url;
	}, _);
	strictEqual(binPropProtoUrl, "{$shortUrl}/binProp", "Binary property prototype ok");
	// load cards
	page.evaluate(function() {
		var $$actBtn = $("a.s-grid-rowcard-btn");

		// trigger click event
		var e = document.createEvent('MouseEvents');
		e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
		$$actBtn[0].dispatchEvent(e);
	}, _);
	// find the link, check the url
	var url = page.evaluate(function() {
		var $$link = $("a.s-inplace-file-link");

		return $$link[0].href;
	}, _);
	strictEqual(url, propUrl, "Expected prop url ok");

	start();
}); // Dummy comment to clean up rollout repository #6948