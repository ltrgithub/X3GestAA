"use strict";

var adminTestFixtures = require("syracuse-collaboration/test/fixtures/adminTestFixtures");
var phantom = require("syracuse-phantomjs");

var tracer = console.log;

var doStop = false;
QUnit.module(module.id, {
	setup: function() {},
	teardown: function() {
		if (doStop) {
			setTimeout(function() {
				process.kill(process.pid);
			}, 100);
		}
	}
});

var db;
asyncTest("init database", 1, function(_) {
	//
	db = adminTestFixtures.initializeTestEnvironnement(_);
	ok(db != null, "Environnement initialized");
	//
	start();
});

asyncTest("simple page open", 1, function(_) {
	var ph = phantom.create(_);
	var page = ph.createPage(_);
	var status = page.open("http://localhost:3004/syracuse-main/html/main.html?url=%2Fsdata%2Fsyracuse%2Fcollaboration%2Fsyracuse%2Fapplications%3Frepresentation%3Dapplication.%24query", {
		headers: {
			Authorization: adminTestFixtures.makeBasicAuthorizationToken("admin", "admin")
		}
	}, _);
	///    var status = page.open("http://localhost:3004/syracuse-main/html/main.html?url=%2Fsdata%2Fsyracuse%2Fcollaboration%2Fsyracuse%2Fapplications%3Frepresentation%3Dapplication.%24query", _);
	strictEqual(status, "success", "Page open success");
	setTimeout(~_, 10000);
	var cls = page.evaluate(function() {
		console.log("Evaluate that returns document.title");

		window.phantomLoadStarted = {
			onLoadMainPage: function(syraPage) {
				//self 
				console.log("syraPage : " + syraPage);
			}
		};
		/*
		// get 'new application' button		
		var $$actBtn = $('a[title="Nouvelle application"]');

		// trigger click event
		var e = document.createEvent('MouseEvents');
		e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
		$$actBtn[0].dispatchEvent(e);

		//console.log("window.phantom:" + window.phantom);
*/
		console.log("inner html: " + document.body.innerHTML);
		// return page title
		return document.title;
	}, _);
	strictEqual(cls, "Syracuse", "Got page title ok");
	//    tracer && tracer("Content : " + body);
	setTimeout(~_, 5000);

	//
	ph.exit(_);

	start();
});

asyncTest("stop", 0, function(_) {
	doStop = true;

	start();
});