"use strict";
var config = require('config'); // must be first syracuse require
var adminTestFixtures = require("syracuse-collaboration/test/fixtures/adminTestFixtures");
var phantom = require("syracuse-phantomjs");

var tracer = console.log;
var mongodb = require('streamline-mongodb');

var testData = require('../fixtures/testContract');
var testEndPoint = testData.endpoint;

testEndPoint.datasets = {
	test: {
		driver: "mongodb",
		database: "test",
		hostname: "localhost",
		port: config.collaboration.port || 27017
	}
};
config.sdata.endpoints.push(testEndPoint);
var doStop = false;
QUnit.module(module.id, {
	setup: function() {},
	teardown: function() {
		if (doStop) {
			setTimeout(function() {
				process.kill(process.pid);
			}, 500);
		}
	}
});

var ph;
asyncTest("init environment", function(_) {
	//
	ph = phantom.create(_);

	//
	start();
});

var db;
asyncTest("init database", 1, function(_) {
	//
	var server = new mongodb.Server(testEndPoint.datasets.test.hostname, testEndPoint.datasets.test.port, {});
	db = adminTestFixtures.newMongoDb(testEndPoint.datasets.test.database, server, {});
	db = db.open(_);
	db.dropDatabase(_);
	//
	db = adminTestFixtures.initializeTestEnvironnement(_);
	ok(db != null, "Environnement initialized");

	start();
});
var tabUrl = [{
	"Array Grid": "?representation=s-uitest.$test&name=array_array&category=grid"
}, {
	"Array Grid - Cards": "?representation=s-uitest.$test&name=array_array&category=gridcards"
}, {
	"Array Cards": "?representation=s-uitest.$test&name=array_array&category=cards"
}, {
	"Array Selection": "?representation=s-uitest.$test&name=array_array&category=selection"
}, {
	"Array Graph": "?representation=s-uitest.$test&name=array_graph"
}, {
	"Array Tree": "?representation=s-uitest.$test&name=array_tree"
}, {
	"Fields": "?representation=s-uitest.$test&name=field_field&category=simple"
}, {
	"Fields Binary": "?representation=s-uitest.$test&name=field_field&category=binary"
}, {
	"Fields Editor": "?representation=s-uitest.$test&name=field_field&category=editor"
}, {
	"Fields Icon": "?representation=s-uitest.$test&name=field_field&category=icon"
}];

function _openPage(key, url) {
	asyncTest("launch all ui test page array " + key, function(_) {

		ok(true, "test ui page " + key);
		var page = ph.createPage(_);
		// test grid
		var status = page.open(url, {
			headers: {
				Authorization: adminTestFixtures.makeBasicAuthorizationToken("admin", "admin")
			}
		}, _);
		strictEqual(status, "success", "Page open success " + url);
		// simple evaluate
		var cls = page.evaluate(function() {
			return syra_site && syra_site.mainPage.runUnits();
		}, _);

		cls &&
			cls.forEach(function(unit) {
				if (unit.assertResult) {
					unit.assertResult.forEach(function(assert) {
						strictEqual(assert.success, true, assert.message);
					});
				}
			});
		page.close();

		start();
	});
}


for (var i = 0; i < tabUrl.length; i++) {
	var key = Object.keys(tabUrl[i])[0];
	var serverUrl = "http://localhost:3004";
	var url = serverUrl + "/syracuse-main/html/main.html?url=" + encodeURIComponent(tabUrl[i][key]);
	_openPage(key, url);
};

asyncTest("stop", 0, function(_) {
	ph.exit(_);

	doStop = true;

	start();
});