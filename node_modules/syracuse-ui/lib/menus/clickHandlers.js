"use strict";
var _dynamicMenu;

function _clearDynamicMenu() {
	_dynamicMenu && _dynamicMenu.articleParent && _dynamicMenu.articleParent.removeItem(_dynamicMenu, true, true);
	_dynamicMenu = null;
}

exports.main = function(page) {
	var $binds = Object.keys(page.menuItems);
	for (var ii = 0, jj = $binds.length; ii < jj; ii++) {
		var menus = page.menuItems[$binds[ii]];
		if (menus && menus.length && menus[0].$item.$style === "main") {
			exports.menuItem(menus[0]);
			break;
		}
	}
};

exports.save = function(field) {
	return exports.menuId(field, "$save");
};


exports.prev = function(parent, toFirst) {
	return exports.menuId(parent, toFirst ? "$first" : "$previous");
};

exports.next = function(parent, toLast) {
	return exports.menuId(parent, toLast ? "$last" : "$next");
};

exports.navigation = function() {
	var menuItem = syra_site.menuItems && syra_site.menuItems.$navigation;
	menuItem = menuItem && menuItem[0];
	if (menuItem) {
		var isFusion = syra_site.fusionGateway && syra_site.fusionGateway.activatedBook;
		if (isFusion) {
			menuItem.$target = "blank";
		}
		exports.menuItem(menuItem);
		if (isFusion) {
			delete menuItem.$target;
		}
	}
};

exports.home = function() {
	return exports.menuId(syra_site, "$home");
};

exports.detail = function(field) {
	return exports.menuId(field, "$detail");
};


exports.create = function(field) {
	return exports.menuId(field, field.isFusionPage ? "1115" : "$create");
};

exports.contextualMenu = function(field) {
	if (field.mnPickers && field.mnPickers.menus) {
		setTimeout(function() {
			field.mnPickers.menus.click();
		}, 10);
		return true;
	}
};

exports.selector = function(field, dateTimeOnly) {
	if (!field.$isDisabled && !field.$isReadOnly) {
		var pickers = field.mnPickers;
		if (pickers) {
			var picker = (!dateTimeOnly && (pickers.$lookup || pickers.choice)) || pickers.date || pickers.time;
			if (picker) {
				setTimeout(function() {
					picker.click();
				}, 10);
				return true;
			}
		}
	}
};

exports.tunnel = function(field) {
	if (field.mnPickers && field.mnPickers.$tunnel) {
		setTimeout(function() {
			field.mnPickers.$tunnel.click();
		}, 10);
	} else {
		if (field.$menusPopup && field.$menusPopup.$tunnel) {
			field.page.externalAdapter.onFieldClickPicker({
				field: field,
				pickerType: "$tunnel"
			});
		}
	}
};

exports.print = function(page) {
	return exports.menuId(page, "$print");
};

exports.deleteItem = function(item) {
	return exports.menuId(item, "$delete");
};
exports.recordCard = function(item) {
	return exports.menuId(item, "$recordCard");
};
exports.refreshPageData = function(page) {
	if (page.isFusionPage) {
		exports.menuId(page, "2823");
	} else {
		var landingPage;
		if (page == syra_site.landingPageMaster) {
			landingPage = page.getSelectedChildPage();
		} else {
			landingPage = page.isLandingPage ? page : null;
		}
		if (landingPage) {
			landingPage.refreshPicker.click();
		} else {
			page.$autoFetch &&
				page.fetch({}, function(data, response, requestUrl) {
					if (!page || !page.disposed) {
						page.startChange();
						page.applyChange(data, response, requestUrl);
						page.endChange();
					}
				});
		}
	}
};


exports.showFieldProperty = function(field) {
	if (field.page.isFusionPage) {
		exports.menuId(field.page, "1172");
	} else {

	}
};

function _onClick(menu, event) {
	var doClick = true;
	if (doClick && menu.contextField) {
		doClick = menu.contextField.onMenuClick ? menu.contextField.onMenuClick(menu, event) : true;
	}
	if (doClick && menu.$item.$ownerId) {
		var owner = syra_store.get(menu.$item.$ownerId);
		doClick = owner && owner.onMenuClick ? owner.onMenuClick(menu, event) : true;
	}

	if (doClick && menu.boxParent) {
		doClick = menu.boxParent.onMenuClick ? menu.boxParent.onMenuClick(menu, event) : true;
		if (doClick && (menu.boxParent != menu.articleParent)) {
			doClick = menu.articleParent.onMenuClick ? menu.articleParent.onMenuClick(menu, event) : true;
		}
	}

	if (doClick) {
		if (menu.articleParent != menu.page) {
			doClick = menu.page.onMenuClick ? menu.page.onMenuClick(menu, event) : true;
		}
		if (doClick && (menu.onMenuClick ? menu.onMenuClick(event) : true)) {
			//click on middle button of mousewheel open link in new tab
			var $prevTarget = undefined;
			var isMiddleButton = (event && event.which) == 2;
			if (isMiddleButton) {
				$prevTarget = menu.$target;
				menu.$target = "blank";
			}
			syra_controller.executeMenu(menu);
			if (isMiddleButton) {
				if (!$prevTarget) {
					delete menu.$target;
				} else {
					menu.$target = $prevTarget;
				}
			}
		}
	}
	setTimeout(function() {
		if (menu) {
			var parent = menu.boxParent;
			while (parent && !parent.disposed) {
				if (parent.menusPopup) {
					parent.menusPopup.close();
					break;
				}
				parent = parent.boxParent;
			}
		}
	}, 10);
}


exports.dynamicMenu = function(article, $link) {
	var $bind = article.id + "-syra-dynamic-menu";
	article.$menus[$bind] = null;
	var $links = {};
	$links[$bind] = $link;
	article.applyChange({
		$links: $links
	});
	return exports.menuId(article, $bind);
};
exports.menuId = function(field, $bind) {
	var menuItem = field.menuItems && field.menuItems[$bind];
	if (!menuItem || !menuItem[0]) {
		var $menu = field.$menus[$bind];
		if ($menu) {
			var article = (field.isDesktopPage || field.isRecordArticle) ? field : field.articleParent;
			_clearDynamicMenu();
			menuItem = _dynamicMenu = field.page.loadNewItem(null, {
				$category: "link",
				$bind: $menu.$bind,
				$isAction: $menu.$isAction
			}, article);
			menuItem.contextField = field;
		}
	} else {
		menuItem = menuItem[0];
	}
	if (menuItem) {
		menuItem.$url = syra_site.urlMaker.formatMenuUrl(menuItem.articleParent, menuItem);
		exports.menuItem(menuItem);
		return true;
	}
};

function _checkMenuDesignValidaty(menu) {
	var articleParent = menu.articleParent;
	while (articleParent) {
		if (articleParent.designer) {
			return !(articleParent.designer && articleParent.designer.onMenuClick && articleParent.designer.onMenuClick(menu) == false);
		}
		if (articleParent == menu.page) {
			break;
		}
		articleParent = articleParent.articleParent;
	}
	return true;
}



exports.menuItem = function(menu, event) {
	if (!menu.$isDisabled) {
		if (menu.page) {
			if (syra_site.currentQuickEdit &&
				syra_site.currentQuickEdit.needCloseConfirm(menu.page, function() {
					exports.menuItem(menu, event);
				})) {
				return;
			}
			if (menu.isNoSyracuseUrl) {
				syra_site.history.setHref(menu);
				if (event) {
					event.syraRetValue = true;
				} else {
					window.open(menu.$url, "_blank");
				}
				return;
			}
			if (_checkMenuDesignValidaty(menu)) {
				var isValidated = true;
				if (menu.$bind == "$save" || menu.$bind == "$saveAs") {
					isValidated = menu.page.validateFields();
				}
				if (isValidated) {
					var field;
					if (menu.boxParent && menu.boxParent.contextField) {
						//boxParent is menubox of contextMenu
						menu.contextField = field = menu.boxParent.contextField;
						if (menu.contextField && menu.contextField.$item && !menu.$subRecordKey) {
							menu.$subRecordKey = menu.contextField.$item.$bind;
						}
					}
					var page = menu.page;
					if (page == syra_site) {
						if (page.mainPage && !page.mainPage.disposed && page.mainPage.isFusionPage) {
							page = page.mainPage;
						}
					}
					if (page && !page.disposed && page.externalAdapter) {
						page.externalAdapter.onMenuItemClick({
							menuItem: menu,
							field: field,
							doEvent: function() {
								_onClick(menu, event);
							}
						});
					}
				}
			}
		} else {
			_onClick(menu, event);
		}
	}
};


exports.dispose = function() {
	_clearDynamicMenu();
};