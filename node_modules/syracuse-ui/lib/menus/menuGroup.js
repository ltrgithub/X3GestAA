"use strict";
var helpers = require('syracuse-core/lib/helpers');
var Box = require('syracuse-ui/lib/article/box').Box;

function MenuGroup(){
}

exports.MenuGroup = helpers.defineClass(MenuGroup, Box, {
    loadBox: function(){
        if (this.isRoot = (!this.boxParent.isMenuGroup)) {
            this.ensureLinkSettings(this.$item, this.$item.$isCollapsable);
        }
        this.isMenuGroup = true;
        
        this._ensureSkin(this.$authoringLevel);
        Box.prototype.loadBox.call(this);
        if (this.boxParent.isMenuGroup && !this.boxParent.isRoot) {
            this._item.className += " " + "s-menu-sub";
        }
    },
    ensureLinkSettings: function($item, $isCollapsable, $layoutItems){
        var $skinLink = $item.$itemSkin || $item.$skin + "-link";
        var $items = $layoutItems || $item.$layout.$items;
        if ($items) {
            for (var ii = 0, jj = $items.length; ii < jj; ii++) {
                var $child = $items[ii];
                if ($child.$bind) {
                    if (!$child.$skin) {
                        $child.$skin = $skinLink;
                    }
                    if ($item.$itemIcon && !$child.$icon) {
                        $child.$icon = $item.$itemIcon;
                    }
                    if ($item.$isDescriptionVisible && $child.$isDescriptionVisible === undefined) {
                        $child.$isDescriptionVisible = true;
                    }
                    $child.$category = "link";
                }
                else {
                    if ($child.$layout) {
                        $child.$skin = $child.$skin || $item.$skin;
                        $child.$itemSkin = $child.$itemSkin || $item.$itemSkin
                        $child.$category = $child.$category || "menus";
                        if ($child.$isBoxCollapsable === undefined) {
                            $child.$isBoxCollapsable = $isCollapsable;
                        }
                        this.ensureLinkSettings($child, $child.$isBoxCollapsable);
                    }
                    else 
                        if ($child.$layoutType) {
                            this.ensureLinkSettings($item, $isCollapsable, $child.$items); //$item is the box parent
                        }
                }
            }
        }
        
    },

});
