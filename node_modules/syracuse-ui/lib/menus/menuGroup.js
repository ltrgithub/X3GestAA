"use strict";
var helpers = require('syracuse-core/lib/helpers');
var SectionBlock = require('syracuse-ui/lib/article/sectionBlock').SectionBlock;

function MenuGroup() {}

exports.MenuGroup = helpers.defineClass(MenuGroup, SectionBlock, {
	getDefaultTitle: function() {
		return syra_local.box_menusTitle;
	},
	loadBox: function() {
		if (this.boxParent && this.boxParent.boxChildItems) {
			this.boxParent.boxChildItems.push(this);
		}
		this.page.registerSectionBlock(this);
		switch (this.$item.$skin) {
			case "s-page-menus":
				this.$item.$skin = "s-mn-main";
				break;
			case "s-mn-h2":
				delete this.$item.$skin;
				break;
		}
		this.isSection = true;
		if (this.$item) {
			if (!this.$item.$layout) {
				this.$item.$layout = {};
			}
			if (!this.$item.$layout.$items) {
				this.$item.$layout.$items = [];
			}
		}
		this.$isAuthoringEnabled = false;
		this.boxChildItems = [];
		if (this.isMenuGroupRoot = (!this.boxParent.isMenuGroup)) {
			this.menuGroupRoot = this;
		} else {
			var parent = this.boxParent;
			while (parent) {
				if (parent.menuGroupRoot) {
					this.menuGroupRoot = parent.menuGroupRoot;
					break;
				}
			}
		}
		this.isMenuGroup = true;

		this.$childMenus = {};
		this.$item.$name = this.$item.$name || this.$clientId; //used for authoring
		this.drawBox();

		if (!this.$item.$isPopupContent) {
			var preferences = this.page.userPreferences && this.page.userPreferences.data;
			if (preferences) {
				preferences = preferences.data && preferences.data.$menuBarGroup;
				if (preferences) {
					var $opened = preferences[this.id];
					if ($opened != undefined && this.$opened != $opened) {
						this.openBox(this.$opened = $opened);
					}
				}
			}
		}


		if (this.$item.$isMenusBag) {
			this.articleParent.menusBag = this;
		}
		if (this.isMenuGroupRoot) {
			syra_site.dom.toggleClass(this.body, "s-menu-group-root", true);
			if (this.$item.$vignette && this.page.registerVignette) {
				this.page.registerVignette(this, this.$item.$vignette);
			}
		} else {
			if (this.boxParent.$item.$isPopupContent) {
				syra_site.dom.toggleClass(this.body, "s-menu-group-root", true);
			}
		}
	},
	_loadMenuItem: function($menuItem, slot) {
		$menuItem.$category = "link";
		switch ($menuItem.$skin) {
			case "s-mn-h2-link":
				delete $menuItem.$skin;
				break;
			case "s-page-menus-link":
				$menuItem.$skin = "s-mn-main-link";
				break;
		}
		if (!$menuItem.$ownerId && this.$item.$ownerId) {
			$menuItem.$ownerId = this.$item.$ownerId;
		}
		if (!$menuItem.$skin) {
			$menuItem.$skin = this.$item.$itemSkin || (this.$skin + "-link");
		}
		if (this.$item.$itemIcon) {
			if ($menuItem.$icon === undefined) {
				$menuItem.$icon = {};
			}
			if (!$menuItem.$icon.$mode) {
				$menuItem.$icon.$mode = this.$item.$itemIcon.$mode;
			}
			if (!$menuItem.$icon.$path) {
				$menuItem.$icon.$path = this.$item.$itemIcon.$path;
			}
		}
		return this.page.loadNewItem(slot, $menuItem, this);
	},
	_renderMenuItems: function($layout, slot) {
		var cssRow, width;
		if ($layout.$layoutType == "row") {
			cssRow = "s-row-cell";
			if (!$layout.$autoSize) {
				width = (100 / ($layout.$items.length || 1)) + "%";
			}
		}
		var newItem;
		for (var ii = 0, jj = $layout.$items.length; ii < jj; ii++) {
			var $child = $layout.$items[ii];
			newItem = null;
			if ($child.$bind) {
				if (!$child.$category || $child.$category == "link") {
					newItem = this._loadMenuItem($child, slot);
				}
			} else {
				if ($child.$layout || $child.$category == "menus") {
					$child.$category = "menus";
					if ($child.$skin === undefined) {
						$child.$skin = this.$skin;
					}
					if (this.$item.$itemSkin && $child.$itemSkin === undefined) {
						$child.$itemSkin = this.$item.$itemSkin;
					}
					if (this.$item.$isBoxCollapsable && $child.$isBoxCollapsable === undefined) {
						$child.$isBoxCollapsable = this.$item.$isBoxCollapsable;
					}
					newItem = this.page.loadNewItem(slot, $child, this);
				} else
				if ($child.$layoutType) {
					newItem = document.createElement("div");
					this._renderMenuItems($child, newItem);
					slot.appendChild(newItem);
				}
			}
			if (cssRow && newItem) {
				newItem = newItem.domItem || newItem;
				syra_site.dom.toggleClass(newItem, cssRow, true);
				if (width) {
					newItem.style.width = width;
				}
			}
		}
	},
	renderLayoutContent: function() {
		this._renderMenuItems(this.$item.$layout, this.body);
	},
	onOpenButtonClick: function() {
		if (this.$item) {
			this.page.onMenuGroupClick(this);
			SectionBlock.prototype.onOpenButtonClick.call(this);
		}
	},
	addMenuItem: function($menu) {
		var $item = this.$childMenus[$menu.$bind];
		if (!$item) {
			this.$childMenus[$menu.$bind] = $item = {
				$bind: $menu.$bind,
				$isAction: $menu.$isAction,
				$icon: $menu.$icon
			};
		}
		return this._loadMenuItem($item, this.body, this);
	},
	unload: function() {
		if (this.$item && this.$item.$isOwner) {
			for (var ii = 0, jj = this.$item.$layout.$items.length; ii < jj; ii++) {
				syra_menus.removeMenu(this.articleParent, this.$item.$layout.$items[ii].$bind);
			}
		}
		this.articleParent.removeItem(this, true, true); //remove dom
	},
	dispose: function() {
		this.menuGroupRoot = this.$childMenus = null;
		SectionBlock.prototype.dispose.call(this);
	}
});