"use strict";
exports.cssFontIcon = " s-fonticon-btn ";

var _index = 0;

if (document.dir === 'rtl') {
	exports.cssFontIcon += " s-rtl-img ";
}

exports.btnWidth = 20;

var _buttons = {};

exports.getButton = function(id) {
	return _buttons[id];
};
exports.addFieldPicker = function(btn) {
	btn.css = btn.parent.$mnPickersCss;
	if (btn.parent.$item.$css) {
		btn.css += " " + btn.parent.$item.$css;
	}
	btn.fontIcon = btn.fontIcon || btn.pickerId;
	btn.isHidden = btn.parent.$isDisabled || btn.parent.$isReadOnly;
	exports.add(btn);
	btn.parent.onAddMenuPicker && btn.parent.onAddMenuPicker(btn);
	return btn;
};
exports.highlightFieldPickers = function(field, on) {
	if (field && field.buttons) {
		for (var ii = 0, jj = field.buttons.length; ii < jj; ii++) {
			var btn = field.buttons[ii];
			btn.pickerId && syra_dom.toggleClass(btn.link, "s-field-enter", on);
		}
	}
};

function _onClick(event) {
	var self = this;
	if (!self.parent.authoringNode && !self.parent.$isDisabled) {
		self.parent.page.externalAdapter.onFieldClickPicker({
			field: self.parent,
			pickerType: self.pickerId,
			doEvent: function(options) {
				self.pickerclick(options);
			}
		});
	}
}

exports.add = function(btn) {
	if (btn.pickerId) {
		btn.iconOnly = true;
		btn.pickerclick = btn.click;
		btn.click = _onClick;
		btn.parent["picker_" + btn.pickerId] = btn;
	}
	btn.id = ++_index;
	if (!btn.link) {
		if (btn.isIndicator) {
			btn.link = document.createElement("div");
		} else {
			btn.link = document.createElement("a");
			if (!btn.pickerId) {
				btn.link.setAttribute("href", "#");
			}
		}
	}
	var link = btn.link;
	if (btn.click) {
		link.syraBtnclick = btn.id;
	}
	_buttons[link.syraBtn = btn.id] = btn;
	if (btn.shortCutTip) {
		link.syraShortCutTip = btn.shortCutTip;
	}
	if (btn.text === undefined) {
		btn.text = "";
	}
	if (btn.iconOnly) {
		link.title = btn.text;
		link.syraTip = 2;
		link.syraIconCss = btn.css;
		if (!(btn.fontIcon && exports.setFontIcon(link, btn.fontIcon))) {
			link.className = btn.css;
			if (btn.imageName) {
				link.className += " s-mn-icon";
				link.style.backgroundImage = "url('" + syra_site.$iconPath + btn.imageName + "')";
			}
		}
	} else {
		link.className = btn.css;
		link.syraTip = 1;
		link.title = btn.title || btn.text;
		if (btn.titleImage) {
			btn.titleImageItem = syra_dom.addDiv(btn.css + "-title-icon");
			btn.titleImageItem.style.backgroundImage = "url('" + syra_site.$iconPath + btn.titleImage + "')";
			link.appendChild(btn.titleImageItem);
		} else {
			link.textContent = btn.text;
		}
		if (btn.fontIcon || btn.imageName) {
			btn.iconflag = document.createElement("div");
			if (btn.fontIcon) {
				btn.iconflag.syraIconCss = btn.css + "-flag s-mn-icontext";
				exports.setFontIcon(btn.iconflag, btn.fontIcon);
			} else {
				btn.iconflag.className = btn.css + "-img s-mn-icontext";
				btn.iconflag.style.backgroundImage = "url('" + syra_site.$iconPath + btn.imageName + "')";
			}
			link.insertBefore(btn.iconflag, link.firstChild);
		}
	}
	btn.isDisabled && exports.disable(btn, true);
	btn.isHidden && exports.hide(btn, true);
	btn.slot && btn.slot.appendChild(link);
	(btn.parent.buttons = btn.parent.buttons || []).push(btn);
	return btn;
};
exports.setText = function(btn, text, icon) {
	btn.iconflag && btn.link.removeChild(btn.iconflag);
	if (text != undefined) {
		btn.text = text;
		if (btn.link.syraTipTitle) {
			btn.link.syraTipTitle = text;
		} else {
			btn.link.title = text;
		}
		if (!btn.iconOnly && !btn.titleImage) {
			btn.link.textContent = btn.text;
		}
	}
	btn.iconflag && btn.link.insertBefore(btn.iconflag, btn.link.firstChild);
	if (icon) {
		if (btn.imageName) {
			btn.imageName = icon;
			(btn.iconflag || btn.link).style.backgroundImage = "url('" + syra_site.$iconPath + btn.imageName + "')";
		} else {
			exports.setFontIcon(btn.iconflag || btn.link, icon);
		}
	}
	if (btn.titleImage) {
		btn.link.appendChild(btn.titleImageItem);
	}
};
exports.hide = function(btn, hidden) {
	if (btn) {
		if (btn.link_isHidden != hidden) {
			btn.link_isHidden = hidden;
			syra_dom.hide(btn.link, hidden);
		}
	}
};
exports.visibility = function(btn, visible) {
	if (btn) {
		visible = visible ? "visible" : "hidden";
		if (btn.link.style.visibility != visible) {
			btn.link.style.visibility = visible;
		}
	}
};
exports.disable = function(btn, disabled) {
	btn && syra_dom.disable(btn.link, btn.$isDisabled = disabled);
};
exports.remove = function(btn) {
	if (btn) {
		if (btn.pickerId) {
			delete btn.parent["picker_" + btn.pickerId];
		}
		syra_dom.remove(btn.link);
		exports.dispose(btn);
	}
};
exports.onItemInOut = function(syraBtn, on) {
	var btn = _buttons[syraBtn];
	if (btn && !btn.$isDisabled && !btn.parent.$isDisabled) {
		syra_dom.toggleClass(btn.link, "s-enter", on);
		if (on) {
			var showAlways = btn.iconOnly || (btn.link.title != btn.text);
			syra_tip.titleTip.show(btn.link.title, btn.link, !showAlways); // if no show always => check tip visibility
		}
	}
};

exports.setFontIcon = function(btn, fontIcon) {
	if (fontIcon[0] == "$") {
		fontIcon = fontIcon.substr(1);
	}
	var icon = syra_icon.font[fontIcon];
	if (icon) {
		btn.innerHTML = icon;
		btn.className = btn.syraIconCss + exports.cssFontIcon + "s-btn-" + fontIcon;
		return true;
	}
};

exports.dispose = function(btn) {
	if (btn) {
		delete _buttons[btn.id];
	}
};