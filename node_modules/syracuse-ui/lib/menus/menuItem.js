"use strict";
var helpers = require('syracuse-core/lib/helpers');
var menuBuilder = require('./menuBuilder');


function MenuItem() {

}

exports.MenuItem = helpers.defineClass(MenuItem, null, {
	highlight: function(show) {
		syra_site.dom.toggleClass(this.domItem, "s-highlight", show);
	},
	ensureLayoutMode: function() {
		this.layoutParent && this.layoutParent.ensureLayoutSlot(this);
	},
	loadBox: function(record) {
		this.menuBuilder = menuBuilder;
		this.menuBuilder.load(this, record);
	},
	onItemInOut: function(onEnter, event) {
		syra_menus.onItemInOut(onEnter, event, this);
	},
	getArticle: function() {
		if (!this.articleParent) {
			this.articleParent = this.boxParent ? this.boxParent.getArticle() : null;
		}
		return this.articleParent;
	},
	getTitle: function() {
		if (this.domItem.syraTitle == null && this.$title) {
			this.domItem.syraTitle = syra_menus.parseTitle(this.boxParent, this.$title);
		}
		return this.domItem.syraTitle || "";
	},

	setDescription: function($description) {
		this.$description = $description;
		if (this._description) {
			this._description.textContent = $description;
		} else {
			this.domItem.title = $description;
		}
	},
	setState: function(state) {
		if (state.$isHidden !== undefined) {
			this.showItem(!(this.$isHidden = state.$isHidden));
		}
	},
	showItem: function(show) {
		this.domItem.style.display = show ? "" : "none";
		this.isInvisible = !show;
		if (this.layoutParent) {
			this.layoutParent.ensureItemVisibility(this, !show);
		}
	},
	disable: function($value) {
		syra_site.dom.disableItem(this.domItem, this.$isDisabled = $value || false);
	},
	click: function(event) {
		menuBuilder.click(this, event);
	},
	setMenu: function($menu, record) {
		menuBuilder.setMenu(this, $menu, record);
	},
	isRepresentationUrl: function() {
		return !(this.$sourceType && (this.$sourceType.indexOf('json') == -1));
	},
	dispose: function() {
		this.onItemInOut();
		delete repository[this.id];
		this.contextField = this.detailField = this.$vignettes = this.rowSeparator = this._description = this.delta = null;
		this.article = this.onMenuClick = this.$item = this.layoutSlot = null;
		this.$url = this.domItem = this.$title = this.iconValue = null;
		this.external = this.layoutParent = this.boxParent = this.articleParent = this.page = this.childVariants = null;
		this.popupTitle = this.menuBuilder = null;
	}
});