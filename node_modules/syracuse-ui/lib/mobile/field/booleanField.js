"use strict";
var helpers = require('syracuse-core/lib/helpers');
var BooleanField = require('syracuse-ui/lib/common/field/booleanField').BooleanField;
var fieldHelper = require('./fieldHelper');
var localize = {
    booleanYes: "Yes",
    booleanNo: "No"
};

function MobileBoolean(){
}

exports.MobileBoolean = helpers.defineClass(MobileBoolean, BooleanField, {
    loadBox: function(){
        fieldHelper.onLoadBox(BooleanField, this, "slider");
    },
    setDescription: function(){
    },
    setHelp: function(){
    },
    render: function(){
        if (this.$isEditMode) {
            this.$$input = $("<select data-role='slider'>").appendTo(this.$$item);
            this.$$input.append("<option value='0'>" + localize.booleanNo + "</option><option value='1'>" + localize.booleanYes + "</option>");
        }
        else {
            this.$$textValue[0].className += (" " + this._$cssField + "-value-boolean");
        }
    },
    _createValueContainer: function(){
        if (this.$isEditMode) {
            this.domValueSlot = (this.$$inputValue = this.$$dataValue = this.$$item)[0];
        }
        else {
            BooleanField.prototype._createValueContainer.call(this);
        }
    },
    setDataValue: function(value){
        var boolValue = (this.currentValue = value || this.statusValues.off) == this.statusValues.on;
        if (this.$isEditMode) {
            this.$$input[0].selectedIndex = boolValue ? 1 : 0;
            if (this.getPage().$isjqmPage) {
                document.site.refreshJQMPlugin(this.$$input, "slider");
            }
        }
        else {
            BooleanField.prototype.setDataValue.call(this, value);
        }
    }
});
