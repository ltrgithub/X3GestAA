"use strict";
var helpers = require('syracuse-core/lib/helpers');
var Article = require("syracuse-ui/lib/common/article/article").Article;
var Pager = require("./pager").Pager;
var fieldHelper = require('syracuse-ui/lib/mobile/field/fieldHelper');
var RawList = require("syracuse-ui/lib/common/field/collection/list").RawList;


var ReferenceListBuilder = require("./referenceListBuilder").Builder;
var SingleFieldListBuilder = require("./singleFieldListBuilder").Builder;
var CardListBuilder = require("./cardListBuilder").Builder;

function List(){
}

exports.List = helpers.defineClass(List, RawList, {
    createBuilder: function(){
        fieldHelper.setTheme(this);
        if (this.$field.$item.$type == "application/x-reference") {
            this.builder = new ReferenceListBuilder();
            this.builder.$layoutOptions = this.$layoutOptions.builder.reference;
        }
        else {
            if (this.$field.$item.$type == "application/x-string") {
                this.builder = new SingleFieldListBuilder();
                this.builder.$layoutOptions = this.$layoutOptions.builder.singleField;
            }
            else {
                this.builder = new CardListBuilder();
                this.builder.$layoutOptions = this.$layoutOptions.builder.cardList;
            }
        }
        this.builder.list = this;
        this.builder.initialize();
    },
    setDescription: function(){
    },
    setHelp: function(){
    },
    applyActionLinkChange: function(resources, record){
        RawList.prototype.applyActionLinkChange.call(this, resources, record);
        if (resources || record) {
            var self = this;
            self.menuBoxes.forEach(function(menus){
                menus.refreshListView();
            });
        }
    },
    appendArticleMenus: function($$container){
        return document.itemFactory.load($("<div/>").appendTo($$container), {
            $category: "links",
            $skin: this.$layoutOptions.menus,
            $theme: this.$theme.$menus,
            $format: "button",
            $button: {
                $inline: true
            }
        }, this);
    }
});
