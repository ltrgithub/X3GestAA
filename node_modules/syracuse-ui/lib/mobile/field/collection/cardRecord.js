"use strict";
var helpers = require('syracuse-core/lib/helpers');
var Article = require("syracuse-ui/lib/common/article/article").Article;

function CardRecord(){
}

exports.CardRecord = helpers.defineClass(CardRecord, Article, {
    loadRecord: function(list, record, $recordIndex, $$recordContainer){
        this.$recordUuid = record.$uuid;
        this.$recordIndex = $recordIndex;
        this.$$recordContainer = $$recordContainer;
        this.$facet = list.$recordFacet;
        this.$prototype = list.$prototype.$item;
        document.itemFactory.initializeItem(this, {
            $layout: {
                $items: list.$item.$layout.$items
            }
        }, list);
        this.loadBox(record);
        
    },
    remove: function(){
        this.$$item.remove();
    },
    drawBox: function(){
        var self = this;
        var $$container = self.$$item = $("<li/>").appendTo(self.boxParent._$$body).attr("data-s-record", self.$recordUuid).addClass("s-field-cardRecord");
        var $links = self.$prototype.$links || {};
        var $link = $links.$details || $links.$edit;
        if ($link) {
            self.link = document.itemFactory.load(self.$$item, {
                $bind: "$detail",
                $category: "link",
                $isListWrapper: true,
            }, self);
            self.link.setMenu($link);
            $$container = self.link.$$item;
            
            // if lookup
            if (self.boxParent.page.$facet == "$lookup") {
                $$container.bind("click", function(){
                    var selectedRecords = {};
                    selectedRecords[self.$recordUuid] = self;
                    self.boxParent.page.onSelectRecord(selectedRecords);
                    return false;
                });
            }
        }
        document.itemFactory.load($$container, self.boxParent.builder.$cardview, self);
    },
    highlightSelection: function(selected){
        this.$$item.toggleClass("s-list-record-selected", selected);
        if (this.$$selector && this.$$selector.is("input")) {
            this.$$selector.attr('checked', selected);
        }
    }
});
