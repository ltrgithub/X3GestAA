"use strict";
var helpers = require('syracuse-core/lib/helpers');
var RawListBuilder = require("syracuse-ui/lib/common/field/collection/rawListBuilder").RawListBuilder;
var localize = require('syracuse-ui/lib/common/controller/localize').list;
var Pager = require("./pager").Pager;
var CardRecord = require('./cardRecord').CardRecord;


function CardListBuilder(){
}

exports.Builder = helpers.defineClass(CardListBuilder, RawListBuilder, {
    initialize: function(){
        this.list.RecordClass = CardRecord;
    },
    drawBuilder: function(){
        var self = this;
        var list = self.list;
        list.$skin = list.$item.$skin || "s-grid";
        
        list.appendArticleMenus(list.$$value);
        if (!list.$item.$hidePager) {
            (list._pager = new Pager()).load(list);
        }
        list._$$body = $("<ul/>").attr("data-inset", true).attr("data-theme", list.$theme.$item || document.site.$item.$themes.$default.$item).hide().appendTo(list.$$value);
        if (!list.$item.$items) {
            list.$item.$items = list.$binds.map(function($bind){
                return {
                    $bind: $bind
                };
            });
        }
        list.$cardView = (typeof(list.$item.$cardView) === "object") ? list.$item.$cardView : {
            $layout: {
                $items: list.$item.$items
            }
        };
        list.$cardView.$category = "block";
        list.$cardView.$isBodyTransparent = true;
        
        list.applyDesignMetaData(list.$item, false);
        list.boxParent.getArticle().bind(list, list.$item.$bind);
        self.refreshListView();
        list._$$body.show();
    },
    refreshListView: function(){
        if (document.site.isjqmPageLoaded()) {
            document.site.refreshJQMPlugin(this.list._$$body, "listview");
        }
    },
    appendNoRecordRow: function(){
        this.list._$$body.append($("<li/>").addClass(this.list.$skin + "-no-record").text(localize.noRecords));
    },
    onAfterDataBinding: function(){
        if (this.list._pager) {
            this.list._pager.draw();
        }
        this.refreshListView();
    }
});
