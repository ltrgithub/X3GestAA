"use strict";
var helpers = require('syracuse-core/lib/helpers');
var Article = require("syracuse-ui/lib/common/article/article").Article;

function ReferenceRecord(){
}

exports.ReferenceRecord = helpers.defineClass(ReferenceRecord, Article, {
    remove: function(){
        this.$$item.remove();
    },
    dispose: function(){
        delete this.list
        delete this.builder;
        delete this.row;
        delete this.menus;
        if (this.$$del) {
            this.$$del.unbind();
        }
        Article.prototype.dispose.call(this);
    },
    applyMetaData: function(metaData){
    },
    drawBox: function(){
        var self = this;
        self.$$item = $("<div/>").addClass(self.list.$skin + "-record").attr("data-s-record", self.$recordUuid).addClass(self.list.$recordCss);
        var $$data = $("<div/>").addClass(self.list.$skin + "-record-data").appendTo(self.$$item);
        if (this.$isEditMode) {
            // grouped buttons style attribute
            //$$data.attr("data-role", "controlgroup").attr("data-type", "horizontal");
            
            self.$$del = $("<a/>").addClass(self.list.$skin + "-record-del").appendTo(self.$$item).bind("click", function(){
                document.controller.notifyChange(self.list.getArticleParent(), self.list.$item.$bind, [{
                    $uuid: self.$recordUuid,
                    $index: self.$recordIndex,
                    $isDeleted: true
                }]);
                return false;
            });
            //self.$$del.attr("data-theme", document.site.$item.$themes.$default.$button);
            //self.$$del.button(); // necessary in case of refresh
        }
        document.itemFactory.load($$data, {
            $isTitleRowHidden: true,
            $bind: "$singleField",
            $isEditMode: false,
            $inplace: true
        }, this);
        self.list._body.appendChild(self.$$item[0]);
    }
});
