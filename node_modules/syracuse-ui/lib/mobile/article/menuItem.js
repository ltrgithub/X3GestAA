"use strict";
var helpers = require('syracuse-core/lib/helpers');
var MenuItem = require('syracuse-ui/lib/common/article/menuItem').MenuItem;
var iconThemesPath = '../../syracuse-ui/themes/mobile/sage/images/site/';

function MobileMenuItem(){
}

exports.MobileMenuItem = helpers.defineClass(MobileMenuItem, MenuItem, {
    setTitle: function($value){
        if (this.$item.$noText) {
            this.mn.title = $value;
        }
        else {
            if (!this.$item.$isListWrapper) {
                if ($value.indexOf("{") < 0) {
                    if (this.$$item.button && this.$isjqmButton) {
                        this.$$item.find(".ui-btn-text").text($value);
                    }
                    else {
                        if (!this.$item.$isTitleSet) 
                            this.$$item.append($value);
                    }
                }
                else {
                    this.boxParent._renderExpression($value, this.$$item);
                }
            }
        }
        this.$item.$isTitleSet = true;
    },
    _createMenu: function(article, $menu){
        MenuItem.prototype._createMenu.call(this, article, $menu);
        var $icon = this.$item.$icon || {};
        if ($icon.$name) {
            this.mn.setAttribute("data-icon", $icon.$name);
        }
        var iconPos = this.$item.$noText ? "notext" : $icon.$position;
        if (iconPos) {
            this.mn.setAttribute("data-iconpos", iconPos);
        }
        
        switch (this.$item.$format) {
            case "button":
                var $button = this.$item.$button || {};
                if ($button.$inline) {
                    this.mn.setAttribute("data-inline", true);
                }
                if ($button.$position) {
                    this.mn.className += (" ui-btn-" + $button.$position);
                }
                this.mn.setAttribute("data-theme", this.$item.$theme || document.site.$item.$themes.$default.$button);
                this.mn.setAttribute("data-role", this.$item.$format);
                if ($menu.$css) {
                    this.$$container.css('text-align', $menu.$css);
                }
                if (!this.$isjqmButton) {
                    if (this.getPage().$isjqmPage) {
                        this.$$item.buttonMarkup();
                        this.$isjqmButton = true;
                    }
                }
                break;
            case "icon":
                var uiBlockLetter;
                var len = this.$$container.parent().children().length;
                if (len == 1) {
                    uiBlockLetter = "a";
                }
                else {
                    if (this.$$container.prev().hasClass("ui-block-a")) {
                        uiBlockLetter = "b";
                    }
                    else 
                        if (this.$$container.prev().hasClass("ui-block-b")) {
                            uiBlockLetter = "c";
                        }
                        else {
                            uiBlockLetter = "a";
                        }
                }
                this.$$container.addClass("ui-block-" + uiBlockLetter).addClass("s-mobile-grid-block");
                this.$$item.addClass("s-menu-icon-test2");
                
                if ($menu.$icon) {
                    this.$$item.css('background', 'url("' + iconThemesPath + 'm-' + $menu.$icon + '.png") no-repeat scroll center 0 transparent');
                }
                break;
            case "selectmenu":
                // remove menu item without text
                if (!$menu.$description && !$menu.$title) {
                    this.$$item.remove();
                }
                else {
                    this.$$item.addClass("s-mobile-article-menus");
                }
                break;
            case "list":
                if ($menu.$icon) {
                    this.$$item.append($("<img>").attr("src", iconThemesPath + 'm-' + $menu.$icon + '.png'));
                }
                break;
            default:
                if (this.$item.$theme) {
                    this.$$container.attr("data-theme", this.$item.$theme);
                }
                break;
        }
        
        // hack necessary for the delegate click action in controller#bindMenuClick() to run
        this.$$item.bind("click", function(){
        });
    },
    disable: function($value){
        document.site.disableItem(this.$$item[0], $value = $value || false);
        
        if (this.$$item.button && this.$isjqmButton) {
            this.$$item[$value ? "addClass" : "removeClass"]("ui-disabled").attr("aria-disabled", $value);
        }
    }
});
