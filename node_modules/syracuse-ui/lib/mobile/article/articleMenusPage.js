<<<<<<< HEAD
"use strict";
var helpers = require('syracuse-core/lib/helpers');
var localize = require('syracuse-ui/lib/mobile/localize');
var MobilePopup = require("syracuse-ui/lib/mobile/site/popup").MobilePopup;

function ArticleMenusPage(){
}

exports.ArticleMenusPage = helpers.defineClass(ArticleMenusPage, MobilePopup, {
    _initialize: function(){
        var self = this;
        
        // page
        self.$$item = $("<div>").attr("data-role", "page").attr("data-theme", document.site.$item.$layoutOptions.dialogbox.theme.$page).appendTo(document.site.$$container);
        
        // header
        self.$$header = $("<div>").attr("data-role", "header").attr("data-theme", document.site.$item.$layoutOptions.dialogbox.theme.$header).appendTo(self.$$item);
        $("<h1/>").appendTo(self.$$header).text(localize.page.articleMenusPageTitle);
        
        // handling dialog close
        self.$$header.delegate("a", "click", function(){
            return self.close();
        });
        
        // core
        //self.$$core = $('<div/>').attr("data-role", "content").appendTo(self.$$menusPage);
        self.$$core = $('<div/>').appendTo(self.$$item);
        
        // boolean
        self.menusPageInitialized = true;
    },
    show: function($item, boxParent){
        var self = this;
        
        // initialize if necessary
        if (!self.menusPageInitialized) {
            self._initialize();
        }
        
        // appending article menus
        self._appendMenus($item, boxParent);
        
        // show dialog menus page
        $.mobile.changePage(self.$$item, {
            transition: "none",
            role: "dialog",
            changeHash: false,
            reverse: false
        });
        
        // hack to avoid JQM close behaviour
        self.$$item.data("dialog").close = function(){
        }
        
		// register popup in registered popups stack
        MobilePopup.prototype.init.call(this, self);
    },
    _appendMenus: function($item, boxParent){
        var self = this;
        self.menus = document.itemFactory.load(self.$$core, $item, boxParent);
    },
    dispose: function(){
        var self = this;
        self.$$header.undelegate();
        document.controller.disposeObject(self.menus);
        delete self.menus;
        //TODO REMOVE FROM THE DOM
        self.$$item.empty();
        self.menusPageInitialized = false;
    }
});
=======
"use strict";
var helpers = require('syracuse-core/lib/helpers');
var localize = require('syracuse-ui/lib/mobile/localize');
var MobilePopup = require("syracuse-ui/lib/mobile/site/popup").MobilePopup;

function ArticleMenusPage(){
}

exports.ArticleMenusPage = helpers.defineClass(ArticleMenusPage, MobilePopup, {
    _initialize: function(){
        var self = this;
        
        // page
        self.$$item = $("<div>").attr("data-role", "page").attr("data-theme", document.site.$item.$layoutOptions.dialogbox.theme.$page).appendTo(document.site.$$container);
        
        // header
        self.$$header = $("<div>").attr("data-role", "header").attr("data-theme", document.site.$item.$layoutOptions.dialogbox.theme.$header).appendTo(self.$$item);
        $("<h1/>").appendTo(self.$$header).text(localize.page.articleMenusPageTitle);
        
        // handling dialog close
        self.$$header.delegate("a", "click", function(){
            return self.close();
        });
        
        // core
        //self.$$core = $('<div/>').attr("data-role", "content").appendTo(self.$$menusPage);
        self.$$core = $('<div/>').appendTo(self.$$item);
        
        // boolean
        self.menusPageInitialized = true;
        
        // set transparent background
        self._setBackground();
    },
    show: function($item, boxParent){
        var self = this;
        
        // initialize if necessary
        if (!self.menusPageInitialized) {
            self._initialize();
        }
        
        // appending article menus
        self._appendMenus($item, boxParent);
        
        // show dialog menus page
        $.mobile.changePage(self.$$item, {
            transition: "none",
            role: "dialog",
            changeHash: false,
            reverse: false
        });
        
        // hack to avoid JQM close behaviour
        self.$$item.data("dialog").close = function(){
        }
		
		MobilePopup.prototype.init.call(this,self);
    },
    _appendMenus: function($item, boxParent){
        var self = this;
        self.menus = document.itemFactory.load(self.$$core, $item, boxParent);
    },
    _setBackground: function(){
        //TO IMPROVE ? REMOVE ?
        // -- hack for transparent dialog background --
        /*
         $('div[data-role="dialog"]').live('pagebeforeshow', function(e, ui){
         ui.prevPage.addClass("ui-dialog-background ");
         });
         
         $('div[data-role="dialog"]').live('pagehide', function(e, ui){
         $(".ui-dialog-background ").removeClass("ui-dialog-background ");
         });
         */
        // ---------------------------------------------
    },
    dispose: function(){
        var self = this;
        self.$$header.undelegate();
        document.controller.disposeObject(self.menus);
        delete self.menus;
        // SOMETHING TO DO TO REMOVE FROM THE DOM
        self.$$item.empty();
        self.menusPageInitialized = false;
    }
});
>>>>>>> adea11d689ce135462fa87fc4b3c3fccedf5a424
