"use strict";
var helpers = require("syracuse-core/lib/helpers")
var Article = require("syracuse-ui/lib/common/article/article").Article;

function MobileSimpleFieldsTest(){
}

exports.SimpleFieldsTest = helpers.defineClass(MobileSimpleFieldsTest, Article, {

    _initializeBox: function(){
        var self = this;
        self.$prototype = {
            "$": {
                "application/x-string": {
                    $title: "x-string",
                    $type: "application/x-string",
                    $constraints: {
                        $maxLength: 30
                    },
                    $capabilities: "sort,filter,alphaTab"
                },
                "application/x-choice": {
                    $title: "application/x-choice",
                    $type: "application/x-choice",
                    $value: {
                        $type: "application/x-integer",
                        $constraints: {
                            $enum: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(function(value){
                                return {
                                    "$value": value,
                                    $title: "Value " + value
                                };
                            })
                        }
                    }
                },
                "application/x-date": {
                    $title: "x-date",
                    $type: "application/x-date"
                },
                "application/x-time": {
                    $title: "x-time",
                    $type: "application/x-time"
                },
                "application/x-datetime": {
                    $title: "x-datetime",
                    $type: "application/x-datetime"
                },
                "application/x-boolean": {
                    $title: "application/x-boolean",
                    $type: "application/x-boolean"
                },
                "$email": {
                    $title: "$format: $email",
                    $type: "application/x-string",
                    $format: "$email"
                
                },
                "$phone": {
                    $title: "$format: $phone",
                    $type: "application/x-string",
                    $format: "$phone"
                },
                "application/x-integer": {
                    $title: "application/x-integer",
                    $type: "application/x-integer",
                    $constraints: {
                        "$isNullable": true
                    },
                    "$capabilities": "sort,filter"
                },
                "application/x-decimal": {
                    $title: "application/x-decimal",
                    $type: "application/x-decimal",
                    $constraints: {
                        "$isNullable": true
                    }
                }
            },
            "application/x-string": "ceci est du texte",
            "$phone": "01.41.66.21.21",
            "$email": "toto@sage.com",
            "application/x-integer": 200,
            "application/x-decimal": 2987111111111.4548,
            "application/x-boolean": true,
            "application/x-date": "2011-06-07",
            "application/x-time": "12:00:00",
            "application/x-datetime": "2012-03-16T12:40:50.957Z",
            "application/x-choice": 2,
            $actions: {
                $startMacro: {
                    $title: "Start"
                }
            },
        };
        var $title = self.$item.$isEditMode ? "$isEditMode: true" : "$isEditMode: false";
        $title = "Fields " + $title;
        self.$item = {
            $skin: "s-portlet",
            $layout: {
                $items: [{
                    $category: "section",
                    $title: $title,
                    $layout: {
                        $items: self._makeBlock(self.$item.$isEditMode)
                    }
                }]
            }
        };
        Article.prototype._initializeBox.call(self);
    },
    _makeBlock: function($isEditMode){
        return [this._makeEditReadBlock("application/x-string", [{
            $bind: "application/x-string"
        }, {
            $bind: "$phone"
        }, {
            $bind: "$email"
        }], $isEditMode), this._makeEditReadBlock("Time", [{
            $bind: "application/x-date"
        }, {
            $bind: "application/x-time"
        }, {
            $bind: "application/x-datetime"
        }], $isEditMode), this._makeEditReadBlock("Numeric", [{
            $bind: "application/x-integer"
        }, {
            $bind: "application/x-decimal"
        }], $isEditMode), this._makeEditReadBlock("application/x-boolean", [{
            $bind: "application/x-boolean"
        }]), this._makeEditReadBlock("application/x-choice", [{
            $title: "default >4 combo",
            $bind: "application/x-choice"
        }, {
            $title: "$format:$combo",
            $bind: "application/x-choice",
            $format: "$combo"
        }, {
            $title: "$format:$radios",
            $bind: "application/x-choice",
            $format: "$radios"
        }], $isEditMode)];
    },
    _makeEditReadBlock: function($title, $items, $isEditMode){
        return {
            $category: "block",
            $title: $title,
            $layout: {
                $items: $items.map(function($item){
                    var newItem = {
                        $isEditMode: $isEditMode
                    };
                    Object.keys($item).forEach(function($prop){
                        newItem[$prop] = $item[$prop];
                    });
                    return newItem;
                })
            
            }
        };
    },
    loadBox: function(){
        var self = this;
        Article.prototype.loadBox.call(self);
        
    }
});
