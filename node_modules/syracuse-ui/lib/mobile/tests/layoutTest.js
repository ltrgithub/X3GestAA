"use strict";
var helpers = require("syracuse-core/lib/helpers")
var Article = require("syracuse-ui/lib/common/article/article").Article;

function LayoutTest(){
}

exports.LayoutTest = helpers.defineClass(LayoutTest, Article, {
    loadBox: function(){
        var self = this;
        self.$prototype = {
            "$properties": {
                $field$isHidden: {
                    $type: "application/x-boolean",
                    $title: "$isHidden",
                    $isMetaData: true
                },
                $field$isTitleHidden: {
                    $type: "application/x-boolean",
                    $title: "$isTitleHidden",
                    $isMetaData: true
                },
                $field$isBoxCollapsable: {
                    $type: "application/x-boolean",
                    $title: "$isBoxCollapsable",
                    $isMetaData: true
                },
                $field$isMaximizable: {
                    $type: "application/x-boolean",
                    $title: "$isMaximizable ",
                    $isMetaData: true
                }
            },
            $actions: {
                $startMacro: {
                    $title: "Start"
                }
            },
        };
        self.$item = {
            $skin: "s-vignette",
            $layout: {
                $items: [{
                    $layout: {
                        $items: [self._makeLevel("Page", "page"), self._makeLevel("Dashboard", "dashboard"), self._makeLevel("Vignette", "vignette")]
                    }
                }]
            }
        };
        Article.prototype.loadBox.call(self);
    },
    _makeLevelPart: function($title, $skin, $layoutType){
        var section = {
            $category: "section",
            $test: true,
            $skin: "s-" + $skin + "-section",
            $title: "Section " + $title,
            $layout: {
                $layoutType: $layoutType || "stack",
                $items: [{
                    $category: "block",
                    $test: true,
                    $skin: "s-" + $skin + "-block",
                    $title: "Block " + $title,
                    $layout: {
                        $items: []
                    }
                }, {
                    $category: "block",
                    $test: true,
                    $skin: "s-" + $skin + "-block",
                    $title: "Block " + $title,
                    $layout: {
                        $items: []
                    }
                }]
            }
        };
        if ($layoutType == "columns") {
            var oldLayout = section.$layout;
            section.$layout = {
                $layoutType: "columns",
                $layoutSubType: "50,50",
                $items: [{
                    $layoutType: "stack",
                    $items: [oldLayout.$items[0]]
                }, {
                    $layoutType: "stack",
                    $items: [oldLayout.$items[1]]
                }]
            };
        }
        return section
    },
    _makeLevel: function($title, $skin){
        return {
            $layout: {
                $items: [{
                    $layoutType: "stack",
                    $items: [this._makeLevelPart($title, $skin), this._makeLevelPart($title, $skin)]
                }, {
                    $layoutType: "stack",
                    $items: [this._makeLevelPart($title, $skin, "columns"), this._makeLevelPart($title, $skin, "tabs")]
                }, {
                    $layoutType: "tabs",
                    $items: [this._makeLevelPart($title, $skin, "tabs"), this._makeLevelPart($title, $skin)]
                }]
            }
        };
    },
    _makeLevelTab: function($title, $items){
        return {
            $layoutType: "tabs",
            $items: [this._makeLevelPart(), this._makeLevelPart()]
        };
    }
});
