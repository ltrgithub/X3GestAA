"use strict";
var helpers = require('syracuse-core/lib/helpers');
var localize = require('syracuse-ui/lib/mobile/localize');
var MobilePopup = require("syracuse-ui/lib/mobile/site/popup").MobilePopup;
function MobileDiagnoseViewer(){
}

exports.MobileDiagnoseViewer = helpers.defineClass(MobileDiagnoseViewer, MobilePopup, {
    _emptyViewer: function(){
        // TODO ! remove links
        var self = this;
        if (self.$$viewer) 
            self.$$viewer.empty();
        //this.$$body.empty();
    },
    _emptyBody: function(){
        var self = this;
        self._severities.forEach(function(severity){
            self.details[severity].$$group.empty();
        });
        if (this.links) {
            this.links.getArticle().removeItem(this.links, true);
            delete this.links;
        }
    },
    _showAll: function(){
        var self = this;
        self._severities.forEach(function(severity){
            self.details[severity].$$group.appendTo(self.$$viewer);
        });
    },
    appenToPage: function(){
        this.page = document.site;
        this.$$item = $("<div id='s-diagnose-viewer-core' data-role='page' data-overlay-theme='b'/>").attr("data-theme", document.site.$item.$layoutOptions.dialogbox.theme.$page).appendTo(document.site.$$container);
    },
    _appendLinks: function($links){
        if (!this.links) {
            this.links = document.itemFactory.load(this.$$body, {
                $category: "links",
                $format: "button",
                $skin: "s-diag-view-links",
                $isBindDisabled: true,
                $links: $links
            }, this.page);
        }
    },
    _refreshViewer: function(){
        var total = 0;
        var countSeverity = 0;
        var self = this;
        var localize = document.controller.localize.diagnoseManager;
        if (self.$$navbar) {
            self.$$navbar.remove();
        }
        self._emptyViewer();
        self.$$navbar = $("<div/>").attr("data-role", "navbar").attr("data-iconpos", "top").prependTo(self.$$body);
        self.$$navbarUl = $("<ul>").appendTo(self.$$navbar);
        self._severities.forEach(function(severity){
            var detail = self.details[severity];
            var count = detail.$$group.children().length;
            var $$count = $("<a>").attr("data-icon", document.site.$item.$icons.diagnoseFlag[severity]);
            if (count) {
                total += count;
                countSeverity++;
                detail.$$group.appendTo(self.$$viewer);
                var $$li = $("<li>").appendTo(self.$$navbarUl);
                $$count.text(count + " " + localize[severity]).appendTo($$li).bind("click", function(){
                    self._emptyViewer();
                    detail.$$group.appendTo(self.$$viewer);
                });
            }
            $$count.toggle(count > 0);
        });
        if (total) {
            if (countSeverity > 1) {
                var $$all = $("<a/>").attr("data-icon", "plus").addClass("ui-btn-active").text(total + " Diagnose(s)").appendTo($("<li>").appendTo(self.$$navbarUl));
                self._showAll();
                $$all.bind("click", function(){
                    self._emptyViewer();
                    self._showAll();
                });
            }
        }
        if (total > 0) {
            /*
             if (self.isTestMode) {
             self.$$item.attr("data-role", "collapsible");
             //[0].className = "ui-body ui-body-a";
             }
             */
            self.$$item.toggle(true);
            $.mobile.changePage(self.$$item, {
                transition: "pop",
                role: "dialog",
                changeHash: false,
                reverse: false
            });
            self.$$item.data("dialog").close = function(){
            
            };
            
            if (self.$isjqmDialog) {
                self.$$body.trigger('create');
            }
            self.$isjqmDialog = true;
            
            
        }
        
    },
    _initializeCore: function(){
        var self = this;
        
        if (!self.$$item) {
            self.appenToPage();
        }
        
        self.details = {};
        self._messagesMax = 2;
        self._severities = ["error", "warning", "info", "fatal"];
        
        // header
        self.$$header = $("<div data-role='header' class='s-diag-view-header'/>").attr("data-theme", document.site.$item.$layoutOptions.dialogbox.theme.$header).appendTo(self.$$item);//.hide();
        $("<h1/>").appendTo(self.$$header).text("");
        
        // handling dialog close
        self.$$header.delegate("a", "click", function(){
            return self.close();
        });
        
        // body
        self.$$body = $("<div/>").attr("data-role", "content").attr("data-theme", document.site.$item.$layoutOptions.dialogbox.theme.$content).addClass("s-diag-view-msg-list").appendTo(self.$$item);
        
        // messages viewer
        self.$$viewer = $("<div/>").appendTo(self.$$body);
        
        // footer
        //self.$$footer = $("<div/>").attr("data-role", "footer").attr("data-theme", document.site.$item.$layoutOptions.dialogbox.theme.$footer).appendTo(self.$$item);
        
        // set transparent background
        //self._setBackground();
        
        self._severities.forEach(function(severity){
            self.details[severity] = {
                $$group: $("<div id='s-diag-view-msg-" + severity + "'/>")
            };
        });
        
        self.$$item.delegate("a.s-diag-view-msg", "click", function(){
            var field = document.controller.findItem($(this));
            if (field) {
                field.focus();
            }
            return false;
        });
        
    },
    showDiagnoses: function(message){
        var self = this;
        if (!self.$$header) {
            self._initializeCore();
        }
        
        if (!message || (!message.field && !message.$diagnoses)) {
            self._emptyViewer();
        }
        var field = message.field;
        if (field) {
            field.$$diagnose = (field.$$diagnose || $("<div class='s-field-diagnose'/>").appendTo(field.$$item)).empty();
        }
        if (message.$diagnoses && message.$diagnoses.length > 0) {
            var severities = {};
            message.$diagnoses.forEach(function(diagnose){
                var severity = diagnose.severity || "error";
                var message = diagnose.message.replace(/\n/g, "<BR/>");
                var $$msg;
                if (field) {
                    $$msg = $("<a/>").attr("data-s-menu", field.id).attr("data-s-article", field.boxParent.getArticle().id);
                    field.$$diagnose.append($("<label class='s-field-diagnose-msg'/>").addClass("s-" + severity).append(message));
                    message = field.$field.$title + ": " + message;
                }
                else {
                    $$msg = $("<label/>");
                }
                severities[severity] = true;
                $$msg.addClass("s-diag-view-msg").addClass("s-" + severity).append(message).appendTo(self.details[severity].$$group);
            });
            if (field) {
                field.toggleDiagnose("s-" +
                self._severities.filter(function(severity){
                    return severities[severity];
                })[0], true);
            }
        }
        else {
            self._severities.forEach(function(severity){
                var $$group = self.details[severity].$$group;
                if (field) {
                    $$group.children("[data-s-menu=" + field.id + "]").remove();
                }
                else {
                    $$group.empty();
                }
            });
        };
        if (message.$links) {
            self._appendLinks(message.$links);
        }
        self._refreshViewer();
        if (message.autoHide) {
            setTimeout(function(){
                self._emptyViewer();
            }, 4000);
        }
        
        MobilePopup.prototype.init.call(this, self);
    },
    _setBackground: function(){
        //TO IMPROVE ? REMOVE ?
        /*
         // -- hack for transparent dialog background --
         $('div[data-role="dialog"]').live('pagebeforeshow', function(e, ui){
         ui.prevPage.addClass("ui-dialog-background ");
         });
         
         $('div[data-role="dialog"]').live('pagehide', function(e, ui){
         $(".ui-dialog-background ").removeClass("ui-dialog-background ");
         });
         */
        // ---------------------------------------------
    },
    close: function(){
        var self = this;
        self._emptyBody();
        self.$$item.hide();
        return MobilePopup.prototype.close.call(this);
        //
    },
    dispose: function(){
        var details = this.details;
        if (details) {
            this._severities.forEach(function(severity){
                var detail = details[severity];
                detail.$$count = detail.$$group = null;
            });
        }
        if (this.$$header) {
            this.$$header.undelegate();
        }
        if (this.$$item) {
            this.$$item.undelegate();
        }
        delete this.page;
    }
});
