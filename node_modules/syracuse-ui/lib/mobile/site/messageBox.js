"use strict";
var helpers = require('syracuse-core/lib/helpers');


var _localize = {
    msgboxok: "Ok",
    msgboxyes: "Yes",
    msgboxno: "No",
    msgboxcancel: "Cancel"
};
function MessageBox(){
}

exports.MessageBox = helpers.defineClass(MessageBox, null, {
    open: function(options){
        var self = this;
        self.$$btns = {};
        var id = document.controller.generateUUID();
        var $theme = document.site.$item.$themes.$messagebox;
        
        self.$$item = $("<div/>").attr("data-role", "page").attr("data-overlay-theme", $theme.$overlay).attr("id", id);
        self.$$item.appendTo(document.site.$$container);
        
        self.$$header = $("<div/>").attr("data-role", "header").attr("data-theme", $theme.$header).appendTo(self.$$item);
        $("<h1/>").appendTo(self.$$header).text(options.$title);
        self.$$header.delegate("a", "click", function(){
            self.close();
            return false;
        });
        
        var $$body = $("<div/>").attr("data-role", "content").attr("data-theme", $theme.$content).appendTo(self.$$item);
        $("<h2>").addClass("s-msgbox-body").addClass("s-msgbox-msg-" + options.$type).appendTo($$body).text(options.$message);
        
        // button(s)
        self.$$btnSlot = $("<div/>").appendTo($$body);
        
        var $buttons = options.$buttons;
        if (options.$type == "question") {
            $buttons = $buttons || "yesno";
        }
        if (options.$type == "prompt") {
            $buttons = $buttons || "okcancel";
            self.$$prompt = $("<input type='text'/>").addClass("s-msgbox-prompt").attr("size", "50").insertBefore(self.$$btnSlot);
        }
        
        $buttons = $buttons || "ok";
        ["yes", "no", "ok", "cancel"].forEach(function($id){
            if ($buttons.indexOf($id) >= 0) {
                self.appendBtn({
                    $id: $id,
                    $icon: {
                        "ok": "check",
                        "yes": "check",
                        "no": "delete",
                        "cancel": "delete",
                    }[$id],
                    $text: _localize["msgbox" + $id]
                });
            }
        });
        
        self.$$defaultBtn = this.$$btns[options.$default || "ok"];
        if (!self.$$defaultBtn) {
            self.$$defaultBtn = this.$$btns[Object.keys(this.$$btns)[0]];
        }
        self.$$defaultBtn.addClass("s-msgbox-button-default");
        
        self.$$btnSlot.delegate("a.s-msgbox-button", "click", function(){
            var response = {
                $$button: $(this),
                $id: $(this).attr("data-s-id")
            };
            if (self.$$prompt) {
                response.prompt = self.$$prompt.val();
            }
            if (options.callback ? (options.callback(response) !== false) : true) {
                self.close();
            }
            return false;
        });
        
        // handling $autoClose option
        if (options.$autoClose) {
            var count = (typeof(options.$autoClose) == "number" ? options.$autoClose : 4000) / 1000;
			var div = document.createElement("div");
            div = document.createElement("div");
            div.className = "s-msgbox-header-timer";
            var $$timer = $(div).prependTo(self.$$header).text("( " + count + " )")
            self.autoCloseTimeOut = setInterval(function(){
                $$timer.text("( " + (--count) + " )")
                if (count == 0) {
                    clearInterval(self.autoCloseTimeOut);
                    self.close();
                }
            }, 1000);
        }
        
        if (options.$$container) {
            options.$$container.append(self.$$item);
        }
        else {
            $.mobile.changePage(self.$$item, {
                transition: "pop",
                role: "dialog",
                changeHash: false
            });
            self.$$item.data("dialog").close = function(){
            
            };
        }
    },
    appendBtn: function($btn){
        var btn = document.createElement("a");
        btn.className = "s-msgbox-button";
        btn.setAttribute("data-role", "button");
        btn.setAttribute("data-icon", $btn.$icon);
        btn.setAttribute("data-s-id", $btn.$id);
        this.$$btns[$btn.$id] = $(btn).text($btn.$text).appendTo(this.$$btnSlot);
    },
    close: function(){
        $.mobile.changePage(document.site.mainPage.$$item, {
            transition: "none",
            changeHash: false
        });
        this.$$item.hide();
    },
    dispose: function(){
        if (this.autoCloseTimeOut) {
            clearInterval(this.autoCloseTimeOut);
            delete this.autoCloseTimeOut;
        }
        if (this.$$header) {
            this.$$header.undelegate();
        }
        if (this.$$btnSlot) {
            this.$$btnSlot.undelegate();
        }
    }
});
