"use strict";
var helpers = require('syracuse-core/lib/helpers');
var PageDesigner = require("syracuse-ui/lib/authoring/pageDesigner").Designer;
var _gridCardBuilder = require('syracuse-ui/lib/field/array/gridMode/gridCardBuilder');

exports.CardDesigner = helpers.defineClass(function() {}, PageDesigner, {
	drawBox: function() {
		this.noPageStorage = true;
		PageDesigner.prototype.drawBox.call(this);
		syra_menus.button.add({
			parent: this,
			slot: syra_dom.addDiv("s-aw-page-wc", this.layoutSlot),
			text: syra_local.aw_close,
			iconOnly: true,
			fontIcon: "close",
			css: "s-aw-page-close",
			btnclick: function() {
				var self = this.parent;
				setTimeout(function() {
					self.closeDesigner();
				}, 100);
			}
		});
		syra_dom.removeChild(this.viewsSlot);
		this.viewsSlot = null;
		this.cardTitle = syra_dom.addDiv("s-aw-carddesigner-title");
		var title = this.designedArticle.list.getTitle() || "";
		if (title.length) {
			title += " - ";
		}
		title += this.designedArticle.list.$item.$format == "grid" ? syra_local.aw_card_detail_title : syra_local.aw_card_card_title;
		this.cardTitle.textContent = title;
		this.leftTop.className += " s-aw-carddesigner-left-top";
		this.layoutSlot.insertBefore(this.cardTitle, this.leftTop.nextSibling);
		this._togleOverLaySlots(true);
	},
	reloadDesignedLayout: function($item) {
		var record = this.designedArticle;
		var builder = record.list.builder;
		builder.isRowCardMode && _gridCardBuilder.removeRecordCards(builder);

		var prevLayout = record.layoutContent && record.layoutContent.domItem;
		var fields = record.layoutContent.getFields();
		if (fields && fields.length) {
			record.reloadingFields = {};
			for (var ii = 0, jj = fields.length; ii < jj; ii++) {
				var field = fields[ii];
				var $key = field && field.$item && (field.$item.$bind || field.$item.$fieldId);
				if ($key) {
					record.reloadingFields[$key] = field;
				}
			}
		}
		syra_layoutUpdater.extractItems(record.layoutContent, fields);
		syra_layoutUpdater.clearContent(record.layoutContent);
		record.$item = $item;
		record.ensureLayoutMode();
		record.renderLayoutContent();
		record.reloadingFields = null;

		syra_menus.menus.applyChange(record, record.$prototype);
		syra_menus.menus.applyChange(record, record.dataset);
		if (prevLayout) {
			syra_dom.removeChild(prevLayout);
		}
		syra_site.validateLayoutContent(record);
	},
	_togleOverLaySlots: function(show) {
		var ids = ["left", "top", "right", "bottom"];
		if (show) {
			this.overlays = {};
			for (var ii = 0, jj = ids.length; ii < jj; ii++) {
				var overlay = this.overlays[ids[ii]] = document.createElement("div");
				overlay.syraIsOverlay = true;
				overlay.className = "s-aw-carddesigner-overlay";
				this.designedArticle.page.scrollview.appendChild(overlay);
			}
		} else {
			if (this.overlays) {
				for (var ii = 0, kk = ids.length; ii < kk; ii++) {
					syra_dom.removeChild(this.overlays[ids[ii]]);
				}
				this.overlays = null;
			}
		}
	},
	endArticleUpdate: function(selectedItem, isStructureUpdated) {
		PageDesigner.prototype.endArticleUpdate.call(this, selectedItem, isStructureUpdated);
		this.designedArticle && syra_site.validateLayoutContent(this.designedArticle);
		this.resizeArticle();
	},
	resizeArticle: function(resize) {
		PageDesigner.prototype.resizeArticle.call(this, resize);
		if (this.overlays && this.designedArticle.domItem) {
			var rectHeader = this.designedArticle.page.header.getBoundingClientRect();
			var rect = this.designedArticle.page.body.getBoundingClientRect();
			var rectCard = this.designedArticle.domItem.getBoundingClientRect();

			var top = rectHeader.height + (rectCard.top - rect.top);
			this.overlays.left.style.top = top + "px";
			this.overlays.left.style.left = 0;
			this.overlays.left.style.width = (rectCard.left - rect.left) + "px";
			this.overlays.left.style.height = rectCard.height + "px";

			this.overlays.right.style.top = top + "px";
			this.overlays.right.style.right = 0;
			this.overlays.right.style.width = (rect.right - rectCard.right) + "px";
			this.overlays.right.style.height = rectCard.height + "px";

			this.overlays.top.style.top = 0;
			this.overlays.top.style.left = 0;
			this.overlays.top.style.width = rect.width + "px";
			this.overlays.top.style.height = top + "px";

			this.overlays.bottom.style.top = (top + rectCard.height) + "px";
			this.overlays.bottom.style.left = 0;
			this.overlays.bottom.style.width = rect.width + "px";
			this.overlays.bottom.style.height = (rect.bottom - rectCard.bottom) + "px";
		}
	},
	openDesigner: function(cardItem) {
		if (cardItem) {
			cardItem.list.designer.cardDesigner = cardItem.designer = this;
			cardItem.$designLevel = "article";
			PageDesigner.prototype.openDesigner.call(this, cardItem);
		}
	},
	closeDesigner: function() {
		if (this.history.isUpdated) {
			this.designedArticle.list.designer.endArticleUpdate();
		}
		this.dispose();
		syra_site.resizeArticle();
	},
	dispose: function() {
		var cardItem = this.designedArticle;
		this._togleOverLaySlots(false);
		PageDesigner.prototype.dispose.call(this);
		if (cardItem) {
			if (cardItem.list && cardItem.list.designer) {
				cardItem.list.designer.cardDesigner = null;
			}
			cardItem.designer = null;
		}
	}
});