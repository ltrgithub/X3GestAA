"use strict";
var helpers = require('syracuse-core/lib/helpers');
var Designer = require("syracuse-ui/lib/authoring/designer").Designer;
var UISwitchTool = require("syracuse-ui/lib/authoring/tools/uiSwitchTool").UISwitchTool;
var ItemTool = require("syracuse-ui/lib/authoring/tools/itemTool").ItemTool;

function LandingPageDesigner() {}

exports.LandingPageDesigner = helpers.defineClass(LandingPageDesigner, Designer, {
	loadBox: function() {
		this.$prototype = {
			$properties: {
				editTab: {
					$type: "application/x-string",
					$title: "Tab Title"
				}
			}
		};
		Designer.prototype.loadBox.call(this);
	},
	drawBox: function() {
		this.layoutSlot = this.domItem = document.createElement("aside");
		this.layoutSlot.className = "s-aw-lp-designer";
		this.designedItem = this.designedArticle;
		this.designedArticle.header.appendChild(this.layoutSlot);
		this.isVisible = false;
		this.toggleDesigner(false);
		this.$$item = $(this.layoutSlot);
		this.addClosePicker(this.layoutSlot);

		this.body = document.createElement("div");
		this.body.className = "s-aw-lp-designer-body";
		this.layoutSlot.appendChild(this.body);
		(this.itemTool = new ItemTool()).load(this);

		this.loadHistoryTool();

		this.sectionModel = {
			body: this.body
		};
		(this.uiSwitchTool = new UISwitchTool()).load(this);

		this.loadTemplateTools();

		var div = document.createElement("div");
		div.className = "s-aw-lp-designer-tab-edit";
		this.body.appendChild(div);
		this.editTitleField = this.page.loadNewItem(div, {
			$bind: "editTab",
			$category: "field",
			$css: "s-aw-prop",
			$contentEditable: true,
			$isTitleHidden: true,
			$isTopLabelAlignment: false,
			$isEditMode: true
		});

		this.excludeMeLink = document.createElement("a");
		this.excludeMeLink.className = "s-aw-exclude-me";
		this.excludeMeLink.textContent = this.excludeMeLink.title = this.localize.aw_excludeMe;
		this.excludeMeLink.setAttribute("data-s-picker", "$excludeMe");
		var div = document.createElement("div");
		div.className = "s-aw-lp-designer-tab-delete";
		div.appendChild(this.excludeMeLink);
		this.body.appendChild(div);


		this.toggleUIDesign(this.designedArticle, true);

		document.site.resize();
	},
	onEndHistoryChangeStep: function(itemToSelect) {
		this.toggleUIDesign(this.designedArticle, true);
	},
	endArticleUpdate: function(selectedItem, isStructureUpdated, saveUpdate) {
		this.designedArticle.ensurePageVisibility();
		this.designedArticle.validateLayout();
		this.toggleUIDesign(this.designedArticle, true);
		this.historyTool.notifyUpdate();
		if (saveUpdate !== false) {
			this.saveArticleUpdate();
		}
	},
	saveArticleUpdate: function() {
		this.designedArticle.landingPageMaster.saveDesignUpdate(this.designedArticle);
	},
	onClickPicker: function(picker) {
		if (!Designer.prototype.onClickPicker.call(this, picker)) {
			return false;
		}
		if (this.uiSwitchTool && this.uiSwitchTool.onClickPicker(picker)) {
			return false;
		}
		return true;
	},
	onTabClik: function(tabOpened) {
		if (this.isVisible) {
			this.templatesTool.addLandingPageModels(this.sectionModel, tabOpened || this.designedItem.layoutContent.tabOpened);
		}
	},
	selectItem: function() {

	},
	closeDesigner: function() {
		this.toggleDesigner(false);
	},
	toggleDesigner: function(show) {
		this.isVisible = show === undefined ? !this.isVisible : show;
		document.site.disableItem(this.designedArticle.designPicker, this.isVisible);
		this.layoutSlot.style.display = this.isVisible ? "" : "none";
		this.onTabClik();
		document.site.resize();
	},
	onTemplateChoiceClick: function(picker, designedItem, awLayout) {
		designedItem = designedItem.layoutContent.tabOpened;
		if (picker.syraFieldsCount) {
			var funcName;
			var templates = this.templatesTool.countTemplates[picker.syraFieldsCount];
			if (templates) {
				funcName = picker.syraFieldsCount;
			} else {
				templates = this.templatesTool.defaultTemplates;
				funcName = picker.syraTemplate;
			}
			var fields = designedItem.layoutContent.getFields();
			designedItem.layoutContent.extractItems(fields);
			this.templatesTool["build_" + funcName](designedItem, picker.syraTemplate, fields);
			return designedItem;
		}
		return null;
	},
	dispose: function() {
		if (this.itemTool) {
			this.itemTool.dispose();
		}
		if (this.domItem) {
			document.site.removeDomChild(this.domItem);
		}
		this.itemTool = this.sectionModel = this._ddTabEnter = null;
		Designer.prototype.dispose.call(this);
	}
});