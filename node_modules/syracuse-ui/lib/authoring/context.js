"use strict";
var helpers = require('syracuse-core/lib/helpers');
var Palette = require("syracuse-ui/lib/authoring/palette/palette").Palette;
var drawHelper = require("./drawHelper");

function Context(){
}

exports.Context = helpers.defineClass(Context, null, {
    create: function(authorPage, awArticle, options){
        var $prototype = awArticle.$prototype.$item ? awArticle.$prototype.$item : awArticle.$prototype;
        this.parentContext = authorPage.awContext;
        this.$prototype = $prototype;
        this.drawHelper = drawHelper;
        this.authorPage = authorPage;
        this.localize = authorPage.localize;
        this.awArticle = awArticle;
        this.targetPage = authorPage.contextStack.length > 0 ? authorPage.contextStack[0].awArticle : awArticle;
        this.$sourceItem = helpers.object.clone(awArticle.$item, true);
        this.paletteSlot = authorPage.paletteSlot;
        authorPage.awContext = this;
        if (options) {
            var keys = Object.keys(options);
            for (var ii = 0, jj = keys.length; ii < jj; ii++) {
                this[keys[ii]] = options[keys[ii]];
            }
        }
        awArticle.isOnAuthoring = true;
        this.scrollview = awArticle.scrollview || this.targetPage.scrollview;
        this.dialogWrapper = this.targetPage.dialogWrapper;
        authorPage.contextStack.push(this);
        
        if (awArticle.dialogWrapper) {
            authorPage._toggleAuthoringDialog(awArticle.dialogWrapper, true);
        }
        authorPage.toggleItemAuthoring(awArticle, true);
        this.palette = new Palette();
        this.palette.loadBox(this);
        this.palette.toggleContext(true);
    },
    dispose: function(onAuthorPageDispose){
        if (this.palette) {
            document.controller.disposeObject(this.palette);
        }
        if (this.authorPage) {
            if (!onAuthorPageDispose && this.authorPage) {
                this.authorPage.onContextDisposed(this);
            }
        }
        this.parentContext = this.$prototype = this.drawHelper = this.authorPage = this.localize = null;
        this.awArticle = this.targetPage = this.$sourceItem = this.paletteSlot = null;
        this.scrollview = this.palette = this.awItem = this.awLayout = null;
        
    }
});
