"use strict";
var helpers = require('syracuse-core/lib/helpers');
var Article = require("syracuse-ui/lib/article/article").Article;
//var ListAuthoring = require("syracuse-ui/lib/authoring/field/array/listAuthoring").ListAuthoring;

function QuickDesigner(){

}

exports.QuickDesigner = helpers.defineClass(QuickDesigner, null, {
    appendOpener: function(designedField, $$opener){
        var self = this;
        self.designedField = designedField;
        if (!$$opener) {
            self.isQuickDesigner = true;
            self._opener = document.createElement("a");
            self._opener.className = "s-list-quick-designer";
            self._opener.setAttribute("href", "#");
            self.designedField.$$opener = $(self._opener);
            var dom = document.createElement("div");
            dom.className = "s-list-quick-designer-cell";
            dom.appendChild(self._opener);
            $(dom).prependTo($(designedField._topbar));
        }
        else {
            self.designedField.$$opener = $$opener;
        }
        designedField.$$opener.bind("click", function(){
            document.site.onBeforClick();
            self.toggleQuick();
            
            return false;
        });
    },
    toggleQuick: function(){
        var self = this;
        if (!self.popup) {
        
            self.popup = self.designedField.boxParent.openDialog({
                $dialogMode: "popup",
                page: self.authoring,
                $$dialog: $(self.authoring.layoutSlot),
                onClose: function(){
                    if (self.authoring.onClose(this)) {
                        self.popup = null;
                        document.controller.disposeObject(self.authoring);
                        delete self.authoring;
                        return true;
                    }
                    return false;
                },
                onValidate: function(){
                    return self.authoring.onValidate(this);
                }
            });
        }
        else {
            if (self.popup) {
                self.popup.close();
            }
        }
    },
    dispose: function(){
        if (this.designedField) {
            if (this.designedField.$$opener) {
                this.designedField.$$opener.unbind();
                this.designedField.$$opener = null;
            }
            this.designedField = null;
        }
    }
});
