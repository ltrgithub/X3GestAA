"use strict";
var helpers = require('syracuse-core/lib/helpers');

function ChoiceFieldAddin() {}

exports.ChoiceFieldAddin = helpers.defineClass(ChoiceFieldAddin, null, {
	load: function(designer) {
		this.designer = designer;
		this.designer.$prototype.$properties.$choiceField$format = {
			$type: "application/x-choice",
			$title: syra_local.fchoice_formatTitle,
			$value: {
				$type: "application/x-string",
				$enum: [{
					$value: "$combo",
					$title: syra_local.fchoice_formatList
				}, {
					$value: "$radios",
					$title: syra_local.fchoice_formatRadios
				}]
			}
		};
		this.designer.$prototype.$properties.$choiceField$choiceLayout = {
			$type: "application/x-choice",
			$title: syra_local.fchoice_layout_title,
			$value: {
				$type: "application/x-string",

				$enum: [{
					$value: "row",
					$title: syra_local.fchoice_layout_1_row
				}, {
					$value: "1",
					$title: syra_local.fchoice_layout_1_col
				}, {
					$value: "2",
					$title: syra_local.fchoice_layout_2_col
				}, {
					$value: "3",
					$title: syra_local.fchoice_layout_3_col
				}, {
					$value: "4",
					$title: syra_local.fchoice_layout_4_col
				}]
			}
		};
	},
	getSection: function() {
		return {
			$category: "section",
			$authoringType: "choiceField",
			$authoringEditMode: true,
			$isTitleHidden: true,
			$layout: {
				$items: [{
					$bind: "$choiceField$format",
					$isEditMode: true,
					$css: "s-aw-prop",
					$choiceLayout: "1"
				}, {
					$bind: "$choiceField$choiceLayout",
					$format: "$combo",
					$isEditMode: true,
					$css: "s-aw-prop"
				}]
			}
		};
	},
	onShow: function() {
		if (this.designer.designedItem.$authoringType == "choiceField") {
			this.designer.applyChange({
				$choiceField$format: this.designer.designedItem.$item.$format,
				$choiceField$choiceLayout: this.designer.designedItem.$item.$choiceLayout
			});
		}
	},
	notifyDataChange: function(metaData) {
		if (this.designer.designedItem.$authoringType == "choiceField") {
			if (metaData.$choiceField$format != undefined || metaData.$choiceField$choiceLayout != undefined) {
				this.designer.designedItem.applyDesignMetaData({
					$format: metaData.$choiceField$format,
					$choiceLayout: metaData.$choiceField$choiceLayout
				}, true);
			}
		}
	},
	onDesignerApplyChange: function(newData) {

	},
	dispose: function() {
		this.designer = null;

	}
});