"use strict";

exports.load = function(designer) {
	designer.$prototype.$properties.$documentField$isEmbedded = {
		$type: "application/x-boolean",
		$title: syra_local.fdoc_isEmbedded
	};
	designer.$prototype.$properties.$documentField$imageWidth = {
		$type: "application/x-string",
		$title: syra_local.fdoc_width
	};
	designer.$prototype.$properties.$documentField$imageHeight = {
		$type: "application/x-string",
		$title: syra_local.fdoc_height
	};
	designer.$prototype.$properties.$documentField$isAutoSize = {
		$type: "application/x-boolean",
		$title: syra_local.fdoc_isAutoHeight
	};
};

exports.onShow = function(designer) {
	var designedItem = designer.designedItem;
	if (designedItem.$authoringType == "documentField") {
		designer.applyChange({
			$documentField$isAutoSize: designedItem.$item.$isAutoSize,
			$documentField$imageWidth: designedItem.$item.$imageWidth,
			$documentField$imageHeight: designedItem.$item.$imageHeight,
			$documentField$isEmbedded: designedItem.$item.$isEmbedded,
			$properties: {
				$documentField$isAutoSize: {
					isHidden: !designedItem.isImage
				},
				$documentField$isEmbedded: {
					isHidden: designedItem.isImage
				},
				$documentField$imageWidth: {
					isHidden: !designedItem.isImage
				},
				$documentField$imageHeight: {
					isHidden: !designedItem.isImage
				}
			}
		});
	}
};

exports.applyChange = function(designer, newData) {
	if (newData.$documentField$isAutoSize !== undefined) {
		designer.applyChange({
			$properties: {
				$documentField$imageHeight: {
					$isDisabled: newData.$documentField$isAutoSize
				}
			}
		}, true);
	}
};

exports.onFormUpdateDelta = function(designer, metaData) {
	if (designer.designedItem.$authoringType == "documentField") {
		if (metaData.$documentField$isAutoSize != undefined ||
			metaData.$documentField$isEmbedded != undefined ||
			metaData.$documentField$imageHeight != undefined ||
			metaData.$documentField$imageWidth != undefined) {
			designer.designedItem.applyDesignMeta({
				$isAutoSize: metaData.$documentField$isAutoSize,
				$imageWidth: metaData.$documentField$imageWidth,
				$imageHeight: metaData.$documentField$imageHeight,
				$isEmbedded: metaData.$documentField$isEmbedded
			}, true);
		}
	}
};

exports.addToSection = function(designer, section) {
	section.fields.push(designer.addItem(section.body, {
		$authoringType: "documentField",
		$bind: "$documentField$isAutoSize",
		$isEditMode: true,
		$isLeftSpaceHidden: true
	}, designer));
	section.fields.push(designer.addItem(section.body, {
		$authoringType: "documentField",
		$bind: "$documentField$isEmbedded",
		$isEditMode: true,
		$isLeftSpaceHidden: true
	}, designer));
	section.fields.push(designer.addItem(section.body, {
		$authoringType: "documentField",
		$bind: "$documentField$imageWidth",
		$isEditMode: true
	}, designer));
	section.fields.push(designer.addItem(section.body, {
		$authoringType: "documentField",
		$bind: "$documentField$imageHeight",
		$isEditMode: true
	}, designer));
};