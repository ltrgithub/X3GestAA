"use strict";
var helpers = require('syracuse-core/lib/helpers');
var DesktopPageDesigner = require("syracuse-ui/lib/authoring/desktopPage/desktopPageDesigner").DesktopPageDesigner;
var UISwitchTool = require("syracuse-ui/lib/authoring/tools/uiSwitchTool").UISwitchTool;

function LandingPageDesigner() {}

exports.LandingPageDesigner = helpers.defineClass(LandingPageDesigner, DesktopPageDesigner, {
	initializePageDesigner: function() {
		//important override default desktop page 
	},
	drawBox: function() {
		this.layoutSlot = document.createElement("aside");
		this.layoutSlot.className = "s-aw-page";
		this.awItem = this.awArticle;
		this.awArticle.header.appendChild(this.layoutSlot);
		this.isVisible = false;
		this.toggleDesigner(false);
		this.$$item = $(this.layoutSlot);
		this.sectionModel = {
			body: this.layoutSlot.appendChild(document.createElement("div"))
		};
		this.sectionModel.body.className = "s-aw-lp-model-slot";
		(this.uiSwitchTool = new UISwitchTool()).load(this);
		this.viewsTool = {
			dispose: function() {},
			ensureLayoutView: function() {},
			onClickPicker: function() {}
		}; //for compatibility
		this.loadDefaultTools();
		this.workinCopySlot.appendChild(this.historySlot);
		this.layoutSlot.appendChild(this.workinCopySlot);

		this.loadTemplateTools();
		document.site.ddManager.togglePageObserver(this, true);
		this.uiSwitchTool.toggleUIDesign(this.awArticle, true);
		this.bindEvents();
		document.site.resize();
	},
	onMenuClick: function(menuItem) {
		DesktopPageDesigner.prototype.onMenuClick.call(this, menuItem);
		return true;
	},
	onClickItem: function(item, target, article) {
		DesktopPageDesigner.prototype.onClickItem.call(this, item, target, article);
		return true;
	},
	onTabClik: function(tabOpened) {
		if (this.isVisible) {
			this.templatesTool.addLandingPageModels(this.sectionModel, tabOpened || this.awItem.layoutContent.tabOpened);
		}
	},
	selectItem: function() {

	},
	toggleDesigner: function(show) {
		this.isVisible = show === undefined ? !this.isVisible : show;
		document.site.toggleClass(this.awArticle.designerOpenerLink, "s-close", this.isVisible);
		this.layoutSlot.style.display = this.isVisible ? "" : "none";
		this.onTabClik();
		document.site.resize();
	},
	onTemplateChoiceClick: function(picker, awItem, awLayout) {
		awItem = awItem.layoutContent.tabOpened;
		if (picker.syraFieldsCount) {
			var funcName;
			var templates = this.templatesTool.countTemplates[picker.syraFieldsCount];
			if (templates) {
				funcName = picker.syraFieldsCount;
			} else {
				templates = this.templatesTool.defaultTemplates;
				funcName = picker.syraTemplate;
			}
			var fields = awItem.layoutContent.getFields();
			awItem.layoutContent.extractItems(fields);
			this.templatesTool["build_" + funcName](awItem, picker.syraTemplate, fields);
			return awItem;
		} else {
			if (picker.$syraColCount) {
				this.templatesTool.selectColChoice(this.sectionModel, awItem, picker.$syraColCount);
				return this.templatesTool.convertByColumns(picker, awItem, awLayout);
			}
		}
		return null;
	},
	dispose: function() {
		this.sectionModel = null;
		DesktopPageDesigner.prototype.dispose.call(this);
	}
});