"use strict";
var helpers = require('syracuse-core/lib/helpers');
var ItemTree = require("syracuse-ui/lib/authoring/tree/itemTree").ItemTree;

function InsertTree() {}

exports.InsertTree = helpers.defineClass(InsertTree, ItemTree, {
	fill: function() {
		this._clear();
		this.nodes = [];
		this.tabItem.body.syraAwTree = "insertTree";
		this._addInsertNewSectionBlockNode();
		this._addNode(this.toolbar.awPalette.awArticle.$item, {
			node: this.tabItem.body,
			isRoot: true
		});
		this.tabItem.body.style.display = "";
		this._bindEvents(true);
	},

	_addInsertNewSectionBlockNode: function($authoringLevel) {
		var itemNode = this._createNodeItem("node-" + this.nodes.length, "section");
		this.tabItem.body.appendChild(itemNode.node);
		itemNode.titleText.textContent = itemNode.node.title = document.site.authorPage.localize.aw_addSectionBlock;
		this.nodes.push(itemNode);
		itemNode.item = {
			$title: document.site.authorPage.localize.aw_addSectionBlock,
			$awAddNewItem: true,
			$authoringLevel: itemNode.$authoringLevel
		};
	},
	_addNode: function($item, parentNode) {
		var $prototype = this.toolbar.awPalette.awArticle.page.$prototype;
		var $items;
		if ($item.$category != "space") {
			if ($item.$items && !$item.$bind && !$item.$category) {
				$items = $item.$items;
			} else {
				this._setParentNode(parentNode);

				var $authoringLevel = parentNode.isRoot ? "article" : ($item.$bind ? "field" : parentNode.$authoringLevel == "section" ? "block" : "section");
				var itemNode = this._createNodeItem("node-" + this.nodes.length, $authoringLevel);
				parentNode.children.appendChild(itemNode.node);
				itemNode.$item = $item;
				this.nodes.push(itemNode);

				var $field = $item.$bind ? $prototype.$properties[$item.$bind] : null;
				var title;
				if (parentNode.isRoot) {
					title = "Available";
				} else {
					title = $item.$title || ($field ? $field.$title : null) || "";
					if (title && title.indexOf("{") >= 0) {
						if (title[1] == "@") {
							title = title.slice(1, title.length - 1);
							if ($prototype.$localization) {
								title = $prototype.$localization[title];
							}
						}
					}
				}
				if (title == "-") {
					title = document.site.authorPage.localize["aw_" + itemNode.$authoringLevel];
				}
				this._setTitleNode(itemNode, $item, $field, title);
				if ($field) {
					this._addFieldType(itemNode, $field);
					var boundField = this.toolbar.awPalette.awArticle.boundFields[$item.$bind];
					if (boundField && boundField.length > 0) {
						itemNode.item = boundField[0];
					} else {
						itemNode.item = {
							$title: itemNode.node.title,
							$awAddNewItem: true,
							$fieldBind: $item.$bind,
							$fieldCategory: "field"
						};
					}
				} else {
					itemNode.item = {
						$title: itemNode.node.title,
						$awAddNewItem: true,
						$authoringLevel: itemNode.$authoringLevel
					};
				}
			}
			if ($item.$layout && !$item.$bind) {
				$items = $item.$layout.$items;
			}
			if ($items) {
				for (var ii = 0, jj = $items.length; ii < jj; ii++) {
					this._addNode($items[ii], itemNode || parentNode);
				}
			}
		}
	}
});