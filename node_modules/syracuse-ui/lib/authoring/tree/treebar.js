"use strict";
var helpers = require('syracuse-core/lib/helpers');
var InsertTree = require("syracuse-ui/lib/authoring/tree/insertTree").InsertTree;
var ContentTree = require("syracuse-ui/lib/authoring/tree/contentTree").ContentTree;

function Treebar() {}

exports.Treebar = helpers.defineClass(Treebar, null, {
	load: function(designer) {
		this.designer = designer;
		this._designedPage = this.designer.awArticle.page;
		this.awArticle = this.designer.awArticle;
		this.treebarTabs = document.createElement("div");
		this.treebarTabs.className = "s-aw-tlbr-tabs-nav";
		this.treebarBody.appendChild(this.treebarTabs);
		this._selectedTab = null;
		this._designedPage.warnAdministrationUpdates(false);
		(this.contentTree = new ContentTree()).load(this, this.appendTab(this.designer.designerLocalize.aw_viewTypeContent));
		(this.insertTree = new InsertTree()).load(this, this.appendTab(this.designer.designerLocalize.aw_insert));
		this._selectTab(this.contentTree.tabItem.tab, true);
		this._bindEvents(true);
	},
	_selectTab: function(tab, select) {
		if (select && this._selectedTab && this._selectedTab.tab != tab) {
			this._selectTab(this._selectedTab.tab, false);
		}
		var tabItem = this.contentTree.tabItem.tab == tab ? this.contentTree.tabItem : this.insertTree.tabItem;
		this._selectedTab = (select) ? tabItem : null;
		tabItem.tab.className = "new-s-aw-tlbr-tab" + (select ? " s-tab-open" : "");
		tabItem.body.style.display = select ? "" : "none";
	},
	appendTab: function(title) {
		var tab = document.createElement("a");
		tab.className = "new-s-aw-tlbr-tab";
		tab.textContent = title;
		var body = document.createElement("div");
		body.style.display = "none";
		body.className = "s-aw-content-tree";
		var tabItem = {
			tab: this.treebarTabs.appendChild(tab),
			body: this.treebarBody.appendChild(body)
		};
		return tabItem;
	},
	fill: function() {
		if (this.awArticle) {
			this.contentTree.fill();
			this.insertTree.fill();
			if (this._selectedTab && this._selectedTab.tab) {
				this._selectTab(this._selectedTab.tab, true);
			}
		}
	},
	selectNode: function(item, select) {
		this.contentTree.selectNode(item, select);
		this.insertTree.selectNode(item, select);
	},
	findNode: function(event) {
		var tree = this._findTree(event);
		return tree ? tree.findNode(event) : null;
	},
	_findTree: function(event) {
		var target = event.target;
		while (target != null && !target.syraAwTree) {
			target = target.parentNode;
		}
		return target.syraAwTree ? this[target.syraAwTree] : null;
	},
	_createArrayBoxes: function() {
		this.newGraphTab = this.appendTab(this.designer.designerLocalize.aw_graph);
		this.newArticleTab = this.appendTab(this.designer.designerLocalize.aw_listCard);
		if (this.awArticle.chart && this.awArticle.chart.$authoringType == "cube$highCharts") {
			var $fieldCube = this.awArticle.$item.$cube || this.awArticle.$prototype.$cube;
			if ($fieldCube && $fieldCube.$measures) {
				var $items = [];
				var $itemCube = this.awArticle.$item.$cube || {};
				var $itemMeasures = $itemCube.$measures || {};
				var delta = {};
				var binds = Object.keys($fieldCube.$measures);
				for (var ii = 0, jj = binds.length; ii < jj; ii++) {
					var bind = binds[ii];
					var $measure = $fieldCube.$measures[bind];
					var $field = this.awArticle.chart.createChoices();
					$field.$title = $measure.$title ? this._designedPage.getLocalizeText($measure.$title) : "";
					var $toolBind = "$cube" + bind;
					this.designer.$prototype.$properties[$toolBind] = $field;
					$items.push({
						$category: "field",
						$bind: $toolBind,
						$measure: bind,
						$icon: {
							$mode: "icon",
							$path: "graphics/s-graph-"
						},
						$choiceLayout: "3",
						$isEditMode: true,
						$skin: "s-aw-field"
					});
					delta[$toolBind] = ($itemMeasures[bind] ? $itemMeasures[bind].$style : null) || "area";
				}
				this.designer.loadNewItem(this.newGraphTab.body, {
					$layoutType: "stack",
					$items: $items
				});
				this.designer.applyChange(delta);
			}
		}
	},
	_bindEvents: function(bind) {
		var self = this;
		if (self.treebarBody) {
			if (bind) {
				$(self.treebarBody).delegate(".new-s-aw-tlbr-tab", "click.authoringTree", function(event) {
					self._selectTab(event.target, true);
					return false;
				});
			} else {
				$(self.treebarBody).undelegate();
			}
		}
	},
	onWindowResize: function(height) {
		this.treebarBody.style.height = (height - this.treebarBody.offsetTop) + "px";
		var bodyHeight = Math.max(height - this.treebarTabs.clientHeight, 20) + "px";
		this.contentTree.tabItem.body.style.height = this.insertTree.tabItem.body.style.height = bodyHeight;
	},
	dispose: function() {
		this._bindEvents(false);
		if (this.contentTree) {
			this.contentTree.dispose();
		}
		if (this.insertTree) {
			this.insertTree.dispose();
		}
		this.contentTree = this.insertTree = this.designer = this.treebarBody = null;
	}
});