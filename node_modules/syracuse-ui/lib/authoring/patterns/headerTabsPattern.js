"use strict";
var helpers = require('syracuse-core/lib/helpers');

function HeaderTabsPattern(){
}

exports.HeaderTabsPattern = helpers.defineClass(HeaderTabsPattern, null, {

    build: function($prototype, $sourceArticle){
        var authorPage = document.site.authorPage;
        var $newArticle = {
            $layout: {
                $items: []
            }
        };
        var $rootItems = authorPage.extractItemSettings($sourceArticle.$layout);
        if ($rootItems[0].$category != "section") {
            $newArticle.$layout.$items.push({
                $category: "section",
                $title: "Section",
                $layout: {
                    $items: $rootItems
                }
            });
        }
        else {
            if ($rootItems.length < 3) {
                $newArticle.$layout.$items = $rootItems;
            }
            else {
                $newArticle.$layout.$items.push($rootItems[0]);
                var $tabs = {
                    $layoutType: "tabs",
                    $items: []
                };
                $newArticle.$layout.$items.push($tabs);
                for (var ii = 1, jj = $rootItems.length; ii < jj; ii++) {
                    $tabs.$items.push($rootItems[ii]);
                }
            }
        }
        for (var ii = 0, jj = $rootItems.length; ii < jj; ii++) {
            var $parent = $rootItems[ii];
            var $children = authorPage.extractItemSettings($parent.$layout);
            if ($children.length > 0) {
                if ($children[0].$category == "block" || $children[0].$category == "section") {
                    this._buildBlock(authorPage, $prototype, $parent, $children);
                }
                else {
                    $parent.$layout.$items = $children;
                }
            }
        }
        
        return $newArticle;
    },
    _buildBlock: function(authorPage, $prototype, $parent, $blocks){
        var $row, colIndex, nextBlock;
        if ($blocks.length > 1) {
            $parent.$layout.$items = [];
            for (var ii = 0, jj = $blocks.length; ii < jj; ii++) {
                var $block = $blocks[ii];
                if ($block.$layout) {
                    var $fields = authorPage.extractItemSettings($block.$layout);
                    if ($fields.length > 0) {
                        var addFields = true;
                        if ($fields.length == 1) {
                            var $field = $fields[0];
                            if ($field.$bind && $prototype.$properties[$field.$bind]) {
                                if ($prototype.$properties[$field.$bind].$type == "application/x-array") {
                                    $parent.$layout.$items.push($block);
                                    colIndex = -1;
                                    addFields = false;
                                }
                            }
                        }
                        if (addFields) {
                            $block.$layout.$items = $fields;
                        }
                    }
                    if (colIndex == -1) {
                        $row = null;
                    }
                    else {
                        if (!$row) {
                            colIndex = 0;
                            $row = {
                                $layoutType: "row",
                                $layoutSubType: "33,33,33",
                                $items: []
                            };
                            $parent.$layout.$items.push($row);
                        }
                        $row.$items.push($block);
                        if ((++colIndex) == 3) {
                            $row = null;
                        }
                    }
                }
            }
        }
        else 
            if ($blocks.length == 1) {
                var $fields = authorPage.extractItemSettings($blocks[0].$layout);
                $blocks[0].$layout.$items = $fields;
            }
    }
});
