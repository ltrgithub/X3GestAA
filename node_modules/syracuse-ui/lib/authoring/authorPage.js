"use strict";
var helpers = require('syracuse-core/lib/helpers');
var locale = require('syracuse-core/lib/locale');
var RawPage = require("syracuse-ui/lib/page/rawPage").RawPage;

var DragDrop = require("./aside/dragDrop").DragDrop;
var RowResizer = require("./aside/rowResizer").RowResizer;
var crudHelper = require("./crudHelper");
var drawHelper = require("./drawHelper");
var Context = require("./context").Context;
var TopBar = require("./topBar").TopBar;

var historyHelper = require("syracuse-ui/lib/authoring/historyHelper");

function AuthorPage(){
}

exports.AuthorPage = helpers.defineClass(AuthorPage, RawPage, {
    notifySteps: function(resetUpdates){
        historyHelper.notifySteps(this.awContext, resetUpdates);
    },
    onChangeSep: function(menuItem){
        historyHelper.onChangeSep(this.getPageContext(), menuItem);
    },
    resizePalette: function(){
        if (this.awContext) {
            this.awContext.palette.onWindowResize();
        }
    },
    notifyUpdate: function(isUpdated){
        this.isUpdated = isUpdated !== false;
        this.notifySteps();
    },
    _toggleAuthoringDialog: function(dialogWrapper, begin){
        if (begin) {
            dialogWrapper.$$closeBtn[0].style.display = "none";
            dialogWrapper.overlay.className = "s-aw-overlay";
        }
        else {
            dialogWrapper.$$closeBtn[0].style.display = "";
            dialogWrapper.overlay.className = "s-overlay";
        }
    },
    getPageContext: function(){
        return this.contextStack[0];
    },
    onContextDisposed: function(disposedContext){
        if (this.contextStack) {
            for (var ii = 0, jj = this.contextStack.length; ii < jj; ii++) {
                if (this.contextStack[ii] == disposedContext) {
                    this.contextStack.splice(ii, 1);
                    if (this.awContext == this) {
                        this.awContext = ii > 0 ? this.contextStack[ii - 1] : null;
                        if (this.awContext) {
                            this.awContext.palette.toggleContext(true);
                        }
                    }
                    break;
                }
            }
        }
    },
    getContext: function(item){
        if (item) {
            if (this.awContext.awArticle != item && (item.isOnAuthoring || this.awContext.awArticle != item.articleParent)) {
                for (var ii = 0, jj = this.contextStack.length; ii < jj; ii++) {
                    var context = this.contextStack[ii];
                    if (context.awArticle == item || (!item.isOnAuthoring && context.awArticle == item.articleParent)) {
                        this.awContext.palette.toggleContext(false);
                        this.awContext = context;
                        this.awContext.palette.toggleContext(true);
                        break;
                    }
                }
            }
        }
        if (this.awContext == null || this.awContext.authorPage == null) {
            if (this.contextStack.length > 0) {
                this.awContext = this.contextStack[this.contextStack.length - 1];
                this.awContext.palette.toggleContext(true);
            }
        }
        return this.awContext;
    },
    createContext: function(awArticle, options){
        if (this.awContext) {
            this.awContext.palette.toggleContext(false);
        }
        var context = new Context();
        context.create(this, awArticle, options);
        return context;
    },
    beginAuthoring: function(awPageSlot){
        this.preferences = document.site.ensurePreferences();
        this.preferences.authoring = this.preferences.authoring || {};
        this._initializePage();
        this.layoutSlot = awPageSlot;
        this.contextStack = [];
        this.localize = locale.resources(module)();
        this.bindEvents();
        if (document.site.mainPage.isFusionPage) {
            this.targetPage = document.site.fusionGateway.activatedBook.selectedSheet;
        }
        else {
            this.targetPage = document.site.getTopDialogPage();
            if (this.targetPage) {
                this.targetPage = this.targetPage._content;
            }
        }
        this.diagnosePage = this.targetPage = this.targetPage || document.site.mainPage;
        
        this.targetPage.authoringPage = this;
        this.targetPage.isOnAuthoring = true
        
        document.controller.loadWorkingCopy({
            menu: {
                $url: this.targetPage.$authorUrl
            },
            article: this,
            callback: function(){
                document.site.resize();
            }
        });
        this.rowResizer = new RowResizer();
        this.rowResizer.load();
    },
    _togglePageBarItemAuthoring: function(targetPage, enable, isOnPreviewMode){
        if (targetPage.menuBar) {
            targetPage.menuBar.toggleItemAuthoring(enable, isOnPreviewMode);
        }
        if (targetPage.fusionBar) {
            targetPage.fusionBar.toggleItemAuthoring(enable, isOnPreviewMode);
        }
    },
    onBeforeMainPageChange: function(continueChanging){
        var self = this;
        if (self.isUpdated) {
            document.site.showMessage({
                $title: self.localize.aw_updateMessageTitle,
                $message: self.localize.aw_cancelMessageText,
                $type: "question",
                $buttons: "yesnocancel",
                callback: function(response){
                    if (response.$id == "yes") {
                        self.menuItems.$save[0].click();
                        setTimeout(function(){
                            document.site.openAuthoringPage(false);
                            continueChanging();
                        }, 300);
                    }
                    else {
                        if (response.$id == "no") {
                            document.site.openAuthoringPage(false);
                            continueChanging();
                        }
                    }
                }
            });
            return false;
        }
        document.site.openAuthoringPage(false);
        return true;
    },
    onMenuClick: function(menuItem){
        var awContext = this.getContext();
        if (crudHelper.onMenuClick(awContext, menuItem)) {
            if (menuItem.page != this && menuItem.page != awContext.palette) {
                if (!menuItem.page.isAuthoringFriend && !menuItem.boxParent.isDiagnoseMenus) {
                    return !menuItem.page.vignetteField && !menuItem.page.isOnAuthoring;
                }
            }
            return true;
        }
        return false;
    },
    drawBox: function(){
        document.site.emptyDom(this.layoutSlot);
        (this.$$item = $(this.layoutSlot)).show();
        
        this.paletteSlot = document.createElement("div");
        this.paletteSlot.className = "s-aw-palette-slot";
        
        this.topLeftBar = document.createElement("div");
        this.topLeftBar.setAttribute("id", "s-aw-page-left");
        
        this._topRightBar = document.createElement("div");
        this._topRightBar.setAttribute("id", "s-aw-page-right");
        var close = this.loadNewItem(this._topRightBar, {
            $bind: "$close",
            $title: this.localize.aw_close,
            $category: "link",
            $icon: {
                $mode: "icon"
            },
            $skin: "s-aw-page-close"
        });
        close.setMenu({
            $title: this.localize.aw_close
        }, null);
        this.loadNewItem(this._topRightBar, {
            $layoutType: "row",
            $autoSize: true,
            $items: [{
                $category: "link",
                $bind: "$save",
                $skin: "s-aw-menus-save"
            }, {
                $category: "link",
                $bind: "saveAs",
                $skin: "s-aw-menus-saveas"
            }, {
                $category: "link",
                $bind: "$delete",
                $skin: "s-aw-menus-delete"
            }]
        });
        
        
        this.createContext(this.targetPage);
        this.topBar = new TopBar();
        this.topBar.loadBox(this);
        this.notifySteps();// initialize  
        this.awContext.targetPage._item.appendChild(this.paletteSlot);
        this.layoutSlot.appendChild(this.topLeftBar);
        this.layoutSlot.appendChild(this._topRightBar);
        document.site.resize();
        
        
        this.selectItem(this.awContext.targetPage, true);
    },
    selectItem: function(item, select, ensureSelect){
        var awContext = this.getContext();
        if (awContext.awLayout && awContext.awLayout.disposed) {
            awContext.awLayout = null;
        }
        if (awContext.awItem && awContext.awItem.disposed) {
            awContext.awItem = null;
        }
        if (item && item.disposed) {
            item = awContext.awItem;
        }
        if (select) {
            item = item || awContext.targetPage;
            if (ensureSelect || item != awContext.awItem) {
                this.selectItem(null, false);
                if (item.isLayout) {
                    awContext.awItem = item.boxParent;
                    awContext.awLayout = item;
                }
                else {
                    awContext.awItem = item;
                    awContext.awLayout = null;
                }
                
                this.scrollToItem(awContext.awLayout || awContext.awItem);
                awContext.palette.showSettingPanel();
                if (awContext.awLayout) {
                    this._toggleItemCss(awContext.awLayout, "s-aw-designed", true);
                }
                this._toggleItemCss(item, "s-aw-designed", true);
                document.site.resize();
            }
        }
        else {
            item = item || awContext.awItem;
            if (item) {
                this._toggleItemCss(item, "s-aw-designed", false);
            }
            if (awContext.awLayout) {
                this._toggleItemCss(awContext.awLayout, "s-aw-designed", false);
            }
        }
        awContext.articleToolBox.selectNode(item, select);
    },
    
    toggleDropArea: function(spaceBox, dropItem){
        if (dropItem) {
            if (spaceBox.deleteLink) {
                spaceBox.deleteLink.style.display = "none";
            }
            if (!spaceBox.dropArea) {
                spaceBox.dropArea = document.createElement("div");
                spaceBox.dropArea.className = "s-aw-drop-area-" + dropItem.$authoringLevel;
                spaceBox.dropArea.textContent = this.localize["aw_drop_" + dropItem.$authoringLevel];
                spaceBox._body.appendChild(spaceBox.dropArea);
            }
        }
        else {
            if (spaceBox.deleteLink) {
                spaceBox.deleteLink.style.display = "";
            }
            if (spaceBox.dropArea) {
                document.site.removeDomChild(spaceBox.dropArea);
                spaceBox.dropArea = null;
            }
        }
    },
    toggleArrayFieldAuthoring: function(item, enable){
        if (this.awContext.isArrayField && item == this.awContext.awArticle) {
            if (item.$item.$format == "grid") {
                if (item.$item.$cards) {
                    var recordCardView;
                    if (item.$item.$cards.$position == "inline") {
                        if (item.records.length > 0) {
                            recordCardView = item.records[0];
                        }
                    }
                    else {
                        recordCardView = item.builder.cardBuilder.recordCardView;
                    }
                    if (recordCardView) {
                        if (!recordCardView.cardview) {
                            recordCardView.builder.cardBuilder.toggleCard(recordCardView, true);
                        }
                        this.toggleItemAuthoring(recordCardView.cardview, enable);
                    }
                }
            }
            else {
                if (item.records.length > 0) {
                    var record = item.records[0];
                    this.toggleItemAuthoring(record, enable);
                }
            }
        }
    },
    toggleItemAuthoring: function(item, enable){
        var site = document.site;
        var awContext = this.getContext();
        if (awContext) {
            if (item == awContext.awArticle) {
                this.toggleArrayFieldAuthoring(item, enable);
                this._togglePageBarItemAuthoring(item, enable || this.isOnPreviewMode, this.isOnPreviewMode);
            }
            if (!enable && item.loadPageViewSelector) {
                item.loadPageViewSelector();
            }
            if (item.articleParent && item.articleParent != awContext.targetPage) {
                return;
            }
            if (item.isMenuGroup || item.isMenuItem) {
                if (!awContext.targetPage.isDashBoard) {
                    return;
                }
            }
            if ((item.$item && item.$item.$isAuthoringEnabled === false) ||
            (item.boxParent && item.boxParent.$item.$isAuthoringEnabled === false)) {
                return;
            }
            item.isAuthingEnabled = enable;
            if (item.isSpaceBox) {
                if (enable) {
                    if (!item.deleteLink) {
                        if (item.boxParent.$authoringLevel == "block") {
                            item.$authoringLevel = "field";
                        }
                        else {
                            var children = item.boxParent.layoutContent ? awContext.drawHelper.getItemsFromLayout(item.boxParent.layoutContent) : [];
                            if (children.length > 0) {
                                item.$authoringLevel = children[0].$authoringLevel;
                            }
                            else {
                                item.$authoringLevel = item.boxParent.$authoringLevel == "section" ? "block" : "section";
                            }
                        }
                        item.deleteLink = document.createElement("a");
                        item.deleteLink.className = "s-aw-layout-delete";
                        item.deleteLink.textContent = this.localize.aw_deleteColumn;
                        item._body.appendChild(item.deleteLink);
                    }
                }
                else {
                    site.removeDomChild(item.deleteLink);
                    item.deleteLink = null;
                    site.toggleClass(item.layoutSlot, "s-aw-designed", false);
                    site.toggleClass(item.layoutSlot, "s-aw-over", false);
                }
                site.toggleClass(item.layoutSlot, "s-aw-item", enable);
            }
            if (item.isTabLayout) {
                if (!item.isLayout && item.isSection && !item.loaded && item.$item.$opened !== false) {
                    item.renderLayoutContent();
                    item.loaded = true;
                }
            }
            var domItem = item.dataSlot;
            if (!domItem && item.$$item) {
                domItem = item.$$item[0];
            }
            if (domItem) {
                //no domitem for layout
                if (item.tabTitle) {
                    if (enable) {
                        item.tabTitle.setAttribute("data-s-item", item.id);
                    }
                    else {
                        site.toggleClass(item.tabTitle, "s-aw-designed", false);
                        site.toggleClass(item._body, "s-aw-designed", false);
                        site.toggleClass(item.tabTitle, "s-aw-over", false);
                        site.toggleClass(item._body, "s-aw-over", false);
                        item.tabTitle.removeAttribute("data-s-item");
                    }
                    site.toggleClass(item.tabTitle, "s-aw-item", enable);
                    site.toggleClass(item._body, "s-aw-item", enable);
                    site.toggleClass(item.tabTitle, "s-aw-light", enable && this.$isLightMode);
                    site.toggleClass(item._body, "s-aw-light", enable && this.$isLightMode);
                }
                if (enable) {
                    domItem.setAttribute("data-s-item", item.id);
                    if (!item.isLayout) {
                        item.layoutSlot.setAttribute("data-s-item", item.id);
                    }
                }
                else {
                    if (domItem) {
                        if (item._body) {
                            site.toggleClass(item._body, "s-aw-over", false);
                            site.toggleClass(item._body, "s-aw-designed", false);
                        }
                        if (item._header) {
                            site.toggleClass(item._header, "s-aw-over", false);
                            site.toggleClass(item._header, "s-aw-designed", false);
                        }
                        site.toggleClass(item.layoutSlot, "s-aw-designed", false);
                        site.toggleClass(item.layoutSlot, "s-aw-over", false);
                        site.toggleClass(domItem, "s-aw-designed", false);
                        site.toggleClass(domItem, "s-aw-over", false);
                        domItem.removeAttribute("data-s-item");
                        item.layoutSlot.removeAttribute("data-s-item");
                    }
                }
                if (item.isLayout) {
                    if (enable) {
                        if (item.$layout.$layoutType == "row") {
                            site.toggleClass(item._item, "s-aw-item", true);
                            if (item.layoutSlot) {
                                site.toggleClass(item.layoutSlot, "s-aw-item", true);
                            }
                            if (this.$isLightMode) {
                                var children = awContext.drawHelper.getItemsFromLayout(item);
                                if (!children.length || children[0].$authoringLevel == "field") {
                                    item._item.style.display = "none";
                                }
                            }
                            else {
                                item._item.style.display = "";
                            }
                        }
                    }
                    else {
                        site.toggleClass(domItem, "s-aw-item", false);
                        if (item.layoutSlot) {
                            site.toggleClass(item.layoutSlot, "s-aw-item", false);
                        }
                        item._item.style.display = "";
                    }
                }
                else {
                    if (item.layoutSlot) {
                        site.toggleClass(item.layoutSlot, "s-aw-item", enable);
                    }
                    site.toggleClass(domItem, "s-aw-item", enable);
                    site.toggleClass(domItem, "s-aw-light", enable && this.$isLightMode);
                    this.showHiddenItem(item);
                }
            }
            if (item.rowSeparator) {
                site.toggleClass(item.rowSeparator, "s-aw-slot-sep-" + item.layoutParent.$layout.$layoutType, enable);
                item.rowSeparator.setAttribute(item.isLayout ? "data-s-layout" : "data-s-item", item.id);
            }
            if (item.isLayout) {
                if (item.items) {
                    for (var ii = 0, jj = item.items.length; ii < jj; ii++) {
                        this.toggleItemAuthoring(item.items[ii], enable);
                    }
                }
            }
            else {
                if (item.layoutContent) {
                    this.toggleItemAuthoring(item.layoutContent, enable);
                }
            }
            if (!enable && item.awAddin && !this.isOnPreviewMode) {
                document.controller.disposeObject(item.awAddin);
            }
        }
    },
    showHiddenItem: function(item){
        var display = (!(item.layoutParent && item.layoutParent.isRow) && item.$isHidden) ? "none" : "";
        if (item.layoutSlot) {
            if (this.$isLightMode && item.$authoringLevel == "field") {
                item.layoutSlot.style.display = "none";
                if (item.rowSeparator) {
                    item.rowSeparator.style.display = display;
                }
            }
            else {
                item.layoutSlot.style.display = display;
                if (item.rowSeparator) {
                    item.rowSeparator.style.display = display;
                }
            }
            document.site.toggleClass(item.layoutSlot, "s-aw-visibility-forced", item.isAuthingEnabled && item.$isHidden);
        }
        var domItem = item._item || item._domItem;
        if (domItem) {
            if (item.isAuthingEnabled) {
                if (this.$isLightMode && item.$authoringLevel == "field") {
                    domItem.style.display = "none";
                }
                else {
                    domItem.style.display = item.$isHidden ? "none" : "";
                }
                document.site.toggleClass(domItem, "s-aw-visibility-forced", item.$isHidden);
            }
            else {
				document.site.toggleClass(domItem, "s-aw-visibility-forced", false);
                domItem.style.display = item.$isHidden ? "none" : "";
            }
        }
    },    
    _toggleItemCss: function(item, css, show){
        if (item.$$item) {
            if (item.tabTitle) {
                document.site.toggleClass(item.tabTitle, css, show);
                document.site.toggleClass(item._body, css, show);
            }
            else {
                if (item.dataSlot) {
                    document.site.toggleClass(item.dataSlot, css, show); //page
                }
                else {
                    if (item.layoutSlot) {
                        document.site.toggleClass(item.layoutSlot, css, show);
                    }
                }
                if (item.isLayout) {
                    document.site.toggleClass(item._item, css, show);
                }
                if (item._header) {
                    document.site.toggleClass(item._header, css, show);
                }
                if (item._body) {
                    document.site.toggleClass(item._body, css, show);
                }
            }
        }
    },
    toggleOverItem: function(item, isOver){
        var css = "s-aw-over";
        this._toggleItemCss(item, css, isOver);
        if (isOver && this._overItem != item) {
            if (this._oveItems) {
                for (var ii = 0, jj = this._oveItems.length; ii < jj; ii++) {
                    this._toggleItemCss(this._oveItems[ii], css, false);
                }
            }
            this._oveItems = [];
            this._overItem = item;
            while (item) {
                this._toggleItemCss(item, css, true);
                this._oveItems.push(item);
                item = item.boxParent;
            }
        }
    },
    applyChange: function(newData){
        if (newData && newData.$actions) {
            if (!crudHelper.onApplyChange(newData, this.getContext())) {
                return false;
            }
        }
        RawPage.prototype.applyChange.call(this, newData);
    },
    
    notifyActionChange: function(target, value, notifyServer){
        crudHelper.temporalySave(this.getContext());
        RawPage.prototype.notifyActionChange.call(this, target, value, notifyServer);
    },
    notifyDataChange: function(field, value){
        crudHelper.temporalySave(this.getContext());
        RawPage.prototype.notifyDataChange.call(this, field, value);
    },
    _notifyChildFields: function(parentItem, value, binding){
        var items = parentItem.layoutContent ? parentItem.layoutContent.items : parentItem.items;
        if (items) {
            for (var ii = 0, jj = items.length; ii < jj; ii++) {
                var childItem = items[ii];
                if (childItem.$authoringLevel == "field") {
                    var metaData = {}
                    metaData[binding] = value;
                    if (childItem.applyDesignMetaData) {
                        //not available for menu
                        childItem.applyDesignMetaData(metaData, true);
                    }
                }
                else {
                    this._notifyChildFields(childItem, value, binding);
                }
            }
        }
    },
    _notifyChildBox: function(parentItem, metaData){
        var items = parentItem.layoutContent ? parentItem.layoutContent.items : parentItem.items;
        parentItem.applyDesignMetaData(metaData, true);
        if (parentItem.layoutContent) {
            for (var ii = 0, jj = items.length; ii < jj; ii++) {
                var childItem = items[ii];
                if (childItem.$authoringLevel != "field") {
                    this._notifyChildBox(childItem, metaData);
                }
            }
        }
    },
    findTargetItemEvent: function(target, findLayout){
        var item;
        if (findLayout || target.getAttribute("data-s-layout")) {
            item = document.controller.findLayout($(target));
        }
        else {
            item = document.controller.findItem($(target));
        }
        return item;
    },
    authorizeEvent: function(item){
        return (item.page && (item.page.$dialogMode || (item.page == this) || item.page.isAuthoringEventEnabled));
    },
    bindEvents: function(){
        var self = this;
        document.site.$$layoutSlot.delegate(".s-aw-item", "click.author", function(event){
            self.onClickItem(self.findTargetItemEvent(this), this);
            return false;
        }).delegate(".s-aw-item, .s-aw-add-item", "mousedown.author", function(event){
            var awContext = self.getContext();
            if (document.site.dragDropInstance) {
                if (!document.site.dragDropInstance.isDragAuthoring) {
                    return;
                }
                document.site.dragDropInstance.stop(event);
                document.site.setDragDropInstance();
            }
            else {
                if (event.currentTarget.className.indexOf("s-aw-add-item") >= 0) {
                    if (event.currentTarget.className.indexOf("s-aw-tree-item") >= 0) {
                        var node = awContext.articleToolBox.findNode(event);
                        if (node) {
                            document.site.requestedDDAuthoringItem = node.item;
                            return false;
                        }
                    }
                    else {
                        document.site.requestedDDAuthoringItem = document.controller.findItem($(event.currentTarget));
                        return false;
                    }
                }
                else {
                    var item = self.findTargetItemEvent(this);
                    if (item) {
                        if (item != awContext.targetPage && item.page == awContext.targetPage) {
                            document.site.requestedDDAuthoringItem = item;
                            return false;
                        }
                    }
                }
            }
            // return false;
        }).delegate(".s-aw-slot-sep-row,.s-aw-slot-sep-stack", "mousemove.author", function(event){
            if (!document.site.dragDropInstance) {
                var item = self.findTargetItemEvent(this);
                if (item) {
                    var awContext = self.getContext();
                    if (item != awContext.targetPage) {
                        if (document.site.requestedDDAuthoringItem) {
                            (document.site.dragDropInstance = new DragDrop()).start(awContext, awContext.targetPage.$$scrollview);
                        }
                        else {
                            if (document.site.dragDropInstance) {
                                if (item.layoutParent || item.isLayout) {
                                    document.site.dragDropInstance.moveDragImage(event, item);
                                }
                            }
                        }
                    }
                    self.toggleOverItem(item, true);
                }
                return false;
            }
            return true;
        }).delegate(".s-aw-item,.s-aw-add-item", "mousemove.author", function(event){
            if (!document.site.dragDropInstance || document.site.dragDropInstance.isDragAuthoring) {
                var awContext = self.getContext();
                if (event.currentTarget.className.indexOf("s-aw-add-item") >= 0) {
                    if (event.currentTarget.className.indexOf("s-aw-tree-item") >= 0) {
                        var node = awContext.articleToolBox.findNode(event);
                        if (node) {
                            var item = node.item;
                            if (document.site.requestedDDAuthoringItem) {
                                document.site.setDragDropInstance(new DragDrop());
                                document.site.dragDropInstance.start(awContext, awContext.targetPage.$$scrollview);
                            }
                            else {
                                if (document.site.dragDropInstance) {
                                    if (item.layoutParent || item.isLayout) {
                                        document.site.dragDropInstance.moveDragImage(event, item);
                                    }
                                }
                            }
                        }
                    }
                    else {
                        if (document.site.requestedDDAuthoringItem) {
                            var menuItem = document.site.requestedDDAuthoringItem;
                            var $drop = {
                                $awAddNewItem: true
                            };
                            switch (menuItem.$item.$bind) {
                                case "$addSection":
                                    $drop.$authoringLevel = "section";
                                    break;
                                case "$addBlock":
                                    $drop.$authoringLevel = "block";
                                    break;
                                case "$addMenus":
                                    $drop.$authoringLevel = "block";
                                    $drop.$category = "menus";
                                    break;
                                default:
                                    if (menuItem.$item.$fieldCategory == "menus") {
                                        $drop.$authoringLevel = "block";
                                        $drop.$category = "menus";
                                        $drop.$vignette = menuItem.$item.$vignette;
                                    }
                                    else {
                                        $drop.$authoringLevel = "field";
                                        $drop.$fieldBind = menuItem.$item.$fieldBind;
                                        $drop.$fieldCategory = $drop.$category = menuItem.$item.$fieldCategory;
                                    }
                                    break;
                            }
                            $drop.$title = menuItem.getTitle();
                            document.site.requestedDDAuthoringItem = $drop;
                            document.site.setDragDropInstance(new DragDrop());
                            document.site.dragDropInstance.start(awContext, awContext.targetPage.$$scrollview);
                        }
                    }
                }
                else {
                    var item = self.findTargetItemEvent(this);
                    if (item) {
                        if (item != awContext.targetPage) {
                            if (document.site.requestedDDAuthoringItem) {
                                document.site.setDragDropInstance(new DragDrop());
                                document.site.dragDropInstance.start(awContext, awContext.targetPage.$$scrollview);
                            }
                            else {
                                if (document.site.dragDropInstance) {
                                    if (item.layoutParent || item.isLayout) {
                                        document.site.dragDropInstance.moveDragImage(event, item);
                                    }
                                }
                            }
                        }
                        self.toggleOverItem(item, true);
                    }
                }
                return false;
            }
            return true;
        }).delegate(".s-aw-item", "mouseenter.author mouseleave.author", function(event){
            if (document.site.dragDropInstance && document.site.dragDropInstance.isDragAuthoring) {
                var $$item = $(this);
                var layout = self.findTargetItemEvent(this, true);
                if (layout && layout.$layout.$layoutType == "tabs") {
                    if (event.type == "mouseenter") {
                        var tabItem = self.findTargetItemEvent(this);
                        self._ddTabEnter = setTimeout(function(){
                            if (tabItem && tabItem.$item) {
                                if (!tabItem.$item.$opened) {
                                    tabItem.openBox(true);
                                }
                            }
                        }, 500);
                    }
                    else {
                        if (self._ddTabEnter) {
                            clearTimeout(self._ddTabEnter);
                            delete self._ddTabEnter;
                        }
                    }
                }
                return false;
            }
            return true;
            // return false;
        }).delegate(".s-aw-layout-delete", "click.author", function(){
            if (!document.site.dragDropInstance) {
                delete document.site.requestedDDAuthoringItem;
                var spaceBox = document.controller.findItem($(this));
                setTimeout(function(){
                    var awContext = self.getContext();
                    awContext.drawHelper.deleteLayout(spaceBox);
                    self.endTargetPageUpdate(null, true);
                }, 10);
            }
            return false;
        });
    },
    onClickItem: function(item, target){
        var awContext = this.getContext(item);
        var article = document.controller.findArticle($(target));
        if (article.isOnAuthoring) {
            if (document.site.dragDropInstance && document.site.dragDropInstance.isDragAuthoring) {
                document.site.dragDropInstance.stop(event);
                document.site.setDragDropInstance();
            }
            else {
                delete document.site.requestedDDAuthoringItem;
                item = item || document.controller.findItem($(target));
                if (item) {
                    if (item.isSpaceBox) {
                        item = item.boxParent;
                    }
                    if (item.isMenuGroup && item.contextField) {
                        return false;
                    }
                    if (item && (item != awContext.palette && item.page != awContext.palette)) {
                        this.selectItem(item, true, true);
                        if (item.awAddin && item.awAddin.ensureDesignContext) {
                            item.awAddin.ensureDesignContext(awContext);
                        }
                    }
                }
            }
        }
        else {
            if (article.page != this && article.page != awContext.palette) {
                if (!(article.page.$prototype && article.page.$prototype.$representation == "authoringSaveParam")) {
                    return false;
                }
            }
        }
        return true;
    },
    getItemSettings: function($layout, $items){
        if (!$items) {
            $items = [];
        }
        if ($layout) { //null for spacebox
            for (var ii = 0, jj = $layout.$items.length; ii < jj; ii++) {
                var $item = $layout.$items[ii];
                if ($item.$items && !$item.$bind && !$item.$category) {
                    if (!$item.$layoutType) {
                        $item.$layoutType = "stack";
                    }
                    this.getItemSettings($item, $items);
                }
                else {
                    $items.push($item);
                }
            }
        }
        return $items;
    },
    
    
    endTargetPageUpdate: function(selectedItem, isStructureUpdated){
        var awContext = this.getContext();
        this.layoutValidator.validate(awContext.targetPage.layoutContent, true);
        if (isStructureUpdated) {
            awContext.articleToolBox.toggle(true);
        }
        this.selectItem(selectedItem || awContext.awItem, true, true);
        this.notifyUpdate();
        crudHelper.temporalySave(awContext);
    },
    toggleViewType: function($viewType){
        this.$viewType = $viewType;
        if (this.isOnPreviewMode && $viewType != "preview") {
            this.isOnPreviewMode = false;
            this.paletteSlot.style.display = "";
            if (this._toolsBarBeforePreview && this._toolsBarBeforePreview.layoutSlot) {
                this._toolsBarBeforePreview.layoutSlot.style.display = "";
                delete this._toolsBarBeforePreview;
            }
            this.toggleItemAuthoring(this.targetPage, true);
        }
        switch ($viewType) {
            case "preview":
                if (!this.isOnPreviewMode) {
                    if (this.$isLightMode) {
                        this.$isLightMode = false
                        this.toggleItemAuthoring(this.targetPage, true);
                    }
                    this.isOnPreviewMode = true;
                    this.paletteSlot.style.display = "none";
                    this._toolsBarBeforePreview = this.awContext.toolsBar;
                    if (this._toolsBarBeforePreview) {
                        this._toolsBarBeforePreview.layoutSlot.style.display = "none";
                    }
                }
                break;
            case "structure":
                if (!this.$isLightMode) {
                    this.$isLightMode = true;
                }
                break;
            case "layout":
                if (this.$isLightMode) {
                    this.$isLightMode = false
                }
                break;
        }
        this.toggleItemAuthoring(this.targetPage, !this.isOnPreviewMode);
        this.targetPage.onWindowResize();
    },
    dispose: function(){
        this.deletedView = null;
        if (document.site.$$layoutSlot) {
            document.site.$$layoutSlot.undelegate(".author");
        }
        if (this.contextStack && this.contextStack.length) {
            var context = this.getPageContext();
            if (this.$viewType && this.$viewType != "layout") {
                this.toggleViewType("layout");
            }
            for (var ii = this.contextStack.length - 1; ii >= 0; ii--) {
                context = this.contextStack[ii];
                if (context && !context.disposed) {
                    if (context.targetPage == context.awArticle) {
                        this.awContext = context;
                        if (context.dialogWrapper) {
                            this._toggleAuthoringDialog(context.dialogWrapper, false);
                        }
                        if (context.targetPage) {
                            context.targetPage.isOnAuthoring = false;
                            this.isOnPreviewMode = false;
                            this.toggleItemAuthoring(context.targetPage, false);
                            delete context.targetPage.authoringPage;
                        }
                    }
                    context.dispose(true);
                }
            }
            if (this.rowResizer) {
                this.rowResizer.dispose();
                this.rowResizer = null;
            }
        }
        this.contextStack = this.awContext = this.diagnosePage = null;
        if (this.paletteSlot) {
            document.site.removeDomChild(this.paletteSlot);
        }
        if (this.topBar) {
            document.controller.disposeObject(this.topBar);
            this.topBar = null;
        }
        this._overItem = this._oveItems = null;
        this._toolsBarBeforePreview = this._ddTabEnter = this.page = this.paletteSlot = this.topLeftBar = this._topRightBar = this.targetPage = null;
        RawPage.prototype.dispose.call(this);
    }
});
