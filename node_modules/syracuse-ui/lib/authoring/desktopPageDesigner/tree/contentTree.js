"use strict";
var helpers = require('syracuse-core/lib/helpers');
var ItemTree = require("syracuse-ui/lib/authoring/desktopPageDesigner/tree/itemTree").ItemTree;

function ContentTree() {}

exports.ContentTree = helpers.defineClass(ContentTree, ItemTree, {
	fill: function() {
		this._clear();
		this.nodes = [];
		this.sectionsNodes = [];
		this.fieldsNodes = [];
		this.tabItem.body.syraAwTree = "contentTree";
		this._addNode(this.treebar.designer.awArticle, {
			node: this.tabItem.body,
			isRoot: true
		});
	},
	_addNode: function(item, parentNode) {
		var items;
		if (!item.isSpaceBox) {
			if (item.isLayout) {
				items = item.items;
			} else {
				//item.parent = parent;
				this._setParentNode(parentNode);

				var itemNode = this._createNodeItem(item.id, item.$designLevel);
				parentNode.children.push(itemNode);
				parentNode.childRoot.appendChild(itemNode.node);
				itemNode.item = item;
				this.nodes.push(itemNode);
				if (this.treebar.designer.awItem == item) {
					itemNode.title.className += " s-aw-tree-designed-" + item.$designLevel;
				}
				var title = item.getTitle(true);
				if (item.$field) {
					this._addFieldType(itemNode, item.$field);
					this.fieldsNodes.push(itemNode);
				} else {
					this.sectionsNodes.push(itemNode);
				}
				this._setTitleNode(itemNode, item.$item, item.$field, title);
			}
			if (item.layoutContent) {
				items = item.layoutContent.items;
			}
			if (items) {
				for (var ii = 0, jj = items.length; ii < jj; ii++) {
					this._addNode(items[ii], itemNode || parentNode);
				}
			}
		}
	}
});