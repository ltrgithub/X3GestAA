"use strict";

exports.addProperties = function($properties, localize) {
	$properties.$choiceField$format = {
		$type: "application/x-choice",
		$title: localize.fchoice_formatTitle,
		$value: {
			$type: "application/x-string",
			$enum: [{
				$value: "$combo",
				$title: localize.fchoice_formatList
			}, {
				$value: "$radios",
				$title: localize.fchoice_formatRadios
			}]
		}
	};
	$properties.$choiceField$choiceLayout = {
		$type: "application/x-choice",
		$title: localize.fchoice_layout_title,
		$value: {
			$type: "application/x-string",

			$enum: [{
				$value: "row",
				$title: localize.fchoice_layout_1_row
			}, {
				$value: "1",
				$title: localize.fchoice_layout_1_col
			}, {
				$value: "2",
				$title: localize.fchoice_layout_2_col
			}, {
				$value: "3",
				$title: localize.fchoice_layout_3_col
			}, {
				$value: "4",
				$title: localize.fchoice_layout_4_col
			}]
		}
	};
};

exports.getSection = function() {
	return {
		$category: "section",
		$authoringType: "choiceField",
		$isTitleHidden: true,
		$layout: {
			$items: [{
				$bind: "$choiceField$format",
				$isEditMode: true,
				$skin: "s-aw-field",
				$choiceLayout: "1"
			}, {
				$bind: "$choiceField$choiceLayout",
				$format: "$combo",
				$isEditMode: true,
				$skin: "s-aw-field"
			}]
		}
	};
};

exports.onShow = function(awPalette, awItem) {
	if (awItem.$authoringType == "choiceField") {
		awPalette.applyChange({
			$choiceField$format: awItem.$item.$format,
			$choiceField$choiceLayout: awItem.$item.$choiceLayout
		});
	}
};
exports.notifyDataChange = function(awPalette, awItem, metaData) {
	if (awItem.$authoringType == "choiceField") {
		if (metaData.$choiceField$format != undefined || metaData.$choiceField$choiceLayout != undefined) {
			awItem.applyDesignMetaData({
				$format: metaData.$choiceField$format,
				$choiceLayout: metaData.$choiceField$choiceLayout
			}, true);
		}
	}
};

exports.applyChange = function(awPalette, awItem, newData) {

};