"use strict";
var helpers = require('syracuse-core/lib/helpers');

function _onSaveAs(awContext, newData){
    if (newData.$actions.saveAs && newData.$actions.saveAs.$isDisabled && newData.$actions.saveAs.$isRequested === false) {
        if (newData.$authorUrl) {
            awContext.targetPage.$authorUrl = newData.$authorUrl;
        }
        if (newData.$actions.saveAs.$diagnoses) {
            for (var ii = 0, jj = newData.$actions.saveAs.$diagnoses.length; ii < jj; ii++) {
                var $diagnose = newData.$actions.saveAs.$diagnoses[ii];
                if (($diagnose.severity || $diagnose.$severity) !== "success") {
                    return false;
                }
            }
        }
        delete newData.$actions.saveAs;
        if (awContext.authorPage) {
            awContext.authorPage.notifyUpdate(false);
        }
        awContext.targetPage.showDiagnoses({
            $diagnoses: [{
                $message: awContext.localize.aw_saveMessageText,
                $severity: "success"
            }],
            $links: {
                $aw_quit: {
                    $title: awContext.localize.aw_quit
                }
            }
        });
    }
}

function _onSave(awContext, newData){
    if (newData.$actions.$save.$isDisabled && newData.$actions.$save.$isRequested === false) {
        if (newData.$authorUrl) {
            awContext.targetPage.$authorUrl = newData.$authorUrl;
        }
        if (newData.$actions.$save.$diagnoses) {
            for (var ii = 0, jj = newData.$actions.$save.$diagnoses.length; ii < jj; ii++) {
                var $diagnose = newData.$actions.$save.$diagnoses[ii];
                if (($diagnose.severity || $diagnose.$severity) !== "success") {
                    return false;
                }
            }
        }
        newData.$actions.$save.$isDisabled = false;
        newData.$actions.$save.$isRequested = true;
        awContext.targetPage.showDiagnoses({
            $diagnoses: [{
                $message: awContext.localize.aw_saveMessageText,
                $severity: "success"
            }],
            $links: {
                $aw_quit: {
                    $title: awContext.localize.aw_quit
                }
            }
        });
    }
}

function _onDelete(awContext, newData){
    if (newData.$actions.$delete.$isDisabled && newData.$actions.$delete.$isRequested === false) {
        var selectedView = awContext.targetPage.pageViewSelector.getSelected();
        if (newData.$authorUrl) {
            awContext.targetPage.$authorUrl = newData.$authorUrl;
        }
        if (newData.$actions.$delete.$diagnoses) {
            for (var ii = 0, jj = newData.$actions.$delete.$diagnoses.length; ii < jj; ii++) {
                var $diagnose = newData.$actions.$delete.$diagnoses[ii];
                if (($diagnose.severity || $diagnose.$severity) !== "success") {
                    return false;
                }
            }
        }
        var page = awContext.targetPage;
        var $diagnose = {
            $message: awContext.localize.aw_isDeletedMessageText.replace("{0}", "'" + selectedView.$title + "'"),
            $severity: "success"
        };
        document.site.openAuthoringPage(false);
        page.pageViewSelector.onViewDeleted(selectedView);
        page.showDiagnoses({
            $diagnoses: [$diagnose]
        });
    }
}

exports.onApplyChange = function(newData, awContext){
    if (newData.$actions.saveAs) {
        _onSaveAs(awContext, newData);
    }
    if (newData.$actions.$save) {
        _onSave(awContext, newData);
    }
    if (newData.$actions.$delete) {
        _onDelete(awContext, newData);
        return false;
    }
    return true;
};

exports.onMenuClick = function(awContext, menuItem){
    var authorPage = awContext.authorPage;
    switch (menuItem.$item.$bind) {
        case "$delete":
            var selectedView = authorPage.targetPage.pageViewSelector.getSelected();
            document.site.showMessage({
                $title: authorPage.localize.aw_deleteMessageTitle,
                $message: authorPage.localize.aw_deleteMessageText.replace("{0}", "'" + selectedView.$title + "'"),
                $type: "question",
                $buttons: "yesno",
                callback: function(response){
                    if (response.$id == "yes") {
                        authorPage.deletedView = selectedView;
                        document.controller.executeMenu(menuItem);
                    }
                }
            });
            return false;
            break;
        case "$close":
            if (authorPage.isUpdated) {
                document.site.showMessage({
                    $title: authorPage.localize.aw_updateMessageTitle,
                    $message: authorPage.localize.aw_cancelMessageText,
                    $type: "question",
                    $buttons: "yesnocancel",
                    callback: function(response){
                        if (response.$id == "yes") {
                            authorPage.menuItems.$save[0].click();
                        }
                        else {
                            if (response.$id == "no") {
                                var $item = helpers.object.clone(authorPage.getPageContext().$sourceItem, true);
                                authorPage.targetPage.reloadLayout($item);
                                document.site.openAuthoringPage(false);
                            }
                        }
                    }
                });
            }
            else {
                document.site.openAuthoringPage(false);
            }
            return false;
        default:
            if (menuItem.$sourceBind == "$aw_quit") {
                authorPage.targetPage.showDiagnoses(null);
                document.site.openAuthoringPage(false);
                return false
            }
            break;
    }
    return true;
};
