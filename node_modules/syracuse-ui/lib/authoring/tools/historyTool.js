"use strict";
var helpers = require('syracuse-core/lib/helpers');

var _$steps = ["previousLayout", "nextLayout", "undoAllLayout"];

function _showButtons(tool) {
	tool._btns = {};
	for (var ii = 0, jj = _$steps.length; ii < jj; ii++) {
		var $step = _$steps[ii];
		var btn;
		if ($step == "undoAllLayout") {
			btn = syra_menus.addTextButton(syra_local.aw_undoAllLayout, "s-design-history-btn s-disabled", $step);
		} else {
			btn = syra_menus.addIconButton(syra_local["aw_" + $step], "s-design-history-btn-icon s-disabled", $step);
			btn.style.backgroundImage = "url('/syracuse-ui/themes/desktop/sage/images/authoring/s-aw-" + $step + ".png')";
			if (syra_site.isDocumentRTL) {
				btn.className += " s-rtl-img ";
			}
		}
		btn.syraTool = tool.id;
		tool._btns[$step] = btn;
		tool.designer.historySlot && tool.designer.historySlot.appendChild(btn);
	}
}


function HistoryTool() {}

exports.HistoryTool = helpers.defineClass(HistoryTool, null, {
	load: function(designer) {
		this.designer = designer;
		this.id = designer.id + "historytool";
		syra_store.add(this);
		this.$sourceItem = helpers.object.clone(this.designer.designedArticle.$item, true);
		this._notifySteps();
		_showButtons(this);
	},
	getCurrentStep: function() {
		return this._steps[this._currentStep];
	},
	notifyUpdate: function(isUpdated) {
		this.isUpdated = isUpdated !== false;
		this._notifySteps();
	},
	_notifySteps: function(resetUpdates) {
		if (!resetUpdates && this.isUpdated) {
			if (this._currentStep != this._steps.length - 1) {
				this._steps.splice(this._currentStep + 1);
			}
			var $article = helpers.object.clone(this.designer.designedArticle.$item, true);
			this._steps.push($article);
			this.designer.applyChangeToMobile($article);
			this._currentStep = this._steps.length - 1;
		} else {
			(this._steps = []).push(this.$sourceItem);
			this._currentStep = 0;
		}
		this.refreshStepLinks();
	},
	copyContext: function(target) {
		target._steps = this._steps;
		target.$sourceItem = this.$sourceItem;
		target._currentStep = this._currentStep;
		target.isUpdated = this.isUpdated;
		target.refreshStepLinks();
	},

	refreshStepLinks: function() {
		if (this._btns) {
			if (this._steps.length > 1) {
				syra_menus.setButtonTitle(this._btns.previousLayout, syra_local.aw_previousLayoutOn.replace("{0}", this._currentStep).replace("{1}", this._steps.length));
				this._btns.previousLayout.className = "s-design-history-btn-icon" + (this._currentStep == 0 ? " s-disabled" : "");
				if (this._currentStep == this._steps.length - 1) {
					syra_menus.setButtonTitle(this._btns.nextLayout, syra_local.aw_nextLayout);
					this._btns.nextLayout.className = "s-design-history-btn-icon s-disabled";
				} else {
					syra_menus.setButtonTitle(this._btns.nextLayout, syra_local.aw_nextLayoutOn.replace("{0}", this._currentStep + 1).replace("{1}", this._steps.length));
					this._btns.nextLayout.className = "s-design-history-btn-icon";
				}
				this._btns.undoAllLayout.className = "s-design-history-btn";
			} else {
				if (this._btns.nextLayout) {
					syra_menus.setButtonTitle(this._btns.nextLayout, syra_local.aw_nextLayout);
					this._btns.previousLayout.className = "s-design-history-btn-icon s-disabled";
					this._btns.nextLayout.className = "s-design-history-btn-icon s-disabled";
					this._btns.undoAllLayout.className = "s-design-history-btn s-disabled";
				}
			}
			if (syra_site.isDocumentRTL && this._btns.nextLayout) {
				this._btns.previousLayout.className += " s-rtl-img ";
				this._btns.nextLayout.className += " s-rtl-img ";
			}
		}
	},
	previousLayout: function() {
		if (this._currentStep) {
			this._currentStep--;
			this.onAfterStepChange();
		}
	},
	nextLayout: function() {
		if ((this._currentStep + 1) < this._steps.length) {
			this._currentStep++;
			this.onAfterStepChange();
		}
	},
	undoAllLayout: function() {
		var self = this;
		syra_diagnose.showBox({
			$title: syra_local.aw_updateMessageTitle,
			$message: syra_local.aw_confirmUndoAll,
			$type: "question",
			$buttons: "yesno",
			callback: function(response) {
				if (response.$clientId == "yes") {
					self._currentStep = 0;
					self._notifySteps(true);
					self.onAfterStepChange();
				}
			}
		});
	},
	onAfterStepChange: function($item) {
		try {
			syra_site.uiLocker.lock();
			var $bind = this.designer.designedItem.$item.$bind;
			var $article = helpers.object.clone($item || this.getCurrentStep(), true);
			var newList = this.designer.designedArticle.reloadLayout($article);
			var designer = newList ? newList.designer : this.designer;
			designer.historyTool.refreshStepLinks();
			var itemToSelect = null;
			if ($bind) {
				var bounds = designer.designedArticle.boundFields[$bind];
				if (bounds) {
					for (var ii = 0, jj = bounds.length; ii < jj; ii++) {
						var bound = bounds[ii];
						if (bound && !bound.disposed && bound.layoutParent) {
							itemToSelect = bound;
							break;
						}
					}
				}
			}
			if (designer.designedArticle.page.garbage) {
				designer.designedArticle.page.garbage.loadFreeField();
			}
			designer.applyChangeToMobile($article);
			if (designer.onEndHistoryChangeStep) {
				designer.onEndHistoryChangeStep(itemToSelect || designer.designedArticle);
			}
		} finally {
			syra_site.uiLocker.unlock();
		}
	},
	dispose: function() {
		syra_store.remove(this);
		this._btns = this.designer = this._steps = this.$sourceItem = null;
	}
});