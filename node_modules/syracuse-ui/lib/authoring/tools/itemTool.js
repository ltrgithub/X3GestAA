"use strict";
var helpers = require('syracuse-core/lib/helpers');
var ItemDDAgent = require("syracuse-ui/lib/authoring/tools/itemDDAgent").ItemDDAgent;
var RowResizer = require("syracuse-ui/lib/authoring/tools/rowResizer").RowResizer;

function ItemTool() {}

exports.ItemTool = helpers.defineClass(ItemTool, null, {
	load: function(designer, $stepSkin) {
		this.designer = designer;
		document.site.ddManager.togglePageObserver(this, true);
		this.bindEvents(true);
	},

	_findTopDesignedITem: function(item) {
		var designedItem = item;
		while (designedItem && designedItem.articleParent != this.designer.designedArticle) {
			designedItem = designedItem.articleParent;
		}
		return designedItem || this.designer.designedArticle;
	},
	isDraggable: function(target, event) {
		if (target.syraSepType && target.syraSepType == "row") {
			return target;
		}
		var item = this.designer.findItem(target, undefined, event);
		return (item && (item.$awAddNewItem || (item != this.designer.designedArticle.page && item.page == this.designer.designedArticle.page))) ? item : null;
	},
	onDragMove: function(target, event) {
		if (document.site.ddManager.ddAgent && document.site.ddManager.ddAgent.designer != this.designer) {
			return true;
		}
		if (document.site.ddManager.dropableItem) {
			if (document.site.ddManager.dropableItem.syraSepType == "row") {
				var item = this.designer.findItem(target, undefined, event);
				if (item && !item.articleParent || (item.articleParent == this.designer.designedArticle)) {
					document.site.ddManager.start(this, RowResizer, this.designer.designedArticle.page.scrollview);
					return;
				}
				return true;
			}
		}
		if (target.className && target.className.indexOf && (target.className.indexOf("s-aw-item") >= 0 || target.className.indexOf("s-aw-add-item") >= 0)) {
			var item = this.designer.findItem(target, undefined, event);
			if (item) {
				if ((!item.articleParent || (item.articleParent == this.designer.designedArticle))) {
					if (item != this.designer.designedArticle.page) {
						if (document.site.ddManager.dropableItem) {
							document.site.ddManager.start(this, ItemDDAgent, this.designer.designedArticle.page.scrollview);
						} else {
							var className = event.target && event.target.className;
							if (className && className.indexOf &&
								(className.indexOf("s-aw-slot-sep-row") >= 0 ||
									className.indexOf("s-aw-slot-sep-stack") >= 0)) {
								item = this.designer.findItem(event.target, undefined, event);
							}
							if (document.site.ddManager.ddAgent) {
								document.site.ddManager.ddAgent.onDragMouseMove(target, event, item);
							}
						}
					}
					this.designer.uiSwitchTool.toggleOverItem(item, true);
					return false;
				}
			}
			if (document.site.ddManager.ddAgent) {
				return false;
			}
		}
		return true;
	},
	onClickItem: function(item, target, article) {
		article = article || document.site.itemHelper.findArticle(target);
		if (article.isDesigned || article.page.isDesigned) {
			var syraIsDesignEnable = target.syraIsDesignEnable === true;
			if (document.site.ddManager.ddAgent) {
				document.site.onBeforClick();
			} else {
				document.site.onBeforClick();
				if (article.page.isDesigned && article != this.designer.designedArticle) {
					article = article.page;
				}
				if (article.isDesigned) {
					document.site.ddManager.cancel();
					item = item || this.designer.findItem(target);
					if (item) {
						if (item.$item.$syraIsDesignEnable) {
							syraIsDesignEnable = true;
						}
						if (item.isSpaceBox) {
							item = item.boxParent;
						}
						if (item.isMenuGroup && item.contextField) {
							return false;
						}
						if (item && (item != this.designer && item.page != this.designer)) {
							if (this.designer.selectItem) {
								this.designer.selectItem(this._findTopDesignedITem(item), true);
							}
						}
					}
				}
			}
			return article.page.isLandingPage || syraIsDesignEnable;
		}
		return true;
	},
	bindEvents: function(bind) {
		var self = this;
		if (bind) {
			if (!self.eventNamespace) {
				self.eventNamespace = ".designer" + self.designer.id;
				document.site.$$layoutSlot.delegate(".s-aw-item", "click" + self.eventNamespace, function(event) {
					self.onClickItem(self.designer.findItem(this), this);
					return false;
				});
			}
		} else {
			if (self.eventNamespace) {
				document.site.$$layoutSlot.undelegate(self.eventNamespace);
				delete self.eventNamespace;
			}
		}
	},
	dispose: function() {
		if (this.designer) {
			this.bindEvents(false);
			document.site.ddManager.togglePageObserver(this, false);
		}
		this.designer = null;
	}
});