"use strict";
var helpers = require('syracuse-core/lib/helpers');
var TemplatesTool = require("syracuse-ui/lib/authoring/tools/templatesTool").TemplatesTool;


function LandingPageTemplatesTool() {}

exports.LandingPageTemplatesTool = helpers.defineClass(LandingPageTemplatesTool, TemplatesTool, {
	load: function(designer) {
		this.countTemplates = {
			2: ["2-1", "2-2"],
			3: ["3-1", "3-2", "3-3", "3-4"],
			4: ["4-1", "4-2", "4-3"],
			5: ["5-1", "5-2", "5-3"],
			6: ["6-1", "6-2"]
		};
		this.defaultTemplates = ["rows", "3cols", "4cols", "mixt"];
		TemplatesTool.prototype.load.call(this, designer);
	},
	addModelLinks: function(section, awItem) {
		var colCount = awItem.layoutContent.getColumnsCount();
		var fields = awItem.layoutContent.getFields();
		section.dataStore = section.dataStore || {};
		if (!section.dataStore.modelSlot) {
			section.dataStore.modelSlot = document.createElement("div");
			section.body.appendChild(section.dataStore.modelSlot);
		}
		document.site.emptyDom(section.dataStore.modelSlot);
		var count = fields.length;
		if (count > 1) {
			//for (var mm = 2; mm <= 6; mm++) {
			//count = mm;
			var templates = this.countTemplates[count] || this.defaultTemplates;
			var slot = document.createElement("div");
			slot.className = "s-aw-template-row";
			for (var ii = 0, jj = templates.length; ii < jj; ii++) {
				this._addModelLink(templates[ii], slot).syraFieldsCount = count;
			}
			section.dataStore.modelSlot.appendChild(slot);
			//}
			this.addColsCountLinks(section, awItem, colCount, 3);
		}
	},
	onTemplateChoiceClick: function(picker, awItem) {
		if (picker.syraFieldsCount) {
			var funcName;
			var templates = this.countTemplates[picker.syraFieldsCount];
			if (templates) {
				funcName = picker.syraFieldsCount;
			} else {
				templates = this.defaultTemplates;
				funcName = picker.syraTemplate;
			}
			var fields = awItem.layoutContent.getFields();
			awItem.layoutContent.extractItems(fields);
			this["build_" + funcName](awItem, picker.syraTemplate, fields);
			return awItem;
		}
		return TemplatesTool.prototype.onTemplateChoiceClick.call(this, picker, awItem);
	},
	build_2: function(awItem, template, fields) {
		var prevLayout = this._createLayout(awItem, (template == "2-1") ? {
			$layoutType: "stack",
			$items: []
		} : {
			$layoutType: "row",
			$widths: "50,50",
			$items: []
		});
		awItem.layoutContent.newLoadChildItems(fields);
		document.site.removeDomChild(prevLayout);
	},
	build_3: function(awItem, template, fields) {
		var prevLayout;
		switch (template) {
			case "3-1":
				prevLayout = this._createLayout(awItem, {
					$layoutType: "stack",
					$items: [{
						$layoutType: "row",
						$widths: "50,50",
						$items: []
					}]
				});
				awItem.layoutContent.items[0].removeSpaceBox(true);
				awItem.layoutContent.items[0].newLoadChildItems(fields.splice(0, 2));
				awItem.layoutContent.newLoadChildItems(fields);
				break;
			case "3-2":
				prevLayout = this._createLayout(awItem, {
					$layoutType: "row",
					$widths: "50,50",
					$items: []
				});
				awItem.layoutContent.loadChildItem(null, {
					$layoutType: "stack",
					$items: []
				}).newLoadChildItems(fields.splice(0, 2));
				awItem.layoutContent.newLoadChildItems(fields);
				break;
			case "3-3":
				prevLayout = this._createLayout(awItem, {
					$layoutType: "row",
					$widths: "50,50",
					$items: []
				});
				awItem.layoutContent.newLoadChildItems(fields.splice(0, 1));
				awItem.layoutContent.loadChildItem(null, {
					$layoutType: "stack",
					$items: []
				}).newLoadChildItems(fields);
				break;
			case "3-4":
				prevLayout = this._createLayout(awItem, {
					$layoutType: "stack",
					$items: []
				});
				awItem.layoutContent.newLoadChildItems(fields.splice(0, 1));
				var row = awItem.layoutContent.loadChildItem(null, {
					$layoutType: "row",
					$widths: "50,50",
					$items: []
				});
				row.removeSpaceBox(true);
				row.newLoadChildItems(fields);
				break;
		}
		document.site.removeDomChild(prevLayout);
	},
	build_4: function(awItem, template, fields) {
		var prevLayout;
		switch (template) {
			case "4-1":
				prevLayout = this._createLayout(awItem, {
					$layoutType: "stack",
					$items: [{
						$layoutType: "row",
						$widths: "50,50",
						$items: []
					}, {
						$layoutType: "row",
						$widths: "50,50",
						$items: []
					}]
				});
				var row = awItem.layoutContent.items[0];
				row.removeSpaceBox(true);
				row.newLoadChildItems(fields.splice(0, 2));
				row = awItem.layoutContent.items[1];
				row.removeSpaceBox(true);
				row.newLoadChildItems(fields);
				break;
			case "4-2":
				prevLayout = this._createLayout(awItem, {
					$layoutType: "stack",
					$items: []
				});
				awItem.layoutContent.newLoadChildItems(fields.splice(0, 1));
				var row = awItem.layoutContent.loadChildItem(null, {
					$layoutType: "row",
					$widths: "33,33,33",
					$items: []
				});
				row.removeSpaceBox(true);
				row.newLoadChildItems(fields);
				break;
			case "4-3":
				prevLayout = this._createLayout(awItem, {
					$layoutType: "stack",
					$items: [{
						$layoutType: "row",
						$widths: "33,33,33",
						$items: []
					}]
				});
				var row = awItem.layoutContent.items[0];
				row.removeSpaceBox(true);
				row.newLoadChildItems(fields.splice(0, 3));
				awItem.layoutContent.newLoadChildItems(fields);
				break;

		}
		document.site.removeDomChild(prevLayout);
	},
	build_5: function(awItem, template, fields) {
		var prevLayout;
		switch (template) {
			case "5-1":
				prevLayout = this._createLayout(awItem, {
					$layoutType: "row",
					$widths: "50,50",
					$items: [{
						$layoutType: "stack",
						$items: []
					}, {
						$layoutType: "stack",
						$items: []
					}]
				});
				awItem.layoutContent.items[0].newLoadChildItems(fields.splice(0, 2));
				awItem.layoutContent.items[1].newLoadChildItems(fields);
				break;
			case "5-2":
				prevLayout = this._createLayout(awItem, {
					$layoutType: "stack",
					$items: [{
						$layoutType: "row",
						$widths: "33,33,33",
						$items: []
					}, {
						$layoutType: "row",
						$widths: "50,50",
						$items: []
					}]
				});
				var row = awItem.layoutContent.items[0];
				row.removeSpaceBox(true);
				row.newLoadChildItems(fields.splice(0, 3));
				row = awItem.layoutContent.items[1];
				row.removeSpaceBox(true);
				row.newLoadChildItems(fields);
				break;
			case "5-3":
				prevLayout = this._createLayout(awItem, {
					$layoutType: "stack",
					$items: []
				});
				awItem.layoutContent.newLoadChildItems(fields.splice(0, 1));
				var row = awItem.layoutContent.loadChildItem(null, {
					$layoutType: "row",
					$widths: "50,50",
					$items: []
				});
				row.removeSpaceBox(true);
				row.newLoadChildItems(fields.splice(0, 2));
				var row = awItem.layoutContent.loadChildItem(null, {
					$layoutType: "row",
					$widths: "50,50",
					$items: []
				});
				row.removeSpaceBox(true);
				row.newLoadChildItems(fields);
				break;

		}
		document.site.removeDomChild(prevLayout);
	},
	build_6: function(awItem, template, fields) {
		var prevLayout;
		switch (template) {
			case "6-1":
				prevLayout = this._createLayout(awItem, {
					$layoutType: "stack",
					$items: [{
						$layoutType: "row",
						$widths: "50,50",
						$items: []
					}, {
						$layoutType: "row",
						$widths: "50,50",
						$items: []
					}, {
						$layoutType: "row",
						$widths: "50,50",
						$items: []
					}]
				});
				var row = awItem.layoutContent.items[0];
				row.removeSpaceBox(true);
				row.newLoadChildItems(fields.splice(0, 2));
				row = awItem.layoutContent.items[1];
				row.removeSpaceBox(true);
				row.newLoadChildItems(fields.splice(0, 2));
				row = awItem.layoutContent.items[2];
				row.removeSpaceBox(true);
				row.newLoadChildItems(fields.splice(0, 2));
				break;
			case "6-2":
				prevLayout = this._createLayout(awItem, {
					$layoutType: "stack",
					$items: [{
						$layoutType: "row",
						$widths: "33,33,33",
						$items: []
					}, {
						$layoutType: "row",
						$widths: "33,33,33",
						$items: []
					}]
				});
				var row = awItem.layoutContent.items[0];
				row.removeSpaceBox(true);
				row.newLoadChildItems(fields.splice(0, 3));
				row = awItem.layoutContent.items[1];
				row.removeSpaceBox(true);
				row.newLoadChildItems(fields.splice(0, 3));
				break;

		}
		document.site.removeDomChild(prevLayout);
	},
	build_rows: function(awItem, template, fields) {
		document.site.removeDomChild(prevLayout);
	},
	build_3cols: function(awItem, template, fields) {
		this.splitInColumns(awItem, fields, 3);
	},
	build_4cols: function(awItem, syraTemplate, fields) {
		this.splitInColumns(awItem, fields, 4);
	},

	build_mixt: function(awItem, syraTemplate, fields) {
		this._applyMixtModel(awItem, fields);
	}
});