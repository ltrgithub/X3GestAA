"use strict";
var helpers = require('syracuse-core/lib/helpers');

function DesignerTemplates() {}

exports.DesignerTemplates = helpers.defineClass(DesignerTemplates, null, {
	load: function(designer) {
		this.designer = designer;
	},
	dispose: function() {
		this.designer = null;
	},
	_applyArticleSmartModel: function(article) {
		var children = article.layoutContent.extractItems();
		article.layoutContent.clearContent();
		var prevLayout = article.layoutContent._item;
		article.$item.$layout = {
			$layoutType: "stack",
			$items: []
		};
		article.renderLayoutContent();
		article.layoutContent.clearContent();
		if (children.length > 0) {
			article.layoutContent.ensureSection(children[0]);
			if (children.length > 1) {
				if (children.length > 2) {
					var tabs = article.layoutContent.loadChildItem(null, {
						$layoutType: "tabs",
						$items: []
					});
					for (var ii = 1, jj = children.length - 1; ii < jj; ii++) {
						tabs.ensureSection(children[ii]);
					}
				}
				article.layoutContent.ensureSection(children[children.length - 1]);
			}
		}
		children = article.layoutContent.getItems();
		for (var ii = 0, jj = children.length; ii < jj; ii++) {
			this._applySectionSmartModel(children[ii]);
		}
		document.site.removeDomChild(prevLayout);
	},
	_applySectionSmartModel: function(section) {
		var children = section.layoutContent.extractItems();
		section.layoutContent.clearContent();
		var prevLayout = section.layoutContent._item;
		if (children.length > 0) {
			var $rows = [];
			var colIndex = 0;
			for (var ii = 0, jj = children.length; ii < jj; ii++) {
				colIndex++;
				if (children[ii].isSection) {
					var subChildren = children[ii].layoutContent.getItems();
					if (subChildren && subChildren.length > 0) {
						if (subChildren[0].$field && subChildren[0].$field.$type == "application/x-array") {
							$rows.push({
								$layoutType: colIndex > 1 ? "row" : "stack",
								$items: []
							});
							colIndex = 1;
						}
					}
				} else {
					if (children[ii].$field && children[ii].$field.$type == "application/x-array") {
						if (colIndex > 1) {
							$rows.push({
								$layoutType: "row",
								$items: []
							});
						}
						$rows.push({
							$layoutType: "stack",
							$items: []
						});
						colIndex = 0;
					}
				}
				if (colIndex == 3) {
					$rows.push({
						$layoutType: "row",
						$items: []
					});
					colIndex = 0;
				}
			}
			if (colIndex) {
				$rows.push({
					$layoutType: colIndex > 1 ? "row" : "stack",
					$items: []
				});
			}
			if ($rows.length == 1) {
				section.$item.$layout = $rows[0];
				section.renderLayoutContent();
				section.layoutContent.removeSpaceBox(true);
				section.layoutContent.newLoadChildItems(children);
			} else {
				section.$item.$layout = {
					$layoutType: "stack",
					$items: $rows
				};
				section.renderLayoutContent();
				var rowIndex = colIndex = 0;
				for (var ii = 0, jj = children.length; ii < jj; ii++) {
					colIndex++;
					if (children[ii].isSection) {
						var subChildren = children[ii].layoutContent.getItems();
						if (subChildren && subChildren.length > 0) {
							if (subChildren[0].$field && subChildren[0].$field.$type == "application/x-array") {
								rowIndex++;
								colIndex = 1;
							}
						}
					} else {
						if (children[ii].$field && children[ii].$field.$type == "application/x-array") {
							if (colIndex > 1) {
								rowIndex++;
							}
							colIndex = 3;
						}
					}
					section.layoutContent.items[rowIndex].removeSpaceBox(true);
					section.layoutContent.items[rowIndex].loadChildItem(children[ii]);
					if (colIndex == 3) {
						rowIndex++;
						colIndex = 0;
					}
				}
			}
		}

		children = section.layoutContent.getItems();
		for (var ii = 0, jj = children.length; ii < jj; ii++) {
			if (children[ii].isSection) {
				this._applySectionSmartModel(children[ii]);
			}
		}
		document.site.removeDomChild(prevLayout);
	},
	_applyPageFactoryModel: function(page) {
		var children = page.layoutContent.extractItems();
		page.layoutContent.clearContent();
		var prevLayout = page.layoutContent._item;
		page.$item = helpers.object.clone(page.ensureDefaultArticle(page.$prototype.$article, page.$prototype), true);
		page.reloadLayout(page.$item);
	},
	_applySectionColumnsModel: function(section, children, maxCols) {
		section.$item.$layout = {
			$layoutType: "row",
			$items: []
		};
		var width = Math.ceil(100 / maxCols);
		var widths = [];
		for (var ii = 0; ii < maxCols; ii++) {
			widths.push(width);
		}
		section.$item.$layout.$widths = widths.join(",");
		if (children.length > maxCols) {
			for (var ii = 0; ii < maxCols; ii++) {
				section.$item.$layout.$items.push({
					$layoutType: "stack",
					$items: []
				});
			}
		}
		section.renderLayoutContent();
		if (children.length > maxCols) {
			var colIndex = 0;
			for (var ii = 0, jj = children.length; ii < jj; ii++) {
				section.layoutContent.items[colIndex++].loadChildItem(children[ii]);
				if (colIndex == (maxCols - 1)) {
					colIndex = 0;
				}
			}
		} else {
			section.layoutContent.clearContent();
			section.layoutContent.newLoadChildItems(children);
		}
	},
	_applySectionModel: function(section, $model) {
		var children = section.layoutContent.extractItems();
		var prevLayout = section.layoutContent._item;
		section.layoutContent.clearContent();
		switch ($model) {
			case "$model_rows":
				section.$item.$layout = {
					$layoutType: "stack",
					$items: []
				};
				section.renderLayoutContent();
				section.layoutContent.newLoadChildItems(children);
				break;
			case "$model_3cols":
				this._applySectionColumnsModel(section, children, 3);
				break;
			case "$model_4cols":
				this._applySectionColumnsModel(section, children, 4);
				break;
			case "$model_mixt":
				section.$item.$layout = {
					$layoutType: "row",
					$widths: "50,50",
					$items: []
				};
				section.renderLayoutContent();
				section.layoutContent.clearContent();
				if (children.length) {
					section.layoutContent.loadChildItem(children[0]);
					if (children.length > 2) {
						section.layoutContent.loadChildItem(null, {
							$layoutType: "stack",
							$items: []
						}).newLoadChildItems(children, 1);
					} else {
						section.layoutContent.loadChildItem(children[1]);
					}
				}
				break;
			case "$model_tabs":
				section.$item.$layout = {
					$layoutType: "tabs",
					$items: []
				};
				section.renderLayoutContent();
				section.layoutContent.clearContent();
				for (var ii = 0, jj = children.length; ii < jj; ii++) {
					section.layoutContent.ensureSection(children[ii]);
				}
				break;
		}
		document.site.removeDomChild(prevLayout);
	},
	_addModelLink: function($model, slot, isTextIcon) {
		var link = document.createElement("a");
		link.title = this.designer.designerLocalize["aw_model_" + $model];
		link.setAttribute("data-s-picker", "$model_" + $model);
		link.className = "s-aw-model";
		var img = document.createElement("div");
		img.className = "s-aw-model-icon";
		img.style.backgroundImage = "url('/syracuse-ui/themes/desktop/sage/images/authoring/s-aw-model-" + $model + ".png')";
		link.appendChild(img);
		if (isTextIcon) {
			var label = document.createElement("div");
			label.className = "s-aw-model-label";
			label.textContent = link.title;
			link.appendChild(label);
		} else {
			link.className += " s-icon";
		}
		return slot.appendChild(link);
	},
	addModelLinks: function(section, awItem, colCount, awLayout) {
		section.dataStore = section.dataStore || {};
		if (!section.dataStore.modelSlot) {
			section.dataStore.modelSlot = document.createElement("div");
			section._body.appendChild(section.dataStore.modelSlot);
		}
		document.site.emptyDom(section.dataStore.modelSlot);
		if (!awItem.isField) {
			if (awItem.$designLevel == "article") {
				var slot = document.createElement("div");
				slot.className = "s-aw-model-row";
				this._addModelLink("smart", slot, true);
				section.dataStore.modelSlot.appendChild(slot);
				slot = document.createElement("div");
				slot.className = "s-aw-model-row";
				this._addModelLink("factory", slot, true);
				section.dataStore.modelSlot.appendChild(slot);
			}
			var slot = document.createElement("div");
			slot.className = "s-aw-model-row";
			if (awItem.$designLevel == "article" || awItem.$designLevel == "section") {
				this._addModelLink("tabs", slot);
			}
			this._addModelLink("rows", slot);
			this._addModelLink("3cols", slot);
			this._addModelLink("4cols", slot);
			this._addModelLink("mixt", slot);
			section.dataStore.modelSlot.appendChild(slot);
		}
		var css = "s-aw-cols-link " + (awItem.$designLevel == "field" ? "" : "s-aw-row-box");
		if (!section.dataStore.colChoices) {
			section.dataStore.colChoices = {};
			var row = document.createElement("div");
			row.className = "s-aw-cols";
			var cell = document.createElement("div");
			cell.className = "s-aw-cols-label";
			cell.textContent = this.designer.designerLocalize.aw_columns;
			row.appendChild(cell);

			for (var ii = 1; ii <= 6; ii++) {
				var link = document.createElement("a");
				link.textContent = link.$syraCoCount = ii;
				link.className = css;
				link.setAttribute("data-s-picker", "$colcount");
				row.appendChild(section.dataStore.colChoices[ii] = link);
			}
			section._body.appendChild(row);
		}
		for (var ii = 1; ii <= 6; ii++) {
			section.dataStore.colChoices[ii].className = css + (colCount == ii ? " s-selected" : "");
		}
	},
	fillTabChoice: function(section, awItem) {
		var title = this.designer.designerLocalize.aw_showAs;
		var value = awItem.isTabLayout ? "tabs" : "stack";
		var isLinkDisabled = false;
		var links = ["tabs", "stack"];
		section.dataStore = section.dataStore || {};

		if (!section.dataStore.tabChoice) {
			section.dataStore.tabChoice = {};
			var row = document.createElement("div");
			row.className = "s-aw-tab-choices";
			var cell = document.createElement("div");
			cell.className = "s-aw-tab-choices-label";
			section.dataStore.tabChoice.label = cell;
			row.appendChild(cell);

			for (var ii = 0, jj = links.length; ii < jj; ii++) {
				var link = document.createElement("a");
				section.dataStore.tabChoice[link.$syraValue = links[ii]] = link;
				link.title = this.designer.designerLocalize["aw_section_" + link.$syraValue];
				link.className = "s-aw-tab-choice";
				link.setAttribute("data-s-picker", "$boxTabChoice");
				var img = document.createElement("div");
				img.className = "s-aw-tab-choice-icon";
				img.style.backgroundImage = "url('/syracuse-ui/themes/desktop/sage/images/authoring/s-layout-" + link.$syraValue + ".png')";
				link.appendChild(img);
				row.appendChild(link);
			}
			section._body.appendChild(row);
		}

		section.dataStore.tabChoice.label.textContent = title;
		for (var ii = 0, jj = links.length; ii < jj; ii++) {
			var link = section.dataStore.tabChoice[links[ii]];
			link.className = "s-aw-tab-choice" + (value == links[ii] ? " s-selected" : "");
			document.site.disableItem(link, isLinkDisabled);
		}
	},
	onTemplateChoiceClick: function(picker, awItem, awLayout) {
		var $bind = picker.getAttribute("data-s-picker");
		if ($bind.indexOf("$model_") == 0) {
			switch ($bind) {
				case "$model_smart":
					this._applyArticleSmartModel(awItem.page);
					break;
				case "$model_factory":
					this._applyPageFactoryModel(awItem.page);
					break;
				default:
					this._applySectionModel(awItem, $bind);
					break;
			}
			return awItem;
		} else {
			switch ($bind) {
				case "$boxTabChoice":
					if (awItem.layoutParent.$layoutType != picker.$syraValue) {
						if (awItem.layoutParent.items.length == 1) {
							awItem.layoutParent.convertToNewLayout({
								$layoutType: picker.$syraValue
							});
						} else {
							var layoutRoot = awItem.layoutParent;
							if (picker.$syraValue != "stack") {
								var layoutTab = layoutRoot.wrapIntack([awItem], layoutRoot.$layout.$items.indexOf(awItem.$item));
								layoutTab.convertToNewLayout({
									$layoutType: "tabs"
								});
							}
						}
						return awItem;
					}
					break;
				case "$colcount":
					var layout = awLayout ? awLayout : awItem.layoutContent;
					if (awItem.$designLevel == "field") {
						layout = awItem.layoutParent.wrapIntack([awItem], awItem.layoutParent.items.indexOf(awItem));
						layout.removeSpaceBox(true);
					}
					var $widths = ["100", "50,50", "33,33,33", "25,25,25,25", "20,20,20,20,20", "17,17,16,16,17,17"][picker.$syraCoCount - 1];
					layout.convertToNewLayout({
						$layoutType: $widths == "100" ? "stack" : "row",
						$widths: $widths
					});
					return awItem;
			}
		}
		return null;
	}
});