"use strict";
var helpers = require('syracuse-core/lib/helpers');

function DesignerUISwitch() {}

exports.DesignerUISwitch = helpers.defineClass(DesignerUISwitch, null, {
	load: function(designer) {
		this.designer = designer;

	},
	toggleItemAuthoring: function(item, enable) {
		var site = document.site;
		if (item == this.designer.awArticle) {
			if (item.menuBar) {
				item.menuBar.toggleItemAuthoring(enable || this.designer.tools.views.isOnPreviewMode, this.designer.tools.views.isOnPreviewMode);
			}
			if (item.fusionBar) {
				item.fusionBar.toggleItemAuthoring(enable || this.designer.tools.views.isOnPreviewMode, this.designer.tools.views.isOnPreviewMode);
			}

		}
		if (!enable && item.loadPageViewSelector) {
			item.loadPageViewSelector();
		}
		if (item.articleParent && item.articleParent != this.designer.awArticle.page) {
			return;
		}
		if ((item.$item && item.$item.$isAuthoringEnabled === false) || (item.boxParent && item.boxParent.$item.$isAuthoringEnabled === false)) {
			return;
		}
		item.isAuthingEnabled = enable;
		if (item.isSpaceBox) {
			if (enable) {
				if (!item.deleteLink) {
					if (item.boxParent.$designLevel == "block") {
						item.$designLevel = "field";
					} else {
						var children = item.boxParent.layoutContent ? item.boxParent.layoutContent.getItems() : [];
						if (children.length > 0) {
							item.$designLevel = children[0].$designLevel;
						} else {
							item.$designLevel = item.boxParent.$designLevel == "section" ? "block" : "section";
						}
					}
					item.deleteLink = document.createElement("a");
					item.deleteLink.className = "s-aw-layout-delete";
					item.deleteLink.title = this.designer.designerLocalize.aw_deleteColumn;
					item._body.appendChild(item.deleteLink);
				}
			} else {
				site.removeDomChild(item.deleteLink);
				item.deleteLink = null;
				site.toggleClass(item.layoutSlot, "s-aw-designed", false);
				site.toggleClass(item.layoutSlot, "s-aw-over", false);
			}
			site.toggleClass(item.layoutSlot, "s-aw-item", enable);
		}
		if (item.isTabLayout) {
			if (!item.isLayout && item.isSection && !item.loaded && item.$item.$opened !== false) {
				item.renderLayoutContent();
				item.loaded = true;
			}
		}
		var domItem = item.dataSlot;
		if (!domItem && item.$$item) {
			domItem = item.$$item[0];
		}
		if (domItem) {
			//no domitem for layout
			if (item.tabTitle) {
				if (enable) {
					item.tabTitle.syraAwItemId = item.id;
				} else {
					site.toggleClass(item.tabTitle, "s-aw-designed", false);
					site.toggleClass(item._body, "s-aw-designed", false);
					site.toggleClass(item.tabTitle, "s-aw-over", false);
					site.toggleClass(item._body, "s-aw-over", false);
					delete item.tabTitle.syraAwItemId;
				}
				site.toggleClass(item.tabTitle, "s-aw-item", enable);
				site.toggleClass(item._body, "s-aw-item", enable);
				site.toggleClass(item.tabTitle, "s-aw-light", enable && this.designer.tools.views.$isLightMode);
				site.toggleClass(item._body, "s-aw-light", enable && this.designer.tools.views.$isLightMode);
			}
			if (enable) {
				domItem.syraAwItemId = item.id;
				if (!item.isLayout) {
					item.layoutSlot.syraAwItemId = item.id;
				}
			} else {
				if (domItem) {
					if (item._body) {
						site.toggleClass(item._body, "s-aw-over", false);
						site.toggleClass(item._body, "s-aw-designed", false);
					}
					if (item._header) {
						site.toggleClass(item._header, "s-aw-over", false);
						site.toggleClass(item._header, "s-aw-designed", false);
					}
					site.toggleClass(item.layoutSlot, "s-aw-designed", false);
					site.toggleClass(item.layoutSlot, "s-aw-over", false);
					site.toggleClass(domItem, "s-aw-designed", false);
					site.toggleClass(domItem, "s-aw-over", false);
					domItem.syraAwItemId = item.layoutSlot.syraAwItemId = null;
				}
			}
			if (item.isLayout) {
				if (enable) {
					if (item.$layout.$layoutType == "row") {
						site.toggleClass(item._item, "s-aw-item", true);
						if (item.layoutSlot) {
							site.toggleClass(item.layoutSlot, "s-aw-item", true);
						}
						if (this.designer.tools.views.$isLightMode) {
							var children = item.getItems();
							if (!children.length || children[0].$designLevel == "field") {
								item._item.style.display = "none";
							}
						} else {
							item._item.style.display = "";
						}
					}
				} else {
					site.toggleClass(domItem, "s-aw-item", false);
					if (item.layoutSlot) {
						site.toggleClass(item.layoutSlot, "s-aw-item", false);
					}
					item._item.style.display = "";
				}
			} else {
				if (item.layoutSlot) {
					site.toggleClass(item.layoutSlot, "s-aw-item", enable);
				}
				site.toggleClass(domItem, "s-aw-item", enable);
				site.toggleClass(domItem, "s-aw-light", enable && this.designer.tools.views.$isLightMode);
				this.showHiddenItem(item);
				this.showAdvancedItem(item);
			}
		}
		if (item.rowSeparator) {
			site.toggleClass(item.rowSeparator, "s-aw-slot-sep-" + item.layoutParent.$layout.$layoutType, enable);
			if (item.isLayout) {
				item.rowSeparator.syraAwLayoutId = item.id;
			} else {
				item.rowSeparator.syraAwItemId = item.id;
			}
		}
		if (item.isLayout) {
			if (item.items) {
				for (var ii = 0, jj = item.items.length; ii < jj; ii++) {
					this.toggleItemAuthoring(item.items[ii], enable);
				}
			}
		} else {
			if (item.layoutContent) {
				this.toggleItemAuthoring(item.layoutContent, enable);
			}
		}
	},
	showAdvancedItem: function(item, $isAdvanced) {
		if (item.$designLevel == "field") {
			if ($isAdvanced === undefined) {
				$isAdvanced = item.$item.$isAdvanced;
			}
			if ($isAdvanced !== undefined) {
				var domItem = item._item || item._domItem;
				if (item.layoutSlot) {
					document.site.toggleClass(item.layoutSlot, "s-aw-advanced-visibility-forced", $isAdvanced);
				}
				document.site.toggleClass(domItem, "s-aw-advanced-visibility-forced", $isAdvanced);
				item.showField(true);
				this.showHiddenItem(item);
			}
		}
	},
	showHiddenItem: function(item) {
		if (item.page != item && !item.$item.$isPopupContent) {
			var display = (!item.isAuthingEnabled && (!(item.layoutParent && item.layoutParent.isRow) && (item.$isHidden || item.isItemHidden))) ? "none" : "";
			if (item.layoutSlot) {
				if (this.designer.tools.views.$isLightMode && item.$designLevel == "field") {
					item.layoutSlot.style.display = "none";
					if (item.rowSeparator) {
						item.rowSeparator.style.display = "none";
					}
				} else {
					item.layoutSlot.style.display = display;
					if (item.rowSeparator) {
						item.rowSeparator.style.display = display;
					}
				}
				document.site.toggleClass(item.layoutSlot, "s-aw-visibility-forced", item.isAuthingEnabled && item.$isHidden);
			}
			if (item.tabTitle) {
				item.tabTitle.style.display = display;
			}
			var domItem = item._item || item._domItem;
			if (domItem) {
				if (item.isAuthingEnabled) {
					if (this.designer.tools.views.$isLightMode && item.$designLevel == "field") {
						domItem.style.display = "none";
					} else {
						// domItem.style.display = item.$isHidden ? "none" : "";
						domItem.style.display = "";
					}
					document.site.toggleClass(domItem, "s-aw-visibility-forced", item.$isHidden);
				} else {
					document.site.toggleClass(domItem, "s-aw-visibility-forced", false);
					domItem.style.display = item.$isHidden ? "none" : "";
				}
			}
		}
	},
	toggleOverItem: function(item, isOver) {
		var css = "s-aw-over";
		this._toggleItemCss(item, css, isOver);
		if (isOver && this._overItem != item) {
			if (this._oveItems) {
				for (var ii = 0, jj = this._oveItems.length; ii < jj; ii++) {
					this._toggleItemCss(this._oveItems[ii], css, false);
				}
			}
			this._oveItems = [];
			this._overItem = item;
			while (item) {
				this._toggleItemCss(item, css, true);
				this._oveItems.push(item);
				item = item.boxParent;
			}
		}
	},
	_toggleItemCss: function(item, css, show) {
		if (item.$$item) {
			if (item.tabTitle) {
				document.site.toggleClass(item.tabTitle, css, show);
				document.site.toggleClass(item._body, css, show);
			} else {
				if (item.dataSlot) {
					document.site.toggleClass(item.dataSlot, css, show); //page
				} else {
					if (item.layoutSlot) {
						document.site.toggleClass(item.layoutSlot, css, show);
					}
				}
				if (item.isLayout) {
					document.site.toggleClass(item._item, css, show);
				}
				if (item._header) {
					document.site.toggleClass(item._header, css, show);
				}
				if (item._body) {
					document.site.toggleClass(item._body, css, show);
				}
			}
		}
	},
	dispose: function() {
		this.designer = this._overItem = this._oveItems = null;
	}
});