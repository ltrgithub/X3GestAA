"use strict";
var helpers = require('syracuse-core/lib/helpers');


function ViewsTool() {}

exports.ViewsTool = helpers.defineClass(ViewsTool, null, {
	load: function(designer, $skin) {
		this.designer = designer;
		repository[this.id = designer.id + "viewsTools"] = this;
		this.linksSlot = document.createElement("div");
		this.linksSlot.id = "s-aw-viewType";
		this._links = {};
		this.togglePickers(true, $skin);
		syra_site.dom.toggleClass(this._links[this.$viewType = "viewTypeLayout"], "s-selected", true);
		this.designer.viewsSlot.appendChild(this.linksSlot);
	},
	togglePickers: function(add, $skin) {
		var types = ["viewTypePreview", "viewTypeLayout", "viewTypeStructure", "viewTypeJSON"];
		for (var ii = 0, jj = types.length; ii < jj; ii++) {
			var type = types[ii];
			if (type == "viewTypeJSON" && !syra_site.isMobileSite) {
				continue;
			}
			if (add) {
				var link = document.createElement("a");
				link.syraOnClick = "onViewClick";
				link.syraViewType = type;
				link.syraarticle = this.designer.id;
				link.syraTool = this.id;
				link.className = $skin;
				link.textContent = link.title = this.designer.localize["aw_" + type];
				this.linksSlot.appendChild(this._links[type] = link);
			} else {
				this._links[type] = null;
			}
		}
	},
	ensureLayoutView: function() {
		if (this.$viewType != "viewTypeLayout") {
			this.toggleViewType("viewTypeLayout");
		}
	},
	toggleViewType: function($viewType) {
		if (this.$viewType) {
			syra_site.dom.toggleClass(this._links[this.$viewType], "s-selected", false);
		}
		this.$viewType = $viewType;
		if (this.isJsonMode && this.$viewType != "viewTypeJSON") {
			this.isJsonMode = false;
			syra_site.mobileGateway.toggleJsonEditor(false);
		}

		switch (this.$viewType) {
			case "viewTypeJSON":
				this.isJsonMode = true;
				this.designer.propertiesSlot.style.display = "none";
				this.designer.treesBar.toggleBar(false);
				syra_site.mobileGateway.toggleJsonEditor(true);
				break;
			case "viewTypePreview":
				this.designer.propertiesSlot.style.display = "none";
				this.designer.treesBar.toggleBar(false);
				break;
			default:
				this.designer.propertiesSlot.style.display = "";
				this.designer.treesBar.toggleBar(true);
				break;
		}
		syra_site.dom.toggleClass(this._links[this.$viewType], "s-selected", true);
		this.designer.uiSwitchTool.toggleUIDesign(this.designer.designedArticle, true);
		this.designer.designedArticle.page.ensurePageVisibility();
	},
	onViewClick: function(picker) {
		this.toggleViewType(picker.syraViewType);
	},
	dispose: function() {
		delete repository[this.id];
		this.togglePickers(false);
		this.designer = this._links = this.linksSlot = null;
	}
});