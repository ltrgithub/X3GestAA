"use strict";
var helpers = require('syracuse-core/lib/helpers');

function ViewsTool() {}

exports.ViewsTool = helpers.defineClass(ViewsTool, null, {
	load: function(designer, $skin) {
		this.designer = designer;
		this.linksSlot = document.createElement("div");
		this.linksSlot.id = "s-aw-viewType";
		this._links = {};
		this._appendPicker("viewTypePreview", $skin);
		this._appendPicker("viewTypeLayout", $skin);
		this._appendPicker("viewTypeStructure", $skin);
		if (document.site.isMobileSite) {
			this._appendPicker("viewTypeJSON", $skin);
		}
		document.site.toggleClass(this._links[this.$viewType = "viewTypeLayout"], "s-selected", true);
		this.designer.viewsSlot.appendChild(this.linksSlot);
	},
	_appendPicker: function($type, $skin) {
		var link = document.createElement("a");
		link.setAttribute("data-s-picker", link.syraPickerType = $type);
		link.className = $skin;
		link.textContent = link.title = this.designer.localize["aw_" + $type];
		this.linksSlot.appendChild(this._links[$type] = link);
	},
	ensureLayoutView: function() {
		if (this.$viewType != "viewTypeLayout") {
			this.toggleViewType("viewTypeLayout");
		}
	},
	toggleViewType: function($viewType) {
		if (this.$viewType) {
			document.site.toggleClass(this._links[this.$viewType], "s-selected", false);
		}
		this.$viewType = $viewType;
		if (this.isJsonMode && this.$viewType != "viewTypeJSON") {
			this.isJsonMode = false;
			document.site.mobileGateway.toggleJsonEditor(false);
		}

		switch (this.$viewType) {
			case "viewTypeJSON":
				this.isJsonMode = true;
				this.designer.propertiesSlot.style.display = "none";
				this.treesBar.toggleBar(false);
				document.site.mobileGateway.toggleJsonEditor(true);
				break;
			case "viewTypePreview":
				this.designer.propertiesSlot.style.display = "none";
				this.treesBar.toggleBar(false);
				break;
			default:
				this.designer.propertiesSlot.style.display = "";
				this.treesBar.toggleBar(true);
				break;
		}
		document.site.toggleClass(this._links[this.$viewType], "s-selected", true);
		this.designer.uiSwitchTool.toggleUIDesign(this.designer.designedArticle, true);
		this.designer.designedArticle.page.ensurePageVisibility();
	},
	onClickPicker: function(picker) {
		if ((picker.syraPickerType || "").indexOf("viewType") == 0) {
			this.toggleViewType(picker.syraPickerType);
			return true;
		}
		return false;
	},
	dispose: function() {
		this.designer = this._links = this.linksSlot = null;
	}
});