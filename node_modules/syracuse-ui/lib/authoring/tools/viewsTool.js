"use strict";
var helpers = require('syracuse-core/lib/helpers');

function ViewsTool() {}

exports.ViewsTool = helpers.defineClass(ViewsTool, null, {
	load: function(designer, $skin) {
		this.designer = designer;
		this.drawLinks($skin);
	},
	drawLinks: function($skin) {
		var $types = ["viewTypePreview", "viewTypeLayout", "viewTypeStructure", "viewTypeJSON"];
		var linksSlot = document.createElement("div");
		linksSlot.id = "s-aw-viewType";
		this._links = {};
		for (var ii = 0, jj = $types.length; ii < jj; ii++) {
			var $type = $types[ii];
			if ($type != "viewTypeJSON" || document.site.isMobileSite) {
				var link = document.createElement("a");
				link.setAttribute("data-s-picker", $type);
				link.className = $skin;
				link.textContent = link.title = this.designer.localize["aw_" + $type];
				this._links[$type] = link;
				linksSlot.appendChild(link);
			}
		}
		document.site.toggleClass(this._links[this.$viewType = "viewTypeLayout"], "s-selected", true);
		this.designer.viewsSlot.appendChild(linksSlot);
	},
	ensureLayoutView: function() {
		if (this.$viewType != "viewTypeLayout") {
			this.toggleViewType("viewTypeLayout");
		}
	},
	toggleViewType: function($viewType) {
		if (this.$viewType) {
			document.site.toggleClass(this._links[this.$viewType], "s-selected", false);
		}
		this.$viewType = $viewType;
		var isBarsVisible = true;
		if (this.isOnPreviewMode && this.$viewType != "viewTypePreview") {
			this.isOnPreviewMode = false;
			this.designer.uiSwitchTool.toggleItemAuthoring(this.designer.awArticle.page, true);
		}
		if (this.isJsonMode && this.$viewType != "viewTypeJSON") {
			this.isJsonMode = false;
			document.site.mobileGateway.toggleJsonEditor(false);
		}
		document.site.toggleClass(this._links[this.$viewType], "s-selected", true);
		switch (this.$viewType) {
			case "viewTypeJSON":
				if (this.$isLightMode) {
					this.$isLightMode = false;
				}
				this.isJsonMode = true;
				isBarsVisible = false;
				document.site.mobileGateway.toggleJsonEditor(true);
				break;
			case "viewTypePreview":
				if (!this.isOnPreviewMode) {
					if (this.$isLightMode) {
						this.$isLightMode = false;
						this.designer.uiSwitchTool.toggleItemAuthoring(this.designer.awArticle.page, true);
					}
					this.isOnPreviewMode = true;
				}
				isBarsVisible = false;
				break;
			case "viewTypeStructure":
				if (!this.$isLightMode) {
					this.$isLightMode = true;
				}
				break;
			case "viewTypeLayout":
				if (this.$isLightMode) {
					this.$isLightMode = false;
				}
				break;
		}
		this.designer.treebarSlot.style.display = this.designer.propertiesSlot.style.display = isBarsVisible ? "" : "none";
		this.designer.uiSwitchTool.toggleItemAuthoring(this.designer.awArticle.page, !this.isOnPreviewMode);
		this.designer.awArticle.page.layoutValidator.validate(this.designer.awArticle.page.layoutContent, true);
		this.designer.awArticle.page.onWindowResize();
	},
	onClickPicker: function($bind) {
		switch ($bind) {
			case "viewTypePreview":
			case "viewTypeLayout":
			case "viewTypeStructure":
			case "viewTypeJSON":
				this.toggleViewType($bind);
				break;
			default:
				return false;
		}
		return true;
	},
	dispose: function() {
		this.designer = this._links = null;
	}
});