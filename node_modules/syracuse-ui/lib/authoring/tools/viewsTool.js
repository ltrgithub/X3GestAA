"use strict";
var helpers = require('syracuse-core/lib/helpers');

function _addButton(tool, type) {
	var btn = syra_menus.addTextButton(syra_local["aw_" + type], "s-aw-viewType-link", "onViewClick");
	btn.syraViewType = type;
	btn.syraarticle = tool.designer.id;
	btn.syraTool = tool.id;
	tool.designer.viewsSlot.appendChild(tool._btns[type] = btn);
}

function ViewsTool() {}

exports.ViewsTool = helpers.defineClass(ViewsTool, null, {
	load: function(designer) {
		this.designer = designer;
		this.id = designer.id + "viewsTools";
		syra_store.add(this);
		this._btns = {};
		_addButton(this, "viewTypePreview");
		_addButton(this, "viewTypeLayout");
		_addButton(this, "viewTypeStructure");
		syra_site.mobileGateway && _addButton(this, "viewTypeJSON");
		syra_site.dom.toggleClass(this._btns[this.$viewType = "viewTypeLayout"], "s-selected", true);
	},
	ensureLayoutView: function() {
		if (this.$viewType != "viewTypeLayout") {
			this.toggleViewType("viewTypeLayout");
		}
	},
	toggleViewType: function($viewType) {
		if (this.$viewType) {
			syra_site.dom.toggleClass(this._btns[this.$viewType], "s-selected", false);
		}
		this.$viewType = $viewType;
		if (this.isJsonMode && this.$viewType != "viewTypeJSON") {
			this.isJsonMode = false;
			syra_site.mobileGateway.toggleJsonEditor(false);
		}
		this.designer.ensureDesigneBar();
		if (this.$viewType == "viewTypeJSON") {
			this.isJsonMode = true;
			syra_site.mobileGateway.toggleJsonEditor(true);
		}
		syra_site.dom.toggleClass(this._btns[this.$viewType], "s-selected", true);
		this.designer.uiSwitchTool.toggleUIDesign(this.designer.designedArticle, true);
		this.designer.designedArticle.page.ensurePageVisibility();
	},
	onViewClick: function(event, btn) {
		this.toggleViewType(btn.syraViewType);
	},
	dispose: function() {
		syra_store.remove(this);
		this.designer = this._btns = null;
	}
});