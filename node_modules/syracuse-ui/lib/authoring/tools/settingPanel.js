"use strict";
var helpers = require('syracuse-core/lib/helpers');
var designProperties = require("syracuse-ui/lib/authoring/page/designProperties");

function _addExcludeMe(designer, panelId) {
	if (panelId != "article") {
		if (!designer.selectedPanel.excludeMeLink) {
			var btn = syra_menus.addTextButton(syra_local.aw_excludeMe, "s-aw-exclude-me", "onExcludeItemClick");
			var slot = document.createElement("div");
			slot.className = "s-aw-exclude-me-slot";
			designer.selectedPanel.excludeMeLink = slot.appendChild(btn);
			designer.selectedPanel.body.insertBefore(slot, designer.selectedPanel.body.firstChild);
		}
		var enable = !designer.designedItem.$isMandatory;
		if (enable && designer.designedItem.layoutContent) {
			var fields = designer.designedItem.layoutContent.getFields();
			for (var ii = 0, jj = fields.length; enable && ii < jj; ii++) {
				enable = !fields[ii].$isMandatory;
			}
		}
		designer.selectedPanel.excludeMeLink.style.display = enable ? "" : "none";
	}
}

function _fillTabChoice(designer, box) {
	var value = designer.designedItem.isTabLayout ? "tabs" : "stack";
	var isLinkDisabled = false;
	var btnTypes = ["tabs", "stack"];
	if (!box.tabChoice) {
		box.tabChoice = {};
		var slot = document.createElement("div");
		slot.className = "s-aw-tab-choices";
		var label = document.createElement("div");
		label.className = "s-aw-tab-choices-title";
		label.textContent = syra_local.aw_showAs;
		slot.appendChild(label);
		for (var ii = 0, jj = btnTypes.length; ii < jj; ii++) {
			var $syraValue = btnTypes[ii];
			var btn = syra_menus.addIconButton(syra_local["aw_section_" + $syraValue], "s-aw-tab-choice", "onTemplateClick");
			box.tabChoice[btn.$syraValue = $syraValue] = btn;
			btn.syraItem = designer.id;
			btn.syraModelType = "modelTab";
			var img = document.createElement("div");
			img.className = "s-aw-tab-choice-icon";
			img.style.backgroundImage = "url('/syracuse-ui/themes/desktop/sage/images/authoring/s-layout-" + btn.$syraValue + ".png')";
			btn.appendChild(img);
			slot.appendChild(btn);
		}
		box.body.appendChild(slot);
	}
	for (var ii = 0, jj = btnTypes.length; ii < jj; ii++) {
		var link = box.tabChoice[btnTypes[ii]];
		link.className = "s-aw-tab-choice" + (value == btnTypes[ii] ? " s-selected" : "");
		syra_site.dom.disableItem(link, isLinkDisabled);
	}
}


function _setLabelItem(designer) {
	var item = designer.designedItem;
	var alignment = designer.designedArticle.page.$isEditMode ? "t" : "ll";
	designer.applyChange({
		$labelAlignment: alignment,
		$isTitleHidden: false,
		$fieldsIsTitleHidden: false
	});
	if (item.$item) {
		if (item.$item.$isTopLabelAlignment !== undefined ||
			item.$item.$fieldsIsTopLabelAlignment !== undefined ||
			item.$item.$isRightTextLabelAlignment !== undefined ||
			item.$item.$fieldsIsRightTextLabelAlignment !== undefined) {
			if (item.$item.$isTopLabelAlignment || item.$item.$fieldsIsTopLabelAlignment) {
				alignment = "t";
			} else {
				if (item.$item.$isRightTextLabelAlignment || item.$item.$fieldsIsRightTextLabelAlignment) {
					alignment = "lr";
				} else {
					alignment = "ll";
				}
			}
		}
	}
	designer.applyChange({
		$labelAlignment: alignment,
		$isTitleHidden: item.$item.$isTitleHidden,
		$fieldsIsTitleHidden: item.$item.$fieldsIsTitleHidden,
		$properties: {
			$isTitleHidden: {
				$isHidden: item.isTabLayout == true
			}
		}
	});
}

exports.show = function(designer) {
	if (designer.panels) {
		designer.startChange();
		var panelId = designer.designedItem.$designLevel;
		if (designer.selectedPanel) {
			syra_site.dom.removeChild(designer.selectedPanel.slot);
		}
		if (!designer.panels[panelId]) {
			designer.propertiesSlot.syraItem = designer.id;
			designer.panels[panelId] = designProperties[panelId](designer, designer.propertiesSlot);
			panelId == "field" && designer.addFieldAddinToSection(designer.panels[panelId].fieldAddinSection);
		}
		var panel = designer.selectedPanel = designer.panels[panelId];
		designer.applyChange({
			$isAdvanced: false,
			$isHidden: false
		});
		designer._ensureSelectedItemTitle();
		designer.applyChange({
			$isAdvanced: designer.designedItem.$item.$isAdvanced,
			$isMaximizable: designer.designedItem.$item.$isMaximizable,
			$isBoxCollapsable: designer.designedItem.$item.$isBoxCollapsable,
			$rowAlign: (designer.awLayout ? designer.awLayout.$layout.$rowAlign : "top")
		});
		if (designer.onShowFieldAddins && designer.designedItem.isField) {
			designer.onShowFieldAddins();
		}
		designer.propertiesSlot.appendChild(designer.selectedPanel.slot);
		designer.setLocalizeTitleItem(designer.designedItem);
		_setLabelItem(designer);
		var layout = designer.awLayout || designer.designedItem.layoutContent;
		designer.selectedPanel.colCount = layout ? layout.getColumnsCount() : 1;
		_addExcludeMe(designer, panelId);

		var isHidden = designer.awLayout == null ? false : true;
		if (panel.rowSection) {
			designer.addPageModelLinks(panel.rowSection, designer.designedItem, designer.selectedPanel.colCount, designer.awLayout);
			var sectionHidden = true;
			if (designer.awLayout) {
				designProperties.fillRowSection(panel.rowSection);
				sectionHidden = false;
			}
			syra_site.dom.display(panel.rowSection.slot, !sectionHidden);
		}
		if (panel.apperanceSection) {
			_fillTabChoice(designer, panel.apperanceSection);
			syra_site.dom.display(panel.apperanceSection.slot, !isHidden);
		}
		if (panel.layoutSection) {
			designer.addPageModelLinks(panel.layoutSection, designer.designedItem, designer.selectedPanel.colCount, designer.awLayout);
			var sectionHidden = isHidden;
			if (designer.designedItem.$designLevel == "field") {
				if (designer.designedItem.layoutParent && designer.designedItem.layoutParent.isRow) {
					sectionHidden = true;
				}
			}
			syra_site.dom.display(panel.layoutSection.slot, !sectionHidden);
		}
		if (panel.titleSection) {
			syra_site.dom.toggleClass(panel.titleSection.titleLocalizationField.domItem, "s-aw-title-localization", true);
			var choice = panel.titleSection.titleChoiceField.builder._choices[0];
			choice.slot.appendChild(panel.titleSection.titleLocalizationField.domItem);
			syra_site.dom.display(panel.titleSection.slot, !isHidden);
		}
		panel.behaviorSection && syra_site.dom.display(panel.behaviorSection.slot, !isHidden);
		panel.fieldsLabelSection && syra_site.dom.display(panel.fieldsLabelSection.slot, !isHidden);

		if (panel.fieldLabelSection) {
			panel.fieldLabelSection.showItem(!(panel.fieldLabelSection.$isHidden = (designer.designedItem.unknowMode || isHidden)));
			designer.applyChange({
				$properties: {
					$labelAlignment: {
						$isHidden: designer.designedItem.$field.$type == "application/x-boolean"
					}
				}
			});
		}
		if (panel.fieldAddinSection) {
			isHidden = true;
			if (designer.designedItem.$authoringType) {
				var fields = panel.fieldAddinSection.fields;
				for (var ii = 0, jj = fields.length; ii < jj; ii++) {
					var field = fields[ii],
						isSectionHidden = true;
					if (field.$item.$authoringType == designer.designedItem.$authoringType) {
						if (field.$item.$authoringEditMode !== undefined) {
							isHidden = isSectionHidden = !(field.$item.$authoringEditMode == designer.designedItem.$isEditMode);
						} else {
							isHidden = isSectionHidden = false;
						}
					}
					field.setState({
						$isHidden: isSectionHidden
					});
				}
			}
			syra_site.dom.display(panel.fieldAddinSection.slot, !isHidden);
		}
		designer.endChange();
		//section && section.layoutContent && syra_site.layoutValidator.validate(section.layoutContent, true);
		var $field = designer.designedItem.$field;
		if ($field && $field.$type == "application/x-vignette") {
			!$field.$location && _addVignette(designer);
		}
	}
};

function _addVignette(designer) {
	var $url = "/sdata/syracuse/collaboration/syracuse/landingVignetteSelects/$template/$workingCopies?representation=landingVignetteSelect.$edit";
	var designedItem = designer.designedItem;
	var layoutParent = designer.designedItem.layoutParent;
	syra_site.dialogManager.openPage(designer, {
		article: designer,
		$url: $url,
		$isOkHidden: true,
		onValidate: function(searchPage) {
			var sels = searchPage.selectedVignettes;
			if (sels) {
				var newSelect;
				for (var ii = 0, jj = sels.length; ii < jj; ii++) {
					var sel = sels[ii];
					var newItem = {
						$title: sel.vignette.title,
						$awAddNewItem: true,
						$designLevel: "field",
						$field: {
							$type: "application/x-vignette",
							$title: sel.vignette.title,
							$location: helpers.object.clone(sel.vignette.$links[Object.keys(sel.vignette.$links)[0]], true)
						}
					};
					var newChild = syra_site.layoutUpdater.onAddNewItem(designedItem.articleParent, designedItem, newItem, layoutParent.isRow ? "right" : "top");
					if (!newSelect) {
						newSelect = newChild;
					}
				}
				designer.endArticleUpdate(newSelect, true);
				layoutParent.removeItem(designedItem, true, true);
			}
		},
		onClose: function(isCanceled) {
			if (isCanceled) {
				designedItem.boxParent && designer.selectItem(designedItem.boxParent, true);
				layoutParent.removeItem(designedItem, true, true);
			}
			return true;
		}
	});
}