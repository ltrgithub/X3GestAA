"use strict";
var helpers = require('syracuse-core/lib/helpers');


function _toggleBarDesign(bar, enable){
    if (bar) {
        var isOnPreviewMode = bar.page.designer && bar.page.designer.viewsTool && !bar.page.designer.viewsTool.$viewType == "viewTypePreview";
        if (enable || isOnPreviewMode) {
            if (!bar.designOverlay) {
                bar.designOverlay = document.createElement("div");
                bar.designOverlay.className = "s-aw-bar-overlay";
                document.site.dom.setZIndex(bar.designOverlay);
                document.site.layoutSlot.appendChild(bar.designOverlay);
            }
            bar._designing = true;
            bar.barSlot.style.display = bar.designOverlay.style.display = (isOnPreviewMode && !bar.isHidden) ? "" : "none";
            bar.resizeBar();
        }
        else {
            if (bar.designOverlay) {
                document.site.dom.removeChild(bar.designOverlay);
                delete bar.designOverlay;
            }
            bar._designing = false;
            if (!bar.isHidden) {
                bar.barSlot.style.display = "";
            }
        }
    }
}


function UISwitchTool(){
}

exports.UISwitchTool = helpers.defineClass(UISwitchTool, null, {
    load: function(designer){
        this.designer = designer;
    },
    toggleUIDesign: function(item, enable, disposingDesigner){
        var site = document.site;
        var isLightMode;
        if (this.designer.viewsTool) {
            isLightMode = this.designer.viewsTool.$viewType == "viewTypeStructure";
            if (this.designer.viewsTool.$viewType == "viewTypePreview") {
                enable = false;
            }
            
        }
        if (item == this.designer.designedArticle && item == item.page) {
            _toggleBarDesign(item.page.menuBar, enable);
            _toggleBarDesign(item.page.fusionBar, enable);
        }
        if (!enable && item.loadPageViewSelector) {
            item.loadPageViewSelector();
        }
        if (this.designer.designedArticle.isRecordArticle) {
            if (item.articleParent &&
            !((item.articleParent == this.designer.designedArticle.list) ||
            (item.articleParent == this.designer.designedArticle))) {
                return;
            }
        }
        else {
            if (item.articleParent && item.articleParent != this.designer.designedArticle.page) {
                return;
            }
        }
        if ((item.$item && item.$item.$isAuthoringEnabled === false) || (item.boxParent && item.boxParent.$item.$isAuthoringEnabled === false)) {
            return;
        }
        item.isDesigning = enable;
        if (item.isSpaceBox) {
            if (enable) {
                if (!item.deleteLink) {
                    if (item.boxParent.$designLevel == "block") {
                        item.$designLevel = "field";
                    }
                    else {
                        var children = item.boxParent.layoutContent ? item.boxParent.layoutContent.getItems() : [];
                        if (children.length > 0) {
                            item.$designLevel = children[0].$designLevel;
                        }
                        else {
                            item.$designLevel = item.boxParent.$designLevel == "section" ? "block" : "section";
                        }
                    }
                    item.deleteLink = document.createElement("a");
                    item.deleteLink.className = "s-aw-del-layout";
                    item.deleteLink.syraDesigneArticle = item.articleParent.id;
                    item.deleteLink.syraDesignePage = item.articleParent.page.id;
                    this.designer.setArticleId(item.deleteLink);
                    item.deleteLink.setAttribute("data-s-picker", "s-aw-del-layout");
                    item.deleteLink.title = this.designer.localize.aw_deleteColumn;
                    item.body.appendChild(item.deleteLink);
                }
            }
            else {
                site.dom.removeChild(item.deleteLink);
                item.deleteLink = null;
                site.dom.toggleClass(item.layoutSlot, "s-aw-designed", false);
                site.dom.toggleClass(item.layoutSlot, "s-aw-over", false);
            }
            if (!site.isTabletDevice) {
                site.ddManager.setDragSpot(item.layoutSlot, enable);
            }
            site.dom.toggleClass(item.layoutSlot, "s-aw-item", enable);
        }
        if (item.isTabLayout) {
            if (!item.isLayout && item.isSection && !item.loaded && item.$item.$opened !== false) {
                item.renderLayoutContent();
                item.loaded = true;
            }
        }
        var domItem = item.dataSlot || item.domItem;
        if (domItem) {
            //no domitem for layout
            if (item.isSection) {
                if (isLightMode) {
                    if (!item.childrenSection || item.childrenSection.length == 0) {
                        if (item.layoutContent && item.layoutContent.domItem) {
                            item.$isLayoutContentLightHidden = true;
                            item.layoutContent.domItem.style.display = "none";
                        }
                    }
                }
                else {
                    if (item.$isLayoutContentLightHidden) {
                        item.layoutContent.domItem.style.display = "";
                    }
                }
            }
            if (item.tabTitle) {
                if (enable) {
                    item.tabTitle.syraDesignedItemId = item.id;
                }
                else {
                    site.dom.toggleClass(item.tabTitle, "s-aw-designed", false);
                    site.dom.toggleClass(item.tabTitle, "s-aw-over", false);
                    site.dom.toggleClass(item.body, "s-aw-designed", false);
                    site.dom.toggleClass(item.body, "s-aw-over", false);
                    delete item.tabTitle.syraDesignedItemId;
                }
                site.dom.toggleClass(item.tabTitle, "s-aw-item", enable);
                site.dom.toggleClass(item.body, "s-aw-item", enable);
                if (!site.isTabletDevice) {
                    site.ddManager.setDragSpot(item.tabTitle, enable);
                    site.ddManager.setDragSpot(item.body, enable);
                }
                site.dom.toggleClass(item.tabTitle, "s-aw-light", enable && isLightMode);
                site.dom.toggleClass(item.body, "s-aw-light", enable && isLightMode);
            }
            if (enable) {
                domItem.syraDesignedItemId = item.id;
                if (!item.isLayout) {
                    item.layoutSlot.syraDesignedItemId = item.id;
                }
            }
            else {
                if (domItem) {
                    if (item.body) {
                        site.dom.toggleClass(item.body, "s-aw-over", false);
                        site.dom.toggleClass(item.body, "s-aw-designed", false);
                    }
                    if (item.header) {
                        site.dom.toggleClass(item.header, "s-aw-over", false);
                        site.dom.toggleClass(item.header, "s-aw-designed", false);
                    }
                    site.dom.toggleClass(item.layoutSlot, "s-aw-designed", false);
                    site.dom.toggleClass(item.layoutSlot, "s-aw-over", false);
                    site.dom.toggleClass(domItem, "s-aw-designed", false);
                    site.dom.toggleClass(domItem, "s-aw-over", false);
                    domItem.syraDesignedItemId = item.layoutSlot.syraDesignedItemId = null;
                }
            }
            if (item.isLayout) {
                if (enable) {
                    if (item.$layout.$layoutType == "row") {
                        site.dom.toggleClass(item.domItem, "s-aw-item", true);
                        if (!site.isTabletDevice) {
                            site.ddManager.setDragSpot(item.domItem, true);
                        }
                        if (item.layoutSlot) {
                            site.dom.toggleClass(item.layoutSlot, "s-aw-item", true);
                            if (!site.isTabletDevice) {
                                site.ddManager.setDragSpot(item.layoutSlot, true);
                            }
                        }
                    }
                }
                else {
                    site.dom.toggleClass(domItem, "s-aw-item", false);
                    if (!site.isTabletDevice) {
                        site.ddManager.setDragSpot(domItem, false);
                    }
                    if (item.layoutSlot) {
                        site.dom.toggleClass(item.layoutSlot, "s-aw-item", false);
                        if (!site.isTabletDevice) {
                            site.ddManager.setDragSpot(item.layoutSlot, false);
                        }
                    }
                    item.domItem.style.display = "";
                }
            }
            else {
                if (item.layoutSlot) {
                    site.dom.toggleClass(item.layoutSlot, "s-aw-item", enable);
                    if (!site.isTabletDevice) {
                        site.ddManager.setDragSpot(item.layoutSlot, enable);
                    }
                }
                site.dom.toggleClass(domItem, "s-aw-item", enable);
                if (!site.isTabletDevice) {
                    site.ddManager.setDragSpot(domItem, enable);
                }
                site.dom.toggleClass(domItem, "s-aw-light", enable && isLightMode);
                
                if (item.page != item && !item.$item.$isPopupContent) {
                    var show = !(!item.isDesigning && (!(item.layoutParent && item.layoutParent.isRow) && (item.$isHidden || item.isItemHidden || item.isInvisible)));
                    if (item.showItem) {
                        item.showItem(show);
                    }
                }
            }
        }
        if (item.rowSeparator) {
            site.dom.toggleClass(item.rowSeparator, "s-aw-slot-sep-" + item.layoutParent.$layout.$layoutType, enable);
            site.ddManager.setDragSpot(item.rowSeparator, item.layoutParent.isRow && enable);
            if (item.isLayout) {
                item.rowSeparator.syraDesignedLayoutId = item.id;
            }
            else {
                item.rowSeparator.syraDesignedItemId = item.id;
            }
        }
        if (item.toggleUIDesign) {
            item.toggleUIDesign(enable, disposingDesigner);
        }
        if (item.isLayout) {
            if (item.items) {
                for (var ii = 0, jj = item.items.length; ii < jj; ii++) {
                    this.toggleUIDesign(item.items[ii], enable, disposingDesigner);
                }
            }
        }
        else {
            if (item.layoutContent) {
                this.toggleUIDesign(item.layoutContent, enable, disposingDesigner);
            }
        }
    },
    onClickPicker: function(picker){
        if (picker.getAttribute("data-s-picker") == "s-aw-del-layout") {
            var self = this;
            if (!document.site.ddManager.ddAgent) {
                document.site.ddManager.cancel();
                var spaceBox = self.designer.findItem(picker);
                setTimeout(function(){
                    var layout = spaceBox.layoutParent;
                    var layoutParent = layout.layoutParent;
                    var deletedIndex;
                    if (spaceBox) {
                        deletedIndex = layout.items.indexOf(spaceBox);
                        layout.removeItem(spaceBox, true);
                    }
                    if (layout.items.length > 0 && layout.isRow) {
                        document.site.layoutUpdater.deleteRowColumn(layout, deletedIndex);
                    }
                    else {
                        if (layoutParent) {
                            layoutParent.removeItem(layout, true);
                            if (layoutParent.isRow) {
                                document.site.layoutUpdater.deleteRowColumn(layoutParent, deletedIndex);
                            }
                        }
                        else {
                            layoutParent = layout.boxParent.layoutParent;
                            layoutParent.removeItem(layout.boxParent, true, layoutParent.isRow);
                        }
                    }
                    self.designer.endArticleUpdate(null, true);
                }, 10);
            }
            return true;
        }
        return false;
    },
    toggleOverItem: function(item, isOver){
        var css = "s-aw-over";
        this._toggleItemCss(item, css, isOver);
        if (isOver && this._overItem != item) {
            if (this._oveItems) {
                for (var ii = 0, jj = this._oveItems.length; ii < jj; ii++) {
                    this._toggleItemCss(this._oveItems[ii], css, false);
                }
            }
            this._oveItems = [];
            this._overItem = item;
            while (item) {
                this._toggleItemCss(item, css, true);
                this._oveItems.push(item);
                item = item.boxParent;
            }
        }
    },
    _toggleItemCss: function(item, css, show){
        if (item.domItem) {
            if (item.tabTitle) {
                document.site.dom.toggleClass(item.tabTitle, css, show);
                document.site.dom.toggleClass(item.body, css, show);
            }
            else {
                if (item.dataSlot) {
                    document.site.dom.toggleClass(item.dataSlot, css, show); //page
                }
                else {
                    if (item.layoutSlot) {
                        document.site.dom.toggleClass(item.layoutSlot, css, show);
                    }
                }
                if (item.isLayout) {
                    document.site.dom.toggleClass(item.domItem, css, show);
                }
                if (item.header) {
                    document.site.dom.toggleClass(item.header, css, show);
                }
                if (item.body) {
                    document.site.dom.toggleClass(item.body, css, show);
                }
            }
        }
    },
    dispose: function(){
        this.designer = this._overItem = this._oveItems = null;
    }
});
