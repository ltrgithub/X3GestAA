"use strict";
var helpers = require('syracuse-core/lib/helpers');

function TemplatesTool(){
}

exports.TemplatesTool = helpers.defineClass(TemplatesTool, null, {
    load: function(designer){
        this.designer = designer;
    },
    dispose: function(){
        this.designer = null;
    },
    _applyArticleSmartModel: function(article){
        var article = this.designer.getDesignedCardItem ? this.designer.getDesignedCardItem() : this.designer.designedArticle;
        var children = document.site.layoutUpdater.extractItems(article.layoutContent);
        article.layoutContent.clearContent();
        var prevLayout = article.layoutContent.domItem;
        article.$item.$layout = {
            $layoutType: "stack",
            $items: []
        };
        article.renderLayoutContent();
        article.layoutContent.clearContent();
        if (children.length > 0) {
            article.layoutContent.ensureSection(children[0]);
            if (children.length > 1) {
                if (children.length > 2) {
                    var tabs = article.layoutContent.loadChildItem(null, {
                        $layoutType: "tabs",
                        $items: []
                    });
                    for (var ii = 1, jj = children.length - 1; ii < jj; ii++) {
                        tabs.ensureSection(children[ii]);
                    }
                }
                article.layoutContent.ensureSection(children[children.length - 1]);
            }
        }
        children = article.layoutContent.getItems();
        for (var ii = 0, jj = children.length; ii < jj; ii++) {
            this.applySectionSmartModel(children[ii]);
        }
        document.site.removeDomChild(prevLayout);
    },
    applySectionSmartModel: function(section){
        var layoutUpdater = document.site.layoutUpdater;
        var children = layoutUpdater.extractItems(section.layoutContent);
        section.layoutContent.clearContent();
        var prevLayout = section.layoutContent.domItem;
        if (children.length > 0) {
            var $rows = [];
            var colIndex = 0;
            for (var ii = 0, jj = children.length; ii < jj; ii++) {
                colIndex++;
                if (children[ii].isSection) {
                    var subChildren = children[ii].layoutContent.getItems();
                    if (subChildren && subChildren.length > 0) {
                        if (subChildren[0].$field && subChildren[0].$field.$type == "application/x-array") {
                            $rows.push({
                                $layoutType: colIndex > 1 ? "row" : "stack",
                                $items: []
                            });
                            colIndex = 1;
                        }
                    }
                }
                else {
                    if (children[ii].$field && children[ii].$field.$type == "application/x-array") {
                        if (colIndex > 1) {
                            $rows.push({
                                $layoutType: "row",
                                $items: []
                            });
                        }
                        $rows.push({
                            $layoutType: "stack",
                            $items: []
                        });
                        colIndex = 0;
                    }
                }
                if (colIndex == 3) {
                    $rows.push({
                        $layoutType: "row",
                        $items: []
                    });
                    colIndex = 0;
                }
            }
            if (colIndex) {
                $rows.push({
                    $layoutType: colIndex > 1 ? "row" : "stack",
                    $items: []
                });
            }
            if ($rows.length == 1) {
                section.$item.$layout = $rows[0];
                section.renderLayoutContent();
                section.layoutContent.removeSpaceBox(true);
                layoutUpdater.newLoadChildItems(section.layoutContent, children);
            }
            else {
                section.$item.$layout = {
                    $layoutType: "stack",
                    $items: $rows
                };
                section.renderLayoutContent();
                var rowIndex = colIndex = 0;
                for (var ii = 0, jj = children.length; ii < jj; ii++) {
                    colIndex++;
                    if (children[ii].isSection) {
                        var subChildren = children[ii].layoutContent.getItems();
                        if (subChildren && subChildren.length > 0) {
                            if (subChildren[0].$field && subChildren[0].$field.$type == "application/x-array") {
                                rowIndex++;
                                colIndex = 1;
                            }
                        }
                    }
                    else {
                        if (children[ii].$field && children[ii].$field.$type == "application/x-array") {
                            if (colIndex > 1) {
                                rowIndex++;
                            }
                            colIndex = 3;
                        }
                    }
                    section.layoutContent.items[rowIndex].removeSpaceBox(true);
                    section.layoutContent.items[rowIndex].loadChildItem(children[ii]);
                    if (colIndex == 3) {
                        rowIndex++;
                        colIndex = 0;
                    }
                }
            }
        }
        
        children = section.layoutContent.getItems();
        for (var ii = 0, jj = children.length; ii < jj; ii++) {
            if (children[ii].isSection) {
                this.applySectionSmartModel(children[ii]);
            }
        }
        document.site.removeDomChild(prevLayout);
    },
    applyCardListFactoryModel: function(list){
        var list = this.designer.designedArticle.list || this.designer.designedArticle;
        if (list.$item.$format == "grid") {
            var $cardPosition = list.$item.$cardItem.$position;
            list.applyDesignMetaData({
                $cardPosition: "no"
            }, true);
            list.$item.$cardItem = list.defineDefaultCard();
            list.$item.$cardItem.$position = $cardPosition;
            if (list.$item.$cardItem.$position == "row") {
                list.cardDecorator.$rowFieldBinds = list.page.getDefinedFieldBinds(list.$item.$cardItem.$layout.$items);
            }
            list.applyDesignMetaData({
                $cardPosition: $cardPosition
            }, true);
        }
        else {
            list.$item.$layout = list.defineDefaultCard().$layout;
            this.designer.designedArticle.reloadLayout({
                $layout: list.defineDefaultCard().$layout
            });
        }
    },
    _applyPageFactoryModel: function(page){
        var children = document.site.layoutUpdater.extractItems(page.layoutContent);
        page.layoutContent.clearContent();
        page.$item = helpers.object.clone(page.ensureDefaultArticle(page.$prototype.$article, page.$prototype), true);
        page.reloadLayout(page.$item);
    },
    _createLayout: function(section, $newLayout){
        section.layoutContent.clearContent();
        var prevLayout = section.layoutContent.domItem;
        section.$item.$layout = $newLayout;
        section.renderLayoutContent();
        section.layoutContent.removeSpaceBox(true);
        return prevLayout;
    },
    splitInColumns: function(section, children, maxCol){
        children = children || document.site.layoutUpdater.extractItems(section.layoutContent);
        var prevLayout = this._createLayout(section, {
            $layoutType: "row",
            $widths: document.site.layoutValidator.getDefaultWidths(maxCol),
            $items: []
        });
        var row = 0, colIndex = 0;
        for (var ii = 0, jj = children.length; ii < jj; ii++) {
            if (!children[ii].disposed) {
                var layout;
                switch (row) {
                    case 0:
                        layout = section.layoutContent;
                        break;
                    case 1:
                        layout = document.site.layoutUpdater.wrapIntack(section.layoutContent, [section.layoutContent.items[colIndex]], colIndex);
                        break;
                    default:
                        layout = section.layoutContent.items[colIndex];
                        break;
                }
                colIndex++;
                layout.loadChildItem(children[ii]);
                if (colIndex == maxCol) {
                    colIndex = 0;
                    row++;
                }
            }
        }
        document.site.removeDomChild(prevLayout);
    },
    _applySectionColumnsModel: function(section, children, maxCols){
        section.$item.$layout = {
            $layoutType: "row",
            $items: []
        };
        var width = Math.ceil(100 / maxCols);
        var widths = [];
        for (var ii = 0; ii < maxCols; ii++) {
            widths.push(width);
        }
        section.$item.$layout.$widths = widths.join(",");
        if (children.length > maxCols) {
            for (var ii = 0; ii < maxCols; ii++) {
                section.$item.$layout.$items.push({
                    $layoutType: "stack",
                    $items: []
                });
            }
        }
        section.renderLayoutContent();
        if (children.length > maxCols) {
            var colIndex = 0;
            for (var ii = 0, jj = children.length; ii < jj; ii++) {
                section.layoutContent.items[colIndex++].loadChildItem(children[ii]);
                if (colIndex == maxCols) {
                    colIndex = 0;
                }
            }
        }
        else {
            section.layoutContent.clearContent();
            document.site.layoutUpdater.newLoadChildItems(section.layoutContent, children);
        }
    },
    applySectionModel: function(section, $model){
        var children = document.site.layoutUpdater.extractItems(section.layoutContent);
        var prevLayout = section.layoutContent.domItem;
        section.layoutContent.clearContent();
        switch ($model) {
            case "$model_rows":
                section.$item.$layout = {
                    $layoutType: "stack",
                    $items: []
                };
                section.renderLayoutContent();
                document.site.layoutUpdater.newLoadChildItems(section.layoutContent, children);
                break;
            case "$model_3cols":
                this._applySectionColumnsModel(section, children, 3);
                break;
            case "$model_4cols":
                this._applySectionColumnsModel(section, children, 4);
                break;
            case "$model_tabs":
                section.$item.$layout = {
                    $layoutType: "tabs",
                    $items: []
                };
                section.renderLayoutContent();
                section.layoutContent.clearContent();
                for (var ii = 0, jj = children.length; ii < jj; ii++) {
                    section.layoutContent.ensureSection(children[ii]);
                }
                break;
        }
        document.site.removeDomChild(prevLayout);
    },
    _addModelLink: function($model, slot, isTextIcon){
        var link = document.createElement("a");
        link.title = this.designer.localize["aw_model_" + $model] || this.designer.localize.aw_model_default_title;
        link.setAttribute("data-s-picker", link.syraPickerType = "$model_" + $model);
        link.syraTemplate = $model;
        link.className = "s-aw-template";
        var img = document.createElement("div");
        img.className = "s-aw-template-icon";
        img.style.backgroundImage = "url('/syracuse-ui/themes/desktop/sage/images/authoring/s-template-" + $model + ".png')";
        link.appendChild(img);
        if (isTextIcon) {
            var label = document.createElement("div");
            label.className = "s-aw-template-label";
            label.textContent = link.title;
            link.appendChild(label);
        }
        else {
            link.className += " s-icon";
        }
        return slot.appendChild(link);
    },
    addLandingPageModels: function(section, designedItem){
        this.countTemplates = {
            2: ["2-1", "2-2"],
            3: ["3-1", "3-2", "3-3", "3-4"],
            4: ["4-1", "4-2", "4-3"],
            5: ["5-1", "5-2", "5-3"],
            6: ["6-1", "6-2"]
        };
        this.defaultTemplates = ["rows", "3cols", "4cols", "mixt"];
        var colCount = designedItem.layoutContent.getColumnsCount();
        var fields = designedItem.layoutContent.getFields();
        document.site.emptyDom(section.dataStore.modelSlot);
        var count = fields.length;
        if (count > 1) {
            var field = document.createElement("div");
            field.className = "s-aw-prop s-field";
            var slot = document.createElement("div");
            slot.className = "s-aw-prop s-field-title";
            slot.textContent = this.designer.localize.ldpTemplate;
            field.appendChild(slot);
            slot = document.createElement("div");
            slot.className = "s-aw-prop s-field-core";
            field.appendChild(slot);
            var templates = this.countTemplates[count] || this.defaultTemplates;
            var row = document.createElement("div");
            row.className = "s-aw-template-row";
            for (var ii = 0, jj = templates.length; ii < jj; ii++) {
                this._addModelLink(templates[ii], row).syraFieldsCount = count;
            }
            slot.appendChild(row);
            section.dataStore.modelSlot.appendChild(field);
        }
    },
    addPageModelLinks: function(section, designedItem, colCount){
        section.dataStore = section.dataStore || {};
        if (!section.dataStore.modelSlot) {
            section.dataStore.modelSlot = document.createElement("div");
            section.body.appendChild(section.dataStore.modelSlot);
        }
        document.site.emptyDom(section.dataStore.modelSlot);
        if (!designedItem.isField) {
            if (designedItem.$designLevel == "article") {
                var slot = document.createElement("div");
                slot.className = "s-aw-template-row";
                this._addModelLink("smart", slot, true);
                this._addModelLink("factory", slot, true);
                section.dataStore.modelSlot.appendChild(slot);
            }
            var slot = document.createElement("div");
            slot.className = "s-aw-template-row";
            if (designedItem.$designLevel == "article" || designedItem.$designLevel == "section") {
                this._addModelLink("tabs", slot);
            }
            this._addModelLink("rows", slot);
            this._addModelLink("3cols", slot);
            this._addModelLink("4cols", slot);
            this._addModelLink("mixt", slot);
            section.dataStore.modelSlot.appendChild(slot);
        }
        this.addColsCountLinks(section, designedItem, colCount, 6);
    },
    addColsCountLinks: function(section, designedItem, colCount, max){
        section.dataStore = section.dataStore || {};
        if (!section.dataStore.colChoices) {
            section.dataStore.colChoices = {};
            var row = document.createElement("div");
            row.className = "s-aw-cols";
            var cell = document.createElement("div");
            cell.className = "s-aw-cols-label";
            cell.textContent = this.designer.localize.aw_columns;
            row.appendChild(cell);
            
            for (var ii = 1; ii <= max; ii++) {
                var link = document.createElement("a");
                link.textContent = link.$syraColCount = ii;
                link.setAttribute("data-s-picker", link.syraPickerType = "$colcount");
                row.appendChild(section.dataStore.colChoices[ii] = link);
            }
            section.body.appendChild(row);
        }
        this.selectColChoice(section, designedItem, colCount);
    },
    selectColChoice: function(section, designedItem, colCount){
        var css = "s-aw-cols-link " + (designedItem.$designLevel == "field" ? "" : "s-aw-row-box");
        var keys = Object.keys(section.dataStore.colChoices);
        for (var ii = 0, jj = keys.length; ii < jj; ii++) {
            section.dataStore.colChoices[keys[ii]].className = css + (colCount == keys[ii] ? " s-selected" : "");
        }
    },
    fillTabChoice: function(section, designedItem){
        var title = this.designer.localize.aw_showAs;
        var value = designedItem.isTabLayout ? "tabs" : "stack";
        var isLinkDisabled = false;
        var links = ["tabs", "stack"];
        section.dataStore = section.dataStore || {};
        
        if (!section.dataStore.tabChoice) {
            section.dataStore.tabChoice = {};
            var row = document.createElement("div");
            row.className = "s-aw-tab-choices";
            var cell = document.createElement("div");
            cell.className = "s-aw-tab-choices-label";
            section.dataStore.tabChoice.label = cell;
            row.appendChild(cell);
            
            for (var ii = 0, jj = links.length; ii < jj; ii++) {
                var link = document.createElement("a");
                section.dataStore.tabChoice[link.$syraValue = links[ii]] = link;
                link.title = this.designer.localize["aw_section_" + link.$syraValue];
                link.className = "s-aw-tab-choice";
                link.setAttribute("data-s-picker", link.syraPickerType = "$boxTabChoice");
                var img = document.createElement("div");
                img.className = "s-aw-tab-choice-icon";
                img.style.backgroundImage = "url('/syracuse-ui/themes/desktop/sage/images/authoring/s-layout-" + link.$syraValue + ".png')";
                link.appendChild(img);
                row.appendChild(link);
            }
            section.body.appendChild(row);
        }
        
        section.dataStore.tabChoice.label.textContent = title;
        for (var ii = 0, jj = links.length; ii < jj; ii++) {
            var link = section.dataStore.tabChoice[links[ii]];
            link.className = "s-aw-tab-choice" + (value == links[ii] ? " s-selected" : "");
            document.site.disableItem(link, isLinkDisabled);
        }
    },
    onTemplateChoiceClick: function(picker, designedItem, awLayout){
        var selectItem = this.designer.onTemplateChoiceClick ? this.designer.onTemplateChoiceClick(picker, designedItem, awLayout) : null;
        if (!selectItem) {
            switch (picker.syraPickerType) {
                case "$boxTabChoice":
                    if (designedItem.layoutParent.$layoutType != picker.$syraValue) {
                        if (designedItem.layoutParent.items.length == 1) {
                            document.site.layoutUpdater.convertToNewLayout(designedItem.layoutParent, {
                                $layoutType: picker.$syraValue
                            });
                        }
                        else {
                            var layoutRoot = designedItem.layoutParent;
                            if (picker.$syraValue != "stack") {
                                var layoutTab = document.site.layoutUpdater.wrapIntack(layoutRoot, [designedItem], layoutRoot.$layout.$items.indexOf(designedItem.$item));
                                document.site.layoutUpdater.convertToNewLayout(layoutTab, {
                                    $layoutType: "tabs"
                                });
                            }
                        }
                        return designedItem;
                    }
                    break;
                case "$colcount":
                    return this.convertByColumns(picker, designedItem, awLayout);
                case "$model_smart":
                    this._applyArticleSmartModel();
                    return designedItem;
                case "$model_factory":
                    if (this.designer.designedArticle.page == this.designer.designedArticle) {
                        this._applyPageFactoryModel(this.designer.designedArticle);
                    }
                    else {
                        this.applyCardListFactoryModel();
                    }
                    return designedItem;
                case "$model_3cols":
                    var item = this.designer.getDesignedCardItem ? this.designer.getDesignedCardItem() : designedItem;
                    this.splitInColumns(item, null, 3);
                    return designedItem;
                case "$model_4cols":
                    var item = this.designer.getDesignedCardItem ? this.designer.getDesignedCardItem() : designedItem;
                    this.splitInColumns(item, null, 4);
                    return designedItem;
                case "$model_mixt":
                    var item = this.designer.getDesignedCardItem ? this.designer.getDesignedCardItem() : designedItem;
                    this.build_mixt(item);
                    return designedItem;
                default:
                    if (picker.syraPickerType.indexOf("$model_") == 0) {
                        var item = this.designer.getDesignedCardItem ? this.designer.getDesignedCardItem() : designedItem;
                        this.applySectionModel(item, picker.syraPickerType);
                        return designedItem;
                    }
                    break;
            }
        }
        return selectItem;
    },
    convertByColumns: function(picker, designedItem, awLayout){
        var layout = awLayout ? awLayout : designedItem.layoutContent;
        if (designedItem.$designLevel == "field") {
            layout = document.site.layoutUpdater.wrapIntack(designedItem.layoutParent, [designedItem], designedItem.layoutParent.items.indexOf(designedItem));
            layout.removeSpaceBox(true);
            awLayout = layout;
        }
        var $widths = ["100", "50,50", "33,33,33", "25,25,25,25", "20,20,20,20,20", "17,17,16,16,17,17"][picker.$syraColCount - 1];
        document.site.layoutUpdater.convertToNewLayout(layout, {
            $layoutType: $widths == "100" ? "stack" : "row",
            $widths: $widths
        });
        return awLayout ? awLayout : designedItem.layoutContent;
    },
    build_2: function(designedItem, template, fields){
        var prevLayout = this._createLayout(designedItem, (template == "2-1") ? {
            $layoutType: "stack",
            $items: []
        } : {
            $layoutType: "row",
            $widths: "50,50",
            $items: []
        });
        document.site.layoutUpdater.newLoadChildItems(designedItem.layoutContent, fields);
        document.site.removeDomChild(prevLayout);
    },
    build_3: function(designedItem, template, fields){
        var prevLayout;
		var layoutUpdater = document.site.layoutUpdater;
        switch (template) {
            case "3-1":
                prevLayout = this._createLayout(designedItem, {
                    $layoutType: "stack",
                    $items: [{
                        $layoutType: "row",
                        $widths: "50,50",
                        $items: []
                    }]
                });
                designedItem.layoutContent.items[0].removeSpaceBox(true);
                layoutUpdater.newLoadChildItems(designedItem.layoutContent.items[0], fields.splice(0, 2));
                layoutUpdater.newLoadChildItems(designedItem.layoutContent, fields);
                break;
            case "3-2":
                prevLayout = this._createLayout(designedItem, {
                    $layoutType: "row",
                    $widths: "50,50",
                    $items: []
                });
                layoutUpdater.newLoadChildItems(designedItem.layoutContent.loadChildItem(null, {
                    $layoutType: "stack",
                    $items: []
                }), fields.splice(0, 2));
                layoutUpdater.newLoadChildItems(designedItem.layoutContent, fields);
                break;
            case "3-3":
                prevLayout = this._createLayout(designedItem, {
                    $layoutType: "row",
                    $widths: "50,50",
                    $items: []
                });
                layoutUpdater.newLoadChildItems(designedItem.layoutContent, fields.splice(0, 1));
                layoutUpdater.newLoadChildItems(designedItem.layoutContent.loadChildItem(null, {
                    $layoutType: "stack",
                    $items: []
                }), fields);
                break;
            case "3-4":
                prevLayout = this._createLayout(designedItem, {
                    $layoutType: "stack",
                    $items: []
                });
                layoutUpdater.newLoadChildItems(designedItem.layoutContent, fields.splice(0, 1));
                var row = designedItem.layoutContent.loadChildItem(null, {
                    $layoutType: "row",
                    $widths: "50,50",
                    $items: []
                });
                row.removeSpaceBox(true);
                layoutUpdater.newLoadChildItems(row, fields);
                break;
        }
        document.site.removeDomChild(prevLayout);
    },
    build_4: function(designedItem, template, fields){
        var prevLayout;
		var layoutUpdater = document.site.layoutUpdater;
        switch (template) {
            case "4-1":
                prevLayout = this._createLayout(designedItem, {
                    $layoutType: "stack",
                    $items: [{
                        $layoutType: "row",
                        $widths: "50,50",
                        $items: []
                    }, {
                        $layoutType: "row",
                        $widths: "50,50",
                        $items: []
                    }]
                });
                var row = designedItem.layoutContent.items[0];
                row.removeSpaceBox(true);
                layoutUpdater.newLoadChildItems(row, fields.splice(0, 2));
                row = designedItem.layoutContent.items[1];
                row.removeSpaceBox(true);
                layoutUpdater.newLoadChildItems(row, fields);
                break;
            case "4-2":
                prevLayout = this._createLayout(designedItem, {
                    $layoutType: "stack",
                    $items: []
                });
                layoutUpdater.newLoadChildItems(designedItem.layoutContent, fields.splice(0, 1));
                var row = designedItem.layoutContent.loadChildItem(null, {
                    $layoutType: "row",
                    $widths: "33,33,33",
                    $items: []
                });
                row.removeSpaceBox(true);
                layoutUpdater.newLoadChildItems(row, fields);
                break;
            case "4-3":
                prevLayout = this._createLayout(designedItem, {
                    $layoutType: "stack",
                    $items: [{
                        $layoutType: "row",
                        $widths: "33,33,33",
                        $items: []
                    }]
                });
                var row = designedItem.layoutContent.items[0];
                row.removeSpaceBox(true);
                layoutUpdater.newLoadChildItems(row, fields.splice(0, 3));
                layoutUpdater.newLoadChildItems(designedItem.layoutContent, fields);
                break;
                
        }
        document.site.removeDomChild(prevLayout);
    },
    build_5: function(designedItem, template, fields){
        var prevLayout;
		var layoutUpdater = document.site.layoutUpdater;
        switch (template) {
            case "5-1":
                prevLayout = this._createLayout(designedItem, {
                    $layoutType: "row",
                    $widths: "50,50",
                    $items: [{
                        $layoutType: "stack",
                        $items: []
                    }, {
                        $layoutType: "stack",
                        $items: []
                    }]
                });
                layoutUpdater.newLoadChildItems(designedItem.layoutContent.items[0], fields.splice(0, 2));
                layoutUpdater.newLoadChildItems(designedItem.layoutContent.items[1], fields);
                break;
            case "5-2":
                prevLayout = this._createLayout(designedItem, {
                    $layoutType: "stack",
                    $items: [{
                        $layoutType: "row",
                        $widths: "33,33,33",
                        $items: []
                    }, {
                        $layoutType: "row",
                        $widths: "50,50",
                        $items: []
                    }]
                });
                var row = designedItem.layoutContent.items[0];
                row.removeSpaceBox(true);
                layoutUpdater.newLoadChildItems(row, fields.splice(0, 3));
                row = designedItem.layoutContent.items[1];
                row.removeSpaceBox(true);
                layoutUpdater.newLoadChildItems(row, fields);
                break;
            case "5-3":
                prevLayout = this._createLayout(designedItem, {
                    $layoutType: "stack",
                    $items: []
                });
                layoutUpdater.newLoadChildItems(designedItem.layoutContent, fields.splice(0, 1));
                var row = designedItem.layoutContent.loadChildItem(null, {
                    $layoutType: "row",
                    $widths: "50,50",
                    $items: []
                });
                row.removeSpaceBox(true);
                layoutUpdater.newLoadChildItems(row, fields.splice(0, 2));
                var row = designedItem.layoutContent.loadChildItem(null, {
                    $layoutType: "row",
                    $widths: "50,50",
                    $items: []
                });
                row.removeSpaceBox(true);
                layoutUpdater.newLoadChildItems(row, fields);
                break;
                
        }
        document.site.removeDomChild(prevLayout);
    },
    build_6: function(designedItem, template, fields){
        var prevLayout;
        switch (template) {
            case "6-1":
                prevLayout = this._createLayout(designedItem, {
                    $layoutType: "stack",
                    $items: [{
                        $layoutType: "row",
                        $widths: "50,50",
                        $items: []
                    }, {
                        $layoutType: "row",
                        $widths: "50,50",
                        $items: []
                    }, {
                        $layoutType: "row",
                        $widths: "50,50",
                        $items: []
                    }]
                });
                var row = designedItem.layoutContent.items[0];
                row.removeSpaceBox(true);
                document.site.layoutUpdater.newLoadChildItems(row, fields.splice(0, 2));
                row = designedItem.layoutContent.items[1];
                row.removeSpaceBox(true);
                document.site.layoutUpdater.newLoadChildItems(row, fields.splice(0, 2));
                row = designedItem.layoutContent.items[2];
                row.removeSpaceBox(true);
                document.site.layoutUpdater.newLoadChildItems(row, fields.splice(0, 2));
                break;
            case "6-2":
                prevLayout = this._createLayout(designedItem, {
                    $layoutType: "stack",
                    $items: [{
                        $layoutType: "row",
                        $widths: "33,33,33",
                        $items: []
                    }, {
                        $layoutType: "row",
                        $widths: "33,33,33",
                        $items: []
                    }]
                });
                var row = designedItem.layoutContent.items[0];
                row.removeSpaceBox(true);
                document.site.layoutUpdater.newLoadChildItems(row, fields.splice(0, 3));
                row = designedItem.layoutContent.items[1];
                row.removeSpaceBox(true);
                document.site.layoutUpdater.newLoadChildItems(row, fields.splice(0, 3));
                break;
                
        }
        document.site.removeDomChild(prevLayout);
    },
    build_rows: function(designedItem, template, fields){
        document.site.removeDomChild(prevLayout);
    },
    build_3cols: function(designedItem, template, fields){
        this.splitInColumns(designedItem, fields, 3);
    },
    build_4cols: function(designedItem, template, fields){
        this.splitInColumns(designedItem, fields, 4);
    },
    build_mixt: function(section, template, children){
        children = children || document.site.layoutUpdater.extractItems(section.layoutContent);
        var prevLayout = section.layoutContent.domItem;
        section.layoutContent.clearContent();
        section.$item.$layout = {
            $layoutType: "row",
            $widths: "50,50",
            $items: []
        };
        section.renderLayoutContent();
        section.layoutContent.clearContent();
        if (children.length) {
            section.layoutContent.loadChildItem(children[0]);
            if (children.length > 2) {
                document.site.layoutUpdater.newLoadChildItems(section.layoutContent.loadChildItem(null, {
                    $layoutType: "stack",
                    $items: []
                }), children, 1);
            }
            else {
                if (children.length == 2) {
                    section.layoutContent.loadChildItem(children[1]);
                }
            }
        }
        document.site.removeDomChild(prevLayout);
    }
});
