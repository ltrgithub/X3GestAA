"use strict";
var helpers = require('syracuse-core/lib/helpers');

function _addBox(container, $title, $skin) {
	var box = {};
	$skin = " s-aw-type-" + $skin;
	var slot = box.slot = document.createElement("div");
	slot.className = "s-aw-box" + $skin;

	var head = document.createElement("div");
	head.className = "s-aw-box-head" + $skin;
	head.textContent = $title;
	slot.appendChild(head);

	box.body = document.createElement("div");
	box.body.className = "s-aw-box-body" + $skin;
	slot.appendChild(box.body);
	container.appendChild(slot);
	return box;
}

function _addTitleBox(designer, container, $level) {
	var box = _addBox(container, syra_local.aw_sectionAppearance, $level);
	box.titleField = designer.loadNewItem(box.body, {
		$bind: "$title",
		$css: "s-aw-prop",
		$isEditMode: true,
		$isLeftSpaceHidden: true
	}, designer);
	box.titleChoiceField = designer.loadNewItem(box.body, {
		$bind: "$titleChoice",
		$css: "s-aw-prop",
		$isEditMode: true,
		$choiceLayout: "1"
	}, designer);
	box.titleLocalizationField = designer.loadNewItem(box.body, {
		$bind: "$titleLocalization",
		$css: "s-aw-prop",
		$isEditMode: true,
		$format: "$combo"
	}, designer);
	return box;
}

function _addFieldsLabelBox(designer, container, $level) {
	var box = _addBox(container, syra_local.aw_sectionFields, $level);
	box.fieldsIsTitleHiddenField = designer.loadNewItem(box.body, {
		$bind: "$fieldsIsTitleHidden",
		$css: "s-aw-prop",
		$isEditMode: true,
		$isLeftSpaceHidden: true
	}, designer);
	box.labelAlignmentField = designer.loadNewItem(box.body, {
		$bind: "$labelAlignment",
		$css: "s-aw-prop",
		$isEditMode: true,
		$choiceLayout: "1"
	}, designer);
	return box;
}

function _addBehaviorBox(designer, container, $level) {
	var box = _addBox(container, syra_local.aw_sectionBehaviour, $level);
	box.isBoxCollapsableField = designer.loadNewItem(box.body, {
		$bind: "$isBoxCollapsable",
		$css: "s-aw-prop",
		$isEditMode: true,
		$isLeftSpaceHidden: true
	}, designer);

	box.isMaximizableField = designer.loadNewItem(box.body, {
		$bind: "$isMaximizable",
		$css: "s-aw-prop",
		$isEditMode: true,
		$isLeftSpaceHidden: true
	}, designer);
	return box;
}

function _getRowSection(designer, slot) {
	var box = _addBox(slot, syra_local.aw_rowLayout, "layout");
	designer.loadNewItem(box.body, {
		$category: "field",
		$bind: "$rowAlign",
		$css: "s-aw-prop",
		$isEditMode: true
	}, designer);
	return box;
}

exports.fillRowSection = function(box) {
	if (!box.insertRow) {
		var row = document.createElement("div");
		row.className = "s-aw-insert-row";

		var cell = document.createElement("div");
		cell.className = "s-aw-insert-row-label";
		cell.textContent = syra_local.aw_addrow;
		row.appendChild(cell);

		cell = document.createElement("div");
		cell.className = "s-aw-insert-row-btns";

		var btn = syra_menus.addTextButton(syra_local.aw_addRowBefore, "s-aw-insert-row-btn", "onAddRowClick");
		cell.appendChild(btn).syraAdd = "addRowBefore";
		btn = syra_menus.addTextButton(syra_local.aw_addRowAfter, "s-aw-insert-row-btn", "onAddRowClick");
		cell.appendChild(btn).syraAdd = "addRowAfter";
		row.appendChild(cell);
		box.body.insertBefore(box.insertRow = row, box.body.firstChild);
	}
};

function _addPanel($title, $skin) {
	var panel = {};
	$skin = " s-aw-type-" + $skin;
	var slot = panel.slot = document.createElement("div");
	slot.className = "s-aw-panel" + $skin;

	var head = document.createElement("div");
	head.className = "s-aw-panel-head" + $skin;
	head.textContent = $title;
	var itemTitle = panel.itemTitle = document.createElement("div");
	itemTitle.className = "s-aw-panel-head-title" + $skin;
	head.appendChild(itemTitle);
	slot.appendChild(head);

	panel.body = document.createElement("div");
	panel.body.className = "s-aw-panel-body" + $skin;
	slot.appendChild(panel.body);
	return panel;
}

exports.article = function(designer, slot) {
	var panel = _addPanel(syra_local.aw_page, "article");
	panel.advancedSection = designer.loadNewItem(panel.body, {
		$bind: "$isAdvanced",
		$css: "s-aw-prop",
		$isEditMode: true,
		$isLeftSpaceHidden: true
	}, designer);
	panel.rowSection = _getRowSection(designer, panel.body);
	panel.layoutSection = _addBox(panel.body, syra_local.aw_template, "article");
	panel.fieldsLabelSection = _addFieldsLabelBox(designer, panel.body, "article");
	return panel;
};

exports.section = function(designer, slot) {
	var panel = _addPanel(syra_local.aw_section, "section");
	panel.rowSection = _getRowSection(designer, panel.body);
	panel.apperanceSection = _addBox(panel.body, syra_local.aw_appearance, "section");
	panel.layoutSection = _addBox(panel.body, syra_local.aw_template, "section");
	panel.titleSection = _addTitleBox(designer, panel.body, "section");
	panel.behaviorSection = _addBehaviorBox(designer, panel.body, "section");
	panel.fieldsLabelSection = _addFieldsLabelBox(designer, panel.body, "section");
	return panel;
};

exports.block = function(designer, slot) {
	var panel = _addPanel(syra_local.aw_block, "block");
	panel.rowSection = _getRowSection(designer, panel.body);
	panel.apperanceSection = _addBox(panel.body, syra_local.aw_appearance, "block");
	panel.layoutSection = _addBox(panel.body, syra_local.aw_template, "block");
	panel.titleSection = _addTitleBox(designer, panel.body, "block");
	panel.behaviorSection = _addBehaviorBox(designer, panel.body, "block");
	panel.fieldsLabelSection = _addFieldsLabelBox(designer, panel.body, "block");
	return panel;
};

exports.field = function(designer, slot) {
	var panel = _addPanel(syra_local.aw_field, "field");
	panel.advancedSection = designer.loadNewItem(panel.body, {
		$bind: "$isAdvanced",
		$css: "s-aw-prop",
		$isEditMode: true,
		$isLeftSpaceHidden: true
	}, designer);
	panel.rowSection = _getRowSection(designer, panel.body);
	panel.layoutSection = _addBox(panel.body, syra_local.aw_template, "field");

	var box = _addBox(panel.body, syra_local.aw_sectionFieldLabel, "field");
	box.isTitleHiddenField = designer.loadNewItem(box.body, {
		$bind: "$isTitleHidden",
		$title: syra_local.aw_isLabelHidden,
		$css: "s-aw-prop",
		$isEditMode: true,
		$isLeftSpaceHidden: true
	}, designer);
	box.labelAlignmentField = designer.loadNewItem(box.body, {
		$bind: "$labelAlignment",
		$title: syra_local.aw_sectionFieldLabelPosition,
		$css: "s-aw-prop",
		$isEditMode: true,
		$choiceLayout: "1"
	}, designer);
	panel.fieldAddinSection = _addBox(panel.body, syra_local.aw_sectionFieldWidget, "field");
	panel.fieldAddinSection.fields = [];
	return panel;
};