"use strict";
var helpers = require('syracuse-core/lib/helpers');
var RawPage = require("syracuse-ui/lib/page/rawPage").RawPage;

function TopBar(){
}

exports.TopBar = helpers.defineClass(TopBar, RawPage, {
    notifyDataChange: function(field, value){
        if (field.$item.$bind == "$viewType") {
            this.authorPage.toggleViewType(value);
        }
    },
    onMenuClick: function(menuItem){
        switch (menuItem.$item.$bind) {
            case "$previousLayout":
            case "$nextLayout":
            case "$undoAllLayout":
                this.authorPage.onChangeSep(menuItem);
                return false;
            case "$help":
                return true;
        }
    },
    loadBox: function(authorPage){
        this.authorPage = authorPage;
        this.isAuthoringEventEnabled = true;
        this.$prototype = {
            $properties: {
                $viewType: {
                    $type: "application/x-choice",
                    $value: {
                        $type: "application/x-string",
                        "$enum": [{
                            $value: "preview",
                            $title: this.authorPage.localize.aw_viewTypePreview
                        }, {
                            $value: "layout",
                            $title: this.authorPage.localize.aw_viewTypeLayout
                        }, {
                            $value: "structure",
                            $title: this.authorPage.localize.aw_viewTypeStructure
                        }]
                    }
                
                }
            },
            $links: {
                $previousLayout: {
                    $isDisabled: true,
                    $title: this.authorPage.localize.aw_previousLayout
                },
                $nextLayout: {
                    $isDisabled: true,
                    $title: this.authorPage.localize.aw_nextLayout
                },
                $undoAllLayout: {
                    $isDisabled: true,
                    $title: this.authorPage.localize.aw_undoAllLayout
                },
                $help: {
                    $title: this.authorPage.localize.aw_help
                }
            }
        };
        this.$item = {
            $layout: {
                $items: []
            },
            $menus: [{
                $skin: "s-aw-menus",
                $layout: {
                    $layoutType: "row",
                    $items: [{
                        $layoutType: "row",
                        $autoSize: true,
                        $items: [{
                            $icon: {
                                $mode: "icon",
                                $path: "authoring/s-aw-"
                            },
                            $skin: "s-aw-menus-link",
                            $bind: "$help"
                        }, {
                            $icon: {
                                $mode: "icon",
                                $path: "authoring/s-aw-"
                            },
                            $skin: "s-aw-menus-link",
                            $bind: "$previousLayout"
                        }, {
                            $icon: {
                                $mode: "icon",
                                $path: "authoring/s-aw-"
                            },
                            $skin: "s-aw-menus-link",
                            $bind: "$nextLayout"
                        }, {
                            $skin: "s-aw-menus-link",
                            $bind: "$undoAllLayout"
                        }]
                    }, {
                        $category: "field",
                        $bind: "$viewType",
                        $skin: "s-aw-viewType",
                        $isEditMode: true,
                        $format: "$button",
                        $choiceLayout: "row"
                    }]
                }
            }]
        };
        this._initializePage();
        this.layoutSlot = document.createElement("div");
        this.layoutSlot.className = "s-aw-list-page";
        RawPage.prototype.loadBox.call(this, {
            $viewType: "layout",
            $links: {
                $help: document.site.$prototype.$links.$help
            }
        });
        this.topBarSlot = document.createElement("div");
        this.topBarSlot.setAttribute("data-s-article", this.id);
        this.appendArticleMenus(this.authorPage.topLeftBar.appendChild(this.topBarSlot));
    },
    dispose: function(){
        this.authorPage = this.topBarSlot = null;
        RawPage.prototype.dispose.call(this);
    }
});
