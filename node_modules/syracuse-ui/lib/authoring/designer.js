"use strict";
var helpers = require('syracuse-core/lib/helpers');
var RawPage = require("syracuse-ui/lib/page/rawPage").RawPage;
var designLocalization = require("syracuse-ui/lib/authoring/designLocalization");
var HistoryTool = require("syracuse-ui/lib/authoring/tools/historyTool").HistoryTool;
var DesignerPersistence = require("syracuse-ui/lib/authoring/designerPersistence").DesignerPersistence;
var TemplatesTool = require("syracuse-ui/lib/authoring/tools/templatesTool").TemplatesTool;

function Designer() {}

exports.Designer = helpers.defineClass(Designer, RawPage, {
	onEndHistoryChangeStep: function(itemToSelect) {},
	endTargetPageUpdate: function(selectedItem, isStructureUpdated) {
		this.awArticle.page.layoutValidator.validate(this.awArticle.page.layoutContent, true);
		selectedItem = selectedItem || this.awItem;
		this.historyTool.notifyUpdate();
		this.persistence.temporalySave();
	},
	toggleUIDesign: function(item, enable, disposingDesigner) {
		if (this.uiSwitchTool) {
			this.uiSwitchTool.toggleUIDesign(item, enable, disposingDesigner);
		}
	},
	showAdvancedItem: function(item, $isAdvanced) {
		if (this.uiSwitchTool) {
			this.uiSwitchTool.toggleUIDesign(item, $isAdvanced);
		}
	},
	showHiddenItem: function(item) {
		if (this.uiSwitchTool) {
			this.uiSwitchTool.showHiddenItem(item);
		}
	},
	applyChangeToMobile: function($article) {
		if (document.site.mobileGateway) {
			document.site.mobileGateway.applyChange($article);
		}
	},
	showTargetPageDiagnoses: function(message, options) {
		this.awArticle.showDiagnoses(message, options);
		if (document.site.mobileGateway) {
			document.site.mobileGateway.onShowTargetPageDiagnoses(message, options);
		}
	},
	_toggleDesignDialog: function(begin) {
		this.awArticle.page.dialogWrapper.$$closeBtn[0].style.display = begin ? "none" : "";
		this.awArticle.page.dialogWrapper.overlay.className = begin ? "s-aw-overlay" : "s-overlay";
	},
	onBeforeMainPageChange: function(continueChanging) {
		var self = this;
		if (self.historyTool.isUpdated && self.persistence) {
			document.site.showMessage({
				$title: self.localize.aw_updateMessageTitle,
				$message: self.localize.aw_cancelMessageText,
				$type: "question",
				$buttons: "yesnocancel",
				callback: function(response) {
					if (response.$clientId == "yes") {
						self.persistence.saveUpdate();;
						setTimeout(function() {
							self.closeDesigner();
							continueChanging();
						}, 300);
					} else {
						if (response.$clientId == "no") {
							self.closeDesigner();
							continueChanging();
						}
					}
				}
			});
			return false;
		}
		self.closeDesigner();
		return true;
	},
	openDesigner: function(designedItem) {
		this.localize = designLocalization.getLocalize();
		this.awArticle = designedItem;
		this.awArticle.designer = this;
		this.awArticle.isDesigned = true;
		this.$prototype = {
			$properties: {},
			$links: {}
		};
		this.$item = {};
		this.$autoFetch = false;
		this._unregisterResizer = true;
		if (this.awArticle.page == this.awArticle) {
			(this.diagnosePage = this.awArticle).clearUnknowFields();
			this.showTargetPageDiagnoses({
				$diagnoses: null
			});
		}
		if (this.awArticle.page.dialogWrapper) {
			this._toggleDesignDialog(true);
		}
		if (designedItem.$prototype && designedItem.$prototype.$article) {
			//imortant save article for page
			designedItem.$prototype.$article = helpers.object.clone(designedItem.$prototype.$article, true);
		}
		document.site.authorPage = this;
		this.loadBox(designedItem);
		if (this.awArticle.pageViewSelector) {
			this.awArticle.pageViewSelector.disable(true);
		}
	},
	closeDesigner: function() {
		if (this.awArticle.pageViewSelector) {
			this.awArticle.pageViewSelector.disable(false);
		}
		this.awArticle.designItem(false);
	},
	cancelUpdate: function() {
		var $item = helpers.object.clone(this.historyTool.$sourceItem, true);
		this.awArticle.page.reloadLayout($item);
		this.applyChangeToMobile($item);
		this.closeDesigner();
	},
	notifyDataChange: function(field, value) {
		this.persistence.temporalySave();
		var metaData = {};
		metaData[field.$item.$bind] = value;
		this.awItem.applyDesignMetaData(metaData, true);
		this.historyTool.notifyUpdate();
		this.applyChange(metaData);
	},
	loadDefaultTools: function(css) {
		css = css || "s-aw-page";
		this.historySlot = document.createElement("div");
		this.historySlot.className = css + "-history";

		this.helpLink = document.createElement("a");
		this.helpLink.title = this.localize.aw_help;
		this.helpLink.setAttribute("data-s-picker", this.helpLink.syraPickerType = "$authorHelp");
		this.helpLink.className = css + "-history-link-icon";
		this.helpLink.style.backgroundImage = "url('/syracuse-ui/themes/desktop/sage/images/authoring/s-aw-help.png')";
		this.historySlot.appendChild(this.helpLink);

		(this.historyTool = new HistoryTool()).load(this, css + "-history-link");

		this.workinCopySlot = document.createElement("div");
		this.workinCopySlot.className = css + "-wc";
		this.openWorkingCopy();
	},
	openWorkingCopy: function() {
		var id;
		if (this.persistence) {
			id = this.persistence.id;
			this.persistence.dispose();
			document.site.emptyDom(this.workinCopySlot);
		}
		this.persistence = new DesignerPersistence();
		this.persistence.id = id;
		this.persistence.load(this);
	},
	loadTemplateTools: function() {
		(this.templatesTool = new TemplatesTool()).load(this);
	},
	onClickPicker: function(picker) {
		if (picker.syraPickerType) {
			if (picker.syraPickerType == "close-designer") {
				var self = this;
				setTimeout(function() {
					self.closeDesigner();
				}, 100);
				return false;
			} else {
				if (this.historyTool.onClickPicker(picker)) {
					return false;
				}
				if (this.templatesTool) {
					var templateResult = this.templatesTool.onTemplateChoiceClick(picker, this.awItem, this.awLayout);
					if (templateResult) {
						this.endTargetPageUpdate(templateResult, true);
						return false;
					}
				}
				if (this.helpLink == picker) {
					return true;
				}
			}
		}
		return true;
	},
	onClickItem: function(item, target, article) {
		return true;
	},
	onMenuClick: function(menuItem) {
		return this.persistence.onMenuClick(menuItem);
	},
	dispose: function() {
		if (this.persistence) {
			this.persistence.dispose();
		}
		if (this.historyTool) {
			this.historyTool.dispose();
		}
		if (this.templatesTool) {
			this.templatesTool.dispose();
		}
		if (this.awArticle) {
			if (this.awArticle.page.dialogWrapper) {
				this._toggleDesignDialog(false);
			}
			this.awArticle.isDesigned = false;
			delete this.awArticle.designer;
		}
		document.site.authorPage = this.workinCopySlot = null;
		this.historyTool = this.templatesTool = null;
		this.awItem = this.awLayout = this.awArticle = null;
		this.helpLink = this.diagnosePage = this.persistence = null;
		RawPage.prototype.dispose.call(this);
	}
});