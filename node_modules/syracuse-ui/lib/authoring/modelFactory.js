"use strict";
var helpers = require('syracuse-core/lib/helpers');

function applySectionSmartModel(section) {
	var children = section.layoutContent.extractItems();
	section.layoutContent.clearContent();
	if (children.length > 0) {
		var $rows = [];
		var rowIndex = 0,
			colIndex = 0;
		for (var ii = 0, jj = children.length; ii < jj; ii++) {
			colIndex++;
			if (children[ii].isSection) {
				var subChildren = children[ii].layoutContent.getItems();
				if (subChildren && subChildren.length > 0) {
					if (subChildren[0].$field && subChildren[0].$field.$type == "application/x-array") {
						$rows.push({
							$layoutType: colIndex > 1 ? "row" : "stack",
							$items: []
						});
						colIndex = 1;
					}
				}
			} else {
				if (children[ii].$field && children[ii].$field.$type == "application/x-array") {
					$rows.push({
						$layoutType: colIndex > 1 ? "row" : "stack",
						$items: []
					});
					colIndex = 1;
				}
			}
			if (colIndex == 3) {
				$rows.push({
					$layoutType: colIndex > 1 ? "row" : "stack",
					$items: []
				});
				colIndex = 0;
			}
		}
		if (colIndex) {
			$rows.push({
				$layoutType: colIndex > 1 ? "row" : "stack",
				$items: []
			});
		}
		if ($rows.length == 1) {
			section.$item.$layout = $rows[0];
			section.renderLayoutContent();
			section.layoutContent.removeSpaceBox(true);
			section.layoutContent.newLoadChildItems(children);
		} else {
			section.$item.$layout = {
				$layoutType: "stack",
				$items: $rows
			};
			section.renderLayoutContent();
			rowIndex = colIndex = 0;
			for (var ii = 0, jj = children.length; ii < jj; ii++) {
				colIndex++;
				if (children[ii].isSection) {
					var subChildren = children[ii].layoutContent.getItems();
					if (subChildren && subChildren.length > 0) {
						if (subChildren[0].$field && subChildren[0].$field.$type == "application/x-array") {
							rowIndex++;
							colIndex = 1;
						}
					}
				} else {
					if (children[ii].$field && children[ii].$field.$type == "application/x-array") {
						rowIndex++;
						colIndex = 1;
					}
				}
				section.layoutContent.items[rowIndex].removeSpaceBox(true);
				section.layoutContent.items[rowIndex].loadChildItem(children[ii]);
				if (colIndex == 3) {
					rowIndex++;
					colIndex = 0;
				}
			}
		}
	}

	children = section.layoutContent.getItems();
	for (var ii = 0, jj = children.length - 1; ii < jj; ii++) {
		if (children[ii].isSection) {
			applySectionSmartModel(children[ii]);
		}
	}
}

function applySmartModel(page) {
	var children = page.layoutContent.extractItems();
	page.layoutContent.clearContent();
	page.$item.$layout = {
		$layoutType: "stack",
		$items: []
	};
	page.renderLayoutContent();
	page.layoutContent.clearContent();
	if (children.length > 0) {
		page.layoutContent.ensureSection(children[0]);
		if (children.length > 1) {
			if (children.length > 2) {
				var tabs = page.layoutContent.loadChildItem(null, {
					$layoutType: "tabs",
					$items: []
				});
				for (var ii = 1, jj = children.length - 1; ii < jj; ii++) {
					tabs.ensureSection(children[ii]);
				}
			}
			page.layoutContent.ensureSection(children[children.length - 1]);
		}
	}
	children = page.layoutContent.getItems();
	for (var ii = 0, jj = children.length - 1; ii < jj; ii++) {
		applySectionSmartModel(children[ii]);
	}
	return page.$item;
}

function applyColumnsModel(item, children, maxCols) {
	item.$item.$layout = {
		$layoutType: "row",
		$items: []
	};
	var width = Math.ceil(100 / maxCols);
	var widths = [];
	for (var ii = 0; ii < maxCols; ii++) {
		widths.push(width);
	}
	item.$item.$layout.$widths = widths.join(",");
	if (children.length > maxCols) {
		for (var ii = 0; ii < maxCols; ii++) {
			item.$item.$layout.$items.push({
				$layoutType: "stack",
				$items: []
			});
		}
	}
	item.renderLayoutContent();
	if (children.length > maxCols) {
		var colIndex = 0;
		for (var ii = 0, jj = children.length; ii < jj; ii++) {
			item.layoutContent.items[colIndex++].loadChildItem(children[ii]);
			if (colIndex == (maxCols - 1)) {
				colIndex = 0;
			}
		}
	} else {
		item.layoutContent.clearContent();
		item.layoutContent.newLoadChildItems(children);
	}
}

function _applyModel(awItem, $model) {
	var children = awItem.layoutContent.extractItems();
	awItem.layoutContent.clearContent();
	switch ($model) {
		case "$model_rows":
			awItem.$item.$layout = {
				$layoutType: "stack",
				$items: []
			};
			awItem.renderLayoutContent();
			awItem.layoutContent.newLoadChildItems(children);
			break;
		case "$model_3cols":
			applyColumnsModel(awItem, children, 3);
			break;
		case "$model_4cols":
			applyColumnsModel(awItem, children, 4);
			break;
		case "$model_mixt":
			awItem.$item.$layout = {
				$layoutType: "row",
				$widths: "50,50",
				$items: []
			};
			awItem.renderLayoutContent();
			awItem.layoutContent.clearContent();
			if (children.length) {
				awItem.layoutContent.loadChildItem(children[0]);
				if (children.length > 2) {
					awItem.layoutContent.loadChildItem(null, {
						$layoutType: "stack",
						$items: []
					}).newLoadChildItems(children, 1);
				} else {
					awItem.layoutContent.loadChildItem(children[1]);
				}
			}
			break;
		case "$model_tabs":
			awItem.$item.$layout = {
				$layoutType: "tabs",
				$items: []
			};
			awItem.renderLayoutContent();
			awItem.layoutContent.clearContent();
			for (var ii = 0, jj = children.length; ii < jj; ii++) {
				awItem.layoutContent.ensureSection(children[ii]);
			}
			break;
	}
};

exports.onModelClick = function($bind, awPalette) {
	var $item;
	switch ($bind) {
		case "$model_smart":
			$item = applySmartModel(awPalette.targetPage);
			break;
		case "$model_factory":
			$item = helpers.object.clone(awPalette.targetPage.ensureDefaultArticle(awPalette.getawPrototype().$article, awPalette.getawPrototype()), true);
			break;
		default:
			_applyModel(awPalette.awItem, $bind);
			break;
	}
	document.site.authorPage.endTargetPageUpdate(awPalette.awItem, true);
};

function _addModelLink($model, slot, isTextIcon) {
	var link = document.createElement("a");
	link.title = document.site.authorPage.localize["aw_model_" + $model];
	link.setAttribute("data-s-picker", "$model_" + $model);
	link.className = "s-aw-model";
	var img = document.createElement("div");
	img.className = "s-aw-model-icon";
	img.style.backgroundImage = "url('/syracuse-ui/themes/desktop/sage/images/authoring/s-aw-model-" + $model + ".png')";
	link.appendChild(img);
	if (isTextIcon) {
		var label = document.createElement("div");
		label.className = "s-aw-model-label";
		label.textContent = link.title;
		link.appendChild(label);
	} else {
		link.className += " s-icon";
	}
	return slot.appendChild(link);
}


exports.fillModelsSection = function(sections, $level) {
	for (var ii = 0, jj = sections.length; ii < jj; ii++) {
		if (sections[ii].$item.$isSectionModels) {
			document.site.emptyDom(sections[ii]._body);
			if ($level == "article") {
				var slot = document.createElement("div");
				slot.className = "s-aw-model-row";
				_addModelLink("smart", slot, true);
				sections[ii]._body.appendChild(slot);
				slot = document.createElement("div");
				slot.className = "s-aw-model-row";
				_addModelLink("factory", slot, true);
				sections[ii]._body.appendChild(slot);
			}
			var slot = document.createElement("div");
			slot.className = "s-aw-model-row";
			_addModelLink("tabs", slot);
			_addModelLink("rows", slot);
			_addModelLink("3cols", slot);
			_addModelLink("4cols", slot);
			_addModelLink("mixt", slot);
			sections[ii]._body.appendChild(slot);
			break;
		}
	}
};