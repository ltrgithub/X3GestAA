"use strict";
var helpers = require('syracuse-core/lib/helpers');
var Site = require("syracuse-ui/lib/site/site").Site;
var hacks = require("syracuse-ui/lib/tablet/hacks");
var hacksDadim = require("syracuse-ui/lib/tablet/hacksDadim");
var forEachKey = helpers.object.forEachKey;

function TabletSite() {}

exports.TabletSite = helpers.defineClass(TabletSite, Site, {
	loadBox: function(siteOptions) {
		Site.prototype.loadBox.call(this, siteOptions);
		hacks.initAfterLoad(this);
		hacksDadim.init(this);
		return this;
	},
	getPageSortedFields: function(page) {
		function _sortFields(props, fieldsOrder) {
			forEachKey(props, function(alphanumId, field) {
				if (field.$type === "application/x-array") {
					_sortFields(field.$item.$properties, fieldsOrder);
				} else {
					var screenId = alphanumId.charCodeAt(0);
					var blockId = alphanumId.charCodeAt(1);
					var toto = alphanumId.substring(2, alphanumId.length);
					var fieldId = parseInt(alphanumId.substring(2, alphanumId.length), 10);
					var numId = (screenId << 24) + (blockId << 16) + (fieldId << 8);
					fieldsOrder[alphanumId] = numId;
				}
			});
		}
		if (page) {
			page.fieldsOrder = {};
			_sortFields(page.$prototype.$properties, page.fieldsOrder);
		}
	}
});


exports.load = function($item, $prototype) {
	var site = new TabletSite();
	site.$device = "tablet";
	return site.loadBox({
		fusionGatewayClass: require('syracuse-ui/lib/fusion/fusionGateway').FusionGateway,
		$item: $item,
		$prototype: $prototype
	});
};