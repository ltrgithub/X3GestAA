"use strict";
var helpers = require('syracuse-core/lib/helpers');
var Site = require("syracuse-ui/lib/site/site").Site;
var hacks = require("syracuse-ui/lib/tablet/hacks");
var hacksDadim = require("syracuse-ui/lib/tablet/hacksDadim");
// temporarily disabled 
// var MobileEventListener = require('./mobileEventListener').MobileEventListener;
// To enable Add this in main-tablet.htlml  <script src="/syracuse-ui/deps/jquery-mobile/jquery.mobile.custom.js"></script> --!>

function TabletSite() {}

exports.TabletSite = helpers.defineClass(TabletSite, Site, {
	unload: function() {
		Site.prototype.unload.call(this);
		hacks.dispose(this);
	},
	isTablet: true,
	loadBox: function(siteOptions) {
		Site.prototype.loadBox.call(this, siteOptions);
		// Hack event listener
		if (siteOptions.mobileEventListener) {
			this.mobileEventListener = new this.siteOptions.mobileEventListener();
			this.mobileEventListener.load();
		}
		// Hack desktop classes
		hacks.init(this);
		hacksDadim.init();
		return this;
	},
	getFieldWidth: function($field, useSmartMode, $titleLength, isSortable) {
		// We can change the size of the fields here but we don't know if we are in a fusionPgae or not (to early)
		// FDB - I changed the size of the fields in hacks -Add escape picker
		return Site.prototype.getFieldWidth.call(this, $field, useSmartMode, $titleLength, isSortable);
	},
	ensurePreferences: function() {
		return (this._preferences = this._preferences || {
			convergenceBar: {
				isDocked: false,
				isCollapsed: true
			},
			menuBar: {
				isDocked: true,
				isCollapsed: true
			}
		});
	}
});


exports.load = function($item, $prototype) {
	return (new TabletSite()).loadBox({
		widgetsLibrary: require('syracuse-ui/lib/site/widgetsLibrary'),
		fusionGatewayClass: require('syracuse-ui/lib/fusion/fusionGateway').FusionGateway,
		userProfileClass: require('syracuse-ui/lib/site/userProfile').UserProfile,
		// disabled mobileEventListener: require('./mobileEventListener').MobileEventListener,
		$item: $item,
		$prototype: $prototype
	});
};