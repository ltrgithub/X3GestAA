"use strict";
var helpers = require('syracuse-core/lib/helpers');
// !! Put the required in the functions by class instead of header because required could be buggy
var util = require('syracuse-ui/lib/fusion/core/client/sap/util');
var keys = require('syracuse-ui/lib/fusion/tools/constant').keybordKey;
var tabletUtil = require('./helpers');
var sapUtil = require('syracuse-ui/lib/fusion/core/client/sap/util').Fusion;
var syraUtil = require('syracuse-ui/lib/fusion/core/client/sap/util').Syra;
var MobileEventListener = require("syracuse-ui/lib/tablet/mobileEventListener").MobileEventListener;
var MenuBar = require('syracuse-ui/lib/page/bar/menuBar').MenuBar;


function touchover(site) {
	// Bind click on Escape/Reset button
	site.$$layoutSlot.delegate(".s-pager-link, a.s-page-pager-link", "touchstart", function(event) {
		$(event.target).closest("a").addClass("touch");

	});
	site.$$layoutSlot.delegate(".s-pager-link, a.s-page-pager-link", "touchend", function(event) {
		$(event.target).closest("a").removeClass("touch");
	});
}

function DesktopPage() {
	var DesktopPage = require('syracuse-ui/lib/page/desktopPage').DesktopPage;
	var drawBox = DesktopPage.prototype.drawBox;

	DesktopPage.prototype.drawBox = function() {
		var self = this;
		document.site.setPreferences("menuBar", {
			"$isResizerDisabled": true,
			"$swiper": true
		}, ["$isResizerDisabled", "$swiper"]);
		drawBox.call(self);

		var evtListener = new MobileEventListener();
		evtListener.load();

		var spot = $(".s-dash-menubar-resizer");
		evtListener._bindSwipePanel(spot);
		var pspot = $(".s-page-menubar-resizer");
		evtListener._bindSwipePanel(pspot);


	};
}





function WorkBook() {
	var WorkBook = require('syracuse-ui/lib/fusion/workBook').WorkBook;
	var _onFieldEvent = WorkBook.prototype.onFieldEvent;

	WorkBook.prototype.onFieldEvent = function(options, redirect) {


		var inputs = this.selectedSheet.fieldsOrder;

		if (options && options.event && options.event.type === "focusin" && options.event.relatedTarget && options.event.relatedTarget.id != "s-site-body" && !$(options.event.relatedTarget).is(".s-fusion-bar-block-title")) {

			var controller = this.fusionSite.controller._hosterController;
			var srcField = document.site.findField(options.event.relatedTarget);

			var sapController = this.fusionSite.controller._sapController;
			var curentFusionField = sapController.getCurrInst();

			var targetId = (options.field.$item && options.field.$item.$bind) || "";
			var targetnl = null;
			if (options.field.arrayLevel == "cell") {
				if (options.field.getArticle().$serverIndex)
					targetnl = options.field.getArticle().$serverIndex + 1;
			}

			var insideGrid = curentFusionField.nl != null && targetnl != null;
			var backwardLine = (insideGrid && curentFusionField.nl > targetnl) || false;
			var sameLine = (insideGrid && curentFusionField.nl == targetnl);
			var backward = (backwardLine || (!insideGrid && inputs[curentFusionField.xid] > inputs[targetId]));



			if (curentFusionField.xid != targetId || (insideGrid && curentFusionField.nl != targetnl)) {
				if (!redirect && srcField && srcField.arrayLevel && sapUtil.isListScreen(syraUtil.getMetaFromObject(srcField).$bind)) {



					var e = jQuery.extend(new jQuery.Event(), {
						type: "keydown",
						target: options.event.relatedTarget,
						keyCode: keys["VK_TAB"],
						isSimulated: true,
						shiftKey: (backward) ? true : false,
						originalEvent: {},

					});
					options.field = srcField;
					options.event = e;
				} else if (sapUtil.isListScreen(syraUtil.getMetaFromObject(options.field).$bind)) {
					// the focus is moving from the  main page to the left list 
					var e = jQuery.extend(new jQuery.Event(), {
						type: "keydown",
						target: options.event.relatedTarget,
						keyCode: keys["VK_TAB"],
						isSimulated: true,
						shiftKey: true,
						originalEvent: {},

					});
					options.field = srcField;
					options.event = e;


				} else {

					var curDomElmt = sapController.getBoundField(curentFusionField, {
						"arrayCell": curentFusionField.nl
					});

					var e = jQuery.extend(new jQuery.Event(), {
						type: "keydown",
						target: curDomElmt.$$item.get(0),
						keyCode: keys["VK_TAB"],
						isSimulated: true,
						shiftKey: (backward) ? true : false,
						originalEvent: {},

					});

					options.event = e;
					options.field = curDomElmt;
					//tabletUtil.logOnServer( " field id=" + options.field.id);
					//tabletUtil.logOnServer("backward  " + backward);
				}


			}

		}
		return _onFieldEvent.call(this, options, redirect);

	};
}


exports.init = function(site) {
	WorkBook();
	touchover(site);
	DesktopPage();



};