"use strict";
var helpers = require('syracuse-core/lib/helpers');
// !! Put the required in the functions by class instead of header because required could be buggy
var util = require('syracuse-ui/lib/fusion/core/client/sap/util');
var keys = require('syracuse-ui/lib/fusion/tools/constant').keybordKey;

function WorkBook() {

	var WorkBook = require('syracuse-ui/lib/fusion/workBook').WorkBook;
	var _onFieldEvent = WorkBook.prototype.onFieldEvent;

	WorkBook.prototype.onFieldEvent = function(options, redirect) {
		//var fieldId=this.fusionSite._hoster.controller.findField[options.event.target] ;
		var inputs = $('.s-field-input, .s-inplace-input').get();

		console.log("event type=" + options.event.type);
		console.log("event simulated=" + options.event.isSimulated);
		//console.log("event originalEvent="+ options.event.originalEvent.type) ;

		if (options.event.type === "focusin")
			console.log("focusin " + options.field.context);

		//if (options && options.event && options.event.type === "focusin" && options.event.isSimulated && options.event.relatedTarget ) {
		if (options && options.event && options.event.type === "focusin" && options.event.relatedTarget && !options.field.context /*&& !options.field.context1*/ ) {
			//alert("focusin context " + options.field.context + "focusin context1 " + options.field.context1 +" button prev/next");
			// simulate tabulation for the "next " button on tablet
			//alert("simulated" + options.event.isSimulated+ " releted target: "+inputs.indexOf(options.event.relatedTarget)) ;
			//var fieldId=this.fusionSite._hoster.controller.findField[options.event.relatedTarget] ;//.syraFieldId
			var backward = (inputs.indexOf(options.event.target) < inputs.indexOf(options.event.relatedTarget));

			//alert("direction? target:"+ inputs.indexOf(options.event.target) + " relatedTarget:" +inputs.indexOf(options.event.relatedTarget)) ;

			var e = jQuery.extend(new jQuery.Event(), {
				type: "keydown",
				//type: "mousedown",
				//target: options.event.target,
				target: options.event.relatedTarget,
				keyCode: keys["VK_TAB"],
				isSimulated: true,
				shiftKey: (backward) ? true : false,
				originalEvent: {},

			});
			options.field.context = 0;

			options.event = e;

			/*var tg = options.event.relatedTarget ;
			var evt = document.createEvent('Event');
			evt.initEvent('keydown', true, true);
			evt.keyCode=keys["VK_TAB"] ;
			//evt.shiftKey=(backward) ? true : false;
			tg.dispatchEvent(evt);
			//options.event = evt;*/

		} else if (options && options.event && options.event.type === "keydown" && options.event.keyCode == keys["VK_TAB"]) {
			//options.field.context1=1 ;
			console.log("keydown " + options.event.keyCode);

		} else {
			//options.field.context1=0 ;
			//if  (options.event.type === "focusin")
			//	options.field.context= 0 ;
			if (options && options.event && options.event.type === "mousedown") {
				console.log("mousedown " + options.field.context);
				options.field.context = 1;
				//options.field.context1=1 ;
				console.log("mousedown " + options.field.context);
			}

			if (options.event.type === "focusin") {
				//console.log(+ "focusin context1 " + options.field.context1);
			}





		}
		return _onFieldEvent.call(this, options, redirect);
	};
}


exports.init = function() {
	WorkBook();
};