"use strict";
var helpers = require('syracuse-core/lib/helpers');
var EventListener = require("syracuse-ui/lib/site/aside/eventListener").EventListener;

function MobileEventListener() {}

var _swipe = $.event.special.swipe.handleSwipe;
$.event.special.swipe.handleSwipe = function(start, stop) {
	_swipe(start, stop);


	/*if ( stop.time - start.time < $.event.special.swipe.durationThreshold &&
			Math.abs( start.coords[ 0 ] - stop.coords[ 0 ] ) > $.event.special.swipe.horizontalDistanceThreshold &&
			Math.abs( start.coords[ 1 ] - stop.coords[ 1 ] ) < $.event.special.swipe.verticalDistanceThreshold ) {
	*/
	var borderEvt;

	if (start.coords[0] < stop.coords[0]) {
		if (start.coords[0] < 10)
			borderEvt = "swiperightleftborder";
		else
			borderEvt = "swiperight";
	} else if (start.coords[0] > stop.coords[0]) {
		if (start.coords[0] > $(document).width() - 20)
			borderEvt = "swipeleftrightborder";
		else
			borderEvt = "swipeleft";
	}
	if (borderEvt)
		start.origin.trigger("swipe").trigger(borderEvt);
	//}

};

exports.MobileEventListener = helpers.defineClass(MobileEventListener, null /*EventListener*/ , {
	load: function() {
		//EventListener.prototype.load.call();
		try {
			this._bindSwipeEvents();
		} catch (e) {
			// Temporarily to not propagate errors to  desktop client
			console.log("mobileEventListener error\n" + e.stack);
		}
	},
	_bindSwipeEvents: function() {
		document.site.$$layoutSlot.delegate("article.s-list *", "swipeleft", function(event, data) {
			//$(document).on("swipeleft", function(event, data) {
			var article = document.controller.findArticle($(event.target));
			if (article.list && article.list.pagging) {
				article.list.pagging.onShortKeyEvent(false);
				event.stopPropagation();
			}

		});
		//$(document).on("swiperight", function(event, data) {
		document.site.$$layoutSlot.delegate("article.s-list *", "swiperight", function(event, data) {
			//var listdescendants=$("article.s-list *");
			var article = document.controller.findArticle($(event.target));
			if (article.list && article.list.pagging) {
				article.list.pagging.onShortKeyEvent(true);
				event.stopPropagation();
			}
		});


		$(document).on("swiperightleftborder", function(event, data) {
			//alert("swiperightleftborder");

		});
		$(document).on("swipeleftrightborder", function(event, data) {
			//document.site.$$layoutSlot.delegate(".s-page-menubar-slot", "swipeleftrightborder", function(event, data) {
			var panel = $(".s-page-menubar-slot");
			panel.css("display", "table-cell"); //show();
			//alert("swipeleftrightborder");


		});
		document.site.$$layoutSlot.delegate(".s-page-menubar-slot", "swiperight", function(event, data) {
			var panel = $(".s-page-menubar-slot");
			panel.css("display", "none");
			//alert("swipeleftright");
		});



		//document.site.$$layoutSlot.delegate("*[title]", "taphold", function(event, data) {
		$(document).on("taphold", function(event, data) {
			event.preventDefault();
			//var tooltip=$('<span class="s-tooltip">'+$(event.target).attr("title")+'</span');
			//var tg=$(event.currentTarget.activeElement) ;
			var tg = $(event.target);
			var title = tg.attr("title");
			if (title) {
				//alert(title);
				//if ($(event.target).attr("title") && $(event.target).attr("title")!="")
				var p = tg.parents('#s-site-body');
				var position = tg.offset();
				var tooltip = $('<div>');
				tooltip.html(title);
				tooltip.css("position", "absolute");
				tooltip.css("top", (position.top + 15) + "px");
				tooltip.css("left", (position.left + 15) + "px");
				tooltip.addClass("s-tooltip");
				p.after(tooltip);

			}
			//alert("taphold") ;
		});

		$(".s-tooltip").on("mouseup", function(event, data) {
			event.preventDefault();
			alert("mouseup");
			var a = data;
			var th = this;
			var b = 1;
		});
		$(document).on("tap", function(event, data) {
			//event.preventDefault();
			//alert("tap") ;
			var tooltips = $(".s-tooltip");
			tooltips.each(function() {
				$(this).remove();
			});
			var b = 1;
		});

	}
});