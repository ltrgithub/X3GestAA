"use strict";
var helpers = require('syracuse-core/lib/helpers');
// !! Put the required in the functions by class instead of header because required could be buggy

var menuImgs = ["first", "last", "next", "previous"];
var localeData;

function numericField() {
	var NumericField = require('syracuse-ui/lib/field/numericField').NumericField;
	// Display numeric keyboard -> Type should be number
	var render = NumericField.prototype.render;
	NumericField.prototype.render = function() {
		var res = render.call(this);
		this._input && this._input.setAttribute("type", "number");
		return res;
	};
}

function field() {
	var Field = require('syracuse-ui/lib/field/field').Field;
	// Replace <label> by <div> - remove for attribute
	Field.prototype.appendTitle = function() {
		if (!(this.$item.$inplace || this.$item.$isTitleHidden)) {
			this.domTitle = document.createElement("div");
			this.domTitle.className = this._$cssTopField + "-title";
			this._domItem.appendChild(this.domTitle);
		}
	};
	// use table-cell
	var loadBox = Field.prototype.loadBox;
	Field.prototype.loadBox = function($$item) {
		loadBox.call(this, $$item);
		if (this._input) {
			var parent = $(this._input.parentNode);
			parent.css({
				"display": "table",
				"table-layout": "fixed"
			});
			parent.children().each(function(idx, elmt) {
				var e = $(elmt);
				if (e.hasClass("s-field-context-menus") || e.hasClass("s-field-pickers")) {
					e.css({
						"position": "relative",
						"display": "table-cell",
						"padding-right": "0px",
						"padding-left": "3px"
					});
					$(elmt.firstChild).css({
						"height": "20px",
						"width": "25px"
					});
				} else if (e.hasClass("s-field-input-ref-desc")) {
					e.css({
						"position": "absolute",
						"left": "0px",
						"top": "20px"
					});
				}

			});
			/*
			parent.children("div.s-field-context-menus, div.s-field-pickers").css({
				"position":"relative",
				"display":"table-cell",
				"padding-right":"0px"
			})*/
		}
		this.boxPickersPadding = 0;
	};
	var toggleBoxPicker = Field.prototype.toggleBoxPicker;
	Field.prototype.toggleBoxPicker = function($$item) {
		toggleBoxPicker.call(this, $$item);
		if (this._input) {
			this._input.style.paddingRight = "0px";
		}
		if (this.boxPickers && !this.$isDisabled) {
			this.boxPickers.style.display = "table-cell";
		}
	};
}

function menuItem() {
	var MenuItem = require('syracuse-ui/lib/menus/menuItem').MenuItem;
	// Hide excel and word links in right panel
	var loadBox = MenuItem.prototype.loadBox;
	MenuItem.prototype.loadBox = function() {
		var res = loadBox.call(this);
		if (this.$item.$bind && typeof this.$item.$bind === "string" &&
			(this.$item.$bind.indexOf("$word") === 0 ||
				this.$item.$bind.indexOf("$excel") === 0 ||
				this.$item.$bind.indexOf("$pptslide") === 0)) {

			this._hide(true);
		}
		return res;
	};
	// 
	var setIconValue = MenuItem.prototype._setIconValue;
	MenuItem.prototype._setIconValue = function() {
		var name = this.$iconValue || this.value || this.$icon.$value || this.$item.$bind.replace("$", "");
		if (menuImgs.indexOf(name) >= 0) {
			var $path = "/syracuse-ui/themes/tablet/sage/images/" + (this.$icon.$path || "");
			this.iconValue.style.backgroundImage = "url('" + $path + name + ".png')";
		} else {
			setIconValue.call(this);
		}
	};
}

function commonEventHandlingTools() {
	var CommonEventHandlingTools = require('syracuse-ui/lib/fusion/core/client/eventhandling/common').CommonEventHandlingTools;
	CommonEventHandlingTools._checkCtxMenuEntry = function(men) {
		if (men && men.id && men.id === "$tabularExport")
			return false;
		return true;
	};
}

function removeFlash() {
	var flashWidget = require('syracuse-ui/lib/field/chart/flashWidget');
	var locale = require('syracuse-core/lib/locale');
	if (!localeData)
		localeData = locale.resources(module)();

	flashWidget.FlashWidget.prototype.drawBox = function() {
		var $cnt = $("<div class=\"s-h1-body s-cst-sty-not-sup\">" + localeData["not_sup"] + "</div>");
		$(this.layoutSlot).append($cnt);
	};
	flashWidget.FlashWidget.prototype.onWindowResize = function() {};
	flashWidget.FlashWidget.prototype.setDataBind = function(dataRecordSet, parentDataRecord, metaData) {};
	flashWidget.FlashWidget.prototype.applyDesignMetaData = function(metadata, designing) {};
	flashWidget.FlashWidget.prototype.dispose = function() {};

	flashWidget.CubeChart.prototype.drawBox = function() {
		var $cnt = $("<div class=\"s-h1-body s-cst-sty-not-sup\">" + localeData["not_sup"] + "</div>");
		$(this.layoutSlot).append($cnt);
	};
	flashWidget.CubeChart.prototype.onWindowResize = function() {};
	flashWidget.CubeChart.prototype.setDataBind = function(dataRecordSet, parentDataRecord, metaData) {};
	flashWidget.CubeChart.prototype.applyDesignMetaData = function(metadata, designing) {};
	flashWidget.CubeChart.prototype.dispose = function() {};
}

exports.init = function() {
	numericField();
	field();
	menuItem();
	commonEventHandlingTools();
	removeFlash();
};