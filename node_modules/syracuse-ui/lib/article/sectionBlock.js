"use strict";
var helpers = require('syracuse-core/lib/helpers');
var Box = require("./box").Box;

function SectionBlock() {}

exports.SectionBlock = helpers.defineClass(SectionBlock, Box, {
	loadBox: function() {
		this.page.registerSectionBlock(this);
		this.boxFields = {};
		this.$item.$name = this.$item.$name || this.$id; //used for authoring
		if (!this.$item.$title) {
			if (this.layoutParent && this.layoutParent.$layout && this.layoutParent.$layout.$items.length > 1) {
				this.$item.$title = "-";
			}
		}
		this._onRendering = true;
		this.drawBox();
		this._onRendering = false;
		this.validateFieldVisibility();
	},

	validateFieldVisibility: function() {
		if (!this._onRendering) {
			var $binds = Object.keys(this.boxFields);
			var count = $binds.length;
			if (count) {
				this.isInvisible = true;
				for (var ii = 0; ii < count; ii++) {
					if (!this.boxFields[$binds[ii]].isInvisible) {
						this.isInvisible = false;
						break;
					}
				}
				this.page.setSectionVisibility(this);
			}
		}
	},
	dispose: function() {
		this.boxFields = null;
		Box.prototype.dispose.call(this);
	},
	_expandSiblingBoxes: function(layout, expand) {
		for (var ii = 0, jj = layout.items.length; ii < jj; ii++) {
			var item = layout.items[ii];
			if (item.isLayout) {
				this._expandSiblingBoxes(item, expand);
			} else {
				if (item.isSection && item != this) {
					item._expandBody(expand);
				}
			}
		}
	},
	expandSiblingBoxes: function(expand) {
		if (this.boxParent && this.boxParent.layoutContent) {
			this._expandSiblingBoxes(this.boxParent.layoutContent, expand);
		}
	},
	initializeSection: function($item) {
		this.localize = document.site.localize;
		this.isSection = true;
		if ($item) {
			if (!$item.$layout) {
				$item.$layout = {};
			}
			if (!$item.$layout.$items) {
				$item.$layout.$items = [];
			}
		}
	},
	ensureSkin: function() {
		this.$authoringLevel = this.boxParent.isSection ? "block" : "section";
		this.$skin = this.$item.$skin;
		if (!this.$skin) {
			if (this.boxParent.isSection) {
				this.$skin = this.getArticle().$defaultSkinBlock || this.page.$defaultSkinBlock || "s-h2";
			} else {
				this.$skin = this.getArticle().$defaultSkinSection || this.page.$defaultSkinSection || "s-h1";
			}
		}
	}
});