"use strict";

function _notifyDeleteRecord(page, list, record){
    var sendBag = page.ensureSendBag(list);
    var dataRecords = list.ensureDataRecords();
    if (record) {
        list._store._records.splice(record.$recordIndex, 1);
        if (list.builder.isSingleBuilder) {
            dataRecords.splice(record.$recordIndex, 1);
            sendBag.dataRecords = dataRecords;
        }
        else {
            var found = list.findDataRecord(record.$uuid);
            if (found) {
                dataRecords.splice(found.$index, 1);
                record.$index = found.$index;
            }
            sendBag.deleteRecord(record);
            delete record.$index;
        }
        list.removeItem(record, true);
    }
    else {
        dataRecords.splice(0, dataRecords.length);
        sendBag.dataRecords = [];
        list._store.removeRecords();
    }
    list._store._ensureRecordsIndex();
    exports.notifyDataChange(page, list, sendBag.dataRecords);
}

function _notifyCreateRecord(page, list, record){
    var sendBag = page.ensureSendBag(list);
    var dataRecords = list.ensureDataRecords();
    var options = {};
    if (record) {
        options.$recordIndex = record.$recordIndex;
        options.isInsert = true;
    }
    else {
        options.$recordIndex = list._store._records.length;
    }
    if (list.builder.isSingleBuilder) {
        (sendBag.dataRecords = dataRecords).splice(options.$recordIndex, 0, null);
        list._store.appendRecord(options);
        list._store._ensureRecordsIndex();
    }
    else {
        options.dataRecord = {
            $uuid: document.controller.generateUUID()
        };
        if (record) {
            var found = list.findDataRecord(record.$uuid);
            dataRecords.splice(found.$index, 0, options.dataRecord);
        }
        else {
            dataRecords.push(options.dataRecord);
        }
        var newRecord = list._store.appendRecord(options);
        sendBag.createRecord(newRecord, options.$recordIndex);
        list._store._ensureRecordsIndex();
        exports.notifyDataChange(page, list, sendBag.dataRecords);
    }
}

exports.notifyReorderRecords = function(page, list, sourceRecord, targetRecord, $insert){
    var dataRecords = list.ensureDataRecords();
    var dataRecord = dataRecords[sourceRecord.$recordIndex];
    
    dataRecords.splice(sourceRecord.$recordIndex, 1);
    list._store._records.splice(sourceRecord.$recordIndex, 1);
    if (targetRecord.$recordIndex > sourceRecord.$recordIndex) {
        sourceRecord.$recordIndex = ($insert == "insertAfter") ? targetRecord.$recordIndex : (targetRecord.$recordIndex - 2);
    }
    else {
        sourceRecord.$recordIndex = ($insert == "insertAfter") ? targetRecord.$recordIndex + 1 : (targetRecord.$recordIndex);
    }
    sourceRecord.$recordIndex = Math.max(sourceRecord.$recordIndex, 0);
    dataRecords.splice(sourceRecord.$recordIndex, 0, dataRecord);
    list._store._records.splice(sourceRecord.$recordIndex, 0, sourceRecord);
    sourceRecord.notifyReorder(targetRecord, $insert);
    list._store._ensureRecordsIndex();
    
    var sendBag = page.ensureSendBag(list);
    if (list.builder.isSingleBuilder) {
        sendBag.dataRecords = dataRecords;
    }
    else {
        sendBag.reorderRecord(sourceRecord, targetRecord);
    }
    exports.notifyDataChange(page, list, sendBag.dataRecords);
};

exports.notifyActionChange = function(page, target, value, notifyServer){
    if (target != page) {
        if (target.arrayLevel == "record") {
            if (target.list.$prototype.$type == "application/x-array") {
                if (value.$delete || value.$create) {
                    if (value.$delete) {
                        _notifyDeleteRecord(page, target.list, target);
                    }
                    if (value.$create) {
                        _notifyCreateRecord(page, target.list, target);
                    }
                    return;
                }
            }
        }
        else {
            if (target.$prototype && target.$prototype.$type == "application/x-array") {
                if (value.$delete || value.$create) {
                    if (value.$delete) {
                        _notifyDeleteRecord(page, target);
                    }
                    if (value.$create) {
                        _notifyCreateRecord(page, target);
                    }
                    return;
                }
            }
        }
    }
    var articleParent = target.getArticle();
    var sendBag = page.ensureSendBag();
    var articleSendBag = page.ensureSendBag(articleParent);
    var $actions;
    var $bind;
    var dataset = articleSendBag.dataset || articleSendBag;
    if (target.$item && target.$item.$bind) {
        var $properties = dataset.$properties = dataset.$properties || {};
        $properties = $properties[target.$item.$bind] = $properties[target.$item.$bind] || {};
        $actions = $properties.$actions = $properties.$actions || {};
        $bind = "$properties";
    }
    else {
        $bind = "$actions";
        $actions = dataset.$actions = dataset.$actions || {};
    }
    Object.keys(value).forEach(function($bind){
        $actions[$bind] = value[$bind];
    });
    value = dataset[$bind];
    if (articleParent != page) {
        while (articleParent != page) {
            if (articleParent.arrayLevel == "record") {
                var list = articleParent.list;
                var listSendBag = page.ensureSendBag(list);
                if (list.$prototype.$type == "application/x-array") {
                    var found = list.findDataRecord(articleParent.$uuid);
                    listSendBag.saveRecordChange(articleParent, $bind, value, found.$index);
                    value = listSendBag.dataRecords;
                }
                else {
                    if ($bind) {
                        (listSendBag.dataset = listSendBag.dataset || {})[$bind] = value;
                    }
                    value = listSendBag.dataset;
                }
                $bind = list.$item.$bind;
                articleParent = list.articleParent;
            }
            else {
                if (articleParent.arrayLevel != "array") {
                    if (articleParent.dataset && articleParent.dataset.$uuid) {
                        sendBag.$uuid = articleParent.dataset.$uuid;
                    }
                    sendBag[$bind] = value;
                }
                articleParent = articleParent.getArticleParent();
            }
        }
        sendBag[$bind] = value;
    }
    if (notifyServer !== false) {
        if (page.dataset && page.dataset.$uuid) {
            sendBag.$uuid = page.dataset.$uuid;
        }
        page._notifyChangeToServer(sendBag);
    }
};


exports.notifyDataChange = function(page, field, value){
    var sendBag = page.ensureSendBag();
    var articleParent = field.getArticle();
    var $bind = field.$item.$bind;
    while (articleParent != page) {
        if (articleParent.arrayLevel == "record") {
            var list = articleParent.list;
            var listSendBag = page.ensureSendBag(list);
            if (list.$prototype.$type == "application/x-array") {
                var dataRecords = list.ensureDataRecords();
                if (list.builder.isSingleBuilder) {
                    (listSendBag.dataRecords = dataRecords)[articleParent.$recordIndex] = value;
                }
                else {
                    var found = list.findDataRecord(articleParent.$uuid);
                    dataRecords[found.$index][$bind] = value;
                    listSendBag.saveRecordChange(articleParent, $bind, value, found.$index);
                }
                value = listSendBag.dataRecords;
            }
            else {
                if (list.$prototype.$type == "application/x-object") {
                    (listSendBag.dataset = listSendBag.dataset || {})[$bind] = value;
                    value = listSendBag.dataset;
                }
            }
            $bind = list.$item.$bind;
            if (list.onAfterNotifyDataChange) {
                list.onAfterNotifyDataChange(listSendBag);
            }
            articleParent = list.articleParent;
        }
        else {
            if (articleParent.dataset && articleParent.dataset.$uuid) {
                sendBag.$uuid = articleParent.dataset.$uuid;
            }
            sendBag[$bind] = value;
            articleParent = articleParent.articleParent;
        }
    }
    if (articleParent.dataset && articleParent.dataset.$uuid) {
        sendBag.$uuid = articleParent.dataset.$uuid;
    }
    sendBag[$bind] = value;
    page._notifyChangeToServer(sendBag);
};
