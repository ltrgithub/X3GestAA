"use strict";

function _extractItem($items, $layout){
    $layout.$items.forEach(function($item){
        if ($item.$layoutType) {
            _extractItem($items, $item);
        }
        else {
            $items.push($item);
        }
    });
}

function _buildAutoBlock($prototype, $parent, $blocks){
    var $row, colIndex, nextBlock;
    if ($blocks.length > 1) {
        $parent.$layout.$items = [];
        $blocks.forEach(function($block){
            var $children = [];
            _extractItem($children, $block.$layout);
            
            var $fields = [];
            _extractItem($fields, $block.$layout);
            if ($fields.length > 0) {
                var addFields = true;
                if ($fields.length == 1) {
                    var $field = $fields[0];
                    if ($field.$bind && $prototype.$properties[$field.$bind]) {
                        if ($prototype.$properties[$field.$bind].$type == "application/x-array") {
                            $parent.$layout.$items.push({
                                $layoutType: "stack",
                                $items: [$block]
                            });
                            colIndex = -1;
                            addFields = false;
                        }
                    }
                }
                if (addFields) {
                    $block.$layout.$items = $fields;
                }
            }
            if (colIndex == -1) {
                $row = null;
            }
            else {
                if (!$row) {
                    colIndex = 0;
                    $row = {
                        $layoutType: "columns",
                        $layoutSubType: "33,33,33",
                        $items: [{
                            $layoutType: "stack",
                            $items: []
                        }, {
                            $layoutType: "stack",
                            $items: []
                        }, {
                            $layoutType: "stack",
                            $items: []
                        }]
                    };
                    $parent.$layout.$items.push($row);
                }
                $row.$items[colIndex++].$items.push($block);
                if (colIndex == 3) {
                    $row = null;
                }
            }
            
        });
    }
    else 
        if ($blocks.length == 1) {
            var $fields = [];
            _extractItem($fields, $blocks[0].$layout);
            $blocks[0].$layout.$items = $fields;
        }
}

exports.buildAutoLayout = function($prototype, $sourceArticle){
    var $newArticle = {
        $layout: {
            $items: []
        }
    };
    var $rootItems = [];
    _extractItem($rootItems, $sourceArticle.$layout);
    if ($rootItems[0].$category != "section") {
        $newArticle.$layout.$items.push({
            $category: "section",
            $title: "Section",
            $layout: {
                $items: $rootItems
            }
        });
    }
    else {
        if ($rootItems.length < 3) {
            $newArticle.$layout.$items = $rootItems;
        }
        else {
            $newArticle.$layout.$items.push({
                $layoutType: "stack",
                $items: [$rootItems[0]]
            });
            var $tabs = {
                $layoutType: "tabs",
                $items: []
            };
            $newArticle.$layout.$items.push($tabs);
            for (var ii = 1, jj = $rootItems.length; ii < jj; ii++) {
                $tabs.$items.push($rootItems[ii]);
            }
        }
    }
    $rootItems.forEach(function($parent){
        var $children = [];
        _extractItem($children, $parent.$layout);
        if ($children.length > 0) {
            if ($children[0].$category == "block") {
                _buildAutoBlock($prototype, $parent, $children);
            }
            else {
                $parent.$layout.$items = $children;
            }
        }
    });
    return $newArticle;
}
