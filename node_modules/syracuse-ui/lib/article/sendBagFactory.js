"use strict";
var helpers = require('syracuse-core/lib/helpers');

function SendBag(){
}

exports.SendBag = helpers.defineClass(SendBag, null, {
    findRecord: function($uuid){
        var self = this;
        var recordDataBag;
        if (self.recordDataset) {
            self.recordDataset.some(function(recordData){
                if (recordData.$uuid == $uuid) {
                    recordDataBag = recordData;
                    return true;
                }
                return false;
            });
        }
        return recordDataBag;
    },
    _ensureRecord: function(record){
        var recorDataset = record.dataset;
        recorDataset = recorDataset.$singleField || recorDataset;
        var recordDataBag = this.findRecord(recorDataset.$uuid);
        if (!recordDataBag) {
            recordDataBag = {
                $uuid: recorDataset.$uuid,
                $index: recorDataset.$index
            };
            this.recordDataset.push(recordDataBag);
        }
        return recordDataBag;
    },
    reorderRecord: function(sourceRecord, targetRecord){
        this._ensureRecord(sourceRecord);
        this._ensureRecord(targetRecord);
    },
    deleteRecord: function(record){
        this.saveRecordChange(record, "$isDeleted", true);
    },
    saveRecordChange: function(record, $bind, value){
        this._ensureRecord(record)[$bind] = value;
    },
    dispose: function(){
        delete this.recordDataset;
    }
});


exports.ensureSendBag = function(page, article){
    var parent = article || page;
    if (parent.sendBag && page.dataset.$etag != parent.sendBag.$etag) {
        delete parent.sendBag;
    }
    if (!parent.sendBag) {
        parent.sendBag = new SendBag();
        parent.sendBag.$etag = page.dataset.$etag = page.dataset.$etag || 1;
        if (parent.isRecordDataset) {
            parent.sendBag.recordDataset = [];
        }
		
    }
    return parent.sendBag;
};
