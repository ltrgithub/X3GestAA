"use strict"

var helpers = require('syracuse-core/lib/helpers');
var DesktopPage = require('syracuse-ui/lib/article/page').DesktopPage;



function OfficePage(){

}

exports.OfficePage = helpers.defineClass(OfficePage, DesktopPage, {
    notifyChange: function($bind, value){
        var self = this;
        if ($bind === "$actions") {
            // extract representation
            var repr = (self.dataset.$url || "").match(/\?.*representation=(.*)\./);
            repr = (repr && repr[1]) || "";
            switch (repr) {
                case "msoMailMergeTemplate":
                case "msoReportTemplate":
                case "msoWordDocument":
                    // save the document to the working copy
                    document.site.wordInterface.publishDocument(self.parseExpression(self.$prototype.$url + "?representation={$representation}.$details"), self.dataset.description, self.parseExpression(self.get$Properties().content.$url), function(data, resp){
                        // on succes continue with save the working copy
                        DesktopPage.prototype.notifyChange.call(self, $bind, value);
                    });
                    break;
                case "msoPptDocument":
                    // save the document to the working copy
                    document.site.pptInterface.publishDocument(self.parseExpression(self.$prototype.$url + "?representation={$representation}.$details"), self.dataset.description, self.parseExpression(self.get$Properties().content.$url), function(data, resp){
                        // on succes continue with save the working copy
                        DesktopPage.prototype.notifyChange.call(self, $bind, value);
                    });
                    break;
                case "documentExcel":
                case "documentExcelSI":
                    // save the document to the working copy
                    document.site.excelDocument.publishDocument(self.parseExpression(self.$prototype.$url + "?representation={$representation}.$details"), self.dataset.description, self.parseExpression(self.get$Properties().content.$url), function(data, resp){
                        // on succes continue with save the working copy
                        DesktopPage.prototype.notifyChange.call(self, $bind, value);
                    });
                    break;
                default:
                    DesktopPage.prototype.notifyChange.call(self, $bind, value);
            }
        }
        else 
            DesktopPage.prototype.notifyChange.call(this, $bind, value);
    }
});
