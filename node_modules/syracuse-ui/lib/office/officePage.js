"use strict"
var helpers = require('syracuse-core/lib/helpers');
var DesktopPage = require('syracuse-ui/lib/article/page').DesktopPage;

function OfficePage(){
}

exports.OfficePage = helpers.defineClass(OfficePage, DesktopPage, {
    notifyActionChange: function(target, value, notifyServer){
        var self = this;
        // extract representation
        var repr = (this.dataset.$url || "").match(/\?.*representation=(.*)\./);
        repr = (repr && repr[1]) || "";
        var documentUrl = this.parseExpression(this.$prototype.$url + "?representation={$representation}.$details");
        var saveUrl = this.parseExpression(this.$prototype.$properties.content.$url);
        switch (repr) {
            case "msoMailMergeTemplate":
            case "msoReportTemplate":
            case "msoWordDocument":
                // save the document to the working copy
                document.site.wordInterface.publishDocument(documentUrl, this.dataset.description, saveUrl, function(data, resp){
                    // on succes continue with save the working copy
                    DesktopPage.prototype.notifyActionChange.call(this, target, value, notifyServer);
                });
                break;
            case "msoPptDocument":
                // save the document to the working copy
                document.site.pptInterface.publishDocument(documentUrl, this.dataset.description, saveUrl, function(data, resp){
                    // on succes continue with save the working copy
                    DesktopPage.prototype.notifyActionChange.call(this, target, value, notifyServer);
                });
                break;
            case "documentExcel":
            case "documentExcelSI":
                // save the document to the working copy
                document.site.excelDocument.publishDocument(documentUrl, this.dataset.description, saveUrl, function(data, resp){
                    // on succes continue with save the working copy
                    DesktopPage.prototype.notifyActionChange.call(this, target, value, notifyServer);
                });
                break;
            default:
                DesktopPage.prototype.notifyActionChange.call(this, target, value, notifyServer);
        }
    }
});