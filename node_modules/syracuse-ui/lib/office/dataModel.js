"use strict"

var helpers = require("syracuse-core/lib/helpers");

function DataModel() {
}

exports.DataModel = helpers.defineClass(DataModel, null, {
	getPrototype: function(entity, facet) {
		var proto = {
			$type: "application/json",
			$properties: {}
		};
		if(entity.$title) proto.$title = entity.$title;
		if(entity.$value) proto.$value = entity.$value;
		//
		entity.$properties && Object.keys(entity.$properties).forEach(function(propName) {
			var prop = entity.$properties[propName];
			var r = proto.$properties[propName] = {
				$title: prop.$title,
				$description: prop.$description,
				$isHidden: prop.$isHidden
			}
			if(prop.$enum) {
				r.$type = "application/x-choice",
				r = r.$value = {};
				r.$enum = prop.$enum;
			}
			r.$type = "application/x-" + prop.$type;
			r.$isMandatory = prop.$isMandatory;
		});
		entity.$relations && Object.keys(entity.$relations).forEach(function(relName) {
			var rel = entity.$relations[relName];
			var r = proto.$properties[relName] = {
				$title: rel.$title,
				$description: rel.$description,
				$type: rel.$isPlural ? "application/x-array" : "application/x-reference",
				$isMandatory: rel.$isMandatory,
				$item: {
					$value: rel.$value,
					$properties: {}
				}
			}
			r.$item.$links = r.$item.$links || {};
			var l = r.$item.$links.$lookup = r.$item.$links.$lookup || {};
			l.$url = (rel.$baseUrl || "{$baseUrl}") + "/" + rel.$type + "?representation=" + rel.$representation + ".$lookup";
			if(rel.$lookup) {
				if(rel.$lookup.$filter)
					l.$url += "&where=" + encodeURIComponent(rel.$lookup.$filter);
			}
		});
		//
		return proto;
	}
});