"use strict";

// This site is only used to exchange the controller an catch the save event of a document entry to directly
// save content from an active workbook inside ms excel

var helpers = require('syracuse-core/lib/helpers');
var Site = require('syracuse-ui/lib/site/site').Site;
var OfficePage = require('syracuse-ui/lib/office/officePage').OfficePage;
var Controller = require("./controller").Controller;

function ExcelSafeSite() {}

exports.ExcelSafeSite = helpers.defineClass(ExcelSafeSite, Site, {
	_onLogon: function() {
		if (!this._isLocalChanging) {

			this.isUserLogonEnd = true;
			document.site.history.start();
			try {
				// Access the current document url (URL where the doc is saved in storage area)
				// if the url  is set, directly safe w/o showing edit page
				var docUrl = this.excelInterface.getDocumentUrl();
				if (docUrl && docUrl !== "") {
					if (/syracuse\/collaboration\/syracuse/.test(docUrl)) {
						this.excelInterface.publishDocument();
					} else {
						this.excelInterface.publishDocumentX3(docUrl);
					}
				}
			} catch (e) {}
			this.layoutSlot.style.display = "";
			this.resize();
		}
	},
	_renderHeader: function() {

	}
});

exports.load = function($item, $prototype) {
	var widgetsLibrary = require('syracuse-ui/lib/site/widgetsLibrary');
	widgetsLibrary.defaultPageCategory = OfficePage;
	$item.$isSecurityTitleVisible = false;
	var site = (new ExcelSafeSite()).loadBox({
		widgetsLibrary: widgetsLibrary,
		userProfileClass: require("syracuse-ui/lib/office/userProfile").UserProfile,
		controllerClass: Controller,
		$item: $item,
		$prototype: $prototype
	});

	var excelInterface = require('msoffice/lib/excel/excelInterface').ExcelInterface;
	site.excelInterface = new excelInterface();
	site.$syracuseMainPageUrl = $item.$syracuseMainPageUrl;
	return site;
};