"use strict";
var helpers = require('syracuse-core/lib/helpers');
var Site = require('syracuse-ui/lib/site/site').Site;
var Controller = require("./controller").Controller;
var ExcelDocument = require('msoffice/lib/excel/excelDocument').ExcelDocument;
var dispatcher = require('msoffice/lib/excel/dispatcher');
var OfficePage = require('syracuse-ui/lib/office/officePage').OfficePage;

function OfficeSite(){
}

exports.OfficeSite = helpers.defineClass(OfficeSite, Site, {
    drawBox: function(){
        var self = this;
        self._renderHeader();
        self.$$body = $("<div id='s-site-body'/>").appendTo(self.$$container);
        self.logon(function(){
            document.controller.startNavigation();
            //            self.$$userProfileHost.show();
            self.$$container.show();
            self.resize();
            //
			var excelLoaded = (external && external.Application);
			//
            excelLoaded && external.onLogon();
			// check addin version
			document.controller.sendRequest(null, { 
					$location: { 
						$url: "/sdata/syracuse/collaboration/syracuse/moduleVersions('excelAddin')?representation=moduleVersion.$details" 
					}
				}, function(data, response) {
					if(data && data.version) {
						self._hasBetterAddinVersion = (excelLoaded && (external.GetAddinVersion() < data.version)) || !excelLoaded;
						self._hasBetterAddinVersion && self.renderUpdatePanel();
					}
				});
				// TODO: onerror function
        });
    },
	renderUpdatePanel: function() {
		var self = this;
		if(self.$$updatePanel) {
			self.$$updatePanel.show();
			return;
		}
		self.$$updatePanel = $("<div id='s-site-updatePanel'/>").prependTo(self.$$body);
		$("<a href='/msoffice/lib/excel/addIn/ExcelAddinSetup.msi'>A newer version of the addin is available. Click here to download it</a>").appendTo(self.$$updatePanel);
	},
    onMainPageChange: function($itemPage){
		this.$$updatePanel = null;
		Site.prototype.onMainPageChange.apply(this, arguments);
		if(this._hasBetterAddinVersion)
			this.renderUpdatePanel();
		document.site.excelDocument.autoLoad();
		return this.mainPage;
    },
    updateDocumentTitle: function(){
        var title = this.mainPage.getTitle();
        if (title) {
            var record = this.userProfile.dataset;
            this.mainPage.drawUserProfile(record);
            
            document.title = title;
        }
    },
    _renderHeader: function(){
        this.$$userProfileHost = $("<div id='s-user-profile'/>").appendTo(this.$$container);
    },
    _renderSearch: function($$container){
    }
});

exports.load = function($item, $prototype){
    var widgetsLibrary = require('syracuse-ui/lib/site/widgetsLibrary');
	widgetsLibrary.defaultPageCategory = OfficePage;
    widgetsLibrary.pageCategories.worksheet = require("./excelPage").ExcelPage;
    var site = new OfficeSite();
	site.excelDocument = new ExcelDocument();
    site.loadBox({
        widgetsLibrary: widgetsLibrary,
        userProfileClass: require("syracuse-ui/lib/office/userProfile").UserProfile,
        controllerClass: Controller,
        $item: $item,
        $prototype: $prototype
    });
	site.requestControllers["excel"] = require("syracuse-ui/lib/office/excel/excelRequest");
    dispatcher.on("refreshAll", function(){
        site.excelDocument.refreshAllDatasources();
    });
    dispatcher.on("saveDocument", function(){
        site.excelDocument.publishDocument();
    });
    dispatcher.on("selectionChanged", function(){
        site.excelDocument.selectionChanged();
    });
    site.$syracuseMainPageUrl = $item.$syracuseMainPageUrl;
    return site;
};
