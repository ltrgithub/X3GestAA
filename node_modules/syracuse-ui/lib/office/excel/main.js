"use strict";
var Site = require('syracuse-ui/lib/site/site').Site;
var siteLoader = require('syracuse-ui/lib/office/siteLoader');
var ExcelReportPage = require("syracuse-ui/lib/office/excel/excelReportPage").ExcelReportPage;
var ExcelPage = require("syracuse-ui/lib/office/excel/excelPage").ExcelPage;
var ExcelDocument = require('syracuse-ui/lib/office/excel/excelDocument').ExcelDocument;
var ExcelDatasourcePage = require("syracuse-ui/lib/office/excel/excelDataSourcePage").ExcelDatasourcePage;

function _addNewAddinLink(site) {
	if (site._hasNewAddin && !site.newAddinLink) {
		site.newAddinLink = syra_menus.addTextButton("A newer version of the addin is available. Click here to download it", "s-office-new-addin-link", null, null, "diagnose");
		site.newAddinLink.href = "/msoffice/lib/general/addIn/SyracuseOfficeAddinsSetup.EXE";
		if (site.header) {
			site.header.appendChild(site.newAddinLink);
		} else {
			site.body.insertBefore(site.newAddinLink, site.body.firstChild);
		}
		site.resize();
	}
}

exports.main = function() {
	var site = new Site();
	siteLoader.initialize(site);
	site.excelDocument = new ExcelDocument();
	site.isExcelLoaded = !! (external && external.Application);
	site.$officeSite = "excelOfficeConfig";
	site.isExcelOfficeConfig = true;
	site.agents = {
		excelDatasources: {
			saveDatasource: function(article, menu, record) {
				site.excelDocument.addDatasource(record);
			}
		}
	};
	site.drawBox = function() {
		var self = this;
		self.widgetsLibrary.pageCategories.excelDatasource = ExcelDatasourcePage;
		self.widgetsLibrary.pageCategories.worksheet = ExcelPage;
		self.widgetsLibrary.pageCategories.excelreport = ExcelReportPage;
		if (!site.isExcelOfficeConfig) {
			self.siteFunctions.addDragDropManager();
			self._renderHeader();
			self.body = ($("<div id='s-site-body'/>").appendTo($(self.layoutSlot)))[0];
			self.logon(function() {
				self._onAfterLogon();
			});
		} else {
			Site.prototype.drawBox.apply(this);
		}

	};
	site._onAfterLogon = function() {
		var self = this;
		self.history.start();
		self.layoutSlot.style.display = "";
		self.resize();
		site.isExcelLoaded && external.onLogon();
		syra_controller.callServer(null, {
			$location: {
				$url: "/sdata/syracuse/collaboration/syracuse/moduleVersions('officeAddin')?representation=moduleVersion.$details"
			}
		}, function(data, response) {
			if (data && data.version) {
				if (!self.isExcelOfficeConfig) {
					external.expectedVersion && external.expectedVersion(data.version);
				}
				self._hasNewAddin = (self.isExcelLoaded && (external.GetAddinVersion() < data.version)) || !self.isExcelLoaded;
				_addNewAddinLink(self);
			}
		});
	};
	site.onMainPageChange = function($itemPage) {
		this.newAddinLink = null;
		Site.prototype.onMainPageChange.apply(this, arguments);
		_addNewAddinLink(this);
		if (this.isExcelOfficeConfig) {
			this.mainPage.onSelectRecord = function(result) {
				if (Object.keys(result).length) {
					var first = result[Object.keys(result)[0]];
					external.onSelectRecord(JSON.stringify(first.$prototype), JSON.stringify(first.dataset));
				}
			};
		} else {
			this.excelDocument.autoLoad();
		}
		return this.mainPage;
	};

	site._renderHeader = function() {
		this.header = document.createElement("header");
		this.header.setAttribute("id", "s-site-header");
		this.dom.setZIndex(this.header);

		this.headerTop = document.createElement("div");
		this.headerTop.id = "s-site-header-top";

		this.addLogo(this.headerTop);

		var middleCell = document.createElement("div");
		middleCell.id = "s-site-header-middle-cell";
		this.headerTop.appendChild(middleCell);

		this.setArticleId(this.layoutSlot);
		this.topPanel.addOpener(middleCell);

		this.header.appendChild(this.headerTop);
		this.layoutSlot.insertBefore(this.header, this.layoutSlot.firstChild);
	};

	site.loadBox();
};

if (require.main == module)
	exports.main();