"use strict";
var Site = require('syracuse-ui/lib/site/site').Site;
var ExcelInterface = require('msoffice/lib/excel/excelInterface').ExcelInterface;
var ExcelReportPage = require("syracuse-ui/lib/office/excel/excelReportPage").ExcelReportPage;
var ExcelPage = require("syracuse-ui/lib/office/excel/excelPage").ExcelPage;
var ExcelDocument = require('syracuse-ui/lib/office/excel/excelDocument').ExcelDocument;
var _excelDatasources = require("./excelDatasources");
var _excelRequest = require("syracuse-ui/lib/office/excel/excelRequest");

exports.excelOfficeConfig = function(site) {
	site.widgetsLibrary.pageCategories.worksheet = ExcelPage;
	site.excelDocument = new ExcelDocument();
	site.excelDatasources = _excelDatasources;
	site.agents = {
		excelDatasources: {
			saveDatasource: function(article, menu, record) {
				site.excelDocument.addDatasource(record);
			}
		}
	};
	site._onAfterLogon = function() {
		var self = this;
		self.requestControllers.excel = _excelRequest;
		syra_site.history.start();
		var excelLoaded = (external && external.Application);
		excelLoaded && external.onLogon();
		// check addin version
		syra_controller.callServer(null, {
			$location: {
				$url: "/sdata/syracuse/collaboration/syracuse/moduleVersions('officeAddin')?representation=moduleVersion.$details"
			}
		}, function(data, response) {
			if (data && data.version) {
				self._hasBetterAddinVersion = (excelLoaded && (external.GetAddinVersion() < data.version)) || !excelLoaded;
				self._hasBetterAddinVersion && self.renderUpdatePanel();
			}
		});
		self.layoutSlot.style.display = "";
		self.resize();
	};
	site.renderUpdatePanel = function() {
		var self = this;
		if (self.$$updatePanel) {
			self.$$updatePanel.show();
			return;
		}
		self.$$updatePanel = $("<div id='s-site-updatePanel'/>").prependTo(self.body);
		$("<a href='/msoffice/lib/general/addIn/SyracuseOfficeAddinsSetup.EXE'>A newer version of the addin is available. Click here to download it</a>").appendTo(self.$$updatePanel);
	};
	site.onMainPageChange = function($itemPage) {
		this.$$updatePanel = null;
		Site.prototype.onMainPageChange.apply(this, arguments);
		if (this._hasBetterAddinVersion)
			this.renderUpdatePanel();
		this.mainPage.onSelectRecord = function(result) {
			if (Object.keys(result).length) {
				var first = result[Object.keys(result)[0]];
				external.onSelectRecord(JSON.stringify(first.$prototype), JSON.stringify(first.dataset));
			}
		};
		return this.mainPage;
	};
	site._renderHeader = function() {
		this.header = document.createElement("header");
		this.header.setAttribute("id", "s-site-header");
		this.dom.setZIndex(this.header);

		this.headerTop = document.createElement("div");
		this.headerTop.id = "s-site-header-top";

		this.siteFunctions.addLogo(this.headerTop);

		var middleCell = document.createElement("div");
		middleCell.id = "s-site-header-middle-cell";
		this.headerTop.appendChild(middleCell);

		this.setArticleId(this.layoutSlot);
		this.topPanel.addOpener(middleCell);

		this.homeLink = this.loadNewItem(this.headerTop, {
			$bind: "$home",
			$category: "link",
			$noText: true,
			$skin: "s-site-home"
		});
		this.header.appendChild(this.headerTop);
		this.layoutSlot.insertBefore(this.header, this.layoutSlot.firstChild);

	};
};
exports.excelOffice = function(site) {
	site.widgetsLibrary.pageCategories.worksheet = ExcelPage;
	site.$isPageSecurityView = false;
	site.excelDocument = new ExcelDocument();
	site.excelDatasources = _excelDatasources;
	site._onAfterLogon = function() {
		var self = this;
		self.requestControllers.excel = _excelRequest;
		syra_site.history.start();
		self.layoutSlot.style.display = "";
		self.resize();
		var excelLoaded = (external && external.Application);
		excelLoaded && external.onLogon();
		syra_controller.callServer(null, {
			$location: {
				$url: "/sdata/syracuse/collaboration/syracuse/moduleVersions('officeAddin')?representation=moduleVersion.$details"
			}
		}, function(data, response) {
			if (data && data.version) {
				if ("expectedVersion" in external) {
					external.expectedVersion(data.version);
				}
				self._hasBetterAddinVersion = (excelLoaded && (external.GetAddinVersion() < data.version)) || !excelLoaded;
				self._hasBetterAddinVersion && self.renderUpdatePanel();
			}
		});
	};
	site.drawBox = function() {
		var self = this;
		self.siteFunctions.addDragDropManager();
		self._renderHeader();
		self.body = ($("<div id='s-site-body'/>").appendTo($(self.layoutSlot)))[0];
		self.logon(function() {
			self._onAfterLogon();
		});
	};
	site.renderUpdatePanel = function() {
		if (this.$$updatePanel) {
			this.$$updatePanel.show();
			return;
		}
		this.$$updatePanel = $("<div id='s-site-updatePanel'/>").prependTo(this.body);
		$("<a href='/msoffice/lib/general/addIn/SyracuseOfficeAddinsSetup.EXE'>A newer version of the addin is available. Click here to download it</a>").appendTo(this.$$updatePanel);
	};
	site.onMainPageChange = function($itemPage) {
		this.$$updatePanel = null;
		Site.prototype.onMainPageChange.apply(this, arguments);
		if (this._hasBetterAddinVersion)
			this.renderUpdatePanel();
		syra_site.excelDocument.autoLoad();
		return this.mainPage;
	};
	site._renderHeader = function() {

	};
};

exports.excel = function(site) {
	site.widgetsLibrary.pageCategories.excelreport = ExcelReportPage;
	site._onAfterLogon = function() {
		syra_site.history.start();
		try {
			this.excelInterface.onLogin();
		} catch (e) {}
		this.layoutSlot.style.display = "";
		this.resize();
	};
	site._renderHeader = function() {

	};
	site.excelInterface = new ExcelInterface();
};