"use strict";
var helpers = require('syracuse-core/lib/helpers');
var DesktopSite = require('syracuse-ui/lib/desktop/site/desktopSite').DesktopSite;
var Controller = require("./controller").Controller;
var ExcelDocument = require('msoffice/lib/excel/excelDocument').ExcelDocument;
var OfficeSiteTopPanel = require("./officeSiteTopPanel").OfficeSiteTopPanel;
var dispatcher = require('msoffice/lib/excel/dispatcher');

function OfficeSite(){
}

exports.OfficeSite = helpers.defineClass(OfficeSite, DesktopSite, {
    drawBox: function(){
        var self = this;
        self._renderHeader();
        self.$$body = $("<div id='s-site-body'/>").appendTo(self.$$container);
        $(window).bind("resize", function(evt){
            self.resize();
        });
        document.site.logon(function(){
            document.controller.startNavigation();
            self.$$container.show();
            self.resize();
            //
            var excelLoaded = (external && external.Application);
            //
            excelLoaded && external.onLogon();
            // check addin version
            document.controller.sendRequest(null, {
                $location: {
                    $url: "/sdata/syracuse/collaboration/syracuse/moduleVersions('excelAddin')?representation=moduleVersion.$details"
                }
            }, function(data, response){
                if (data && data.version) {
                    self._hasBetterAddinVersion = (excelLoaded && (external.GetAddinVersion() < data.version)) || !excelLoaded;
                    self._hasBetterAddinVersion && self.renderUpdatePanel();
                }
            }, function(){
                // TODO: manage onError for this request ??
            });
        });
    },
    renderUpdatePanel: function(){
        var self = this;
        if (self.$$updatePanel) {
            self.$$updatePanel.show();
            return;
        }
        self.$$updatePanel = $("<div id='s-site-updatePanel'/>").prependTo(self.$$body);
        $("<a href='/msoffice/lib/excel/addIn/ExcelAddinSetup.msi'>A newer version of the addin is available. Click here to download it</a>").appendTo(self.$$updatePanel);
    },
    onMainPageChange: function($itemPage){
        this.$$updatePanel = null;
        DesktopSite.prototype.onMainPageChange.apply(this, arguments);
        if (this._hasBetterAddinVersion) 
            this.renderUpdatePanel();
        return this.mainPage;
    },
    updateDocumentTitle: function(){
        var title = this.mainPage.getTitle();
        if (title) {
            var record = this.userProfile.dataset;
            if (record) {
                if (record.selectedRole) {
                    title += " (" + record.selectedRole.description + ")";
                }
                if (record.selectedEndpoint) {
                    title += " (" + record.selectedEndpoint.description + ")";
                }
            }
            else {
                this.userProfile.$isTitleUpdateRequested = true;
            }
            this.mainPage.drawUserProfile(record);
            document.title = title;
        }
    },
    
    _renderHeader: function(){
        var self = this;
        document.site.setZIndex(self._$$header = $("<header id='s-site-header'>/"));
        var $$top = $("<div id='s-site-header-top'>");
        var $$topLeft = $("<div id='s-site-header-top-left'/>").appendTo($$top);
        
        $$topLeft.append("<div id='s-site-sage'/>").append($("<div id='s-site-module'/>").text(self.$item.$module));
        
        self._appendTopPanelOpener($$top, OfficeSiteTopPanel);
        
        var $$topRight = $("<div id='s-site-header-top-right'/>").appendTo($$top);
        
        document.itemFactory.load($("<div id='s-site-home'/>").appendTo($$topRight), {
            $bind: "$home",
            $category: "link",
            $noText: true,
            $skin: "s-site-home-link"
        }, this);
        
        document.itemFactory.load($("<div id='s-site-help'/>").appendTo($$topRight), {
            $bind: "$help",
            $category: "link",
            $noText: true,
            $skin: "s-site-help-link"
        }, this);
        
        
        self.$$container.append(self._$$header.append($$top)).append("<div id='s-site-top-pn'/>");
        self.appendDiagnoseViewer(self.$$container, self);
    },
    _renderSearch: function($$container){
    }
});

exports.load = function($item, $prototype){
    var widgetsLibrary = require('syracuse-ui/lib/desktop/site/widgetsLibrary');
    widgetsLibrary.pageCategories.worksheet = require("./excelPage").ExcelPage;
    var site = (new OfficeSite()).loadSite({
        widgetsLibrary: widgetsLibrary,
        messageBoxClass: require('syracuse-ui/lib/desktop/site/messageBox').MessageBox,
        diagnoseViewerClass: require('syracuse-ui/lib/desktop/site/diagnoseViewer').DesktopDiagnoses,
        userProfileClass: require("./userProfile").UserProfile,
        controllerClass: Controller,
        $item: $item,
        $prototype: $prototype
    });
    
    site.$syracuseMainPageUrl = $item.$syracuseMainPageUrl;
    //
    site.agents = {
        excelDatasources: {
            saveDatasource: function(article, menu, record){
                site.excelDocument.addDatasource(record);
            }
        }
    }
    // must be done after all initialization as it connects and load page
    site.excelDocument = new ExcelDocument();
    dispatcher.on("refreshAll", function(){
        site.excelDocument.refreshAllDatasources();
    });
    //
    return site;
};
