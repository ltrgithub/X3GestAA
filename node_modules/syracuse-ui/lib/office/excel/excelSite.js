"use strict";
var helpers = require('syracuse-core/lib/helpers');
var Site = require('syracuse-ui/lib/site/site').Site;
var Controller = require("syracuse-ui/lib/controller/controller").Controller;
var OfficePage = require('syracuse-ui/lib/office/officePage').OfficePage;

function ExcelSite() {}

exports.ExcelSite = helpers.defineClass(ExcelSite, Site, {
	_onLogon: function() {
		if (!this._isLocalChanging) {
			this.isUserLogonEnd = true;
			document.controller.startNavigation();
			try {
				this.excelInterface.onLogin();
			} catch (e) {}
			this.layoutSlot.style.display = "";
			this.resize();
		}
	},
	_renderHeader: function() {

	}
});

exports.load = function($item, $prototype) {
	var widgetsLibrary = require('syracuse-ui/lib/site/widgetsLibrary');
	widgetsLibrary.defaultPageCategory = OfficePage;
	widgetsLibrary.pageCategories.excelreport = require("./excelReportPage").ExcelReportPage;
	$item.$isSecurityTitleVisible = false;
	var site = (new ExcelSite()).loadBox({
		widgetsLibrary: widgetsLibrary,
		userProfileClass: require("syracuse-ui/lib/office/userProfile").UserProfile,
		controllerClass: Controller,
		$item: $item,
		$prototype: $prototype
	});

	var excelInterface = require('msoffice/lib/excel/excelInterface').ExcelInterface;
	site.excelInterface = new excelInterface();
	site.$syracuseMainPageUrl = $item.$syracuseMainPageUrl;
	return site;
};

//Called from word when additional data has to be fetched (eg. images)
//ONLY WORKS IN IE. no problem here, since this is only called from IE within word!
window.readBinaryURLContentIE = function(url, returnData) {
	try {
		var xhr = new XMLHttpRequest();
		var data = {};
		xhr.open('GET', url, false);

		xhr.setRequestHeader("X-Content-Type-Override", "text/plain; charset=x-user-defined");
		xhr.onreadystatechange = function(e) {};
		xhr.send();
		if (xhr.status == 200) {
			// this.responseText is broken in IE with binary data!
			// This is a c# byte array!
			returnData.setData(xhr.responseBody);
		} else
		if (xhr.status == 1223) {
			returnData.setErrorText("NOTFOUND");
		} else
		if (xhr.status == 404) {
			returnData.setErrorText("NOTFOUND");
		} else {
			returnData.setErrorText(xhr.response + "(" + xhr.status + ")");
		}
	} catch (e) {
		returnData.setErrorText(e);
	}
};