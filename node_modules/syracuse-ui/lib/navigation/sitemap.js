"use strict";
var helpers = require('syracuse-core').helpers;
var List = require('syracuse-ui/lib/scroll/list').List;
var NavigatorPage = require('syracuse-ui/lib/navigation/navigatorPage').NavigatorPage;


var _mode = {
	module: {
		create: function(module) {
			module.titleBtn = module.page.detailList.addButton({
				parent: module,
				text: module.dataset.title,
				title: syra_local.nvpCollapseSubModule,
				css: "s-sitemap-detail-btn-default",
				fontIcon: "node_expanded",
				click: _clickExpand
			});
			module.listView = new List({
				emptyText: syra_local.nvpNoSubModule,
				parentNode: module.content = module.titleBtn.slot,
				css: "s-sitemap-submodule"
			});
			module.addChildren();
		},
		activate: function(on, module) {
			if (on) {
				if (!module.scrolling) {
					module.content.parentNode.scrollTop = module.content.offsetTop;
				} else {
					module.page.listView.scrollTo(module.slot);
				}
			}
		}
	},
	subModule: {
		create: function(sub) {
			sub.titleBtn = sub.navParent.listView.addButton({
				parent: sub,
				text: sub.dataset.title,
				title: syra_local.nvpCollapseSubModule,
				fontIcon: "node_expanded",
				click: _clickExpand
			});

			sub.btnCollapseAll = syra_button.add({
				parent: sub,
				slot: sub.titleBtn.slot,
				text: syra_local.nvpCollapseAll,
				iconOnly: true,
				css: "s-sitemap-submodule-btn-expand",
				fontIcon: "collapse_l",
				click: _clickExpand
			});

			sub.btnExpandAll = syra_button.add({
				parent: sub,
				slot: sub.titleBtn.slot,
				text: syra_local.nvpExpandAll,
				iconOnly: true,
				css: "s-sitemap-submodule-btn-expand",
				fontIcon: "expand_l",
				click: _clickExpand
			});

			syra_button.disable(sub.btnCollapseAll, false);
			syra_button.disable(sub.btnExpandAll, true);

			sub.listView = new List({
				emptyText: syra_local.nvpNoMenuItem,
				parentNode: sub.titleBtn.slot,
				columns: 3,
				css: "s-sitemap-submodule-item"
			});
			sub.addChildren(sub.dataset.items);
			sub.slot = sub.titleBtn.slot;
		},
		activate: function(on, block) {
			if (on) {
				block.navParent.lastSelected = block;
			}
		}
	},
	menuBlock: {
		create: function(block) {
			block.titleBtn = block.navParent.listView.addButton({
				parent: block,
				css: "s-sitemap-item-btn-block",
				text: block.dataset.title,
				title: syra_local.nvpCollapseSubModule,
				fontIcon: "node_expanded",
				click: _clickExpand
			});
			block.listView = new List({
				emptyText: syra_local.nvpNoMenuItem,
				parentNode: block.titleBtn.slot,
				css: "s-sitemap-item"
			});
			block.domItem = block.slot = block.titleBtn.slot;
		}
	}
};

function _clickExpand(event) {
	var block = this.parent;
	var isExpanded = !(block.dataset.isExpanded !== false);
	var children = event.shiftKey ? block.navParent.children : [block];
	for (var ii = 0, jj = children.length; ii < jj; ii++) {
		var child = children[ii];
		if (!child.isMenuItem) {
			child.dataset.isExpanded = isExpanded;
			syra_dom.hide(child.listView.scrollSlot, !isExpanded);
			syra_button.setText(child.titleBtn, undefined, isExpanded ? "node_expanded" : "node_collapsed");
			child.titleBtn.link.syraTipTitle = isExpanded ? syra_local.nvpCollapseSubModule : syra_local.nvpExpandSubModule;
			syra_button.disable(child.btnCollapseAll, !isExpanded);
			syra_button.disable(child.btnExpandAll, isExpanded);
		}
	}
	block.page.listView.resize();
	block.page.detailList.resize();
}

function Sitemap() {}

exports.Sitemap = helpers.defineClass(Sitemap, NavigatorPage, {
	loadSitemap: function($prototype, dataset) {
		this.$prototype = $prototype;
		this.dataset = dataset;
		this.mode = _mode;
		this.$skin = "s-sitemap";
		this.load();
		if (this.children.length) {
			this.children[0].activate(true);
		}
		this.isMapLoaded = true;
		syra_site.body.appendChild(this.domItem);
		this.resizeItem();
	},
	draw: function() {
		var self = this
		self.domItem = syra_dom.article("s-page");
		self.domItem.syraPage = self.domItem.syraItem = self.id;
		self.diagnoseSlot = syra_dom.div("", self.domItem);
		self.body = syra_dom.div("s-sitemap-page-body", self.domItem);
		self.listView = new List({
			emptyText: syra_local.nvpNoModule,
			scroll: true,
			css: "s-list-nav",
			parentNode: self.body
		});
		syra_dom.toggleClass(self.listView.scrollSlot, "s-sitemap-modules-col", true);
		self.showBookmarks = true;
		self.detailList = new List({
			scroll: function(event) {
				for (var ii = 0, jj = self.children.length - 1; ii <= jj; ii++) {
					if (self.children[ii].scrollTopSelection > event.target.scrollTop || ii === jj) {

						var moduleIndex;
						if (self.detailList.scrollBar.isThumbAtBottom())
							moduleIndex = jj;
						else
						if (self.children[ii].scrollTopSelection > event.target.scrollTop)
							moduleIndex = Math.max((ii == jj + 1) ? ii : --ii, 0);
						else
							moduleIndex = Math.max((ii == jj) ? ii : --ii, 0);

						var module = self.children[moduleIndex];
						if (self.lastSelected != module) {
							module.scrolling = true;
							module.activate(true);
							module.scrolling = false;
						}
						break;
					}
				}
			},
			css: "s-sitemap-detail",
			parentNode: self.body
		});
	},
	resizeItem: function() {
		if (this.isMapLoaded && this.overPanel) {
			delete this.size;
			this.getPageSize();
			this.overPanel.resize();
		}
	},
	onNavMenuClick: function() {
		var self = this;
		setTimeout(function() {
			self.overPanel && self.overPanel.close();
		}, 200);
	},
	resizeDlg: function() {
		if (this.isMapLoaded) {
			var height = syra_site.size.body.height;
			this.listView.resize(height);
			this.detailList.resize(height);

			if (syra_site.$device == "desktop") {
				this.body.style.width = this.body.clientWidth + 20 + "px"; //Cater for long headings - specific to sitemap for desktop
			}

			var maxContentWidth = this.body.clientWidth - this.listView.scrollSlot.clientWidth - 2;

			this.detailList.scrollSlot.style.maxWidth = maxContentWidth + "px";
			this.detailList.scrollview.style.width = maxContentWidth + 3 + "px"; //Add 3 to hide the auto scrollbars
			var height = this.detailList.scrollSlot.clientHeight;
			this.scrollTopSelection = height / 2;

			for (var ii = 0, jj = this.children.length; ii < jj; ii++) {
				var module = this.children[ii];
				var offsetTop = module.content.offsetTop;
				if (offsetTop < height) {
					module.scrollTopSelection = offsetTop;
				} else {
					module.scrollTopSelection = offsetTop - this.scrollTopSelection;
				}
			}
		}
	},
	dispose: function() {
		this.listView && this.listView.dispose();
		this.detailList && this.detailList.dispose();
		NavigatorPage.prototype.dispose.call(this);
	}
});