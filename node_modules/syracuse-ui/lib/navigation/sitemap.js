"use strict";
var List = require('syracuse-ui/lib/scroll/list').List;

function _clickExpand(event) {
	var block = this.parent;
	var isExpanded = !(block.dataset.isExpanded !== false);
	var children = event.shiftKey ? block.navParent.children : [block];
	for (var ii = 0, jj = children.length; ii < jj; ii++) {
		var child = children[ii];
		if (!child.isMenuItem) {
			child.dataset.isExpanded = isExpanded;
			syra_dom.hide(child.listView.scrollSlot, !isExpanded);
			syra_button.setText(child.titleBtn, undefined, isExpanded ? "node_expanded" : "node_collapsed");
			child.titleBtn.link.syraTipTitle = isExpanded ? syra_local.nvpCollapseSubModule : syra_local.nvpExpandSubModule;
			syra_button.disable(child.btnCollapseAll, !isExpanded);
			syra_button.disable(child.btnExpandAll, isExpanded);
		}
	}
	block.page.listView.resize();
	block.page.detailList.resize();
}

exports.page = {
	draw: function(page) {
		page.$skin = "s-sitemap";
		page.layoutSlot = syra_dom.div();
		page.domItem = syra_dom.div("", page.layoutSlot);
		page.body = syra_dom.div("", page.domItem);
		page.mapBody = syra_dom.div("s-sitemap-body", page.body);

		page.listView = new List({
			emptyText: syra_local.nvpNoModule,
			scroll: true,
			css: "s-list-nav",
			parentNode: page.mapBody
		});
		syra_dom.toggleClass(page.listView.scrollSlot, "s-sitemap-modules-col", true);

		page.detailList = new List({
			scroll: function(event) {
				for (var ii = 0, jj = page.children.length - 1; ii <= jj; ii++) {
					if (page.children[ii].scrollTopSelection > event.target.scrollTop || ii === jj) {

						var moduleIndex;
						if (page.detailList.scrollBar.isThumbAtBottom())
							moduleIndex = jj;
						else
						if (page.children[ii].scrollTopSelection > event.target.scrollTop)
							moduleIndex = Math.max((ii == jj + 1) ? ii : --ii, 0);
						else
							moduleIndex = Math.max((ii == jj) ? ii : --ii, 0);

						var module = page.children[moduleIndex];
						if (page.lastSelected != module) {
							module.scrolling = true;
							module.activate(true);
							module.scrolling = false;
						}
						break;
					}
				}
			},
			css: "s-sitemap-detail",
			parentNode: page.mapBody
		});

		page.resizeItem = function() {
			if (this.isMapLoaded && this.overPanel) {
				delete this.size;
				this.getPageSize();
				this.overPanel.resize();
			}
		};
		page.onNavMenuClick = function() {
			var self = this;
			setTimeout(function() {
				self.overPanel && self.overPanel.close();
			}, 200);
		};
		page.showBookmarks = true;

		syra_over.openModal(syra_site, {
			page: page,
			resize: function(dlg) {
				if (this.page.isMapLoaded) {
					var height = syra_site.size.popupMaxHeight;
					this.page.listView.resize(height);
					this.page.detailList.resize(height);

					var maxContentWidth = this.page.body.clientWidth - this.page.listView.scrollSlot.clientWidth - 2;

					if (syra_site.$device == "tablet") {
						var width = syra_site.body.clientWidth;
						this.page.domItem.parentElement.className = "s-modal-page-container-tablet-sitemap";
						this.page.domItem.style.width = this.page.domItem.parentElement.style.maxWidth = width + "px";
						maxContentWidth = width - this.page.listView.scrollSlot.clientWidth - 2;
						this.page.overPanel.hideCloseButton(true);
						this.page.overPanel.overlay.onclick = function() {
							dlg.close();
						};
					}

					this.page.detailList.scrollSlot.style.maxWidth = maxContentWidth + "px";
					var height = this.page.detailList.scrollSlot.clientHeight;
					this.page.scrollTopSelection = height / 2;

					if (syra_site.$device == "tablet") {
						dlg.overSlot.style.top = syra_site.header.clientHeight + "px";
					} else {
						dlg.center();
					}

					for (var ii = 0, jj = this.page.children.length; ii < jj; ii++) {
						var module = this.page.children[ii];
						var offsetTop = module.content.offsetTop;
						if (offsetTop < height) {
							module.scrollTopSelection = offsetTop;
						} else {
							module.scrollTopSelection = offsetTop - this.page.scrollTopSelection;
						}
					}

				}
			}
		});
	},
	dispose: function(page) {
		page.listView && page.listView.dispose();
		page.detailList && page.detailList.dispose();
	}
};

exports.module = {
	create: function(module) {
		module.titleBtn = module.page.detailList.addButton({
			parent: module,
			text: module.dataset.title,
			title: syra_local.nvpCollapseSubModule,
			css: "s-sitemap-detail-btn-default",
			fontIcon: "node_expanded",
			click: _clickExpand
		});
		module.listView = new List({
			emptyText: syra_local.nvpNoSubModule,
			parentNode: module.content = module.titleBtn.slot,
			css: "s-sitemap-submodule"
		});
		module.addChildren();
	},
	activate: function(on, module) {
		if (on) {
			if (!module.scrolling) {
				module.content.parentNode.scrollTop = module.content.offsetTop;
			} else {
				module.page.listView.scrollTo(module.slot);
			}
		}
	}
};

exports.subModule = {
	create: function(sub) {
		sub.titleBtn = sub.navParent.listView.addButton({
			parent: sub,
			text: sub.dataset.title,
			title: syra_local.nvpCollapseSubModule,
			fontIcon: "node_expanded",
			click: _clickExpand
		});

		sub.btnCollapseAll = syra_button.add({
			parent: sub,
			slot: sub.titleBtn.slot,
			text: syra_local.nvpCollapseAll,
			iconOnly: true,
			css: "s-sitemap-submodule-btn-expand",
			fontIcon: "collapse_l",
			click: _clickExpand
		});

		sub.btnExpandAll = syra_button.add({
			parent: sub,
			slot: sub.titleBtn.slot,
			text: syra_local.nvpExpandAll,
			iconOnly: true,
			css: "s-sitemap-submodule-btn-expand",
			fontIcon: "expand_l",
			click: _clickExpand
		});

		syra_button.disable(sub.btnCollapseAll, false);
		syra_button.disable(sub.btnExpandAll, true);

		sub.listView = new List({
			emptyText: syra_local.nvpNoMenuItem,
			parentNode: sub.titleBtn.slot,
			columns: 3,
			css: "s-sitemap-submodule-item"
		});
		sub.addChildren(sub.dataset.items);
		sub.slot = sub.titleBtn.slot;
	},
	activate: function(on, block) {
		if (on) {
			block.navParent.lastSelected = block;
		}
	}
};

exports.menuBlock = {
	create: function(block) {
		block.titleBtn = block.navParent.listView.addButton({
			parent: block,
			css: "s-sitemap-item-btn-block",
			text: block.dataset.title,
			title: syra_local.nvpCollapseSubModule,
			fontIcon: "node_expanded",
			click: _clickExpand
		});
		block.listView = new List({
			emptyText: syra_local.nvpNoMenuItem,
			parentNode: block.titleBtn.slot,
			css: "s-sitemap-item"
		});
		block.domItem = block.slot = block.titleBtn.slot;
	}
};