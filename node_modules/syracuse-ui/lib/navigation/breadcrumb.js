"use strict";
var helpers = require('syracuse-core').helpers;
var List = require('syracuse-ui/lib/scroll/list').List;
var NavigatorPage = require('./navigatorPage').NavigatorPage;

var _mode = {
	module: {
		create: function(module) {
			syra_dom.toggleClass(module.title, "s-nav-mega-group-item", true);
			module.listView = new List({
				emptyText: syra_local.nvpNoSubModule,
				carousel: true,
				css: "s-list-nav"
			});
			syra_dom.toggleClass(module.listView.scrollSlot, "s-nav-mega-col-select", true);
			module.addChildren();
		},
		activate: function(on, module) {
			if (on) {
				module.page.mainPopup.appendChild(module.listView.scrollSlot);
				module.listView.resize();
			} else {
				syra_dom.empty(module.listView.scrollSlot.parentNode);
			}
		}
	},
	subModule: {
		create: function(sub) {
			(sub.title = sub.navParent.listView.addAnchor()).textContent = sub.dataset.title;
			syra_dom.toggleClass(sub.title, "s-nav-mega-group-item", true);
			sub.slot = sub.title.parentNode;
			sub.listView = new List(this._useLargeMode(sub.dataset.items) ? {
				emptyText: syra_local.nvpNoMenuItem,
				useColSelect: true,
				carousel: true,
				css: "s-list-nav"
			} : {
				emptyText: syra_local.nvpNoMenuItem,
				autoColumns: sub.page.isHighRes ? 3 : 2,
				scroll: true,
				css: "s-sitemap-mega-item"
			});
			sub.addChildren(sub.dataset.items);
		},
		_useLargeMode: function(items, isLastLevel) {
			var count = 0;
			if (items) {
				for (var ii = 0, jj = items.length; ii < jj; ii++) {
					if (items[ii].menuBlock) {
						count++;
						if (isLastLevel) {
							return true;
						} else {
							return this._useLargeMode(items[ii].menuBlock.items, true);
						}
					}
				}
			}
			return count > 6;
		},
		activate: function(on, block) {
			if (block) {
				if (on) {
					if (block.listView.config.useColSelect) {
						syra_dom.toggleClass(block.listView.scrollSlot, "s-nav-mega-col-select", true);
						block.page.mainPopup.appendChild(block.mainPopupSlot = block.listView.scrollSlot);
					} else {
						if (!block.mainPopupSlot) {
							block.mainPopupSlot = syra_dom.div("s-nav-mega-col-detail");
							block.mainPopupSlot.appendChild(block.listView.scrollSlot);
						}
						var width = 0;
						for (var ii = 0, jj = block.page.mainPopup.childNodes.length; ii < jj; ii++) {
							width += block.page.mainPopup.childNodes[ii].clientWidth;
						}
						block.mainPopupSlot.style.width = (block.page.mainPopup.clientWidth - width - 16) + "px";
						block.page.mainPopup.appendChild(block.mainPopupSlot);
					}
					block.navParent.lastSelected = block;
					block.listView.resize();
				} else {
					if (block.mainPopupSlot && block.mainPopupSlot.parentNode) {
						while (block.page.mainPopup.lastChild != block.mainPopupSlot) {
							syra_dom.remove(block.page.mainPopup.lastChild);
						}
						syra_dom.remove(block.mainPopupSlot);
					}
				}
				syra_dom.toggleClass(block.title, "s-selected", on);
				syra_dom.toggleClass(block.title.parentNode, "s-selected", on);
			}
		}
	},
	menuBlock: {
		create: function(block) {
			var parentListView = block.navParent.listView;
			var useColSelect = parentListView.config.useColSelect;
			(block.title = parentListView.addAnchor(parentListView.css + (useColSelect ? "-btn-default" : "-btn-block"))).textContent = block.dataset.title;
			block.listView = new List(useColSelect ? {
				emptyText: syra_local.nvpNoMenuItem,
				autoColumns: block.page.isHighRes ? 2 : 1,
				scroll: true,
				css: "s-sitemap-mega-item"
			} : {
				emptyText: syra_local.nvpNoMenuItem,
				parentNode: block.title.parentNode,
				css: "s-sitemap-mega-item",
				scroll: true
			});

			if (useColSelect) {
				syra_dom.toggleClass(block.title, "s-nav-mega-group-item", true);
				block.activate = function(on) {
					this.submodule.activate(on, this);
				};
			}
			block.domItem = block.slot = block.title.parentNode;
			block.domItem.syrainout = block.id;
		}
	}
};

function BreadCrumb() {

}

exports.BreadCrumb = helpers.defineClass(BreadCrumb, NavigatorPage, {
	loadBread: function() {
		this.mode = _mode;
		this.listView = new List({
			emptyText: syra_local.nvpNoModule,
			carousel: true,
			css: "s-list-nav"
		});
		syra_dom.toggleClass(this.listView.scrollSlot, "s-nav-mega-col-select", true);
		this.listView.empty();
	},
	onNavMenuClick: function() {
		var self = this;
		setTimeout(function() {
			self.hideMegaPopup();
		}, 200);
	},
	//adjustContainerHeight
	setMegaPopupHeight: function(listView) {
		var scrollHeight = (syra_site.size.body.height * 0.65);
		if (listView.config.carousel) {
			var btnHeight = listView.scrollBar.up.link.clientHeight;
			scrollHeight = scrollHeight - (btnHeight * 2);
			!listView.scrollBar.increment && listView.scrollBar.setIncrement();
			scrollHeight = Math.floor(scrollHeight / listView.scrollBar.increment) * listView.scrollBar.increment + btnHeight * 2;
		}
		this.mainPopup.style.height = this.mainPopup.style.maxHeight = scrollHeight + "px";
	},
	hideMegaPopup: function() {
		this.mainPopupDlg && this.mainPopupDlg.close();
	},
	showMegaPopup: function(listView, picker) {
		var self = this;
		if (!self.mainPopup) {
			self.mainPopup = syra_dom.div("s-nav-mega-popup");
		}
		syra_dom.empty(self.mainPopup);
		self.mainPopup.appendChild(listView.scrollSlot);
		if (!self.mainPopupDlg) {
			self.mainPopupDlg = syra_over.openPopup(self, {
				content: {},
				slot: self.mainPopup,
				autoCloseBoundary: picker,
				autoCloseTimeout: 300,
				picker: picker,
				position: {
					my: "left top",
					at: "left bottom",
					of: picker
				},
				close: function() {
					syra_nav && syra_nav.breadcrumb.onClosePopup();
					self.lastSelected && self.lastSelected.activate(false);
					self.mainPopupDlg = null;
				}
			});

			self.setMegaPopupHeight(listView);
			listView.resize();
		}
	},
	resizeItem: function() {
		if (this.areModulesLoaded) {
			this.listView && this.listView.resize();

			if (this.mainPopup && this.lastSelected) {
				this.setMegaPopupHeight(this.lastSelected.listView);
			}
			var lastSelected = this.lastSelected;
			while (lastSelected) {
				lastSelected.listView.resize();
				lastSelected = lastSelected.lastSelected;
			}
		}
	},
	onClosePopup: function() {
		if (this.saveListViewParent && this.saveListViewParent.parentNode) {
			this.saveListViewParent.parentNode.appendChild(this.saveListViewParent.listView.scrollSlot);
		}
		delete this.saveListViewParent;
	},
	click: function(btn) {
		if (!this.listView) { //not loaded
			this.isHighRes = syra_site.layoutSlot.clientWidth >= 1260;
			this.$skin = "s-nav-mega";
			this.load();
			this.resizeItem();
		}
		var listView = btn.$breadCrumbItem.$uuid ? this.navMap[btn.$breadCrumbItem.$uuid].listView : this.listView;
		this.hideMegaPopup();
		this.saveListViewParent = {
			listView: listView,
			parentNode: listView.scrollSlot.parentNode
		};
		this.showMegaPopup(listView, btn.link);
		var $breadCrumb = btn.parent.$breadCrumb;
		var index = $breadCrumb.indexOf(btn.$breadCrumbItem);
		if (index >= 0 && index < ($breadCrumb.length - 1)) {
			var child = this.navMap[$breadCrumb[index + 1].$uuid];
			if (child) {
				syra_dom.toggleClass(child.slot, "s-selected", true);
				listView.scrollTo(child.slot);
			}
		}
	},
	addPath: function(page, parentNode) {
		if (!page.isAlertModal && page.$breadCrumb && page.$breadCrumb.length > 0) {
			var isReadOnly = (page.overPanel && page.overPanel.isModal) || syra_site.$device == "tablet" || page.$facet === "$modal2";
			var slot = syra_dom.div("s-page-head-breadcrumb", parentNode)
			for (var ii = 0, jj = page.$breadCrumb.length - 1; ii <= jj; ii++) {
				var $breadCrumbItem = page.$breadCrumb[ii];
				var btn = syra_button.add({
					parent: page,
					css: "s-page-breadcrumb-item" + (isReadOnly ? " s-readonly" : ""),
					slot: slot,
					text: $breadCrumbItem.title,
					fontIcon: "filter_gt",
					$breadCrumbItem: $breadCrumbItem,
					isIndicator: isReadOnly,
					$isDisabled: isReadOnly,
					click: function() {
						syra_nav.breadcrumb.click(this); //avoid using self
					}
				});
				if (ii === jj) {
					syra_dom.hide(btn.iconflag, true);
				} else {
					btn.iconflag.parentNode.appendChild(btn.iconflag);
				}
			}
		}
	},
	dispose: function() {
		this.listView.empty();
		NavigatorPage.prototype.dispose.call(this);
	}
});