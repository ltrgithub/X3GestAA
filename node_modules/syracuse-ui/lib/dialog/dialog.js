"use strict";
var helpers = require('syracuse-core/lib/helpers');
var WidgetResizer = require("syracuse-ui/lib/site/resize/widgetResizer").WidgetResizer;

function _resizeOverlay(dlg) {
	var rect = syra_site.getLayoutSize();
	if (dlg._content.isFusionPage) {
		var size = syra_site.getBodySize();
		dlg.overlay.style.top = size.top + "px";
		dlg.overlay.style.height = size.height + "px";
	} else {
		dlg.overlay.style.height = rect.height + "px";
	}
	dlg.overlay.style.width = rect.width + "px";
	if (!dlg.isDeactivated) {
		if (dlg._content.layoutSlot.style.display !== "none") // manage of multiple window under modal
			dlg.overlay.style.display = "";
	}
}

function _resizePositioned(dlg, siteBodyRect) {
	var slot = dlg.dialogSlot;
	var rect = syra_site.dom.getBoundingClientRect(slot);
	if (rect.width > siteBodyRect.width) {
		slot.style.width = (rect.width = siteBodyRect.width) + "px";
	}
	if (rect.height > siteBodyRect.height) {
		slot.style.height = (rect.height = siteBodyRect.height) + "px";
	}
	var $position = {
		my: dlg.options.position.my,
		at: dlg.options.position.at,
		of: dlg.options.position.of,
	};
	if (syra_site.isDocumentRTL) {
		var keys = ["my", "at"];
		for (var ii = 0, jj = keys.length; ii < jj; ii++) {
			var key = keys[ii];
			if ($position[key]) {
				if ($position[key].indexOf("left") >= 0) {
					$position[key] = $position[key].replace("left", "right");
				} else {
					$position[key] = $position[key].replace("right", "left");
				}
			}
		}
	}
	var page = dlg.openerBox && dlg.openerBox.page;
	if (page && page.scrollview) {
		var isWithIn = true;
		if (dlg.options.position.of) {
			isWithIn = page.scrollview.contains(dlg.options.position.of[0]);
		}
		if (isWithIn) {
			$position.collision = "flipfit";
			$position.within = $(page.scrollview);
		}
	}
	$(slot).position($position);
	dlg.options.onresize && dlg.options.onresize(dlg);
}

function _setResizer(dlg) {
	return;
	dlg._widgetResizer = new WidgetResizer();
	dlg._widgetResizer.setResizable({
		source: dlg,
		slot: dlg.dialogSlot,
		dragSpot: dlg.options.dragSpot,
		isResizingEnabled: dlg.options.isResizingEnabled,
		onResize: function(resizer, moving) {
			if (moving) {
				dlg.resizeDialog(true, null, true);
			}
		}
	});
}

function _setAutoFocus(dlg) {
	var link = document.createElement("a");
	link.className = "s-dialog-focus-anchor";
	link.setAttribute('href', '#');
	dlg.dialogSlot.appendChild(link);
	link.focus();
}

function _openContent(dlg) {
	dlg._content = dlg.options.content;
	dlg.dialogSlot = dlg.options.slot || dlg.options.content.domItem;
	if (dlg.dialogSlot.style.position != "fixed") {
		dlg.dialogSlot.style.position = "absolute";
	}
	dlg.id = dlg._content.id + "-dlg";
	syra_store.add(dlg);
	_setZIndex(dlg);
	dlg.dialogSlot.style.top = "0px";
	dlg.dialogSlot.style.display = '';
	dlg.options.$isAutoClose = dlg.options.$isAutoClose !== false;
	syra_site.layoutSlot.appendChild(dlg.dialogSlot);

	dlg.options.dragSpot && _setResizer(dlg);
	dlg.isOpened = true;
	dlg.options.$autoFocus && _setAutoFocus(dlg);
	dlg.options.onOpened && dlg.options.onOpened(dlg._content);
	!dlg._content.isPageLoaded && dlg.resizeDialog(); //content is not page => resize
}

function _setZIndex(dlg) {
	var zIndex;
	if (dlg._content && dlg._content.isMessageBox) {
		zIndex = syra_site.dom.getTopZIndex() + 5000; //ensure MessageBox at top
	}
	if (dlg.isModal) {
		dlg.overlay = document.createElement("div");
		dlg.overlay.syraIsOverlay = true;
		dlg.overlay.className = "s-overlay";
		syra_site.dom.setZIndex(dlg.overlay, false, zIndex);
		syra_site.layoutSlot.appendChild(dlg.overlay);
	}
	syra_site.dom.setZIndex(dlg.dialogSlot, false, zIndex);
}


function _loadPageRepresentation(dlg) {
	if (dlg.options.$method && (dlg.options.$method != "GET"))
		syra_controller.postQuery(dlg.options, null, dlg.options.article, function($location, data) {
			dlg.hasCallback = true; // in order not to dispose the dialog before the callback
			syra_controller.loadRepresentation({
				article: dlg.options.article,
				segments: $location.$url,
				success: function($itemPage) {
					if (data && syra_controller.isWorkingCopyUrl(dlg.options.$url)) {
						$itemPage.initData = data;
					}
					_openPage(dlg, $itemPage);
					dlg.hasCallback = null;
				}

			});
		});
	else {
		dlg.hasCallback = true; // in order not to dispose the dialog before the callback
		syra_controller.loadRepresentation({
			article: dlg.options.article,
			segments: dlg.options.$url,
			success: function($itemPage) {
				_openPage(dlg, $itemPage);
				dlg.hasCallback = null;
			}
		});
	}
}

function _openPage(dlg, $itemPage) {
	if ($itemPage || dlg.options.page) {
		if (dlg.options.page) {
			dlg._content = dlg.options.page;
			dlg.dialogSlot = dlg.options.page.layoutSlot || document.createElement("div");
			dlg._content.dialogWrapper = dlg;
		} else {
			dlg.dialogSlot = $itemPage.layoutSlot = document.createElement("div");
			$itemPage.dialogWrapper = dlg;
			dlg._content = syra_site.pageLoader.load($itemPage);
		}
		var page = dlg._content;
		dlg.id = page.id + "-dlg";
		syra_store.add(dlg);
		var $skin = (page.lookupField ? "s-lookup" : dlg.$skin) + "-page";
		page.scrollview.className = $skin + "-scrollview";
		dlg.dialogSlot.className = $skin + "-container";
		page.header.className = $skin + "-head";
		page.body.className = $skin + "-body";
		page.domItem.className = $skin;
		page.domTitle.className = $skin + "-title";
		dlg.dialogSlot.setAttribute("tabindex", "2");
		dlg.options.$isAutoClose = dlg.options.$isAutoClose === true;
		dlg.appendCloseButton();

		if (dlg.options.onValidate || dlg.options.onServerSaved) {
			dlg.btn_ok = syra_menus.addIconButton(syra_local.dlg_ok, dlg.$skin + "-page-ok", "onOkClick", null, "save");
			dlg.btn_ok.syraTool = dlg.id;
			dlg.dialogSlot.appendChild(dlg.btn_ok);
			if (dlg.options.$isOkHidden) {
				dlg.hideOkButton(true);
			}
		}
		if (dlg.options.onSelectRecord) {
			page.onSelectRecord = function(selectedRecords) {
				if (dlg.options.onSelectRecord(selectedRecords, page) !== false) {
					dlg.close();
				}
			};
		}
		dlg.options.dragSpot = page.header;
		_setZIndex(dlg);
		syra_site.layoutSlot.appendChild(dlg.dialogSlot);
		dlg.dialogSlot.style.top = "0px";
		dlg.options.dragSpot && _setResizer(dlg);
		dlg.isOpened = true;
		dlg.options.$autoFocus && _setAutoFocus(dlg);
		dlg.options.onOpened && dlg.options.onOpened(page);
		dlg.resizeDialog();
		syra_site.pageLoader.activateQueryList(page);
		dlg.isDialogPage = true;
	} else {
		if (dlg.options.$itemPage) {
			_openPage(dlg, dlg.options.$itemPage);
		} else {
			_loadPageRepresentation(dlg);
		}
	}
}


function _resizePage(dlg, page, isDlgResizing) {
	var siteSize = _getSiteSize();
	var style = dlg.dialogSlot.style;
	style.maxWidth = siteSize.dlgMaxW + "px";
	style.maxHeight = siteSize.dlgMaxH + "px";
	var scrollTop = page.scrollview.scrollTop;

	var slotRect = dlg.dialogSlot.getBoundingClientRect();
	var scrollRect = page.scrollview.getBoundingClientRect();
	var diffH = (scrollRect.top - slotRect.top) * 2;
	var diffW = (scrollRect.left - slotRect.left) * 2;

	page.scrollview.style.maxHeight = (page.maxBarHeight = (siteSize.dlgMaxH - diffH)) + "px";
	page.scrollview.style.maxWidth = (siteSize.dlgMaxW - diffW) + "px";

	var barH;
	if (page.designer && page.designer.isDesignBarVisible) {
		barH = page.designer.treebarSlot && page.designer.treebarSlot.scrollHeight;
		if (page.designer.propertiesSlot) {
			barH = Math.max(page.designer.propertiesSlot.scrollHeight, barH);
		}
	} else {
		barH = page.menuBar && page.menuBar.barSlot.scrollHeight;
		if (page.fusionBar) {
			barH = Math.max(page.fusionBar.barSlot.scrollHeight, barH);
		}

	}
	if (barH) {
		barH = Math.max(page.scrollview.scrollHeight, barH);
		var prevBarHeight = page.barHeight;
		page.barHeight = barH = Math.min(Math.max(scrollRect.height, barH), page.maxBarHeight);
		if ((barH != scrollRect.height) || (prevBarHeight != page.barHeight)) {
			if (barH != scrollRect.height) {
				page.scrollview.style.height = (barH - page.diagnoseSlot.scrollHeight) + "px";
			}
			if (page.designer && page.designer.isDesignBarVisible) {
				page.designer.treebarSlot.style.height = page.barHeight + "px";
				page.designer.treesBar && page.designer.treesBar.resizeBar();
				page.designer.propertiesSlot.style.height = page.barHeight + "px";
			} else {
				page.menuBar && page.menuBar.resizeBar(true);
				page.fusionBar && page.fusionBar.resizeBar(true);
			}

		}
	}
	slotRect = dlg.dialogSlot.getBoundingClientRect();
	if (!dlg.isUserPosition) {
		var diffW = (siteSize.width - slotRect.width);
		style.maxWidth = slotRect.width + "px";
		style.top = ((siteSize.height - slotRect.height) / 2) + "px";
		style.left = (diffW / 2) + "px";
	}
	if (scrollTop) {
		page.scrollview.scrollTop = Math.min(scrollTop, page.scrollview.scrollHeight - page.scrollview.clientHeight);
	}
}

function _getSiteSize() {
	var siteSize = syra_site.getLayoutSize();
	siteSize.dlgMaxH = Math.max(siteSize.height - 50, 100);
	siteSize.dlgMaxW = Math.max(siteSize.width - 50, 100);
	return siteSize;
}

function _resizeLookupPage(dlg, page, isDlgResizing) {
	var field = page.lookupField;
	var siteSize = _getSiteSize();
	var style = dlg.dialogSlot.style;
	style.maxWidth = siteSize.dlgMaxW + "px";
	style.maxHeight = siteSize.dlgMaxH + "px";
	var freezeBodySlot = field.builder.freezeTable && field.builder.freezeTable.bodySlot;
	var scrollBodySlot = field.builder.scrollTable.bodySlot;
	if (freezeBodySlot) {
		freezeBodySlot.style.height = "0px";
	}
	scrollBodySlot.style.height = "0px";
	var slotRect = dlg.dialogSlot.getBoundingClientRect();
	var bodyRect = scrollBodySlot.getBoundingClientRect();
	var diffH = slotRect.height - bodyRect.height;
	scrollBodySlot.style.maxHeight = (siteSize.dlgMaxH - diffH) + "px";
	scrollBodySlot.style.height = "";
	if (freezeBodySlot) {
		freezeBodySlot.style.height = "";
	}
	field.builder.resizeScrollView();
	slotRect = dlg.dialogSlot.getBoundingClientRect();
	if (!dlg.isUserPosition) {
		style.top = ((siteSize.height - slotRect.height) / 2) + "px";
		style.left = ((siteSize.width - slotRect.width) / 2) + "px";
	}
}


function Dialog() {}

exports.Dialog = helpers.defineClass(Dialog, null, {
	centerDialog: function() {
		var size = _getSiteSize();
		var style = this.dialogSlot.style;
		style.maxWidth = size.dlgMaxW + "px";
		style.maxHeight = size.dlgMaxH + "px";
		var slotRect = this.dialogSlot.getBoundingClientRect();
		if (!this.isUserPosition) {
			style.top = ((size.height - slotRect.height) / 2) + "px";
			style.left = ((size.width - slotRect.width) / 2) + "px";
		}
	},
	open: function(options) {
		if ((this.options = options).content) {
			_openContent(this);
		} else {
			_openPage(this);
		}
	},
	close: function(validated, dispose) {
		if (!this.disposed && this.options && this.options.onClose ? (this.options.onClose(validated !== true, dispose) !== false) : true) {
			this.dispose();
		}
	},
	hideOkButton: function(hide) {
		if (this.btn_ok) {
			this.btn_ok.style.display = hide ? "none" : "";
		}
	},
	onOkClick: function() {
		if ((this.options.onValidate && this.options.onValidate(this._content, this) !== false) || (this.options && this.options.onServerSaved)) {
			if (this.options.onServerSaved) {
				syra_menus.setMenus(this._content, {
					$actions: {
						$save: {
							$isDisabled: false
						}
					}
				});
				syra_menus.click.save(this._content);
			} else {
				this.close(true);
			}
		}
	},
	onCloseClick: function() {
		this.close();
	},
	appendCloseButton: function(slot) {
		slot = slot || this.dialogSlot;
		this.btn_close = syra_menus.addIconButton(syra_local.dlg_close, this.$skin + "-page-close", "onCloseClick", "ESC", "close");
		this.btn_close.syraTool = this.id;
		slot.appendChild(this.btn_close);
	},
	activate: function(isActivated) {
		this.isDeactivated = !isActivated;
		if (this.overlay) {
			this.overlay.style.display = isActivated ? "" : "none";
		}
		this.dialogSlot.style.display = isActivated ? "" : "none";
	},
	resizeDialog: function(resize, onScroll, isDlgResizing) {
		if (!this.isDeactivated && this._content) {
			if (!onScroll && this.overlay) {
				_resizeOverlay(this);
			}
			if (!this.disposed && syra_site.body) {
				var size = syra_site.getLayoutSize();
				var rect = {
					left: 50
				};
				rect.width = size.width - (rect.left * 2);
				rect.right = rect.left + rect.width;
				rect.top = 50;
				this._maxHeight = rect.height = size.height - (rect.top * 2);
				rect.bottom = rect.top + rect.height;
				if (this.options.resizeDialog) {
					this.options.resizeDialog(this, isDlgResizing);
				} else {
					if (this._widgetResizer) {
						this._widgetResizer.maxHeight = this._maxHeight;
					}
					if (this.options.position) {
						_resizePositioned(this, rect);
					} else {
						var page = this._content && this._content.page;
						if (page && page.scrollview) {
							page.lookupField ? _resizeLookupPage(this, page, isDlgResizing) : _resizePage(this, page, isDlgResizing);
						}

					}
				}
			}
		}
	},
	dispose: function() {
		syra_store.remove(this);
		this.overlay && syra_site.dom.removeChild(this.overlay);
		if (this._widgetResizer) {
			this._widgetResizer.dispose();
		}
		if (this._content) {
			delete this._content.dialogWrapper;
		}
		syra_site.dialogManager.close(this);
		if (this.options) {
			this.options.dragSpot = this.options.page = this.options.autoCloseBoundary = null;
			if (this.options.content) {
				delete this.options.content;
			} else {
				this._content.dispose && this._content.dispose();
				this.dialogSlot && syra_site.dom.empty(this.dialogSlot);
			}
			this.dialogSlot && syra_site.dom.removeChild(this.dialogSlot);
		}
		syra_site.disposeObject(this);
	}
});