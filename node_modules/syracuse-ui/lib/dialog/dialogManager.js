"use strict";
var Dialog = require('./dialog').Dialog;

var _stack = [];

function _open(box, options, $skin) {
	var dlg = new Dialog();
	dlg.isModal = options.isModal !== false;
	dlg.$skin = $skin || "s-modal";
	dlg.openerBox = box;
	dlg.openerPage = box.page;
	if (!dlg.openerPage && box.sheets && box.sheets.length > 0) {
		dlg.openerPage = box.sheets[box.sheets.length - 1].page;
	}
	dlg.open(options);
	_stack.push(dlg);
	return dlg;
};

exports.openModal = function(box, options) {
	return _open(box, options);
};
exports.openPage = function(box, options) {
	return _open(box, options);
};

exports.openPopup = function(box, options) {
	options.isModal = false;
	return _open(box, options, "s-popup");
};

exports.openLookup = function(box, options) {
	return exports.openModal(box, options);
};

exports.close = function(dlg) {
	dlg.openerBox = dlg.openerPage = null;
	var index = _stack.indexOf(dlg);
	index >= 0 && _stack.splice(index, 1);

};
exports.closeAll = function(box, dispose) {
	if (_stack) {
		for (var ii = 0, jj = _stack.length; ii < jj; ii++) {
			var dlg = _stack[ii];
			if (dlg && !dlg.disposed && dlg.openerBox == box) {
				dlg.openerBox = dlg.openerPage = null;
				if (!dlg.hasCallback) {
					_stack.splice(ii, 1);
					ii--;
					jj--;
					dlg.close(undefined, dispose);
				}
			}
		}
	}
};

exports.activateAll = function(box, isActivated) {
	for (var ii = 0, jj = _stack.length; ii < jj; ii++) {
		var dlg = _stack[ii];
		if (!dlg.disposed && dlg.openerBox == box) {
			if (dlg._content) {
				exports.activateAll(dlg._content, isActivated);
			}
			dlg.activate(isActivated);
		}
	}
};

exports.closePopups = function(box, event) {
	var site = syra_site;
	for (var ii = 0, jj = _stack.length; ii < jj; ii++) {
		var dlg = _stack[ii];
		if (dlg && dlg.options && dlg.options.$isAutoClose) {
			if (dlg._content && dlg._content == box) {
				continue;
			}
			if (!event || !(dlg.dialogSlot.contains(event.target) ||
				(dlg.options.autoCloseBoundary && dlg.options.autoCloseBoundary.contains(event.target)))) {

				dlg.close();
			}
		}
	}
};

exports.resizePositionedDialogs = function(page) {
	for (var ii = 0, jj = _stack.length; ii < jj; ii++) {
		var dlg = _stack[ii];
		if (!dlg.disposed && dlg.openerPage == page) {
			dlg.resizeDialog(null, true);
		}
	}
};

exports.getTopDialogPage = function() {
	for (var ii = _stack.length - 1; ii >= 0; ii--) {
		if (_stack[ii].isDialogPage) {
			return _stack[ii];
		}
	}
	return null;
};

exports.dispose = function() {
	_stack = null;
};