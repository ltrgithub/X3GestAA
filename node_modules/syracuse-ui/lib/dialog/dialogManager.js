"use strict";
var Dialog = require('./dialog').Dialog;

var _stack = [];

exports.open = function(options) {
	var dialog = new Dialog();
	dialog.open(options);
	return dialog;
};

exports.openBoxDialog = function(box, options) {
	var dialog = new Dialog();
	dialog.openerBox = box;
	dialog.open(options);
	_stack.push(dialog);
	return dialog;
};

exports.closeBoxDialog = function(dialog) {
	delete dialog.openerBox;
	var index = _stack.indexOf(dialog);
	if (index >= 0) {
		_stack.splice(index, 1);
	}
};

exports.activateBoxDialogs = function(box, isActivated) {
	for (var ii = 0, jj = _stack.length; ii < jj; ii++) {
		var dialog = _stack[ii];
		if (!dialog.disposed && dialog.openerBox == box) {
			if (dialog._content) {
				exports.activateBoxDialogs(dialog._content, isActivated);
			}
			dialog.activate(isActivated);
		}
	}
};

exports.closeBoxDialogs = function(box, dispose) {
	for (var ii = 0, jj = _stack.length; ii < jj; ii++) {
		var dialog = _stack[ii];
		if (!dialog.disposed && dialog.openerBox == box) {
			delete dialog.openerBox;
			if (!dialog.hasCallback) {
				dialog.close(undefined, dispose);
				_stack.splice(ii, 1);
				ii--;
				jj--;
			}
		}
	}
};

exports.closePopups = function(box, event) {
	for (var ii = 0, jj = _stack.length; ii < jj; ii++) {
		var dlg = _stack[ii];
		if (dlg.isAutoClose && !dlg.disposed) {
			if (dlg._content && dlg._content == box) {
				continue;
			}
			if (dlg._content && dlg._content.onBeforeAutoClose && !dlg._content.onBeforeAutoClose(box)) {
				continue;
			}
			if (!event || !dlg.isTargetInBoundary(event)) {
				dlg.close();
				if (_stack.indexOf(dlg) < 0) {
					ii--;
					jj--;
				}
			}
		}
	}
};

exports.getTopDialogPage = function() {
	for (var ii = _stack.length - 1; ii >= 0; ii--) {
		if (_stack[ii].isDialogPage) {
			return _stack[ii];
		}
	}
	return null;
};

exports.dispose = function() {
	_stack = null;
};