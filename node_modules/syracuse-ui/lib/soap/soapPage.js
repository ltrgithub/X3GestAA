"use strict";
var helpers = require("syracuse-core/lib/helpers")
var DesktopPage = require("syracuse-ui/lib/page/desktopPage").DesktopPage;

function SoapPage(){
}

exports.SoapPage = helpers.defineClass(SoapPage, DesktopPage, {
    loadBox: function(initData){
        this.$responseCount = 0;
        this.$item.$layout.$layoutType = "tabs";
        this.$item.$layout.$items[0].$title = "Request";
        DesktopPage.prototype.loadBox.call(this, initData);
    },
    onMenuClick: function(menuItem){
        if (menuItem.$bind == "$invoke") {
            debugger;
            var self = this;
            if (self.validateFields()) {
                var invokeMenu = self.$prototype.$links.$invoke;
                self.formatMenuUrl(menuItem, null, function($url){
                    menuItem.$url = $url;
                    document.controller.sendRequest(self, {
                        $location: menuItem,
                        data: self.sendBag,
                        method: menuItem.$method,
                        noDisplayErr: menuItem.noDisplayErr || false
                    }, function(data, response){
                        var newTab = self.layoutContent.createChildItem({
                            $title: "Response " + (++self.$responseCount),
                            $category: "section",
                            $layout: {
                                $items: []
                            }
                        });
                        var soapQuery = document.controller.parseUrl(menuItem.$url);
                        var $itemPage = {
                            layoutSlot: newTab.$$body[0],
                            $category: "vignette",
                            $urlParts: soapQuery.$urlParts,
                            $representation: response.data
                        };
                        $itemPage.$urlParts.$facet = "$response";
                        var initData = $itemPage.$representation.$prototype;
                        var page = document.site.loadNewPage($itemPage);
                        delete initData.$description;
                        page.applyChange(initData);
                        newTab.openBox(true);
                    });
                    // TODO: onerror function
                });
            }
            
        }
    },
    dispose: function(){
        DesktopPage.prototype.dispose.call(this);
    }
});
