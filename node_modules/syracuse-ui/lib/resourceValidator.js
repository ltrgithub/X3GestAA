"use strict";
var helpers = require('syracuse-core').helpers;
forEachKey = helpers.object.forEachKey;
var types = require('syracuse-core').types;

var _startType = "application/x-";

function _getConcreteType(type) {
	type = type.substring(_startType.length, type.length);
	return types[type];
}

function _validateProperty(name, value, type, prop) {
	var validationResults = [];
	var errors = null;
	_getConcreteType(type).validate(value, prop, validationResults);
	if (validationResults.length) {
		errors = {
			property: name,
			value: value,
			errors: validationResults
		};
	}

	//"$diagnoses": [{ "severity": "warning", "message": "order date cannot be after shipping date" }]

	return errors;
}

var _validate = exports.validate = function(obj, metadata) {
	var metadata = metadata || obj.$properties; //doit gérer dans les sous ressources également.
	var validationResults = [];
	forEachKey(obj, function(key, value) {
		if (key != "$properties") {
			if (typeof value != "object" && value != null) {
				var propertyMetadata = metadata[key];
				if (propertyMetadata) {
					var type = propertyMetadata.$type;
					if (type) {
						var propertyValidationResults = _validateProperty(key, value, type, propertyMetadata);
						if (propertyValidationResults) validationResults.push(propertyValidationResults);
					}
				}
			} else {
				validationResults = validationResults.concat(_validate(value, metadata));
			}
		}
	});
	return validationResults;
};