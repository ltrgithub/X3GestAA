"use strict";
var helpers = require("syracuse-core/lib/helpers")
var Article = require("syracuse-ui/lib/article/article").Article;

function DiagnosesTest(){
}

exports.DiagnosesTest = helpers.defineClass(DiagnosesTest, Article, {
    loadBox: function(){
        var self = this;
        self.diagnoseTypes = {
            error: {
                $title: "1 Error",
                $diagnose: {
                    message: "oulalaldfdf fsd fqsdfsd fsdfqsd sdfqsdfqsdfqs fqsdqsdfg",
                    severity: "error"
                }
            },
            fatal: {
                $title: "1 Fatal",
                $diagnose: {
                    message: "oulalaldfdf fsd fqsdfsd fsdfqsd sdfqsdfqsdfqs fqsdqsdfg",
                    severity: "fatal"
                }
            },
            warning: {
                $title: "1 Warning",
                $diagnose: {
                    message: "oulalaldfdf fsd fqsdfsd fsdfqsd sdfqsdfqsdfqs fqsdqsdfg",
                    severity: "warning"
                }
            },
            info: {
                $title: "1 info",
                $diagnose: {
                    message: "oulalaldfdf fsd fqsdfsd fsdfqsd sdfqsdfqsdfqs fqsdqsdfg",
                    severity: "info"
                },
                $links: {
                    $link1: {
                        $title: "link1 bla bla bla"
                    },
                    $link2: {
                        $title: "link2 bla bla bla"
                    },
                    $link3: {
                        $title: "link3 bla bla bla"
                    },
                    $link4: {
                        $title: "link4 bla bla bla"
                    }
                }
            }
        };
        self.$prototype = {
            $links: {}
        };
        Object.keys(self.diagnoseTypes).forEach(function($type){
            self.$prototype.$links[$type] = {
                $title: "Open popup"
            }
        });
        self.$prototype.$links["multitest"] = {
            $title: "Open popup"
        }
        self.$item = {
            $skin: "s-vignette",
            $layout: {
                $items: self._makeSection(["error", "fatal", "info", "warning", "multitest"])
            }
        };
        Article.prototype.loadBox.call(self);
        Object.keys(self.diagnoseTypes).forEach(function($type){
            self._showDiagnosesInSection($type);
        });
        self._showDiagnosesInSection("multitest");
    },
    _showDiagnosesInSection: function($type){
        var section = this.idMap["diagnoseSection-" + $type];
        var diagnosesPanel = document.site.appendDiagnosesPanel(section.$$body, document.site, true);
        var domItem = diagnosesPanel.$$item[0];
        diagnosesPanel.isTestMode = true;
        domItem.style.top = "0px";
        domItem.style.left = "0px";
        domItem.style.position = "relative";
        domItem.style.display = "inline-block";
        diagnosesPanel.showDiagnoses(this.buildDiagnose($type), document.site.mainPage);
        if ($type == "multitest") {
            section.$$title.text("Multi diagnoses");
        }
    },
    
    _makeSection: function($types){
        return $types.map(function($type){
            return {
                $category: "section",
                $id: "diagnoseSection-" + $type,
                $title: "severity = '" + $type + "'",
                $layout: {
                    $items: [{
                        $category: "link",
                        $bind: $type
                    }]
                }
            }
        });
    },
    
    onMenuClick: function(menu){
        document.site.showDiagnoses(this.buildDiagnose(menu.$bind));
    },
    
    buildDiagnose: function($type){
        var self = this;
        var msg = {
            $diagnoses: []
        };
        if ($type == "multitest") {
            for (var ii = 0; ii < 3; ii++) {
                Object.keys(self.diagnoseTypes).forEach(function($type){
                    msg.$diagnoses.push(self.diagnoseTypes[$type].$diagnose);
                });
            }
        }
        else {
            var diagnoseType = self.diagnoseTypes[$type];
            if (diagnoseType.$links) {
                msg.$links = diagnoseType.$links;
            }
            msg.$diagnoses.push(diagnoseType.$diagnose);
        }
        return msg;
    }
});
