"use strict";
var helpers = require("syracuse-core/lib/helpers")
var TestPage = require("syracuse-ui/lib/tests/testPage").TestPage;

function DiagnosesTest(){
}

exports.DiagnosesTest = helpers.defineClass(DiagnosesTest, TestPage, {
    _initiliazeTestPage: function(){
        var self = this;
        self.diagnoseTypes = {
            fatal: {
                $title: "Fatal",
                $diagnose: {
                    message: "oulalaldfdf fsd fqsdfsd fsdfqsd sdfqsdfqsdfqs fqsdqsdfg efzfzefzefzefzefzefzefzef zefzef zef zevzev zezef ze fzefz ze fzef zef zefze fez f",
                    severity: "fatal"
                }
            },
            error: {
                $title: "Error",
                $diagnose: {
                    message: "oulalaldfdf fsd fqsdfsd fsdfqsd sdfqsdfqsdfqs fqsdqsdfg",
                    severity: "error"
                }
            },
            warning: {
                $title: "Warning",
                $diagnose: {
                    message: "oulalaldfdf fsd fqsdfsd fsdfqsd sdfqsdfqsdfqs fqsdqsdfg",
                    severity: "warning"
                }
            },
            info1: {
                $title: "Info",
                $diagnose: {
                    message: "oulalaldfdf fsd fqsdfsd fsdfqsd sdfqsdfqsdfqs fqsdqsdfg",
                    severity: "info"
                }
            },
            info2: {
                $title: "Info with message links",
                $diagnose: {
                    message: "oulalaldfdf fsd fqsdfsd fsdfqsd sdfqsdfqsdfqs fqsdqsdfg",
                    severity: "info"
                },
                $links: {
                    $link1: {
                        $title: "link1 bla bla bla"
                    },
                    $link2: {
                        $title: "link2 bla bla bla"
                    },
                    $link3: {
                        $title: "link3 bla bla bla"
                    },
                    $link4: {
                        $title: "link4 bla bla bla"
                    }
                }
            },
            multitest: {
                $title: "Multitest"
            },
            clean: {
                $title: "Clean"
            }
        };
        Object.keys(self.diagnoseTypes).forEach(function($type){
            self.$prototype.$links[$type] = {
                $title: $type == "clean" ? "Clean diagnoses panel" : "Open popup"
            }
        });
        
        self.$item = {
            $layout: {
                $items: ["fatal", "error", "info1", "info2", "warning", "multitest", "clean"].map(function($type){
                    return {
                        $category: "section",
                        $id: "diagnoseSection-" + $type,
                        $title: "severity = '" + self.diagnoseTypes[$type].$title + "'",
                        $layout: {
                            $items: [{
                                $category: "link",
                                $bind: $type
                            }]
                        }
                    };
                })
            }
        };
    },
    onMenuClick: function(menu){
        var diagnoseType = this.diagnoseTypes[menu.$bind];
        if (diagnoseType) {
            document.site.showDiagnoses(this.buildDiagnose(menu.$bind));
            return false;
        }
        return true;
    },
    
    buildDiagnose: function($type){
        var self = this;
        var msg = {
            $diagnoses: []
        };
        switch ($type) {
            case "multitest":
                for (var ii = 0; ii < 3; ii++) {
                    Object.keys(self.diagnoseTypes).forEach(function($type){
                        if ($type != "multitest" && $type != "clean") {
                            msg.$diagnoses.push(self.diagnoseTypes[$type].$diagnose);
                        }
                    });
                }
                break;
            case "clean":
                msg = null;
                break;
            default:
                var diagnoseType = self.diagnoseTypes[$type];
                if (diagnoseType.$links) {
                    msg.$links = diagnoseType.$links;
                }
                msg.$diagnoses.push(diagnoseType.$diagnose);
        }
        return msg;
    }
});
