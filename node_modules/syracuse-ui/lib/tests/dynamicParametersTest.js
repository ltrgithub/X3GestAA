"use strict";
var helpers = require("syracuse-core/lib/helpers");
var TestPage = require("syracuse-ui/lib/tests/testPage").TestPage;

function DynamicParametersTest() {}

exports.DynamicParametersTest = helpers.defineClass(DynamicParametersTest, TestPage, {
	notifyChangeToServer: function(sendBag) {
		document.site.spyer.spyNotify(sendBag);
		this.applyChange(sendBag);
	},
	_initiliazeTestPage: function() {
		this.$prototype.$title = "Dynamic Paramerters";
		this.$prototype.$properties = {
			"fieldA": {
				"$title": "fieldA",
				"$type": "application/x-string"
			},
			"fieldB": {
				"$title": "fieldB",
				"$type": "application/x-string"
			},
			linkParameterField: {
				$title: "json definition",
				$type: "application/x-string"
			},
			linkParameterFieldResult: {
				$title: "result",
				$type: "application/x-string"
			},
			linkFormParameterField: {
				$title: "json definition",
				$type: "application/x-string"
			},
			linkFormParameterFieldResult: {
				$title: "result",
				$type: "application/x-string"
			},
			actionParameterField: {
				$title: "json definition",
				$type: "application/x-string"
			},
			actionParameterFieldResult: {
				$title: "result",
				$type: "application/x-string"
			},
			actionFormParameterField: {
				$title: "json definition",
				$type: "application/x-string"
			},
			actionFormParameterFieldResult: {
				$title: "result",
				$type: "application/x-string"
			},
			actionSelectFormParameterField: {
				$title: "json definition",
				$type: "application/x-string"
			}
		};
		this.$prototype.fieldA = "fieldA value";
		this.$prototype.fieldB = "fieldB value";

		this.$prototype.$links.$help = {
			$url: "https://github.com/Sage-ERP-X3/platform/wiki/Dynamic-parameters"
		};
		this.$prototype.$links.linkParameter = {
			"$title": "clik link with parameters",
			"$method": "POST",
			"$url": "/sdata/sprint1/settings/sprint1/employees?representation=employee.$query&par1={param1}&par2={param2}",
			"$parameters": {
				"param1": "{fieldA}",
				"param2": "value"
			}
		};
		this.$prototype.$links.linkFormParameter = {
			"$title": "clik link with form parameters",
			"$url": "/sdata/sprint1/settings/sprint1/employees?representation=employee.$query&par1={param1}&par2={param2}&par3={param3}&par4={param4}&par4={param5}",
			"$parameters": {
				"$properties": {
					"param3": {
						"$title": "my param3",
						"$type": "application/x-string"
					},
					"param4": {
						"$title": "my param4",
						"$type": "application/x-string"
					},
					"param5": {
						"$title": "my param5",
						"$type": "application/x-string",
						"$isEditMode": false
					}
				},
				"param3": "param3 default value",
				"param1": "{fieldA}",
				"param2": "{fieldB}"
			}
		};
		this.$prototype.$actions.actionParameter = {
			"$title": "click action with parameters",
			"$url": "/sdata/sprint1/settings/sprint1/employees?representation=employee.$query",
			"$parameters": {
				"param1": "{fieldA}",
				"param2": "value"
			}
		};
		this.$prototype.$actions.actionFormParameter = {
			"$title": "click action with form parameters",
			"$url": "/sdata/sprint1/settings/sprint1/employees?representation=employee.$query",
			"$parameters": {
				"$properties": {
					"param3": {
						"$title": "my param3",
						"$type": "application/x-string"
					},
					"param4": {
						"$title": "my param4",
						"$type": "application/x-string"
					},
					"param5": {
						"$title": "my param4",
						"$type": "application/x-string",
						"$isEditMode": false
					}
				},
				"param3": "param3 default value",
				"param1": "{fieldA}",
				"param2": "{fieldB}"
			}
		};
		this.$prototype.$actions.actionSelectFormParameter = {
			"$title": "click action with select form parameters",
			"$url": "/sdata/sprint1/settings/sprint1/employees?representation=employee.$query",
			"$parameters": {
				"$actions": {
					"$select": {
						"$type": "application/x-array",
						"$url": "{$baseUrl}/employees?representation=employee.$select"
					}
				}
			}
		};
		this.$item.$layout = {
			$items: [{
				$layoutType: "row",
				$autoSize: true,
				$items: [{
					$bind: "fieldA",
					$isEditMode: true
				}, {
					$bind: "fieldB",
					$isEditMode: true
				}]
			}, {
				$layoutType: "tabs",
				$items: [{
					$category: "section",
					$title: "Link Parameter",
					$layout: {
						$items: [{
							$category: "link",
							$bind: "linkParameter"
						}, {
							$bind: "linkParameterField",
							$isEditMode: true,
							$rows: 10,
							$isAutoSizeDisabled: true,
							$skin: "s-json-field"
						}, {
							$bind: "linkParameterFieldResult",
							$isEditMode: true,
							$rows: 10,
							$isAutoSizeDisabled: true,
							$skin: "s-json-field"
						}]
					}
				}, {
					$category: "section",
					$title: "Link Form Parameter",
					$layout: {
						$items: [{
							$category: "link",
							$bind: "linkFormParameter"
						}, {
							$bind: "linkFormParameterField",
							$isEditMode: true,
							$rows: 28,
							$isAutoSizeDisabled: true,
							$skin: "s-json-field"
						}, {
							$bind: "linkFormParameterFieldResult",
							$isEditMode: true,
							$rows: 10,
							$isAutoSizeDisabled: true,
							$skin: "s-json-field"
						}]
					}
				}, {
					$category: "section",
					$title: "Action Parameter",
					$layout: {
						$items: [{
							$category: "link",
							$bind: "actionParameter"
						}, {
							$bind: "actionParameterField",
							$isEditMode: true,
							$rows: 10,
							$isAutoSizeDisabled: true,
							$skin: "s-json-field"
						}, {
							$bind: "actionParameterFieldResult",
							$isEditMode: true,
							$rows: 10,
							$isAutoSizeDisabled: true,
							$skin: "s-json-field"
						}]
					}
				}, {
					$category: "section",
					$title: "Action Form Parameter",
					$layout: {
						$items: [{
							$category: "link",
							$bind: "actionFormParameter"
						}, {
							$bind: "actionFormParameterField",
							$isEditMode: true,
							$rows: 28,
							$isAutoSizeDisabled: true,
							$skin: "s-json-field"
						}, {
							$bind: "actionFormParameterFieldResult",
							$isEditMode: true,
							$rows: 10,
							$isAutoSizeDisabled: true,
							$skin: "s-json-field"
						}]
					}
				}, {
					$category: "section",
					$title: "Action Select Form",
					$layout: {
						$items: [{
							$category: "link",
							$bind: "actionSelectFormParameter"
						}, {
							$bind: "actionSelectFormParameterField",
							$isEditMode: true,
							$rows: 15,
							$isAutoSizeDisabled: true,
							$skin: "s-json-field"
						}]
					}
				}]
			}]
		};
	},
	loadBox: function() {
		TestPage.prototype.loadBox.call(this);
		this.applyChange({
			linkParameterField: JSON.stringify({
				$links: this.$prototype.$links.linkParameter
			}, null, 2),
			linkFormParameterField: JSON.stringify({
				$links: this.$prototype.$links.linkFormParameter
			}, null, 2),
			actionParameterField: JSON.stringify({
				$links: this.$prototype.$actions.actionParameter
			}, null, 2),
			actionFormParameterField: JSON.stringify({
				$links: this.$prototype.$actions.actionFormParameter
			}, null, 2),
			actionSelectFormParameterField: JSON.stringify({
				$links: this.$prototype.$actions.actionSelectFormParameter
			}, null, 2)
		});
	},
	onMenuClick: function(menu) {
		var self = this;
		if (menu.$bind.indexOf("Parameter") > 0) {
			document.site.urlMaker.formatMenuUrl(self, menu, null, function($url, isCanceled) {
				var result = {};
				result[menu.$bind + "FieldResult"] = JSON.stringify({
					actionFormParameterField: $url
				}, null, 2);
				self.applyChange(result);
			});
			//return false;
		}
		return true;
	}
});