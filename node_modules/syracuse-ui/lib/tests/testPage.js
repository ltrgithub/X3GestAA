"use strict";
var helpers = require("syracuse-core/lib/helpers");
var DesktopPage = require("syracuse-ui/lib/page/desktopPage").DesktopPage;
var resources = require("./resources");

function _addMenus($menus, rootSlot) {
	for (var ii = 0, jj = $menus.length; ii < jj; ii++) {
		var $menu = $menus[ii];
		if ($menu.$url) {
			var btn = syra_menus.addTextButton($menu.$title, "s-mn-extra-link", "onNavTestMenuClick");
			rootSlot.appendChild(btn).href = $menu.$url;
		}
		$menu.$menus && _addMenus($menu.$menus, rootSlot);
	}
}


function TestPage() {}

exports.TestPage = helpers.defineClass(TestPage, DesktopPage, {
	_initiliazeTestPage: function() {

	},
	getResources: function() {
		return resources;
	},
	onNavTestMenuClick: function(event, target) {
		if (target.syraValue && target.syraValue.indexOf("uilock") >= 0) {
			syra_site.uiLocker.lock(100, target.syraValue == "uilocklong");
		} else {
			syra_controller.executeMenu({
				$url: target.href
			}, this);
		}
		event.preventDefault();
		event.stopPropagation();
	},
	loadBox: function(initData) {
		syra_site.pageLoader.initialize(this);
		this._initiliazeTestPage();
		this.$prototype.$properties = this.$prototype.$properties || {};
		DesktopPage.prototype.loadBox.call(this, initData);

		syra_site.dom.toggleClass(this.menuBar.barBody, "s-uitest-menubar-body", true);
		_addMenus(syra_site.uiTestController.$menus, this.menuBar.barBody);

		this.menuBar.barBody.appendChild(syra_menus.addTextButton("ui lock", "s-mn-extra-link", "onNavTestMenuClick")).syraValue = "uilock";
		this.menuBar.barBody.appendChild(syra_menus.addTextButton("ui lock long", "s-mn-extra-link", "onNavTestMenuClick")).syraValue = "uilocklong";
	}
});