"use strict";
exports.load = function(page) {
	page.setTitle("Layout");
	var $props = page.$prototype.$properties;
	$props.$field$isHidden = {
		$type: "application/x-boolean",
		$title: "$isHidden",
		$isMetaData: true
	};
	$props.$field$hideMaxClose = {
		$type: "application/x-boolean",
		$title: "hide $isMaximizable and $isCloseable",
		$isMetaData: true
	};
	$props.$field$hideTitleCollapse = {
		$type: "application/x-boolean",
		$title: "hide $isTitleHidden and $isBoxCollapsable",
		$isMetaData: true
	};
	$props.$field$isTitleHidden = {
		$type: "application/x-boolean",
		$title: "$isTitleHidden",
		$isMetaData: true
	};
	$props.$field$isBoxCollapsable = {
		$type: "application/x-boolean",
		$title: "$isBoxCollapsable",
		$isMetaData: true
	};
	$props.$field$isCloseable = {
		$type: "application/x-boolean",
		$title: "$isCloseable ",
		$isMetaData: true
	};
	$props.$field$isMaximizable = {
		$type: "application/x-boolean",
		$title: "$isMaximizable ",
		$isMetaData: true
	};

	page.leftCol.style.width = "40%";
	page.loadNewItem(page.leftCol, {
		"$category": "section",
		"$test": true,
		"$skin": "s-h1",
		"$title": "s-h1",
		"$layout": {
			"$layoutType": "stack",
			"$items": [{
				"$category": "section",
				"$test": true,
				"$title": "s-h2",
				"$skin": "s-h2",
				"$layout": {
					"$layoutType": "row",
					"$items": [{
						"$bind": "$field$isMaximizable",
						"$isEditMode": true
					}, {
						"$bind": "$field$isCloseable",
						"$isEditMode": true
					}]
				}
			}, {
				"$category": "section",
				"$test": true,
				"$title": "s-h3",
				"$skin": "s-h3",
				"$layout": {
					"$items": [{
						"$bind": "$field$isMaximizable",
						"$isEditMode": true
					}, {
						"$bind": "$field$isCloseable",
						"$isEditMode": true
					}, {
						"$bind": "$field$isTitleHidden",
						"$isEditMode": true
					}, {
						"$bind": "$field$isBoxCollapsable",
						"$isEditMode": true
					}]
				}
			}]
		}
	});
	page.rightCol.style.width = "40%";
	page.loadNewItem(page.rightCol, {
		"$layoutType": "tabs",
		"$items": [{
			"$category": "section",
			"$test": true,
			"$skin": "s-h1",
			"$title": "s-h1",
			"$layout": {
				"$layoutType": "tabs",
				"$items": [{
					"$category": "section",
					"$test": true,
					"$title": "s-h2",
					"$skin": "s-h2",
					"$layout": {
						"$layoutType": "tabs",
						"$items": [{
							"$category": "section",
							"$test": true,
							"$title": "s-h3",
							"$skin": "s-h3",
							"$layout": {
								"$items": [{
									"$bind": "$field$isTitleHidden",
									"$isEditMode": true
								}, {
									"$bind": "$field$isBoxCollapsable",
									"$isEditMode": true
								}]
							}
						}, {
							"$category": "section",
							"$test": true,
							"$title": "s-h3",
							"$skin": "s-h3",
							"$layout": {
								"$items": [{
									"$bind": "$field$isTitleHidden",
									"$isEditMode": true
								}, {
									"$bind": "$field$isBoxCollapsable",
									"$isEditMode": true
								}]
							}
						}]
					}
				}, {
					"$category": "section",
					"$test": true,
					"$title": "s-h2",
					"$skin": "s-h2",
					"$layout": {
						"$layoutType": "row",
						"$items": [{
							"$bind": "$field$isMaximizable",
							"$isEditMode": true
						}, {
							"$bind": "$field$isCloseable",
							"$isEditMode": true
						}, {
							"$bind": "$field$isTitleHidden",
							"$isEditMode": true
						}, {
							"$bind": "$field$isBoxCollapsable",
							"$isEditMode": true
						}]
					}
				}]
			}
		}, {
			"$category": "section",
			"$test": true,
			"$skin": "s-h1",
			"$title": "s-h1",
			"$layout": {
				"$items": [{
					"$bind": "$field$isTitleHidden",
					"$isEditMode": true
				}, {
					"$bind": "$field$isBoxCollapsable",
					"$isEditMode": true
				}]
			}
		}]
	});
	var col = page.addCol(page.layoutContent.domItem, "20%");
	page.loadNewItem(col, {
		"$bind": "$field$isHidden",
		$isEditMode: true,
		$isLeftSpaceHidden: true
	});
	page.loadNewItem(col, {
		"$bind": "$field$hideMaxClose",
		$isEditMode: true,
		$isLeftSpaceHidden: true
	});
	page.loadNewItem(col, {
		"$bind": "$field$hideTitleCollapse",
		$isEditMode: true,
		$isLeftSpaceHidden: true
	});
	col.appendChild(syra_menus.addTextButton("single diagnose", "s-uitest-mn", "onSingleDiagnoseClick"));
	page.applyChange({
		$field$isBoxCollapsable: true,
		$field$isCloseable: true,
		$field$isMaximizable: true
	});


	page.onSingleDiagnoseClick = function() {
		var metaData = {};
		var $binds = Object.keys(this.$prototype.$properties);
		for (var ii = 0, jj = $binds.length; ii < jj; ii++) {
			metaData[$binds[ii]] = {
				$diagnoses: [{
					$severity: "error",
					$message: "Error test  blalfoz"
				}]
			};
		}
		this.applyChange({
			$properties: metaData
		});
	};
};

exports.notifyDataChange = function(field, value) {
	if (field.$item.$bind.indexOf("$field") == 0) {
		var metaData = {};
		metaData[field.$item.$bind] = value;
		field.page.applyChange(metaData);
	}
};
exports.applyChange = function(page, newData) {
	if (newData) {
		var $keys = Object.keys(newData);
		for (var ii = 0, jj = $keys.length; ii < jj; ii++) {
			var $key = $keys[ii];
			if ($key.indexOf("$field") == 0) {
				var $bind = $key.replace("$field", "");
				var metaData = {};
				metaData[$bind] = newData[$key];
				switch ($bind) {
					case "$hideTitleCollapse":
						["$field$isBoxCollapsable", "$field$isTitleHidden"].map(function($bind) {
							var bounds = page.boundFields[$bind];
							for (var ii = 0, jj = bounds.length; ii < jj; ii++) {
								bounds[ii].applyDesignMetaData({
									$isHidden: newData[$key]
								}, true);
							}
						});
						break;
					case "$hideMaxClose":
						["$field$isMaximizable", "$field$isCloseable"].map(function($bind) {
							var bounds = page.boundFields[$bind];
							for (var ii = 0, jj = bounds.length; ii < jj; ii++) {
								bounds[ii].applyDesignMetaData({
									$isHidden: newData[$key]
								}, true);
							}
						});
						break;
					default:
						Object.keys(page.idMap).forEach(function(id) {
							var box = page.idMap[id];
							if (box.$item.$test) {
								box.applyDesignMetaData(metaData, true);
							}
						});
						break;
				}

			}
		}
	}
};