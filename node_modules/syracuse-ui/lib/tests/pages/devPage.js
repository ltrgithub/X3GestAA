"use strict";
var helpers = require('@sage/syracuse-core').helpers;
var DesktopPage = require("syracuse-ui/lib/page/desktopPage").DesktopPage;

function DevPage() {}

exports.DevPage = helpers.defineClass(DevPage, DesktopPage, {
	addBox: function($title) {
		var box = {
			slot: document.createElement("div"),
			body: document.createElement("div")
		};
		if ($title) {
			box.title = document.createElement("h2");
			box.title.className = "s-sitemap-mega-item-btn-block";
			box.title.textContent = $title;
			box.slot.appendChild(box.title);
		}
		box.slot.appendChild(box.body).className = "";
		return box;
	},
	addCol: function(slot, width) {
		var col = slot.appendChild(document.createElement("div"));
		col.className = "s-uitest-col";
		if (width) {
			col.style.width = width;
		}
		return col;
	},
	load: function(initData) {
		var self = this;
		self.isAutoInsertFieldDisabled = true;
		self.isMenuBarDisabled = true;
		syra_pageBuilder.initialize(self);
		self.$prototype.$properties = self.$prototype.$properties || {};
		DesktopPage.prototype.load.call(self, initData);
		require.async("syracuse-ui/lib/tests/pages/" + self.$prototype.$devName, function(err, module) {
			if (err && err.message) {
				syra_alert.error(err.message);
			} else {
				self.devModule = module.map;
				var $links = {};
				self.devModule.$items.forEach(function($block, blockIndex) {
					var box = self.addBox($block.$title, "mn");
					self.layoutContent.domItem.appendChild(box.slot);
					box.cols = [];
					for (var mm = 0; mm < 4; mm++) {
						var col = document.createElement("div");
						col.className = "s-uitest-col";
						col.style.width = "25%";
						box.cols.push(col);
						box.body.appendChild(col);
					}
					var colIndex = 0;
					$block.$menus.forEach(function($menu, menuIndex) {
						var id = self.id + "-link-" + blockIndex + "-" + menuIndex;
						$links[id] = $menu;
						self.addItem(box.cols[colIndex++], {
							$category: "link",
							$skin: "s-sitemap-mega-item-btn-menu",
							$bind: id
						});
						if (colIndex == 4) {
							colIndex = 0;
						}
					});
				});
				self.applyChange({
					$title: self.devModule.$title,
					$links: $links
				});
				self.resizeItem(true);
			}
		});

	}
});