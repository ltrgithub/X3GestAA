"use strict";
exports.scenarios = require("./scenarios").scenarios;

exports.simple = {
	load: function(page, finish) {
		var $props = page.$prototype.$properties;
		$props.unknow = {
			$title: "unknow",
			$type: "application/x-unknow",

			$maxLength: 30,
			$capabilities: "sort,filter",
		};
		$props.xstring = {
			$title: "xstring (20)",
			$type: "application/x-string",
			$maxLength: 20,
			$capabilities: "sort,filter"
		};
		$props.xstring$localizable = {
			$title: "Localizable property",
			$type: "application/x-string",
			$capabilities: "localize",
			$links: {
				$localize: {
					$title: "Translations",
					$url: "/syracuse-ui/lib/tests/field/data/localizablePropertyTest.json"
				}
			}
		};
		$props.xstring$localizablePicker = {
			$title: "Localizable property (picker)",
			$type: "application/x-string",
			$capabilities: "localize",
			$links: {
				$localize: {
					$title: "Translations",
					$url: "/syracuse-ui/lib/tests/field/data/localizablePropertyTest.json"
				}
			}
		};
		$props.xchoice = {
			$title: "xchoice",
			$type: "application/x-choice",
			$value: {
				$type: "application/x-integer",
				$enum: [0, 1, 2, 3, 4].map(function(value) {
					return {
						$value: value,
						$title: "Value " + value
					};
				})
			},
			$links: {
				$details: {
					$title: "couc"
				}
			}
		};
		$props.xdate = {
			$title: "xdate",
			$type: "application/x-date"

		};
		$props.xtime = {
			$title: "xtime",
			$type: "application/x-time"
		};
		$props.xdatetime = {
			$title: "xdatetime",
			$type: "application/x-datetime"
		};
		$props.xboolean = {
			$title: "xboolean",
			$type: "application/x-boolean"
		};
		$props.$email = {
			$title: "$format: $email",
			$type: "application/x-string",
			$format: "$email"

		};
		$props.$phone = {
			$title: "$format: $phone",
			$type: "application/x-string",
			$format: "$phone"
		};
		$props.xinteger = {
			$title: "xinteger",
			$type: "application/x-integer",
			$isNullable: true,
			"$capabilities": "sort,filter"
		};
		$props.xProgress = {
			$title: "xProgress",
			$type: "application/x-integer",
			$mode: "progress"
		};
		$props.xdecimal = {
			$title: "xdecimal",
			$type: "application/x-decimal",
			"$isNullable": true
		};
		$props.xquantity1 = {
			$title: "xquantity with xreference",
			$type: "application/x-quantity",
			$value: {
				$title: "{$value} {$unit}",
				$type: "application/x-decimal",
				$format: "0"
			},
			$unit: "CURRENCY"
		};
		$props.YCUR = {
			"$type": "application/x-string",
			"$maxLength": 3,
			"$isHidden": true
		};
		$props.CURRENCY = {
			"$title": "{@323}",
			"$shortTitle": "{@323}",
			"$type": "application/x-reference",
			"$isMandatory": true,
			"$capabilities": "sort,filter",
			"$item": {
				"$url": "{$baseUrl}/TABCUR('{$key}')?representation=TABCUR.$lookup",
				"$value": "{CUR}",
				"$key": "{CUR}",
				"$properties": {
					"CUR": {
						"$type": "application/x-string"
					}
				},
				"CUR": "{YCUR}",
				"$links": {
					"$details": {
						"$title": "{@28123}",
						"$target": "",
						"$type": "application/json;vnd.sage=syracuse",
						"$url": "{$baseUrl}/TABCUR('{YCUR}')?representation=TABCUR.$details"
					},
					"$lookup": {
						"$title": "{@6109}",
						"$type": "application/json;vnd.sage=syracuse",
						"$url": "{$baseUrl}/TABCUR?representation=TABCUR.$lookup"
					}
				}
			}
		};
		$props.STATUS = {
			"$title": "{@23269}",
			"$shortTitle": "{@23269}",
			"$type": "application/x-choice",
			"$capabilities": "sort,filter",
			"$value": {
				"$type": "application/x-integer",
				"$enum": [{
					"$value": 1,
					"$title": "{@mes617_1}"
				}, {
					"$value": 2,
					"$title": "{@mes617_2}"
				}]
			}
		};
		$props.xreference = {
			$pluralType: "employees",
			$representation: "employee",
			$title: "xreference",
			$isMandatory: false,
			$capabilities: "sort,filter",
			$type: "application/x-reference",
			$url: "{$baseUrl}/{$pluralType}('{$key}')?representation={$representation}.$thumb",
			"$item": {
				$value: "{code}",
				$key: "{$uuid}",
				"$properties": {
					"code": {
						"$type": "application/x-string"
					},
					"description": {
						"$type": "application/x-string"
					}
				},
				$links: {
					"$details": {
						"$type": "application/json;vnd.sage=syracuse",
						"$url": "/sdata/syracuse/collaboration/syracuse/users('{$uuid}')?representation=country.$details&role={$role}"
					},
					"$lookup": {
						"$type": "application/json;vnd.sage=syracuse",
						"$url": "/sdata/syracuse/collaboration/syracuse/users?representation=country.$lookup&role={$role}&trackingId={$trackingId}&binding=country"
					},
					"$details1": {
						"$type": "application/json;vnd.sage=syracuse",
						"$title": "test link1",
						"$url": "/sdata/syracuse/collaboration/syracuse/users('{$uuid}')?representation=country.$details&role={$role}"
					},
					"$details2": {
						"$type": "application/json;vnd.sage=syracuse",
						"$title": "test link2",
						"$url": "/sdata/syracuse/collaboration/syracuse/users('{$uuid}')?representation=country.$details&role={$role}"
					},
				}
			}
		};
		page.refreshData = function() {
			var $properties = {};
			Object.keys(page.$prototype.$properties).forEach(function($bind) {
				$properties[$bind] = {};
				page.$prototype.$properties[$bind] = {};
			});
			page.applyChange({
				$properties: $properties,
				xstring: "ceci est du texte",
				xstring$localizable: "Bague argent",
				xstring$localizablePicker: "Bague argent",
				$phone: "+330141662121",
				$email: "toto@sage.com",
				xinteger: 200,
				xdecimal: 2987111111111.4548,
				xboolean: true,
				xdate: "2011-06-07",
				xtime: "12:00:00",
				xdatetime: "2012-03-16T12:40:50.957Z",
				xchoice: 2,
				xreference: {
					"$uuid": "4e54a41e-5c7d-4926-ad57-6a5f882c24c4",
					"$key": "4e54a41e-5c7d-4926-ad57-6a5f882c24c4",
					"$etag": 1,
					"$properties": {},
					"code": "AD",
					"description": "Andorradfd fsdqfsqdfsdq sdqf sdqfsdqf sdqqfsdq fsdqf sdqf sdfsdqf sdf sqdfsd qfsdq fsdqf sdqfsd qfsdq fsqd fs q fqsf",
					"$description": "Andorradfd fsdqfsqdfsdq sdqf sdqfsdqf sdqqfsdq fsdqf sdqf sdfsdqf sdf sqdfsd qfsdq fsdqf sdqfsd qfsdq fsqd fs q fqsf"
				},
				YCUR: "USD",
				CURRENCY: {
					"$symbol": "$",
					$scale: 5
				},
				STATUS: 1,
				xquantity1: 78.5
			});
		};
		syra_item.ensureMediaTypes(page.$prototype, function() {
			page.addFieldBlock(page.leftCol, "xstring", ["unknow", "xstring", "$phone", "$email"]);
			page.addFieldBlock(page.leftCol, "xboolean", ["xdate", "xtime", "xdatetime"]);
			page.addFieldBlock(page.leftCol, "Numeric", ["xinteger"]);
			page.addFieldBlock(page.leftCol, "Localizable", ["xstring$localizable", "xstring$localizablePicker"], function($edit) {
				if ($edit.$bind == "xstring$localizablePicker") {
					$edit.$useLocalizePicker = true;
				}
			});
			page.addFieldBlock(page.leftCol, "Progress", ["xProgress"]);
			page.addFieldBlock(page.leftCol, "Decimal", ["xdecimal"]);
			page.addFieldBlock(page.leftCol, "Quantity", ["xquantity1"]);
			page.addFieldBlock(page.leftCol, "xboolean", ["xboolean"]);
			page.addFieldBlock(page.leftCol, "xchoice", ["xchoice", "xchoice", "xchoice"]);
			var xchoices = page.boundFields.xchoice;
			for (var ii = 0; ii < 6; ii++) {
				if (ii < 2) {
					xchoices[ii].setTitle("default >4 combo");
				} else
				if (ii < 4) {
					xchoices[ii].setTitle("$format:$combo");
					xchoices[ii].applyDesignMeta({
						$format: "$combo"
					});
				} else {
					xchoices[ii].setTitle("$format:$radios");
					xchoices[ii].applyDesignMeta({
						$format: "$radios"
					});
				}
			}
			page.addFieldBlock(page.leftCol, "xreference", ["xreference"]);

			finish(page);
		});

	}
};

exports.binary = {
	load: function(page, finish) {
		var $props = page.$prototype.$properties;
		$props.embededPDF = {
			$isTitleHidden: true,
			$type: "application/pdf",
			$url: "/syracuse-ui/lib/tests/pages/field/data/binarytest.pdf"
		};
		$props.embededPNG = {
			$isTitleHidden: true,
			$type: "image/png",
			$url: "/syracuse-ui/lib/tests/pages/field/data/binarytest.png"
		};
		page.addFieldBlock(page.leftCol, "PDF", ["embededPDF"]);
		page.addFieldBlock(page.leftCol, "PNG", ["embededPNG"]);

		page.refreshData = function() {
			page.applyChange({
				embededPDF: {},
				embededPNG: {}
			});
		};
		finish(page);
	}
};


exports.icon = {
	load: function(page, finish) {
		page.isAssertSummaryMode = true;
		var $props = page.$prototype.$properties;
		var cols = [];
		for (var ii = 0; ii < 8; ii++) {
			var col = page.addCol(page.leftCol);
			col.style.width = "12%";
			cols.push(col);
		}
		for (var ii = 0, colIndex = 0; ii <= 350; ii++) {
			$props["icon-" + ii] = {
				$title: ii + "",
				$type: "application/x-icon"
			};
			page.addItem(cols[colIndex], {
				$bind: "icon-" + ii,
				$isTitleHidden: false,
				$isEditMode: true
			}).onFieldInputEvent = function(event) {
				if (event.type == "click") {
					alert(this.currentValue);
				}
			};
			page.addItem(cols[4 + colIndex], {
				$bind: "icon-" + ii,
				$isTitleHidden: false,
				$isEditMode: false
			}).onFieldInputEvent = function(event) {
				if (event.type == "click") {
					alert(this.currentValue);
				}
			};
			if ((++colIndex) == 4) {
				colIndex = 0;
			}
		}
		syra_item.ensureMediaTypes(page.$prototype, function() {
			page.refreshData = function() {
				var data = {};
				for (var ii = 0, colIndex = 0; ii <= 350; ii++) {
					data["icon-" + ii] = ii;
				}
				page.applyChange(data);
			};
			finish(page);
		});
	}
};
var XMLValue = '<?xml version="1.0" encoding="UTF-8"?><RESULT DIM="10000" SIZE="10"><LIN NUM="1"><FLD NAME="BPCNUM" TYPE="Char">AO001</FLD><FLD NAME="BPCNAM" TYPE="Char">Luanda BTT</FLD><FLD NAME="BPCSHO" TYPE="Char">Luanda BTT</FLD><FLD MENULAB="Normal" MENULOCAL="401" NAME="BPCTYP" TYPE="Integer">1</FLD><FLD NAME="POSCOD" TYPE="Char"/><FLD NAME="PTE" TYPE="Char">ANCHQ30FM</FLD></LIN><LIN NUM="2"><FLD NAME="BPCNUM" TYPE="Char">AO002</FLD><FLD NAME="BPCNAM" TYPE="Char">Ciclo Belas</FLD><FLD NAME="BPCSHO" TYPE="Char">CicloBelas</FLD><FLD MENULAB="Normal" MENULOCAL="401" NAME="BPCTYP" TYPE="Integer">1</FLD><FLD NAME="POSCOD" TYPE="Char"/><FLD NAME="PTE" TYPE="Char">ANTRF30</FLD></LIN><LIN NUM="3"><FLD NAME="BPCNUM" TYPE="Char">AO003</FLD><FLD NAME="BPCNAM" TYPE="Char">Farmácia Saude e Higiene</FLD><FLD NAME="BPCSHO" TYPE="Char">AngoFarma</FLD><FLD MENULAB="Normal" MENULOCAL="401" NAME="BPCTYP" TYPE="Integer">1</FLD><FLD NAME="POSCOD" TYPE="Char"/><FLD NAME="PTE" TYPE="Char">ANCHQ60</FLD></LIN><LIN NUM="4"><FLD NAME="BPCNUM" TYPE="Char">AO004</FLD><FLD NAME="BPCNAM" TYPE="Char">Distribuição Angola Farma</FLD><FLD NAME="BPCSHO" TYPE="Char">DistrFarm</FLD><FLD MENULAB="Normal" MENULOCAL="401" NAME="BPCTYP" TYPE="Integer">1</FLD><FLD NAME="POSCOD" TYPE="Char"/><FLD NAME="PTE" TYPE="Char">ANTRF30</FLD></LIN><LIN NUM="5"><FLD NAME="BPCNUM" TYPE="Char">AO005</FLD><FLD NAME="BPCNAM" TYPE="Char">Supermercados do Marçal</FLD><FLD NAME="BPCSHO" TYPE="Char">SupMarçal</FLD><FLD MENULAB="Normal" MENULOCAL="401" NAME="BPCTYP" TYPE="Integer">1</FLD><FLD NAME="POSCOD" TYPE="Char"/><FLD NAME="PTE" TYPE="Char">ANCHQ60</FLD></LIN><LIN NUM="6"><FLD NAME="BPCNUM" TYPE="Char">AO006</FLD><FLD NAME="BPCNAM" TYPE="Char">Distribuidora do Caxito</FLD><FLD NAME="BPCSHO" TYPE="Char">CaxitoDist</FLD><FLD MENULAB="Normal" MENULOCAL="401" NAME="BPCTYP" TYPE="Integer">1</FLD><FLD NAME="POSCOD" TYPE="Char"/><FLD NAME="PTE" TYPE="Char">ANCHQ30FM</FLD></LIN><LIN NUM="7"><FLD NAME="BPCNUM" TYPE="Char">AO007</FLD><FLD NAME="BPCNAM" TYPE="Char">Brinquedos da Tita</FLD><FLD NAME="BPCSHO" TYPE="Char">BrincaTita</FLD><FLD MENULAB="Normal" MENULOCAL="401" NAME="BPCTYP" TYPE="Integer">1</FLD><FLD NAME="POSCOD" TYPE="Char"/><FLD NAME="PTE" TYPE="Char">ANTRF30</FLD></LIN><LIN NUM="8"><FLD NAME="BPCNUM" TYPE="Char">AO008</FLD><FLD NAME="BPCNAM" TYPE="Char">Angola Industrial</FLD><FLD NAME="BPCSHO" TYPE="Char">ANGINDUX</FLD><FLD MENULAB="Normal" MENULOCAL="401" NAME="BPCTYP" TYPE="Integer">1</FLD><FLD NAME="POSCOD" TYPE="Char"/><FLD NAME="PTE" TYPE="Char">ANCHQ30FM</FLD></LIN><LIN NUM="9"><FLD NAME="BPCNUM" TYPE="Char">AO021</FLD><FLD NAME="BPCNAM" TYPE="Char">Agro Alimentar do Namibe</FLD><FLD NAME="BPCSHO" TYPE="Char">Alimentar</FLD><FLD MENULAB="Normal" MENULOCAL="401" NAME="BPCTYP" TYPE="Integer">1</FLD><FLD NAME="POSCOD" TYPE="Char"/><FLD NAME="PTE" TYPE="Char">CH30NET</FLD></LIN><LIN NUM="10"><FLD NAME="BPCNUM" TYPE="Char">AU001</FLD><FLD NAME="BPCNAM" TYPE="Char">Bike World Pty Ltd</FLD><FLD NAME="BPCSHO" TYPE="Char">Bike World</FLD><FLD MENULAB="Normal" MENULOCAL="401" NAME="BPCTYP" TYPE="Integer">1</FLD><FLD NAME="POSCOD" TYPE="Char">2095</FLD><FLD NAME="PTE" TYPE="Char">CC</FLD></LIN></RESULT>';

exports.editor = {
	load: function(page, finish) {
		var $props = page.$prototype.$properties;
		$props.textrtf = {
			$title: "text-rtf",
			$type: "text/rtf",
			$maxLength: 500,
			$capabilities: "sort,filter,raw",
			$rows: 5
		};
		$props.texthtml = {
			$title: "text-html",
			$type: "text/html",
			$rows: 5
		};
		$props.textplainxml = {
			$title: "text-plainxml",
			$type: "text/plain",
			$rows: 5
		};
		$props.textplain = {
			$title: "text-plain",
			$type: "text/plain",
		};
		$props.textplainRTF = {
			$title: "text-plain",
			$type: "text/plain",
		};
		$props.textxml = {
			$title: "text-xml",
			$type: "text/xml",
			$rows: 5
		};
		syra_item.ensureMediaTypes(page.$prototype, function() {
			page.addFieldBlock(page.leftCol, "textplain", ["textplain"]);
			var box = page.addBox("textrtf", "h2");
			var slot = page.leftCol.appendChild(box.slot);
			page.addItem(page.addCol(box.body, "50%"), {
				$bind: "textrtf",
				$isEditMode: true
			});
			var right = page.addCol(box.body, "50%");
			page.addItem(right, {
				$bind: "textrtf"
			});
			page.addItem(right, {
				$bind: "textplainRTF",
				$isEditMode: true
			});
			page.addFieldBlock(page.leftCol, "texthtml", ["texthtml"]);
			page.addFieldBlock(page.leftCol, "textplainxml", ["textplainxml"]);
			var xmlBox = page.addBox("textxml", "h2");
			var xmlSlot = page.leftCol.appendChild(xmlBox.slot);
			page.addItem(page.addCol(xmlBox.body, "50%"), {
				$bind: "textxml",
				$isEditMode: false
			});

			page.refreshData = function() {
				page.applyChange({
					textplain: "Hello World!!!",
					textrtf: "{\\rtf1\\ansi{\\fonttbl{\\f0 Bitstream Charter;}} {\\f0 \\fs24 Ceci est un texte accentu\\u233 }\\par \\par {\\f0 des \\fs18 petits}{\\f0  et des \\fs32 gros}\\f0 .}",
					texthtml: "<h1>Hi</h1><p>This is very minima dfsgfdsg sdfgfdsg dfsgdfsg dfsgsdfgdfsgsdfgsdf gfdg dfsgdf gdfsgdfgf sdgdfsgfdsg fdsgfdsg dfsgfdsg sdfgsdf gfdsgsdfg sdfgdfs gfdsgsdfg fdsgfdsgfdsgfdsg esfdgsfdg fdsgsfdgfdsgdfsgdfsgdsfgdsfgdsfwgdsfgdsfgfdsgdfgheshgsfjfgdvhfdsbgfd gdfwgdsfghfxcwvh gdgxl \"hello world\" HTML document.</p>",
					textplainxml: XMLValue,
					textxml: XMLValue
				});
			};
			finish(page);
		});

	}
};