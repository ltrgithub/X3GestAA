"use strict";
var _helpers = require('@sage/syracuse-core').helpers;
exports.scenarios = require("./scenarios").scenarios;

function _fillBlock(page, opt) {
	var box = page.addBox(opt.title);
	var left = page.addCol(box.body, 6);
	var right = page.addCol(box.body, 6);
	for (var ii = 0, jj = opt.$items.length; ii < jj; ii++) {
		var $edit = _helpers.object.clone(opt.$items[ii], true);
		$edit.$isEditMode = true;
		page.addItem(left, $edit);
		page.addItem(right, opt.$items[ii]);
	}
	page.leftCol.appendChild(box.slot);

}

exports.choice = {
	load: function(page, finish) {
		var $props = page.$prototype.$properties;
		$props.xchoice = {
			$title: "default >4 combo",
			$type: "application/x-choice",
			$value: {
				$type: "application/x-string",
				$enum: [0, 1, 2, 3, 4].map(function(value) {
					return {
						$value: value,
						$title: "Value " + value
					};
				})
			}
		};

		$props.$indicator = {
			$title: "$indicator",
			$type: "application/x-choice",
			$value: {
				$type: "application/x-string",
				$enum: [{
					$value: "prod",
					$title: "Production"
				}, {
					$value: "test",
					$title: "Test"
				}, {
					$value: "other",
					$title: "Other"
				}]
			}
		};

		$props.$colorChoice = {
			$title: "color",
			$type: "application/x-choice",
			$value: {
				$type: "application/x-string",
				$enum: [{
					$value: "#007f64",
					$title: "green"
				}, {
					$value: "#9a9b9c",
					$title: "midgray"
				}, {
					$value: "#ff5800",
					$title: "orange"
				}, {
					$value: "#009fda",
					$title: "blue"
				}, {
					$value: "#6639b7",
					$title: "purple"
				}]
			}
		};

		$props.$icon = {
			$title: "$icon",
			$type: "application/x-choice",
			$value: {
				$type: "application/x-string",
				$enum: ["area", "areaspline", "column", "line", "scatter", "spline", "pie", "bar"].map(function(value) {
					return {
						$value: value,
						$title: value
					};
				})
			}
		};

		_fillBlock(page, {
			title: "simple",
			$items: [{
				$bind: "xchoice",
				$choiceLayout: "row"
			}, {
				$bind: "xchoice",
				$choiceLayout: "1"
			}, {
				$bind: "xchoice",
				$choiceLayout: "3"
			}, {
				$bind: "xchoice",
				$choiceLayout: "2"
			}, {
				$title: "radios",
				$bind: "xchoice",
				$format: "$radios"
			}]
		});

		_fillBlock(page, {
			title: "color",
			$items: [{
				$bind: "$colorChoice",
				$indicator: "$colorChoice",
				$format: "$combo"
			}]
		});

		_fillBlock(page, {
			title: "indicator",
			$items: [{
				$bind: "$indicator",
				$indicator: "endpoint",
				$format: "$combo"
			}]
		});

		_fillBlock(page, {
			title: "$icon",
			$items: [{
				$bind: "$icon",
				$format: "$combo",
				$icon: {
					$mode: "icon",
					$path: "site/s-graph-"
				}

			}]
		});

		page.refreshData = function() {
			var $properties = {};
			Object.keys(page.$prototype.$properties).forEach(function($bind) {
				$properties[$bind] = {};
				page.$prototype.$properties[$bind] = {};
			});
			page.applyChange({
				$properties: $properties,
				xchoice: 2,
				$indicator: "prod",
				$colorChoice: "#ff5800",
				$icon: "areaspline"
			});
		};
		finish(page);
	}
};