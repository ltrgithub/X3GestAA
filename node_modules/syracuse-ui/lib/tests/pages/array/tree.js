"use strict";
var _fieldTester = require("syracuse-ui/lib/tests/pages/field/fieldTester");

var _samples = {
	xsl: {
		$title: "XSL",
		data: require("./tree/xslData").data,
		definition: require("./tree/xslDefinition")
	},
	picking: {
		$title: "Picking",
		data: require("./tree/pickingData").data,
		definition: require("./tree/pickingDefinition")
	},
	single: {
		$title: "Standard",
		data: require("./tree/singleData").data,
		definition: require("./tree/singleDefinition")
	},
	recursive: {
		$title: "Recursive",
		data: require("./tree/recursiveData").data,
		definition: require("./tree/recursiveDefinition")
	},
	emptyId: {
		$title: "emptyId",
		data: require("./tree/emptyIdData").data,
		definition: require("./tree/emptyIdDefinition")
	},
	treegrid: {
		$title: "treegrid",
		data: require("./tree/treegridData").data,
		definition: require("./tree/treegridDefinition")
	}
};

exports.load = function(page) {
	page.$prototype.$localization = _samples.xsl.definition.$prototype.$localization;
	page.$prototype.$properties.$fieldRecordCount = {
		$title: "Records",
		$type: "application/x-integer"
	};
	page.$prototype.$actions = {
		$empty: {
			"$title": "Empty list",
			"$method": "PUT"
		},
		$refresh: {
			"$title": "Refresh list",
			"$method": "PUT"
		}
	};
	var binds = Object.keys(_samples);
	for (var ii = 0, jj = binds.length; ii < jj; ii++) {
		var bind = binds[ii];
		page.$prototype.$properties[bind] = _samples[bind].definition.$prototype.$properties.BA;
	}

	_fieldTester.load(page);

	page.leftCol.style.width = page.rightCol.style.width = "50%";
	var binds = Object.keys(_samples);
	for (var ii = 0, jj = binds.length; ii < jj; ii++) {
		var box = page.addBox(_samples[binds[ii]].$title, "h2");
		page.loadNewItem(box.body, _samples[binds[ii]].definition.$item);
		((ii % 2) ? page.leftCol : page.rightCol).appendChild(box.slot);
	}


	page.applyChange({
		$fieldRecordCount: 8
	});

	var data = {
		$properties: {}
	};
	var binds = Object.keys(_samples);
	for (var ii = 0, jj = binds.length; ii < jj; ii++) {
		var bind = binds[ii];
		data.$properties[bind] = {
			$isReadOnly: false,
			$isDisabled: false,
			$totalResults: _samples[bind].data[bind].length
		};
		data[bind] = _samples[bind].data[bind];
	}
	page.applyChange(data);
	page.dataset.$etag = 1;
};