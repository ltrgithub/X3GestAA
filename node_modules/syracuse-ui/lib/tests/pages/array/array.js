"use strict";
exports.scenarios = require("syracuse-ui/lib/tests/pages/array/scenarios");

exports.grid = {
	load: function(page, finish) {
		_loadPage(page, function() {
			page.addItem(page.leftCol, {
				$isEditMode: true,
				$bind: "xarray",
				$selectByRowIndex: true,
				$selectMode: "single"
			});
			page.addItem(page.leftCol, {
				$isEditMode: false,
				$bind: "xarray",
				$selectMode: "row"
			});
		}, finish);
	}
};

exports.cards = {
	load: function(page, finish) {
		_loadPage(page, function() {
			page.addItem(page.leftCol, {
				$isEditMode: true,
				$bind: "xarray",
				$format: "cards",
				$cardsByRowCount: 2
			});
			page.addItem(page.leftCol, {
				$isEditMode: false,
				$bind: "xarray",
				$format: "cards",
				$cardsByRowCount: 2
			});
		}, finish);
	}
};

exports.gridcards = {
	load: function(page, finish) {
		_loadPage(page, function() {
			var $positions = ["left", "right", "row", "top", "bottom", "popup"];
			for (var ii = 0, jj = $positions.length; ii < jj; ii++) {
				var $item = {
					$isEditMode: !(ii % 2),
					$bind: "xarray",
					$title: "$position=" + $positions[ii],
					$format: "grid"
				};
				var $cardItem = {
					$layout: {
						$items: [{
							$layoutType: "row",
							$items: [{
								$bind: "xstring"
							}, {
								$bind: "xchoice"
							}]
						}, {
							$layoutType: "row",
							$items: [{
								$bind: "xdate"
							}, {
								$layoutType: "stack",
								$items: [{
									$bind: "xboolean"
								}, {
									$bind: "xdecimal"
								}]
							}]
						}]
					}
				};
				if ($positions[ii] == "popup") {
					$item.$popupCard = $cardItem;
				} else {
					$cardItem.$position = $positions[ii];
					$item.$cardItem = $cardItem;
				}
				page.addItem(page.leftCol, $item);
			}
		}, finish);
	}
};

exports.selection = {
	load: function(page, finish) {
		_loadPage(page, function() {
			page.addItem(page.leftCol, {
				$title: "$selectMode = " + "multi",
				$format: "grid",
				$bind: "xarray",
				$selectMode: "multi"
				/*,
                 $isEditMode: true*/
			});
			["single", "button", "row"].forEach(function($selectMode) {
				page.addItem(page.leftCol, {
					$title: "$selectMode = " + $selectMode,
					$format: "grid",
					$bind: "xarray",
					$selectMode: $selectMode
				});
			});
			["multi", "single", "button", "row"].forEach(function($selectMode) {
				page.addItem(page.leftCol, {
					$title: "$selectMode = " + $selectMode,
					$format: "cards",
					$bind: "xarray",
					$selectMode: $selectMode,
					$layout: {
						$items: [{
							$category: "section",
							$layout: {
								$items: [{
									$bind: "xstring"
								}, {
									$bind: "xchoice"
								}, {
									$bind: "xdate"
								}]
							}
						}]
					}
				});
			});
			["multi", "single"].forEach(function($selectMode) {
				page.addItem(page.leftCol, {
					$title: "$selectByRowIndex $selectMode = " + $selectMode,
					$format: "grid",
					$bind: "xarray",
					$selectMode: $selectMode,
					$selectByRowIndex: true
				});
				page.addItem(page.leftCol, {
					$title: "$selectByRowIndex $useContiguousSelection $selectMode = " + $selectMode,
					$format: "grid",
					$bind: "xarray",
					$selectMode: $selectMode,
					$selectByRowIndex: true,
					$useContiguousSelection: true,
				});
			});
		}, finish);
	}
};

function _loadPage(page, endLoad, finish) {
	var $props = page.$prototype.$properties;
	$props.xarray = {
		$title: "xarray",
		$capabilities: "sort,filter,insert,append,delete,search,reorder",
		$type: "application/x-array",
		//$itemsPerPage: 5,
		$item: {
			$type: "application/json",
			$properties: {
				xstring: {
					$title: "xstring",
					$type: "application/x-string",
					$maxLength: 30,
					$capabilities: "sort,filter"
				},
				xchoice: {
					$title: "xchoice",
					$type: "application/x-choice",
					$value: {
						$type: "application/x-integer",
						$enum: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(function(value) {
							return {
								"$value": value,
								$title: "Value " + value
							};
						})
					}
				},
				xdate: {
					$title: "xdate",
					$type: "application/x-date",
					$capabilities: "sort,filter"
				},
				xboolean: {
					$title: "xboolean",
					$type: "application/x-boolean",
					$capabilities: "sort,filter"
				},
				xdecimal: {
					$title: "xdecimal",
					$type: "application/x-decimal",
					$capabilities: "sort,filter",
					$isNullable: true
				},
				xreference: {
					$title: "xreference",
					$capabilities: "sort,filter",
					$type: "application/x-reference",
					"$item": {
						$value: "{code}",
						$key: "{$uuid}",
						"$properties": {
							"code": {
								$type: "application/x-string"
							},
							"description": {
								$type: "application/x-string"
							}
						},
						$links: {
							"$details": {
								$type: "application/json;vnd.sage=syracuse",
								"$url": "/sdata/syracuse/collaboration/syracuse/users('{$uuid}')?representation=country.$details&role={$role}"
							},
							"$lookup": {
								$type: "application/json;vnd.sage=syracuse",
								"$url": "/sdata/syracuse/collaboration/syracuse/users?representation=country.$lookup&role={$role}&trackingId={$trackingId}&binding=country"
							}
						}
					}
				}
			}
		}
	};

	page.refreshData = function() {
		var records = [];
		for (var ii = 1; ii <= 5; ii++) {
			records.push({
				$uuid: "record" + ii,
				$etag: 1,
				$properties: {},
				//$index: ii-1,
				xstring: "record " + ii,
				xchoice: ii,
				xdate: "2011-0" + Math.max(Math.min(1, ii), 9) + "-07",
				xboolean: true,
				xdecimal: 45454.0 * ii,
				xreference: {
					$uuid: "4e54a41e-5c7d-4926-ad57-6a5f882c24c4",
					$key: "4e54a41e-5c7d-4926-ad57-6a5f882c24c4",
					code: "AD",
					description: "Andorradfd fsdqfsqdfsdq sdqf sdqfsdqf sdqqfsdq fsdqf sdqf sdfsdqf sdf sqdfsd qfsdq fsdqf sdqfsd qfsdq fsqd fs q fqsf",
					$title: "title"
				}
			});
		}
		delete(this.dataset.$properties = this.dataset.$properties || {}).xarray;
		delete this.dataset.xarray;
		this.applyChange({
			$properties: {
				xarray: {}
			},
			xarray: records
		});
	};
	syra_item.ensureMediaTypes(page.$prototype, function() {
		endLoad(page);
		finish(page);
	});
};