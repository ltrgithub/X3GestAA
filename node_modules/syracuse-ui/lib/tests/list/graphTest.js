"use strict";
var helpers = require("syracuse-core/lib/helpers")
var Article = require("syracuse-ui/lib/article/article").Article;
var resources = require("../resources");
var ListAuthoring = require("syracuse-ui/lib/field/array/authoring/listAuthoring").ListAuthoring;
var FieldsTest = require("../fieldsTest").FieldsTest;
function GraphTest(){
}

exports.GraphTest = helpers.defineClass(GraphTest, Article, {
    applyFieldMetaData: function(binding, value, $field){
        FieldsTest.prototype.applyFieldMetaData.call(this, binding, value, $field);
    },
    notifyField: function($bind, value){
        var field = this.boundFields[$bind][0];
        field.setDataBind(value);
        document.fieldController.notifyChange(field, value, true);
    },
    
    loadBox: function(){
        var self = this;
        self.$layoutOptions = document.site.$item.$layoutOptions.page["vignette"];
        self.$prototype = {
            $properties: {
                $fieldServerData: {
                    "$title": "Server",
                    "$type": "application/x-string"
                },
                $field$dataset: {
                    "$title": "dataset",
                    "$type": "application/x-string"
                },
                $field$LinksType: {
                    $title: "$type",
                    $isMetaData: true,
                    $type: "application/x-choice",
                    $value: {
                        $type: "application/x-string",
                        
                        $enum: [{
                            $value: "$empty",
                            $title: "$links = null"
                        }, {
                            $value: "$lazyload",
                            $title: "$lazyload (transition)"
                        }, {
                            $value: "$links",
                            $title: "$links"
                        }, {
                            $value: "$actions",
                            $title: "$actions"
                        }, {
                            $value: "$linksParameters",
                            $title: "$links with Parameters"
                        }, {
                            $value: "$actionsParameters",
                            $title: "$actions with Parameters"
                        }]
                    }
                },
                "xarray": {
                    "$type": "application/x-array",
                    "$axes": [{
                        "$title": "Articles vendus",
                        "$hierarchies": [["article_h"]]
                    }, {
                        "$title": "measures",
                        "$hierarchies": [["$measures"]]
                    }],
                    "$cube": {
                        "$mode": "table",
                        "$style": "xy",
                        "$displaysOneMeasure": false,
                        "$title": "Coûts articles",
                        "$hierarchies": {
                            "article_h": {
                                "$title": "Articles",
                                "$properties": ["ARTICLE"],
                                "$members": [],
                                "$isDefault": true
                            }
                        },
                        "$measures": {
                            "matiere_premiere": {
                                "$property": "matiere_premiere",
                                "$title": "Matière premiere",
                                "$mode": "sum",
                                "$style": "line",
                                "$isStacked": false,
                                "$isNormalized": false,
                                "$isDefault": true
                            },
                            "main_oeuvre": {
                                "$property": "main_oeuvre",
                                "$title": "Main d'oeuvre",
                                "$mode": "sum",
                                "$style": "stick",
                                "$isStacked": false,
                                "$isNormalized": false
                            },
                            "cout_machine": {
                                "$property": "cout_machine",
                                "$title": "Cout machine",
                                "$mode": "sum",
                                "$style": "spline",
                                "$isStacked": false,
                                "$isNormalized": false
                            }
                        }
                    },
                    "$item": {
                        "$properties": {
                            "ARTICLE": {
                                "$title": "Intitulé article",
                                "$type": "application/x-string"
                            },
                            "code": {
                                "$title": "Code article",
                                "$type": "application/x-string"
                            },
                            "matiere_premiere": {
                                "$title": "Matiere première",
                                "$type": "application/x-decimal"
                            },
                            "main_oeuvre": {
                                "$title": "Main d'oeuvre",
                                "$type": "application/x-decimal"
                            },
                            "cout_machine": {
                                "$title": "Coût machine",
                                "$type": "application/x-decimal"
                            }
                        },
                        "$links": {
                            "$details": {
                                "$title": "Details",
                                "$url": "{$baseUrl}/article('{$key}')",
                                "$type": "{$baseType}.article.$details"
                            },
                            "$edit": {
                                "$title": "Edit",
                                "$url": "{$url}/$workingCopies",
                                "$type": "{$baseType}.article.$edit",
                                "$method": "POST"
                            },
                            "$delete": {
                                "$title": "Delete",
                                "$url": "{$url}",
                                "$type": null,
                                "$method": "DELETE"
                            }
                        }
                    }
                }
            }
        };
        
        self.$item = {
            $isSeparatorsVisible: true,
            $layout: {
                $layoutType: "columns",
                $layoutSubType: "70,30",
                $items: [{
                    $layoutType: "stack",
                    $items: [{
                        $category: "section",
                        $title: "Fields ($isEditMode: true / $isEditMode: false)",
                        $layout: {
                            $items: [{
                                $category: "block",
                                $title: "xarray",
                                $isSeparatorsVisible: true,
                                $layout: {
                                    $items: [{
                                        $bind: "xarray",
                                        $chartType: "highCharts",
                                        $choiceType: "area"
                                    }, {
                                        $bind: "xarray",
                                        $chartType: "highCharts",
                                        $choiceType: "areaspline"
                                    }, {
                                        $bind: "xarray",
                                        $chartType: "highCharts",
                                        $choiceType: "bar"
                                    }, {
                                        $bind: "xarray",
                                        $chartType: "highCharts",
                                        $choiceType: "column"
                                    }, {
                                        $bind: "xarray",
                                        $chartType: "highCharts",
                                        $choiceType: "line"
                                    }, {
                                        $bind: "xarray",
                                        $chartType: "highCharts",
                                        $choiceType: "pie"
                                    }, {
                                        $bind: "xarray",
                                        $chartType: "highCharts",
                                        $choiceType: "scatter"
                                    }, {
                                        $bind: "xarray",
                                        $chartType: "highCharts",
                                        $choiceType: "spline"
                                    }]
                                }
                            }]
                        }
                    }]
                }, {
                    $layoutType: "stack",
                    $items: [{
                        $category: "block",
                        $title: "Authoring",
                        $id: "authoringTest",
                        $css: "s-authoring-list-test",
                        $layout: {
                            $items: []
                        }
                    }, {
                        $category: "block",
                        $title: "Links",
                        $layout: {
                            $items: [{
                                $bind: "$field$LinksType",
                                $isEditMode: true
                            }, {
                                $bind: "$field$dataset",
                                $isEditMode: true,
                                $rows: 10
                            }]
                        }
                    }]
                }]
            }
        };
        Article.prototype.loadBox.call(self, {
            "xarray": resources.getCube()
        });
        self.designedField = self.boundFields["xarray"][0];
        return;
        (self.authoring = new ListAuthoring()).loadBox(self);
        self.authoring.designedTestFields = self.boundFields["xarray"];
        self.idMap.authoringTest.$$body.empty().append(self.authoring.layoutContent.$$container);
        self.authoring.bindFieldEvents(self.authoring.layoutContent.$$container);
    },
    onNotifyRecordChange: function(value, binding){
        var self = this;
        switch (binding) {
            case "$field$LinksType":
                var metaData = self.getResources().getActionLinks(value);
                if (value == "$lazyload") {
                    self.onNotifyRecordChange("$empty", binding);
                }
                self.boundFields.$field$dataset[0].setDataValue(JSON.stringify(metaData));
                Object.keys(self.boundFields).forEach(function(bind){
                    if (bind.indexOf("$field") != 0) {
                        self.boundFields[bind].forEach(function(field){
                            field.applyChange({
                                $links: metaData.$links,
                                $actions: metaData.$actions
                            });
                            field._store._records.forEach(function(record){
                                var recordMetaData = {
                                    $links: metaData.$links,
                                    $actions: metaData.$actions
                                };
                                record.applyChange(recordMetaData);
                                Object.keys(record.boundFields).forEach(function($bind){
                                    record.boundFields[$bind].forEach(function(recordField){
                                        recordField.applyMetaData(metaData);
                                    });
                                });
                            });
                        });
                    }
                });
                break;
            case "$field$LinksType":
                var metaData = self.getResources().getActionLinks(value);
                if (value == "$lazyload") {
                    self.onNotifyRecordChange("$empty", binding);
                }
                self.boundFields.$field$dataset[0].setDataValue(JSON.stringify(metaData));
                Object.keys(self.boundFields).forEach(function(bind){
                    if (bind.indexOf("$field") != 0) {
                        self.boundFields[bind].forEach(function(field){
                            field.applyMetaData(metaData);
                        });
                    }
                });
                break;
                
            default:
                if (binding.indexOf("$field") == 0) {
                
                    self.applyFieldMetaData(binding, value);
                    
                }
                break;
        }
        return null; //cancel notify
    }
});

var toto = {
    "$baseUrl": "/sdata/x3stb/erp/stubs",
    "$baseType": "application/json; vnd.sage.syracuse.representation=x3.erp.demo",
    "$url": "{$baseUrl}/conssta?&codeStat={$codeStat}&dateStart={$dateStart}&dateEnd={$dateEnd}&keyValue1={$keyValue1}&keyValue2={$keyValue2}&keyValue3={$keyValue3}",
    "$title": "Test HighCharts",
    "$type": "{$baseType}.statistics",
    "$methods": "GET",
    "$properties": {
        "$resources": {}
    },
    "$article": {
        "$layout": {
            "$items": [{
                "$bind": "$resources",
                "$chartType": "highCharts"
            }]
        }
    }
};
