"use strict";
var helpers = require("syracuse-core/lib/helpers")
var FieldsTest = require("./fieldsTest").FieldsTest;

function SimpleFieldsTest(){
}

exports.SimpleFieldsTest = helpers.defineClass(SimpleFieldsTest, FieldsTest, {
    fillXchoice: function(max){
        var enums = [];
        for (var ii = 0; ii < max; ii++) {
            enums.push({
                "$value": ii,
                $title: "Value " + ii
            
            });
        }
        return enums;
    },
    _initiliazeTestPage: function(){
        FieldsTest.prototype._initiliazeTestPage.call(this);
        this.ensureDeltaManager().applyObjectDelta(this.$prototype.$properties, {
            "xstring": {
                $title: "xstring",
                $type: "application/x-string",
                
                $maxLength: 30,
                $capabilities: "sort,filter,alphaTab",
                $links: {
                    $tunnel: {},
                    $lookup: {}
                }
            },
            "xchoice": {
                $title: "xchoice",
                $type: "application/x-choice",
                $value: {
                    $type: "application/x-integer",
                    $enum: this.fillXchoice(200)
                
                },
                $links: {
                    $tunnel: {},
                    $lookup: {}
                }
            },
            "xdate": {
                $title: "xdate",
                $type: "application/x-date",
                $links: {
                    $tunnel: {},
                    $lookup: {}
                }
            },
            "xtime": {
                $title: "xtime",
                $type: "application/x-time"
            },
            "xdatetime": {
                $title: "xdatetime",
                $type: "application/x-datetime"
            },
            "xboolean": {
                $title: "xboolean",
                $type: "application/x-boolean"
            },
            "$email": {
                $title: "$format: $email",
                $type: "application/x-string",
                $format: "$email"
            
            },
            "$phone": {
                $title: "$format: $phone",
                $type: "application/x-string",
                $format: "$phone"
            },
            "xinteger": {
                $title: "xinteger",
                $type: "application/x-integer",
                
                "$isNullable": true,
                "$capabilities": "sort,filter",
                $links: {
                    $tunnel: {}
                }
            },
            "xdecimal": {
                $title: "xdecimal",
                $type: "application/x-decimal",
                
                "$isNullable": true
            },
            "xreference": {
                $pluralType: "employees",
                $baseUrl: "http://localhost:8126/sdata/sprint1/settings/sprint1",
                $representation: "employee",
                $title: "xreference",
                $isMandatory: false,
                $capabilities: "sort,filter",
                $type: "application/x-reference",
                $url: "{$baseUrl}/{$pluralType}('{$key}')?representation={$representation}.$thumb",
                "$item": {
                    $value: "{code}",
                    $key: "{$uuid}",
                    "$properties": {
                        "code": {
                            "$type": "application/x-string"
                        },
                        "description": {
                            "$type": "application/x-string"
                        }
                    },
                    $links: {
                        "$details": {
                            "$type": "application/json;vnd.sage=syracuse",
                            "$url": "/sdata/sprint1/settings/sprint1/countries('{$uuid}')?representation=country.$details&role={$role}"
                        },
                        "$lookup": {
                            "$type": "application/json;vnd.sage=syracuse",
                            "$url": "/sdata/sprint1/settings/sprint1/countries?representation=country.$lookup&role={$role}&trackingId={$trackingId}&binding=country"
                        },
                        "$details1": {
                            "$type": "application/json;vnd.sage=syracuse",
                            "$title": "test link1",
                            "$url": "/sdata/sprint1/settings/sprint1/countries('{$uuid}')?representation=country.$details&role={$role}"
                        },
                        "$details2": {
                            "$type": "application/json;vnd.sage=syracuse",
                            "$title": "test link2",
                            "$url": "/sdata/sprint1/settings/sprint1/countries('{$uuid}')?representation=country.$details&role={$role}"
                        },
                    }
                }
            },
            "image": {
                $title: "image",
                $type: "image",
                $isReadOnly: true,
                $isDisabled: true
            }
        }, true);
    },
    loadBox: function(){
        FieldsTest.prototype.loadBox.call(this, {
            "xstring": "ceci est du texte",
            "$phone": "01.41.66.21.21",
            "$email": "toto@sage.com",
            "xinteger": 200,
            "xdecimal": 2987111111111.4548,
            "xboolean": true,
            "xdate": "2011-06-07",
            "xtime": "12:00:00",
            "xdatetime": "2012-03-16T12:40:50.957Z",
            "xchoice": 2,
            "xreference": {
                "$uuid": "4e54a41e-5c7d-4926-ad57-6a5f882c24c4",
                "$key": "4e54a41e-5c7d-4926-ad57-6a5f882c24c4",
                "$etag": 1,
                "$properties": {},
                "code": "AD",
                "description": "Andorra"
            }
        });
    },
    _makeBlock: function($isEditMode){
        return [this._makeEditReadBlock("xstring", [{
            $bind: "xstring"
        }, {
            $bind: "$phone"
        }, {
            $bind: "$email"
        }]), this._makeEditReadBlock("xboolean", [{
            $bind: "xdate"
        }, {
            $bind: "xtime"
        }, {
            $bind: "xdatetime"
        }]), this._makeEditReadBlock("Numeric", [{
            $bind: "xinteger"
        }, {
            $bind: "xdecimal"
        }]), this._makeEditReadBlock("xboolean", [{
            $bind: "xboolean"
        }]), this._makeEditReadBlock("xchoice", [{
            $title: "default >4 combo",
            $bind: "xchoice"
        }, {
            $title: "$format:$combo",
            $bind: "xchoice",
            $format: "$combo"
        }, {
            $title: "$format:$radios",
            $bind: "xchoice",
            $format: "$radios"
        }]), this._makeEditReadBlock("xreference", [{
            $title: "xreference",
            $bind: "xreference"
        }]), this._makeEditReadBlock("image", [{
            $title: "image",
            $bind: "image"
        }])];
    }
});
