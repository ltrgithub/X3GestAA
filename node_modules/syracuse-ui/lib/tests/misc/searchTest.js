"use strict";
var helpers = require("syracuse-core/lib/helpers");
var TestPage = require("syracuse-ui/lib/tests/testPage").TestPage;
var searchController = require('syracuse-ui/lib/search/searchController');
var resourcesData = require('syracuse-ui/lib/tests/datasamples/searchResourcesData');
var resourcesFunctions = require('syracuse-ui/lib/tests/datasamples/searchResourcesFunctions');

function SearchTest() {}

exports.SearchTest = helpers.defineClass(SearchTest, TestPage, {
	_initiliazeTestPage: function() {
		this.$prototype.$properties = searchController.getProperties();
		this.$facet = "$search";
		this.$item.$title = "Search test page (samples with $search='admin' on SUPERV)";
		this.$item.$layout = searchController.getArticle().$layout;
	},
	loadBox: function() {
		TestPage.prototype.loadBox.call(this);
		this.fillPage();
	},
	fillPage: function() {
		var data;

		// functions tab
		data = resourcesFunctions.getData();
		data.$itemsPerPage = 15;
		data.$queryFunctions = data.$resources;
		data.$searchFacets = null; // no search facet for search test
		delete data.$resources;
		this._updateTabTitle(false, data.$totalResults);
		this.applyChange(data);

		// data tab
		data = resourcesData.getData();
		data.$itemsPerPage = 15;
		data.$queryData = data.$resources;
		data.$searchFacets = null; // no search facet for search test
		delete data.$resources;
		this._updateTabTitle(true, data.$totalResults);
		this.applyChange(data);
	},
	_updateTabTitle: function(isData, recordsNb) {
		this.idMap[isData ? "searchDataTab" : "searchFunctionsTab"].setTitle((isData ? syra_local.searchDataTab : syra_local.searchFunctionsTab) + " (" + recordsNb + ")");
	}
});