"use strict";
var helpers = require("syracuse-core/lib/helpers");
var TestPage = require("syracuse-ui/lib/tests/testPage").TestPage;
var JobsViewer = require('syracuse-ui/lib/jobs/jobsViewer').JobsViewer;
var date = require('syracuse-core/lib/types/date');
var time = require('syracuse-core/lib/types/time');

function JobsTest() {}

exports.JobsTest = helpers.defineClass(JobsTest, TestPage, {
	_initiliazeTestPage: function() {
		var self = this;
		self.jobsTypes = {
			printJob: {
				$title: "print job request test",
				$links: {
					$link1: {
						$title: "print job request test"
					}
				}
			},
			operationJob: {
				$title: "operation job request test",
				$links: {
					$link1: {
						$title: "operation job request test"
					}
				}
			}
		};

		Object.keys(self.jobsTypes).forEach(function($type) {
			self.$prototype.$links[$type] = {
				$title: self.jobsTypes[$type].$links.$link1.$title
			};
		});

		var cases = ["printJob", "operationJob"];

		self.$item.$layout = {
			$items: cases.map(function($type) {
				return {
					$category: "section",
					$clientId: "jobSection-" + $type,
					$title: self.jobsTypes[$type].$title,
					$layout: {
						$items: [{
							$category: "link",
							$bind: $type
						}]
					}
				};
			})
		};
	},

	onMenuClick: function(menu) {
		var isPropertyHidden = {
			$isHidden: false
		};
		//TODO : to adapt to convergence jobs report protocol
		if (menu.$bind == 'printJob' || menu.$bind == 'operationJob') {
			var jobsViewer = document.site.jobsViewer = new JobsViewer();
			jobsViewer.loadBox();
			//====== for tests scenario
			jobsViewer.updateJobsTypesList("print", true);
			jobsViewer.updateJobsTypesList("print", true);
			jobsViewer.updateJobsTypesList("operation", true);
			jobsViewer._updateJobsViewCount('add');
			jobsViewer._updateJobsViewCount('add');
			jobsViewer._updateJobsViewCount('add');
			jobsViewer.jobs = {};

			var jobDiag = [];
			for (var ii = 0; ii < 5; ii++) {
				jobDiag.push({
					$uuid: "jobDiagnoseTest" + ii,
					$index: ii,
					diagMsg: "number " + ii,
					$properties: {
						diagMsg: {
							$valueStyle: "cst_sty_jverror"
						},
						diagStack: {
							$valueStyle: "cst_sty_jvwhitespace"
						}
					}
				});
			}


			// time sample value
			var startTime = time.now().toString();
			var startDate = date.today().toString();

			//=======
			var newData = {
				$jobType: 3,
				$jobDetails: [{
					$uuid: "record0",
					jobTitle: "Pays",
					jobType: "print",
					phase: "Job started",
					phaseDetail: "printing",
					progress: 25.50,
					elapsedSeconds: 10,
					remainingSeconds: 50,
					percentage: 1,
					jobDiagnoses: jobDiag,
					startTime: startTime,
					startDate: startDate,
					$properties: {
						jobTitle: isPropertyHidden,
						phase: isPropertyHidden,
						phaseDetail: isPropertyHidden,
						progress: isPropertyHidden,
						elapsedSeconds: isPropertyHidden,
						remainingSeconds: isPropertyHidden,
						jobDiagnoses: {
							$itemsPerPage: 55
						}
					},
					$links: {
						$jobPrintIcon: {
							$isHidden: false
						},
						$progressOff: {
							$isHidden: false
						},
						$download: {
							$title: "Download"
						}
					}
				}, {
					$uuid: "record1",
					jobTitle: "Compagnies",
					jobType: "print",
					phase: "Job started",
					phaseDetail: "printing",
					progress: 50,
					elapsedSeconds: 10,
					remainingSeconds: 10,
					percentage: 1,
					startTime: startTime,
					startDate: startDate,
					jobDiagnoses: [{
						$uuid: "jobDiagnose2",
						$index: 0,
						diagMsg: "This is a test diagnose : error",
						diagStack: [{
							$index: 0,
							stackTrace: "TypeError: Object 1115 has no method 'replace' at C:\Syracuse\Syracuse\node_modules\syracuse-collaboration\lib\entities\page\pageData._js:18:39 at Array.forEach (native) at change (C:\Syracuse\Syracuse\node_modules\syracuse-collaboration\lib\entities\page\pageData._js:16:20) at C:\Syracuse\Syracuse\node_modules\syracuse-collaboration\lib\entities\page\pageData._js:20:41 at Array.forEach (native) at change (C:\Syracuse\Syracuse\node_modules\syracuse-collaboration\lib\entities\page\pageData._js:16:20) at C:\Syracuse\Syracuse\node_modules\syracuse-collaboration\lib\entities\page\pageData._js:20:41 at Array.forEach (native) at change (C:\Syracuse\Syracuse\node_modules\syracuse-collaboration\lib\entities\page\pageData._js:16:20) at C:\Syracuse\Syracuse\node_modules\syracuse-collaboration\lib\entities\page\pageData._js:20:41 at Array.forEach (native) at change (C:\Syracuse\Syracuse\node_modules\syracuse-collaboration\lib\entities\page\pageData._js:16:20) at C:\Syracuse\Syracuse\node_modules\syracuse-collaboration\lib\entities\page\pageData._js:20:41 at Array.forEach (native) at change (C:\Syracuse\Syracuse\node_modules\syracuse-collaboration\lib\entities\page\pageData._js:16:20) at C:\Syracuse\Syracuse\node_modules\syracuse-collaboration\lib\entities\page\pageData._js:20:41 at Array.forEach (native) at change (C:\Syracuse\Syracuse\node_modules\syracuse-collaboration\lib\entities\page\pageData._js:16:20) at C:\Syracuse\Syracuse\node_modules\syracuse-collaboration\lib\entities\page\pageData._js:20:41 at Array.forEach (native) "
						}],
						$properties: {
							diagMsg: {
								$valueStyle: "cst_sty_jverror"
							},
							diagStack: {
								$valueStyle: "cst_sty_jvwhitespace"
							}
						}
					}, {
						$uuid: "jobDiagnose2Diagnose2",
						$index: 1,
						diagMsg: "This is a test diagnose : warning",
						$properties: {
							diagMsg: {
								$valueStyle: "cst_sty_jvwarning"
							},
							diagStack: {
								$valueStyle: "cst_sty_jvwhitespace"
							}
						}
					}],
					$properties: {
						jobTitle: isPropertyHidden,
						phase: isPropertyHidden,
						phaseDetail: isPropertyHidden,
						progress: isPropertyHidden,
						elapsedSeconds: isPropertyHidden,
						remainingSeconds: isPropertyHidden
					},
					$links: {
						$jobPrintIcon: {
							$isHidden: false
						},
						$progressOff: {
							$isHidden: false
						},
						$cancel: {
							$title: "Cancel"
						}
					}
				}, {
					$uuid: "record2",
					jobTitle: "Index update",
					jobType: "operation",
					phase: "Job started",
					phaseDetail: "updating index",
					progress: 25.50,
					elapsedSeconds: 10,
					remainingSeconds: 50,
					progressIcon: "progress icon",
					percentage: 1,
					startTime: startTime,
					startDate: startDate,
					$properties: {
						jobTitle: isPropertyHidden,
						phase: isPropertyHidden,
						phaseDetail: isPropertyHidden,
						progress: isPropertyHidden,
						elapsedSeconds: isPropertyHidden,
						remainingSeconds: isPropertyHidden
					},
					$links: {
						$jobOperationIcon: {
							$isHidden: false
						},
						$progressOn: {
							$isHidden: false
						},
						$abort: {
							$title: "Abort"
						}
					}
				}],
				$properties: {
					$jobType: {
						$value: {
							$enum: jobsViewer.getJobsTypesEnum()
						}
					}
				}
			};
			jobsViewer.applyChange(newData);
			return false;
		}

		return true;
	},
	_getJobParams: function(jobType) {
		if (jobType == 'print') {
			var $uuid = helpers.uuid.generate();
			return {
				$diagnoses: [{
					severity: "info",
					message: "Request considered"
				}],
				$location: "/print/{$host}/{$service}('{$uuid}')",
				facet: "$viewer",
				kind: "Print",
				kindLabel: "Impression",
				mime: "application/pdf",
				services: {
					cancel: {
						$host: "sodbo02.sagefr.adinternal.com:1890",
						$service: "$cancel",
						$uuid: 87
					},
					getState: {
						$host: "sodbo02.sagefr.adinternal.com:1890",
						$service: "$getState",
						$uuid: $uuid
					}
				},
				title: "Pays",
				uuid: $uuid
			};
		}
	}

});