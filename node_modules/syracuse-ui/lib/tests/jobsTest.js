"use strict";
var helpers = require("syracuse-core/lib/helpers")
var TestPage = require("syracuse-ui/lib/tests/testPage").TestPage;
var jobsUtils = require("syracuse-ui/lib/jobs/jobsUtils");
var Job = require('syracuse-ui/lib/jobs/jobsHandler').JobsHandler;
var JobsViewer = require('syracuse-ui/lib/jobs/jobsViewer').JobsViewer;

function JobsTest(){
}

exports.JobsTest = helpers.defineClass(JobsTest, TestPage, {
    _initiliazeTestPage: function(){
        var self = this;
        self.jobsTypes = {
            printJob: {
                $title: "print job request test",
                $links: {
                    $link1: {
                        $title: "print job request test"
                    }
                }
            },
            operationJob: {
                $title: "operation job request test",
                $links: {
                    $link1: {
                        $title: "operation job request test"
                    }
                }
            }
        };
        
        Object.keys(self.jobsTypes).forEach(function($type){
            self.$prototype.$links[$type] = {
                $title: self.jobsTypes[$type].$links.$link1.$title
            }
        });
        
        var cases = ["printJob", "operationJob"];
        
        
        self.$item.$layout = {
            $items: cases.map(function($type){
                return {
                    $category: "section",
                    $id: "jobSection-" + $type,
                    $title: self.jobsTypes[$type].$title,
                    $layout: {
                        $items: [{
                            $category: "link",
                            $bind: $type
                        }]
                    }
                };
            })
        };
    },
    
    onMenuClick: function(menu){
        //TODO : to adapt to convergence jobs report protocol
        if (menu.$bind == 'printJob' || menu.$bind == 'operationJob') {
            var jobsViewer = new JobsViewer();
            jobsViewer.loadBox();
            var newData = {
                $jobType: 1,
                $jobDetails: [{
                    $uuid: "record1",
                    jobTitle: "Index update",
                    jobTypeIcon: "operation",
                    phase: "Job started",
                    phaseDetail: "updating index",
                    progress: 25.50,
                    elapsedSeconds: 10,
                    remainingSeconds: 50,
                    progressIcon: "progress icon",
                    diagnoseError: "diagnose error",
                    $properties: {
                        diagnoseError: {
                            $isHidden: false
                        }
                    },
                    $links: {
                        $jobPrintIcon: {
                            $isHidden: false
                        },
                        $abort: {
                            $title: "abort"
                        }
                    }
                }, {
                    $uuid: "record2",
                    jobTitle: "Index update",
                    phase: "Job started",
                    phaseDetail: "updating index",
                    progress: 25.50,
                    elapsedSeconds: 10,
                    remainingSeconds: 50,
                    progressIcon: "progress icon",
                    $links: {
                        $jobOperationIcon: {
                            $isHidden: false
                        }
                    }
                }]
            };
            jobsViewer.applyChange(newData);
            return false;
        }
        
        return true;
        
        /*
         
         newData.$jobDetails = [{
         jobTitle: "Index update",
         jobTypeIcon: "operation",
         phase: "Job started",
         phaseDetail: "updating index",
         progress: 25.50,
         elapsedSeconds: 10,
         remainingSeconds: 50,
         progressIcon: "progress icon",
         diagnoses: "diagnose information"
         }];
         */
        /*
         var self = this;
         var job = new Job();
         try {
         if (menu.$bind == 'printJob'){
         var jobParams = self._getJobParams('print');
         job.register(jobParams, "started", 'getState', "cancel");
         }
         
         }
         catch (err) {
         console.log(err.message);
         }*/
        /*
         var job = new Job();
         var params = {}
         switch (menu.$bind) {
         case "simpleJob":
         params.$url = "http://localhost:8126/sdata/sprint1/settings/sprint1/employees?representation=employee.$query&trackngId=1";
         break;
         case "printJob":
         //$url = "http://localhost:8126/print/ecvmdev2003x64:1890/$getState('uuid')";
         params.$url = "http://localhost:8126/print/ecvmdev2003x64:1890/$getState('24a5d3f6-d470-4670-8a2c-e4062a2afeef')";
         params.jobType = "print";
         break;
         }
         //jobsUtils.startService($url);
         //job.startService(params);
         */
    },
    _getJobParams: function(jobType){
        if (jobType == 'print') {
            var $uuid = helpers.uuid.generate();
            return {
                $diagnoses: [{
                    severity: "info",
                    message: "Request considered"
                }],
                $location: "/print/{$host}/{$service}('{$uuid}')",
                facet: "$viewer",
                kind: "Print",
                kindLabel: "Impression",
                mime: "application/pdf",
                services: {
                    cancel: {
                        $host: "sodbo02.sagefr.adinternal.com:1890",
                        $service: "$cancel",
                        $uuid: 87
                    },
                    getState: {
                        $host: "sodbo02.sagefr.adinternal.com:1890",
                        $service: "$getState",
                        $uuid: $uuid
                    }
                },
                title: "Pays",
                uuid: $uuid
            };
        }
    }
    
});
