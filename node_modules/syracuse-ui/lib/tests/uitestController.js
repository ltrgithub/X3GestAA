"use strict";
var helpers = require('syracuse-core/lib/helpers');
var LazyWidget = require('syracuse-ui/lib/site/lazy/lazyWidget').LazyWidget;

var _pages = {
    layout: {
        $title: "Layout Test",
        $path: "syracuse-ui/lib/tests/layoutTest",
        $class: "LayoutTest"
    },
    messagebox: {
        $title: "Message box Test",
        $path: "syracuse-ui/lib/tests/messageBoxTest",
        $class: "MessageBoxTest"
    },
    diagnoses: {
        $title: "Diagnoses Test",
        $path: "syracuse-ui/lib/tests/diagnosesTest",
        $class: "DiagnosesTest"
    },
    menus: {
        $title: "Menus Test",
        $path: "syracuse-ui/lib/tests/menusTest",
        $class: "MenusTest"
    },
    json: {
        $title: "Json Test",
        $path: "syracuse-ui/lib/tests/jsonPageViewer",
        $class: "JsonPageViewer"
    },
    macro: {
        $title: "Macros Test",
        $path: "syracuse-ui/lib/tests/macroTest",
        $class: "MacroTest"
    },
    boost: {
        $title: "Boost Test",
        $path: "syracuse-ui/lib/tests/boost/boostProcessTest",
        $class: "ProcessTest"
    },
    fields: {
        $title: "Fields Test",
        $path: "syracuse-ui/lib/tests/simpleFieldsTest",
        $class: "SimpleFieldsTest"
    
    },
    editorField: {
        $title: "Editor Field Test",
        $path: "syracuse-ui/lib/tests/editorFieldTest",
        $class: "EditorFieldTest"
    },
    childField: {
        $title: "Child Object Fields",
        $path: "syracuse-ui/lib/tests/childFieldTest",
        $class: "ChildFieldTest"
    },
    iconFields: {
        $title: "Icon Fields Test",
        $path: "syracuse-ui/lib/tests/iconFieldsTest",
        $class: "IconFieldsTest"
    },
    single: {
        $title: "Array Single Test",
        $path: "syracuse-ui/lib/tests/list/singleListTest",
        $class: "SingleListTest"
    },
    array: {
        $title: "Array Test",
        $path: "syracuse-ui/lib/tests/list/arrayFieldTest",
        $class: "ArrayFieldTest"
    },
    graph: {
        $title: "Array Graph Test",
        $path: "syracuse-ui/lib/tests/list/graphTest",
        $class: "GraphTest"
    }
};

exports.isUiTestUrl = function($url){
    return $url && ($url.indexOf("s-uitest-") >= 0);
};

exports.openPage = function(httpQuery){
    var key = httpQuery.$urlParts.representationRoot.replace("s-uitest-", "");
    var $testPage = _pages[key];
    var $links = {};
    Object.keys(_pages).forEach(function(key){
        $links["testlink-" + key] = {
            $title: _pages[key].$title,
            $url: "?representation=s-uitest-" + key + ".$test"
        }
    });
    $links.testx3LinkAQFB = {
        $title: "X3 link --> AQFB : Test Tableaux",
        $url: "/trans/x3/erp/superv/$sessions?f=AQFB"
    };
    $links.JsonLint = {
        "$title": "JsonLint",
        "$url": "http://jsonlint.com/"
    };
    $links.jsonformatter = {
        "$title": "Jsonformatter Curiousconcept",
        "$url": "http://jsonformatter.curiousconcept.com/"
    };
    require.async($testPage.$path, function(err, module){
        try {
            var $itemPage = {
                $$container: $("<div/>"),
                $category: "page",
                $isSearchFacetEnabled: false,
                $urlParts: httpQuery.$urlParts,
                $pageCategoryClass: module[$testPage.$class],
                $representation: {
                    $prototype: {
                        $title: $testPage.$title,
                        $links: $links
                    },
					$article :{
						
					}
                }
            };
            $itemPage.httpQuery = httpQuery;
            $itemPage.httpQuery.fullUrl = document.location.href;
            document.site.onMainPageChange($itemPage);
        } 
        catch (error) {
            console.error(error.message)
        }
    });
};
