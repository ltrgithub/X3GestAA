"use strict";
var helpers = require('syracuse-core/lib/helpers');
var LazyWidget = require('syracuse-ui/lib/site/lazy/lazyWidget').LazyWidget;

var _pages = {
	layout: {
		$title: "Layout Test",
		$path: "syracuse-ui/lib/tests/layoutTest",
		$class: "LayoutTest"
	},
	convergenceCleaner: {
		$title: "Convergence Cleaner Test",
		$path: "syracuse-ui/lib/tests/convergence/convergenceCleanerTest",
		$class: "ConvergenceCleanerTest"
	},
	messagebox: {
		$title: "Message box Test",
		$path: "syracuse-ui/lib/tests/messagebox/messageBoxTest",
		$class: "MessageBoxTestInline"
	},
	messageBoxPopup: {
		$title: "Message box Popup",
		$path: "syracuse-ui/lib/tests/messagebox/messageBoxTest",
		$class: "MessageBoxTestPopup"
	},
	diagnoses: {
		$title: "Diagnoses Test",
		$path: "syracuse-ui/lib/tests/messagebox/diagnosesTest",
		$class: "DiagnosesTest"
	},
	menus: {
		$title: "Menus Test",
		$path: "syracuse-ui/lib/tests/menus/menusTest",
		$class: "MenusTest"
	},
	menustree: {
		$title: "menu Tree Test",
		$path: "syracuse-ui/lib/tests/menus/menusTreeTest",
		$class: "MenusTreeTest"
	},
	json: {
		$title: "Json Test",
		$path: "syracuse-ui/lib/tests/jsonPageViewer",
		$class: "JsonPageViewer"
	},
	macro: {
		$title: "Macros Test",
		$path: "syracuse-ui/lib/tests/macroTest",
		$class: "MacroTest"
	},
	boost: {
		$title: "Process Test",
		$path: "syracuse-ui/lib/tests/boost/boostProcessTest",
		$class: "ProcessTest"
	},
	fields: {
		$title: "Fields Test",
		$path: "syracuse-ui/lib/tests/fields/simpleFieldsTest",
		$class: "SimpleFieldsTest"

	},
	binaryFields: {
		$title: "Binary Fields Test",
		$path: "syracuse-ui/lib/tests/fields/binaryFieldTest",
		$class: "BinaryFieldTest"
	},
	editorField: {
		$title: "Editor Field Test",
		$path: "syracuse-ui/lib/tests/fields/editorFieldTest",
		$class: "EditorFieldTest"
	},
	childField: {
		$title: "Child Object Fields",
		$path: "syracuse-ui/lib/tests/fields/childFieldTest",
		$class: "ChildFieldTest"
	},
	iconFields: {
		$title: "Icon Fields Test",
		$path: "syracuse-ui/lib/tests/fields/iconFieldsTest",
		$class: "IconFieldsTest"
	},
	single: {
		$title: "Array Single Test",
		$path: "syracuse-ui/lib/tests/array/single/singleArrayTest",
		$class: "SingleArrayTest"
	},
	gridArray: {
		$title: "Grid",
		$path: "syracuse-ui/lib/tests/array/multi/gridArrayTest",
		$class: "GridArrayTest"
	},
	editArray: {
		$title: "Edit",
		$path: "syracuse-ui/lib/tests/array/multi/editArrayTest",
		$class: "EditArrayTest"
	},
	fillArray: {
		$title: "Fill",
		$path: "syracuse-ui/lib/tests/array/multi/fillArrayTest",
		$class: "FillArrayTest"
	},
	gridCardsArray: {
		$title: "Grid - Cards",
		$path: "syracuse-ui/lib/tests/array/multi/gridCardsArrayTest",
		$class: "GridCardsArrayTest"
	},
	cardsArray: {
		$title: "Cards",
		$path: "syracuse-ui/lib/tests/array/multi/cardsArrayTest",
		$class: "CardsArrayTest"
	},
	selectionArray: {
		$title: "Selection",
		$path: "syracuse-ui/lib/tests/array/multi/selectionArrayTest",
		$class: "SelectionArrayTest"
	},
	tree: {
		$title: "Tree view  Test",
		$path: "syracuse-ui/lib/tests/array/tree/treeArrayTest",
		$class: "TreeArrayTest"
	},
	graph: {
		$title: "Array Graph Test",
		$path: "syracuse-ui/lib/tests/array/multi/graphTest",
		$class: "GraphTest"
	},
	param: {
		$title: "Dynamic Parameters Test",
		$path: "syracuse-ui/lib/tests/dynamicParametersTest",
		$class: "DynamicParametersTest"
	},
	coreStyleTest: {
		$title: "Core Style Test",
		$path: "syracuse-ui/lib/tests/array/coreStyleTest",
		$class: "CoreStyleTest"
	},
	jobs: {
		$title: "Jobs Tests",
		$path: "syracuse-ui/lib/tests/misc/jobsTest",
		$class: "JobsTest"
	},
	search: {
		$title: "Search Test",
		$path: "syracuse-ui/lib/tests/misc/searchTest",
		$class: "SearchTest"
	},
	searchVignette: {
		$title: "Search Vignette Test",
		$path: "syracuse-ui/lib/tests/misc/searchVignetteTest",
		$class: "SearchVignetteTest"
	},
	expression: {
		$title: "Expression Tests",
		$path: "syracuse-ui/lib/tests/misc/expressionTest",
		$class: "ExpressionTest"
	},
	formula: {
		$title: "Formula Tests",
		$path: "syracuse-ui/lib/tests/misc/formulaTest",
		$class: "FormulaTest"
	},
	selectPrinter: {
		$title: "Select Printer Tests",
		$path: "syracuse-ui/lib/tests/misc/printer/selectPrinterTest",
		$class: "SelectPrinterTest"
	}
};

exports.isUiTestUrl = function($url) {
	return $url && ($url.indexOf("s-uitest-") >= 0);
};

exports.openPage = function(openerUrlSegments) {
	var key = openerUrlSegments.representationRoot.replace("s-uitest-", "");
	var $testPage;
	var $menus = null;
	if (key == "spy") {
		$testPage = {
			$title: "Survey Page",
			$path: "syracuse-ui/lib/site/spy/spyPage",
			$class: "SpyPage"
		};
	} else {
		$testPage = _pages[key];
		var $links = {};
		Object.keys(_pages).forEach(function(key) {
			$links["testlink-" + key] = {
				$title: _pages[key].$title,
				$url: "?representation=s-uitest-" + key + ".$test"
			};
		});
		$links.testx3LinkAQFB = {
			$title: "X3 link --> AQFB : Test Tableaux",
			$url: "/trans/x3/erp/superv/$sessions?f=AQFB"
		};
		$links.JsonLint = {
			"$title": "JsonLint",
			"$url": "http://jsonlint.com/"
		};
		$links.jsonformatter = {
			"$title": "Jsonformatter Curiousconcept",
			"$url": "http://jsonformatter.curiousconcept.com/"
		};
		$menus = [{
			$layout: {
				$items: [{
					$bind: "$openSpy"
				}, {
					$bind: "$testUiLock"
				}, {
					$bind: "$testUiLockLong"
				}]
			}
		}, {
			$title: "Array",
			$skin: "s-mn-bar-extra",
			$layout: {
				$items: [{
					$bind: "testlink-gridArray"
				}, {
					$bind: "testlink-editArray"
				}, {
					$bind: "testlink-fillArray"
				}, {
					$bind: "testlink-cardsArray"
				}, {
					$bind: "testlink-gridCardsArray"
				}, {
					$bind: "testlink-selectionArray"
				}, {
					$bind: "testlink-array"
				}, {
					$bind: "testlink-tree"
				}, {
					$bind: "testlink-graph"
				}, {
					$bind: "testlink-single"
				}]
			}
		}, {
			$title: "Fields",
			$skin: "s-mn-bar-extra",
			$layout: {
				$items: [{
					$bind: "testlink-fields"
				}, {
					$bind: "testlink-editorField"
				}, {
					$bind: "testlink-childField"
				}, {
					$bind: "testlink-iconFields"
				}, {
					$bind: "testlink-binaryFields"
				}]
			}
		}, {
			$title: "Misc",
			$skin: "s-mn-bar-extra",
			$layout: {
				$items: [{
					$bind: "testlink-expression"
				}, {
					$bind: "testlink-jobs"
				}, {
					$bind: "testlink-formula"
				}, {
					$bind: "testlink-selectPrinter"
				}, {
					$bind: "testlink-search"
				}, {
					$bind: "testlink-searchVignette"
				}]
			}
		}, {
			$title: "Messages",
			$skin: "s-mn-bar-extra",
			$layout: {
				$items: [{
					$bind: "testlink-messagebox"
				}, {
					$bind: "testlink-messageBoxPopup"
				}, {
					$bind: "testlink-diagnoses"
				}]
			}
		}, {
			$title: "Pages",
			$skin: "s-mn-bar-extra",
			$layout: {
				$items: [{
					$bind: "testlink-json"
				}, {
					$bind: "testlink-macro"
				}]
			}
		}, {
			$title: "Menus",
			$skin: "s-mn-bar-extra",
			$layout: {
				$items: [{
					$bind: "testlink-menustree"
				}, {
					$bind: "testlink-menus"
				}, {
					$bind: "testlink-param"
				}]
			}
		}, {
			$title: "Layout",
			$skin: "s-mn-bar-extra",
			$layout: {
				$items: [{
					$bind: "testlink-layout"
				}, {
					$bind: "testlink-coreStyleTest"
				}]
			}
		}, {
			$title: "Convergence",
			$skin: "s-mn-bar-extra",
			$layout: {
				$items: [{
					$bind: "testlink-convergenceCleaner"
				}, {
					$bind: "testx3LinkAQFB"
				}, {
					$bind: "testx3LinkAQFB"
				}]
			}
		}, {
			$title: "Boost",
			$skin: "s-mn-bar-extra",
			$layout: {
				$items: [{
					$bind: "testlink-boost"
				}]
			}
		}, {
			$title: "Json",
			$skin: "s-mn-bar-extra",
			$layout: {
				$items: [{
					$bind: "JsonLint"
				}, {
					$bind: "jsonformatter"
				}]
			}
		}];
	}

	require.async($testPage.$path, function(err, module) {
		try {
			var $itemPage = {
				$autoFetch: false,
				layoutSlot: document.createElement("div"),
				$category: "page",
				openerUrlSegments: openerUrlSegments,
				$pageCategoryClass: module[$testPage.$class],
				$representation: {
					$prototype: {
						$properties: {},
						$title: $testPage.$title,
						$links: $links,
						$actions: {
							$openSpy: {
								"$title": "Open Spy"
							},
							$testUiLock: {
								"$title": "ui lock"
							},
							$testUiLockLong: {
								"$title": "ui lock long"
							}
						},
						$menus: $menus
					},
					$article: {}
				}
			};
			$itemPage.openerUrlSegments.fullUrl = document.location.href;
			document.site.onMainPageChange($itemPage);
		} catch (error) {
			console.error(error.message + "\n" + error.stack);
		}
	});

};