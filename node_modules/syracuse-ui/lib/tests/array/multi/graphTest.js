"use strict";
var helpers = require("syracuse-core/lib/helpers");
var MultiArrayTest = require("syracuse-ui/lib/tests/array/multi/multiArrayTest").MultiArrayTest;
var multiSettings = require("syracuse-ui/lib/tests/array/multi/multiSettings");

function GraphTest() {}

exports.GraphTest = helpers.defineClass(GraphTest, MultiArrayTest, {
	_defineArticle: function() {
		this.$item.$layout = {
			$layoutType: "row",
			$widths: "60,40",
			$items: [{
					$layoutType: "stack",
					$items: [{
						$title: "bottom",
						$graphPosition: "bottom",
						$bind: "xarray",
						$renderer: "highCharts",
						$cube: {
							$measures: {
								matiere_premiere: {
									$style: "pie"
								},
								main_oeuvre: {
									$style: "areaspline"
								},
								cout_machine: {
									$style: "bar"
								}
							}
						}
					}, {
						$title: "behind",
						$bind: "xarray",
						$renderer: "highCharts",
						$graphPosition: "behind"
					}, {
						$title: "front",
						$graphPosition: "front",
						$bind: "xarray",
						$renderer: "highCharts"
					}, {
						$title: "left",
						$graphPosition: "left",
						$bind: "xarray",
						$renderer: "highCharts",
						$cube: {
							$measures: {
								matiere_premiere: {
									$style: "column"
								},
								main_oeuvre: {
									$style: "line"
								},
								cout_machine: {
									$style: "scatter"
								}
							}
						}
					}, {
						$title: "right",
						$graphPosition: "right",
						$bind: "xarray",
						$renderer: "highCharts",
						$cube: {
							$measures: {
								matiere_premiere: {
									$style: "column"
								},
								main_oeuvre: {
									$style: "line"
								},
								cout_machine: {
									$style: "scatter"
								}
							}
						}
					}]
				},
				multiSettings.settingBar
			]
		};
	},
	refreshList: function(records) {
		if (records === undefined) {
			records = this.getResources().getCube();
		}
		this.applyChange({
			$properties: {
				"xarray": {
					$totalResults: records.length
				}
			},
			"xarray": records
		});
	},
	_makeArrayPrototype: function() {
		var $prototype = MultiArrayTest.prototype._makeArrayPrototype.call(this);
		$prototype.$properties.xarray = {
			"$type": "application/x-array",
			"$axes": [{
				"$title": "Articles vendus",
				"$hierarchies": [
					["article_h"]
				]
			}, {
				"$title": "measures",
				"$hierarchies": [
					["$measures"]
				]
			}],
			"$cube": {
				"$mode": "table",
				"$style": "xy",
				"$displaysOneMeasure": false,
				"$title": "Coûts articles",
				"$hierarchies": {
					"article_h": {
						"$title": "Articles",
						"$properties": ["ARTICLE"],
						"$members": [],
						"$isDefault": true
					}
				},
				"$measures": {
					"matiere_premiere": {
						"$property": "matiere_premiere",
						"$title": "Matière premiere",
						"$mode": "sum",
						"$style": "line",
						"$isStacked": false,
						"$isNormalized": false,
						"$isDefault": true
					},
					"main_oeuvre": {
						"$property": "main_oeuvre",
						"$title": "Main d'oeuvre",
						"$mode": "sum",
						"$style": "stick",
						"$isStacked": false,
						"$isNormalized": false
					},
					"cout_machine": {
						"$property": "cout_machine",
						"$title": "Cout machine",
						"$mode": "sum",
						"$style": "spline",
						"$isStacked": false,
						"$isNormalized": false
					}
				}
			},
			"$item": {
				"$properties": {
					"ARTICLE": {
						"$title": "Intitulé article",
						"$type": "application/x-string"
					},
					"code": {
						"$title": "Code article",
						"$type": "application/x-string"
					},
					"matiere_premiere": {
						"$title": "Matiere première",
						"$type": "application/x-decimal"
					},
					"main_oeuvre": {
						"$title": "Main d'oeuvre",
						"$type": "application/x-decimal"
					},
					"cout_machine": {
						"$title": "Coût machine",
						"$type": "application/x-decimal"
					}
				},
				"$links": {
					"$details": {
						"$title": "Details",
						"$url": "{$baseUrl}/article('{$key}')",
						"$type": "{$baseType}.article.$details"
					},
					"$edit": {
						"$title": "Edit",
						"$url": "{$url}/$workingCopies",
						"$type": "{$baseType}.article.$edit",
						"$method": "POST"
					},
					"$delete": {
						"$title": "Delete",
						"$url": "{$url}",
						"$type": null,
						"$method": "DELETE"
					}
				}
			}
		};
		return $prototype;

	}
});