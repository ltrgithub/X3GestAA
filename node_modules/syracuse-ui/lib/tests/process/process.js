"use strict";
var helpers = require("syracuse-core/lib/helpers");

var _processes = {
	VisualProcessACH05_002: "ACH05_002",
	VisualProcessActions: "Actions",
	VisualProcessLayers: "Layers",
	VisualProcessLines: "Lines",
	VisualProcessLineCapsJoints: "Linecaps & Linejoints",
	VisualProcessArrows: "Arrows",
	VisualProcessBezier: "Bezier",
	VisualProcessApiDashed: "Apishapes Dashed Borders",
	VisualProcessBzDashed: "Beziershapes Dashed Borders",
	VisualProcessBezierFill: "Fill Bezier ",
	VisualProcessPattern: "Fill with Pattern ",
	VisualProcessPatternRotation: "Pattern+ Rotation of shapes",
	VisualProcessRadialGradient: "Radial Gradient ",
	VisualProcessLinearGradientTransition: "LinearGradient Transition Vector  ",
	VisualProcessLinearGradientStops: "LinearGradient Stop Colors ",
	VisualProcessLinearGradientRotation: "LinearGradient + Rotation of shapes",
	VisualProcessTextRotation: "Text + Rotation of Shapes  ",
	VisualProcessFilling: "Filling",
	VisualProcessTextPositionning: "Text Positionning ",
	VisualProcessShadow: "Shadow ",
	VisualProcessTextFormatting: "Text Formatting ",
	VisualProcessApiRotations: "Apishape Rotations",
	VisualProcessImgRotations: "Image Rotations",
	VisualProcessImgScaling: " Image scaling",
	VisualProcessImgRotationsDeformations: "image rotations and deformations",
	VisualProcessLinks: "Links",
	VisualProcessLinks2: "Links2",
	VisualDemoProcess: "Visual Process Demo",
	VisualDemoProcess2: "Visual Process Demo2",
	VisualProcess: "Test VP "
};


exports.load = function(page) {
	page.setTitle("Process");
	page.$prototype.$properties.description = {
		$title: "Case description",
		$type: "application/x-string"
	};
	page.$prototype.$properties.process = {
		$type: "application/x-process",
		$title: "Visual Process Player test"
	};
	var keys = Object.keys(_processes);
	page.btns = {};
	for (var ii = 0, jj = keys.length; ii < jj; ii++) {
		var key = keys[ii];
		var btn = syra_menus.addTextButton(_processes[key], "s-uitest-mn", "onProcessClick");
		page.layoutContent.layoutSlot.appendChild(page.btns[btn.syraValue = key] = btn);
		btn.style.display = "inline-block";
		btn.style.margin = "4px";
	}

	page.loadNewItem(page.layoutContent.layoutSlot, {
		$bind: "description",
		$isTitleHidden: true,
		$isEditMode: false
	});
	page.flashImage = page.layoutContent.layoutSlot.appendChild(document.createElement("div"));
	page.loadNewItem(page.layoutContent.layoutSlot, {
		$bind: "process",
		$isTitleHidden: true,
		$isEditMode: false
	});

	page.onProcessClick = function(event, target) {
		require.async("syracuse-ui/lib/tests/process/" + target.syraValue, function(err, module) {
			var $resource = helpers.object.clone(module.$resources, true);
			syra_site.dom.empty(page.flashImage);
			page.flashImage.style.display = "none";
			page.flashImage.style.overflow = "visible";
			page.flashImage.style.padding = "0px";
			page.applyChange({
				$: {
					description: {
						$isHidden: !$resource.description
					}
				}
			});
			page.applyChange($resource);
			if ($resource.flashImage) {
				syra_site.dom.empty(page.flashImage);
				page.flashImage.appendChild(document.createElement("img")).setAttribute("src", $resource.flashImage.$url);
				page.flashImage.style.display = "";
			}
		});
	};
};