"use strict";
var helpers = require("syracuse-core/lib/helpers");
var TestPage = require("syracuse-ui/lib/tests/testPage").TestPage;

function JsonPageViewer() {}

exports.JsonPageViewer = helpers.defineClass(JsonPageViewer, TestPage, {
	_initiliazeTestPage: function() {
		syra_site.deltaManager.applyObjectDelta(this, this.$prototype.$properties, {
			$data: {
				$title: "json data",
				$type: "application/x-string"
			},
			$facet: {
				$type: "application/x-choice",
				$value: {
					$type: "application/x-string",

					$enum: [{
						$value: "$details",
						$title: "$details"
					}, {
						$value: "$edit",
						$title: "$edit"
					}, {
						$value: "$dashboard",
						$title: "$dashboard"
					}, {
						$value: "$query",
						$title: "$query"
					}]
				}
			}
		}, true);
		this.$prototype.$facet = "$edit";
		this.$prototype.$actions.$convert = {
			$title: "load json page"
		};
		this.$item.$layout = {
			$items: [{
				$category: "section",
				$isBoxCollapsable: true,
				$title: "Fields ($isEditMode: true / $isEditMode: false)",
				$layout: {
					$items: [{
						$isEditMode: true,
						$bind: "$data",
						$rows: 20
					}, {
						$isEditMode: true,
						$bind: "$facet",
						$rows: 20
					}, {
						$category: "link",
						$bind: "$convert"
					}]
				}
			}, {
				$category: "section",
				$title: "Result Page",
				$clientId: "resultPage",
				$layout: {
					$items: []
				}
			}]
		};
	},
	notifyActionChange: function(menuItem, target, value) {
		if (value.$convert) {
			var $representation = this.boundFields.$data[0].getDataValue();
			if ($representation) {
				var $representation = JSON.parse($representation);
				if (!$representation.$prototype) {
					$representation.$prototype = $representation;
				}
				var body = this.idMap["resultPage"].body;
				syra_site.dom.empty(body);
				syra_site.pageLoader.load({
					layoutSlot: body,
					$representation: $representation,
					$facet: this.boundFields.$facet[0].getDataValue(),
					$category: "page"
				});
			}
		}
	},
	applyFieldMetaData: function($bind, value, $field) {

	}
});