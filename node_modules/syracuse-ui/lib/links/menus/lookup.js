"use strict";
var List = require('syracuse-ui/lib/scroll/list').List;

function Lookup(field) {
	this.field = field;
	this.id = field.id + "-lookup";
	syra_item.register(this);
	if ((field.articleParent && field.articleParent.onLookupClick) ? field.articleParent.onLookupClick(field) : true) {
		field.focus && field.focus();
		var $lookup = field.$menus.$lookup;
		if (field.isChildFieldRecord) {
			field.articleParent.currentSelectRecords = null;
		}
		this.fetch();
	}
}

Lookup.prototype.fetch = function() {
	var self = this;
	if (self.field.$item.$useSummary) {
		self.showSummary();
	} else {
		syra_over.openModal(self.field.boxParent, {
			article: self.field.articleParent,
			$url: self.field.$menus.$lookup.$url,
			onSelectRecord: function(records) {
				self.select(records[Object.keys(records)[0]].dataset);
			}
		});
	}
};
Lookup.prototype.click = function(event, target) {
	var self = this;
	if (target.syraManage) {
		self._modalOpened = true;
		self.page.startChange();
		self.page.applyChange(self.data);
		self.page.endChange();
		self.page.menuBar && self.page.menuBar.toggleBar(false);
		syra_over.openModal(self.field.boxParent, {
			page: self.page,
			onSelectRecord: function(records) {
				self.select(records[Object.keys(records)[0]].dataset);
			},
			close: function() {
				self._modalOpened = false;
				setTimeout(function() {
					self.dispose();
				}, 100);
			}
		});
	} else {
		if (target.syraRecord !== undefined) {
			self.select(self.data.$resources[target.syraRecord]);
			self.dispose();
		}
	}

};
Lookup.prototype.showSummary = function() {
	var self = this;

	syra_router.loadRepresentation({
		article: self.field.articleParent,
		segments: self.field.$menus.$lookup.$url,
		success: function success($itemPage) {
			syra_pageBuilder.load({
				$itemPage: $itemPage,
				$autoFetch: false,
				success: function success(page) {
					self.page = page;
					var selected = self.field.getValue();
					if (selected && typeof(selected) == "object") {
						selected = selected.$uuid;
					} else {
						selected = null;
					}

					self.page.fetch(null, function(data, response, requestUrl) {
						var slot = syra_dom.div();
						self.data = data;
						self.list = new List({
							css: "s-popup-primary",
							parentNode: slot,
							scroll: true
						});
						var records = data.$resources;
						var link;
						for (var ii = 0, jj = Math.min(records.length, 10); ii < jj; ii++) {
							var record = records[ii];
							link = self.list.addAnchor();
							link.textContent = record.$value;
							link.syraRecord = ii;
							link.syraItem = self.id;
							link.syraOnClick = "click";
							if (selected == record.$uuid) {
								syra_dom.toggleClass(link, "s-selected", true);
							}
						}

						self.manageLink = link = syra_dom.anchor("s-popup-primary-top-sep s-popup-primary-btn-primary", slot);
						link.textContent = "Manage";
						link.syraManage = true;
						link.syraItem = self.id;
						link.syraOnClick = "click"

						var position = self.field.$item.$popupRight ? {
							my: "left top",
							at: "right top"
						} : {
							my: "left top",
							at: "left bottom"
						};
						position.of = self.field._dataValue;
						self._popup = syra_over.openPopup(syra_site, {
							slot: slot,
							picker: self.field._dataValue,
							position: position,
							onresize: function() {
								if (self.list) {
									self.list.resize(syra_site.size.popupMaxHeight - self.manageLink.clientHeight);
								}
							},
							close: function() {
								self.list && self.list.dispose();
								self._popup = null;
								!self._modalOpened && self.dispose();
							}
						});

					});
				}
			});
		}
	});
};

Lookup.prototype.select = function(dataset) {
	if (!this.field.$isDisabled && !this.field.$isReadOnly) {
		if (this.field.isChildFieldRecord) {
			this.field.articleParent.setValue(dataset);
			syra_form.updateDelta(this.field.articleParent, dataset);
		} else {
			this.field.setValue(this.field.$menus.$lookup.$result ? dataset[this.field.$menus.$lookup.$result] : dataset);
			this.field.focus();
			syra_form.update(this.field, this.field.currentValue);
		}
	}
};
Lookup.prototype.dispose = function() {
	if (this.field) {
		delete this.field._lookupItem;
	}
	this._popup && this._popup.close();
	this.page && this.page.dispose();
	syra_item.unregister(this);
	syra_article.dispose(this);
};


exports.show = function(field) {
	if (field._lookupItem) {
		field._lookupItem.dispose();
	} else {
		field._lookupItem = new Lookup(field);
	}
};