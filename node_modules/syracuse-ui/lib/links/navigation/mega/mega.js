"use strict";
var _moreModules = require('./moreModules');
var _megaDetailPanel = require('./megaDetailPanel');
var Carousel = require('syracuse-ui/lib/scroll/carousel').Carousel;

function _useLargeMode(items, isLastLevel) {
	var blockCount = 0;
	if (items) {
		for (var ii = 0, jj = items.length; ii < jj; ii++) {
			if (items[ii].menuBlock) {
				blockCount++;
				if (isLastLevel) {
					return true;
				} else {
					return _useLargeMode(items[ii].menuBlock.items, true);
				}
			}
		}
	}
	return blockCount > 6;
}

function _endLoad(page, $representation) {
	if ($representation) {
		page.$prototype = $representation.$prototype;
		page.dataset = {};
		var $keys = Object.keys($representation);
		for (var ii = 0, jj = $keys.length; ii < jj; ii++) {
			if ($keys[ii] != "$prototype" && $keys[ii] != "$article") {
				page.dataset[$keys[ii]] = $representation[$keys[ii]];
			}
		}
		page.load();
		syra_menus.applyChange(syra_site, {
			$links: {
				site_sitemap: {
					$isDisabled: false
				}
			}
		});
		page.resizeItem();
	}
}

exports.page = {
	load: function(page) {
		page.$skin = "s-nav-mega";
		page.$skins = {
			module: "s-nav-mega-module",
			submodule: "s-nav-mega-submodule",
			nosubmodules: "s-nav-mega-no-submodules",
			block: "s-nav-mega-block",
			menu: "s-nav-mega-link",
			nomenu: "s-nav-mega-no-menu"
		};
		syra_dom.empty(page.body = page.modulesBar = syra_site.megaMenusBar);
		page.onNavMenuClick = function() {
			this.togglePopup();
		};
		page.togglePopup = function(module) {
			var self = this;
			var content = module && module.scrollview;
			if (content) {
				if (!self.mainPopup) {
					self.mainPopup = syra_dom.div("s-nav-mega-popup");
				}
				self.mainPopup.appendChild(content);
				if (!self.mainPopupDlg) {
					self.mainPopupDlg = syra_over.openPopup(self.page, {
						content: {},
						slot: self.mainPopup,
						autoCloseBoundary: self.modulesBar,
						autoCloseTimeout: 300,
						picker: self.modulesBar,
						position: {
							my: "left top",
							at: "left bottom",
							of: self.modulesBar
						},
						close: function() {
							self.lastSelected && self.lastSelected.activate(false);
							self.mainPopupDlg = null;
						}
					});

					module.carousel.adjustContainerHeight(self.mainPopup);

					self.mainPopup.style.width = self.mainPopup.style.minWidth = (self.isHighRes ? 1200 : 960) + "px";
					self.mainPopup.style.left = (self.modulesBar.clientWidth - self.mainPopup.clientWidth) / 2 + "px";

					self.more && self.more.setOnTop(syra_dom.setZIndex(self.mainPopup, true));
				}
			} else {
				self.mainPopupDlg && self.mainPopupDlg.close();
			}
		};
		page.resizeItem = function() {
			if (this.areModulesLoaded) {
				if (this.modulesBar) {
					var maxW = this.modulesBar.clientWidth + 1; //1 for little space
					if (this.lastWidth != maxW) {
						_moreModules.resizeModulesBar(this, this.lastWidth = maxW);
					}
					this.isHighRes = this.modulesBar.clientWidth >= 1260;
				}
				if (this.mainPopup && this.lastSelected) {
					this.lastSelected.carousel.adjustContainerHeight(this.mainPopup);
				}
				this.megaDetailPanelActivated && this.megaDetailPanelActivated.resizeItem();
				var lastSelected = this.lastSelected;
				while (lastSelected) {
					lastSelected.carousel && lastSelected.carousel.validate();
					lastSelected = lastSelected.lastSelected;
				}
			}
		};
		if (page.$representation) {
			_endLoad(page, page.$representation);
		} else {
			syra_router.loadRepresentation({
				article: syra_site,
				segments: syra_config.$sitemapUrl,
				success: function($itemPage) {
					_endLoad(page, $itemPage && $itemPage.$representation);
				}
			});
		}
	},
	autoCloseBoundary: function() {
		return self.modulesBar;
	},
	dispose: function(page) {
		syra_dom.empty(page.modulesBar);
		syra_nav.megaMenus = null;
	}
};

exports.module = {
	create: function(module) {
		module.slot.textContent = module.dataset.title;
	},
	activate: function(on, module) {
		if (on) {
			this._showSubModules(module);
		} else {
			syra_dom.empty(module.scrollview.parentNode);
		}
	},
	_showSubModules: function(module) {
		var page = module.page;
		if (!module.body) {
			module.scrollview = syra_dom.div("s-nav-mega-col");
			module.body = syra_dom.ul(page.$skin + "-submodules", module.scrollview);
			if (module.dataset.submodules) {
				module.carousel = new Carousel({
					page: page,
					view: module.scrollview,
					content: module.body,
					css: "s-nav-mega-carousel"
				});
			}
			module.addChildren();
		}
		page.togglePopup(module);
		module.carousel && module.carousel.validate();
	}
};

exports.subModule = {
	create: function(sub) {
		sub.title = syra_dom.text(sub.$skin + "-title", sub.dataset.title, sub.slot);
		if (_useLargeMode(sub.dataset.items)) {
			sub.viewType = "large";
			sub.scrollview = syra_dom.div("s-nav-mega-col-large");
			sub.body = syra_dom.ul(sub.$skin + "-large", sub.scrollview);
			sub.carousel = new Carousel({
				page: sub.page,
				view: sub.scrollview,
				content: sub.body,
				css: "s-nav-mega-carousel"
			});
			sub.$skin_menu = sub.$skin + "-large-link";
		} else {
			sub.viewType = "small";
			sub.megaDetailPanel = _megaDetailPanel.add(sub);
		}
		sub.addChildren(sub.dataset.items);
	},
	activate: function(on, block) {
		if (block) {
			if (on) {
				block.page.mainPopup.appendChild(block.scrollview || block.body);
				block.megaDetailPanel && block.megaDetailPanel.activate();
				block.navParent.lastSelected = block;
				block.carousel && block.carousel.validate();
			} else {
				var scrollview = block.scrollview || block.body;
				if (scrollview.parentNode) {
					while (block.page.mainPopup.lastChild != scrollview) {
						syra_dom.remove(block.page.mainPopup.lastChild);
					}
					syra_dom.remove(scrollview);
				}
			}
			block.title.className = block.$skin + "-title" + (on ? " s-selected" : "");
			block.slot.className = block.$skin + (on ? " s-selected" : "");
		}
	}
};

exports.menuBlock = {
	create: function(block) {
		if (block.submodule == block.navParent && block.submodule.viewType == "large") {
			block.$skin = block.submodule.$skin + "-large-block";
			block.megaDetailPanel = _megaDetailPanel.add(block);
		} else {
			block.body = syra_dom.ul(block.$skin + "-body");
		}
		block.domItem = block.slot = syra_dom.li(block.$skin);
		block.title = syra_dom.text(block.$skin + "-title", block.dataset.title, block.slot);
		block.domItem.syrainout = block.id;
	}
};