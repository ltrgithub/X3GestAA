"use strict";
var _megaDetailPanel = require('syracuse-ui/lib/links/navigation/mega/megaDetailPanel');
var Carousel = require('syracuse-ui/lib/scroll/carousel').Carousel;

function BreadcrumbItem(page, index, slot) {
	syra_item.initialize(page, this);
	this.page = page;
	this.slot = slot;
	this.index = index;
	this.$bind = "page_breadcrumb";
	this.$item = {};
}

BreadcrumbItem.prototype.add = function(title, last, readonly) {
	var separator = syra_dom.span();

	if (readonly) {
		this.item = syra_dom.span(this.page.$skin + "-breadcrumb-item");
	} else {
		this.item = syra_dom.anchor(this.page.$skin + "-breadcrumb-item");
		this.item.syraItem = this.id;
		this.item.syraOnClick = "click";
	}

	this.item.textContent = title;

	if (!last) {
		separator.className = "s-page-breadcrumb-item s-fonticon-btn";
		separator.innerHTML = syra_context.isRTL ? syra_icon.font["filter_lt"] : syra_icon.font["filter_gt"];
		this.item.appendChild(separator);
	}


	this.slot.appendChild(this.item);
};

BreadcrumbItem.prototype.click = function(event) {
	syra_menus.click.fire({
		menu: this,
		event: event
	});
};

function Breadcrumb(page, slot) {
	this.show(page, slot);
}

Breadcrumb.prototype.show = function(page, slot) {
	this.page = page;

	if (page.$breadCrumb && page.$breadCrumb.length > 0 && page.$facet !== "$modal2") {
		var nav = syra_dom.div("s-page-head-breadcrumb");
		var isReadOnly = (page.overPanel && page.overPanel.isModal) || (syra_site.$device == "tablet");
		for (var ii = 0, jj = page.$breadCrumb.length - 1; ii <= jj; ii++) {
			(new BreadcrumbItem(page, ii, slot)).add(this.page.$breadCrumb[ii].title, ii === jj, isReadOnly);
		}
		slot.appendChild(nav);
		syra_dom.hide(slot, false);
	}
};

exports.show = function(page, slot) {
	return new Breadcrumb(page, slot);
};



function _useLargeMode(sub) {
	return !sub.page.breadcrumbModules;
}

exports.page = {
	load: function(page, options) {
		page.$skins = {
			module: "s-nav-mega-submodule",
			submodule: "s-nav-mega-submodule",
			nosubmodules: "s-nav-mega-no-submodules",
			block: "s-nav-mega-block",
			menu: "s-nav-mega-link",
			nomenu: "s-nav-mega-no-menu"
		};
		page.$skin = "s-nav-breadcrumb";
		page.modulesBar = syra_dom.ul("s-nav-mega-col-body");
		page.eventSourceDomItem = options.menu.item;
		page.onNavMenuClick = function() {
			this.togglePopup();
		};
		page.setMegaPopupHeight = function(carousel) {
			var btnHeight = carousel.up.link.clientHeight;
			var scrollHeight = (syra_site.size.popupMaxHeight * 0.65) - btnHeight * 2;

			!carousel.increment && carousel.setIncrement();

			scrollHeight = Math.floor(scrollHeight / carousel.increment) * carousel.increment + btnHeight * 2;
			this.mainPopup.style.height = this.mainPopup.style.maxHeight = scrollHeight + "px";
		};
		page.togglePopup = function(content, items) {
			var self = this;
			if (content) {
				if (!self.mainPopup) {
					self.mainPopup = syra_dom.div("s-nav-mega-popup");
				}
				self.mainPopup.appendChild(content);
				if (!self.mainPopupDlg) {
					self.mainPopupDlg = syra_over.openPopup(self.page, {
						content: {},
						slot: self.mainPopup,
						picker: self.eventSourceDomItem,
						position: {
							my: "left top",
							at: "left bottom",
							of: self.eventSourceDomItem
						},
						close: function() {
							self.lastSelected && self.lastSelected.activate(false);
							self.mainPopupDlg = null;
						}
					});

					if (items && items.carousel) {
						self.setMegaPopupHeight(items.carousel);
					} else {
						var height = syra_site.size.popupMaxHeight + "px";
						self.mainPopup.style.height = height;
						self.mainPopup.style.maxHeight = height;
					}
					self.carousel && self.carousel.validate();
				}
			} else {
				self.mainPopupDlg && self.mainPopupDlg.close();
			}
		};

		page.resizeItem = function() {
			if (this.areModulesLoaded) {
				if (this.mainPopup && this.lastSelected) {
					this.setMegaPopupHeight(this.lastSelected.carousel);
				}
				this.megaDetailPanelActivated && this.megaDetailPanelActivated.resizeItem();
				var lastSelected = this.lastSelected;
				while (lastSelected) {
					lastSelected.carousel && lastSelected.carousel.validate();
					lastSelected = lastSelected.lastSelected;
				}
			}
		};

		page.$prototype = syra_nav.megaMenus.$prototype;
		page.dataset = syra_nav.megaMenus.dataset;
		page.load();
		page.resizeItem();
	},
	dispose: function(page) {
		syra_dom.remove(page.modulesBar);
	}
};

exports.modules = {
	activate: function(on, page) {
		if (on) {
			this._showModules(page);
		}
	},
	_showModules: function(page) {
		var modules = {};
		page.breadcrumbModules = true;
		if (!modules.body) {
			modules.scrollview = syra_dom.div("s-nav-mega-col");
			modules.scrollview.appendChild(page.modulesBar);
			modules.body = page.modulesBar;
			modules.carousel = new Carousel({
				page: modules,
				view: modules.scrollview,
				content: modules.body,
				css: "s-nav-mega-carousel"
			});
		}
		page.togglePopup(modules.scrollview, modules);
	},
	getModule: function(breadcrumbs, index, modules) {
		var item;
		for (var ii = 1, jj = index; ii <= jj; ii++) {
			if (item) {
				item = item.getChild(breadcrumbs[ii].$uuid);
			} else {
				item = this._getItem(breadcrumbs[ii].$uuid, modules);
				item.addChildren();
			}
		}
		return item;
	},
	_getItem: function(uuid, items) {
		for (var ii = 0, jj = items.length; ii < jj; ii++) {
			var item = items[ii];
			if (item.dataset.$uuid === uuid) {
				return item;
			}
		}
	}
};

exports.module = {
	create: function(module) {
		module.title = syra_dom.div(module.$skin + "-title", module.slot);
		module.title.textContent = module.dataset.title;
	},
	activate: function(on, module) {
		if (on) {
			this._showSubModules(module);
		} else {
			if (module.page.breadcrumbModules) {
				var parentNode = module.scrollview.parentNode;
				for (var ii = 1, jj = parentNode.childNodes.length; ii < jj; ii++) {
					parentNode.removeChild(parentNode.lastChild);
				}
			} else {
				syra_dom.empty(module.scrollview.parentNode);
			}
		}
		module.title.className = module.$skin + "-title" + (on ? " s-selected" : "");
	},
	_showSubModules: function(module) {
		var page = module.page;
		if (!module.body) {
			module.scrollview = syra_dom.div("s-nav-mega-col");
			module.body = syra_dom.ul("s-nav-mega-col-body", module.scrollview);
			if (module.dataset.submodules) {
				module.carousel = new Carousel({
					page: page,
					view: module.scrollview,
					content: module.body,
					css: "s-nav-mega-carousel"
				});
			}
			module.addChildren();
		}
		page.togglePopup(module.scrollview, module);
		module.carousel && module.carousel.validate();
	}
};

exports.subModule = {
	create: function(sub) {
		sub.title = syra_dom.text(sub.$skin + "-title", sub.dataset.title, sub.slot);
		if (_useLargeMode(sub)) {
			sub.viewType = "large";
			sub.scrollview = syra_dom.div("s-nav-mega-col-large");
			sub.body = syra_dom.ul("s-nav-mega-col-body", sub.scrollview);
			sub.carousel = new Carousel({
				page: sub.page,
				view: sub.scrollview,
				content: sub.body,
				css: "s-nav-mega-carousel"
			});
			sub.$skin_menu = sub.$skin + "-large-link";
		} else {
			sub.viewType = "small";
			sub.megaDetailPanel = _megaDetailPanel.add(sub);
		}
		sub.addChildren(sub.dataset.items);
	},
	activate: function(on, block, submodule) {
		if (block) {
			if (on) {
				block.page.mainPopup.appendChild(block.scrollview || block.body);
				block.megaDetailPanel && block.megaDetailPanel.activate();
				block.navParent.lastSelected = block;
				block.carousel && block.carousel.validate();
			} else {
				var scrollview = block.scrollview || block.body;
				if (scrollview.parentNode) {
					while (block.page.mainPopup.lastChild != scrollview) {
						syra_dom.remove(block.page.mainPopup.lastChild);
					}
					syra_dom.remove(scrollview);
				}
			}
			block.title.className = block.$skin + "-title" + (on ? " s-selected" : "");
			block.slot.className = block.$skin + (on ? " s-selected" : "");
		} else {
			submodule.page.togglePopup(submodule.scrollview, submodule);
			submodule.carousel && submodule.carousel.validate();
		}
	}
};

exports.menuBlock = {
	create: function(block) {
		if (block.submodule == block.navParent && block.submodule.viewType == "large") {
			block.$skin = block.submodule.$skin + "-large-block";
			block.megaDetailPanel = _megaDetailPanel.add(block);
		} else {
			block.body = syra_dom.ul(block.$skin + "-body");
		}
		block.domItem = block.slot = syra_dom.li(block.$skin);
		block.title = syra_dom.text(block.$skin + "-title", block.dataset.title, block.slot);
		block.domItem.syrainout = block.id;
	},
	activate: function(on, block) {
		if (!block.megaDetailPanel) {
			block.megaDetailPanel = _megaDetailPanel.add(block);
			block.submodule.addChildren(block.dataset.items, block);
		}
		block.page.togglePopup(block.megaDetailPanel.navParent.body);
	}
};