"use strict";
var helpers = require('@sage/syracuse-core').helpers;
var Designer = require("syracuse-ui/lib/authoring/designer").Designer;
var _uiSwitchTool = require("syracuse-ui/lib/authoring/tools/uiSwitchTool");
var _dragItem = require("syracuse-ui/lib/authoring/tools/dragItem");

exports.Designer = helpers.defineClass(function() {}, Designer, {
	load: function() {
		this.$prototype = {
			$properties: {
				editTab: {
					$type: "application/x-string",
					$title: syra_local.ldpDesignTitle,
					$capabilities: "localize",
					$displayLength: 35,
					$links: {
						$localize: {
							$title: syra_local.ldpDesignTranslation
						}
					}
				}
			}
		};
		Designer.prototype.load.call(this);
	},
	drawPage: function() {
		this.body = this.layoutSlot = this.domItem = document.createElement("aside");
		this.domItem.syraItem = this.id;
		this.layoutSlot.className = "s-aw-widget-designer";
		this.designedItem = this.designedArticle;
		this.designedArticle.header.appendChild(this.layoutSlot);
		this.isVisible = false;
		this.closeDesigner();
		this.dragItem = _dragItem.add(this);

		this.editTitleField = this.page.addItem(syra_dom.div("s-aw-prop-field-horz", this.body), {
			$bind: "editTab",
			$category: "field",
			$useLocalizePicker: true,
			$isEditMode: true,
			$inplace: true
		});

		this.modelSlot = syra_dom.div("s-aw-prop-field-horz", this.body)

		_uiSwitchTool.load(this);

		this.loadTemplateTools();

		syra_button.add({
			parent: this,
			slot: this.body,
			css: "s-aw-exclude-me s-aw-prop-field-horz",
			text: syra_local.ldpDelete,
			click: function() {
				var tab = syra_ldp.layoutContent.getOpenedTab();
				if (tab && tab.layoutContent) {
					syra_alert.ask({
						$title: syra_local.ldpDeleteVignette,
						$message: syra_local.ldpConfirmTabDeleteVignette.replace("{0}", tab.getTitle()),
						yes: function(response) {
							syra_ldp.ldpRecord.deleteVignettes(tab.layoutContent.getFields(), function() {
								tab.layoutParent.removeItem(tab, true);
							});
						}
					});
				}
			}
		});

		this.toggleUIDesign(this.designedArticle, true);
		this.addCloseButton(this.layoutSlot);
	},
	onFormUpdateDelta: function(field, value) {
		if (this.editTitleField == field && this.editTitleField.localizedSection) {
			syra_localizer.onSectionTitleEditorChange(field, value);
		}
		var metaData = {};
		metaData[field.$item.$bind] = value;
		this.designedItem.applyDesignMeta(metaData, true);
		this.saveDesign();
		this.history && this.history.updateSteps();
		this.applyChange(metaData);
		return false;
	},
	endLayoutDisplay: function(saveUpdate) {
		this.endArticleUpdate(null, null, saveUpdate);
	},
	endArticleUpdate: function(selectedItem, isStructureUpdated, saveUpdate) {
		syra_layout.ensureArticleVisibility(this.designedArticle, true);
		this.toggleUIDesign(this.designedArticle, true);
		if (saveUpdate !== false) {
			this.saveDesign();
		}
		this.onTabClik();
	},
	saveDesign: function() {
		syra_ldp.ldpRecord.save();
	},
	onTabClik: function(tabOpened) {
		if (this.isVisible) {
			tabOpened = tabOpened || this.designedArticle.layoutContent.getOpenedTab();
			if (tabOpened) {
				syra_localizer.setSectionTitleEditor(this.editTitleField, tabOpened);
				this.addLandingPageModels(this.modelSlot, tabOpened);
			} else {
				this.closeDesigner();
			}
		}
	},
	selectItem: function() {

	},
	closeDesigner: function() {
		this.toggleDesigner(false);
	},
	toggleDesigner: function(show) {
		this.isVisible = show === undefined ? !this.isVisible : show;
		syra_button.disable(this.designedArticle.designBtn, this.isVisible);
		syra_dom.hide(this.layoutSlot, !this.isVisible);
		this.onTabClik();
		this.designedArticle.resizeItem();
	},
	dispose: function() {
		this.dragItem && this.dragItem.dispose();
		syra_dom.remove(this.domItem);
		if (this.editTitleField) {
			this.editTitleField.localizedSection = null;
		}
		Designer.prototype.dispose.call(this);
	}
});