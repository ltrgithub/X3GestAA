"use strict";

function Context() {
	this._profile = localStorage.getItem("landingpage");
	if (this._profile) {
		this._profile = JSON.parse(this._profile);
	} else {
		//Compatibility with previous version
		var sitePreferences = syra_site.userProfile.dataset.sitePreferences;
		sitePreferences = sitePreferences && sitePreferences[syra_site.$device];
		this._profile = sitePreferences && sitePreferences.landingpage;
		if (this._profile) {
			_save(this);
		}
	}
	this._profile = this._profile || {};
	this._profile.tabs = this._profile.tabs || {};

	this.getRecordContext = function(record) {
		if (!record.context) {
			record.context = {
				vignettes: sessionStorage.getItem("landingpage_" + record.dataset.$uuid)
			};
			record.context.vignettes = (record.context.vignettes && JSON.parse(record.context.vignettes)) || {};
		}
	};
	this.saveRecordContext = function(record) {
		sessionStorage.setItem("landingpage_" + record.dataset.$uuid, JSON.stringify(record.context.vignettes));
	};

	this.orderUserPages = function(list) {
		if (this._profile.pages && list.children && list.children.length) {
			var orders = [];
			while (list.children.length) {
				orders.push(list.children.shift());
			}
			for (var ii = 0, jj = this._profile.pages.length; ii < jj; ii++) {
				var record = list.map[this._profile.pages[ii]];
				if (record) {
					list.body.appendChild(record.slot);
					orders.splice(orders.indexOf(record), 1);
					list.children.push(record);
				}
			}
			while (orders.length) {
				var record = orders.shift();
				list.body.appendChild(record.slot);
				list.children.push(record);
			}
		}
	};
	this.saveOrderUserPages = function(list) {
		this._profile.pages = [];
		for (var ii = 0, jj = list.children.length; ii < jj; ii++) {
			this._profile.pages.push(list.children[ii].dataset.$uuid);
		}
		_save(this);
	};

	this.getSelectedPage = function() {
		return this._profile.$selected;
	};
	this.saveSelectedPage = function(record) {
		if (this._profile.$selected != record.dataset.$uuid) {
			this._profile.$selected = record.dataset.$uuid;
			_save(this);
		}
	};

	this.getSelectedTab = function(record, index) {
		return this._profile.tabs[record.dataset.$uuid] || 0;
	};

	this.setSelectedTab = function(record, index) {
		this._profile.tabs[record.dataset.$uuid] = index;
		_save(this);
	};

	function _save(context) {
		localStorage.setItem("landingpage", JSON.stringify(context._profile));
	}
}

exports.Context = Context;