"use strict";
var _helpers = require('syracuse-core').helpers;
exports.actions = {
	addRefresh: function(record) {
		record.refreshBtn = syra_button.add({
			parent: record,
			slot: record.contentActions,
			text: syra_local.ldpRefresh,
			css: "s-ldp-btn",
			iconOnly: true,
			fontIcon: "refresh",
			shortCutTip: syra_shortCuts.tip.refresh,
			click: function() {
				var vignettes = syra_ldp.ldpRecord.vignettes;
				var uuids = Object.keys(vignettes);
				for (var ii = 0, jj = uuids.length; ii < jj; ii++) {
					var vignette = vignettes[uuids[ii]];
					if (vignette.refresh && syra_dom.isVisible(vignette.domItem)) {
						vignette.refresh(true);
					}
				}
			}
		});
	},
	addDeleteTab: function(btn) {
		btn.text = syra_local.ldpDelete;
		btn.click = function() {
			var tab = syra_ldp.layoutContent.getOpenedTab();
			if (tab && tab.layoutContent) {
				syra_alert.ask({
					$title: syra_local.ldpDeleteVignette,
					$message: syra_local.ldpConfirmTabDeleteVignette.replace("{0}", tab.getTitle()),
					yes: function(response) {
						_deleteVignettes(syra_ldp.ldpRecord, tab.layoutContent.getFields(), function() {
							tab.layoutParent.removeItem(tab, true);
						});
					}
				});
			}
		};
		syra_button.add(btn);
	},
	addTab: function(record) {
		record.addTabBtn = syra_button.add({
			parent: record,
			slot: record.contentActions,
			text: "+",
			title: syra_local.ldpAddTab,
			css: "s-ldp-add-tab",
			shortCutTip: syra_shortCuts.tip.newTab,
			click: function() {
				_createNewTab(this.parent);
				this.parent.addVignetteBtn.click();
				syra_ldp.designer && syra_ldp.designer.endLayoutDisplay();
			}
		});
	},
	addDesign: function(record) {
		record.designBtn = syra_button.add({
			parent: record,
			slot: record.contentActions,
			text: syra_local.ldpOpenDesigner,
			css: "s-ldp-btn",
			iconOnly: true,
			fontIcon: "design",
			click: function() {
				syra_ldp.designer.toggleDesigner();
			}
		});
	},
	addVignette: function(record) {
		record.addVignetteBtn = syra_button.add({
			parent: record,
			slot: record.contentActions,
			text: syra_local.ldpAddVignette,
			css: "s-ldp-btn",
			iconOnly: true,
			fontIcon: "create",
			shortCutTip: syra_shortCuts.tip.create,
			click: function() {
				var record = this.parent;
				var vignettes = record.$prototype.$properties.vignettes;
				var $select = vignettes && vignettes.$links && vignettes.$links.$select;
				var $url = syra_url.formatMenuUrl(record, $select, record);
				syra_over.openModal(syra_ldp, {
					article: syra_ldp,
					$url: $url,
					$isOkHidden: true,
					onValidate: function(searchPage) {
						var sels = searchPage.selectedVignettes;
						if (sels) {
							var vignettes = [];
							var $index = record.dataset.vignettes.length;
							for (var ii = 0, jj = sels.length; ii < jj; ii++) {
								var sel = sels[ii];
								vignettes.push({
									$uuid: _helpers.uuid.generate(),
									$index: $index++,
									vignette: {
										$uuid: sel.vignette.$key || sel.vignette.$uuid,
										title: sel.vignette.title
									},
									endpoint: {
										$uuid: sel.endpoint.$uuid
									}
								});
							}
							_put(record, {
								vignettes: vignettes
							});
						}
					}
				});
			}
		});
	},
	vignette: {
		addDesign: function(record, vignette) {
			if (!vignette.designBtn) {
				vignette.designBtn = syra_button.add({
					parent: vignette,
					slot: vignette.buttonsSlot,
					text: syra_local.box_design,
					css: vignette.$skin + "-btn",
					iconOnly: true,
					fontIcon: "design",
					click: function() {
						syra_site.switchItemDesigner(this.parent, !this.parent.designer);
					}
				});
			}
		},
		addDelete: function(record, vignette) {
			if (!vignette.deleteBtn) {
				vignette.deleteBtn = syra_button.add({
					parent: vignette,
					record: record,
					slot: vignette.buttonsSlot,
					text: syra_local.box_delete,
					css: vignette.$skin + "-btn",
					iconOnly: true,
					fontIcon: "delete",
					click: function() {
						var btn = this;
						var vignette = btn.parent;
						syra_alert.ask({
							$title: syra_local.ldpDeleteVignette,
							$message: syra_local.ldpConfirmDeleteVignette.replace("{0}", vignette.getTitle()),
							yes: function() {
								_deleteVignettes(btn.record, [vignette]);
							}
						});
					}
				});
			}
		}
	}

};
exports.setVignetteEndpointFlag = function(record, vignette) {
	if (!vignette.endpointFlag) {
		vignette.endpointFlag = syra_button.add({
			isIndicator: true,
			parent: vignette,
			css: "s-vignette-endpoint",
			fontIcon: "endpoint"
		});
		vignette.buttonsSlot.parentNode.insertBefore(vignette.endpointFlag.link, vignette.buttonsSlot);
	}
	var endpoint = vignette.$field.$vignetteEndpoint;
	syra_button.hide(vignette.endpointFlag, !endpoint || record.useCurrentEndpoint);
	if (endpoint) {
		syra_button.setText(vignette.endpointFlag, endpoint.description);
	}
};

function _createNewTab(record) {
	var tab = syra_ldp.layoutContent.loadChildItem(null, {
		$category: "section",
		$isEmptyVisible: true,
		$title: syra_localizer.getDefaultTabTitle(syra_ldp),
	});
	if (record.addTabBtn) {
		syra_ldp.layoutContent.ensureTabsSlot().appendChild(record.addTabBtn.link);
	}
	tab.titleBtn.link.click();
	return tab;
};
exports.ensureOpenedTab = function(record) {
	var tab = syra_ldp.layoutContent.getOpenedTab() || _createNewTab(record);
	syra_layout.removeSpace(tab.layoutContent);
	return tab;
};
exports.clear = function(record) {
	if (syra_ldp) {
		syra_dom.remove(syra_ldp.body);
		if (record.$vignettes) {
			var $binds = Object.keys(record.$vignettes);
			for (var ii = 0, jj = $binds.length; ii < jj; ii++) {
				var $bind = $binds[ii];
				syra_item.remove(record.vignettes[$bind], false, true);
				delete record.vignettes[$bind];
				delete record.$vignettes[$bind];
				delete syra_ldp.$prototype.$properties[$bind];
			}
		}
		if (syra_ldp.ldpRecord == record) {
			syra_fields.advancedState.clearPageButton(syra_ldp);
			delete syra_ldp.ldpRecord;
			delete syra_ldp.$prototype.$localization;
			delete syra_ldp.$prototype.$allLocalization;
			syra_layout.clearContent(syra_ldp.layoutContent);
			syra_site.switchItemDesigner(syra_ldp, false);
		}
		syra_dom.remove(record.contentActions);
	}
	record.isLayoutDisplay = false;
};

function _deleteVignettes(record, vignetteFields, success) {
	_put(record, {
		vignettes: vignetteFields.map(function(vignetteField) {
			return {
				$isDeleted: true,
				$uuid: vignetteField.$field.$vignetteId
			};
		})
	}, success);
}


function _put(record, sending, success) {
	sending.$uuid = record.dataset.$uuid;
	sending.$url = sending.$url || (syra_expression.parse(record, record.dataset.$url || record.$prototype.$url));
	syra_ajax.put({
		page: syra_ldp,
		url: sending.$url,
		data: sending,
		success: function(newData, response, requestUrl) {
			if (!syra_ldp.disposed) {
				syra_dataset.applyDelta(syra_ldp, record.dataset, newData);
				if (newData.$diagnoses) {
					syra_alert.show(newData.$diagnoses, record);
				}
				success && success();
				record.activate(true);
			}
		}
	});
}

exports.save = function(record) {
	record.addTabBtn && syra_ldp.layoutContent.ensureTabsSlot().appendChild(record.addTabBtn.link);
	var content = syra_layout.cleanBeforeSave(syra_ldp.$item);
	delete content.$menus;
	delete content.$isModel;
	var stdLayout = record.$prototype.$properties.stdLayout;
	var $save = stdLayout && stdLayout.$item && stdLayout.$item.$links && stdLayout.$item.$links.$save;
	var sending = {
		$etag: 1,
		$url: syra_url.formatMenuUrl(record, $save),
		content: content
	};
	syra_ajax.put({
		page: syra_ldp,
		url: sending.$url,
		data: sending,
		success: function(data, response, requestUrl) {
			if (!record.disposed && data.content) {
				(record.dataset.stdLayout = record.dataset.stdLayout || {}).content = data.content;
			}
		}
	});
};


exports.applyShortCut = function(shortcuts, event) {
	if (shortcuts.esc && syra_ldp.ldpRecord) {
		if (shortcuts.f5) {
			syra_ldp.ldpRecord.refreshBtn.link.click();
			return true;
		}
		if (shortcuts.insert || (shortcuts.n && !shortcuts.g)) {
			if (event.shiftKey) {
				syra_ldp.ldpRecord.addVignetteBtn.link.click();
			} else {
				syra_ldp.ldpRecord.addTabBtn.link.click();
			}
			return true;
		}
	}
};