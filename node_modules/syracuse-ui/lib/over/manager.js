"use strict";
var _overPanel = require('./overPanel');

var _autoClosePopup, _autoCloseTimeout, _autoCloseParentTimeout;
var _stack = [];

function _open(openerBox, options, $skin) {
	var over = _overPanel.open(openerBox, options, $skin);
	_stack.push(over);
	return over;
};

exports.openModal = function(openerBox, options) {
	return _open(openerBox, options);
};
exports.openPage = function(openerBox, options) {
	return _open(openerBox, options);
};

exports.openPopup = function(openerBox, options) {
	syra_tip.titleTip.hide();
	exports.closePopups(null, {
		target: options && options.picker
	});
	options.isModal = false;
	var over = _open(openerBox, options, "s-popup");
	if (!syra_context.testRobot && over.options.$isAutoClose && !over.options.$isAutoCloseTimeoutDisabled) {
		_autoClosePopup = over;
	}
	return over;

};
exports.checkPopupDisplay = function(target, onEnter) {
	if (onEnter) {
		if (syra_site.gpdc) {
			return;
		}
		if (_autoClosePopup && _autoClosePopup.overSlot) {
			var inPopup = (target == _autoClosePopup.overSlot) || _autoClosePopup.overSlot.contains(target);

			var parentPopup = (_stack.length > 1 && _stack[0].options.isParentPopup) ? _stack[0] : null;
			if (parentPopup) {
				if (inPopup) {
					parentPopup.setCloseTimer(true);
				} else {
					inPopup = target == parentPopup.overSlot || parentPopup.overSlot.contains(target);
					inPopup && parentPopup.setCloseTimer(false);
				}
			}

			var picker = _autoClosePopup.options.picker;
			if (!inPopup && picker) {
				inPopup = (target == picker) || picker.contains(target);
			}
			if (inPopup) {
				if (_autoCloseTimeout) {
					clearTimeout(_autoCloseTimeout);
					_autoCloseTimeout = null;
				}
			} else {
				if (!_autoCloseTimeout) {
					_autoCloseTimeout = setTimeout(function() {
						_autoClosePopup && _autoClosePopup.close();
						parentPopup && parentPopup.close();
						_autoClosePopup = _autoCloseTimeout = null;
					}, _autoClosePopup.options.autoCloseTimeout || 1000);
				}
			}
		}
	} else {
		syra_tip.titleTip.clear();
	}
};

exports.onClose = function(over) {
	if (_stack) {
		if (_autoClosePopup == over) {
			_autoCloseTimeout && clearTimeout(_autoCloseTimeout);
			_autoClosePopup = _autoCloseTimeout = null;
		}
		over.openerBox = over.openerPage = null;
		var index = _stack.indexOf(over);
		index >= 0 && _stack.splice(index, 1);
	}
};
exports.closeAll = function(box, dispose) {
	if (_stack) {
		for (var ii = 0, jj = _stack.length; ii < jj; ii++) {
			var over = _stack[ii];
			if (over && !over.disposed && over.openerBox == box) {
				over.openerBox = over.openerPage = null;
				if (!over.hasCallback) {
					_stack.splice(ii, 1);
					ii--;
					jj--;
					over.close(undefined, dispose);
				}
			}
		}
	}
};

exports.activateAll = function(box, isActivated) {
	if (_stack) {
		for (var ii = 0, jj = _stack.length; ii < jj; ii++) {
			var over = _stack[ii];
			if (!over.disposed && over.openerBox == box) {
				if (over._content) {
					exports.activateAll(over._content, isActivated);
				}
				over.activate(isActivated);
			}
		}
	}
};

exports.closePopups = function(box, event) {
	if (_stack) {
		if (syra_site.gpdc) {
			if (!event || !(event.type == "click" && event.shiftKey && event.ctrlKey)) {
				return;
			}
		}
		for (var ii = 0, jj = _stack.length; ii < jj; ii++) {
			var over = _stack[ii];
			if (over && over.options && over.options.$isAutoClose) {
				if (over._content && over._content == box) {
					continue;
				}
				if (!event || !(over.overSlot.contains(event.target) ||
					(over.options.autoCloseBoundary && over.options.autoCloseBoundary.contains(event.target)))) {
					if (!over.options.isParentPopup)
						over.close();
				}
			}
		}
	}
};

exports.resizePositioned = function(page) {
	if (_stack) {
		for (var ii = 0, jj = _stack.length; ii < jj; ii++) {
			var over = _stack[ii];
			if (!over.disposed && over.openerPage == page) {
				over.resize(null, true);
			}
		}
	}
};

exports.getMostOverPage = function() {
	if (_stack) {
		for (var ii = _stack.length - 1; ii >= 0; ii--) {
			if (_stack[ii].isOverPage) {
				return _stack[ii];
			}
		}
	}
	return null;
};

exports.dispose = function() {
	syra_tip.titleTip.clear();
	_autoClosePopup = _autoCloseTimeout = _stack = null;
};