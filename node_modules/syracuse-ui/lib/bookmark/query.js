"use strict";
var _helpers = require('syracuse-core').helpers;
var Sortable = require('syracuse-ui/lib/scroll/sortable').Sortable;

var _query;

Query.prototype.toggleEdit = function(isEditMode) {
	this.isEditMode = isEditMode;
	if (isEditMode) {
		for (var ii = 0, jj = _query.buttons.length; ii < jj; ii++) {
			var btn = _query.buttons[ii];
			var slot = syra_dom.div("s-bookmark-item-edit-actions");
			btn.edit = {
				slot: slot,
				reorder: _query.sortable.setNodeHandle(syra_dom.div("s-bookmark-item-edit-reorder", slot)),
				edit: syra_button.add({
					parent: btn,
					slot: slot,
					text: syra_local.bookmarks_edit_item,
					css: "s-bookmark-item-edit-action",
					iconOnly: true,
					fontIcon: "edit",
					click: function() {
						_editTitle(!this.parent.titleField, this.parent);
					}
				}),
				remove: syra_button.add({
					parent: btn,
					slot: slot,
					text: syra_local.flDelete,
					css: "s-bookmark-item-edit-action",
					iconOnly: true,
					fontIcon: "delete",
					click: this.removeMenu
				}),
				separator: syra_button.add({
					parent: btn,
					slot: slot,
					text: btn.dataset.$hasSeparator ? syra_local.bookmarks_delete_separator : syra_local.bookmarks_add_separator,
					css: "s-bookmark-item-edit-action",
					iconOnly: true,
					fontIcon: btn.dataset.$hasSeparator ? "remove_separator" : "add_separator",
					click: this.setSeparator
				})
			};
			btn.slot.insertBefore(slot, btn.link);
		}
	} else {
		for (var ii = 0, jj = _query.buttons.length; ii < jj; ii++) {
			var btn = _query.buttons[ii];
			if (btn.edit) {
				syra_dom.remove(btn.edit.slot);
				syra_site.disposeObject(btn.edit);
				delete btn.edit;
			}
		}
	}
	syra_button.setText(_query.editBtn, _query.isEditMode ? syra_local.bookmarks_edit_end : syra_local.bookmarks_edit_open);
	_query.popup.resize();
};

function _editTitle(edit, item) {
	if (edit) {
		if (!item.titleField) {
			syra_dom.hide(item.link, true);
			item.page = syra_site;
			item.titleField = syra_dom.addEditable("s-bookmark-item-edit-field", item.slot);
			syra_item.getMap()[item.titleField.syraItem = "bookmark-edit-" + item.id] = item;
			item.titleField.textContent = item.link.textContent;
			item.onFieldInputEvent = function(event) {
				switch (event.type) {
					case "focusin":
					case "focusout":
						var focusin = event.type == "focusin";
						if (!focusin) {
							if (this.titleField.textContent != this.dataset.title) {
								item.applyShortCut({
									enter: true
								});
							}
						}
						syra_dom.toggleClass(this.titleField, "s-focus", focusin);
						if (!focusin) {
							_editTitle(false, this);
						}
						break;
				}
			};
			item.applyEscape = function() {
				this.titleField.textContent = this.dataset.title;
				_editTitle(false, this);
			};
			item.isField = true; // for findField
			item.applyShortCut = function(shortcuts) {
				if (shortcuts.enter) {
					if (this.titleField.textContent) {
						this.dataset.title = this.link.textContent = this.titleField.textContent;
						_query.commit(_query.dataset, _query.buttons.indexOf(this));
					} else {
						this.titleField.textContent = this.dataset.title;
					}
					return true;
				}
			};
			item.titleField.focus();
		}
	} else {
		delete syra_item.getMap()["bookmark-edit-" + item.id];
		syra_dom.remove(item.titleField);
		delete item.titleField;
		syra_dom.hide(item.link, false);
		item.onFieldInputEvent = item.applyEscape = null;
	}
}

Query.prototype.removeMenu = function() {
	var btn = this;
	var item = btn.parent;
	syra_alert.ask({
		$title: btn.text,
		$message: syra_expression.parse(syra_site, syra_local.bookmarks_delete_confirm, item.dataset),
		yes: function() {
			var index = _query.buttons.indexOf(item);
			_query.dataset.items.splice(_query.dataset.items.indexOf(item.dataset), 1);
			_query.commit(_query.dataset, Math.min(index, _query.buttons.length - 1));
		}
	});
};
Query.prototype.setSeparator = function() {
	var item = this.parent;
	item.dataset.$hasSeparator = !item.dataset.$hasSeparator;
	syra_button.setText(this, item.dataset.$hasSeparator, item.dataset.$hasSeparator ? "remove_separator" : "add_separator");
	syra_dom.toggleClass(item.slot, "s-bookmark-item-separator", item.dataset.$hasSeparator);
	_query.commit(_query.dataset, _query.buttons.indexOf(item));
};

function _getActivePage() {
	return syra_fusion.getActivatedSheet() || syra_site.mainPage;
}

function Query(picker) {
	this.slot = document.createElement("aside");
	this.slot.className = "s-bookmarks s-over-popup";
	this.picker = picker;

	this.fusion = {
		map: {},
		get: function(urlSeg) {
			return this.map[urlSeg.fusionParams.fullCode];
		}
	};
	this.syracuse = {
		map: {},
		get: function(urlSeg) {
			var uri = urlSeg.uri;
			if (urlSeg.host) {
				uri = uri.slice(uri.indexOf(urlSeg.host) + urlSeg.host.length);
			}

			var menus = this.map[uri];
			if (menus) {
				for (var ii = menus.length - 1; ii >= 0; ii--) {
					var seg2 = menus[ii].urlSeg;
					if (!urlSeg.params && !seg2.params) {
						return menus[ii];
					} else {
						if (urlSeg.params && seg2.params) {
							var keys1 = Object.keys(urlSeg.params);
							var keys2 = Object.keys(seg2.params);
							if (keys1.length == keys2.length) {
								for (var mm = keys1.length - 1; mm >= 0; mm--) {
									if (urlSeg.params[keys1[mm]] != seg2.params[keys1[mm]]) {
										break;
									}
								}
								if (mm < 0) {
									return menus[ii];
								}
							}
						}
					}
				}
			}
		}
	};
}

Query.prototype.toggle = function(show) {
	var self = this;
	if (show !== false && !self.popup) {
		self.popup = syra_over.openPopup(syra_site, {
			slot: self.slot,
			picker: self.picker.link,
			position: {
				my: "left top",
				at: "left bottom",
				of: self.picker.link
			},
			close: function() {
				setTimeout(function() {
					self.popup = null;
				}, 200);
			}
		});
		if (!self.dataset) {
			self.fetch();
		} else {
			self.validateDisplay();
		}
	} else {
		self.popup && self.popup.close();
	}
};
Query.prototype.fetch = function(success) {
	var self = this;
	syra_ajax.get({
		page: syra_site.userProfile,
		url: syra_expression.parse(syra_site.userProfile, syra_site.userProfile.$menus.$bookmarks.$url),
		success: function(data, response, requestUrl) {
			if (!syra_site.userProfile.disposed) {
				self.dataset = data.content || {};
				self.fill();
				success && success();
			}
		}
	});
};

Query.prototype.addMenu = function() {
	var title, urlSeg, description;
	var page = syra_fusion.getActivatedSheet();
	if (page) {
		var fct = page.$fusionPageMeta.winModel.getFctName();
		if (fct.name && (page.$fusionPageMeta.winModel._mdata.type == 1 || page.$fusionPageMeta.winModel._mdata.type == 2)) {
			if (page.urlSeg.fusionParams.functionCode != fct.name) {
				urlSeg = syra_site.clone(page.urlSeg);
				syra_url.replaceFusionCode(urlSeg, fct.name);
				syra_url.build(urlSeg);
				title = page.getTitle();
			} else {
				urlSeg = page.urlSeg;
				title = fct.title;
			}
			description = syra_local.nvpFunction + ": " + page.urlSeg.fusionParams.functionCode;
		}
	} else {
		page = syra_site.mainPage;
		if (page && page.urlSeg) {
			urlSeg = page.urlSeg;
			title = page.getTitle();
			if (page.$prototype.$representation) {
				description = syra_local.nvpEntity + ": " + page.$prototype.$representation;
			}
		}
	}
	if (urlSeg) {
		var menuItem = this.find(urlSeg);
		if (menuItem) {
			this.dataset.items.splice(this.dataset.items.indexOf(menuItem), 1);
		} else {
			menuItem = {
				$url: urlSeg.$url,
				title: title
			};
			if (description) {
				menuItem.description = description;
			}
			this.dataset.items.push(menuItem);
		}
		this.commit();
	}
};

Query.prototype.commit = function(dataset, selectedIndex) {
	var self = this;
	self.dataset = dataset || self.dataset;
	//add MenuItem for compatibility
	var content = _helpers.object.clone(self.dataset, true);
	for (var ii = 0, jj = content.items.length; ii < jj; ii++) {
		var item = content.items[ii];
		content.items[ii] = {
			menuItem: item
		};
		delete item.urlSeg;
		delete item.urlSegment;
	}
	syra_ajax.put({
		page: syra_site.userProfile,
		url: syra_expression.parse(syra_site.userProfile, syra_site.userProfile.$menus.$bookmarks.$url),
		data: {
			$etag: self.dataset.$etag,
			content: content
		},
		success: function(data, response, requestUrl) {
			self.dataset = data.content || {};
			self.fill();
			if (selectedIndex != undefined && self.buttons[selectedIndex]) {
				syra_site.scrollToItem(self.buttons[selectedIndex].slot, self.ul, true);
			}
		}
	});
};

Query.prototype.onLinkClick = function(menuItem) {
	if (!syra_fusion.executeFusionFunc(menuItem, syra_fusion && syra_fusion.activatedBook)) {
		var target;
		syra_router.executeMenu({
			$url: menuItem.urlSeg.$url,
			target: target
		}, syra_site);
	}
	this.toggle(false);
};

Query.prototype.find = function(urlSeg) {
	if (this.buttons.length) {
		return (urlSeg.fusionParams ? this.fusion : this.syracuse).get(urlSeg);
	}
};

Query.prototype.fill = function() {
	var page = _getActivePage();
	syra_dom.remove(this.ul);
	this.sortable && this.sortable.dispose();
	this.reset();
	if (!this.addBtn) {
		this.addBtn = syra_button.add({
			parent: syra_site,
			slot: this.slot,
			text: syra_local.bookmarks_switch_on,
			css: "s-bookmarks-switch",
			click: function() {
				if (this.disableAddBookmarkText) {
					syra_alert.modal({
						$message: this.disableAddBookmarkText,
						$title: syra_local.site_btn_bookmark,
						$type: "warning"
					});
				} else {
					_query.addMenu();
				}
			}
		});
	}
	this.dataset.items = this.dataset.items || [];
	//clean MenuItem
	var items = [];
	for (var ii = 0, jj = this.dataset.items.length; ii < jj; ii++) {
		var item = this.dataset.items[ii];
		if (item && item.menuItem) {
			items.push(item.menuItem);
		}
	}
	this.dataset.items = items;

	this.ul = syra_dom.ul("s-bookmarks-items");
	this.sortable = new Sortable({
		root: this.ul,
		handle: "bookmarks",
		start: function(node) {
			this.moved = null;
			for (var ii = 0, jj = _query.buttons.length; ii < jj; ii++) {
				if (_query.buttons[ii].slot == node) {
					this.moved = _query.buttons[ii];
					break;
				}
			}
			return !!this.moved;
		},
		setDraggingText: function(node) {
			return this.moved.text;
		},
		end: function(node) {
			var index = syra_dom.getNodeIndex(node);
			syra_dataset.array.moveTo(_query.dataset.items, this.moved.dataset, index);
			syra_dataset.array.moveTo(_query.buttons, this.moved, index);
			_query.commit();

		}
	});
	this.ul.style.maxHeight = syra_site.size.popupMaxHeight + "px";
	var selectedEndpoint = syra_site.userProfile.dataset.selectedEndpoint;
	for (var ii = 0, jj = items.length; ii < jj; ii++) {
		var item = items[ii];
		if (item && item.$url) {
			var btn = syra_button.add({
				parent: syra_site,
				slot: syra_dom.li("s-bookmarks-item", this.ul),
				text: item.title || item.description || "???",
				title: item.description,
				css: "s-bookmarks-item-link",
				click: function() {
					!this.$isDisabled && exports.onLinkClick(this.dataset);
				},
				dataset: item
			});
			if (btn.dataset.$hasSeparator) {
				syra_dom.toggleClass(btn.slot, "s-bookmark-item-separator", true);
			}
			var seg = item.urlSeg = syra_url.parse(item.$url, true);
			if (seg.host) {
				//set relative url
				seg.isSyracuse = true;
				seg.uri = seg.uri.slice(seg.uri.indexOf(seg.host) + seg.host.length);
				seg.$url = seg.$url.slice(seg.$url.indexOf(seg.host) + seg.host.length);
				seg.host = null;
			}
			if (syra_url.replaceSegmentEndpoint(seg, selectedEndpoint, true)) {
				item.$url = syra_url.build(seg);
				btn.isBookmarkEnabled = true;
			} else {
				if (seg.endpointSeg && seg.endpointSeg.application == "syracuse" && seg.endpointSeg.contract == "collaboration") {
					btn.isBookmarkEnabled = true;
				}
			}
			if (seg.isFusion) {
				this.fusion.map[seg.fusionParams.fullCode] = item;
			} else {
				(this.syracuse.map[seg.uri] = this.syracuse.map[seg.uri] || []).push(item);
			}
			syra_url.history.setHref({
				$url: item.$url,
				domItem: btn.link
			});
			this.buttons.push(btn);
		}
	}
	this.slot.insertBefore(this.ul, this.editBtn && this.editBtn.link);

	var isHidden = !items.length;
	if (!this.editBtn) {
		this.editBtn = syra_button.add({
			parent: syra_site,
			slot: this.slot,
			isHidden: isHidden,
			text: syra_local.bookmarks_edit_open,
			css: "s-bookmarks-edit",
			click: function() {
				_query.toggleEdit(!_query.isEditMode);
			}
		});
	}
	syra_button.hide(this.editBtn, isHidden);
	this.validateDisplay();
	this.isEditMode && this.toggleEdit(true);
};


Query.prototype.validateDisplay = function() {
	var page = _getActivePage();
	var found, btnOn;
	if (page && !page.disposed) {
		var urlSeg;
		if (page.isFusionPage) {
			var functionfusion = page.$fusionPageMeta && page.$fusionPageMeta.winModel.getFctName();
			if (functionfusion) {
				urlSeg = {
					isFusion: true,
					fusionParams: {
						fullCode: functionfusion.name,
						functionCode: functionfusion.name,
						transaction: functionfusion.transaction
					}
				};
				if (functionfusion.transaction) {
					urlSeg.fusionParams.fullCode += "~" + functionfusion.transaction;
				}
			}
		} else {
			urlSeg = syra_url.history.getUrlSegment(page.urlSeg.$url);
		}
		found = urlSeg && this.find(urlSeg);
	}
	for (var ii = this.buttons.length - 1; ii >= 0; ii--) {
		var btn = this.buttons[ii];
		btn.bookMarkOn = btn.dataset == found;
		syra_dom.toggleClass(btn.link, "s-on", btn.bookMarkOn);
		syra_button.disable(btn, !btn.isBookmarkEnabled || ((page && page.isFusionPage) && !btn.dataset.urlSeg.isFusion));
		if (btn.bookMarkOn) {
			btnOn = btn;
		}
	}

	this.addBtn.disableAddBookmarkText = !btnOn && this._getDisableAddBookmarkText(page);
	syra_button.setText(this.addBtn, btnOn ? syra_local.bookmarks_switch_off : syra_local.bookmarks_switch_on);
	syra_dom.toggleClass(this.addBtn.link, "s-bookmarks-switch-on", !btnOn);
	syra_dom.toggleClass(this.addBtn.link, "s-bookmarks-switch-off", btnOn);
	btnOn && this.focus(btnOn);
};


Query.prototype._getDisableAddBookmarkText = function(page) {
	var text;
	if (this.buttons.length >= syra_config.bookmarksMax) {
		text = syra_local.bookmarks_max_items;
	} else
	if (page.isBookmarkDisable) {
		text = syra_local.bookmarks_page_disabled;
	} else
	if (page.$facet == "$edit" && !page.isFusionPage) {
		text = syra_local.bookmarks_facet_disabled;
	}
	return text;
};

Query.prototype.focus = function(btn) {
	if (!btn) {
		for (var ii = 0, jj = this.buttons.length; ii < jj; ii++) {
			if (!this.buttons[ii].$isDisabled) {
				btn = this.buttons[ii];
				break;
			}
		}
	}
	if (btn) {
		this.ul && syra_site.scrollToItem(btn.link, this.ul, true);
		btn.link.focus();
	}
};
Query.prototype.reset = function() {
	if (this.fusion) {
		this.fusion.map = {};
		this.syracuse.map = {};
		if (this.buttons) {
			for (var ii = 0, jj = this.buttons.length; ii < jj; ii++) {
				syra_button.dispose(this.buttons[ii]);
			}
		}
		this.buttons = [];
	}
};
Query.prototype.resize = function() {
	if (this.ul) {
		this.ul.style.maxHeight = syra_site.size.popupMaxHeight + "px";
	}
	this.popup && this.popup.resize();
};
Query.prototype.dispose = function() {
	this.reset();
	this.sortable && this.sortable.dispose();
	syra_site.disposeObject(this);
};



exports.open = function(picker) {
	if (!_query) {
		_query = new Query(picker);
	}
	_query.toggle();
};

exports.onLinkClick = function(menuItem) {
	_query && _query.onLinkClick(menuItem);
};

exports.focus = function(btn) {
	_query && _query.focus(btn);
};

exports.resize = function() {
	_query && _query.resize();
};

exports.dispose = function(btn) {
	_query && _query.dispose();
};