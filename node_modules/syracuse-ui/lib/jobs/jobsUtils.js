"use strict";

var locale = require('syracuse-core/lib/locale');

exports.startService = function($url){
    var reqOpt = {};
    reqOpt.noDisplayErr = true;
    reqOpt.method = "POST";
    reqOpt.$location = {
        $url: $url || "http://localhost:8126/sdata/sprint1/settings/sprint1/employees?representation=employee.$query&trackngId=1"
    };
    document.controller.sendRequest(null, reqOpt, onSuccess, onError);
}

function onSuccess(data, response, $url){

    var reqOpt = {};
    reqOpt.noDisplayErr = true;
    reqOpt.method = "GET";
    reqOpt.$location = {
        $url: response.headers.location
    }
    switch (response.status) {
        case 200: // operation is complete
            console.info("status : " + response.status);
            break;
        case 201:
            console.info(data.phase ? "Phase : " + data.phase + "\n" : "");
            console.info(data.phaseDetail ? "phaseDetail : " + data.phaseDetail + "\n" : "");
            console.info(data.progress ? "progress : " + data.progress + "\n" : "");
            console.info(data.elapsedSeconds ? "elapsedSeconds : " + data.elapsedSeconds + "\n" : "");
            console.info(data.remainingSeconds ? "remainingSeconds : " + data.remainingSeconds + "\n" : "");
            break;
        case 202: // 202 => server processes request asynchronously
            console.info(data.phase ? "Phase : " + data.phase + "\n" : "");
            console.info(data.phaseDetail ? "phaseDetail : " + data.phaseDetail + "\n" : "");
            console.info(data.progress ? "progress : " + data.progress + "\n" : "");
            console.info(data.elapsedSeconds ? "elapsedSeconds : " + data.elapsedSeconds + "\n" : "");
            console.info(data.remainingSeconds ? "remainingSeconds : " + data.remainingSeconds + "\n" : "");
            
            document.site.asyncOp = document.site.asyncOp || {};
            
            // getting id
            var id = response.headers.location.match(/'(.*?)'/)[1];
            
            if (!document.site.asyncOp[id]) {
                var pollingDelay = data.pollingMillis;
                document.site.asyncOp[id] = {};
                document.site.asyncOp[id].pollingDelay = pollingDelay;
                document.site.asyncOp[id].timeoutId = trackServiceProgress(reqOpt, onSuccess, onError, pollingDelay);
            }
            else {
                //	TODO updateProgressData(opt)
                var pollingDelay = document.site.asyncOp[id].pollingMillis;
                trackServiceProgress(reqOpt, onSuccess, onError, pollingDelay)
            }
            break;
    }
    
}

function onError(error, httpquery){
    var $diagnoses = error.data.$diagnoses;
    for (var ii = 0; ii < $diagnoses.length; ii++) {
        var diagnose = $diagnoses[ii];
        console.error(diagnose.message + "\n");
    }
}

function trackServiceProgress(reqOpt, onSuccess, onError, delay){
    return setTimeout(function(){
        document.controller.sendRequest(null, reqOpt, onSuccess, onError);
    }, delay);
}

function updateProgressData(opt){

}
