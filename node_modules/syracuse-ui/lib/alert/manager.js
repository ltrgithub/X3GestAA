"use strict";
var AlertDialog = require('syracuse-ui/lib/alert/alertDialog').AlertDialog;
var _alertPanel = require('syracuse-ui/lib/alert/alertPanel');

exports.dispose = function() {
	this._dialog && this._dialog.dispose();
	this._dialog = null;
};

exports.dialog = function(options) {
	this._dialog && this._dialog.dispose();
	options.$type = options.$type || "alert";
	this._dialog = new AlertDialog();
	this._dialog.$prototype = {};
	syra_item.initialize(syra_site, this._dialog, options);
	this._dialog.loadBox();
	return this._dialog;
};

exports.getDialog = function() {
	return this._dialog;
};


exports.ask = function(options) {
	options.$type = "question";
	return exports.dialog(options);
};

exports.clear = function(target) {
	exports.show(null, target);
};

exports.info = function(message, target, options) {
	exports.show(message, target, options, "info");
};
exports.warn = function(message, target, options) {
	exports.show(message, target, options, "warning");
};
exports.error = function(message, target, options) {
	exports.show(message, target, options, "error");
};
// $bind: $bind in article applychange if field is not loaded
// null, string ,$message, [$mesage], $diagnoses
exports.show = function(message, target, options, severity) {
	if (message !== undefined) {
		if (message) {
			if (message.$diagnoses === undefined) {
				if (!Array.isArray(message)) {
					if (typeof message == "string") {
						message = {
							$message: message
						};
					}
					message = [message];
				}
				for (var ii = 0, jj = message.length; ii < jj; ii++) {
					message[ii].$severity = message[ii].$severity || severity || "error";
				}
				message = {
					$diagnoses: message
				};
			}
			message.$diagnoses = message.$diagnoses.length ? message.$diagnoses : null;
		} else {
			message = {
				$diagnoses: null
			};
		}
		if (target && target.isField) {
			message.field = target = target.variantItem ? target.variantItem : target;
			if (target.isDiagnoseDisabled) {
				return;
			}
			target.showDiagnosSlot && target.showDiagnosSlot();
			target = target.boxParent;
			if (message.$diagnoses && target.forceVisibility) {
				target.forceVisibility();
			}
		}
		var page = target && target.page;
		if (page && page.diagnosePage) {
			page = page.diagnosePage;
		}
		if (!page || page.disposed) {
			page = syra_dlg.getTopDialogPage();
			page = page && page._content;
			if (!page || page.disposed) {
				page = syra_site.mainPage;
			}
		}
		if (page && !page.disposed && page != syra_site && page != syra_site.userProfile) {
			if (!page.alertPanel) {
				page.alertPanel = _alertPanel.add(page);
			}
			if (options) {
				message.$links = options.$links; //controller.form
				message.autoHide = options.autoHide; //sap window
				message.autoHide = options.noViewer;
			}
			page.alertPanel.showAlert(message, page);
		} else {
			if (message.$diagnoses) {
				var onlyOne = message.$diagnoses.length == 1 && message.$diagnoses[0];
				exports.box.show({
					$type: (onlyOne && onlyOne.$severity) || "alert",
					$buttons: "ok",
					$title: syra_local.siteMsgboxTitle,
					$diagnoses: onlyOne ? null : message.$diagnoses,
					$message: (onlyOne && onlyOne.$message) || syra_local.userProfile_siteMsgboxMsg,
					$origin: onlyOne ? onlyOne.$origin : "",
					$useLinkAsOk: (page && page == syra_site.userProfile) ? onlyOne && onlyOne.$links : null //temp hack
				});
			}
		}
	}
};