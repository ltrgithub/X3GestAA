"use strict";
var helpers = require('syracuse-core').helpers;
var Field = require('syracuse-ui/lib/field/field').Field;
var locale = require('streamline-locale');

function TextPlainField() {}

exports.TextPlainField = helpers.defineClass(TextPlainField, Field, {
	initialize: function() {
		this.$item.$rows = this.$item.$rows || 5;
		this.$lazyUrl = this.$field.$url && syra_expression.parse(this.articleParent, this.$field.$url);
		this.$contentType = this.$field.$type === 'application/x-document' && this.$field.$contentType || this.$field.$type;
	},

	getLazyUrl: function(value) {
		return syra_expression.parse(this.articleParent, value && value.$url || this.$field.$url);
	},

	setValue: function(value, metaData) {
		var self = this;
		self.$lazyUrl = self.getLazyUrl(value);
		if (self.$lazyUrl && value && typeof(value) === 'object') {
			self.$contentType = value.$contentType || (self.$field.$type === 'application/x-document' && self.$field.$contentType || self.$field.$type);
			syra_ajax.get({
				page: self.page,
				url: self.$lazyUrl,
				contentType: self.$contentType,
				accept: self.$contentType,
				success: function(data, response) {
					if (typeof(data) === 'string') {
						Field.prototype.setValue.call(self, data);
					} else {
						syra_fields.invalidate(self, locale.format(syra_local.fieldBadDataType, "string", typeof(data)));
					}
				}
			});
			this.applyMetaData(metaData);
			return;
		} else {
			Field.prototype.setValue.call(self, value);
		}
	},
	notifyFieldChange: function(newValue) {
		this.$lazyUrl = this.getLazyUrl();
		if (this.$lazyUrl) {
			syra_ajax.put({
				page: self.page,
				url: this.$lazyUrl,
				contentType: this.$contentType,
				accept: this.$contentType,
				data: newValue,
				success: function(data, response, requestUrl) {}
			});
			return false; //disable default notifyFieldChange
		}
		return true;
	}
});