"use strict";
var helpers = require('syracuse-core/lib/helpers');
var Field = require('syracuse-ui/lib/field/field').Field;
var formatApi = require('syracuse-ui/lib/field/formatApi');

var $discussion = {
	$items: [{
		$user: {
			$photo: "",
			$uuid: "saved",
			$login: "Sophie"
		},
		$createDate: "2014-11-07T13:34:22.508Z",
		$message: "bonjour Sophie"
	}, {
		$user: {
			$photo: "",
			$uuid: "saved",
			$login: "Laurent"
		},
		$createDate: "2014-11-07T13:34:22.508Z",
		$message: "bonjour Laurent"
	}, {
		$user: {
			$photo: "",
			$uuid: "saved",
			$login: "Dominique"
		},
		$createDate: "2014-11-07T13:34:22.508Z",
		$message: "bonjour Dominique"
	}]
};


function _addItem($item) {
	var item = document.createElement("div");
	item.className = "s-discus-item";

	var imgSlot = document.createElement("div");
	imgSlot.className = "s-discus-user";
	var img = document.createElement("div");
	img.className = "s-discus-user-img";
	if ($item.$user.$photo) {
		img.style.backgroundImage = "url('" + $item.$user.$photo + "')";
	}
	imgSlot.appendChild(img);
	item.appendChild(imgSlot);

	var right = document.createElement("div");
	right.className = "s-discus-right";
	item.appendChild(right);

	var name = document.createElement("div");
	name.className = "s-discus-user-name";
	name.textContent = $item.$user.$login;
	right.appendChild(name);


	var create = document.createElement("div");
	create.className = "s-discus-user-create";
	create.textContent = formatApi.utcToLocal($item.$createDate);
	right.appendChild(create);

	var message = document.createElement("div");
	message.className = "s-discus-user-message";
	message.textContent = $item.$message;
	right.appendChild(message);

	return item;
}

function DiscussionField() {}

exports.DiscussionField = helpers.defineClass(DiscussionField, Field, {
	ensureEditMode: function() {
		this.$isEditMode = false;
	},
	dispose: function() {
		Field.prototype.dispose.call(this);
	},
	initialize: function() {

	},
	render: function() {
		this.items = document.createElement("div");
		this.items.className = "s-discus-items";

		for (var ii = 0, jj = $discussion.$items.length; ii < jj; ii++) {
			this.items.appendChild(_addItem($discussion.$items[ii]));
		}
		this.domItem.appendChild(this.items);
		return true;
	},
	_createValueContainer: function() {
		this._core = this._dataValue = this.domItem;
	},
	setDataValue: function(value, $bind) {},
	getDataValue: function() {
		return "";
	},
	loadBox: function() {
		Field.prototype.loadBox.call(this);
	}
});