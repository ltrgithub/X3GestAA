"use strict";
var helpers = require('syracuse-core/lib/helpers');
var Field = require('syracuse-ui/lib/field/field').Field;
var formatApi = require('syracuse-ui/lib/field/formatApi');
var _datetime = require('syracuse-core/lib/types/datetime');

function _addItem($item) {
	var item = document.createElement("div");
	item.className = "s-discus-item";

	var imgSlot = document.createElement("div");
	imgSlot.className = "s-discus-user";
	var imgDefault = document.createElement("div");
	imgDefault.className = "s-discus-user-img-default";

	var url = "/sdata/syracuse/collaboration/syracuse/users('" + $item.user.uuid + "')/photo";
	var imgTmp = document.createElement("img");
	imgTmp.className = "s-discus-user-img";
	imgTmp.style.display = "none";
	imgTmp.onload = function() {
		imgDefault.style.display = "none";
		imgTmp.style.display = "";
	};
	imgTmp.src = url;
	imgSlot.appendChild(imgTmp);

	imgSlot.appendChild(imgDefault);
	item.appendChild(imgSlot);

	var right = document.createElement("div");
	right.className = "s-discus-right";
	item.appendChild(right);

	var name = document.createElement("div");
	name.className = "s-discus-user-name";
	name.textContent = $item.user.login;
	right.appendChild(name);


	var create = document.createElement("div");
	create.className = "s-discus-user-create";
	create.textContent = formatApi.utcToLocal($item.createDate);
	right.appendChild(create);

	var message = document.createElement("div");
	message.className = "s-discus-user-message";
	message.textContent = $item.message;
	right.appendChild(message);

	return item;
}


function _addEdit(field, slot) {
	field.input = document.createElement('textarea');
	field.input.className = "s-discus-exchange-input";
	slot.appendChild(field.input);
	field.saveLink = syra_menus.addTextButton("Add comment", "s-discus-exchange-link s-mn-inline-link", "onSaveMessageClick");
	field.saveLink.syraItem = field.id;
	slot.appendChild(field.saveLink);
	field.domItem.className += " s-discus-slot";
}

function DiscussionField() {}

exports.DiscussionField = helpers.defineClass(DiscussionField, Field, {
	ensureEditMode: function() {
		this.$isEditMode = false;
	},
	dispose: function() {
		Field.prototype.dispose.call(this);
	},
	initialize: function() {

	},
	onSaveMessageClick: function() {
		var self = this;
		if (self.input.value) {
			self.value = self.value || {
				items: []
			};

			var user = syra_site.userProfile.dataset.user;
			self.value.items.unshift({
				user: {
					uuid: user.$uuid,
					login: user.login,
					lastName: user.lastName
				},
				createDate: _datetime.now().toString("yyyy-MM-ddTHH:mm:ss") + "Z",
				message: self.input.value
			});
			var $url = this.page.openerUrlSegments.uri;
			/*
             syra_controller.sendRequest(self, {
             $location: {
             $url: $url.substr($url.indexOf("/sdata")) + "/discussionFeed",
             },
             data: self.value,
             method: "PUT"
             }, function(data, response, requestUrl){
             self.setDataValue(self.value);
             }); */
			syra_controller.sendRequest(self, {
				$location: {
					$url: "/discussionFeed/" + this.page.dataset.$uuid,
				},
				data: self.value,
				method: "PUT"
			}, function(data, response, requestUrl) {
				self.input.value = "";
				self.setDataValue(self.value);
			});
		}
	},
	render: function() {
		var exchange = document.createElement("div");
		exchange.className = "s-discus-exchange";
		_addEdit(this, exchange);
		this.items = document.createElement("div");
		this.items.className = "s-discus-items";

		this.domItem.appendChild(exchange);
		this.domItem.appendChild(this.items);
		return true;
	},
	_createValueContainer: function() {
		this._core = this._dataValue = this.domItem;
	},
	getDataValue: function() {
		return "";
	},
	onFieldInputEvent: function() {},
	setDataValue: function(value) {
		syra_site.dom.empty(this.items);
		if (value && !value.items) {
			value = null;
		}
		this.value = value;
		if (value && value.items) {
			for (var ii = 0, jj = value.items.length; ii < jj; ii++) {
				this.items.appendChild(_addItem(value.items[ii]));
			}
		}
	}
});