"use strict";
var helpers = require('syracuse-core/lib/helpers');
var Article = require("syracuse-ui/lib/article/article").Article;
//var RecordArticle = require("syracuse-ui/lib/field/array/record/recordArticle").RecordArticle;

function TabularChartRecord(){
};

/*exports.TabularChartRecord = helpers.defineClass(TabularChartRecord, Article, {
 ensureDataSet: function() {
 return this.dataset = this.articleParent.dataset[this.$serverIndex] || {};
 },
 drawBox: function() {
 this._menusBoxSlot = document.createElement("div");
 this._menusBoxSlot.style.display = "none";
 this.boxParent.$$container[0].appendChild(this._menusBoxSlot);
 this.page.loadNewItem($(this._menusBoxSlot), {
 $category: "links"
 }, this);
 },
 dispose: function() {
 delete this.page;
 if (this._menusBox) {
 document.controller.disposeObject(this._menusBox);
 delete this._menusBox;
 }
 Article.prototype.dispose.call(this);
 }
 });
 */
exports.TabularChartRecord = helpers.defineClass(TabularChartRecord, Article, {
    /*ensureDataSet: function(){
     return this.dataset = this.articleParent.dataset[this.$serverIndex] || {};
     }*/
    drawBox: function(){
        this._menusBoxSlot = document.createElement("div");
        this._menusBoxSlot.style.display = "none";
        this.page.loadNewItem($(this._menusBoxSlot), {
            $category: "menus",
            $isMenusBag: true
        }, this);
    },
    openMenuBox: function($links, event){
        var self = this;
        self.applyChange($links);
        if (!self._popupMenus) {
            if (!self._menusPopup) {
                self.menuPicker = document.createElement("div");
                self.menuPicker.style.position = "absolute";
                self._menusPopup = document.createElement("div");
                self._menusPopup.className = "s-field-menus-popup";
                self._menusPopup.appendChild(this._menusBoxSlot);
                self._menusBoxSlot.style.display = "";
            }
            self.menuPicker.style.top = event.pageY;
            self.menuPicker.style.left = event.pageX;
            self._popupMenus = self.openDialog({
                $dialogMode: "popup",
                content: self.boxParent,
                $$dialog: $(self._menusPopup),
                position: {
                    my: "left top",
                    at: "left bottom",
                    of: $(self.menuPicker)
                },
                onClose: function(){
                    self._popupMenus = null;
                    self._menusBoxSlot.style.display = "none";
                },
                autocCloseBoundary: "#" + self.boxParent.id
            });
        }
        else {
            self._popupMenus.close();
        }
    },
    dispose: function(){
        if (this._menusPopup) {
            $(this._menusPopup).remove();
            this._menusPopup = null;
        }
        Article.prototype.dispose.call(this);
    },
});
