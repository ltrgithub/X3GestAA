"use strict";
var helpers = require('syracuse-core/lib/helpers');
var Article = require("syracuse-ui/lib/article/article").Article;

function TabularChartRecord() {}

exports.TabularChartRecord = helpers.defineClass(TabularChartRecord, Article, {
	_clearMenuItems: function() {
		Article.prototype._clearMenuItems.call(this);
		if (this.menusBox) {
			this.menusSlot.style.display = "none";
			this.menusBox.layoutParent.removeItem(this.menusBox, true);
			this.removeMenuBag(this.menusBox);
			delete this.menusBox;
		}
	},
	onBoxToggled: function(box, isHidden) {
		if (box.id == (this.id + "-menu-picker")) {
			this.menusSlot.style.display = isHidden ? "none" : "";
		}
	},
	drawBox: function() {
		this.menusSlot = document.createElement("div");
		this.menusSlot.style.position = "absolute";
		this.menusSlot.style.display = "none";
		document.site.toggleClass(this.menusSlot, "s-record-actions", true);
		this.menusBox = this.page.loadNewItem(this.menusSlot, {
			$isMenusBag: true,
			$category: "menus",
			$title: "-",
			$isTitlePicker: true,
			$isBoxCollapsable: true,
			$isPopupContent: true,
			$clientId: this.id + "-menu-picker",
			$skin: "s-list-menus-record-menus"
		}, this);
		this.menusBox.contextField = this;
	},
	onMenuClick: function(menuItem) {
		return this._onGraphMenuClick ? this._onGraphMenuClick(menuItem) : true;
	},
	openMenuBox: function($links, event, onGraphMenuClick) {
		this.applyChange($links);
		this._onGraphMenuClick = onGraphMenuClick;
		this.menusSlot.style.top = event.pageY + "px";
		this.menusSlot.style.left = event.pageX + "px";
		this.menusBox.doOpenPicker();
		this.menusBox.$$body[0].style.top = event.pageY + "px";
		this.menusBox.$$body[0].style.left = event.pageX + "px";
	},
	dispose: function() {
		this._onGraphMenuClick = this.menusBox = null;
		Article.prototype.dispose.call(this);
	}
});