"use strict";
var helpers = require('syracuse-core/lib/helpers');


exports.appendQualityAtt = function(field, dom){
    dom.setAttribute("data-s-q-bind", field.$item.$bind);
    dom.setAttribute("data-s-q-title", field.getTitle());
    if (field.$field.$X3Name) {
        dom.setAttribute("data-s-q-x3Name", field.$field.$X3Name);
    }
};
exports.changeType = function($newType, oldField){
    var article = oldField.getArticleParent ? oldField.getArticleParent() : oldField.getArticle();
    var $oldField = article.$prototype.$properties[oldField.$item.$bind];
    if (typeof($newType) == "string") {
        $oldField.$type = $newType;
    }
    else {
        $oldField = $newType;
    }
    var newField = oldField.page.createNewItem(oldField.$item, oldField.boxParent);
	newField = oldField.layoutParent.appendNewItem(oldField.$item);
	
    oldField.layoutParent.appendNewItem({
        newItem: newField,
        load: oldField.$$item != null,
        targetItem: oldField,
        action: "insertAfter"
    });
    var boundFields = article.boundFields[newField.$item.$bind];
    boundFields.splice(boundFields.indexOf(newField), 1);
    boundFields.splice(boundFields.indexOf(oldField), 1, newField);
    article.removeItem(oldField, true);
};


exports.toggleEditMode = function(field, $isEditMode){
    if ($isEditMode === undefined) {
        $isEditMode = !field.$isEditMode;
    }
    if (field.$isEditMode != $isEditMode) {
        field.$isEditMode = field.$item.$isEditMode = $isEditMode;
        var $$newItem;
        if (field.$item.$inplace) {
            field.$$container.empty();
        }
        else {
            field.$$item.replaceWith($$newItem = $(document.createElement("div")));
        }
        field.releaseMode();
        field.loadBox($$newItem);
        
        field.setTitle(field.getTitle());
        field.setDescription(field.$description);
        field.setState(field);
        
        //field._restoreButtonValue();
    }
};

exports.applyFieldStyle = function(field, metaData){
    var target;
    if (metaData.$fieldStyle !== undefined || metaData.$valueStyle !== undefined) {
        target = field._input ? field._input : field._dataValue;
        if (field.page.$isFusionPage) {
            if (field.$valueStyle) {
                var curStyle = target.getAttribute("style") || "";
                target.setAttribute("style", curStyle.replace(field.$valueStyle, ""));
            }
            if (field.$valueStyle = metaData.$fieldStyle || metaData.$valueStyle) {
                var curStyle = target.getAttribute("style") || "";
                target.setAttribute("style", curStyle + ";" + field.$valueStyle);
            }
        }
        else {
            if (field.$valueStyle) {
                document.site.toggleClass(target, field.$valueStyle, false);
            }
            field.$valueStyle = (metaData.$fieldStyle || metaData.$valueStyle || "").replace("cst_sty_", "s-cst-sty-");
            document.site.toggleClass(target, field.$valueStyle, true);
        }
    }
    if (field.domTitle && (metaData.$fieldStyle !== undefined || metaData.$titleStyle !== undefined)) {
        if (field.page.$isFusionPage) {
            target = field._input ? field._input : field._dataValue;
            if (field.$titleStyle) {
                var curStyle = field.domTitle.getAttribute("style") || "";
                field.domTitle.setAttribute("style", curStyle.replace(field.$titleStyle, ""));
            }
            if (field.$titleStyle = metaData.$fieldStyle || metaData.$titleStyle || "") {
                var curStyle = target.getAttribute("style") || "";
                field.domTitle.setAttribute("style", curStyle + ";" + field.$titleStyle);
            }
        }
        else {
            if (field.$titleStyle) {
                document.site.toggleClass(field.domTitle, field.$titleStyle, false);
            }
            field.$titleStyle = (metaData.$fieldStyle || metaData.$titleStyle || "").replace("cst_sty_", "s-cst-sty-");
            document.site.toggleClass(field.domTitle, field.$titleStyle, true);
        }
    }
};
