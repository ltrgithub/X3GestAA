"use strict";
exports.appendQualityAtt = function(field, dom){
    dom.setAttribute("data-s-q-bind", field.$item.$bind);
    dom.setAttribute("data-s-q-title", field.titleText);
    if (field.$field.$X3Name) {
        dom.setAttribute("data-s-q-x3Name", field.$field.$X3Name);
    }
};
exports.changeType = function($newType, oldField){
    var article = oldField.getArticleParent ? oldField.getArticleParent() : oldField.getArticle();
    var $oldField = article.$prototype.$properties[oldField.$item.$bind];
    if (typeof($newType) == "string") {
        $oldField.$type = $newType;
    }
    else {
        $oldField = $newType;
    }
    var newField = document.itemFactory.create(oldField.$item, oldField.boxParent);
    oldField.layoutParent.appendNewItem({
        newItem: newField,
        load: oldField.$$item != null,
        targetItem: oldField,
        action: "insertAfter"
    });
    var boundFields = article.boundFields[newField.$item.$bind];
    boundFields.splice(boundFields.indexOf(newField), 1);
    boundFields.splice(boundFields.indexOf(oldField), 1, newField);
    article.removeItem(oldField, true);
};


exports.toggleEditMode = function(field, $isEditMode){
    if ($isEditMode === undefined) {
        $isEditMode = !field.$isEditMode;
    }
    if (field.$isEditMode != $isEditMode) {
        field.$isEditMode = field.$item.$isEditMode = $isEditMode;
        var $$newItem;
        if (field.$item.$inplace) {
            field.$$container.empty();
        }
        else {
            field.$$item.replaceWith($$newItem = $(document.createElement("div")));
        }
        if (field._$$buttons) {
            field._$$buttons.detach();
        }
        field.releaseMode();
        field.loadBox($$newItem);
        
        field.setTitle(field.titleText);
        field.setDescription(field.$description);
        field.setState(field);
        
        //field._restoreButtonValue();
    }
};

/********************** Diagnose Management  ***********************************************/
exports.drawDiagnose = function(field, $diagnose, severityGroup){
    var link = document.createElement("a");
    
    var label = document.createElement("label");
    label.className = "s-field-diagnose-msg-" + severityGroup.severity;
    
    if (field.isDiagnoseInPlace) {
        if (!field._diagnoseFlag) {
            field._diagnoseFlag = document.createElement("a");
            field._diagnoseFlag.className = "s-field-diagnose-flag-" + severityGroup.severity;
            field.appendToPickerBox(field._diagnoseFlag);
        }
        link.className = "s-field-diagnose-link s-field-diagnose-link-" + severityGroup.severity;
        label.innerHTML = document.site.formatHTMLMessage($diagnose.message);
        
        $(label).prepend($(link).text(field.$field.$title + ":")).appendTo(field.domDiagnose);
    }
    else {
        link.className = "s-diag-view-msg-link";
        severityGroup.drawLabel($diagnose).prepend($(link).text(field.$field.$title + ":")).appendTo(severityGroup.$$group);
        
        label.innerHTML = document.site.formatHTMLMessage($diagnose.message);
        field.domDiagnose.appendChild(label);
    }
    
    link.setAttribute("data-s-menu", field.id);
    link.setAttribute("data-s-article", field.articleParent.id);
    link.setAttribute("data-s-field", field.id);
};

exports.emptyDiagnoseSlot = function(field){
    if (field.domDiagnose) {
        document.site.emptyDom(field.domDiagnose);
        field.domDiagnose.style.visibility = "hidden";
        if (field._diagnoseFlag) {
            field._removeButtonToValue(field._diagnoseFlag);
            delete field._diagnoseFlag;
        }
    }
    
};
exports.ensureDiagnoseSlot = function(field){
    if (!field.domDiagnose) {
        field.domDiagnose = document.createElement("div");
        field.domDiagnose.className = "s-field-diagnose";
        if (field.$item.$inplace && field.articleParent.ensureFieldDiagnoseSlot) {
            field.isDiagnoseInPlace = true;
            field.articleParent.ensureFieldDiagnoseSlot(field);
        }
        else {
            field._core.appendChild(field.domDiagnose);
        }
    }
    else {
        document.site.emptyDom(field.domDiagnose);
    }
};

exports.showErrors = function(field, errors, options){
    field.applyMetaData({
        $diagnoses: null
    }, options);
    if (errors.length > 0) {
        field.applyMetaData({
            $diagnoses: (field.$displayedDiagnoses = errors.map(function(error){
                return {
                    message: error,
                    severity: "error"
                };
            }))
        }, options);
    }
};

exports.showDiagnoses = function(field, diagnoses, options){
    field.applyMetaData({
        $diagnoses: null
    }, options);
    if (diagnoses.length > 0) {
        field.applyMetaData({
            $diagnoses: diagnoses
        }, options);
    }
};

exports.toggleDiagnose = function(field, css, show){
    if (field._input) {
        document.site.toggleClass(field._input, css, show);
    }
    document.site.toggleClass(field._dataValue, css, show);
};
