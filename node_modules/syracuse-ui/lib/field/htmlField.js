"use strict";
var helpers = require('syracuse-core/lib/helpers');
var Field = require('syracuse-ui/lib/field/field').Field;

function HtmlField() {}

exports.HtmlField = helpers.defineClass(HtmlField, Field, {
	setDataValue: function(value) {
		this.currentValue = value;
		if (this.$isEditMode) {
			this.setInputValue(this.currentValue || "");
			// quick hack for lookup in regular field
			if (this.currentValue && typeof(this.currentValue) == 'object' && this.$item && this.$item.$bind) {
				// crnit: even quicker hack for filter fields where we might have $low and $high suffixes
				var b = this.$item.$bind.replace("$low", "").replace("$high", "");
				//
				this.setInputValue(syra_expression.parse(this.articleParent, "{" + b + "}", value));
				this.currentValue.$value = this.getDataValue();
			}
		} else {
			this.displayText = value;
			if (value && !this.$isDetailLinkDisabled && this.$menus && this.$menus.$details) {
				syra_fields.addDetailLink(this, value, this.$menus.$details);
			} else {
				if (this.$item.$rows) {
					this._dataValue.innerHTML = syra_dom.formatHTMLText(value);
				} else {
					if (this.$field.$format == '$html') {
						this._dataValue.innerHTML = value;
					} else {
						this._dataValue.textContent = value;
					}
				}
			}
		}
	}
});