"use strict";
var helpers = require('syracuse-core/lib/helpers');
var Field = require('syracuse-ui/lib/field/field').Field;

function HtmlField() {}

exports.HtmlField = helpers.defineClass(HtmlField, Field, {
	setDataValue: function(value, $bind) {
		this.currentValue = value;
		if (this.$isEditMode) {
			this.setInputValue(this.currentValue || "");
			// quick hack for lookup in regular field
			if (this.currentValue && typeof(this.currentValue) == 'object' && this.$item && this.$item.$bind) {
				// crnit: even quicker hack for filter fields where we might have $low and $high suffixes
				var b = this.$item.$bind.replace("$low", "").replace("$high", "");
				//
				this.setInputValue(document.site.expressionMaker.parse(this.articleParent, "{" + b + "}", value));
				this.currentValue.$value = this.getDataValue();
			}
		} else {
			document.site.emptyDom(this.fieldValue);
			if (value && !this.$isDetailLinkDisabled && this.$rootLinks.$links && this.$rootLinks.$links.$details) {
				this.appendDetailLink(value, this.$rootLinks.$links.$details);
			} else {
				if (this.$item.$rows) {
					this.fieldValue.innerHTML = document.site.formatHTMLMessage(value);
				} else {
					if (this.$field.$format == '$html') {
						this.fieldValue.innerHTML = value;
					} else {
						this.fieldValue.textContent = value;
					}
				}
			}
		}
	}
});