"use strict";
var helpers = require('syracuse-core/lib/helpers');
var Field = require('syracuse-ui/lib/field/field').Field;

function IconField() {}

exports.IconField = helpers.defineClass(IconField, Field, {
	setValue: function(value, metaData) {
		this.currentValue = value;
		if (value != null) {
			var $path = syra_site.$iconPath + (this.$icon.$path || "x3icons/");
			this.iconLink.style.backgroundImage = "url('" + $path + this.currentValue + ".png')";
		} else {
			this.iconLink.style.backgroundImage = "";
		}
		this.applyMetaData(metaData);
	},
	getValue: function() {
		return this.currentValue || "";
	},
	loadBox: function() {
		this.$item.$isEditMode = this.$item.$isEditMode || false;
		if (this.$item.$isTitleHidden == undefined) {
			this.$item.$isTitleHidden = true;
		}
		Field.prototype.loadBox.call(this);
	},
	setState: function(state) {
		syra_fields.setState(this, state);
		if (state.$isDisabled !== undefined) {
			syra_dom.disableItem(this.iconLink, this.$isDisabled);
		}
	},
	focus: function() {
		if (!this.$isHidden && !this.$isDisabled) {
			this.iconLink.focus();
			syra_fields.scrollToField(this);
			return true;
		}
		syra_fields.scrollToField(this);
		return false;
	},
	onInputFieldClick: function(event) {
		if (!this.isDesigning) {
			Field.prototype.onInputFieldClick.call(this, event);
		}
	},
	renderIcon: function(metaData) {
		if (!this.iconLink) {
			this.iconLink = document.createElement("a");
			this.iconLink.setAttribute("data-s-field-extra", this.id);
			if (metaData.$tooltip) {
				this.iconLink.syraTip = 2;
				this.iconLink.setAttribute("title", syra_expression.render(this.boxParent, metaData.$tooltip));
			}
			this.iconLink.style.width = this.$icon.$width || "16px";
			this.iconLink.style.height = this.$icon.$height || "16px";
			this._dataValue.appendChild(this.iconLink);
		}
		var css = "";
		if (this.$links = metaData.$links) {
			this.iconLink.setAttribute("href", "#");
			syra_dom.toggleClass(this._dataValue, "s-icon-link", this.iconLink != null);
			css = " s-icon-link";
			this.iconLink.syraOnClick = "onInputFieldClick";
		} else {
			syra_dom.toggleClass(this._dataValue, this.$skin + "-icon", true);
		}
		if (syra_site.isRTL) {
			css += " s-rtl-img ";
		}
		this.iconLink.className = this.$skin + "-value-icon s-icon-link " + css;
		if (this.$isDisabled !== undefined) {
			syra_dom.disableItem(this.iconLink, this.$isDisabled);
		}
		if (this.currentValue != null) {
			this.setValue(this.currentValue);
		}
	},
	render: function() {
		this.$icon = this.$item.$icon || {};
		this.renderIcon(this.$field);
	}
});