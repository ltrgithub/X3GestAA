"use strict";
var helpers = require('syracuse-core/lib/helpers');
var Field = require('syracuse-ui/lib/field/field').Field;

function IconField() {}

exports.IconField = helpers.defineClass(IconField, Field, {
	setDataValue: function(value) {
		this.currentValue = value;
		if (value != null) {
			var $path = syra_site.$item.$iconPath + (this.$icon.$path || "x3icons/");
			this.iconLink.style.backgroundImage = "url('" + $path + this.currentValue + ".png')";
		} else {
			this.iconLink.style.backgroundImage = "";
		}
	},
	getDataValue: function() {
		return this.currentValue || "";
	},
	loadBox: function() {
		this.$item.$isEditMode = this.$item.$isEditMode || false;
		if (this.$item.$isTitleHidden == undefined) {
			this.$item.$isTitleHidden = true;
		}
		Field.prototype.loadBox.call(this);
	},
	setState: function(state) {
		Field.prototype.setState.call(this, state);
		if (state.$isDisabled !== undefined) {
			syra_site.dom.disableItem(this.iconLink, this.$isDisabled);
		}
	},
	focus: function() {
		//Hack lv
		if (!this.$isHidden && !this.$isDisabled) {
			this.iconLink.focus();
			return true;
		}
		return false;
	},
	setMenus: function(metaData) {
		if (metaData.$links !== undefined) {
			this._renderIcon(metaData);
		}
	},
	onInputClick: function(input, event) {
		if (!this.$isDisabled) {
			if (this.articleParent.onIconFieldClick) {
				this.articleParent.onIconFieldClick(this);
			}
		}
	},
	_renderIcon: function(metaData) {
		this.iconLink = document.createElement("a");
		if (this.$links = metaData.$links) {
			this.iconLink.setAttribute("href", "#");
			syra_site.dom.toggleClass(this.fieldValue, "s-icon-link", this.iconLink != null);
			this.iconLink.className = this.$skin + "-value-icon s-icon-link";
			this.iconLink.syraOnClick = "onInputFieldClick";
		} else {
			syra_site.dom.toggleClass(this.fieldValue, this.$skin + "-icon", true);
			this.iconLink.className = this.$skin + "-value-icon";
		}

		this.iconLink.style.width = this.$icon.$width || "16px";
		this.iconLink.style.height = this.$icon.$height || "16px";
		if (this.$isDisabled !== undefined) {
			syra_site.dom.disableItem(this.iconLink, this.$isDisabled);
		}
		if (this.currentValue != null) {
			this.setDataValue(this.currentValue);
		}

		this.fieldValue.appendChild(this.iconLink);
	},
	render: function() {
		this.$icon = this.$item.$icon || {};
		this._renderIcon(this.$field);
	},
	dispose: function() {
		this.iconLink = null;
		Field.prototype.dispose.call(this);
	}
});