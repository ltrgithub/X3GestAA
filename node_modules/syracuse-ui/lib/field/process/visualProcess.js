"use strict";
var helpers = require('syracuse-core/lib/helpers');
var Process = require('syracuse-ui/lib/field/process/process').Process;
var ProcessPlayer = require('syracuse-ui/lib/field/process/processPlayer').ProcessPlayer;
var Field = require('syracuse-ui/lib/field/field').Field;

// require("syracuse-visual-process/lib/player/sagePlayer");

function VisualProcess() {}

exports.VisualProcess = helpers.defineClass(VisualProcess, Field, {
	_reportError: function(e) {
		this.showErrors([e.message + "\nat {" + e.stack + "}"]);
	},

	loadBox: function($$item) {
		Field.prototype.loadBox.call(this, $$item);
	},

	setDataValue: function(value) {
		try {
			// console.log('VisualProcess.setDataValue');
			if (this.currentValue != value) {
				this.currentValue = value;

				this.player.clear();
				this.player.loadProcess(value);
				this.player.show();
				this.page.onWindowResize();
			}
		} catch (e) {
			//console.error(e.stack);
			this._reportError(e);
		}
	},

	render: function() {
		try {
			if (this.$isEditMode) {
				throw new Error("Edit mode for Visual processes is not supported!");
			}
			var id = helpers.uuid.generate();
			this._dataValue.setAttribute("id", "vp" + id);
			this.player = new ProcessPlayer().init($(this._dataValue), this);
		} catch (e) {
			this._reportError(e);
		}
	},
	dispose: function() {
		try {
			Field.prototype.dispose.call(this);
			if (this.player) {
				this.player.dispose();
				this.player = null;
			}
		} catch (e) {
			this._reportError(e);
		}
	}
});