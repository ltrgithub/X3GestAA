"use strict";

exports.$defaultChoiceLayout = "row";

exports.focus = function(field) {
	if (field.$isEditMode && !field.$isHidden && !field.$isDisabled) {
		var index = 0;
		for (var ii = 0, jj = field._choices.length; ii < jj; ii++) {
			if (field._choices[ii].checked) {
				index = ii;
				break;
			}
		}
		field._choices[index].focus();
		return true;
	}
	return false;
};

exports.setDataValue = function(field, value) {
	field.currentValue = value;
	var oldSelected = field.$selectedEnum;
	field.$selectedEnum = field.findEnum(value);

	if (field.$isEditMode) {
		if (oldSelected) {
			syra_site.dom.toggleClass(field._choices[oldSelected.$index], "s-selected", false);
		}
		if (field.$selectedEnum) {
			syra_site.dom.toggleClass(field._choices[field.$selectedEnum.$index], "s-selected", true);
		}
	} else {
		var $title = field.$selectedEnum ? field.$selectedEnum.$title : "";
		field._dataValue.textContent = field.displayText = $title;
	}
};

exports.setEnum = function(field, $enum) {
	field.$enum = $enum;
	field.localizeEnum();
	if (field._choices && field._choices.length > 0) {
		exports.renderLayout(field);
	}
};

exports.dispose = function(field) {
	if (field) {
		field.getDataValue = field._fieldset = field.onChoiceClick = null;
	}
};

exports.render = function(field) {
	field.onChoiceClick = function(event, btn) {
		exports.setDataValue(this, this.$enum[btn.syraChoice].$value);
		syra_workingCopy.notifyFieldChange(this, this.getDataValue());
	};
	field.getDataValue = function(event) {
		return this.$selectedEnum ? this.$selectedEnum.$value : null;
	};
	exports.setEnum(field, field.$field.$value.$enum);
	field.$isEditMode && exports.renderLayout(field);
};

exports.renderLayout = function(field) {
	field.$item.$isAutoSizeDisabled = true;
	field._choices = [];
	var $skin = field.$skin + "-choice-btns";
	if (!field._fieldset) {
		field._fieldset = document.createElement("div");
		field._fieldset.syraItem = field.id;
		field._fieldset.className = $skin;
		field._dataValue.appendChild(field._fieldset);
	} else {
		syra_site.dom.empty(field._fieldset);
	}
	var isColLayout = field.$item.$choiceLayout != "row";
	var rows, curRow = 0,
		colCount, curCol = 0;
	if (isColLayout) {
		rows = [];
		colCount = field.$item.$choiceLayout;
		for (var ii = 0, max = Math.ceil(field.$enum.length / colCount); ii < max; ii++) {
			var row = document.createElement("div");
			row.className = "s-field-choice-btn-row";
			rows[ii] = field._fieldset.appendChild(row);
		}
	}
	var $skinItem = $skin + "-item";
	for (var ii = 0, jj = field.$enum.length; ii < jj; ii++) {
		var $enum = field.$enum[ii];
		var css = $skin + "-link";
		if (field.$item.$css) {
			css += " " + field.$item.$css;
		}
		var btn = syra_menus.addIconButton($enum.$title, css, "onChoiceClick");
		btn.syraChoice = ii;
		var rdItem = document.createElement("div");
		rdItem.className = $skinItem;
		if (field.$item.$css) {
			rdItem.className += " " + field.$item.$css;
		}
		rdItem.appendChild(btn);
		if (isColLayout) {
			rows[curRow].appendChild(rdItem);
			if (++curCol == colCount) {
				curRow++;
				curCol = 0;
			}
		} else {
			field._fieldset.appendChild(rdItem);
		}
		field._choices.push(btn);

		if (field.$item.$icon) {
			var $path = syra_site.$iconPath + (field.$item.$icon.$path || "");
			var image = $path + $enum.$value + ".png";
			var img = document.createElement("div");
			img.className = $skinItem + "-icon";
			img.style.backgroundImage = "url('" + image + "')";
			btn.syraOnClick = "onChoiceClick";
			btn.syraChoice = ii;
			btn.appendChild(img);
			if (field.$item.$icon.$mode == "icon") {
				img.className += " s-label";
				btn.className += " s-icon";
			} else {
				var label = document.createElement("div");
				label.className = $skinItem + "-label";
				label.textContent = $enum.$title;
				btn.className += " s-icon-label";
				btn.appendChild(label);
			}
		} else {
			btn.textContent = title;
		}
	}

	if (isColLayout && curCol > 0) {
		while (curCol < colCount) {
			var emptyItem = document.createElement("div");
			emptyItem.className = $skin + "-item";
			rows[curRow].appendChild(emptyItem);
			curCol++;
		}
	}
	rows = null;
};