"use strict";
var helpers = require('syracuse-core/lib/helpers');
var ReferenceField = require('./referenceField').ReferenceField;
var ChoiceField = require('syracuse-ui/lib/field/choice/choiceField').ChoiceField;
var Field = require('./field').Field;

function QuantityField(){
}

exports.QuantityField = helpers.defineClass(QuantityField, Field, {
    initialize: function(){
        var self = this;
        
        if (!self.$field.$unit) {
            self.showErrors(["no unit property specified"]);
            return;
        }
        
        // TODO loadNewItem + bind ?
        self.numField = new NumericField();
        
        // getting unit field
        var $unitField;
        switch (typeof self.$field.$unit) {
            case 'object': // unit descriptor is 'inlined' into quantity descriptor
                $unitField = this.$field.$unit;
                break;
            case 'string': // unit descriptor is at the same level, and can be shared by several quantity properties
                $unitField = self.page.$prototype.$properties[self.$field.$unit];
                break;
            default:
                self.showErrors(["no unit property specified"]);
                return;        }
        
        
        // set unit type field
        if ($unitField) {
            switch ($unitField.$type) {
                case "application/x-reference":
                    // TODO loadNewItem + bind ?
                    //self.unitField = new ReferenceField();
                    //self.page.loadNew
                    break;
                case "application/x-choice":
                    //self.unitField = new ChoiceField();
                    break;
                default:
                    self.showErrors(["wrong unit type. must be xreference or xchoice"]);
                    return;            }
            self.$unitFieldType = $unitField.$type;
        }
    }
});
