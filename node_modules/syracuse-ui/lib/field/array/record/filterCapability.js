"use strict";
var helpers = require('syracuse-core/lib/helpers');
var FilterRecord = require("./filter/filterRecord").FilterRecord;
var parser = require('syracuse-sdata/lib/parser/parser');
function FilterCapability(list){
    this.list = list;
}

exports.FilterCapability = helpers.defineClass(FilterCapability, null, {
    applyFilter: function(resource, where){
        var exp = parser.Parser.parse(where);
        // exp.children.forEach(function(child){
        //temp for test
        resource.dataRecordSet = resource.dataRecordSet.filter(function(record){
            return record[exp.children[0].value].search(new RegExp(exp.children[1].value.replace("%", "", "g"), "i")) >= 0;
        });
        //  });
        
        return resource;
    },
    validateIsQuickFilter: function(){
        var self = this;
        var isFilterCapability = Object.keys(self.list.$fieldProperties).some(function($bind){
            var $field = self.list.$fieldProperties[$bind];
            return (!$field.$isHidden && $field.$capabilities && ($field.$capabilities.indexOf("filter") >= 0));
        });
        // if ((!isFilterCapability && self.list.$item.$isQuickFilter) || (isFilterCapability && self.list.$item.$isQuickFilter === undefined && self.list.$facet == "$query")) {
        if ((!isFilterCapability && self.list.$item.$isQuickFilter) || (isFilterCapability && self.list.$item.$isQuickFilter === undefined)) {
            self.list.$item.$isQuickFilter = isFilterCapability;
        }
    },
    setWhere: function($where){
        if ($where !== undefined) {
            this.$where = $where;
        }
    },
    ensureQuickFilter: function(){
        if (this.list.$item.$isQuickFilter) {
            // && this.list.$facet != "$details"  tri client
            if (this.filterRecord) {
                this.filterRecord.drawBox();
            }
            else {
                (this.filterRecord = new FilterRecord()).loadRecord(this.list);
            }
        }
    },
    appendFieldCell: function($item, $field){
        if (this.filterRecord) {
            this.filterRecord.appendFieldCell($item, $field);
        }
    },
    appendEmptyCell: function(slot){
        if (this.filterRecord) {
            this.filterRecord.appendEmptyCell(slot);
        }
    },
    appendFlagCell: function(slot){
        if (this.filterRecord) {
            this.filterRecord.appendFlagCell(slot);
        }
    },
    dispose: function(){
        if (this.filterRecord) {
            this.list.removeItem(this.filterRecord);
            delete this.filterRecord;
        }
        delete this.list;
    }
});
