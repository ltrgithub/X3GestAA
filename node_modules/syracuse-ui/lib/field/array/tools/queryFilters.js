"use strict";

function _getLinkPrefix(list) {
	return list.id + "-filters-";
}

function _selectLink(list, $filterId, show) {
	if (show) {
		if (list.$selectedQueryFilter) {
			_selectLink(list, list.$selectedQueryFilter, false);
		}
		list.$selectedQueryFilter = $filterId;
	}
	var menu = list.page.getMenuItem(_getLinkPrefix(list) + $filterId);
	if (show && !menu && $filterId != "$noFilters") {
		_selectLink(list, "$noFilters", true);
	} else {
		menu && syra_site.dom.toggleClass(menu.domItem, "s-selected", show);
	}
}

exports.onFetch = function(list, $filterId) {
	_selectLink(list, $filterId, true);
};

exports.addLinks = function(list) {
	var $filters = list.page.$prototype.$filters;
	var menuBar = list.page.menuBar;
	if ($filters && menuBar) {
		var prefix = _getLinkPrefix(list);
		var $items = [];
		var $links = {};
		var $sourceBinds = Object.keys($filters);
		var params = list.page.getUrlParams();
		var selected = params && params.filter;
		for (var ii = 0, jj = $sourceBinds.length; ii < jj; ii++) {
			var $sourceBind = $sourceBinds[ii];
			var $filter = $filters[$sourceBind];
			if (!$filter.$isHidden && !$filter.$isMandatory) {
				var $bind = prefix + $sourceBind;
				$filter.$isQueryFilter = true;
				$items.push({
					$sourceBind: $sourceBind,
					$bind: $bind
				});
				$filter.$sourceBind = $sourceBind;
				$links[$bind] = $filter;
				if (!selected && $filter.$isDefault) {
					selected = $sourceBind;
				}
			}
		}
		if ($items.length) {
			var $noFilters = prefix + "$noFilters";
			$links[$noFilters] = {
				$title: syra_local.flNoFilter,
				$style: "nofilter",
				$isQueryFilter: true
			};
			$items.unshift({
				$sourceBind: "$noFilters",
				$bind: $noFilters
			});
			list.page.loadNewItem(menuBar.body, {
				$category: "menus",
				$ownerId: list.id,
				$skin: "s-mn-filters",
				$title: syra_local.flFilters,
				$layout: {
					$items: $items
				}
			}, list.page);
			syra_menus.setMenus(list.page, {
				$links: $links
			});
			_selectLink(list, selected || $noFilters, true);
			menuBar.toggleBar(menuBar.isSlotVisible = true);
			menuBar.ensureState();
		}
	}
};