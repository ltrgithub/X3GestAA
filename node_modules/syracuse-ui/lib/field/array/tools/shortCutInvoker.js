"use strict";

function _goToPage(list, isPageDown, isShift) {
	var pagerTop = list.pagging.pagerTop;
	if (pagerTop) {
		if (pagerTop.pages.length > 0) {
			// looking for the next page
			var currentIndex = Math.ceil(list.pagging.$startIndex / list.pagging.getItemsPerPage());
			var goToPage;
			if (isPageDown) {
				goToPage = isShift ? (pagerTop.pages.length - 1) : (currentIndex + 1);
			} else {
				goToPage = isShift ? 1 : (currentIndex - 1);
			}
			if (goToPage !== undefined) {
				goToPage = Math.min(Math.max(1, goToPage), pagerTop.pages.length - 1);
				pagerTop.pages[goToPage].click();
			}
			if (list.clientFetchOptions && list.records && list.records.length) {
				/* aurelien
                 var record = list.records[0];
                 if (record.rowIndexBtn) {
                 record.rowIndexBtn.click();
                 }*/
			}
		} else {
			if (pagerTop.pageSteps) {
				isPageDown ? syra_menus.click.next(list, event.shiftKey) : syra_menus.click.prev(list, event.shiftKey);
			}
		}
	}
}

exports.applyShortCut = function(list, shortcuts, event) {
	if (shortcuts["+"] || shortcuts["-"]) {
		if (list.treeDecorator) {
			if (event.shiftKey) {
				list.treeDecorator.openAll(shortcuts["+"]);
			} else {
				var record = list.getFocusRecord(!list.$item.$isNavigationList);
				if (record) {
					var node = list.treeDecorator._uuidNodes[record.$uuid];
					if (node.isOpened !== !! shortcuts["+"]) {
						record.treeNode.picker.click();
					}
					return true;
				}
			}
			return true;
		}
	}
	if (shortcuts.pagedown || shortcuts.pageup) {
		if (list.pagging) {
			_goToPage(list, shortcuts.pagedown, event.shiftKey);
			event.preventDefault();
			return true;
		}
	}
	if (shortcuts.enter || shortcuts.up || shortcuts.down) {
		_selectRecord(list, shortcuts);
		event.preventDefault();
		return true;
	}
	return false;
};

var _timeoutSelect;


function _selectRecord(list, shortcuts) {
	if (_timeoutSelect) {
		clearTimeout(_timeoutSelect);
		_timeoutSelect = null;
	}
	var focused = list.getFocusRecord(true);
	if (shortcuts.down || shortcuts.up) {
		var newFocused;
		if (focused) {
			var index = focused.getRecordIndex();
			if (list.treeDecorator) {
				index = list.treeDecorator.getPrevNextRecord(index, shortcuts.down);
			} else {
				if (shortcuts.down) {
					index = (index < list.clientDataset.length - 1) ? index + 1 : index;
				} else {
					index = index > 0 ? index - 1 : index;
				}
			}
			newFocused = list.records[index];
		} else {
			newFocused = list.records.length && list.records[0];
		}
		if (newFocused != focused) {
			list.setFocusRecord(focused = newFocused);
			if (list.scroller) {
				list.scroller.scrollToItem(focused.domItem);
			} else {
				list.page.scrollToItem(focused);
			}
		}
	}
	if (focused && focused.domItem) {
		//if (list.$item.$isNavigationList && !list.treeDecorator) {
		if ((shortcuts.enter || list.$item.$isNavigationList) && !list.treeDecorator) {
			_timeoutSelect = setTimeout(function() {
				focused.domItem.click();
			}, 200);
		}
		return true;
	}
}