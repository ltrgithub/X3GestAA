"use strict";

function _goToPage(list, isPageDown, isShift) {
	var pager = list.pagerTop;
	if (pager) {
		if (pager.pages.length > 0) {
			// looking for the next page
			var currentIndex = Math.ceil(list.pagging.$startIndex / list.pagging.getItemsPerPage());
			var goToPage;
			if (isPageDown) {
				goToPage = isShift ? (pager.pages.length - 1) : (currentIndex + 1);
			} else {
				goToPage = isShift ? 1 : (currentIndex - 1);
			}
			if (goToPage !== undefined) {
				goToPage = Math.min(Math.max(1, goToPage), pager.pages.length - 1);
				pager.pages[goToPage].click();
			}
			if (list.clientFetchOptions && list.records && list.records.length) {
				/* aurelien
                 var record = list.records[0];
                 if (record.rowIndexBtn) {
                 record.rowIndexBtn.click();
                 }*/
			}
		} else {
			if (pager.pageSteps) {
				var article = !list.$prototype.$isFieldPager ? list.page : list;
				isPageDown ? syra_menus.click.next(article, isShift) : syra_menus.click.prev(article, isShift);
			}
		}
	}
}

exports.applyShortCut = function(list, shortcuts, event) {
	if (shortcuts["+"] || shortcuts["-"]) {
		if (list.treeDecorator) {
			if (event.shiftKey) {
				list.treeDecorator.openAll(shortcuts["+"]);
			} else {
				var record = list.filler.getFocusRecord(list, !list.$item.$isNavigationList);
				if (record && record.treeNode) {
					if (record.treeNode.isOpened !== !! shortcuts["+"]) {
						record.treeNode.picker.click();
					}
				}
			}
			return true;
		}
	}
	if (shortcuts.pagedown || shortcuts.pageup) {
		if (list.pagging) {
			_goToPage(list, shortcuts.pagedown, event.shiftKey);
			event.preventDefault();
			return true;
		}
	}
	if (!list.isSingList && (shortcuts.enter || shortcuts.up || shortcuts.down)) {
		_selectRecord(list, shortcuts);
		event.preventDefault();
		return true;
	}
	return false;
};

var _timeoutSelect;


function _selectRecord(list, shortcuts) {
	if (_timeoutSelect) {
		clearTimeout(_timeoutSelect);
		_timeoutSelect = null;
	}
	var focused = list.filler.getFocusRecord(list, true);
	if (shortcuts.down || shortcuts.up) {
		var newFocused;
		if (focused) {
			var index = focused.getRecordIndex();
			if (list.treeDecorator) {
				index = list.treeDecorator.getPrevNextRecord(focused, shortcuts.down);
			} else {
				if (shortcuts.down) {
					index = (index < list.clientDataset.length - 1) ? index + 1 : index;
				} else {
					index = index > 0 ? index - 1 : index;
				}
			}
			newFocused = list.records[index];
		} else {
			newFocused = list.records.length && list.records[0];
		}
		if (newFocused != focused) {
			(focused = newFocused).setFocusRecord();
			focused.scrollToRecord();
		}
	}
	if (focused && focused.domItem) {
		if ((shortcuts.enter || list.$item.$isNavigationList) && !list.treeDecorator) {
			_timeoutSelect = setTimeout(function() {
				focused.domItem.click();
			}, 200);
		}
		return true;
	}
}