"use strict";
var helpers = require('syracuse-core/lib/helpers');
var PageDesigner = require("syracuse-ui/lib/authoring/pageDesigner").PageDesigner;

function CardDesigner() {}

exports.CardDesigner = helpers.defineClass(CardDesigner, PageDesigner, {
	drawBox: function() {
		this.noPageStorage = true;
		PageDesigner.prototype.drawBox.call(this);
		var slot = document.createElement("div");
		slot.className = "s-aw-page-wc";
		slot.appendChild(syra_menus.addIconButton(syra_local.aw_close, "s-aw-page-close", "onCloseDesignerClick", null, "close"));
		slot.syraItem = slot.syraarticle = this.id;
		this.layoutSlot.appendChild(slot);
		syra_site.dom.removeChild(this.viewsSlot);
		this.viewsSlot = null;
		this.cardTitle = document.createElement("div");
		this.cardTitle.className = "s-aw-carddesigner-title";
		var title = this.designedArticle.list.getTitle() || "";
		if (title.length) {
			title += " - ";
		}
		title += this.designedArticle.list.$item.$format == "grid" ? syra_local.aw_card_detail_title : syra_local.aw_card_card_title;
		this.cardTitle.textContent = title;
		this.leftTop.className += " s-aw-carddesigner-left-top";
		this.layoutSlot.insertBefore(this.cardTitle, this.leftTop.nextSibling);
		this.toogleOverLaySlots(true);
	},
	toogleOverLaySlots: function(show) {
		var ids = ["left", "top", "right", "bottom"];
		if (show) {
			this.overlays = {};
			for (var ii = 0, jj = ids.length; ii < jj; ii++) {
				var overlay = this.overlays[ids[ii]] = document.createElement("div");
				overlay.className = "s-aw-carddesigner-overlay";
				this.designedArticle.page.body.appendChild(overlay);
			}
		} else {
			if (this.overlays) {
				for (var ii = 0, jj = ids.length; ii < jj; ii++) {
					syra_site.dom.removeChild(this.overlays[ids[ii]]);
				}
				this.overlays = null;
			}
		}
	},
	resizeArticle: function(resize) {
		PageDesigner.prototype.resizeArticle.call(this, resize);
		if (this.overlays && this.designedArticle.domItem) {
			var offsetBody = this.designedArticle.page.body.getBoundingClientRect();
			var offsetCard = this.designedArticle.domItem.getBoundingClientRect();

			this.overlays.left.style.top = (offsetCard.top - offsetBody.top) + "px";
			this.overlays.left.style.left = 0;
			this.overlays.left.style.width = (offsetCard.left - offsetBody.left) + "px";
			this.overlays.left.style.height = offsetCard.height + "px";

			this.overlays.right.style.top = (offsetCard.top - offsetBody.top) + "px";
			this.overlays.right.style.right = 0;
			this.overlays.right.style.width = (offsetBody.right - offsetCard.right) + "px";
			this.overlays.right.style.height = offsetCard.height + "px";

			this.overlays.bottom.style.top = 0;
			this.overlays.bottom.style.left = 0;
			this.overlays.bottom.style.width = offsetBody.width + "px";
			this.overlays.bottom.style.height = (offsetCard.top - offsetBody.top) + "px";

			this.overlays.top.style.bottom = 0;
			this.overlays.top.style.left = 0;
			this.overlays.top.style.width = offsetBody.width + "px";
			this.overlays.top.style.height = (offsetBody.bottom - offsetCard.bottom) + "px";
		}
	},
	endArticleUpdate: function(selectedItem, isStructureUpdated) {
		PageDesigner.prototype.endArticleUpdate.call(this, selectedItem, isStructureUpdated);
		this.resizeArticle();
	},
	openDesigner: function(designedArticle) {
		designedArticle.$designLevel = "article";
		PageDesigner.prototype.openDesigner.call(this, designedArticle);
	},
	closeDesigner: function() {
		if (this.historyTool.isUpdated) {
			this.designedArticle.list.designer.endArticleUpdate();
		}
		this.designedArticle.list.designer.designCardItem(false, this.designedArticle);
	},
	reloadDesignedLayout: function($item) {
		var record = this.designedArticle;
		var cardDecorator = record.list.builder.cardDecorator;
		if (cardDecorator) {
			cardDecorator.isRowCardMode && cardDecorator.removeRecordCards();
		}
		var prevLayout = record.layoutContent && record.layoutContent.domItem;
		var fields = record.layoutContent.getFields();
		if (fields && fields.length) {
			record.reloadingFields = {};
			for (var ii = 0, jj = fields.length; ii < jj; ii++) {
				var field = fields[ii];
				if (field && field.$item && field.$item.$bind) {
					record.reloadingFields[field.$item.$bind] = field;
				}
			}
		}
		syra_site.layoutUpdater.extractItems(record.layoutContent, fields);
		syra_site.layoutUpdater.clearContent(record.layoutContent);
		record.$item = $item;
		record.ensureLayoutMode();
		record.renderLayoutContent();
		record.reloadingFields = null;

		syra_menus.setMenus(record, record.$prototype);
		syra_menus.setMenus(record, record.dataset);
		if (prevLayout) {
			syra_site.dom.removeChild(prevLayout);
		}
	},
	dispose: function() {
		this.toogleOverLaySlots(false);
		PageDesigner.prototype.dispose.call(this);
	}
});