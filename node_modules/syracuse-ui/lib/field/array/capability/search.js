"use strict";
var helpers = require('syracuse-core/lib/helpers');

function Search() {}

exports.Search = helpers.defineClass(Search, null, {
	load: function(list, slot) {
		this.list = list;
		this.domItem = document.createElement("div");
		this.domItem.style.display = "none";
		this.domItem.className = "s-list-search";
		slot.appendChild(this.domItem);
		var localize = this.list.localize;
		this._drawItemSearch();
		slot.appendChild(this.domItem);
		//this.domItem.style.display = (show !== false) ? "" : "none";
	},
	_drawItemSearch: function() {
		var self = this;
		if (this.list.localize.flSearch) {
			var label = document.createElement("label");
			label.className = "s-list-search-label";
			this.domItem.appendChild(label).textContent = this.list.localize.flSearch + ":";
		}

		var link = document.createElement("a");
		link.syraOnClick = "onSearchClick";
		link.setAttribute("href", "#");
		link.syraValue = "$searchCollapse";
		link.className = "s-list-search-picker-expend";
		this.domItem.appendChild(link);

		this._search = document.createElement("div");
		this._search.className = "s-list-search-value";
		this._search.style.display = "none";

		this._itemSearchField = this.list.page.loadNewItem(this.domItem.appendChild(this._search), {
			$bind: "$search",
			$category: "field",
			$isEditMode: true,
			$isBorderVisible: true,
			$inplace: true,
			$field: {
				$type: "application/x-string",
			}
		}, this.list);

		var div = document.createElement("div");
		div.className = "s-list-search-link";
		this._search.appendChild(div);
		var link = this._drawSearchLink("Next", "$searchNext");
		link.className = "s-list-search-next-link";
		div.appendChild(link);
		link = this._drawSearchLink("Previous", "$searchPrevious");
		link.className = "s-list-search-previous-link";
		div.appendChild(link);
	},
	_drawSearchLink: function(text, $bind) {
		var link = document.createElement("a");
		link.syraOnClick = "onSearchClick";
		link.setAttribute("href", "#");
		link.setAttribute("title", text);
		link.syraValue = $bind;
		return link;
	},
	toggle: function(show) {
		if (this.domItem) {
			this.domItem.style.display = (show !== false) ? "" : "none";
		}
	},
	toggleSearch: function(picker) {
		if (this._search) {
			if (this._search.style.display == "none") {
				this._search.style.display = "";
				picker.className = "s-list-search-picker-collapse";
				this._itemSearchField.focus();
			} else {
				this._search.style.display = "none";
				picker.className = "s-list-search-picker-expend";
			}
		}
	},
	clear: function() {
		if (this._itemSearchField) {
			this.list.removeItem(this._itemSearchField);
			delete this._itemSearchField;
		}
		syra_site.dom.removeChild(this.domItem);
		this.domItem = null;
	},
	dispose: function() {
		this.list = this.domItem = this._itemSearchField = this._search = null;
	}
});