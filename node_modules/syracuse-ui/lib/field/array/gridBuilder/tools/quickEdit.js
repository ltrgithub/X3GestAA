"use strict";
var helpers = require('syracuse-core/lib/helpers');

function QuickEdit() {}

helpers.defineClass(QuickEdit, null, {
	load: function(record, $itemPage) {
		this.list = record.list;
		if (this.list) {
			this.record = record;
			this.list.cardDecorator && this.list.cardDecorator.toggleRowCard(record, false);
			this.card = this.list.fomatter.builder.createCardRow(record);
			$itemPage.layoutSlot = this.card.contentSlot;
			$itemPage.inlinePageHost = this;
			this.resize();
			this.page = syra_site.pageLoader.load($itemPage);
		}

	},
	onInlinePageResized: function() {
		this.resize();
	},
	resize: function() {
		this.card.contentSlot.style.width = this.list._core.clientWidth + "px";
	},
	dispose: function() {
		this.page && this.page.dispose();
		this.card && syra_site.dom.removeChild(this.card.row);
		this.list = this.card = this.record = this.page = null;
	}
});

exports.toggle = function(record) {
	if (record.list.quickEdit) {
		var load = record.list.quickEdit.record != record;
		exports.dispose(record.list);
		if (!load) {
			return;
		}
	}
	//trigger action    
	var $mn = record.$menus.$quickEdit = helpers.object.clone(record.$menus.$edit, true);
	$mn.$target = "inline";
	syra_menus.click.menuId(record, $mn.$bind = $mn.$sourceBind = "$quickEdit");
};


exports.loadInlinePage = function(record, $itemPage, options) {
	record.list.quickEdit = new QuickEdit();
	record.list.quickEdit.load(record, $itemPage);
};
exports.disposeRecord = function(record) {
	if (record.list.quickEdit && record.list.quickEdit.record == record) {
		exports.dispose(list);
	}
};

exports.dispose = function(list) {
	list.quickEdit && list.quickEdit.dispose();
	list.quickEdit = null;
};