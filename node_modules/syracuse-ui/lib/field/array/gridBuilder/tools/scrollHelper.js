"use strict";
var _scrollColsTimeout, _btnStartTimer, _btnInterval;

function _showButtons(list, show) {
	if (show != list.scrollLeftBtn.syraIsDisplay) {
		show = list.scrollTable.hscroller.scrollWidth != list.scrollTable.hscroller.clientWidth;
		var display = (list.scrollLeftBtn.syraIsDisplay = show) ? "" : "none";
		list.scrollLeftBtn.style.display = display;
		list.scrollRightBtn.style.display = display;
	}
}

exports.moveButtons = function(list) {
	var buttonsRect = syra_site.dom.getBoundingClientRect(list._dataValue);
	var scrollRect = list.page.getScrollviewSize();
	var show;
	if (!(buttonsRect.top > scrollRect.top && buttonsRect.bottom < scrollRect.bottom)) {
		var bottom = (buttonsRect.bottom < scrollRect.bottom) ? buttonsRect.bottom : scrollRect.bottom;
		var top;
		if (buttonsRect.top > scrollRect.top) {
			top = (bottom - buttonsRect.top) / 2;
		} else {
			top = Math.abs(buttonsRect.top) + ((bottom - scrollRect.top) / 2);
		}
		list.scrollLeftBtn.style.top = top + "px";
		list.scrollLeftBtn.style.left = "-32px";
		list.scrollRightBtn.style.top = top + "px";
		list.scrollRightBtn.style.left = Math.min(list.scrollTable.bodyTable.clientWidth, list.scrollTable.bodySlot.clientWidth) + "px";
		show = true;
	}
	_showButtons(list, show);
};

function _clearButtonTimer() {
	_btnStartTimer && clearTimeout(_btnStartTimer);
	_btnInterval && clearInterval(_btnInterval);
	_btnInterval = _btnStartTimer = null;
}

function _scrollCols(list, left) {
	clearTimeout(_scrollColsTimeout);
	var records = list.records;
	var record = records.length ? records[0] : null;
	if (record) {
		_scrollColsTimeout = setTimeout(function() {
			var cells = record.domItem.children;
			var col, cell;
			var hrect = list.scrollTable.hscroller.getBoundingClientRect();
			var width = 0;
			var hWidth = list.scrollTable.hscroller.clientWidth;
			if (syra_site.isDocumentRTL) {
				left = !left;
				var lastVisible;
				for (var ii = cells.length - 1; ii >= 0; ii--) {
					var cell = cells[ii];
					var col = list.orderCols[ii];
					col.rect = cell.getBoundingClientRect();
					if (left) {
						if (col.rect.left > hrect.right) {
							list.scrollTable.hscroller.scrollLeft = width - hWidth;
							return;
						}
						width += col.rect.width;
					} else {
						if (col.rect.right && col.rect.right >= hrect.left) {
							ii++;
							while (ii < cells.length) {
								col = list.orderCols[ii];
								if (col.rect.width) {
									list.scrollTable.hscroller.scrollLeft = width - col.rect.width;
									return;
								}
								ii++;
							}
							return;
						}
						width += col.rect.width;
					}
				}
			} else {
				for (var ii = 0, jj = cells.length; ii < jj; ii++) {
					var cell = cells[ii];
					var col = list.orderCols[ii];
					col.rect = cell.getBoundingClientRect();
					if (left) {
						if (col.rect.right > 0) {
							list.scrollTable.hscroller.scrollLeft = width;
							return;
						}
						width += col.rect.width;
					} else {
						width += col.rect.width;
						if (col.rect.right && col.rect.right >= hrect.right) {
							list.scrollTable.hscroller.scrollLeft = width - hWidth;
							return;
						}
					}
				}
			}
		}, 20);
	}
}

function _bindEvents(list, bind) {
	var tb = list.scrollTable;
	if (bind) {
		tb.handlers = {
			hscroller: tb.hscroller.addEventListener("scroll", function(event) {
				event.stopPropagation();
				if (!syra_site.isInoutDisabled && list.page.isPageLoaded && !list.page._isDataChanging) {
					//syra_site.dialogManager.closePopups(list.page);
					tb.bodySlot.scrollLeft = this.scrollLeft;
					tb.headSlot.scrollLeft = this.scrollLeft;
				}
			}),
			bodySlot: tb.bodySlot.addEventListener("scroll", function(event) {
				if (tb.hscroller.scrollLeft != this.scrollLeft) {
					tb.hscroller.scrollLeft = this.scrollLeft;
				}
				event.preventDefault();
				event.stopPropagation();
				event.returnValue = false;
			}, false),
			headSlot: tb.headSlot.addEventListener("scroll", function(event) {
				if (tb.hscroller.scrollLeft != this.scrollLeft) {
					tb.hscroller.scrollLeft = this.scrollLeft;
				}
				event.preventDefault();
				event.stopPropagation();
				event.returnValue = false;
			}, false)
		};
	} else {
		if (tb.handlers) {
			tb.hscroller && tb.hscroller.removeEventListener("scroll", tb.handlers.hscroller);
			tb.bodySlot && tb.bodySlot.removeEventListener("scroll", tb.handlers.bodySlot);
			tb.headSlot && tb.headSlot.removeEventListener("scroll", tb.handlers.headSlot);
			delete tb.handlers;
		}
	}
}

exports.addButtons = function(list) {
	var show;
	if (list.page.scrollview && list.isScrollButtonEnabled !== false && !list.treeDecorator) {
		if (list.records.length > 20) {
			if (!list.scrollLeftBtn) {
				list.scrollLeftBtn = syra_menus.addIconButton("", "s-list-btn-scroll-prev", "onScrollButonClick");
				list.scrollRightBtn = syra_menus.addIconButton("", "s-list-btn-scroll-next", "onScrollButonClick");
				list.scrollLeftBtn.syraItem = list.scrollRightBtn.syraItem = list.id;
				list.scrollLeftBtn.syrainout = list.scrollRightBtn.syrainout = list.id;
				list._core.appendChild(list.scrollLeftBtn);
				list._core.appendChild(list.scrollRightBtn);
				syra_page.addScrollViewListener(list);
			}
			exports.moveButtons(list);
			return;
		}
	}
	list.scrollLeftBtn && _showButtons(list, show);
};


exports.onScrollButonClick = function(list, event, btn) {
	_clearButtonTimer();
	_scrollCols(list, btn == list.scrollLeftBtn);
};

exports.load = function(list) {
	list.setFixedBodyHeight(list.$item.$fixedBodyHeight);
	_bindEvents(list, true);
};

exports.onItemInOut = function(list, onEnter, event, target) {
	if (onEnter) {
		_btnStartTimer = setTimeout(function() {
			_btnInterval = setInterval(function() {
				list.scrollTable.hscroller && _scrollCols(list, target == list.scrollLeftBtn);
			}, 1000);
		}, 1000);
	} else {
		_clearButtonTimer();
	}
};

exports.dispose = function(list) {
	_clearButtonTimer();
	_bindEvents(list, false);
	list.scrollLeftBtn && syra_page.removeScrollViewListener(list);
	_scrollColsTimeout && clearTimeout(_scrollColsTimeout);
	_scrollColsTimeout = list.scrollLeftBtn = list.scrollRightBtn = null;
};