"use strict";
var helpers = require('syracuse-core/lib/helpers');

var _colReszing, _list, _startX, _clientWidth, _rightCol;

function _getStartX(col) {
	return col.rect[syra_site.isDocumentRTL ? "left" : "right"];
}

exports.setCursor = function(col, event) {
	if (!_list && col && col.rect) {
		_startX = _getStartX(col);
		if ((event.pageX >= (_startX - 4) && event.pageX <= (_startX + 4))) {
			if (_colReszing != col) {
				(_colReszing = col).titleCell.style.cursor = "e-resize";
			}
		} else {
			if (_colReszing == col) {
				col.titleCell.style.cursor = "";
				_colReszing = null;
			}
		}
	}
};

exports.isDraggable = function(list, col, event) {
	if (_colReszing == col) {
		syra_dd.dropableItem = {
			list: list
		};
		syra_dd.start(list, ColResizerDDAgent, list.scrollTable.titleRow);
		return true;
	}
};

function ColResizerDDAgent() {}

helpers.defineClass(ColResizerDDAgent, null, {
	start: function(dropItem) {
		_list = dropItem.list;
		var found = _list.scrollTable.cols.indexOf(_colReszing);
		if (found >= 0 && (found + 1) < _list.orderCols.length) {
			_rightCol = _list.scrollTable.cols[found + 1];
		}
		syra_dd.ddAgent = this;
		_clientWidth = _list.scrollTable.bodySlot.clientWidth;
	},
	onDragMouseMove: function(target, event) {
		var cursor = "not-allowed";
		if ((event.pageY >= (_colReszing.rect.top - 20)) && (event.pageY <= (_colReszing.rect.bottom + 20))) {
			var newWidth = _colReszing.colWidth + (syra_site.isDocumentRTL ? (_startX - event.pageX) : (event.pageX - _startX));
			if (newWidth > 50) {
				_colReszing.newWidth = newWidth;
				_list.setColWidth(_colReszing, newWidth + "px");
				cursor = "e-resize";
			}
			var widthTotal = 0;
			for (var ii = 0, jj = _list.scrollTable.cols.length; ii < jj; ii++) {
				widthTotal += (_list.scrollTable.cols[ii].newWidth || _list.scrollTable.cols[ii].colWidth);
			}
			_list.scrollTable.hscrollBody.style.width = widthTotal + "px";
			_list.scrollTable.hscroller.style.display = widthTotal <= _clientWidth ? "none" : "";
		}
		syra_site.layoutSlot.style.cursor = cursor;
	},
	onDragMouseUp: function(target, event) {
		var $items = _list.$item.$layout.$items;
		if (_colReszing.newWidth !== undefined) {
			_list.$userPreferences = _list.$userPreferences || {};
			_list.$userPreferences.$columnWidths = _list.$userPreferences.$columnWidths || {};
			delete _list.$userPreferences.$colWidths;
			_list.$userPreferences.$columnWidths[_colReszing.$item.$bind] = (_colReszing.colWidth = Math.round(_colReszing.newWidth)) + "px";
			_list.savePreferences(true, "$columnWidths");
			delete _colReszing.newWidth;
		}
		syra_site.layoutSlot.style.cursor = "default";
		_list.resizeArticle(true);
	},
	dispose: function() {
		_colReszing = _startX = _list = _rightCol = null;
	}
});