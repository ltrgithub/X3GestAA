"use strict";
var helpers = require('syracuse-core/lib/helpers');

function ColResizerDDAgent() {}

exports.ColResizerDDAgent = helpers.defineClass(ColResizerDDAgent, null, {
	start: function(dropItem) {
		this.resizer = dropItem.resizer;
		this.resizedCol = dropItem.resizedCol;
		this.builder = this.resizer.builder;
		document.site.ddManager.ddAgent = this;
		delete this.rightResizedCol;
		var $$titleCell = $(this.resizedCol.titleCell);
		var offset = $$titleCell.offset();
		this.left = offset.left;
		this.top = offset.top;
		this.height = $$titleCell.outerHeight();
		this.right = this.left + $$titleCell.outerWidth(true);
		this.bottom = this.top + this.height;
		this.startX = $(this.resizedCol.resizer).offset().left;
		this.resizedCol.resizer.style.cursor = this.cursor = "e-resize";

		if (this.builder.scroller.isProportionalWidth) {
			var resizedColIndex;
			for (var ii = 0, jj = this.builder.orderCols.length; ii < jj; ii++) {
				var col = this.builder.orderCols[ii];
				if (col.realWidth !== undefined) {
					col.widthValue = col.realWidth;
				}
				if (col == this.resizedCol) {
					resizedColIndex = ii;
				}
			}
			if (resizedColIndex != undefined) {
				if ((resizedColIndex + 1) < this.builder.orderCols.length) {
					this.rightResizedCol = this.builder.orderCols[resizedColIndex + 1];
					this.rightResizedCol.widthValue = $(this.rightResizedCol.titleCell).width();
				}
			}
		}
	},
	onDragMouseMove: function(target, event) {
		var cursor = "not-allowed";
		if ((event.pageY >= this.top) && (event.pageY <= this.bottom)) {
			var newWidth = this.resizedCol.realWidth + (event.pageX - this.startX);
			if (newWidth > 50) {
				this.resizedCol.groupHead.style.width = this.resizedCol.groupBody.style.width = (this.newWidth = newWidth) + "px";
				if (this.rightResizedCol) {
					this.rightResizedCol.groupHead.style.width = this.rightResizedCol.groupBody.style.width = (this.rightResizedCol.widthValue = this.rightResizedCol.realWidth - (event.pageX - this.startX)) + "px";
				}
				cursor = "e-resize";
			}
		}
		document.site.body.style.cursor = cursor;
	},
	onDragMouseUp: function(target, event) {
		this.resizedCol.widthValue = this.newWidth;
		this.builder.onColumnResized(this.resizedCol);
		this.startX = this.resizedCol = null;
		this.builder.onWindowResize();
		document.site.body.style.cursor = "default";
	},
	dispose: function() {
		this.resizer = this.builder = this.resizedCol = this.rightResizedCol = null;
	}
});