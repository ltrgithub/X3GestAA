"use strict";
var helpers = require('syracuse-core/lib/helpers');

function CardViewDecorator(){

}

exports.CardViewDecorator = helpers.defineClass(CardViewDecorator, null, {
    initialize: function(builder){
        var self = this;
        self.list = (self.builder = builder).list;
        self.list.$item.$cards.$category = self.list.$item.$cards.$category || "section"
        self.list.$item.$cards.$position = self.list.$item.$cards.$position || "inline";
        if (self.list.$item.$cards.$position != "inline") {
            if (self.list.$item.$selectMode && self.list.$item.$selectMode != "row") {
                self.list.$item.$cards.$position = "inline";
            }
            else {
                self.list.$item.$selectMode = "row";
            }
        }
        if (self.list.$item.$cards.$position != "inline") {
            self._wrapper = document.createElement("div");
            self._wrapper.className = "s-list-gridcard-slot";
            
            self.list._tableSlot = document.createElement("div");
            self.list._tableSlot.className = "s-list-gridcard-grid-slot";
            self._wrapper.appendChild(self.list._tableSlot);
            
            self._cardSlot = document.createElement("div");
            self._cardSlot.className = "s-list-gridcard-card-slot";
            
            if (self.list.$item.$cards.$position == "left" || self.list.$item.$cards.$position == "right") {
                self._wrapper.style.display = "table";
                self._wrapper.style.tableLayout = "fixed";
                self._wrapper.style.width = "100%";
                self.list._tableSlot.style.display = "table-cell";
                self._cardSlot.style.display = "table-cell";
                /*var widths = (self.list.$item.$cardsColumnWidth || "50,50").split(",");
                 self._cardSlot.style.width = widths[(self.list.$item.$cards.$position == "left") ? 0 : 1] + "%";
                 self.list._tableSlot.style.width = widths[(self.list.$item.$cards.$position == "left") ? 1 : 0] + "%";*/
                self._cardSlot.style.width = (self.list.$item.$cardsWidth || "50") + "%";
            }
            else {
                self._wrapper.style.display = "";
                self._wrapper.style.tableLayout = "";
                self._wrapper.style.width = "";
                self.list._tableSlot.style.display = "";
                self._cardSlot.style.display = "";
                self.list._tableSlot.style.width = "";
                self._cardSlot.style.width = "";
            }
            self.list._core.appendChild(self._wrapper);
            $(self._cardSlot)[(["left", "top"].indexOf(self.list.$item.$cards.$position) >= 0) ? "prependTo" : "appendTo"](self._wrapper);
        }
    },
    release: function(){
        if (this._wrapper) {
            $(this.list._core).append($(this.list._tableSlot).children());
            this.list._tableSlot = this.list._core;
            document.site.removeDomChild(this._wrapper);
            delete this._wrapper;
        }
    },
    onRecordDrawBox: function(recordArticle){
        if (this.list.$item.$cards.$position == "inline") {
            var th = document.createElement("td");
            th.className = this.builder.gridCss.cell + " s-list-cards-cell-opener";
            var btn = document.createElement("a");
            btn.className = "s-cardview-opener s-close";
            recordArticle.$$item.append($(th).append(recordArticle.$$cardsOpener = $(btn)));
        }
    },
    onOpenerClick: function($$opener, article){
        var self = this;
        var show = $$opener.hasClass("s-close");
        var $uuidList = (article.list) ? [article.$uuid] : Object.keys(article.recordsMap);
        $uuidList.forEach(function($uuid){
            self._toggleRecordCardview(self.list.recordsMap[$uuid], show);
        });
        document.site.toggleClass($$opener[0], "s-close", !show);
    },
    _toggleRecordCardview: function(record, show){
        record.$$cardsOpener.toggleClass("s-close", !show);
        if (!record._cardsSlot) {
            var td = document.createElement("td");
            td.className = record.boxParent.$skin + "-cards-cell";
            td.setAttribute("colspan", this.builder._orderCols.length);
            record._cardsSlot = document.createElement("tr");
            record._cardsSlot.setAttribute("data-s-record", record.$uuid);
            record._cardsSlot.setAttribute("data-s-article", record.id);
            record.$$item.after(record._cardsSlot);
            this._createCardView(record._cardsSlot.appendChild(td), record);
            
        }
        record._cardsSlot.style.display = show ? "" : "none";
    },
    _createCardView: function(slot, record){
        this.cardview = this.list.page.loadNewItem(slot, this.list.$item.$cards, record);
    },
    onRecordHighlightSelection: function(recordArticle, selected){
        if (this.list.$item.$cards.$position == "inline") {
            if (recordArticle._cardsSlot) {
                document.site.toggleClass(recordArticle._cardsSlot, "s-list-record-selected", selected);
            }
        }
        else {
            if (this.cardview) {
                recordArticle.removeItem(this.cardview, true);
                delete this.cardview;
            }
            if (selected) {
                this._createCardView(this._cardSlot, recordArticle);
            }
        }
    },
    onRecordRemove: function(recordArticle){
        if (recordArticle._cardsSlot) {
            document.site.removeDomChild(recordArticle._cardsSlot);
        }
    },
    dispose: function(){
        this.list = this.cardview = this.builder = null;
    }
});
