"use strict";
var helpers = require('syracuse-core/lib/helpers');
var Article = require("syracuse-ui/lib/article/article").Article;


function FilterRecord() {}

exports.FilterRecord = helpers.defineClass(FilterRecord, Article, {
	loadRecord: function(list) {
		this.list = list;
		this.isFilterArticle = this.isRecordArticle = true;
		this.$facet = "$filter";
		this.$isEditMode = true;
		this.$prototype = list.$prototype.$item;
		this.$prototype.$localization = list.page.$prototype.$localization;
		list.page.initializeNewItem(this, {
			$layout: {
				$items: list.$item.$layout.$items
			}
		}, list);
		this.loadBox();
	},
	//set focus on first field
	setFocus: function() {
		for (var ii = 0, jj = this.list.orderCols.length; ii < jj; ii++) {
			var col = this.list.orderCols[ii];
			if (col.$bind) {
				var field = this.boundFields[col.$bind] && this.boundFields[col.$bind][0];
				if (field && !field.$isHidden && !field.$isDisabled) {
					field.focus();
					break;
				}
			}
		}
	},
	drawBox: function() {
		this.fieldCells = {};
		this.domItem = this.dataRow = document.createElement("tr");
		this.list.scrollTable.headTable.appendChild(this.dataRow);
	},
	onNotifyDataChange: function(field, value) {
		return this.list.fomatter.filter.onNotifyDataChange(this, field, value);
	}
});