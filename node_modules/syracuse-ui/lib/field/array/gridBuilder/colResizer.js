"use strict";
var helpers = require('syracuse-core/lib/helpers');
function ColResizer(){
}

exports.ColResizer = helpers.defineClass(ColResizer, null, {
    setResizable: function(builder){
        var self = this;
        self.id = helpers.uuid.generate();
        self.isEnabled = true;
        self.cursor = "default";
        self.$$row = $(builder.titleRow);
        self.$$row.delegate("th[data-s-field-item]", "mousedown." + self.id, function(event){
            var $$targetCell = $(event.target);
            if (self.isEnabled && self.startX !== null) {
                self.targetCol = builder.cols[event.target.getAttribute("data-s-field-item")];
                self._startResize();
                return false;
            }
            else {
                var offset = $$targetCell.offset();
                self.startPosition = {
                    top: offset.top - event.pageY,
                    left: offset.left - event.pageX,
                };
                self.boundary = self.$$row.offset();
                self.boundary.right = self.boundary.left + document.site.$$body.width();
                self.boundary.bottom = self.boundary.top + self.$$row.height();
                // self._startDrag();
            }
            return false;
        }).delegate("th[data-s-field-item]", "mousemove." + self.id, function(event){
            if (self.isEnabled) {
                if (self.targetCol) {
                    self.onResize(event);
                    return false;
                }
                var $$targetCell = $(event.target);
                var offset = $$targetCell.offset();
                self.left = offset.left;
                self.top = offset.top;
                self.height = $$targetCell.outerHeight();
                self.right = self.left + $$targetCell.outerWidth(true);
                self.bottom = self.top + self.height;
                self.startX = event.pageX;
                if ((event.pageX <= (self.right + 2)) && (event.pageX >= (self.right - 2))) {
                    console.log(event.pageX + " L" +
                    self.left +
                    " R" +
                    (self.right + 2) +
                    " RR" +
                    (self.right - 2));
                    self.cursor = "e-resize";
                }
                else {
                    self.cursor = "default";
                    self.startX = null;
                }
                $$targetCell[0].style.cursor = self.cursor;
            }
        });
    },
    _startDrag: function(){
        var self = this;
        $(document).bind("mouseup." + self.id, function(){
            $(document).unbind("." + self.id);
            delete document.site.DDAuthoring;
        }).bind("mousemove." + self.id, function(event){
            var position = {
                top: (self.startPosition.top + event.pageY),
                left: (self.startPosition.left + event.pageX)
            };
            self.options.slot.style.top = position.top + "px";
            self.options.slot.style.left = position.left + "px";
            if (self.options.source) {
                self.options.source.draggedPosition = position;
            }
            event.preventDefault();
            return false;
        });
    },
    _startResize: function(){
        var self = this;
        $(document).bind("mouseup." + self.id, function(event){
            $(document).unbind("." + self.id);
            self.targetCol.widthValue = self.newWidth;
            self.startX = self.targetCol = null;
            document.site.body.style.cursor = "default";
            event.preventDefault();
            return false;
        }).bind("mousemove." + self.id, function(event){
            self.onResize(event);
            event.preventDefault();
            return false;
        });
        return true;
    },
    onResize: function(event){
        var cursor = "not-allowed";
        if ((event.pageY >= this.top) && (event.pageY <= this.bottom)) {
            var newWidth = this.targetCol.widthValue + (event.pageX - this.startX);
            if (newWidth > 50) {
                this.targetCol.groupHead.style.width = this.targetCol.groupBody.style.width = (this.newWidth = newWidth) + "px";
                cursor = "e-resize";
            }
        }
        document.site.body.style.cursor = cursor;
    },
    dispose: function(){
        if (this.$$row) {
            this.$$row.undelegate("." + this.id);
        }
        $(document).unbind("." + this.id);
        this.$$row = this.targetCol = null;
    }
});
