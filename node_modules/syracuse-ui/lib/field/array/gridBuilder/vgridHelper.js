"use strict";
var helpers = require('syracuse-core/lib/helpers');

exports.emptyBody = function(builder, addEmptySlot){
    builder._orderCols.forEach(function(col){
        var children = $(col.slot).children();
        var dataColsCount = children.length - builder.headerColsCount;
        if (dataColsCount) {
            for (var ii = builder.headerColsCount; ii < children.length; ii++) {
                $(children[ii]).remove();
            }
        }
    });
    if (addEmptySlot) {
        var emptySlot = document.createElement("td");
        emptySlot.className = builder.list.$skin + "-empty-slot";
        emptySlot.setAttribute("rowspan", builder._orderCols.length);
        builder._orderCols[0].slot.appendChild(emptySlot);
    }
};


exports.makeTitleRow = function(builder){
    var $$colgroup = $(builder._bodyColgroup).detach();
    builder.list.filterCapability.ensureQuickFilter();
    //builder.$columnsCount = 1 + (builder.list.$item.$isQuickFilter ? 1 : 0); //1 for title cell
    var css = builder.list.$skin + "-title-cell";
    if (builder.list.$item.$isRowIndexVisible) {
        builder._orderCols.push(builder._appendRowIndexCol(builder._body.appendChild(document.createElement("tr"))));
        builder.list.filterCapability.appendFlagCell(builder.cols.$rowIndex.slot);
    }
    if (!builder.list.$item.$isMenuRecordHidden) {
        builder._orderCols.push(builder._appendMenusBoxCol(builder._body.appendChild(document.createElement("tr"))));
        builder.list.filterCapability.appendEmptyCell(builder.cols.$menusBox.slot);
    }
    if (builder.list._store.selector.appendToTitle) {
        var col = builder._appendRecordSelectorCol(builder._body.appendChild(document.createElement("tr")));
        builder._orderCols.push(col);
        builder.list.filterCapability.appendEmptyCell(builder.cols.$recordSelector.slot);
    }
    //parseItems
    var $items = builder.list.$item.$layout.$items;
    for (var ii = 0, jj = $items.length; ii < jj; ii++) {
        var $item = $items[ii];
        var $field = builder.list.$fieldProperties[$item.$bind];
        if ($field && !$field.$isHidden && !$item.$isHidden) {
            var row = builder._body.appendChild(document.createElement("tr"));
            builder._orderCols.push(builder.appendFieldCol(row, $item, $field));
            builder.list.filterCapability.appendFieldCell($item, $field);
        }
    }
    
    
    builder.headerColsCount = 1;
    $$colgroup.empty();
    var col = builder._bodyColgroup.appendChild(document.createElement("col"));
    col.style.width = col.style.minWidth = "100px";
    if (builder.list.filterCapability.filterRecord) {
        builder.headerColsCount++;
        var col = builder._bodyColgroup.appendChild(document.createElement("col"));
        col.style.width = col.style.minWidth = "100px";
    }
    $$colgroup.prependTo(builder._bodyTable);
};
