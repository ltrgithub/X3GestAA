"use strict";
var _smartWidth = {
	charWidth: 8,
	small: 15, //10
	medium: 30, //20
	large: 50
};

var _widths = {
	"application/x-icon": {
		$width: 50
	},
	"application/x-date": {
		$maxLength: 10
	},
	"application/x-time": {
		$maxLength: 8
	},
	"application/x-datetime": {
		$maxLength: 20
	},
	"application/x-binary": {
		$width: 30
	},
	"image": {
		$width: 40
	}
};

exports.getCardFieldWidth = function($field) {
	var $width = ($field.$type && _widths[$field.$type]) || {};
	var widthValue = $width.$width;
	var $maxLength = 0;
	if ($field.$precision) {
		$maxLength = $field.$precision + 2 * ($field.$precision / 3); //separator
	}
	if ($field.$scale) {
		$maxLength += $field.$scale + 1; //for separator
	}
	if (!$maxLength) {
		$maxLength = $field.$displayLength || $field.$maxLength || $width.$maxLength;
	}
	$maxLength = $maxLength || _smartWidth.large;
	if ($maxLength <= _smartWidth.small) {
		$maxLength = _smartWidth.small;
	} else {
		if ($maxLength <= _smartWidth.medium) {
			$maxLength = _smartWidth.medium;
		} else {
			$maxLength = _smartWidth.large;
		}
	}
	widthValue = (_smartWidth.charWidth * $maxLength);
	return widthValue;
};


/************************************   Custom Style  ***********************************/
function _updateFusionStyle(field, saveKey, target, newStyle) {
	var previous = field[saveKey];
	if (previous) {
		//clean
		var domStyle = target.getAttribute("style");
		var domStyleParts = domStyle.split(";");
		for (var mm = 0, kk = domStyleParts.length; mm < kk; mm++) {
			domStyleParts[mm] = domStyleParts[mm].trim();
		}
		var previousParts = previous.split(";");
		for (var ii = 0, jj = previousParts.length; ii < jj; ii++) {
			if (previousParts[ii]) {
				var parts = previousParts[ii].split(":");
				if (parts.length > 0) {
					parts[0] = parts[0].trim();
					for (var mm = 0, kk = domStyleParts.length; mm < kk; mm++) {
						if (domStyleParts[mm].indexOf(parts[0]) == 0) {
							domStyleParts.splice(mm, 1);
							break;
						}
					}
				}
			}
		}
		target.setAttribute("style", domStyleParts.join(";"));
	}
	if (newStyle) {
		field[saveKey] = newStyle;
		target.setAttribute("style", (target.getAttribute("style") || "") + ";" + newStyle);
	} else {
		delete field[saveKey];
	}
}

exports.applyCustomStyle = function(field, metaData) {
	if (field.variantItem) {
		exports.applyCustomStyle(field.variantItem, metaData);
	} else {
		var target;
		var newStyle = metaData.$fieldStyle || metaData.$valueStyle;
		if (newStyle !== undefined) {
			target = field.input ? field.input : field._dataValue;
			if (field.page.isFusionPage) {
				_updateFusionStyle(field, "$valueStyle", target, newStyle);
			} else {
				if (field.$valueStyle) {
					syra_site.dom.toggleClass(target, field.$valueStyle, false);
				}
				syra_site.dom.toggleClass(target, (field.$valueStyle = (newStyle || "").replace("cst_sty_", "s-cst-sty-")), true);
			}
		}
		newStyle = metaData.$fieldStyle || metaData.$titleStyle;
		if (field.domTitle && newStyle !== undefined) {
			if (field.page.isFusionPage) {
				_updateFusionStyle(field, "$titleStyle", field.domTitle, newStyle);
			} else {
				if (field.$titleStyle) {
					syra_site.dom.toggleClass(field.domTitle, field.$titleStyle, false);
				}
				syra_site.dom.toggleClass(field.domTitle, (field.$titleStyle = (newStyle || "").replace("cst_sty_", "s-cst-sty-")), true);
			}
		}
	}
};

exports.getTypeFieldIcon = function($type) {
	var type = $type.replace("application/x-", "");
	switch (type) {
		case "decimal":
		case "integer":
		case "real":
		case "quantity":
			type = "number";
			break;
		case "cube":
			type = "graph";
			break;
		case "icon":
		case "binary":
		case "document":
			type = "image";
			break;
		default:
			if (type.indexOf("text/") >= 0) {
				type = "text";
			}
			break;
	}
	type = "field_" + type;
	if (!syra_menus.fontIcons[type]) {
		type = "field_string";
	}
	return type;
};


exports.appendQualityAtt = function(field, dom) {
	dom.setAttribute("data-s-q-bind", dom.syra_field_bind = field.$item.$bind || "");
	dom.setAttribute("data-s-q-title", dom.syra_field_title = field.getTitle());
	if (field.$field.$X3Name) {
		dom.setAttribute("data-s-q-x3Name", dom.syra_field_x3Name = field.$field.$X3Name);
	}
};