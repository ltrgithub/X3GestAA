"use strict";
var helpers = require('syracuse-core').helpers;

exports.setInputValue = function(field, val) {
	field.input.textContent = val;
	if (val == "" && field.$item.$isTitlePlaceHolder) {
		field.input.textContent = field.placeHolderText = field.getTitle();
		syra_dom.toggleClass(field.input, "s-placeholder", true);
	} else {
		delete field.placeHolderText;
		syra_dom.toggleClass(field.input, "s-placeholder", false);
	}
};

exports.getInputValue = function(field) {
	var val;
	val = field.input.textContent;
	if (field.placeHolderText && val == field.placeHolderText) {
		val = "";
	}
	return val;
};
exports.setState = function(field, state) {
	if (state.$isDisabled) {
		field.input.removeAttribute("contenteditable");
		delete field.input.syraOnClick;
	} else {
		field.input.setAttribute("contenteditable", "true");
		field.input.syraOnClick = "onInputFieldClick";
	}
};
exports.render = function(field) {
	field.input = document.createElement("div");
	field.input.setAttribute("contenteditable", "true");
	field.input.className = field.$skinInput + " s-contenteditable";
};
exports.onInputFocusin = function(field, input, event) {
	if (field.placeHolderText) {
		var val = field.input.textContent;
		if (val == field.placeHolderText) {
			field.input.textContent = "";
		}
	}
};
exports.onInputFocusout = function(field, input, event) {
	var val = field.input.textContent;
	if (val == "") {
		field.setInputValue("");
	} else {
		delete field.placeHolderText;
		syra_dom.toggleClass(field.input, "s-placeholder", false);
	}
};