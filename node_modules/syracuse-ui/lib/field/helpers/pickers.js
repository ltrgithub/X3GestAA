"use strict";

function _add(field, pickerId, cssId) {
	var picker = document.createElement("a");
	var css;
	if (field.$item.$css) {
		css = field.$item.$css + "-" + (cssId || pickerId);
	} else {
		css = "s-picker-" + (cssId || pickerId);
	}
	picker.className = (field.$item.$inplace ? "s-inplace-picker " : "s-field-picker ") + css;
	picker.syraOnClick = pickerId;
	if (field.$isDisabled || field.$isReadOnly) {
		picker.style.display = picker.syraDisplay = "none";
	} else {
		picker.syraDisplay = "";
	}
	if (field.input) {
		field.fieldValue.appendChild(picker);
	} else {
		field._dataValue.appendChild(picker);
	}
	return picker;
}

function _toggle(picker, syraDisplay) {
	if (picker && picker.syraDisplay != syraDisplay) {
		picker.style.display = picker.syraDisplay = syraDisplay;
	}
}

exports.addTunnel = function(field) {
	if (!field.tunnelPicker) {
		field.tunnelPicker = _add(field, "onTunnelClick", "tunnel");
		if (!field.$isDisabled && field.$isReadOnly) {
			picker.style.display = picker.syraDisplay = "";
		}
		field.tunnelPicker.setAttribute("title", syra_local.fieldTunnel);
	}
};
exports.clickTunnel = function(field) {
	if (field.tunnelPicker) {
		field.tunnelPicker.click();
	} else {
		field.menusHelper.clickMenu(field, "$tunnel");
	}
};

exports.addLookup = function(field) {
	if (!field.lookupPicker) {
		field.lookupPicker = _add(field, "onLookupClick", "lookup");
		field.lookupPicker.title = syra_local.fieldLookup;
	}
};

exports.addDateTime = function(field) {
	var selector = (field.$field.$type == "application/x-time") ? "time" : "date";
	(field.dateTimePicker = _add(field, "onDateTimePickerClick", selector)).syraSelector = selector;
};

exports.addChoice = function(field) {
	field.choicePicker = _add(field, "onChoiceClick", "choice");
};
exports.addLocalize = function(field) {
	field.localizePicker = _add(field, "onLocalizeClick", "localize");
	field.localizePicker.title = field.$rootLinks.$links.$localize.$title;
};

exports.addClear = function(field) {
	field.clearPicker = _add(field, "onClearClick", "clear");
};


exports.addMenu = function(field) {
	field.menusPicker = _add(field, "onMenuPickerClick", "menus");
};

exports.showMenu = function(field, show) {
	if (field.menusPicker) {
		if (show !== false) {
			show = field.$isEditMode || field.hasValue();
		}
		_toggle(field.menusPicker, show ? "none" : "");
	}
};


exports.addDiagnose = function(field, message) {
	if (!field.diagnosePicker && !syra_site.isTabletDevice) {
		field.diagnosePicker = document.createElement("a");
		field.diagnosePicker.className = "s-field-diagnose-flag-" + message.$diagnoses[0].$severity;
		if (field.input) {
			field.fieldValue.appendChild(field.diagnosePicker);
		} else {
			field._dataValue.appendChild(field.diagnosePicker);
		}
	}
};
exports.removeDiagnose = function(field) {
	if (field.diagnosePicker) {
		field.diagnosePicker.parentNode.removeChild(field.diagnosePicker);
		delete field.diagnosePicker;
	}
};


exports.applyState = function(field) {
	var syraDisplay = (field.$isDisabled || field.$isReadOnly) ? "none" : "";
	field.dateTimePicker && _toggle(field.dateTimePicker, syraDisplay);
	field.choicePicker && _toggle(field.choicePicker, syraDisplay);
	field.lookupPicker && _toggle(field.lookupPicker, syraDisplay);
	field.localizePicker && _toggle(field.localizePicker, syraDisplay);
	field.menusPicker && _toggle(field.menusPicker, syraDisplay);
	if (field.tunnelPicker) {
		if (field.$isReadOnly) {
			syraDisplay = "";
		}
		_toggle(field.choicePicker, syraDisplay);
	}
};

exports.highlight = function(field, on) {
	field.dateTimePicker && syra_site.dom.toggleClass(field.dateTimePicker, "s-enter", on);
	field.choicePicker && syra_site.dom.toggleClass(field.choicePicker, "s-enter", on);
	field.lookupPicker && syra_site.dom.toggleClass(field.lookupPicker, "s-enter", on);
	field.localizePicker && syra_site.dom.toggleClass(field.localizePicker, "s-enter", on);
	field.menusPicker && syra_site.dom.toggleClass(field.menusPicker, "s-enter", on);
};

exports.dispose = function(field) {
	field.diagnosePicker = field.dateTimePicker = field.tunnelPicker = field.choicePicker = field.lookupPicker = field.localizePicker = field.clearPicker = field.menusPicker = null;
};