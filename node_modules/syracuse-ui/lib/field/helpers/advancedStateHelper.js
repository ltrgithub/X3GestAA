"use strict";

function _ensureFieldVisibility(field) {
	if (field.variantItem) {
		_ensureFieldVisibility(field.variantItem);
	} else {
		field.showItem(!field.$isHidden && (!field.boxParent._hasAdvancedFields || field.boxParent._areAdvancedFieldsVisible));
	}
}

function _showFields(box, show) {
	box._areAdvancedFieldsVisible = show;
	if (box.isDesktopPage) {
		if (!box.isVignettePage) {
			box._advancedFieldsLink.textContent = box._advancedFieldsLink.title = box._areAdvancedFieldsVisible ? box.localize.box_advanced_hide : box.localize.box_advanced;
			syra_site.dom.toggleClass(box._advancedFieldsLink, "s-hide-advanced", box._areAdvancedFieldsVisible);
		}
	} else {
		if (box.vignette) {
			_showFields(box.vignette, box.vignette._areAdvancedFieldsVisible = box._areAdvancedFieldsVisible);
		}
		var picker = box.pickers && box.pickers.items && box.pickers.items.advanced;
		if (picker) {
			picker.title = (box._areAdvancedFieldsVisible) ? box.localize.box_advanced_hide : box.localize.box_advanced;
			syra_site.dom.toggleClass(picker, "s-hide-advanced", box._areAdvancedFieldsVisible);
		}
	}
	if (box.layoutContent) {
		var children = box.layoutContent.getItems();
		for (var ii = 0, jj = children.length; ii < jj; ii++) {
			var child = children[ii];
			if (child.isSection || child.vignette) {
				_showFields(child, box._areAdvancedFieldsVisible);
			} else {
				if (child.$item.$isAdvanced) {
					_ensureFieldVisibility(child);
				}
			}
		}
	}
	if (box.isDesktopPage) {
		box.ensurePageVisibility();
	}
}

function _togglePicker(box, show, designing) {
	if (show && box._hasAdvancedFields) {
		return; //adance pickers are already visible
	}
	if (box.isDesktopPage) {
		box._hasAdvancedFields = show;
		if (box.isVignettePage) {
			_togglePicker(box.vignetteField, show, designing);
		} else {
			if (!box._advancedFieldsSlot) {
				box._advancedFieldsSlot = document.createElement("div");
				box._advancedFieldsSlot.className = box.$skin + "-head-advanced-fields";
				box.headerCoreLeft.appendChild(box._advancedFieldsSlot);
				box._advancedFieldsLink = document.createElement("a");
				box._advancedFieldsLink.syraOnClick = "advanced";
				box._advancedFieldsLink.className = box.$skin + "-head-advanced-fields-link";
				box._advancedFieldsSlot.appendChild(box._advancedFieldsLink);
			}
			box._advancedFieldsLink.textContent = box._advancedFieldsLink.title = box._areAdvancedFieldsVisible ? box.localize.box_advanced_hide : box.localize.box_advanced;
			syra_site.dom.toggleClass(box._advancedFieldsLink, "s-hide-advanced", box._areAdvancedFieldsVisible);
			box._advancedFieldsSlot.style.display = box._hasAdvancedFields ? "" : "none";
		}
	} else {
		if (!show) {
			var items = box.layoutContent.getItems();
			for (var ii = 0, jj = items.length; ii < jj; ii++) {
				if (items[ii].$item.$isAdvanced) {
					return; //has advanced fields, can not hide box 
				}
			}
		}
		box._hasAdvancedFields = show;
		box.togglePicker("advanced", show);
		var picker = box.pickers && box.pickers.items && box.pickers.items.advanced;
		if (picker) {
			if (picker.parentNode.firstChild != picker) {
				picker.parentNode.insertBefore(picker, picker.parentNode.firstChild);
			}
			picker.title = (box._areAdvancedFieldsVisible) ? box.localize.box_advanced_hide : box.localize.box_advanced;
			syra_site.dom.toggleClass(picker, "s-hide-advanced", box._areAdvancedFieldsVisible);
		}
		if (box.boxParent) {
			_togglePicker(box.boxParent, show, designing);
		}
	}
};
exports.onAdvancedClick = function(box) {
	_showFields(box, !box._areAdvancedFieldsVisible);
};
exports.setAdvancedState = function(field, $isAdvanced, designing) {
	if (field.variantItem) {
		exports.setAdvancedState(field.variantItem, $isAdvanced, designing);
	} else {
		if (designing) {
			if ($isAdvanced) {
				field.$item.$isAdvanced = true;
			} else {
				delete field.$item.$isAdvanced;
			}

		}
		_togglePicker(field.boxParent, $isAdvanced, designing);
		_ensureFieldVisibility(field);
	}
};

exports.togglePicker = function(box, show, designing) {
	_togglePicker(box, show, designing);
};


exports.toggleAllFields = function(page, show) {
	if (page._advancedFieldsLink) {
		_showFields(page, show === undefined ? page._areAdvancedFieldsVisible : show);
	}
};