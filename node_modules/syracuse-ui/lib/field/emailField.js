"use strict";
var _helpers = require('syracuse-core').helpers;
var Field = require('syracuse-ui/lib/field/field').Field;

exports.EmailField = _helpers.defineClass(function() {}, Field, {
	initialize: function() {
		this.$inputType = "email";
		this.$isDetailLinkDisabled = true;
	},
	validateInput: function(errors, value) {
		if (value) {
			var atpos = value.indexOf("@");
			var dotpos = value.lastIndexOf(".");
			if (atpos < 1 || dotpos < atpos + 2 || dotpos + 2 >= value.length) {
				errors.push(syra_local.fieldEmailInvalid);
			}
		}
	},
	_createValueContainer: function() {
		if (!this.$isEditMode) {
			this._dataValue = document.createElement("a");
			this._dataValue.setAttribute("rel", "nofollow");
		}
		Field.prototype._createValueContainer.call(this);
		if (!this.$isEditMode) {
			this._dataValue.className = this._$cssField + "-value-read s-field-email";

		}
	},
	setDataValue: function(value) {
		this.currentValue = value;
		if (this.$isEditMode) {
			this.setInputValue(this.currentValue || "");
		} else {
			this.displayText = value;
			if (value) {
				this._dataValue.syraIsDefaultLink = true;
				this._dataValue.href = "mailto:" + value;
				this._dataValue.textContent = value;
				if (!this._iconFlag) {
					this._iconFlag = syra_menus.button.add({
						isIndicator: true,
						parent: this,
						iconOnly: true,
						css: " s-icon-email",
						fontIcon: "field_email"
					});
				}!this._iconFlag.link.parentNode && this._dataValue.insertBefore(this._iconFlag.link, this._dataValue.firstChild);
			} else {
				syra_menus.button.remove(this._iconFlag);
				this._dataValue.href = "";
				this._dataValue.textContent = value;
			}
			syra_menus.pickers.menus.show(this);
		}
	}
});