"use strict";
//http://www.openweb.eu.org/articles/formulaire_accessible
var helpers = require('syracuse-core/lib/helpers');
var _dateApi = require('syracuse-core/lib/types/date');
var MonthChoice = require('syracuse-ui/lib/field/datetimeSelectors/monthChoice').MonthChoice;
var YearChoice = require('syracuse-ui/lib/field/datetimeSelectors/yearChoice').YearChoice;

function DateSelector() {

}

exports.DateSelector = helpers.defineClass(DateSelector, null, {
	applyShortCut: function(shortcuts, event) {
		if (shortcuts.esc) {
			if (shortcuts.t) {
				this._currentDate = _dateApi.today();
				this._drawBody();
				return true;
			}
		}
		if (shortcuts.down || shortcuts.up || shortcuts.left || shortcuts.right) {
			if (event.shiftKey) {
				this._currentDate = this._currentDate.addMonths((shortcuts.up || shortcuts.left) ? -1 : 1);
			} else {
				if (event.ctrlKey) {
					this._currentDate = this._currentDate.addYears((shortcuts.up || shortcuts.left) ? -1 : 1);
				} else {
					if (shortcuts.down || shortcuts.up) {
						this._currentDate = this._currentDate.addDays(shortcuts.up ? -7 : 7);
					}
					if (shortcuts.left || shortcuts.right) {
						this._currentDate = this._currentDate.addDays(shortcuts.left ? -1 : 1);
					}
				}
			}
			this._drawBody();
			return true;
		}
		if (shortcuts.enter) {
			this._currentDateBtn && this._currentDateBtn.click();
			return true;
		}
	},
	onTodayClick: function() {
		this._currentDate = _dateApi.today();
		this.field.setButtonValue(_dateApi.fromInternalValue(this._currentDate._value).toString(this.field.localFormat), this._currentDate._value);
	},
	onDayClick: function(event, btn) {
		this.field.setButtonValue(_dateApi.fromInternalValue(btn.syraValue).toString(this.field.localFormat), btn.syraValue);
	},
	onQuickItemClick: function(event, btn) {
		var isBegin = syra_site.dom.getChildIndex(event.target) == 0;
		this._currentDate = this._currentDate[(isBegin ? "begOf" : "endOf") + btn.syraInterval]((btn.syraInterval == "Week") ? 1 : undefined);
		this._drawBody();
		this.quickList.style.display = "none";
	},
	onChangePeriode: function(event, btn) {
		if (btn.syraPeriod == "month") {
			this._currentDate = this._currentDate.addMonths(btn.syraIsPrev ? -1 : 1);
		} else
		if (btn.syraPeriod == "year") {
			this._currentDate = this._currentDate.addYears(btn.syraIsPrev ? -1 : 1);
		} else {
			this._currentDate = this._currentDate.addDays(btn.syraIsPrev ? -7 : 7);
		}
		this._drawBody();
	},
	onQuickClick: function() {
		if (!this.quickList) {
			this.quickList = document.createElement("nav");
			this.quickList.style.display = "none";
			this.quickList.className = "s-calendar-quick-list";
			var intervals = ["Year", "Quarter", "Month", "Week"];
			for (var ii = 0, jj = intervals.length; ii < jj; ii++) {
				var row = document.createElement("div");
				row.className = "s-calendar-quick";
				row.syraInterval = intervals[ii];
				row.syraOnClick = "onQuickItemClick";
				row.innerHTML = "<a class='s-calendar-quick-link'>" + syra_local.fdpBegin + "</a>/<a class='s-calendar-quick-link'>" + syra_local.fdpEnd + "</a>" + syra_local["fdpIntervalOf" + intervals[ii]];
				this.quickList.appendChild(row);
			}
			this.domItem.appendChild(this.quickList);
		}
		if (this.quickList.style.display == "") {
			this.quickList.style.display = "none";
		} else {
			this.quickList.style.display = "";
			$(this.quickList).position({
				my: "left bottom",
				at: "right bottom",
				of: $(this._quick)
			});
		}
	},
	create: function(field, options) {
		this.id = field.id + "dateselector";
		syra_store.add(this);
		this.domItem = document.createElement("div");
		this.domItem.className = "s-calendar";
		this.domItem.style.display = "none";
		field.domItem.appendChild(this.domItem);
		this.domItem.syraTool = this.id;
		this.domItem.syraarticle = field.page.id;
		if (options && options.internalValue) {
			this._selectedDate = isNaN(options.internalValue) ? _dateApi.today() : _dateApi.fromInternalValue(options.internalValue);
			this._currentDate = _dateApi.fromInternalValue(this._selectedDate._value);
		} else {
			var value = field.getInputValue() || "";
			this._selectedDate = value ? _dateApi.parse(value, field.localFormat) : _dateApi.today();
			this._currentDate = _dateApi.fromInternalValue(this._selectedDate._value);
		}
		this.field = field;
		this._table = document.createElement("table");
		this._table.setAttribute("cellspacing", 0);
		this._table.className = "s-calendar-content";
		this._table.appendChild(this._appendHead());
		this._table.appendChild(this.body = document.createElement("tbody"));
		this._table.appendChild(this._appendFoot());
		this.domItem.appendChild(this._table);

		this._drawBody();
	},
	remove: function() {
		syra_site.dom.removeChild(this.domItem);
		this.dispose();
	},
	_appendHead: function() {
		var head = document.createElement("thead");
		var row = document.createElement("tr");
		var cell = document.createElement("th");
		cell.setAttribute("colspan", 8);
		cell.className = "s-calendar-month-year";

		// prev year link

		var btn = syra_menus.addIconButton(syra_local.fdpPrevYear, "s-calendar-prev s-calendar-prev-year", "onChangePeriode", "CTRL + LEFT");
		btn.syraIsPrev = true;
		btn.syraPeriod = "year";
		cell.appendChild(btn);

		// prev month btn
		btn = syra_menus.addIconButton(syra_local.fdpPrevMonth, "s-calendar-prev s-calendar-prev-month", "onChangePeriode", "SHIFT + LEFT");
		btn.syraPeriod = "month";
		btn.syraIsPrev = true;
		cell.appendChild(btn);

		this._monthBtn = syra_menus.addIconButton(syra_local.fdpChoiceMonth, "s-calendar-month-year-link", "onMonthClick");
		cell.appendChild(this._monthBtn);

		this._yearBtn = syra_menus.addIconButton(syra_local.fdpChoiceYear, "s-calendar-month-year-link", "onYearClick");
		cell.appendChild(this._yearBtn);

		btn = syra_menus.addIconButton(syra_local.fdpNextMonth, "s-calendar-next s-calendar-next-month", "onChangePeriode", "SHIFT + RIGHT");
		btn.syraPeriod = "month";
		cell.appendChild(btn);

		btn = syra_menus.addIconButton(syra_local.fdpNextYear, "s-calendar-next s-calendar-next-year", "onChangePeriode", "CTRL + RIGHT");
		btn.syraPeriod = "year";
		cell.appendChild(btn);

		row.appendChild(cell);
		head.appendChild(row);

		row = document.createElement("tr");
		var cell = document.createElement("th");
		cell.className = "s-calendar-week-day";
		row.appendChild(cell);

		var days = [1, 2, 3, 4, 5, 6, 0];
		for (var ii = 0, jj = days.length; ii < jj; ii++) {
			var cell = document.createElement("th");
			cell.className = "s-calendar-week-day";
			cell.title = _dateApi.dayName(days[ii]);
			cell.textContent = _dateApi.dayName(days[ii], true);
			row.appendChild(cell);
		}
		head.appendChild(row);
		return head;
	},
	_appendFoot: function() {
		var row = document.createElement("tr");
		var cell = document.createElement("td");
		cell.setAttribute("colspan", 3);
		cell.className = "s-calendar-foot-week";

		var btn = syra_menus.addIconButton(syra_local.fdpPrevWeek, "s-calendar-prev", "onChangePeriode", "UP");
		btn.syraPeriod = "week";
		cell.appendChild(btn);

		var label = document.createElement("label");
		label.className = "s-calendar-foot-week-title";
		label.textContent = syra_local.fdpWeek;
		cell.appendChild(label);

		this._weekNumber = document.createElement("label");
		this._weekNumber.className = "s-calendar-foot-week-title-num";
		cell.appendChild(this._weekNumber);

		btn = syra_menus.addIconButton(syra_local.fdpNextWeek, "s-calendar-next", "onChangePeriode", "DOWN");
		btn.syraPeriod = "week";
		cell.appendChild(btn);
		row.appendChild(cell);

		cell = document.createElement("td");
		cell.setAttribute("colspan", 3);
		cell.className = "s-calendar-foot-today";
		btn = syra_menus.addTextButton(syra_local.fdpToday, "s-calendar-today-link", "onTodayClick", "ESC + T");
		cell.appendChild(btn);
		row.appendChild(cell);

		cell = document.createElement("td");
		cell.setAttribute("colspan", 2);
		cell.className = "s-calendar-foot-more";
		this._quick = syra_menus.addIconButton(syra_local.fdpQuickSelection, "s-calendar-quick-btn", "onQuickClick");
		cell.appendChild(this._quick);
		row.appendChild(cell);

		var foot = document.createElement("tfoot");
		foot.appendChild(row);
		return foot;
	},

	_drawBody: function() {
		var curMonth = this._currentDate.month;
		var month = _dateApi.monthName(curMonth);

		this._monthBtn.textContent = month;
		this._yearBtn.textContent = this._currentDate.year;

		syra_site.dom.empty(this.body);

		var curDate = _dateApi.fromInternalValue(this._currentDate._value);
		var begOfMonth = curDate = curDate.begOfMonth();
		curDate = curDate.begOfWeek(1);
		for (var weekRow = 0; weekRow < 6; weekRow++) {
			var row = document.createElement("tr");
			var weekDay = (weekRow == 0) ? begOfMonth : curDate;
			var cell = document.createElement("td");
			cell.className = "s-calendar-week-num";
			row.appendChild(cell);
			cell.textContent = weekDay.week;
			for (var day = 0; day < 7; day++) {
				var cell = document.createElement("td");
				cell.className = "s-calendar-day-link";
				cell.syraOnClick = "onDayClick";
				cell.syraValue = curDate._value;
				var btn = document.createElement("a");
				btn.textContent = curDate.day;
				if (curMonth != curDate.month) {
					cell.className += " s-calendar-other-month";
				}
				if (this._currentDate.equals(curDate)) {
					cell.className += " s-calendar-select";
					btn.className = "s-calendar-select";
					this._currentDateBtn = btn;
				}
				cell.appendChild(btn);
				row.appendChild(cell);
				curDate = curDate.addDays(1);
			}
			this.body.appendChild(row);
		}
		this._weekNumber.textContent = this._currentDate.week;
	},
	onMonthClick: function() {
		var self = this;
		if (!self._month) {
			self._month = new MonthChoice();
			self._month.create(self.field, self.domItem, self._currentDate, function(newDate) {
				self._currentDate = newDate;
				setTimeout(function() {
					self._drawBody();
					self.onMonthClick();
				}, 200);
				return true;
			});
			self._month.toggle(true);
		} else {
			self._month.toggle(false);
			self._month.dispose();
			delete self._month;
		}
	},
	onYearClick: function() {
		var self = this;
		if (!self._year) {
			self._year = new YearChoice(self.field);
			self._year.create(self.field, self.domItem, self._currentDate, function(newDate) {
				self._currentDate = newDate;
				setTimeout(function() {
					self._drawBody();
					self.onYearClick();
				}, 200);
				return true;
			});
			self._year.toggle(true);
		} else {
			self._year.toggle(false);
			self._year.dispose();
			delete self._year;
		}
	},
	dispose: function() {
		syra_store.remove(this);
		this._currentDateBtn = this.domItem = this._selectedDate = this._currentDate = this.field = this._table = this._quick = this.quickList = null;
	}
});