"use strict";
var helpers = require('syracuse-core/lib/helpers');
var _dateApi = require('syracuse-core/lib/types/date');

function MonthChoice() {

}

exports.MonthChoice = helpers.defineClass(MonthChoice, null, {
	create: function(field, parent, dateValue, close) {
		repository[this.id = (field.id + "montchoice")] = this;
		this.parent = parent;
		this.domItem = document.createElement("nav");
		this.domItem.className = "s-calendar-quick-list";
		this.domItem.syraTool = this.id;
		this.domItem.syraarticle = field.page.id;
		this._close = close;
		this._dateValue = dateValue;
		var tbody = document.createElement("tbody");
		for (var ii = 0; ii < 6; ii++) {
			var row = document.createElement("tr");
			row.appendChild(this.drawCell(ii + 1, _dateApi.monthName(ii + 1, true), this._dateValue.month));
			row.appendChild(this.drawCell(ii + 7, _dateApi.monthName(ii + 7, true), this._dateValue.month));
			tbody.appendChild(row);
		}
		this.domItem.appendChild(tbody);
		this.domItem.style.display = "none";
		this.parent.appendChild(this.domItem);
	},
	drawCell: function(value, text, selValue) {
		var td = document.createElement("td");
		td.className = "s-calendar-my-item";
		td.syraOnClick = "onMonthClick";
		td.syraValue = value;
		td.textContent = text;
		if (value == selValue) {
			td.className += " s-calendar-select";
			this.selectedCell = td;
		}
		return td;
	},
	toggle: function(show) {
		if (show) {
			this.domItem.style.display = "";
			$(this.domItem).position({
				my: "right top",
				at: "left top",
				of: $(this.parent)
			});
		} else {
			this.domItem.style.display = "none";
		}
	},
	onMonthClick: function(picker) {
		if (this.selectedCell) {
			this.selectedCell.className = "s-calendar-my-item";
		}
		(this.selectedCell = picker).className = "s-calendar-my-item s-calendar-select";
		this._selectedMonth = picker.syraValue;
		var month = this._selectedMonth ? this._selectedMonth : this._dateValue.month;
		this._dateValue = _dateApi.fromJsDate(new Date(this._dateValue.year, month - 1, this._dateValue.day));
		this._close(this._dateValue);
	},
	dispose: function() {
		delete repository[this.id];
		this.parent = this.domItem = this._dateValue = this._close = this.selectedCell = null;
	}
});