"use strict";
var helpers = require('syracuse-core/lib/helpers');
var _timeApi = require('syracuse-core/lib/types/time');

function TimeSelector() {

}

exports.TimeSelector = helpers.defineClass(TimeSelector, null, {
	create: function(field, options) {
		repository[this.id = (field.id + "timeselector")] = this;
		this.domItem = document.createElement("div");
		this.domItem.className = "s-time-choice";
		this.domItem.syraTool = this.id;
		this.domItem.syraarticle = field.page.id;
		this.domItem.style.display = "none";
		options = options || {};
		this.columns = options.columns || 3;
		this.interval = options.interval || 60;
		this.curTime = field.getInputValue() ? _timeApi.parse(field.getInputValue(), field.localFormat) : _timeApi.now();
		this.field = field;
		var cellCount = (24 * 60) / this.interval;
		var rowCount = cellCount / this.columns;

		var table = document.createElement("table");
		table.className = "s-time-choice-table";
		table.setAttribute("cellspacing", "0");
		table.setAttribute("cellpadding", "0");

		var row = document.createElement("tr");
		var cell = document.createElement("th");
		cell.className = "s-time-choice-th";
		cell.setAttribute("colspan", this.columns);
		cell.textContent = syra_local.fdpTitle;
		row.appendChild(cell);
		table.appendChild(row);
		var cellIndex = 0;
		var timeHour = _timeApi.parse("00:00:00");
		for (var rr = 0; rr < rowCount; rr++) {
			row = document.createElement("tr");
			for (var col = 0; col < this.columns; col++) {
				cell = document.createElement("td");
				cell.className = "s-time-choice-td";
				if (cellIndex < cellCount) {
					var link = document.createElement("a");
					link.className = "s-time-choice-a";
					link.syraOnClick = "onTimeClick";
					if (timeHour.hour == this.curTime.hour) {
						link.className += " s-time-select";
						this.selectedLink = link;
					}
					link.textContent = timeHour.toString(this.field.localFormat);
					cell.appendChild(link);
				}
				row.appendChild(cell);
				timeHour = timeHour.addMinutes(this.interval);
				cellIndex++;
			}
			table.appendChild(row);
		}
		this.domItem.appendChild(table);
	},
	onTimeClick: function(event, picker) {
		if (this.selectedLink) {
			this.selectedLink.className = "s-time-choice-a";
		}
		picker.className = "s-time-choice-a s-time-select";
		this.field.setPickerValue(picker.textContent);
	},
	remove: function() {
		syra_site.dom.removeChild(this.domItem);
		this.dispose();
	},
	dispose: function() {
		delete repository[this.id];
		this.domItem = this.field = this.selectedLink = null;
	}
});