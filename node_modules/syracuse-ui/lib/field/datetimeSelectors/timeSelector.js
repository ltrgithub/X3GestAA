"use strict";
var helpers = require('syracuse-core/lib/helpers');
var _timeApi = require('syracuse-core/lib/types/time');

function TimeSelector() {

}

exports.TimeSelector = helpers.defineClass(TimeSelector, null, {
	applyShortCut: function(shortcuts, event) {
		if (this._selectedBtn && shortcuts.down || shortcuts.up || shortcuts.left || shortcuts.right) {
			if (this._selectedBtn) {
				this._selectedBtn.className = "s-time-popup-a";
			}
			var newSel;
			if (shortcuts.down) {
				newSel = this._selectedBtn.nextSibling;
				if (!newSel) {
					newSel = this._selectedBtn.parentElement.nextSibling;
					if (!newSel || (this.title == newSel)) {
						newSel = this.cols[0].firstChild;
					} else {
						newSel = newSel.firstChild;
					}
				}
			}
			if (shortcuts.right) {
				newSel = this._selectedBtn.parentElement.nextSibling;
				var index = syra_site.dom.getIndex(this._selectedBtn);
				if (!newSel || (this.title == newSel)) {
					newSel = this.cols[0].childNodes[(++index) == this.cols[0].childNodes.length ? 0 : index];
				} else {
					newSel = newSel.childNodes[index];
				}
			}
			if (shortcuts.up) {
				newSel = this._selectedBtn.previousSibling;
				if (!newSel) {
					newSel = this._selectedBtn.parentElement.previousSibling;
					if (!newSel || (this.title == newSel)) {
						newSel = this.cols[this.cols.length - 1].lastChild;
					} else {
						newSel = newSel.lastChild;
					}
				}
			}
			if (shortcuts.left) {
				newSel = this._selectedBtn.parentElement.previousSibling;
				var index = syra_site.dom.getIndex(this._selectedBtn);
				if (!newSel || (this.title == newSel)) {
					var col = this.cols[this.cols.length - 1];
					newSel = col.childNodes[index == 0 ? (col.childNodes.length - 1) : --index];
				} else {
					newSel = newSel.childNodes[index];
				}
			}
			if (newSel) {
				(this._selectedBtn = newSel).className = "s-time-popup-a s-time-select";
			}
			return true;
		}
		if (shortcuts.enter) {
			this._selectedBtn && this._selectedBtn.click();
			return true;
		}
	},
	create: function(field, options) {
		this.id = field.id + "timeselector";
		syra_store.add(this);
		this.domItem = document.createElement("div");
		this.domItem.className = "s-time-popup";
		this.domItem.syraTool = this.id;
		this.domItem.syraarticle = field.page.id;
		this.domItem.style.display = "none";
		options = options || {};
		this.columns = options.columns || 3;
		this.interval = options.interval || 60;
		this.curTime = field.getInputValue() ? _timeApi.parse(field.getInputValue(), field.localFormat) : _timeApi.now();
		this.field = field;
		var cellCount = (24 * 60) / this.interval;

		this.title = document.createElement("label");
		this.title.className = "s-time-popup-title";
		this.title.textContent = syra_local.fdpTitle;
		this.domItem.appendChild(this.title);
		this.cols = [];
		for (var ii = 0; ii < this.columns; ii++) {
			var col = document.createElement("div");
			col.className = "s-time-popup-col";
			this.cols.push(this.domItem.appendChild(col));
		}
		var timeHour = _timeApi.parse("00:00:00");
		var colIndex = 0;
		for (var ii = 0; ii < cellCount; ii++) {
			var btn = syra_menus.addTextButton(timeHour.toString(this.field.localFormat), "s-time-popup-a", "onTimeClick");
			if (timeHour.hour == this.curTime.hour) {
				btn.className += " s-time-select";
				this._selectedBtn = btn;
			}
			this.cols[colIndex].appendChild(btn);
			timeHour = timeHour.addMinutes(this.interval);
			if ((++colIndex) == this.columns) {
				colIndex = 0;
			}
		}
	},
	onTimeClick: function(event, btn) {
		if (this._selectedBtn) {
			this._selectedBtn.className = "s-time-popup-a";
		}
		btn.className = "s-time-popup-a s-time-select";
		this.field.setButtonValue(btn.textContent);
	},
	remove: function() {
		syra_site.dom.removeChild(this.domItem);
		this.dispose();
	},
	dispose: function() {
		syra_store.remove(this);
		this.title = this.cols = this.domItem = this.field = this._selectedBtn = null;
	}
});