"use strict";
var _helpers = require('syracuse-core/lib/helpers');
var VignetteField = require("syracuse-ui/lib/field/vignette/vignetteField").VignetteField;
var _embeddedHelper = require('syracuse-ui/lib/field/helpers/embeddedHelper');

function _loadContentPage(field) {
	if (!field._isContentPageRequested && field.page.isItemVisible(field)) {
		field._isContentPageRequested = true;
		if (field.$url || !_embeddedHelper.hasMasterChildRelation(field)) {
			//if masterChild, vignette is lazy loaded
			field.loadContentRepresentation();
		}
	}
}

function PageVignetteField() {}

exports.PageVignetteField = _helpers.defineClass(PageVignetteField, VignetteField, {
	onAfterMaximize: function() {
		this.vignette && this.vignette.resizeArticle(true);
	},
	loadContentRepresentation: function() {
		var self = this;
		syra_controller.loadRepresentation({
			article: null,
			segments: self.$url || self.$field.$location.$url,
			success: function($itemPage) {
				if (self.body) {
					$itemPage.layoutSlot = self.body;
					$itemPage.$category = "vignette";
					$itemPage.vignetteField = self;
					var $vignette = self.$item.$vignette;
					var altVignetteKey;
					if (self.$url && self.$field.$location.$url != self.$url) {
						var newSeg = syra_url.parse(self.$url);
						var sourceSeg = syra_url.parse(self.$field.$location.$url);
						if (newSeg.params.representation != sourceSeg.params.representation) {
							$vignette = self.$item.$altVignettes && self.$item.$altVignettes[newSeg.params.representation];
							altVignetteKey = newSeg.params.representation;
							if (!$vignette && self.$item.$vignette) {
								$vignette = _helpers.object.clone(self.$item.$vignette, true);
							}
						}
					}
					if ($vignette) {
						$itemPage.$representation.$article = $vignette;
						delete $itemPage.$representation.$article.$menus;
					}
					self.vignette = syra_site.pageLoader.load($itemPage);
					self.vignette.altVignetteKey = altVignetteKey;
					self._onVignetteRefresh && self.onItemInOut(true);
				}
			}
		});
	},
	designArticle: function(open) {
		if (this.vignette) {
			switch (this.vignette.$facet) {
				case "$query":
				case "$cube":
					var fields = this.vignette.layoutContent.getFields();
					for (var ii = 0, jj = fields.length; ii < jj; ii++) {
						if (fields[ii].isArrayField) {
							var open = !fields[ii].designer;
							fields[ii].designArticle(open);
							break;
						}
					}
					break;
			}
		}
	},
	renderLayoutContent: function($url, onVignetteRefresh) {
		VignetteField.prototype.renderLayoutContent.call(this);
		if ($url) {
			this.$url = $url;
		} else {
			if (!(this.$url && this.$masterBinds)) {
				this.$url = this.$field.$altLocation && this.$field.$altLocation.$url;
				if (this.$url && this.page.ldpRecord) {
					this.$url = syra_site.expressionMaker.parse(this.page.ldpRecord.page, this.$url);
				}
			}
		}
		this._isContentPageRequested = false;
		this._onVignetteRefresh = onVignetteRefresh;
		_loadContentPage(this);
	},
	resizeArticle: function(doResize) {
		_loadContentPage(this);
		this.vignette && this.vignette.resizeArticle(doResize);
	},
	dispose: function() {
		_embeddedHelper.disposeMasterChildRelation(this);
		this.vignette && this.vignette.dispose();
		VignetteField.prototype.dispose.call(this);
	}
});