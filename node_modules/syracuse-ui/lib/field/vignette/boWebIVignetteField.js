"use strict";
var helpers = require('syracuse-core/lib/helpers');
var HTMLVignetteField = require("syracuse-ui/lib/field/vignette/htmlVignetteField").HTMLVignetteField;

var TUNNEL_DESC = {
	"spgm": "INTRUTILA:BOLINK",
	"params": [{ // FONCTION
		"dim": 1,
		"typ": "STRU",
		"siz": 8
	}, { // VARIA
		"dim": 1,
		"typ": "STRU",
		"siz": 8
	}, { // CLE
		"dim": 1,
		"typ": "STRU",
		"siz": 250
	}]
};

function BOWebIVignetteField() {}

exports.BOWebIVignetteField = helpers.defineClass(BOWebIVignetteField, HTMLVignetteField, {
	setFocus: function() {
		return true;
	},
	isDirty: function(value, record, metaData, $bind) {
		return false;
	},
	onWindowResize: function() {
		HTMLVignetteField.prototype.onWindowResize.call(this);
		if (this._iframe && !window.x3Obj) {
			var self = this;
			window.x3Obj = {
				sendAckCallTunnel: function(func, value, key) {
					self.externalCall(TUNNEL_DESC, [func, value, key]);
				}
			};
		}
	},
	dispose: function() {
		delete window.x3Obj;
		HTMLVignetteField.prototype.dispose.call(this);
	},

	externalCall: function(proxy, values, opt) {
		var self = this,
			site = document.site,
			callDesc;

		function _resultCallback(res) {
			var err = !res ? [{
				message: "No result",
				severity: "error"
			}] : res.$diagnoses || null;

			err && site.showDiagnoses({
				$diagnoses: err
			});
		}

		if (typeof proxy === 'object') {
			callDesc = proxy;
			proxy = undefined;
		}
		if (this.page && this.page.externalAdapter && this.page.externalAdapter.onBlockExRpc) {
			this.page.externalAdapter.onBlockExRpc({
				field: opt && opt.attachedField || self,
				call: {
					proxy: proxy,
					callDesc: callDesc,
					values: values,
					callback: opt && opt.callback || _resultCallback
				}
			});
		}
	},

});