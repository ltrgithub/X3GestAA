"use strict";
var helpers = require('syracuse-core/lib/helpers');
var VignetteField = require("syracuse-ui/lib/field/vignette/vignetteField").VignetteField;
var HTMLVignetteDesigner = require("syracuse-ui/lib/authoring/htmlVignetteDesigner").HTMLVignetteDesigner;

function HTMLVignetteField() {}

exports.HTMLVignetteField = helpers.defineClass(HTMLVignetteField, VignetteField, {
	loadBox: function() {
		this.$isAutosize = true;
		VignetteField.prototype.loadBox.call(this);
	},
	setDataBind: function(value, record, metaData, $bind) {
		if (this.page.externalAdapter.setDataBind(this, value, record, metaData)) {
			if (value !== undefined) {
				this.$contentUrl = this.$item.$url = value;
				this._showUrl();
			}
		}
	},
	applyDesignMetaData: function(metaData, designing) {
		VignetteField.prototype.applyDesignMetaData.call(this, metaData, designing);
		if (metaData.$url !== undefined) {
			this.$contentUrl = this.$item.$url = metaData.$url;
		}
		if (metaData.$width !== undefined) {
			this.$item.$width = metaData.$width;
			if (this._iframe) {
				this._iframe.style.width = this.$item.$width;
			}
		}
		if (metaData.$opened !== undefined) {
			this.openBox(this.$item.$opened = metaData.$opened);
		}
		if (metaData.$url !== undefined) {
			this._showUrl();
		}
		if (metaData.$isPageHeightDocked !== undefined || metaData.$height !== undefined) {
			if (metaData.$isPageHeightDocked !== undefined) {
				this.$item.$isPageHeightDocked = metaData.$isPageHeightDocked;
			}
			if (metaData.$height !== undefined) {
				this.$item.$height = metaData.$height;
			}
			if (this._iframe) {
				if (this.$item.$isPageHeightDocked) {
					this.onWindowResize();
				} else {
					if (!this.isMaximized) {
						this._iframe.style.height = this.$item.$height;
					}
				}
			}
		}
	},
	onWindowResize: function() {
		if (this._iframe) {
			var maxHeight = this.page.scrollview.clientHeight;
			this._iframe.style.display = "";
			if (this.isMaximized) {
				this._iframe.style.height = maxHeight + "px";
				this._iframe.style.height = (maxHeight - (this.page.scrollview.scrollHeight - maxHeight)) + "px";
			} else {
				if (this.$item.$isPageHeightDocked) {
					var scrollTop = this.page.scrollview.getBoundingClientRect().top;
					var bodyTop = this._iframe.getBoundingClientRect().top;
					if (bodyTop) {
						this._iframe.style.height = (maxHeight - (bodyTop - scrollTop) - 20) + "px";
					}
				} else {
					this._iframe.style.height = this.$item.$height || document.body.clientHeight * 0.8 + "px";
				}
			}
		}
	},
	doPicker: function(pickerId) {
		VignetteField.prototype.doPicker.call(this, pickerId);
		switch (pickerId) {
			case "design":
				this.designItem(!this.designer);
				break;
			case "maximize":
				this.isMaximized = true;
				this.onWindowResize();
				break;
			case "minimize":
				this._iframe.style.height = this.$item.$height || "100%";
				this.isMaximized = false;
				this.onWindowResize();
				break;
		}
	},
	designItem: function(open) {
		document.site.toggleClass(this.pickers.items.design, "s-close", open);
		document.site.designItem(open, this, HTMLVignetteDesigner);
	},
	_showUrl: function() {
		if (this.$contentUrl) {
			if (!this._iframe) {
				this._iframe = document.createElement("iframe");
				this._iframe.target = "_top";
				this._iframe.setAttribute("sandbox", "allow-same-origin allow-forms allow-scripts");
				this._iframe.style.width = this.$item.$width || "100%";
				this._iframe.style.display = "none";
				document.site.emptyDom(this.body);
				this.body.appendChild(this._iframe);
			}
			this._iframe.setAttribute("src", this.$contentUrl);
			this.domTitle.href = this.$contentUrl;
			this.domTitle.target = "_blank";
		} else {
			this.domTitle.href = "";
			this.domTitle.target = "";
			document.site.emptyDom(this.body);
			this._iframe = null;
		}
		document.site.toggleClass(this.domTitle, "s-title-link", this.$contentUrl != null);
		this.page.onWindowResize();
	},
	renderLayoutContent: function() {
		VignetteField.prototype.renderLayoutContent.call(this);
		this.$contentUrl = this.$field.$location.$url;
		var title = this.domTitle.textContent;
		this.domTitle.title = title;
		this.domTitle.textContent = title;
		this._showUrl();
	},
	dispose: function() {
		this._iframe = null;
		VignetteField.prototype.dispose.call(this);
	}
});