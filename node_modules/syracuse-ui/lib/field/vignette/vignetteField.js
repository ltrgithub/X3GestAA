"use strict";
var helpers = require('syracuse-core/lib/helpers');
var SectionBlock = require("syracuse-ui/lib/article/sectionBlock").SectionBlock;


function _onDesignClick() {
	var vignetteField = this.parent;
	if (vignetteField.page.isLandingPage) {
		syra_site.switchItemDesigner(vignetteField, !vignetteField.designer);
	} else {
		syra_url.formatParameters(vignetteField.articleParent, {
			$properties: {
				vignettUrl: {
					$title: "url",
					$type: "text/plain"
				}
			},
			vignettUrl: vignetteField.$field.$location.$url
		}, vignetteField.articleParent, function(values) {
			if (values.vignettUrl != vignetteField.$field.$location.$url) {
				vignetteField.$item.$location = vignetteField.$item.$location || {};
				vignetteField.$item.$location.$url = values.vignettUrl;
				vignetteField.refresh(true);
			}
		});
	}
}



function VignetteField() {}

exports.VignetteField = helpers.defineClass(VignetteField, SectionBlock, {
	ensureSkin: function() {
		SectionBlock.prototype.ensureSkin.call(this);
		this.$skinSlot = this.$skin;
		this.$designLevel = "field";
	},

	resizeArticle: function() {},
	setDataBind: function(value, record, metaData, $bind) {},
	loadBox: function() {
		this.isVignetteField = true;
		SectionBlock.prototype.loadBox.call(this);
		this.articleParent.bind(this, this.$item.$bind);
		this.page.addResizable(this);
	},
	dispose: function() {
		this.page.removeResizable(this);
		this.vignette = this.$field = null;
		SectionBlock.prototype.dispose.call(this);
	},
	refresh: function(onVignetteRefresh) {
		var $refresh = this.vignette && this.vignette.$menus && this.vignette.$menus.$refresh;
		var $url = $refresh && $refresh.$url;
		if ($url) {
			$url = syra_site.expressionMaker.parse(this.vignette, $url);
		}
		this.renderLayoutContent($url, onVignetteRefresh);
	},
	onItemInOut: function(onEnter, event) {

	},
	ensureButtonsVisibility: function() {
		this.refreshBtn && syra_menus.button.hide(this.refreshBtn, !this.$opened);
		this.onItemInOut();
	},
	drawBox: function() {
		if (!this.page.isLandingPage && this.$item.$isBoxCollapsable == undefined) {
			this.$item.$isBoxCollapsable = true;
		}
		this.domItem = document.createElement("section");
		this.domItem.className = this.$skin;
		this.domItem.syrainout = this.id;

		this.layoutSlot.appendChild(this.domItem);
		this.setState(this.$item);
		this.body = document.createElement("div");
		this.body.className = this.$skin + "-body";
		this.appendHeader();
		this.ensureLayoutMode();
		this.domItem.appendChild(this.body);
		this.applyDesignMetaData(this.$item, false);

		var btnSlot = this.ensureButtonsSlot();
		this.page.isDesignModeEnabled && this.toggleDesignButton(true);

		this.refreshBtn = syra_menus.button.add({
			parent: this,
			slot: btnSlot,
			text: syra_local.box_refresh,
			css: this.$skin + "-btn",
			iconOnly: true,
			fontIcon: "refresh",
			btnclick: function() {
				this.parent.refresh(true);
			}
		});

		this.toggleMaximizeButton(true);
		if (this.page.isDesignModeEnabled) {
			syra_menus.button.add({
				parent: this,
				slot: btnSlot,
				text: syra_local.box_delete,
				css: this.$skin + "-btn",
				iconOnly: true,
				fontIcon: "delete",
				btnclick: function() {
					syra_site.landingPageMaster.onDeleteVignetteClick(this.parent);
				}

			});
		}
		this.openBox(this.$item.$opened !== false);
	},
	toggleMenuButton: function(show) {
		if (show) {
			if (!this.menuBtn) {
				this.menuBtn = syra_menus.button.add({
					parent: this,
					slot: this.ensureButtonsSlot(),
					text: syra_local.box_menus,
					css: this.$skin + "-btn",
					iconOnly: true,
					fontIcon: "menus",
					btnclick: function() {
						var vignette = this.parent.vignette;
						vignette && syra_menus.showPopup(vignette, this);
					}
				});
			}
		} else {
			syra_menus.button.remove(this.menuBtn);
		}
	},
	toggleDesignButton: function(show) {
		if (show) {
			if (!this.designBtn) {
				this.designBtn = syra_menus.button.add({
					parent: this,
					slot: this.ensureButtonsSlot(),
					text: syra_local.box_design,
					css: this.$skin + "-btn",
					iconOnly: true,
					fontIcon: "design",
					btnclick: _onDesignClick
				});
			}
		} else {
			syra_menus.button.remove(this.designBtn);
		}
	},
	ensureLayoutMode: function() {
		this.ensureSkin();
		this.layoutParent && this.layoutParent.ensureLayoutSlot(this);
	},
	renderLayoutContent: function() {
		if (this.vignette) {
			syra_site.dom.empty(this.body);
			this.vignette.dispose();
			this.vignette = null;
		}
	}
});