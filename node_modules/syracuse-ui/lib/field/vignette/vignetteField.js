"use strict";
var helpers = require('syracuse-core/lib/helpers');
var Box = require("syracuse-ui/lib/article/box").Box;

function VignetteField(){
}

exports.VignetteField = helpers.defineClass(VignetteField, Box, {
    loadBox: function(){
        this.$authoringLevel = "field";
        this.$skin = this.$item.$skin || "s-vignette-field";
        Box.prototype.loadBox.call(this);
    },
    doPicker: function(pickerId){
        if (pickerId == "refresh") {
            if (!document.site.authorPage) {
                this.renderLayoutContent();
            }
        }
        else {
            Box.prototype.doPicker.call(this, pickerId);
        }
    },
    drawBox: function(){
        this._item = document.createElement("section");
        this._item.className = this.$skin;
        this.$$item = $(this.layoutSlot.appendChild(this._item));
        this.setState(this.$item);
        this.$$body = $(this._body = document.createElement("div"));
        this._body.className = this.$skin + "-body";
        this.appendHeader();
        this.ensureLayoutMode();
        this._item.appendChild(this._body);
        this.$item.$isRefreshable = true;
        this.$item.$isMaximizable = true;
        
        this.applyDesignMetaData(this.$item, false);
        this.openBox(this.$item.$opened !== false);
    },
    ensureLayoutMode: function(){
        this.layoutSlot.style.verticalAlign = "top";
        if (this.layoutParent) {
            this.layoutParent.ensureLayoutSlot(this);
        }
        if (this.page.authoringPage) {
            this.page.authoringPage.toggleItemAuthoring(this, true);
        }
    },
    renderLayoutContent: function(){
        if (this.vignette) {
            this.$$body.empty();
            document.controller.disposeObject(this.vignette);
        }
    }
});