"use strict";
var helpers = require('syracuse-core/lib/helpers');
var Article = require("syracuse-ui/lib/article/article").Article;
var locale = require('syracuse-core/lib/locale');

function HtmlVignetteAuthoring(){

}

exports.HtmlVignetteAuthoring = helpers.defineClass(HtmlVignetteAuthoring, Article, {
    notifyChange: function($bind, value,isNotifyOnly){
        var metaData = {};
        metaData[$bind] = value;
        /*if ($bind == "$format") {
         this.applyChange(metaData);
         }*/
        this.designedField.applyDesignMetaData(metaData, true);
        document.site.authorPage.notifyUpdate();
    },
    applyChange: function(newData){
        if (newData) {
        
        }
        Article.prototype.applyChange.call(this, newData);
        
    },
    loadBox: function(initData){
        var localize = locale.resources(module)();
        this.$prototype = {
            "$properties": {
                $locationTitle: {
                    $type: "application/x-string",
                    $title: localize.htmlV_location_title
                },
                $locationUrl: {
                    $type: "application/x-string",
                    $title: localize.htmlV_location_url
                },
                $width: {
                    $type: "application/x-string",
                    $title: localize.htmlV_width
                },
                $height: {
                    $type: "application/x-string",
                    $title: localize.htmlV_height
                }
            },
            $width: "100%",
            $height: "100%",
            $locationTitle: this.designedField.$field.$location.$title,
            $locationUrl: this.designedField.$field.$location.$url,
        };
        this.$item = {
            $category: "section",
            $title: localize.htmlV_section_title,
            $layout: {
                $items: [{
                    $bind: "$locationTitle",
                    $isEditMode: true,
                    $labelWidth: "auto",
                    $skin: "s-aw-field"
                }, {
                    $bind: "$locationUrl",
                    $isEditMode: true,
                    $labelWidth: "auto",
                    $skin: "s-aw-field"
                }, {
                    $layout: {
                        $layoutType: "side",
                        $items: [{
                            $bind: "$width",
                            $isEditMode: true,
                            $labelWidth: "auto",
                            $skin: "s-aw-field"
                        }, {
                            $bind: "$height",
                            $isEditMode: true,
                            $labelWidth: "auto",
                            $skin: "s-aw-field"
                        }]
                    }
                }]
            }
        };
        Article.prototype.loadBox.call(this, initData);
    }
});
