"use strict";
var helpers = require('syracuse-core/lib/helpers');
var Field = require('syracuse-ui/lib/field/field').Field;

function PhoneField(){
}

exports.PhoneField = helpers.defineClass(PhoneField, Field, {
    initialize: function(){
        this.$isDetailLinkIgnore = true;
    },
    createHtmlInput: function(){
        var input = document.createElement("input");
        input.setAttribute("type", "tel");
        return input;
    },
    setDataValue: function(value, record){
        this.currentValue = value;
        if (this.$isEditMode) {
            this.setInputValue(this.currentValue || "");
        }
        else {
            document.site.emptyDom(this.fieldValue);
            var link = document.createElement("a");
            link.className = "s-phone-link";
            link.setAttribute("href", "callto:" + value);
            link.textContent = value;
            this.fieldValue.appendChild(link);
        }
    }
});

function UrlField(){
}

exports.UrlField = helpers.defineClass(UrlField, Field, {
    initialize: function(){
        this.$isDetailLinkIgnore = true;
    },
    createHtmlInput: function(){
        var input = document.createElement("input");
        input.setAttribute("type", "url");
        return input;
    },
    setDataValue: function(value, record){
        this.currentValue = value;
        if (this.$isEditMode) {
            this.setInputValue(this.currentValue || "");
        }
        else {
            document.site.emptyDom(this.fieldValue);
            var link = document.createElement("a");
            link.className = "s-field-menus-link";
            link.setAttribute("href", value);
            link.textContent = value;
            this.fieldValue.appendChild(link);
        }
    }
});

function EmailField(){
}

exports.EmailField = helpers.defineClass(EmailField, Field, {
    initialize: function(){
        this.$isDetailLinkIgnore = true;
    },
    validateType: function(errors, value){
        var atpos = value.indexOf("@");
        var dotpos = value.lastIndexOf(".");
        if (atpos < 1 || dotpos < atpos + 2 || dotpos + 2 >= value.length) {
            errors.push(this.getLocalize().email_invalid);
        }
    },
    createHtmlInput: function(){
        var input = document.createElement("input");
        input.setAttribute("type", "email");
        return input;
    },
    setDataValue: function(value, record){
        this.currentValue = value;
        if (this.$isEditMode) {
            this.setInputValue(this.currentValue || "");
        }
        else {
            document.site.emptyDom(this.fieldValue);
            var link = document.createElement("a");
            link.className = "s-email-link";
            link.setAttribute("rel", "nofollow");
            link.setAttribute("href", "mailto:" + value);
            link.textContent = value;
            this.fieldValue.appendChild(link);
        }
    }
});
