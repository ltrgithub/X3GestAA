"use strict";
var helpers = require('syracuse-core/lib/helpers');
var Article = require("syracuse-ui/lib/article/article").Article;

function ChildFieldRecord() {}

exports.ChildFieldRecord = helpers.defineClass(ChildFieldRecord, Article, {
	ensureDataSet: function() {
		return this.dataset = this.articleParent.ensureDataSet();
	},
	remove: function() {
		this.$$item.remove();
	},
	drawBox: function() {
		this.$$item = $(this.list._core);
		this._menusSlot = document.createElement("div");
		this._menusSlot.className = this.list.$skin + "-actions-cell";
		this.list._core.appendChild(this._menusSlot);
		var card = this.list._core.appendChild(document.createElement("div"));
		card.className = this.list.$skin + "-record";
		this.page.loadNewItem(card, this.list.$item.$cardItem, this);
	},
	onMenuClick: function(menuItem) {
		var doClick = false;
		var self = this;
		if (!self.$isDisabled && !menuItem.$isDisabled && !menuItem.$isAction) {
			if (menuItem.$bind == "$lookup") {
				self.list.currentSelectRecords = null;
				self.list.boxParent.openDialog({
					article: self.list,
					$url: menuItem.$url,
					onSelectRecord: function(selectedRecords) {
						var record = selectedRecords[Object.keys(selectedRecords)[0]];
						self.list.setDataBind(record.dataset);
						self.page.notifyDataChange(self.list, record.dataset);
					}
				});
				return false;
			}
		}
		return true;
	},
	_clearMenuItems: function() {
		Article.prototype._clearMenuItems.call(this);
		if (this.menusBox) {
			this._menusSlot.style.display = "none";
			this.menusBox.layoutParent.removeItem(this.menusBox, true);
			this.removeMenuBag(this.menusBox);
			delete this.menusBox;
		}
	},
	onMenuDataFilled: function(menuItem) {
		if (menuItem.boxParent.isMenuGroup) {
			var menuGroupRoot = menuItem.boxParent.menuGroupRoot;
			if (menuGroupRoot.id == (this.id + "-menu-picker")) {
				if (!menuGroupRoot.$isPickerVisible) {
					this._menusSlot.style.display = "";
					menuGroupRoot.$isPickerVisible = true;
				}
			}
		}
	},
	_createMenusBox: function() {
		document.site.toggleClass(this._menusSlot, "s-record-actions", true);
		this.page.loadNewItem(this._menusSlot, {
			$layoutType: "row",
			$autoSize: true,
			$items: [{
				$bind: "$lookup",
				$category: "link",
				$noText: true,
				$skin: "s-record-action-lookup"
			}, {
				$isMenusBag: true,
				$category: "menus",
				$title: "-",
				$isTitlePicker: true,
				$isBoxCollapsable: true,
				$isPopupContent: true,
				$clientId: this.id + "-menu-picker",
				$skin: "s-record-menus",
			}]
		}, this);
		this.menusBox = this.idMap[this.id + "-menu-picker"];
		this.menusBox.contextField = this;
	},
	applyActionLinkChange: function(resources) {
		Article.prototype.applyActionLinkChange.call(this, resources);
		if (!this.menusBox && resources && (resources.$links !== undefined || resources.$actions !== undefined)) {
			this._createMenusBox();
		}
	},
	applyMetaData: function(metaData) {

	},
	dispose: function() {
		this.list = this.page = this.menusBox = null;
		Article.prototype.dispose.call(this);
	}
});