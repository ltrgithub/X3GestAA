"use strict";
var helpers = require('syracuse-core/lib/helpers');

function ContextMenu(){
}

exports.ContextMenu = helpers.defineClass(ContextMenu, null, {
    dispose: function(){
        delete this.field;
        if (this._$$menusBtn) {
            this._$$menusBtn.unbind();
            delete this._$$menusBtn;
        }
        if (this._$$menusPopup) {
            this._$$menusPopup.remove();
        }
    },
    remove: function(){
        this.field.getArticle().removeItem(this._menusBox, true);
        delete this._menusBox;
        this.removeOpener();
        document.controller.disposeObject(this);
    },
    appendOpener: function(){
        // var btn = document.createElement("a");
        // btn.className = "s-field-menus-btn s-close";
        return this.field.createPicker("menus");
    },
    removeOpener: function(){
        this.field._removeButtonToValue(this._$$menusBtn[0])
    },
    loadMenuBox: function(){
        var slot = document.createElement("div");
        slot.className = "s-field-menus-popup";
        this.options.$category = "links";
        this.options.$skin = this.$skinMenus || (this.field.$skin + "-menus");
        if (this.options.$isBindDisabled) {
            this.options.$links = {};
            this.options.$actions = {};
        }
        this._menusBox = document.itemFactory.load(this._$$menusPopup = $(slot), this.options, this.field.getArticle());
        this._menusBox.contextField = this.field;
    },
    create: function(field, options){
        var self = this;
        self.field = field;
        self.options = options || {};
        self._$$menusBtn = $(self.appendOpener());
        self.loadMenuBox();
        
        self._$$menusBtn.bind("click", function(){
            document.site.onBeforClick();
            if (!field.$isDisabled) {
                field.getPage().externalAdapter.onFieldClickPicker({
                    field: field,
                    pickerType: "contextMenu",
                    doEvent: function(){
                        if (!self._popupMenus) {
                            document.site.toggleClass(self._$$menusBtn[0], "s-open",true);
                            var popupContent = self.popupContent || field;
                            popupContent.$$item[0].setAttribute("id", popupContent.id);
                            self._popupMenus = field.boxParent.openDialog({
                                $dialogMode: "popup",
                                content: popupContent,
                                $$dialog: self._$$menusPopup,
                                position: {
                                    my: "left top",
                                    at: "left bottom",
                                    of: self._$$menusBtn
                                },
                                onClose: function(){
                                    document.site.toggleClass(self._$$menusBtn[0], "s-open", false);
                                    self._popupMenus = null;
                                },
                                autocCloseBoundary: "#" + popupContent.id
                            });
                        }
                        else {
                            self._popupMenus.close();
                        }
                    }
                });
            }
            return false;
        });
    }
});
