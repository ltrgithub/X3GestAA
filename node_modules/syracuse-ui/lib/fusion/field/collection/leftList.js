"use strict";
var helpers = require('syracuse-core/lib/helpers');
var DesktopList = require("syracuse-ui/lib/field/array/list").DesktopList;
var sapUtil = require('syracuse-ui/lib/fusion/core/client/sap/util').Fusion;


function NavigationList(){
}

exports.NavigationList = helpers.defineClass(NavigationList, DesktopList, {
    createBuilder: function(){
        // Last selected Id returned by X3
        this._mySelSyraId = null;
        this._sortDataSet = null;
        // Other properties        
        if (this.$item.$isNavigationList) {
            this.$item.$fitContainer = true;
        }
        this.$item.$isPopupMenuHidden = true;
        this.$item.$isQuickDesignerEnabled = false;
        this.$item.$isMenuRecordHidden = true;
        this.isClientFetch = false;
        this.isClientSortEnable = true;
        this.isClientPagingPerPageDisable = true;
        DesktopList.prototype.createBuilder.call(this);
    },
    resize: function(height){
        if (this.$item.$isNavigationList) {
            this.onWindowResize();
        }
    },
    applyMetaData: function(dataRecordSet, parentDataRecord, metaData){
        return false;
    },
    _applyPartialDelta: function(dataRecordSet, parentDataRecord, metaData){
        var i, j;
        if (dataRecordSet) {
            for (i = 0, j = dataRecordSet.length; i < j; i++) {
                if (dataRecordSet[i].$isSelected) {
                    this._mySelSyraId = parseInt(dataRecordSet[i].$index, 10) + 1;
                    break;
                }
            }
        }
        DesktopList.prototype._applyPartialDelta.apply(this, arguments);
    },
    beforeTrigger: function(evt, options){
        var ret = true;
        if (sapUtil.isFixtureMode(this) && evt && evt == "wdgt.list.selline") {
            // We let Syra widget manage the event
            ret = false;
        }
        return ret;
    },
    getQuickSelValues: function(){
        return this.filterCapability.filterRecord.fusionGetInputValues();
    },
	getNextQuickSelField: function(bind,nextSel) {
		var rec = this.filterCapability.filterRecord, next, prev
		if (rec.$item && rec.$item.$layout && rec.$item.$layout.$items) {
			for (var i = 0; i < rec.$item.$layout.$items.length; i++) {
				if (rec.$item.$layout.$items[i].$bind === bind) {
					if (i === 0) {
						next = rec.$item.$layout.$items[i + 1].$bind;
						prev = bind;
					} else if (i===(rec.$item.$layout.$items.length - 1)) {
						next = rec.$item.$layout.$items[0].$bind
						prev = rec.$item.$layout.$items[i - 1].$bind
					} else {
						next = rec.$item.$layout.$items[i + 1].$bind
						prev = rec.$item.$layout.$items[i - 1].$bind
					}
				}
			}
			return ( nextSel ? rec.boundFields[next] : rec.boundFields[prev]);
		}
		return null
	},
    getXid: function(){
        return this.$item.$bind;
    },
    getIst: function(nl){
        return sapUtil.makeIst(this.page.$fusionPageMeta.winModel.getWinId(), this.getXid(), nl === true && this._mySelSyraId != null ? this._mySelSyraId : null);
    }
});
