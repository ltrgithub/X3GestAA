"use strict";
var helpers = require('syracuse-core/lib/helpers');
var DesktopList = require("syracuse-ui/lib/field/array/list").DesktopList;
var sapUtil = require('syracuse-ui/lib/fusion/core/client/sap/util').Fusion;

function NavigationList() {}

exports.NavigationList = helpers.defineClass(NavigationList, DesktopList, {
	createBuilder: function() {
		if (this.$item.$isNavigationList) {
			this.$item.$fitContainer = true;
		}
		this.$item.$isPopupMenuHidden = true;
		this.$isQuickDesignerEnabled = false;
		this.$item.$isMenuRecordHidden = true;
		this.isClientFetch = false;
		this.isClientSortEnable = true;
		this.isClientPagingPerPageDisable = true;
		DesktopList.prototype.createBuilder.call(this);
	},
	resize: function(height) {
		if (this.$item.$isNavigationList) {
			this.onWindowResize();
		}
	},
	applyMetaData: function(dataRecordSet, parentDataRecord, metaData) {
		return false;
	},
	getQuickSelValues: function() {
		return this.filterRecord.fusionGetInputValues();
	},
	getNextQuickSelField: function(bind, nextSel) {
		var rec = this.filterRecord,
			next, prev, cells = [];
		if (rec.$item && rec.$item.$layout && rec.$item.$layout.$items) {
			cells = (Object.keys(rec._cells)).sort(

				function(a, b) {
					if (parseInt(a.substr(2), 10) > parseInt(b.substr(2), 10)) return 1;
					return 0;
				});
			for (var i = 0; i < cells.length; i++) {
				if (cells[i] === bind) {
					if (i === 0) {
						next = cells[i + 1];
						prev = bind;
					} else if (i === (cells.length - 1)) {
						next = cells[0];
						prev = cells[i - 1];
					} else {
						next = cells[i + 1];
						prev = cells[i - 1];
					};
					break;
				}
			}
			if (nextSel === undefined) return rec.boundFields[bind];
			return (nextSel ? rec.boundFields[next] : rec.boundFields[prev]);
		}
		return null;
	}
});