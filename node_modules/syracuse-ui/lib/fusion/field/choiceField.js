"use strict";
var helpers = require('syracuse-core/lib/helpers');
var desktopField = require('syracuse-ui/lib/desktop/field/choice/choiceField');
var syraUtil = require('syracuse-ui/lib/fusion/core/client/sap/util').Syra;
var util = require('syracuse-ui/lib/fusion/tools/util');


function _initializeChoice(choice, exclude){
    var menloc = null, list = null, $fusionController = syraUtil.getFusionController(choice), fusionSess = $fusionController ? $fusionController.getSession() : null;
    (!choice.$field.$value ? choice.$field.$value = {"$type": "application/x-integer", "$enum": []} : void(0));         
    if(fusionSess && choice.$field.$mnu){
        if((menloc = fusionSess.getMenloc(choice.$field.$mnu))) {
            if(exclude && !choice.$field.$value.$enum) {
                list = _.map(menloc, function(item, idx){
                    return {"$value": idx + 1, "$title": item};
                });
                _.each(exclude, function(rank){
                    list[rank - 1] = null;
                });
                choice.$field.$value.$enum = _.filter(list, function(item, idx){
                    return item;
                });
            }
            else if (exclude && choice.$field.$value.$enum) {
                list = [];
                _.each(choice.$field.$value.$enum, function(item, idx){
                    if(_.indexOf(exclude, item.$value) < 0) {
                        list.push(item);
                    }
                });
                delete choice.$field.$value.$enum;
                choice.$field.$value.$enum = util.duplicateObj(list);
            }
            else {
                (choice.$field.$value.$enum ? delete choice.$field.$value.$enum : void(0));
                choice.$field.$value.$enum = _.map(menloc, function(item, idx){
                    return {"$value": idx + 1, "$title": item};
                });
            }
        }
        else {
            // TODO : message?
        }
    }
    choice.$enum = choice.$field.$value.$enum;
}

function FusionChoiceField(){
}

exports.FusionChoiceField = helpers.defineClassEx(FusionChoiceField, desktopField.DesktopChoiceField, {
    initialize: function(){
        _initializeChoice(this);
    },
    removeListItems: function(items){
        _initializeChoice(this, items && items.length > 0 ? items.split(",") : null);
    }
});
