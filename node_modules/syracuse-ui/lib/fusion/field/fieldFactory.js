var _fieldTypes = {
    "application/x-choice": require('./choiceField').FusionChoiceField,
    "application/x-boolean": require('syracuse-ui/lib/field/booleanField').BooleanField,
    "application/x-array$xflgrid": require("./collection/listgrid").ListGrid,
    "application/x-tree$xstd": require("./collection/listgridtree").LGridTreeStd,
    "application/x-tree$xpick": require("./collection/listgridtree").LGridTreePick,
    "application/x-tree$xrec": require("./collection/listgridtree").LGridTreeRec,
    "application/x-date": require('syracuse-ui/lib/field/datetimeField').DateTimeField,
    "application/x-integer": require('syracuse-ui/lib/field/numericField').NumericField
    //"application/x-xslgraphic": require('./xslGraphic').XslGraphic,
};
_fieldTypes["application/x-time"] = _fieldTypes["application/x-datetime"] = _fieldTypes["application/x-date"];
_fieldTypes["application/x-decimal"] = _fieldTypes["application/x-real"] = _fieldTypes["application/x-integer"];

var sapUtil = require('syracuse-ui/lib/fusion/core/client/sap/util').Fusion;
var syraUtil = require('syracuse-ui/lib/fusion/core/client/sap/util').Syra;
var formatApi = require('syracuse-ui/lib/fusion/field/formatApi');


exports.create = function($field, $item, boxParent, $class){
    switch ($class) {
        case "application/x-password":
            $item.$isConfirmDisabled = true;
            break;
        case "application/x-tree":
            $class += (("$" + $field.$format) || "");
            break;
    }
    if ($class == "application/x-array" && $item.$format == "xflgrid") {
        $class = $class + "$" + $item.$format;
		$item.$format = "grid"; //hack ne plus mettre ca dans format 
    }
    var fieldClass = _fieldTypes[$class], field, fusionController, fusionSession, numSettings;
    if (fieldClass) {
        field = new fieldClass();
        field.$field = $field;
        if ($class == "application/x-boolean") {
            field.statusValues = {
                on: sapUtil.check.on,
                off: sapUtil.check.off
            };
        }
        else if($class === "application/x-date" || $class === "application/x-time" || $class === "application/x-datetime") {
            field.formatEx = {
                "formatApi": formatApi.getApi($class),
                "localFormat": formatApi.getLocalFormat($class),
                "localFormatDisplay": formatApi.getLocalFormat($class, $field.$format),
                "formatObj": formatApi.processFormat(formatApi.getLocalFormat($class))
            };
            field.formatEx._formatInput = field.formatEx.formatApi.formatInput;
        }
        else if($class === "application/x-integer" || $class === "application/x-decimal" || $class === "application/x-real") {
           fusionSession = ((fusionController = syraUtil.getFusionController(boxParent)) ? fusionController.getSession(): null);
           numSettings = fusionSession ? fusionSession.getRegional(false, true) : {};
           field.formatEx = {
                "formatApi": formatApi.getApi($class),
                "numFormatObj": formatApi.getLocale().getNumberFormatObj($class, numSettings.decSep || ".", numSettings.thsndSep || "", 3),
                "_checkSep": false
            };
            field.formatEx.localFormat = field.formatEx.numFormatObj.numFormat;
            field.formatEx._formatInput = field.formatEx.formatApi.formatInput;
       }
    }
    return field;
};
