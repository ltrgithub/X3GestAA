"use strict";
var helpers = require('syracuse-core/lib/helpers');
var syraUtil = require('syracuse-ui/lib/fusion/core/client/sap/util').Syra;
var util = require('syracuse-ui/lib/fusion/tools/util');
var Article = require("syracuse-ui/lib/desktop/article/article").Article;
var Field = require("syracuse-ui/lib/desktop/field/field").Field;

function XslGraphic(){
}

exports.XslGraphic= helpers.defineClass(XslGraphic, Field, {
    initialize: function(){
		this.$associateBind=this.$item.$X3.$associateBind;
		this.$parameters=this.$field.$X3.$parameters;
		console.log("XslGraphic initialize");
    },
	setDataBind:function(value, record, metaData){
		if(value){this.value=value}
		console.log("XslGraphic setDataBind")
		this.associatedArticle=this._getAssociateArticle();
		if(this.associatedArticle.dataLoaded){
			this._render(null,null);
		}
		this._setAssociateArticleEvent();
	},
	_getAssociateArticle:function(){
		return this.articleParent.boundFields[this.$item.$X3.$associateBind][0];
	},
	_setAssociateArticleEvent:function(){
		var self=this;
		
		if(self.associatedArticle){
			self.associatedArticle._setCallBack(function($isDelta,metaData){self._onAssociatedArticleChange($isDelta,metaData)})
		}
	},
	_onAssociatedArticleChange:function($isDelta,metaData){
		console.log("XslGraphic _onAssociatedChange ")
		this._render($isDelta,metaData);
	},
	render:function(){
		console.log("XslGraphic._render")
	},
	_render:function($isDelta,metaData){
		var trace="XslGraphic._render "
		if($isDelta) {
			trace+="Delta data"
		}
		if(metaData) {
			trace+="Delta metaData"
		}
		if(!$isDelta && !metaData){
			var wd=[];
			wd.push('<Data>');
			wd.push(this.associatedArticle.builder.getStringXmlData());
			wd.push('<MAIN>');
			wd.push(this.associatedArticle.builder.getStringXmlColumnUsage(this.$item.$bind));
			wd.push(this._getSpgmDesc());
			wd.push(this._getParameters());
			//TODO menloc
			wd.push('</MAIN>');
			wd.push('</Data>');
			trace+="All data"
		}
		console.log(trace)
	},
	_getSpgmDesc:function(){
		if(!self.$field.$X3.$ACTS) return "";
		var self=this, xAr=[];
		xAr.push('<ACTS>');
		self.$field.$X3.$ACTS.forEach(function($item){
		
		});
		xAr.push('</ACTS>');
		return xAr.join('')
	},
	_getParameters:function(){
		var self=this, xAr=[];
		Object.keys(self.$field.$X3.$parameters).forEach(function(key){
		
		});
		return xAr.join('')
	}
});