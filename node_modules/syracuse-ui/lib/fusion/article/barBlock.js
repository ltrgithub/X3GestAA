"use strict";
var helpers = require('syracuse-core/lib/helpers');

function BarBlock(){
    this.leftList = null;
}

exports.BarBlock = helpers.defineClass(BarBlock, null, {
    load: function(bar, $item, index){
        this.bar = bar;
        this.boxParent = bar;
        this.index = index;
        this.id = document.controller.generateUUID();
        this.$item = $item;
        this.$item.$XID = this.$item.$XID || $item.$bind;
        this.$item.$title = this.$item.$title || bar.fusionPage.$prototype.$properties[$item.$bind].$title;
        
        var dom = document.createElement("section");
        dom.className = "s-fusion-block";
        dom.setAttribute("data-s-block", this.index);
        this.$$item = $(dom).attr("id", this.id);
        
        var title = document.createElement("a");
        title.className = "s-fusion-block-title";
        var $title = this.$item.$title || "";
        if ($title.length > 0 && $title[1] == "@") {
            $title = this.bar.fusionPage._renderExpression($title);
        }
        title.textContent = $title;
        
        dom = document.createElement("div");
        dom.className = "s-fusion-block-body";
        this.$$body = $(dom);
        
        dom = document.createElement("header");
        dom.className = "s-fusion-block-header";
        dom.appendChild(title);
        this.$$header = $(dom);
        
        dom = document.createElement("footer");
        dom.className = "s-fusion-block-footer";
        this.$$footer = $(dom)
        return this.$$item.append(this.$$header).append(this.$$body).append(this.$$footer);
    },
    collapse: function(show, isFirstTime, onDrawBar){
        var self = this;
        self.bar.fusionPage.externalAdapter.onBoxToggle({
            box: self,
            open: show,
            onDrawParent: onDrawBar,
            isFirstTime: !self.islistLoaded,
            doEvent: function(){
                if (show && self.bar.openedBlock && (self.bar.openedBlock != self)) {
                    self.bar.openedBlock.collapse(false);
                }
                self.bar.openedBlock = self;
                self.$$footer[0].style.display = show ? "" : "none";
                self.$$body[0].style.display = show ? "" : "none";
                self.$$header.toggleClass("s-open", show);
                self.$$item.toggleClass("s-open", show);
                if (show) {
                    if (!self.islistLoaded) {
                        self.islistLoaded = true;
                        self.$item.$isTitleHidden = true;
                        document.itemFactory.load(self.$$body.empty(), self.$item, self.bar.fusionPage);
                    }
                    self.bar.onWindowResize();
                }
                else {
                    self.$$item[0].style.height = "";
                }
            }
        });
    },
    dispose: function(){
        delete this.bar;
        if (this.leftList) 
            delete this.leftList;
    }
});
