"use strict";
var helpers = require('syracuse-core/lib/helpers');
var DesktopPage = require('syracuse-ui/lib/article/page').DesktopPage;
var syraUtil = require('syracuse-ui/lib/fusion/core/client/sap/util').Syra;
var FusionBar = require('./fusionBar').FusionBar;


function SheetPage(){
}

exports.SheetPage = helpers.defineClass(SheetPage, DesktopPage, {
    bind: function(item, $bind){
        var data, $fusionPageMeta = syraUtil.getFusionPageMeta(this);
        (this.boundFields[$bind] = this.boundFields[$bind] || []).push(item);
        if ($fusionPageMeta && $fusionPageMeta.winModel && (data = $fusionPageMeta.winModel.getDatasetValue($bind, null, true))) {
            item.setDataBind(data.val, data.rcd, data.meta);
        }
        // TODO : idem for meta data!!!
    },
    onWindowResize: function(){
        if (this.isSelected && this.fusionBar) {
            this.fusionBar.onWindowResize();
        }
    },
    selectSheet: function(isSelected){
        this.isSelected = isSelected;
    },
    drawBox: function(){
        document.site.addResizeListener(this);
        DesktopPage.prototype.drawBox.call(this);
        if (this.fusionBar) {
            if (this.layoutContent.$layout.$layoutSubType == "25,75") {
                var cell = this.layoutContent.items[0].$$container[0];
                cell.style.display = "none";
                cell.style.width = "";
                cell = this.layoutContent.items[1].$$container[0];
                cell.style.width = "100%";
            }
        }
    },
    appendFusionBar: function($fusionBar){
        this.fusionBar = new FusionBar();
        this.fusionBar.load(this, $fusionBar);
    },
    dispose: function(){
        delete this.externalAdapter;
        document.site.removeResizeListener(this);
        syraUtil.deleteFusionPageMeta(this);
        DesktopPage.prototype.dispose.call(this);
    },
    applyChange: function(newData){
        DesktopPage.prototype.applyChange.call(this, newData);
    }
});
