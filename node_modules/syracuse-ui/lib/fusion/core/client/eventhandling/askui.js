"use strict";

/*
 Copyright (c)2012 Sage.
 http://wwww.sage.com
 */
/**
 * @fileoverview Fusion "Askui" windows event handling classes
 */

var syraUtil = require('syracuse-ui/lib/fusion/core/client/sap/util').Syra;
var Askui = require('../sap/askui');

var _evtProcAskui = {};
exports.AskuiEventHandling = _evtProcAskui;

/* "Askui dialogs" events handling class for "Askui" et cie controls */
_evtProcAskui.sap = function() {
	this.eventListeners = function() {
		return [
		["sap.extdlg.loaded", onDlgLoaded, false, false], ["sap.extdlg.activate", onDlgActivate, false, false], ["sap.extdlg.abort", onAbort, false, false], ["wdgt.link.click", onClick, true, true], ["wdgt.win.close", onClose, true, true], ["wdgt.file.upload", onFileUpload, true, true]];
	};

	function _closeDlg(self) {
		self.askuiController.closeDialog();
		_releaseCtx.call(self);
	}

	function onFileUpload(event) {
		var processed = undefined;
		if (event.target) {}
		return processed;
	}

	function onDlgLoaded(event, dialogId, callbackAct) {
		var boundFields, page = event.target;
		_release.call(this);
		this._ctx = {
			"currDlg": page,
			"callback": callbackAct
		};
		// Set URL and filter... TODO
		boundFields = syraUtil.getBoundFldsFromPage(page);
		//boundFields.file[0].setDataBind({'$url': "ddd"});
	}

	function onDlgActivate(event, dialogId) {}

	function onClick(event) {
		var processed = undefined,
			linkId = null,
			ret = {
				"closeLink": false
			}, status = Askui.returnStatus.cancel,
			self = this;
		if (event.target && (linkId = event.target.$bind)) {
			switch (linkId) {
				case "$ok":
					status = Askui.returnStatus.success;
				case "$cancel":
				default:
					ret.closeLink = true;
					break;
			}
			if (ret.closeLink) {
				setTimeout(function() {
					self._ctx.callback(status);
					_closeDlg(self);
				}, 10);
			}
		}
		return processed;
	}

	function onClose(event) {
		if (!event.target) {
			event.target = {};
		}
		event.target.$bind = "$cancel";
		return onClick.call(this, event);
	}

	function onAbort(event) {
		var processed = undefined;
		_release.call(this);
		return processed;
	}

	function _releaseCtx() {
		if (this._ctx) {
			delete this._ctx.currDlg;
			delete this._ctx.callback;
		}
	}

	function _release() {
		_releaseCtx.call(this);
		if (this._ctx) {
			delete this._ctx;
		}
	}
};