"use strict";
var syraUtil = require('syracuse-ui/lib/fusion/core/client/sap/util').Syra;
var sapUtil = require('syracuse-ui/lib/fusion/core/client/sap/util').Fusion;
var requestActions = require('../sap/srvactions');

/**
 * @fileoverview Fusion "Link" event handling classes
 */
var _evtProcLink = {};
exports.LinkEventHandling = _evtProcLink;

/* "Server page input" events handling class for "Link" controls*/
_evtProcLink.sap = function() {
	this.eventListeners = function() {
		return [["wdgt.link.click", onClick, true, true]];
	};

	function _getActionId(actionExpr) {
		var actStrg, actTab, ret = null,
			matches = actionExpr.match(/(\{.*?\})/g);
		if (matches && matches.length > 0) {
			if (matches[0].indexOf("@") >= 0) {
				actStrg = matches[0].substr(1, matches[0].length - 2);
				if ((actTab = actStrg.split("@")) && actTab.length > 0) {
					ret = requestActions.getActionByCategorie(actTab[0], actTab[1]);
				}
			} else {
				// Others expression patterns...
			}
		}
		return ret;
	}

	function onClick(event, ist) {
		var processed = undefined,
			act = null,
			$fusionPageMeta, $itemMeta, itemIst, focus, actEx, $menu;
		if (event.target && !event.target.$isDisabled) {
			$menu = event.target.$item;
			if ((act = event.target.$act) || (act = $menu && $menu.$act)) {
				// Action should be an expression...
				if (typeof act == 'string' && act.indexOf("{") >= 0 && (actEx = _getActionId(act))) {
					act = actEx;
				}
				// Native link
				event.result = {
					"$act": act
				};
				event.opts = {
					"$link": event.target.$bind
				};
				processed = true;
			} else if (event.target.$url) {
				// Special link
				$fusionPageMeta = event.target.boxParent ? syraUtil.getFusionPageMeta(event.target.boxParent) : null;
				itemIst = $fusionPageMeta && ist ? sapUtil.makeIst($fusionPageMeta.winModel.getWinId(), ist, null, true) : null;
				if (itemIst) {
					// Item is valid, we retrieve action code for this link
					focus = this.sapController.hasFocus(itemIst);
					switch (event.target.$url) {
						case "leftList-Next":
							act = focus ? requestActions.getSrvAction("SRV_LIST_PAGE_DOWN") : requestActions.getSrvActionEX("SUP_LIST_NEXT");
							break;
						case "leftList-Prev":
							act = focus ? requestActions.getSrvAction("SRV_LIST_PAGE_UP") : requestActions.getSrvActionEX("SUP_LIST_PREV");
							break;
					}
					if (act) {
						event.result = {
							"$act": act
						};
						event.result.params = {
							"target": itemIst
						};
						processed = true;
					}
				}
			}
		}
		return processed;
	}

};