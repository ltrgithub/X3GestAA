"use strict";

/*
 Copyright (c)2012 Sage.
 http://wwww.sage.com
 */
 /**
 * @fileoverview Fusion "Selimp et cie" windows event handling classes
 */

var syraUtil = require('syracuse-ui/lib/fusion/core/client/sap/util').Syra;
var sapUtil = require('syracuse-ui/lib/fusion/core/client/sap/util').Fusion;
var printerHelpers = require('syracuse-ui/lib/site/aside/printerSetup').helpers;
var requestActions = require('../sap/srvactions');

var _evtProcSelimp = {};
exports.SelimpEventHandling = _evtProcSelimp;

/* "Printer Setup dialogs" events handling class for "Selimp" et cie controls */
_evtProcSelimp.sap = function() {
	this.eventListeners = function() {
		return [
			["sap.extdlg.loaded", onDlgLoaded, false, false],
			["sap.extdlg.activate", onDlgActivate, false, false],
			["wdgt.link.click", onClick, true, true],
			["wdgt.win.close", onClose, true, true],
			["wdgt.record.action", onActRcd, true, true],
			["wdgt.record.picker", onSelPrinter, true, true],
			["wdgt.grid.selline", onSelPrinter, true, true],
			["wdgt.cell.click", onSelPrinter, true, true]
		];
	};

    function _transMask (sourceMask, targetMask) {
        var boundsA, boundsB, propsA, propsB, arrPropsA, len, i, value;
        propsA = syraUtil.get$FromPage(targetMask);
        propsB = syraUtil.get$FromPage(sourceMask);
        boundsA = syraUtil.getBoundFldsFromPage(sourceMask);
        boundsB = syraUtil.getBoundFldsFromPage(targetMask);
        arrPropsA = Object.keys(propsA);
        for (i = 0, len = arrPropsA.length; i < len; i++) {
            if(propsB[arrPropsA[i]] && (value = boundsA[arrPropsA[i]][0].getDataValue()) != null) {
                boundsB[arrPropsA[i]][0].setDataBind(value, null, {});
            }
        }
    }

	function _getActionRqst(linkId, rqst) {
		var ret = {"closeLink": true}, act = null, rqstData;
		rqst.params = {"notModified": true, "selpr": {}};
		rqstData = rqst.params.selpr;
		switch (linkId) {
			case "$save":
				if(!this._ctx.isMainDlg) {
					act = "PRINTER_OPTS_OK";
					rqstData.todo = "...";
					_transMask(this._ctx.currDlg, this._ctx.mainDlg);
				}
				else {
					act = "PRINTER_SEL_OK";
					rqstData.selected = {"name": printerHelpers.getPrinterName(this._ctx.currPrinterRcd)};
				}
				break;
			case "$properties":
				act = "PRINTER_SEL_OPTS";
				rqstData.printerName =  printerHelpers.getPrinterName(this._ctx.currPrinterRcd);
				ret.closeLink = false;
				break;
			default:
				act = this._ctx.isMainDlg ? "PRINTER_SEL_CANCEL" : "PRINTER_OPTS_CANCEL";
				break;
		}
		if(act) {
			rqst.$act = requestActions.getProxyAction(act);
		}
		else {
			ret = null;
		}
		return ret;
	}

	function onSelPrinter(event) {
		this._ctx.currPrinterRcd = event.target ? (event.data && event.data.uuid ? event.target.recordsMap[event.data.uuid].dataset : (event.target.getArticle()).dataset) : null;
		if(this._ctx.currPrinterRcd && this._ctx.currDlg) {
			printerHelpers.applyCapabilities(syraUtil.getBoundFldsFromPage(this._ctx.currDlg), this._ctx.currPrinterRcd);
		}
	}

	function onDlgLoaded(event, dialogId, isMainDlg) {
		var boundFields, page = event.target;
		if(page) {
			boundFields = syraUtil.getBoundFldsFromPage(page);
			if(isMainDlg) {
				dispose.call(this);
				this._ctx = {"mainDlg": page};
				this._ctx.currPrinterRcd = printerHelpers.getDefaultPrinterRcd(boundFields);
			}
			else if(this._ctx && this._ctx.currDlg){
				_transMask(this._ctx.currDlg, page);
			}
			if(this._ctx.currPrinterRcd) {
				printerHelpers.applyCapabilities(boundFields, this._ctx.currPrinterRcd);
			}
		}
	}

	function onDlgActivate(event, dialogId, isMainDlg) {
		var page = event.target;
		if(page) {
			releaseCtx.call(this);
			this._ctx.isMainDlg = isMainDlg;
			this._ctx.currDlg = page;
		}
	}

	function onActRcd(event) {
		var processed = undefined, ret, linkId;
		if ((linkId = event.target.$bind) && linkId !== "$recordCard") {
			if(this._ctx.currPrinterRcd) {
				event.result = {};
				ret = _getActionRqst.call(this, linkId, event.result);
				processed = ret ? true : processed;
			}
		}
		return processed;
	}

	function onClick(event) {
		var processed = undefined, linkId = null, ret;
		if (event.target && (linkId = event.target.$bind)) {
			event.result = {};
			if((ret = _getActionRqst.call(this, linkId, event.result))) {
				if(ret.closeLink) {
					this.printerController.unstackDialog();
					if(this._ctx.isMainDlg) {
						dispose.call(this);
					}
					else {
						releaseCtx.call(this);
					}
				}
				processed = true;
			}
		}
		return processed;
	}

	function onClose(event) {
		if(!event.target) {
			event.target = {};
		}
		event.target.$bind = "$cancel";
		return onClick.call(this, event);
	}

	function releaseCtx() {
		if(this._ctx) {
			if(this._ctx.currDlg === this._ctx.mainDlg) {
				this._ctx.isMainDlg = false;
			}
			delete this._ctx.currDlg;
		}
	}

	function dispose() {
		releaseCtx.call(this);
		if(this._ctx) {
			delete this._ctx.currPrinterRcd;
			delete this._ctx.mainDlg;
			delete this._ctx;
		}
	}
};