"use strict";

/*
 Copyright (c)2012 Sage.
 http://wwww.sage.com
 */
/**
 * @fileoverview Fusion "Selimp et cie" windows event handling classes
 */
var sapUtil = require('syracuse-ui/lib/fusion/core/client/sap/util').Fusion;
var printerHelpers = require('syracuse-ui/lib/site/tools/printerSetup').helpers;
var requestActions = require('../sap/srvactions');

var _evtProcSelimp = {};
exports.SelimpEventHandling = _evtProcSelimp;

/* "Printer Setup dialogs" events handling class for "Selimp" et cie controls */
_evtProcSelimp.sap = function() {
	this.eventListeners = function() {
		return [["sap.extdlg.loaded", onDlgLoaded, false, false], ["sap.extdlg.activate", onDlgActivate, false, false], ["sap.extdlg.abort", onAbort, false, false], ["wdgt.link.click", onClick, true, true], ["wdgt.win.close", onClose, true, true], ["wdgt.record.action", onRecordAction, true, true], ["wdgt.record.picker", onRecordSel, true, true], ["wdgt.grid.selline", onRecordSel, true, true], ["wdgt.cell.click", onRecordSel, true, true], ["wdgt.field.change", onFieldchange, true, true]];
	};

	function _unstackCurrentDlg(self) {
		self.printerController.unstackDialog();
		if (self._ctx.isMainDlg) {
			_release.call(self);
		} else {
			_releaseCtx.call(self);
		}
	}

	function _getActionRqst(linkId, rqst) {
		var ret = {
			"closeLink": true
		}, act = null,
			rqstData, boundsFields;
		rqst.params = {
			"notModified": true,
			"selpr": {}
		};
		rqstData = rqst.params.selpr;
		switch (linkId) {
			case "$save":
				boundsFields = syra_fusion.syraUtil.getBoundFldsFromPage(this._ctx.currDlg);
				if (!this._ctx.isMainDlg) {
					printerHelpers.saveDevmode(boundsFields, this._ctx.currPrinterRcd);
					act = "PRINTER_OPTS_OK";
				} else {
					rqstData.selected = printerHelpers.getSettings(boundsFields, this._ctx.currPrinterRcd);
					act = "PRINTER_SEL_OK";
				}
				break;
			case "$properties":
				rqstData.printerName = printerHelpers.getPrinterName(this._ctx.currPrinterRcd);
				ret.closeLink = false;
				act = "PRINTER_SEL_OPTS";
				break;
			default:
				act = this._ctx.isMainDlg ? "PRINTER_SEL_CANCEL" : "PRINTER_OPTS_CANCEL";
				break;
		}
		if (act) {
			rqst.$act = requestActions.getProxyAction(act);
		} else {
			ret = null;
		}
		return ret;
	}

	function onFieldchange(event) {
		var bind, processed = undefined;
		if (event.target && this._ctx.isMainDlg) {
			if ((bind = syra_fusion.syraUtil.getMetaFromObject(event.target)) && printerHelpers.shouldCheckOnchange(bind.$bind)) {
				printerHelpers.checkSettings(syra_fusion.syraUtil.getBoundFldsFromPage(this._ctx.currDlg), true, bind.$bind);
			}
		}
		return processed;
	}

	function onRecordSel(event) {
		var processed = undefined;
		this._ctx.currPrinterRcd = event.target ? (event.data && event.data.uuid ? event.target.recordsMap[event.data.uuid].dataset : (event.target.articleParent).dataset) : null;
		if (this._ctx.currPrinterRcd && this._ctx.currDlg) {
			printerHelpers.applyCapabilities(syra_fusion.syraUtil.getBoundFldsFromPage(this._ctx.currDlg), this._ctx.currPrinterRcd);
		}
		return processed;
	}

	function onDlgLoaded(event, dialogId, isMainDlg) {
		var boundFields, page = event.target;
		if (page) {
			boundFields = syra_fusion.syraUtil.getBoundFldsFromPage(page);
			if (isMainDlg) {
				_release.call(this);
				this._ctx = {
					"mainDlg": page
				};
				this._ctx.currPrinterRcd = printerHelpers.initDefaultPrinterRcd(boundFields);
				printerHelpers.checkSettings(boundFields);
			} else
			if (this._ctx && this._ctx.currDlg) {
				printerHelpers.initDevmode(boundFields, this._ctx.currPrinterRcd);
			}
			if (this._ctx.currPrinterRcd) {
				printerHelpers.applyCapabilities(boundFields, this._ctx.currPrinterRcd);
			}
		}
	}

	function onDlgActivate(event, dialogId, isMainDlg) {
		var page = event.target;
		if (page) {
			_releaseCtx.call(this);
			this._ctx.isMainDlg = isMainDlg;
			this._ctx.currDlg = page;
		}
	}

	function onRecordAction(event) {
		var processed = undefined,
			ret, linkId;
		if ((linkId = (event.target.$sourceBind || event.target.$bind)) && linkId !== "$recordCard" && this._ctx.currPrinterRcd) {
			event.result = {};
			ret = _getActionRqst.call(this, linkId, event.result);
			processed = ret ? true : processed;
		}
		return processed;
	}

	function onClick(event) {
		var processed = undefined,
			linkId = null,
			ret;
		if (event.target && (linkId = (event.target.$sourceBind || event.target.$bind))) {
			event.result = {};
			if ((ret = _getActionRqst.call(this, linkId, event.result))) {
				if (ret.closeLink) {
					_unstackCurrentDlg(this);
				}
				processed = true;
			}
		}
		return processed;
	}

	function onClose(event) {
		if (!event.target) {
			event.target = {};
		}
		event.target.$bind = "$cancel";
		return onClick.call(this, event);
	}

	function onAbort(event) {
		var processed = undefined;
		_release.call(this);
		return processed;
	}

	function _releaseCtx() {
		if (this._ctx) {
			if (this._ctx.currDlg === this._ctx.mainDlg) {
				this._ctx.isMainDlg = false;
			}
			delete this._ctx.currDlg;
		}
	}

	function _release() {
		_releaseCtx.call(this);
		if (this._ctx) {
			delete this._ctx.currPrinterRcd;
			delete this._ctx.mainDlg;
			delete this._ctx;
		}
	}
};