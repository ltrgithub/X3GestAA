"use strict";

/*
 Copyright (c)2012 Sage.
 http://wwww.sage.com
 */
/**
 * @fileoverview Fusion page menu management
 */
var helpers = require('syracuse-core/lib/helpers');
var requestActions = require('./srvactions');
var util = require('syracuse-ui/lib/fusion/tools/util');
var syraUtil = require('./util').Syra;
var sapUtil = require('./util').Fusion;
var utilBis = require('syracuse-ui/lib/fusion/tools/utilFdb');

var _kVirtualPath = {
	"file": "file/",
	"x3ico": "x3icons/",
	"x3icomnu": "x3iconsmenu/"
}, _menuWithMagneto = true,
	_kWinOwnMagneto = true,
	_menuWithMainMore = false;
var _kMnuHelper = {
	"stdIco": {
		"pj": "310",
		"comment": "311"
	},
	"grpMainSty": "main",
	"itemMainSty": "main",
	"itemEndSty": "end",
	"moreSty": "more",
	"group": {
		"grpExtra": {
			"cld": "grpExtra",
			"skin": "s-mn-extra"
		},
		"grpLinks": {
			"cld": "grpLinks",
			"skin": "s-mn-business"
		},
		"grpCrud": {
			"cld": "grpCrud",
			"skin": "s-mn-main"
		},
		"grpKpass": {
			"cld": "grpKpass",
			"skin": ""
		},
		"grpTools": {
			"cld": "grpTools",
			"skin": "s-mn-tools"
		},
		"grpAct": {
			"cld": "grpAct",
			"skin": "s-mn-prefer"
		}
	},
	"cat": {
		"popup": 0x010000,
		"item": 0x020000
	},
	"facet": {
		"sep": 0x000001,
		"txt": 0x000002,
		"ico": 0x000004
	},
	"isItemSep": function(mnuItemTyp) {
		var typeEx = _kMnuTypes[mnuItemTyp];
		return (typeEx & this.cat.item) && (typeEx & this.facet.sep);
	},
	"isPopupNoFacet": function(mnuItemTyp) {
		var typeEx = _kMnuTypes[mnuItemTyp];
		return (typeEx === this.cat.popup);
	},
	"appendIco": function(mnuItem, syraMnuItem) {
		if (_kMnuTypes[mnuItem.typ] & _kMnuHelper.facet.ico) {
			syraMnuItem[_kMnuTypes[mnuItem.typ] & this.cat.item ? "$icon" : "$titleIcon"] = {
				"$mode": _kMnuTypes[mnuItem.typ] & _kMnuHelper.facet.txt ? "iconText" : "icon",
				"$path": _kVirtualPath[mnuItem.opts.icoVp || "x3icomnu"],
				"$value": mnuItem.opts.ico
			};
		}
	}
};
var _kMnuTypes = {
	"0": _kMnuHelper.cat.popup + _kMnuHelper.facet.txt,
	"1": _kMnuHelper.cat.item + _kMnuHelper.facet.txt,
	"2": _kMnuHelper.cat.item + _kMnuHelper.facet.sep,
	"3": _kMnuHelper.cat.popup + _kMnuHelper.facet.ico,
	"4": _kMnuHelper.cat.item + _kMnuHelper.facet.ico,
	"5": _kMnuHelper.cat.popup + _kMnuHelper.facet.ico + _kMnuHelper.facet.txt,
	"6": _kMnuHelper.cat.item + _kMnuHelper.facet.ico + _kMnuHelper.facet.txt,
	"7": _kMnuHelper.cat.popup
};
var _insertRank = {
	"status": 5,
	"protoMnus": 9000,
	"help": 100,
	"pjInStatus": 80,
	"cmntInStatus": 90
};
var _menuIDs = {
	// "File" menu : common for all types of window
	"FILE_EX": "322",
	// "Print" submenu : common for all types of window
	"SUBMENU_PRINT_CMN": "319",
	// "Help" menu : common for all types of window
	"HELP_EX": "323",
	// "Diagnos" submenu : common for all types of window
	"SUBMENU_DIAGNOS_CMN": "318",
	// "Display" menu : common for all types of window
	"DISPLAY_EX": "324",
	// "Navigation" menu for "Girl" type window
	"NAVIGATION_GIRL": "325",
	// "Window" menu for "Girl" type window
	"WINDOW_GIRL": "326",
	// "Navigation" menu for "Own" type window
	"NAVIGATION_OWN": "320",
	// "Window" menu for "Own" type window
	"WINDOW_OWN": "321",
	// "File" menu for "Mother" window
	"FILE_MOTHER": "276",
	"NAVIGATION_MOTHER": "308",
	// "Tool" menu for "Mother" window
	"TOOL_MOTHER": "301",
	"SUBMENU_DIAGNOS_MOTHER": "317",
	// "Help" menu for "Mother" window
	"HELP_MOTHER": "312",
	// "Edition" menu for all types of window
	"EDITION_WIN": "278",
	// Misc ID of "edition" menu items....
	"EDITION_UNDO": "289",
	"EDITION_CUT": "290",
	"EDITION_COPY": "291",
	"EDITION_PASTE": "292",
	// "RichEdit" menu for all types of window
	"RICHEDIT_WIN": "283",
	// Miscs menu for V140 window "Girl"
	"FILE_GIRL_V140": "277",
	"TOOL_GIRL_V140": "299",
	"DISPLAY_GIRL_V140": "279",
	"HELP_V140": "280",
	// Miscs menu for V140 window "Own"
	"FILE_OWN_V140": "293",
	"DISPLAY_OWN_V140": "295",
	"SELECTION_OWN_V140": "311",
	"TOOL_OWN_V40": "300",
	// Miscs menu for Editor windows
	"FILE_EDITORL4G": "296",
	"TOOL_EDITORL4G": "298",
	"FILE_EDITORRTF": "302",
	"EDITION_EDITOR": "297",
	"FILE_EDITORGRA": "303",
	"EDITION_EDITORGRA": "304",
	"TOOL_EDITORGRA": "305",
	"HELP_MINI_EDITORS": "313",
	// Obsolet menus
	"SELECTION_GIRL_OBSOLET": "310",
	"APPLICATIVE_OBSOLET": "327",
	// Not Used ID
	"SEPARATOR": "275",
	"DUMMY": "294",
	// Special
	"ROOT_SUPERVISOR": "307",
	"SUBMENU_MORE_GIRL": "994",
	"SUBMENU_MORE_OWN": "995",
	"STATUS_CMN": "996",
	"BTN_WIN": "997",
	"MAGNETO_GIRL": "998",
	"MAGNETO_OWN": "999"
};

function _addMenus(menusObj, tabMenusFather, menus, options) {
	if (menusObj && menus) {
		_.each(menus, function(menu) {
			_cureMenu(menusObj, menu);
			if (options && options.grp && (!menu.opts || !menu.opts.grp)) {
				if (menu.opts) {
					menu.opts.grp = options.grp;
				} else {
					menu.opts = {
						"grp": options.grp
					};
				}
			}
			_addMenu(menusObj, tabMenusFather, menu, options);
		});
	}
}

function _addMenu(menusObj, tabMenusFather, menu, options) {
	var father = tabMenusFather && tabMenusFather[menu.fid] ? tabMenusFather[menu.fid] : menusObj[menu.fid];
	if (!father) {
		if (options && options.logger) {
			options.logger.debug({
				"severety": "warn"
			}, "'winMenu._addMenu' : attemp to add an item menu to an unknown menu id (" + menu.fid + ")");
		}
		return;
	} else
	if (menu.inactive) {
		return;
	}
	if (!father.items) {
		father.items = {};
	}
	father.items[menu.id] = menu;
	if (_kMnuTypes[menu.typ] & _kMnuHelper.cat.popup) {
		father.items[menu.id].items = {};
		if (tabMenusFather) {
			tabMenusFather[menu.id] = father.items[menu.id];
		}
	}
}

function _releaseMenusObj(menusObj) {
	_.each(menusObj, function(menu, key) {
		if (menu.items) {
			_releaseMenusObj(menu.items);
		}
		delete this[key];
	}, menusObj);
}

function _cureMenu(menusObj, menuItem) {
	// Exclude "tunnel"
	if (menuItem.act == requestActions.getSrvAction("SRV_TUNNEL")) {
		menuItem["inactive"] = true;
	}
	// SubMenu Export and these items... TODO : should be better to set this properties Superviseur Side!
	if (menuItem.id == 18000 && menuItem.rnk == 58 && menuItem.fid == _menuIDs["FILE_EX"] && menuItem.typ == 0) {
		menuItem["opts"] = {
			"collapsed": true,
			"popup": false
		};
		menuItem.rnk = 67;
	}
	if (menuItem.fid == 18000 && menuItem.typ == 1) {
		if (menuItem.act == 1174) {
			menuItem["opts"] = {
				"ico": "s-link-syracuse-word-mailmerge",
				"icoVp": "file"
			};
			menuItem.typ = 6;
		} else
		if (menuItem.act == 1185) {
			menuItem["opts"] = {
				"ico": "s-link-syracuse-excel-worksheet",
				"icoVp": "file"
			};
			menuItem.typ = 6;
		}
	}
	if (menuItem.fid == _menuIDs.DISPLAY_EX) {
		// Change "refresh" item's father 
		if (menuItem.act == requestActions.specialSrvActId.refresh) {
			menuItem.fid = _menuIDs.STATUS_CMN;
			menuItem.rnk = 1;
			menuItem["opts"] = {
				"ico": "306",
				"icoVp": "x3icomnu"
			};
			menuItem.typ = 4;
			menusObj._isRefreshRegistered = true;
			menusObj._refreshDesc = {
				"$title": menuItem.txt,
				"acl": menuItem.acl
			};
			menuItem.inactive = false;
		}
		// Change "converter" item's father 
		if (menuItem.act == requestActions.specialSrvActId.converter) {
			menuItem.fid = _menuIDs.FILE_EX;
			menuItem.rnk = 55;
		}
		// Change "Select Transaction" item's father 
		if (menuItem.act == requestActions.specialSrvActId.selTransact) {
			menuItem.fid = _menuIDs.FILE_EX;
			menuItem.rnk = 56;
		}
		// Discard "last read"
		if (menuItem.act == requestActions.specialSrvActId.lastRead) {
			menuItem["inactive"] = true;
		}
	}
	if (menuItem.fid == _menuIDs.ROOT_SUPERVISOR && menuItem.id >= 50500 && menuItem.rnk == 80 && menuItem.act == 1024) {
		// Change "Select" rank
		menuItem.rnk = _insertRank.grpUtilities - 1;
		menuItem["opts"] = {
			"collapsed": true,
			"grp": _kMnuHelper.group.grpExtra.cld
		};
	}
}

function _addSubMenu(rootMenu, subMenu, subId, rank) {
	if (!rootMenu.items) {
		rootMenu.items = {};
	}
	rootMenu.items[subId] = subMenu;
	rootMenu.items[subId].rnk = rank;
	rootMenu.items[subId].typ = subMenu.typ || 0;
}

function MenuManagement() {}

exports.MenuManagement = helpers.defineClass(MenuManagement, null, {
	initialize: function(hoster, session, commonMenus) {
		var timer = utilBis.getTimer(true),
			i, len;
		if (commonMenus && commonMenus.length > 0 && !this._initialized) {
			this._hoster = hoster;
			this._session = session;
			this._idMnuCpt = 512;
			this._mnuWithMagneto = _menuWithMagneto;
			this.winMenuColl = {};
			this._tabMenusFather = {};
			this.coreMenus = this._getCoreMenuIDs();
			this._setHideAccordingActivation(commonMenus);
			_insertRank.help += _insertRank.protoMnus;
			_insertRank.grpUtilities = _insertRank.help - 10;
			_addMenus(this.coreMenus, this._tabMenusFather, commonMenus, {
				"logger": this._session.logger
			});
			this._addInternalCoreMenu();
			this._initialized = true;
			//this._session.logger.timer(null, "Load core menus : total [" + timer.elapsedMs() + "]");
		}
	},

	_statusWithMenu: {
		"260": {
			"mnu": {
				"act": "SRV_FICHIER_COMMENTAIRE",
				"ico": _kMnuHelper.stdIco.comment
			},
			"status": {
				"ico": "260",
				"acts": [3355],
				"rnk": _insertRank.cmntInStatus,
				"txt": "17"
			}
		},
		"238": {
			"mnu": {
				"act": "SRV_FICHIER_PIECE_JOINT",
				"ico": _kMnuHelper.stdIco.pj
			},
			"status": {
				"ico": "238",
				"acts": [3356],
				"rnk": _insertRank.pjInStatus,
				"txt": "16"
			}
		}
	},

	_getWinMenuId: function(winId) {
		var winMenu;
		return this.winMenuColl && (winMenu = this.winMenuColl[winId]) ? winMenu._getWinId() : null;
	},

	_setHideAccordingActivation: function(commonMenus) {
		var i, len, mnu;
		this.hideAccordingActivation = {};
		this.hideAccordingActivation[requestActions.getSrvAction("SRV_FICHIER_STATISTIQUE")] = true;
		for (i = 0, len = commonMenus.length; i < len; i++) {
			mnu = commonMenus[i];
			if (mnu.fid == _menuIDs.DISPLAY_EX && (mnu.act == requestActions.specialSrvActId.selTransact || mnu.act == requestActions.specialSrvActId.refresh)) {
				this.hideAccordingActivation[mnu.act] = true;
			}
		}
	},

	_addInternalCoreMenu: function() {
		var mnuId, self = this,
			helpHandler = sapUtil.helpHandler;
		/*Add items to root menus*/
		// Items of "DISPLAY_EX"
		// Items of "NAVIGATION_MOTHER"
		_addMenu(this.coreMenus, this._tabMenusFather, this._getMenuItem(_menuIDs.NAVIGATION_MOTHER, this._idMnuCpt++, null, "10", 1, 20, null, "SRV_ADXEXECUTE"));
		// Items of "SUBMENU_DIAGNOS_MOTHER"
		_addMenu(this.coreMenus, this._tabMenusFather, this._getMenuItem(_menuIDs.SUBMENU_DIAGNOS_MOTHER, this._idMnuCpt++, null, "11", 1, 10, null, "SRV_CALCULATRICE"));
		_addMenu(this.coreMenus, this._tabMenusFather, this._getMenuItem(_menuIDs.SUBMENU_DIAGNOS_MOTHER, this._idMnuCpt++, null, "12", 1, 20, null, "SRV_DEBUGGER"));
		// Items of "WINDOW_OWN"
		_addMenu(this.coreMenus, this._tabMenusFather, this._getMenuItem(_menuIDs.WINDOW_OWN, this._idMnuCpt++, null, "13", 1, 11, null, null, true));
		// Items of "WINDOW_GIRL"
		_addMenu(this.coreMenus, this._tabMenusFather, this._getMenuItem(_menuIDs.WINDOW_GIRL, this._idMnuCpt++, null, "13", 1, 11, null, null, true));
		// Items of "SUBMENU_DIAGNOS_CMN"
		_addMenu(this.coreMenus, this._tabMenusFather, this._getMenuItem(_menuIDs.SUBMENU_DIAGNOS_CMN, this._idMnuCpt++, null, "11", 6, 11, null, "SRV_CALCULATRICE", false, {
			"ico": "42",
			"icoVp": "x3icomnu",
			"acl": 3147
		}));
		_addMenu(this.coreMenus, this._tabMenusFather, this._getMenuItem(_menuIDs.SUBMENU_DIAGNOS_CMN, this._idMnuCpt++, null, "12", 6, 12, null, "SRV_DEBUGGER", false, {
			"ico": "282",
			"icoVp": "x3icomnu"
		}));
		// Items of "FILE_EX"
		_addMenu(this.coreMenus, this._tabMenusFather, this._getMenuItem(_menuIDs.FILE_EX, this._idMnuCpt++, null, "15", 1, 20, null, "SRV_SEL_CHANGE_MOT_CLE"));
		_addMenu(this.coreMenus, this._tabMenusFather, this._getMenuItem(_menuIDs.FILE_EX, this._idMnuCpt++, null, "9", 1, 21, null, "SRV_FICHIER_STATISTIQUE"));
		_addMenu(this.coreMenus, this._tabMenusFather, this._getMenuItem(_menuIDs.FILE_EX, this._idMnuCpt++, null, "26", 1, 22, null, "SRV_FICHIER_LIAISON"));
		_addMenu(this.coreMenus, this._tabMenusFather, this._getMenuItem(_menuIDs.FILE_EX, this._idMnuCpt++, null, "0", 2, 40, null, null));
		_addMenu(this.coreMenus, this._tabMenusFather, this._getMenuItem(_menuIDs.FILE_EX, this._idMnuCpt++, null, "0", 2, 60, null, null));
		_addMenu(this.coreMenus, this._tabMenusFather, this._getMenuItem(_menuIDs.FILE_EX, this._idMnuCpt++, null, "0", 2, 70, null, null));
		_addMenu(this.coreMenus, this._tabMenusFather, this._getMenuItem(_menuIDs.FILE_EX, this._idMnuCpt++, null, "21", 1, 50, null, "SRV_FICHIER_PROPRIETE"));
		_addMenu(this.coreMenus, this._tabMenusFather, this._getMenuItem(_menuIDs.FILE_EX, this._idMnuCpt++, null, "20", 1, 51, null, "SRV_FICHIER_WORKFLOW", false, {
			"ico": "237",
			"icoVp": "x3icomnu"
		}));
		// Items for "STATUS_CMN"
		_addMenu(this.coreMenus, this._tabMenusFather, this._getMenuItem(_menuIDs.STATUS_CMN, this._idMnuCpt++, null, "16", 4, _insertRank.pjInStatus, null, "SRV_FICHIER_PIECE_JOINT", false, {
			"ico": _kMnuHelper.stdIco.pj,
			"icoVp": "x3icomnu"
		}));
		_addMenu(this.coreMenus, this._tabMenusFather, this._getMenuItem(_menuIDs.STATUS_CMN, this._idMnuCpt++, null, "17", 4, _insertRank.cmntInStatus, null, "SRV_FICHIER_COMMENTAIRE", false, {
			"ico": _kMnuHelper.stdIco.comment,
			"icoVp": "x3icomnu"
		}));
		_.each(this._statusWithMenu, function(item, key) {
			_.each(item.status.acts, function(act, idx) {
				// By default, add and hide alternative icon "status" menu bound with menu item
				_addMenu(self.coreMenus, self._tabMenusFather, self._getMenuItem(_menuIDs.STATUS_CMN, self._idMnuCpt++, null, this.status.txt, 4, this.status.rnk + idx + 1, act, null, false, {
					"ico": this.status.ico,
					"icoVp": "x3icomnu",
					"hidden": true
				}));
			}, item);
		});
		// Items of HELP_EX
		_addMenu(this.coreMenus, this._tabMenusFather, this._getMenuItem(_menuIDs.HELP_EX, this._idMnuCpt++, null, "29", 1, 11, requestActions.svcHelp, "AIDE_SUR_CHAMP", false, null, helpHandler.fld.linkId));
		_addMenu(this.coreMenus, this._tabMenusFather, this._getMenuItem(_menuIDs.HELP_EX, this._idMnuCpt++, null, "28", 1, 12, requestActions.svcHelp, "AIDE_SUR_FONCTION", false, null, helpHandler.fct.linkId));
		_addMenu(this.coreMenus, this._tabMenusFather, this._getMenuItem(_menuIDs.HELP_EX, this._idMnuCpt++, null, "0", 2, 50, null, null));
		// Items of "SUBMENU_PRINT_CMN" 
		_addMenu(this.coreMenus, this._tabMenusFather, this._getMenuItem(_menuIDs.SUBMENU_PRINT_CMN, this._idMnuCpt++, null, "18", 1, 10, null, "SRV_FICHIER_PRINT", false, {
			"acl": 1104
		}));
		_addMenu(this.coreMenus, this._tabMenusFather, this._getMenuItem(_menuIDs.SUBMENU_PRINT_CMN, this._idMnuCpt++, null, "19", 1, 20, null, "SRV_FICHIER_PRINT_LISTE", false, {
			"acl": 1100
		}));
		// Items of "NAVIGATION_OWN"
		mnuId = !this._mnuWithMagneto || !_kWinOwnMagneto ? _menuIDs.NAVIGATION_OWN : _menuIDs.MAGNETO_OWN;
		_addMenu(this.coreMenus, this._tabMenusFather, this._getMenuItem(mnuId, this._idMnuCpt++, null, "22", 1, 11, null, "SRV_FICHIER_PREMIER", false, null, "$first"));
		_addMenu(this.coreMenus, this._tabMenusFather, this._getMenuItem(mnuId, this._idMnuCpt++, null, "23", 1, 12, null, "SRV_FICHIER_PRECEDENT", false, null, "$previous"));
		_addMenu(this.coreMenus, this._tabMenusFather, this._getMenuItem(mnuId, this._idMnuCpt++, null, "24", 1, 13, null, "SRV_FICHIER_SUIVANT", false, null, "$next"));
		_addMenu(this.coreMenus, this._tabMenusFather, this._getMenuItem(mnuId, this._idMnuCpt++, null, "25", 1, 15, null, "SRV_FICHIER_DERNIER", false, null, "$last"));
		if (!this._mnuWithMagneto || !_kWinOwnMagneto) {
			_addMenu(this.coreMenus, this._tabMenusFather, this._getMenuItem(_menuIDs.NAVIGATION_OWN, this._idMnuCpt++, null, "0", 2, 20, null, null));
		}
		_addMenu(this.coreMenus, this._tabMenusFather, this._getMenuItem(_menuIDs.NAVIGATION_OWN, this._idMnuCpt++, null, "10", 1, 21, null, "SRV_ADXEXECUTE", true));
		// Items of "NAVIGATION_GIRL" 
		mnuId = !this._mnuWithMagneto ? _menuIDs.NAVIGATION_GIRL : _menuIDs.MAGNETO_GIRL;
		_addMenu(this.coreMenus, this._tabMenusFather, this._getMenuItem(mnuId, this._idMnuCpt++, null, "22", 1, 11, null, "SRV_FICHIER_PREMIER", false, null, "$first"));
		_addMenu(this.coreMenus, this._tabMenusFather, this._getMenuItem(mnuId, this._idMnuCpt++, null, "23", 1, 12, null, "SRV_FICHIER_PRECEDENT", false, null, "$previous"));
		_addMenu(this.coreMenus, this._tabMenusFather, this._getMenuItem(mnuId, this._idMnuCpt++, null, "24", 1, 13, null, "SRV_FICHIER_SUIVANT", false, null, "$next"));
		_addMenu(this.coreMenus, this._tabMenusFather, this._getMenuItem(mnuId, this._idMnuCpt++, null, "25", 1, 15, null, "SRV_FICHIER_DERNIER", false, null, "$last"));
		if (!this._mnuWithMagneto) {
			_addMenu(this.coreMenus, this._tabMenusFather, this._getMenuItem(_menuIDs.NAVIGATION_GIRL, this._idMnuCpt++, null, "0", 2, 20, null, null));
		}
		_addMenu(this.coreMenus, this._tabMenusFather, this._getMenuItem(_menuIDs.NAVIGATION_GIRL, this._idMnuCpt++, null, "10", 1, 21, null, "SRV_ADXEXECUTE", true));

		// Now, attach core submenus to root menus*/
		this.addCoreSubMenuToRoot(_menuIDs.STATUS_CMN, _menuIDs.SUBMENU_PRINT_CMN, 2);
		this.addCoreSubMenuToRoot(_menuIDs.HELP_EX, _menuIDs.SUBMENU_DIAGNOS_CMN, 51);
		this.addCoreSubMenuToRoot(_menuIDs.TOOL_MOTHER, _menuIDs.SUBMENU_DIAGNOS_MOTHER, 50);
	},

	addCoreSubMenuToRoot: function(fid, id, rank) {
		_addSubMenu(this.coreMenus[fid], this.coreMenus[id], id, rank);
	},

	_getMenuItem: function(fid, id, txt, txtNum, typ, rnk, act, actTxt, inactive, opts, linkId) {
		var acl;
		if (opts && opts.acl) {
			acl = opts.acl;
			delete opts.acl;
		}
		return {
			"fid": fid,
			"id": id.toString(),
			"txt": txt || this._session.getlabel("text", txtNum, txtNum),
			"typ": typ,
			"rnk": rnk,
			"act": act || requestActions.getSrvAction(actTxt),
			"inactive": inactive,
			"linkId": linkId,
			"acl": acl,
			"opts": (opts ? util.duplicateObj(opts) : undefined)
		};
	},

	addMnuBarToProto: function(winId, winFacet, winMenusDef, winProto, options) {
		var winMenuId, i, j, k, l, len, linksArray, working, timer = utilBis.getTimer(true),
			title, len, bar, nbLayoutItems, mainGrpInProto, mainBtnId, refreshId, splitup, mnuItem, $mnus = [],
			$mnusEx, mainGrpLayoutRank = 0,
			closeItemMngt = {
				"rankInColl": -1
			}, mainSlotItem = {
				"link": null,
				"button": null
			};
		// Init
		if ((working = winProto.$menus)) {
			// Comaptibility mode...
			if (_.isObject(working)) {
				if (working.$layout && (working = working.$layout.$items)) {
					for (i = 0, len = working.length; i < len; i++) {
						$mnus.push(working[i]);
					}
				}
			} else {
				$mnus = util.duplicateObj(working);
			}
		}
		nbLayoutItems = $mnus.length;
		// Check "main" group
		mainGrpInProto = !! (nbLayoutItems > 0 && $mnus[mainGrpLayoutRank].$style && $mnus[mainGrpLayoutRank].$style === _kMnuHelper.grpMainSty);
		if (mainGrpInProto) {
			$mnus[mainGrpLayoutRank].rnk = 1;
			$mnus[mainGrpLayoutRank]._cloudId = _kMnuHelper.group.grpCrud.cld;
			// Is there a "end" style item in the main group?
			closeItemMngt.coll = $mnus[mainGrpLayoutRank].$layout;
			if (closeItemMngt.coll && (closeItemMngt.coll = closeItemMngt.coll.$items)) {
				for (i = 0, closeItemMngt.nbItemsInMainGp = closeItemMngt.coll.length; i < closeItemMngt.nbItemsInMainGp; i++) {
					if (closeItemMngt.coll[i].$style == _kMnuHelper.itemEndSty) {
						closeItemMngt.rankInColl = i;
						break;
					}
				}
			}
		}
		// Get win bar def
		if (!(bar = this._getWinMenuBar(winId, winFacet, winMenusDef, winProto, !mainGrpInProto, options))) {
			return;
		}
		winMenuId = this._getWinMenuId(winId) || winId;
		// Set menu defined in prototype layout, consider that items set in proto are members of "ROOT_SUPERVISOR", so the last group in the bar
		if (nbLayoutItems === 0) {
			$mnus = bar.$menus.$items;
		} else
		if ((len = bar.$menus.$items.length) > 0) {
			j = mainGrpInProto ? mainGrpLayoutRank + 1 : 0;
			for (i = j; i < nbLayoutItems; i++) {
				$mnus[i]._cloudId = _kMnuHelper.group.grpLinks.cld;
				if ((title = $mnus[i].$title)) {
					// Add "id" on each top entry
					len = title.length - 1;
					$mnus[i].$clientId = (title[0] == "{" && title[len] == "}" ? title.substring(1, len) : title) + winMenuId;
					// TODO : walk through item's layout to set "id" in sublevel?
				}
			}
			i = 0;
			while (i < len && bar.$menus.$items[i].rnk <= _insertRank.protoMnus) {
				$mnus.splice(i + j, 0, bar.$menus.$items[i++]);
			}
			for (j = i, len = bar.$menus.$items.length; j < len; j++) {
				$mnus.push(bar.$menus.$items[j]);
			}
		}
		// Init default main slot item
		mainBtnId = requestActions.getSrvAction("SRV_FICHIER_NOUVEAU");
		mainSlotItem.link = {
			"$bind": mainBtnId,
			"$act": mainBtnId,
			"ico": {
				"$mode": "iconText",
				"$path": "page/",
				"$value": "s-action-create"
			},
			"$title": this._session.getlabel("text", "14", "14")
		};
		// Deal with 'close' button
		if (closeItemMngt.rankInColl >= 0) {
			if (!winFacet || !syraUtil.isDialogFacet(winFacet)) {
				mainSlotItem.button = {
					"$bind": closeItemMngt.coll[closeItemMngt.rankInColl].$bind,
					"$act": winProto.$links[closeItemMngt.coll[closeItemMngt.rankInColl].$bind].$act,
					"$title": winProto.$links[closeItemMngt.coll[closeItemMngt.rankInColl].$bind].$title,
					"ico": {
						"$mode": "icon",
						"$path": "x3iconsmenu/",
						"$value": "313"
					}
				};
			}
			closeItemMngt.coll.splice(closeItemMngt.rankInColl, 1);
		}
		// Add "main" link and button
		if ($mnus.length > 0 && winFacet != syraUtil.pageFacet.modal3) {
			i = 0;
			while ($mnus[i].$style && $mnus[i].$style !== _kMnuHelper.grpMainSty) {
				i++;
			}
			if (i < $mnus.length) {
				$mnus[i].$layout.$items.splice(0, 0, {
					"$layoutType": "row",
					"$items": [{
						"$bind": mainSlotItem.link.$bind,
						"$style": _kMnuHelper.itemMainSty
					}]
				});
				bar.$links[mainSlotItem.link.$bind] = {
					"$title": mainSlotItem.link.$title,
					"$act": mainSlotItem.link.$act
				};
				if (mainSlotItem.button) {
					$mnus[i].$layout.$items.splice(0, 0, {
						"$bind": mainSlotItem.button.$bind,
						"$style": _kMnuHelper.itemEndSty
					});
					bar.$links[mainSlotItem.button.$bind] = {
						"$title": mainSlotItem.button.$title,
						"$act": mainSlotItem.button.$act
					};
				}
			}
		} else
		if ($mnus.length == 1 && (mnuItem = $mnus[0].$layout) && (mnuItem = mnuItem.$items) && !mnuItem.$layout && mnuItem.length == 1) {
			mnuItem[0].$style = _kMnuHelper.itemMainSty;
		}

		// At the end, have to regroup first level items
		$mnusEx = winProto.$menus = [];
		j = -1;
		splitup = "";
		for (i = 0, len = $mnus.length; i < len; i++) {
			mnuItem = $mnus[i];
			if (mnuItem._cloudId !== splitup) {
				splitup = mnuItem._cloudId;
				delete mnuItem._cloudId;
				$mnusEx[++j] = {
					"$skin": _kMnuHelper.group[splitup].skin,
					"$layout": {
						"$items": []
					}
				};
			}
			if (!mnuItem.$title) {
				if (mnuItem.$layout) {
					for (k = 0, l = mnuItem.$layout.$items.length; k < l; k++) {
						$mnusEx[j].$layout.$items.push(mnuItem.$layout.$items[k]);
					}
					delete mnuItem.$layout.$items;
					working = Object.keys(mnuItem.$layout);
					for (k = 0, l = working.length; k < l; k++) {
						$mnusEx[j].$layout[working[k]] = mnuItem.$layout[working[k]];
					}
					if (mnuItem.$clientId) {
						$mnusEx[j].$clientId = mnuItem.$clientId;
					}
				} else {
					$mnusEx[j].$layout.$items.push(mnuItem);
				}
			} else {
				$mnusEx[j].$layout.$items.push(mnuItem);
			}
		}
		// Set links
		if (winProto.$links) {
			linksArray = Object.keys(winProto.$links);
			for (i = 0, len = linksArray.length; i < len; i++) {
				bar.$links[linksArray[i]] = util.duplicateObj(winProto.$links[linksArray[i]]);
			}
			delete winProto.$links;
		}
		winProto.$links = bar.$links;
		//this._session.logger.timer(null, "Add Menu Bar Definition : total [" + timer.elapsedMs() + "]");
		//this._session.logger.trace({"toJson": true}, "Menu Bar Syracuse : ", $mnusEx);
	},

	releaseWinMenu: function(winId) {
		var winMenu;
		if (this.winMenuColl && (winMenu = this.winMenuColl[winId])) {
			if (winMenu.winProto) {
				delete winMenu.winProto.$menus;
				delete winMenu.winProto.$links;
			}
			winMenu.dispose();
			delete this.winMenuColl[winId];
		}
	},

	_getWinMenuBar: function(winId, winFacet, winMenusDef, winProto, setMainGrp, options) {
		var showMagneto = options && options.hideMagneto ? false : true;
		if (!this.winMenuColl) {
			if (this._session && this._session.logger) {
				this._session.logger.trace({
					"severety": "warn",
					"toJson": false
				}, "Session settings menus definition aren't been set!");
			}
			return null;
		}
		if (this.winMenuColl[winId]) {
			this.releaseWinMenu(winId);
		}
		(this.winMenuColl[winId] = new WinMenu()).initialize(this, winId, winMenusDef, winProto, winFacet, setMainGrp, this._mnuWithMagneto && showMagneto, this._session, options);
		this.winMenuColl[winId].buildMenus();
		//this._session.logger.trace({"toJson": true}, "Menu Bar JSON : ", this.winMenuColl[winId].menuBarTree);
		return this.winMenuColl[winId].getMenuBar();
	},

	addStatusIco: function(winId, syraUISheet, icoId, act, showFlag) {
		var ret = true,
			winMenu, isStatusMnu = this._statusWithMenu[icoId] && this._statusWithMenu[icoId].status.acts.indexOf(act) >= 0;
		if ((winMenu = this.winMenuColl[winId]) && syraUISheet) {
			if (isStatusMnu && winMenu.menuBarTree.items[_menuIDs.STATUS_CMN]) {
				// Hide standard status menu ico
				showFlag = true;
				this.updateMnuItem(syraUISheet, requestActions.getSrvAction(this._statusWithMenu[icoId].mnu.act), true);
			} else {
				isStatusMnu = false;
			}
			// If ico already exist, just show it... otherwise, add it
			ret = showFlag ? this.updateMnuItem(syraUISheet, act, false) : this.addIcoItemToMnu(syraUISheet, _menuIDs.STATUS_CMN + this._getWinMenuId(winId), act, !isStatusMnu ? icoId : this._statusWithMenu[icoId].status.ico, "x3icomnu");
		}
		return ret;
	},

	removeStatusIco: function(winId, syraUISheet, icoId, act) {
		var ret = true,
			statusMnuAct, winMenu, isStatusMnu = this._statusWithMenu[icoId] && this._statusWithMenu[icoId].status.acts.indexOf(act) >= 0;
		if ((winMenu = this.winMenuColl[winId]) && syraUISheet) {
			if (isStatusMnu && winMenu.menuBarTree.items[_menuIDs.STATUS_CMN]) {
				// Show standard status menu ico
				statusMnuAct = requestActions.getSrvAction(this._statusWithMenu[icoId].mnu.act);
				this.updateMnuItem(syraUISheet, statusMnuAct, false, !this._hoster.isActionEnabled(winId, statusMnuAct));
			}
			this.updateMnuItem(syraUISheet, act, true);
		}
		return ret;
	},

	addIcoItemToMnu: function(syraUISheet, mnuGrpId, act, icoId, icoPath, isHidden) {
		var newItem = {
			"$links": {}
		}, ret = true;
		newItem.$links[act] = {
			"$act": act
		};
		_kMnuHelper.appendIco({
			"typ": "4",
			"opts": {
				"icoVp": icoPath,
				"ico": icoId
			}
		}, newItem.$links[act]);
		if (isHidden) {
			newItem.$links[act].$isHidden = isHidden;
		}
		syra_menus.addMenuItemsToGroup(syraUISheet, newItem, mnuGrpId);
		return true;
	},

	updateMnuItem: function(syraUISheet, id, isHidden, isDisabled) {
		var ret = true,
			updateItem = {
				"$links": {}
			};
		updateItem.$links[id] = {};
		if (isHidden !== undefined) {
			updateItem.$links[id].$isHidden = isHidden;
		}
		if (isDisabled !== undefined) {
			updateItem.$links[id].$isDisabled = isDisabled;
		}
		syraUISheet.applyChange(updateItem);
		return ret;
	},

	dispose: function() {
		_.each(this.winMenuColl, function(ptr, key) {
			this.releaseWinMenu(key);
		}, this);
		_.each(this._tabMenusFather, function(ptr, key) {
			delete this[key];
		}, this._tabMenusFather);
		_releaseMenusObj(this.coreMenus);
		if (this._session) {
			delete this._session;
		}
		delete this._hoster;
	},

	_getCoreMenuIDs: function() {
		var ids = {};
		// Common for all types of window
		ids[_menuIDs.FILE_EX] = {
			"tag": "FILE_EX",
			"txt": this._session.getlabel("text", 2, "File"),
			"typ": 0,
			"opts": {
				"collapsed": true
			},
			"items": {}
		};
		ids[_menuIDs.SUBMENU_PRINT_CMN] = {
			"tag": "SUBMENU_PRINT_CMN",
			"txt": this._session.getlabel("text", 3, "Print"),
			"typ": "3",
			"opts": {
				"collapsed": true,
				"popup": true,
				"ico": "6",
				"icoVp": "x3icomnu",
				"layout": "row"
			}
		};
		ids[_menuIDs.HELP_EX] = {
			"tag": "HELP_EX",
			"txt": this._session.getlabel("text", 4, "Help"),
			"typ": 0,
			"opts": {
				"collapsed": true
			}
		};
		ids[_menuIDs.SUBMENU_DIAGNOS_CMN] = {
			"tag": "SUBMENU_DIAGNOS_CMN",
			"txt": this._session.getlabel("text", 5, "Diagnosis"),
			"typ": 0
		};
		ids[_menuIDs.DISPLAY_EX] = {
			"tag": "DISPLAY_EX",
			"txt": this._session.getlabel("text", 6, "Display"),
			"typ": 0,
			"opts": {
				"collapsed": true
			}
		};
		ids[_menuIDs.STATUS_CMN] = {
			"tag": "STATUS_CMN",
			"txt": "",
			"typ": 7,
			"opts": {
				"layout": "row"
			}
		};

		// "Girl" menus
		ids[_menuIDs.NAVIGATION_GIRL] = {
			"tag": "NAVIGATION_GIRL",
			"txt": this._session.getlabel("text", 7, "Navigation"),
			"typ": 0
		};
		ids[_menuIDs.WINDOW_GIRL] = {
			"tag": "WINDOW_GIRL",
			"txt": this._session.getlabel("text", 8, "Window"),
			"typ": 0
		};
		ids[_menuIDs.SUBMENU_MORE_GIRL] = {
			"tag": "SUBMENU_MORE_GIRL",
			"txt": this._session.getlabel("text", 27, "More"),
			"typ": 7,
			"opts": {
				"sty": _kMnuHelper.moreSty
			}
		};

		// "Own" menus
		ids[_menuIDs.NAVIGATION_OWN] = {
			"tag": "NAVIGATION_OWN",
			"txt": this._session.getlabel("text", 7, "Navigation"),
			"typ": 0
		};
		ids[_menuIDs.WINDOW_OWN] = {
			"tag": "WINDOW_OWN",
			"txt": this._session.getlabel("text", 8, "Window"),
			"typ": 0
		};
		ids[_menuIDs.SUBMENU_MORE_OWN] = {
			"tag": "SUBMENU_MORE_OWN",
			"txt": this._session.getlabel("text", 27, "More"),
			"typ": 7,
			"opts": {
				"sty": _kMnuHelper.moreSty
			}
		};

		// "Special" magneto menus
		ids[_menuIDs.MAGNETO_GIRL] = {
			"tag": "MAGNETO_GIRL"
		};
		ids[_menuIDs.MAGNETO_OWN] = {
			"tag": "MAGNETO_OWN"
		};

		// "Mother" menus
		ids[_menuIDs.FILE_MOTHER] = {
			"tag": "FILE_MOTHER",
			"txt": this._session.getlabel("text", 2, "File"),
			"typ": 0
		};
		ids[_menuIDs.NAVIGATION_MOTHER] = {
			"tag": "NAVIGATION_MOTHER",
			"txt": this._session.getlabel("text", 7, "Navigation"),
			"typ": 0
		};
		ids[_menuIDs.TOOL_MOTHER] = {
			"tag": "TOOL_MOTHER"
		};
		ids[_menuIDs.SUBMENU_DIAGNOS_MOTHER] = {
			"tag": "SUBMENU_DIAGNOS_MOTHER",
			"txt": this._session.getlabel("text", 5, "Diagnosis"),
			"typ": 0
		};
		ids[_menuIDs.HELP_MOTHER] = {
			"tag": "HELP_MOTHER",
			"txt": this._session.getlabel("text", 4, "Help"),
			"typ": 0
		};

		// "Edition" menu for all types of window
		ids[_menuIDs.EDITION_WIN] = {
			"tag": "EDITION_WIN"
		};
		// Misc ID of "edition" menu items....
		ids[_menuIDs.EDITION_UNDO] = {
			"tag": "EDITION_UNDO"
		};
		ids[_menuIDs.EDITION_CUT] = {
			"tag": "EDITION_CUT"
		};
		ids[_menuIDs.EDITION_COPY] = {
			"tag": "EDITION_COPY"
		};
		ids[_menuIDs.EDITION_PASTE] = {
			"tag": "EDITION_PASTE"
		};
		// "RichEdit" menu for all types of window
		ids[_menuIDs.RICHEDIT_WIN] = {
			"tag": "RICHEDIT_WIN"
		};

		// Miscs menu for V140 window "Girl"
		ids[_menuIDs.FILE_GIRL_V140] = {
			"tag": "FILE_GIRL_V140"
		};
		ids[_menuIDs.TOOL_GIRL_V140] = {
			"tag": "TOOL_GIRL_V140"
		};
		ids[_menuIDs.DISPLAY_GIRL_V140] = {
			"tag": "DISPLAY_GIRL_V140"
		};
		ids[_menuIDs.HELP_V140] = {
			"tag": "HELP_V140"
		};

		// Miscs menu for V140 window "Own"
		ids[_menuIDs.FILE_OWN_V140] = {
			"tag": "FILE_OWN_V140"
		};
		ids[_menuIDs.DISPLAY_OWN_V140] = {
			"tag": "DISPLAY_OWN_V140"
		};
		ids[_menuIDs.SELECTION_OWN_V140] = {
			"tag": "SELECTION_OWN_V140"
		};
		ids[_menuIDs.TOOL_OWN_V40] = {
			"tag": "TOOL_OWN_V40"
		};

		// Miscs menu for Editor windows
		ids[_menuIDs.FILE_EDITORL4G] = {
			"tag": "FILE_EDITORL4G"
		};
		ids[_menuIDs.TOOL_EDITORL4G] = {
			"tag": "TOOL_EDITORL4G"
		};
		ids[_menuIDs.FILE_EDITORRTF] = {
			"tag": "FILE_EDITORRTF"
		};
		ids[_menuIDs.EDITION_EDITOR] = {
			"tag": "EDITION_EDITOR"
		};
		ids[_menuIDs.FILE_EDITORGRA] = {
			"tag": "FILE_EDITORGRA"
		};
		ids[_menuIDs.EDITION_EDITORGRA] = {
			"tag": "EDITION_EDITORGRA"
		};
		ids[_menuIDs.TOOL_EDITORGRA] = {
			"tag": "TOOL_EDITORGRA"
		};
		ids[_menuIDs.HELP_MINI_EDITORS] = {
			"tag": "HELP_MINI_EDITORS"
		};

		// Obsolet menus
		ids[_menuIDs.SELECTION_GIRL_OBSOLET] = {
			"tag": "SELECTION_GIRL_OBSOLET"
		};
		ids[_menuIDs.APPLICATIVE_OBSOLET] = {
			"tag": "APPLICATIVE_OBSOLET"
		};

		// Not Used ID
		ids[_menuIDs.SEPARATOR] = {
			"tag": "SEPARATOR"
		};
		ids[_menuIDs.DUMMY] = {
			"tag": "DUMMY"
		};
		return ids;
	},

	_getCoreMenuCtxIDs: function() {
		return {
			"309": {
				"tag": "QUICKHELP"
			},
			"281": {
				"tag": "CTX_GRID"
			},
			"282": {
				"tag": "CTX_LISTVIEW"
			},
			"284": {
				"tag": "CTX_RICHEDIT"
			},
			"285": {
				"tag": "CTX_EDIT"
			},
			"287": {
				"tag": "CTX_CHECK"
			},
			"286": {
				"tag": "CTX_COMBO"
			},
			"288": {
				"tag": "CTX_RADIO"
			},
			"306": {
				"tag": "CTX_TREEVIEW"
			},
			"314": {
				"tag": "CTX_IMAGE"
			},
			"315": {
				"tag": "CTX_BUTTON"
			},
			"316": {
				"tag": "CTX_XBLOCK"
			}
		};
	}
});

function WinMenu() {}

WinMenu = helpers.defineClass(WinMenu, null, {
	initialize: function(menuManager, winId, winMenus, winProto, winFacet, setMainGrp, showMagneto, session) {
		this._menuManager = menuManager;
		this._winFacet = winFacet;
		this._idMnuCpt = 99999000 + sapUtil.getWinRank(winId) * 100;
		this._showMagneto = showMagneto;
		this._setMainGrp = setMainGrp;
		this._session = session;
		this._winId = winId;
		this._tabMenusFather = {};
		this.menuBarTree = {
			"items": {}
		};
		this._menuBarObject = null;
		this._menus = this._getSpecialMenuIDs();
		if (winMenus && winMenus.length > 0) {
			_addMenus(this._menus, this._tabMenusFather, winMenus, {
				"logger": this._session.logger,
				"grp": _kMnuHelper.group.grpLinks.cld
			});
		}
		if (!this._winFacet || syraUtil.isFacetWithGotoFct(this._winFacet)) {
			// We simply register F7 (go to function) menu item... in "hidden" mode, knowing this item is linked with the site header bar.
			_addMenu(this._menus, this._tabMenusFather, this._menuManager._getMenuItem(_menuIDs.ROOT_SUPERVISOR, this._idMnuCpt++, null, "10", 6, _insertRank.grpUtilities - 2, null, "SRV_ADXEXECUTE", false, {
				"ico": "226",
				"icoVp": "x3icomnu",
				"hidden": true,
				"grp": _kMnuHelper.group.grpExtra.cld
			}));
		}
		if (winProto.$actions) {
			this._addWinProtoAction(winProto.$actions);
			delete winProto.$actions;
		}
		this.winProto = winProto;
	},

	getMenuBar: function() {
		if (!this._menuBarObject) {
			this._menuBarObject = this.buildTreeMenusObj();
		}
		return this._menuBarObject;
	},

	_getWinId: function(getShortId) {
		return (getShortId ? "" : "#trans-") + this._winId;
	},

	_addWinProtoAction: function(actions) {
		var len, actsdArray, i, actItm;
		actsdArray = Object.keys(actions);
		for (i = 0, len = actsdArray.length; i < len; i++) {
			actItm = actions[actsdArray[i]];
			_addMenu(this._menus, null, this._menuManager._getMenuItem(_menuIDs.BTN_WIN, this._idMnuCpt++, null, actItm.$title, 1, i + 50, actItm.$act, undefined, undefined, undefined, actsdArray[i]));
		}
		this._hasActWin = len > 0 ? true : false;
	},

	buildMenus: function() {
		var map = null,
			appMemus, coreMenus = this._menuManager.coreMenus,
			extraGrp = _kMnuHelper.group.grpExtra.cld;
		// Map standards menus by group...
		if (!this._winFacet || this._winFacet === syraUtil.pageFacet.edit) {
			map = [{
				"id": _menuIDs.STATUS_CMN,
				"rnk": _insertRank.status,
				"grp": _kMnuHelper.group.grpTools.cld
			}, {
				"id": _menuIDs.DISPLAY_EX,
				"rnk": _insertRank.help - 5,
				"grp": extraGrp
			}, {
				"id": _menuIDs.NAVIGATION_GIRL,
				"rnk": _insertRank.help - 3,
				"grp": extraGrp
			}, {
				"id": _menuIDs.WINDOW_GIRL,
				"rnk": _insertRank.help - 2,
				"grp": extraGrp
			}, {
				"id": _menuIDs.HELP_EX,
				"rnk": _insertRank.help,
				"grp": extraGrp
			}];
			if (_menuWithMainMore && this._hasActWin && this._setMainGrp) {
				// Deal with more popup...
				this._menuManager.addCoreSubMenuToRoot(_menuIDs.SUBMENU_MORE_GIRL, _menuIDs.FILE_EX, 1);
				_addSubMenu(this._menus[_menuIDs.BTN_WIN], coreMenus[_menuIDs.SUBMENU_MORE_GIRL], _menuIDs.SUBMENU_MORE_GIRL, 999);
			} else {
				map.push({
					"id": _menuIDs.FILE_EX,
					"rnk": _insertRank.grpUtilities,
					"grp": extraGrp
				});
			}
		} else
		if (this._winFacet === syraUtil.pageFacet.modal2) {
			map = [{
				"id": _menuIDs.STATUS_CMN,
				"rnk": _insertRank.status,
				"grp": _kMnuHelper.group.grpTools.cld
			}, {
				"id": _menuIDs.DISPLAY_EX,
				"rnk": _insertRank.help - 5,
				"grp": extraGrp
			}, {
				"id": _menuIDs.NAVIGATION_OWN,
				"rnk": _insertRank.help - 3,
				"grp": extraGrp
			}, {
				"id": _menuIDs.WINDOW_OWN,
				"rnk": _insertRank.help - 2,
				"grp": extraGrp
			}, {
				"id": _menuIDs.HELP_EX,
				"rnk": _insertRank.help,
				"grp": extraGrp
			}];
			if (_menuWithMainMore && this._hasActWin && this._setMainGrp) {
				// Deal with more popup...
				this._menuManager.addCoreSubMenuToRoot(_menuIDs.SUBMENU_MORE_OWN, _menuIDs.FILE_EX, 1);
				_addSubMenu(this._menus[_menuIDs.BTN_WIN], coreMenus[_menuIDs.SUBMENU_MORE_OWN], _menuIDs.SUBMENU_MORE_OWN, 999);
			} else {
				map.push({
					"id": _menuIDs.FILE_EX,
					"rnk": _insertRank.grpUtilities,
					"grp": extraGrp
				});
			}
		}
		_.each(map, function(menu) {
			this[menu.id] = coreMenus[menu.id];
			this[menu.id].rnk = menu.rnk;
			if (this[menu.id].opts) {
				this[menu.id].opts.grp = menu.grp;
			} else {
				this[menu.id].opts = {
					"grp": menu.grp
				};
			}
		}, this.menuBarTree.items);
		// ... add window buttons "actions" menus...
		if (this._hasActWin) {
			if (this._setMainGrp) {
				this._menus[_menuIDs.BTN_WIN].opts.sty = _kMnuHelper.grpMainSty;
				this._menus[_menuIDs.BTN_WIN].rnk = 1;
				this._menus[_menuIDs.BTN_WIN].opts.grp = _kMnuHelper.group.grpCrud.cld;
			} else {
				this._menus[_menuIDs.BTN_WIN].opts.sty = null;
				this._menus[_menuIDs.BTN_WIN].rnk = _insertRank.status - 1;
				this._menus[_menuIDs.BTN_WIN].opts.grp = _kMnuHelper.group.grpAct.cld;
			}
			this.menuBarTree.items[_menuIDs.BTN_WIN] = this._menus[_menuIDs.BTN_WIN];
		}
		// ... then add applicative menu groups
		if ((appMemus = this._menus[_menuIDs.ROOT_SUPERVISOR].items)) {
			_.each(appMemus, function(menu) {
				this[menu.id] = appMemus[menu.id];
				this[menu.id].rnk = menu.rnk;
			}, this.menuBarTree.items);
		}
	},

	buildTreeMenusObj: function() {
		var $menus = {
			"$items": []
		}, $links = {}, magnetoMnuId, i, len, magnetoArray, magetoItem, coreMenus = this._menuManager.coreMenus;
		var winId = this._getWinId();

		function walk(srcItems, trgtItems, ctx) {
			var len, srcItemsArray, i, act, style, mnuItem, layout, opts, linkId;
			srcItemsArray = (Object.keys(srcItems)).sort(function(left, right) {
				if (srcItems[left].rnk > srcItems[right].rnk || srcItems[left].rnk === void 0) {
					return 1;
				}
				if (srcItems[left].rnk < srcItems[right].rnk || srcItems[right].rnk === void 0) {
					return -1;
				} else {
					return 0;
				}
			});
			for (i = 0, len = srcItemsArray.length; i < len; i++) {
				if (!srcItems[srcItemsArray[i]].inactive && !_kMnuHelper.isItemSep(srcItems[srcItemsArray[i]].typ)) {
					style = srcItems[srcItemsArray[i]].opts ? srcItems[srcItemsArray[i]].opts.sty : undefined;
					if ((_kMnuTypes[srcItems[srcItemsArray[i]].typ] & _kMnuHelper.cat.popup) && ((srcItems[srcItemsArray[i]].items && (Object.keys(srcItems[srcItemsArray[i]].items)).length > 0) || _kMnuHelper.isPopupNoFacet(srcItems[srcItemsArray[i]].typ))) {
						mnuItem = {
							"$title": srcItems[srcItemsArray[i]].txt,
							"$style": style,
							"$layout": {
								"$items": []
							},
							"rnk": srcItems[srcItemsArray[i]].rnk
						};
						mnuItem.$opened = ctx.level > 0 ? false : mnuItem.$opened;
						mnuItem.$clientId = srcItemsArray[i] + winId;
						if ((opts = srcItems[srcItemsArray[i]].opts)) {
							if ((layout = opts.layout)) {
								mnuItem.$layout.$layoutType = layout;
								if (layout == "row") {
									mnuItem.$layout.$autoSize = true;
								}
							}
							mnuItem.$opened = opts.collapsed !== undefined ? !opts.collapsed : mnuItem.$opened;
							if (opts.popup) {
								mnuItem.$isTitlePicker = true;
								mnuItem.$isPopupContent = true;
							}
							if (opts.grp) {
								mnuItem._cloudId = opts.grp;
							}
						}
						_kMnuHelper.appendIco(srcItems[srcItemsArray[i]], mnuItem);
						trgtItems.push(mnuItem);
						if (srcItems[srcItemsArray[i]].items) {
							ctx.level += 1;
							walk(srcItems[srcItemsArray[i]].items, trgtItems[trgtItems.length - 1].$layout.$items, ctx);
							ctx.level -= 1;
						}
					} else
					if ((act = srcItems[srcItemsArray[i]].act)) {
						linkId = srcItems[srcItemsArray[i]].linkId || act;
						$links[linkId] = {
							"$act": act,
							"$title": srcItems[srcItemsArray[i]].txt
						};
						mnuItem = {
							"$bind": linkId,
							"$style": style,
							"rnk": srcItems[srcItemsArray[i]].rnk
						};
						_kMnuHelper.appendIco(srcItems[srcItemsArray[i]], mnuItem);
						if ((opts = srcItems[srcItemsArray[i]].opts)) {
							if (opts.hidden) {
								mnuItem.$isHidden = true;
							}
							if (opts.grp) {
								mnuItem._cloudId = opts.grp;
							}
						}
						trgtItems.push(mnuItem);
					}
				}
			}
		}
		// Walk accross our menu tree
		walk(this.menuBarTree.items, $menus.$items, {
			"level": 0
		});
		// Add magneto menu... if necessary
		if (this._showMagneto && (this._winFacet === syraUtil.pageFacet.edit || (this._winFacet === syraUtil.pageFacet.modal2 && _kWinOwnMagneto))) {
			magnetoMnuId = !this._winFacet || this._winFacet === syraUtil.pageFacet.edit ? _menuIDs.MAGNETO_GIRL : _menuIDs.MAGNETO_OWN;
			magnetoArray = coreMenus[magnetoMnuId] && coreMenus[magnetoMnuId].items ? Object.keys(coreMenus[magnetoMnuId].items) : [];
			for (i = 0, len = magnetoArray.length; i < len; i++) {
				magetoItem = coreMenus[magnetoMnuId].items[magnetoArray[i]];
				$links[magetoItem.linkId] = {
					"$title": magetoItem.txt,
					"$act": magetoItem.act
				};
			}
		}
		return {
			"$menus": $menus,
			"$links": $links
		};
	},

	dispose: function() {
		if (this.winProto) {
			delete this.winProto;
		}
		_.each(this._tabMenusFather, function(ptr, key) {
			delete this[key];
		}, this._tabMenusFather);
		_.each(this.menuBarTree.items, function(ptr, key) {
			delete this[key];
		}, this.menuBarTree.items);
		_releaseMenusObj(this._menus);
		if (this._menuBarObject) {
			delete this._menuBarObject.$menus;
			delete this._menuBarObject.$links;
		}
		if (this._session) {
			delete this._session;
		}
		delete this._menuManager;
	},

	_getSpecialMenuIDs: function() {
		var ids = {};
		ids[_menuIDs.ROOT_SUPERVISOR] = {
			"tag": "ROOT_SUPERVISOR"
		};
		ids[_menuIDs.BTN_WIN] = {
			"tag": "BTN_WIN",
			"typ": 0,
			"rnk": 1,
			"opts": {}
		};
		return ids;
	}
});