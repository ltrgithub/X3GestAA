"use strict";

/*
 Copyright (c)2012 Sage.
 http://wwww.sage.com
 */
/**
 * @fileoverview File Selection/updload/download management (Askui)
 */
var helpers = require('syracuse-core').helpers;
var EventManager = require('../evtmanager').EventManager;
var util = require('syracuse-ui/lib/fusion/tools/util');
var locale = require('streamline-locale');

var _evtHandlingModules = {
	"askui": require('../eventhandling/askui').AskuiEventHandling
};

var _dlgNameMapK = {
	"upload": {
		"upLoadFld": "file",
		"upLoadflName": "$fileName"
	}
};
var _askStatementsK = {
	"upLoadFile": {
		"proto": "upload"
	}
};
exports.returnStatus = {
	"success": {
		"code": 1,
		"mess": "status_1"
	},
	"cancel": {
		"code": 0,
		"mess": "status_0"
	},
	"unknownDir": {
		"code": -91,
		"mess": "status_-91"
	},
	"notAllowed": {
		"code": -92,
		"mess": "status_-92"
	},
	"alreadyExist": {
		"code": -93,
		"mess": "status_-93"
	},
	"unknownfile": {
		"code": -94,
		"mess": "status_-94"
	},
	"unsupportedSVC": {
		"code": -99,
		"mess": "status_-99"
	}
};

exports.makeAskuiParam = function(status, data) {
	if (!status) {
		status = exports.returnStatus.cancel;
	}
	var mess = data || (status.mess ? (syra_local["askui_" + status.mess] || "???") : "");
	var param = syra_fusion.sapUtil.getObjFieldValue(status.code.toString() + "," + mess, syra_fusion.sapUtil.fieldModeType.show);
	param.ist = null;
	param.discardCtrl = true;
	return param;
};


function AskuiStub() {}

exports.AskuiStub = helpers.defineClass(AskuiStub, EventManager, {
	initialize: function(statement, parameters, callbackAct, sapController, winRank) {
		var winParams;
		if (!statement || !_askStatementsK[statement]) {
			callbackAct(exports.returnStatus.unsupportedSVC);
			return;
		}
		winParams = {
			"id": syra_fusion.sapUtil.getWinId(winRank),
			"name": "askuiDialog_" + statement,
			"mainPage": false,
			"$itemPage": _getPage(_askStatementsK[statement].proto)
		};
		this._statement = statement;
		this._parameters = parameters;
		this._winId = winParams.id;
		this._sapController = sapController;
		// Init private event manager
		this.evtManagerInit(_evtHandlingModules, ["sap", "ui"], {
			"askuiController": this,
			"sapController": this._sapController,
			"siteUUID": "~askui"
		});
		this.evtManagerComplete();
		this.openDialog(statement, {}, {
			"name": _askStatementsK[statement].proto
		}, winParams, callbackAct);
	},
	getFieldName: function(dlgId, fldId) {
		return _dlgNameMapK[dlgId][fldId];
	},
	isProcessing: function() {
		return this._page ? true : false;
	},
	openDialog: function(statement, initialData, dlgDefinition, loadParams, callbackAct) {
		var self = this;

		function _onWinOpenErr(dgns) {
			// TODO : More user display...??
			delete this._page;
			callbackAct(exports.returnStatus.cancel);
		}
		loadParams.$itemPage.$x3Facet = "message";
		this._sapController._siteController.loadRepresentation(loadParams, null, function(page) {
			var $fusionPageMeta = syra_fusion.syraUtil.getFusionPageMeta(page);
			if ($fusionPageMeta) {
				$fusionPageMeta._privateEventManager = self;
			}
			self._page = page;
			self._sapController.registerLoadedWindow(self._winId, dlgDefinition, page, initialData);
			self.trigger("sap.extdlg.loaded", {
				"target": page,
				"type": "loaded",
				"data": self._parameters
			}, self._winId, dlgDefinition.name, statement, callbackAct);
			self.trigger("sap.extdlg.activate", {
				"target": page,
				"type": "activate",
				"data": null
			}, self._winId);
		}, function(response) {
			_onWinOpenErr(util.getLoadPageErrFromAjax(response, winId.name, null));
		}, function(representation) {}, "", _onWinOpenErr);
	},
	closeDialog: function() {
		if (this._page) {
			delete this._page;
			this._sapController.stubWinClose([this._winId], null, {});
		}
	},
	abort: function() {
		this.closeDialog();
		if (this._evtMngrComplete) {
			this.trigger("sap.extdlg.abort", {
				"target": null,
				"type": "abort",
				"data": {}
			});
		}
	},
	dispose: function() {
		this.abort();
		this._parameters = null;
		if (this._evtMngrComplete) {
			this.evtManagerDispose();
		}
		delete this._sapController;
	}
});


function _getPage() {
	//"upload"
	return {
		$type: "application/json",
		$title: syra_local.askui_upload_page_title,
		$properties: {
			"file": {
				$type: "application/x-binary",
				$title: "",
				$capabilities: ""
			},
			"$fileName": {
				$type: "application/x-string",
				$title: "",
				$capabilities: "",
				$isHidden: true
			}
		},
		$links: {
			"$ok": {
				$title: syra_local.askui_upload_link_ok,
				$isDisabled: true,
				$method: "POST"
			},
			"$cancel": {
				$title: syra_local.askui_upload_link_cancel,
				$method: "POST"
			}
		},
		$article: {
			$category: "section",
			$layout: {
				$layoutType: "stack",
				$items: [{
					$category: "block",
					$title: "",
					$layout: {
						$items: [{
							$layoutType: "stack",
							$items: [{
								$bind: "file"
							}, {
								$bind: "$fileName"
							}]
						}]
					}
				}]
			}
		}
	};
}