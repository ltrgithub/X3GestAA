"use strict";

/*
 Copyright (c)2012 Sage.
 http://wwww.sage.com
 */
/**
 * @fileoverview Fusion message box utilities
 */


var util = require('syracuse-ui/lib/fusion/tools/util');


var _msgBoxStatus = {"abort": 0, "cancel": 1, "ignore": 2, "no": 3, "yes": 4, "ok": 5, "retry": 6};
var _msgBoxDesc = [
	{"native": "Infbox", "syra": "info", "buttons": null, "escStatus": _msgBoxStatus.ok},
	{"native": "Wrnbox", "syra": "info", "buttons": "okcancel", "escStatus": _msgBoxStatus.cancel},
	{"native": "Qstbox", "syra": "question", "buttons": null, "escStatus": _msgBoxStatus.no},
	{"native": "Errbox", "syra": "warning", "buttons": null, "escStatus": _msgBoxStatus.ok},
	{"native": "Endbox", "syra": "fatal", "buttons": null, "escStatus": _msgBoxStatus.ok}
];


function _checkBoxType(type){
	return !type || type >= _msgBoxDesc.length ? 3 : type;
}

exports.getMsgBoxOpts = function(boxParams) {
	var boxOpts = {}, finalType = _checkBoxType(boxParams.type);
	boxOpts.$title = boxParams.tit || (this._session ? this._session.getProdLabel() : util.ourCompanyLabel);
	boxOpts.$message = typeof boxParams.li == 'string' ? boxParams.li : boxParams.li.join("\n");
	boxOpts.$type = _msgBoxDesc[finalType].syra;
	boxOpts.$autoClose  = boxParams.to && boxParams.to > 0 ? boxParams.to*1000 : null;
	boxOpts.$buttons = _msgBoxDesc[finalType].buttons;
	if(finalType == 1 || finalType == 2) {
		// Default button for Warnbox (1) and Qstbox (2)
		boxOpts.$default = !boxParams.def || boxParams.def <= 1 ? (finalType == 1 ? "ok" : "yes") : (finalType == 1 ? "cancel" : "no");
	}
	return boxOpts;
};

exports.getMsgBoxRet = function(syraResponse, closureMode, boxParams) {
	var finalType = _checkBoxType(boxParams.type);
	return !syraResponse ? (closureMode == "auto" ? exports._getMsgBoxDefaultRet(finalType, boxParams.def) : _msgBoxDesc[finalType].escStatus) : _msgBoxStatus[syraResponse.$id];
};

exports._getMsgBoxDefaultRet = function(type, defButton) {
	var defaultRet = _msgBoxStatus.ok;
	switch (type){
		case 1:
			defaultRet = defButton && defButton == 2 ? _msgBoxStatus.cancel : _msgBoxStatus.ok;
			break;
		case 2:
			defaultRet = defButton && defButton == 2 ? _msgBoxStatus.no : _msgBoxStatus.yes;
			break;
		default:
			break;
	}
	return defaultRet;
};

exports.setMsgBoxDefaultProp = function(boxProps, type, timeOut, title, message) {
	_.defaults(boxProps, {"type": type || 4, "to": timeOut || 0, "tit": title || util.ourCompanyLabel, "li": message || "????"});
	return boxProps;
};