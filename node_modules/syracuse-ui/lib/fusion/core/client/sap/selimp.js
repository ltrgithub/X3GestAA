"use strict";

/*
 Copyright (c)2012 Sage.
 http://wwww.sage.com
 */
/**
 * @fileoverview Printer selection/configuration management
 */

var helpers = require('syracuse-core/lib/helpers');
var printerSetup = require('syracuse-ui/lib/site/aside/printerSetup');
var EventManager = require('../evtmanager').EventManager;
var util = require('syracuse-ui/lib/fusion/tools/util');
var sapUtil = require('./util').Fusion;
var syraUtil = require('./util').Syra;

var _evtHandlingModules = {
	"selimp": require('../eventhandling/selimp').SelimpEventHandling
};

function PrinterAccess() {}

exports.PrinterAccess = helpers.defineClass(PrinterAccess, EventManager, {
	initialize: function(params, onInitComplete, sapController, winRank) {
		var len, i, prtSelected = params && params.$rcd && (len = params.$rcd.length) > 0 ? params.$rcd[0] : null, winId = sapUtil.getWinId(winRank);
		var stackParams = {"id": winId, "name": "printerSetup", "mainPage": false, "$itemPage": printerSetup.getSetupPage(), "_resumeAct": "PRINTER_SEL_CANCEL"};
		this.dialogStack = [];
		this._winRank = winRank;
		this._sapController = sapController;
		// Init private event manager
		EventManager.prototype.initialize.call(this, _evtHandlingModules, ["sap", "ui"], {
			"printerController": this,
			"sapController": this._sapController,
			"siteUUID": "~selimp"
		});
		this.evtManagerComplete();
		// Tempory cooking...
		if(prtSelected) {
			params.$mvt = [[1, 1, len]];
			for (i = 0; i <len; i++) {
				params.$rcd[i].$uuid = i;
			}			
		}
		this.stackDialog(winId, {"printers": params}, params, stackParams, {"defaultPrinterRcd": prtSelected}, onInitComplete);
	},
	
	openProperties: function(params, onInitComplete) {
		var winId = sapUtil.getWinId(this._winRank + 1);
		var stackParams = {"id": winId, "name": "printerProperties", "mainPage": false, "$itemPage": printerSetup.getPropertiesPage(), "_resumeAct": "PRINTER_OPTS_CANCEL"};
		this.stackDialog(winId, null, params, stackParams, {}, onInitComplete);
	},

	isOnGoing: function() {
		return this.dialogStack.length > 0;
	},

	applyChange: function(update) {
		// TODO
	},

	stackDialog: function(winId, initialData, params, loadParams, ctx, onInitComplete) {
		var self = this;
		function _onWinOpenErr(dgns, errCtx) {
			onInitComplete(loadParams._resumeAct, {});
		}
		loadParams.$itemPage.$x3Facet = "message";
		this._sapController._siteController.loadRepresentation(loadParams, null,
		function(page) {
			var $fusionPageMeta = syraUtil.getFusionPageMeta(page);
			if($fusionPageMeta) {
				$fusionPageMeta._privateEventManager = self;
			}
			self.dialogStack.push ({"id": winId, "context": ctx});
			self._sapController.registerLoadedWindow(winId, params, page, initialData);
			onInitComplete();
		},
		function(error) {
			_onWinOpenErr(util.getLoadPageErrFromAjax(error, winId.name, null), error);
		},
		function(representation) {
			// Extend prototype with dynamic model and layout
		},
		"", _onWinOpenErr);
	},

	unstackDialog: function() {
		var diag = this.dialogStack.splice(this.dialogStack.length - 1, 1);
		return diag[0];
	},

	disposeEvtManager: function() {
		if (this._evtMngrComplete) {
			EventManager.prototype.dispose.call(this);
		}
	},

	dispose: function() {
		if(this.dialogStack.length > 0) {
			// TODO : release dialog if necessary (this.dialogStack not empty)...
		}
		this.disposeEvtManager();
		delete this._sapController;
	}
});