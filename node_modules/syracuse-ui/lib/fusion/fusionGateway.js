"use strict";
var helpers = require('syracuse-core/lib/helpers');
var FusionSite = require('syracuse-ui/lib/fusion/core/client/inplace').FusionSite;
var WorkBook = require('./workBook').WorkBook;
var syraUtil = require('syracuse-ui/lib/fusion/core/client/sap/util').Syra;
var keys = require('syracuse-ui/lib/fusion/tools/constant').keybordKey;

var _keyHook = [keys["VK_TAB"], keys["VK_ENTER"]];


function FusionGateway(){
    this._books = {};
    this._bindEventsEx();
}

exports.FusionGateway = helpers.defineClass(FusionGateway, null, {
    _bindEventsEx: function(httpQuery){
        var self = this;
        $(document).delegate("body", "keydown", function(event){
            var $fusionPageMeta, doEvt, isGrid = false, winId, logger;
            if (!_.include(_keyHook, event.keyCode)) {
                return true;
            }
            // Are we on an active fusion sheet currently displayed
            $fusionPageMeta = self.activatedBook && self.activatedBook.selectedSheet ? syraUtil.getFusionPageMeta(self.activatedBook.selectedSheet) : null;
            winId = $fusionPageMeta && $fusionPageMeta.controller.isSapActiveWindow($fusionPageMeta.winModel.getWinId()) ? $fusionPageMeta.winModel.getWinId() : null;
            if ($fusionPageMeta && winId && self.activatedBook.selectedSheet.$$item && self.activatedBook.selectedSheet.$$item.is(":visible")) {
                if ((logger = $fusionPageMeta.controller ? $fusionPageMeta.controller.getLogger() : null)) {
                    logger.trace({}, "**onGatewayEvent : [" + event.type + "] for " + $fusionPageMeta.winModel.syraModel.getTitle());
                }
                doEvt = $fusionPageMeta.winModel.onWinEvent(event, $fusionPageMeta.controller);
                if (doEvt != undefined && !doEvt) {
                    event.stopImmediatePropagation();
                }
            }
            return doEvt;
        });
    },
    _unbindEventsEx: function(){
        $(document).undelegate("body", "keydown");
    },
    openMainPage: function(httpQuery){
        if (!this.$$menusOpener) {
            this._createMenus();
        }
        var book, self = this;
        httpQuery.appendHost();
        var bookIds = Object.keys(this._books);
        if (bookIds.length > 0) {
            bookIds.some(function(id){
                var bookItem = self._books[id];
                if (httpQuery.$url == bookItem.httpQuery.$url) {
                    book = bookItem;
                }
                return book != null;
            });
        }
        if (book) {
            //self.activatedBook = book;
            book.selectSheet();
        }
        else {
            book = new WorkBook();
            book.httpQuery = httpQuery;
            book.fusionGateway = this;
            if (document.site.mainPage) {
                book.syraOpenerHttpQuery = document.site.mainPage.openerHttpQuery;
            }
            this._books[book.id = document.controller.generateUUID()] = book;
            (book.fusionSite = new FusionSite()).create(book.id, book.$$slot = $(document.createElement("div")), {
                instance: book,
                controller: document.controller,
                site: document.site
            }, null);
            this._refreshCount();
            
            
            book.fusionSite.connect(httpQuery, function(metaData){
                if (metaData) {
                    document.site.showDiagnoses({
                        $diagnoses: metaData.$diagnoses
                    });
                }
                self._releaseBook(book, true);
            });
        }
        
    },
    _releaseBook: function(book, noNavigation){
        book.onReleaseBook();
        if (this.activatedBook == book) {
            this.activatedBook = null;
        }
        var syraOpenerHttpQuery = book.syraOpenerHttpQuery;
        delete this._books[book.id];
        document.controller.disposeObject(book);
        this._refreshCount();
        if (!noNavigation) {
            if (syraOpenerHttpQuery) {
                syraOpenerHttpQuery.$url = syraOpenerHttpQuery.fullUrl;
                document.controller._openMainPage(syraOpenerHttpQuery);
            }
            else {
                document.site.openHomeLink();
            }
        }
    },
    _refreshCount: function(){
        var count = Object.keys(this._books).length;
        this.$$menusOpener.text(count).css("visibility", count > 0 ? "visible" : "hidden");
    },
    _bindEvents: function(bind){
        var self = this;
        if (bind) {
            self.$$books.delegate(".s-fusion-sheets-opener-children", "click", function(){
                self._toggleNodeBook(self._findBook($(this)));
                return false;
            }).delegate(".s-fusion-sheet-link,.s-fusion-book-link", "click", function(){
                var $$link = $(this);
                var book = self._findBook($$link);
                var sheet;
                self.$$books.find(".s-fusion-sheet-activated").toggleClass("s-fusion-sheet-activated", false);
                if (self.activatedBook) {
                    if (self.activatedBook != book) {
                        self.activatedBook.selectedSheet.$$sheetLink.toggleClass("s-fusion-book-link-selected", false);
                        self.activatedBook.unselectSheet();
                        self.activatedBook.onActivate(false);
                        if (book.selectedSheet) {
                            book.unselectSheet();
                        }
                        self.activatedBook = book;
                        book.onActivate(true);
                    }
                }
                sheet = book.selectedSheet || book.sheets[0];
                if (document.site.mainPage != book.sheets[0]) {
                    var body = document.site.$$body[0];
                    body.style.display = "none";
                    document.site._releaseMainPage();
                    book.selectSheet();
                    body.style.display = "";
                }
                sheet.$$sheetLink.toggleClass("s-fusion-book-link-selected", true);
                if (!$$link.hasClass("s-fusion-book-link")) {
                    sheet = book.sheets[$$link.attr("data-s-sheet")];
                    if (book.selectedSheet && book.selectedSheet != sheet) {
                        if (book.selectedSheet.$$sheetLink) {
                            book.selectedSheet.$$sheetLink.toggleClass("s-fusion-sheet-link-selected", false);
                        }
                    }
                    sheet.$$sheetLink.toggleClass("s-fusion-sheet-link-selected", true);
                }
                sheet.$$sheetLink.toggleClass("s-fusion-sheet-activated", true);
                book.selectSheet();
                setTimeout(function(){
                    self.closeMenus();
                }, 100);
                return false;
            });
        }
        else {
            if (self.$$books) {
                self.$$books.undelegate();
            }
        }
    },
    _createTree: function(){
        var self = this;
        self.$$books = $("<ul class='s-fusion-books'/>").appendTo(self.$$menusPanel.empty());
        Object.keys(self._books).forEach(function(bookId){
            var $$booksLi = $("<li class='s-fusion-books-li'/>").attr("data-s-book", bookId);
            var $$book = $("<div class='s-fusion-book'/>");
            var book = self._books[bookId];
            var $$sheets;
            book.sheets.forEach(function(sheet, index){
                var title = sheet.getTitle();
                if (index == 0) {
                    sheet.$$sheetLink = $("<a class='s-fusion-book-link'/>");
                    if (sheet == book.selectedSheet) {
                        sheet.$$sheetLink.addClass("s-fusion-book-link-selected");
                    }
                    $$book.append(book.$$opener = $("<a class='s-fusion-sheets-opener'/>")).append(sheet.$$sheetLink);
                    if (book.sheets.length > 1) {
                        title += " (" + (book.sheets.length - 1) + ")";
                        book.$$opener.addClass("s-fusion-sheets-opener-children");
                        $$sheets = $("<ul class='s-fusion-sheets'/>");
                        $$sheets[0].style.display = "none";
                    }
                }
                else {
                    var $$sheetsLi = $("<li class='s-fusion-sheets-li'/>");
                    var $$sheet = $("<div class='s-fusion-sheet'/>");
                    sheet.$$sheetLink = $("<a class='s-fusion-sheet-link'/>").attr("data-s-sheet", index);
                    sheet.$$sheetLink.appendTo($$sheet);
                    $$sheetsLi.append($$sheet).appendTo($$sheets);
                }
                sheet.$$sheetLink.text(title);
            });
            if ($$sheets) {
                $$sheets.appendTo($$book);
                if (book.selectedSheet) {
                    self._toggleNodeBook(book, true);
                    if (book.selectedSheet.$$sheetLink) {
                        book.selectedSheet.$$sheetLink.addClass("s-fusion-sheet-link-selected");
                    }
                }
            }
            $$booksLi.append($$book).appendTo(self.$$books);
        });
        if (self.activatedBook && self.activatedBook.selectedSheet) {
            self.activatedBook.selectedSheet.$$sheetLink.toggleClass("s-fusion-sheet-activated", true);
        }
        self._bindEvents(true);
    },
    _findBook: function($$node){
        var bookId = ($$node.is("[data-s-book]") ? $$node : $$node.closest("[data-s-book]")).attr("data-s-book");
        return this._books[bookId];
    },
    _toggleNodeBook: function(book, open){
        if (open === undefined) {
            open = !book.$$opener.hasClass("s-open");
        }
        book.$$opener.siblings(".s-fusion-sheets").css("display", open ? "" : "none");
        book.$$opener.toggleClass("s-open", book.isOpened = open);
    },
    closeMenus: function(){
        if (this.popupMenus) {
            this.popupMenus.close();
            delete this.popupMenus;
        }
    },
    _createMenus: function(){
        var self = this;
        (self.$$menusOpener = $("#s-fusion-sessions-opener")).bind("click", function(){
            if (!self.popupMenus) {
                self._createTree();
                self.popupMenus = document.site.openDialog({
                    $dialogMode: "popup",
                    $$dialog: self.$$menusPanel,
                    content: self,
                    position: {
                        my: "right top",
                        at: "right bottom",
                        of: self.$$menusOpener
                    },
                    autocCloseBoundary: "#s-fusion-sessions-opener",
                    onClose: function(){
                        self.$$menusPanel.empty().remove();
                        delete self.popupMenus;
                    }
                });
            }
            else {
                self.popupMenus.close();
                delete this.popupMenus;
            }
        });
        self.$$menusPanel = $("<div id='s-fusion-sessions-pn'/>");
    },
    dispose: function(){
        if (this.$$menusOpener) {
            this.$$menusOpener.unbind();
        }
        this._bindEvents(false);
        this._unbindEventsEx();
        delete this.activatedBook;
        document.controller.disposeObject(this._books);
    }
});
