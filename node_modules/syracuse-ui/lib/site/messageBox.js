"use strict";
var helpers = require('syracuse-core/lib/helpers');
var locale = require('syracuse-core/lib/locale');
var keyHelper = require('syracuse-ui/lib/site/keyHelper');

function MessageBox(){
}

exports.MessageBox = helpers.defineClass(MessageBox, null, {
    open: function(options){
        var self = this;
        document.site.addResizeListener(self);
        self.$$btns = {};
        var domItem = document.createElement("div");
        domItem.className = "s-msgbox";
        self.$$item = $(domItem);
        self.callback = options.callback;
        
        var div = document.createElement("div");
        div.className = "s-msgbox-header";
        self.$$header = $(div).appendTo(self.$$item);
        //var $$header = $(div).appendTo(self.$$item);
        
        div = document.createElement("div");
        div.className = "s-msgbox-header-title";
        $(div).appendTo(self.$$header).text(options.$title)
        
        div = document.createElement("div");
        div.className = "s-msgbox-body s-msgbox-msg-" + options.$type;
        self.$$body = $(div).appendTo(self.$$item);
        self.$$body.html(options.$message.replace(/\n/g, "<br/>"));
        
        
        // handling show/hide message
        //        if (self.$$body[0].textContent.length > 120) {
        //            self.$$body.addClass("s-msgbox-body-closed");
        //            // open/close button
        //            var a = document.createElement("a");
        //            a.className = "s-msgbox-body-picker-closed";
        //            var $$pickerBtn = $(a);
        //            $$pickerBtn.bind("click", function(){
        //                self.$$body.toggleClass("s-msgbox-body-closed");
        //                $$pickerBtn.toggleClass("s-msgbox-body-picker-closed").toggleClass("s-msgbox-body-picker-opened");
        //                if (!self.$$body.hasClass("s-msgbox-body-closed")) {
        //                    self.$$body[0].style.maxHeight = (document.site.$$body[0].clientHeight - self.$$header.outerHeight() - 150) + "px";
        //                }
        //            });
        //            self.$$item.append($$pickerBtn);
        //        }
        
        
        div = document.createElement("div");
        div.className = "s-msgbox-foot";
        self.$$footer = $(div).appendTo(self.$$item).delegate("a.s-msgbox-button", "click", function(){
            var response = {
                $$button: $(this),
                $id: $(this).attr("data-s-id")
            };
            if (self.$$prompt) {
                response.prompt = self.$$prompt.val();
            }
            self.close(response.$id, response);
            return false;
        });
        
        self.drawButtons(options);
        
        self._setMinimumDimensions();
        self.onWindowResize();
        
        if (options.$$container) {
            (self.$$container = options.$$container).append(self.$$item);
            domItem.style.display = "inline-block";
        }
        else {
            domItem.style.position = "fixed";
            self.dialog = document.site.openDialog({
                id: document.controller.generateUUID(),
                content: self,
                $autoClose: false,
                $dialogSize: "content",
            });
        }
        if (options.$autoClose) {
            var count = (typeof(options.$autoClose) == "number" ? options.$autoClose : 4000) / 1000;
            div = document.createElement("div");
            div.className = "s-msgbox-header-timer";
            var $$timer = $(div).prependTo(self.$$header).text("( " + count + " )")
            self.autoCloseTimeOut = setInterval(function(){
                $$timer.text("( " + (--count) + " )")
                if (count == 0) {
                    clearInterval(self.autoCloseTimeOut);
                    self.close("auto");
                }
            }, 1000);
        }
        $(document).bind("keypress.msgbox", function(evt){
            switch (evt.keyCode) {
                case keyHelper.keyCode.ENTER:
                    setTimeout(function(){
                        self.$$defaultBtn.click();
                    }, 100);
                    break;
                case keyHelper.keyCode.ESCAPE:
                    setTimeout(function(){
                        self.close("esc");
                    }, 100);
                    break;
            }
        });
    },
    _setMinimumDimensions: function(){
        this.$$item[0].style.minWidth = "180px";
        this.$$body[0].style.minHeight = "30px";
    },
    onWindowResize: function(setMinimumDimensions){
        var body = document.site.$$body[0];
        this.$$item[0].style.maxWidth = (body.clientWidth - 400) + "px";
        this.$$body[0].style.maxHeight = (body.clientHeight - this.$$header.outerHeight() - 150) + "px";
        //this.$$item[0].style.maxHeight = (body.clientHeight - 150) + "px";
        /*
         if (!this.$$body.hasClass("s-msgbox-body-closed")) {
         this.$$item[0].style.maxHeight = (body.clientHeight - 150) + "px";
         }
         else {
         this.$$body[0].style.maxHeight = (body.clientHeight - this.$$header.outerHeight() - 150) + "px";
         }*/
        //this.$$body[0].style.maxHeight = (body.clientHeight - this.$$header.outerHeight() - 150) + "px";
    },
    drawButtons: function(options){
        var localize = locale.resources(module)();
        var self = this;
        var $buttons = options.$buttons;
        if (options.$type == "question") {
            $buttons = $buttons || "yesno";
        }
        if (options.$type == "prompt") {
            $buttons = $buttons || "okcancel";
            self.$$prompt = $("<input type='text'/>").addClass("s-msgbox-prompt").attr("size", "50").appendTo(self.$$body);
        }
        
        $buttons = $buttons || "ok";
        ["yes", "no", "ok", "cancel"].forEach(function($id){
            if ($buttons.indexOf($id) >= 0) {
                self.drawButton({
                    $id: $id,
                    $text: localize["msgbox_" + $id]
                });
            }
        });
        
        self.$$defaultBtn = self.$$btns[options.$default || "ok"];
        if (!self.$$defaultBtn) {
            self.$$defaultBtn = self.$$btns[Object.keys(self.$$btns)[0]];
        }
        self.$$defaultBtn.addClass("s-msgbox-button-default");
    },
    drawButton: function($btn){
        var btn = document.createElement("a");
        btn.className = "s-msgbox-button";
        btn.setAttribute("data-s-id", $btn.$id);
        this.$$btns[$btn.$id] = $(btn).text($btn.$text).appendTo(this.$$footer);
    },
    close: function(closedBy, response){
        if (this.callback ? (this.callback(response, closedBy) !== false) : true) {
            if (this.$$item) {
                this.$$item.remove();
            }
            document.controller.disposeObject(this);
        }
    },
    dispose: function(){
        document.site.removeResizeListener(this);
        if (this.autoCloseTimeOut) {
            clearInterval(this.autoCloseTimeOut);
            delete this.autoCloseTimeOut;
        }
        if (this.$$footer) {
            this.$$footer.undelegate();
        }
        $(document).unbind("keypress.msgbox");
    }
});
