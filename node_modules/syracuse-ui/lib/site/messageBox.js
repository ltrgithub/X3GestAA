"use strict";
var helpers = require('syracuse-core/lib/helpers');
var locale = require('syracuse-core/lib/locale');
var keyHelper = require('syracuse-ui/lib/site/keyHelper');

function MessageBox(){
}

exports.MessageBox = helpers.defineClass(MessageBox, null, {
    open: function(options){
        var self = this;
        var localize = locale.resources(module)();
        document.site.addResizeListener(self);
        self.$$btns = {};
        var domItem = document.createElement("div");
        domItem.className = "s-msgbox";
        self.$$item = $(domItem);
        self.callback = options.callback;
        
        var div = document.createElement("div");
        div.className = "s-msgbox-header";
        self.$$header = $(div).appendTo(self.$$item);
        
        div = document.createElement("div");
        div.className = "s-msgbox-header-title";
        $(div).appendTo(self.$$header).text(options.$title)
        
        div = document.createElement("div");
        div.className = "s-msgbox-body s-msgbox-msg-" + options.$type;
        self.$$body = $(div).appendTo(self.$$item);
        
        // building body content
        var msg, stackTrace;
        
        msg = options.$message;
        stackTrace = options.$stackTrace;
        
        div = document.createElement("div");
        div.className = "s-msgbox-body-msg";
        $(div).html(msg.replace(/\n/g, '<br/>')).appendTo(self.$$body);
        
        if (stackTrace) {
            // adding stacktrace content
            div = document.createElement("div");
            div.className = "s-msgbox-body-stackTrace";
            self.$$stackTrace = $(div);
            self.$$stackTrace.html(self._preformat(self._detailToString(stackTrace))).appendTo(self.$$body).hide();
            
            // show/hide picker button
            self.$$bodyPicker = $(document.createElement("a")).addClass("s-msgbox-body-picker-closed");
            self.$$bodyPicker.text(localize.msgbox_body_picker_closed);
            self.$$bodyPicker.bind("click", function(){
                self.$$stackTrace.toggle();
                self.$$bodyPicker.toggleClass("s-msgbox-body-picker-closed").toggleClass("s-msgbox-body-picker-opened");
                var pickerTxt = self.$$bodyPicker.hasClass("s-msgbox-body-picker-closed") ? localize.msgbox_body_picker_closed : localize.msgbox_body_picker_opened;
                self.$$bodyPicker.text(pickerTxt);
                
                // copytoclipboard picker
                self._copyToClipboardHandler(self.$$bodyPicker.hasClass("s-msgbox-body-picker-opened"));
                
                if (self.dialog) {
                    self.dialog.onWindowResize();
                }
            });
            div = document.createElement("div");
            div.className = "s-msgbox-body-picker";
            self.$$body.find("div.s-msgbox-body-msg").after($(div).append(self.$$bodyPicker));
        }
        
        
        // building footer
        div = document.createElement("div");
        div.className = "s-msgbox-foot";
        self.$$footer = $(div).appendTo(self.$$item).delegate("a.s-msgbox-button", "click", function(){
            var response = {
                $$button: $(this),
                $id: $(this).attr("data-s-id")
            };
            if (self.$$prompt) {
                response.prompt = self.$$prompt.val();
            }
            self.close(response.$id, response);
            return false;
        });
        
        // drawing buttons
        self.drawButtons(options);
        
        // handling window dimension 
        self._setMinimumDimensions();
        self.onWindowResize();
        
        // showing msgbox
        if (options.$$container) {
            (self.$$container = options.$$container).append(self.$$item);
            domItem.style.display = "inline-block";
        }
        else {
            domItem.style.position = "fixed";
            self.dialog = document.site.openDialog({
                id: document.controller.generateUUID(),
                content: self,
                $autoClose: false,
                $dialogSize: "content",
            });
        }
        
        // autoclose
        if (options.$autoClose) {
            var count = (typeof(options.$autoClose) == "number" ? options.$autoClose : 4000) / 1000;
            div = document.createElement("div");
            div.className = "s-msgbox-header-timer";
            var $$timer = $(div).prependTo(self.$$header).text("( " + count + " )")
            self.autoCloseTimeOut = setInterval(function(){
                $$timer.text("( " + (--count) + " )")
                if (count == 0) {
                    clearInterval(self.autoCloseTimeOut);
                    self.close("auto");
                }
            }, 1000);
        }
        
        // handling window close with ENTER or ESCAPE buttons
        $(document).bind("keypress.msgbox", function(evt){
            switch (evt.keyCode) {
                case keyHelper.keyCode.ENTER:
                    setTimeout(function(){
                        self.$$defaultBtn.click();
                    }, 100);
                    break;
                case keyHelper.keyCode.ESCAPE:
                    setTimeout(function(){
                        self.close("esc");
                    }, 100);
                    break;
            }
        });
    },
    _copyToClipboardHandler: function(isStackVisible){
        // copy to clipboard picker btn
        var self = this;
        var localize = locale.resources(module)();
        var div = document.createElement("div");
        if (isStackVisible) {
            // IE 
            if (window.clipboardData && window.clipboardData.setData) {
                if (self.$$copyPicker) {
                    self.$$copyPicker.show();
                }
                else {
                    self.$$copyPicker = $(document.createElement("a")).addClass("s-msgbox-body-copy-picker");
                    self.$$copyPicker.text(localize.msgbox_body_copy_picker);
                    self.$$copyPicker.bind("click", function(){
                        // copying
                        window.clipboardData.setData('text', self.$$stackTrace.find(".s-msgbox-body-pre")[0].innerHTML);
                        
                        // confirm text
                        if (self.$$confirm) {
                            self.$$confirm.show();
                            
                        }
                        else {
                            div = document.createElement("div");
                            div.className = "s-msgbox-copy-confirm";
                            self.$$confirm = $(div);
                            self.$$confirm.text(localize.msgbox_body_copy_confirm);
                            self.$$body.find("div.s-msgbox-body-stackTrace").before(self.$$confirm);
                        }
                        
                        self.autoCloseConfirMsg = setTimeout(function(){
                            self.$$confirm.hide();
                        }, 2000);
                        
                    });
                    div = document.createElement("div");
                    div.className = "s-msgbox-body-picker";
                    //self.$$body.append($(div).append(self.$$copyPicker));
                    self.$$body.find("div.s-msgbox-body-picker").after($(div).append(self.$$copyPicker));
                }
            }
            // other browsers
            else {
                if (self.$$openPicker) {
                    self.$$openPicker.show();
                }
                else {
                    self.$$openPicker = $(document.createElement("a")).addClass("s-msgbox-body-open-picker");
                    self.$$openPicker.text(localize.msgbox_body_open_picker);
                    self.$$openPicker.bind("click", function(){
                        // open new window
                        var txtMsg = self.$$body.find("div.s-msgbox-body-msg")[0].innerHTML;
                        var txtTrace = self.$$stackTrace.find("pre.s-msgbox-body-pre")[0].innerHTML;
                        var myWindow = window.open('', '_blank')
                        myWindow.document.write(self._preformat(txtMsg + "\n" + txtTrace));
                        
                    });
                    div = document.createElement("div");
                    div.className = "s-msgbox-body-picker";
                    self.$$body.find("div.s-msgbox-body-picker").after($(div).append(self.$$openPicker));
                }
            }
        }
        else {
            if (self.$$copyPicker) {
                self.$$copyPicker.hide();
            }
            if (self.$$openPicker) {
                self.$$openPicker.hide();
            }
        }
    },
    _preformat: function(txt){
        return "<pre class='s-msgbox-body-pre'>" + txt + "</pre>";
    },
    _detailToString: function(o){
        if (o == undefined) 
            return "";
        try {
            if (typeof(o) == 'string') {
                if (o.length == 0) 
                    return o;
                o = JSON.parse(o);
            }
            return JSON.stringify(o, null, "   ");
        } 
        catch (e) {
            return o.toString();
        }
    },
    _setMinimumDimensions: function(){
        this.$$item[0].style.minWidth = "350px"; // "400px" ? "100px" ?
        //this.$$body[0].style.minHeight = "30px";
        
        if (this.$$stackTrace) {
            this.$$stackTrace[0].style.minHeight = "180px";
        }
    },
    onWindowResize: function(setMinimumDimensions){
        var body = document.site.$$body[0];
        
        var computeItemMaxWidth = (body.clientWidth - 800);
        var computeBodyMaxHeight = (body.clientHeight - this.$$header.outerHeight() - 150);
        
        this.$$item[0].style.maxWidth = computeItemMaxWidth >= 620 ? "620px" : computeItemMaxWidth + "px";
        //this.$$body[0].style.maxHeight = computeBodyMaxHeight;
        
        if (this.$$stackTrace) {
            var bodyMsgHeight = this.$$body.children(".s-msgbox-body-msg").outerHeight();
            var computeBodyStackMaxHeight = (body.clientHeight - this.$$header.outerHeight() - bodyMsgHeight - 150);
            this.$$stackTrace[0].style.maxHeight = computeBodyStackMaxHeight >= 500 ? "500px" : computeBodyStackMaxHeight + "px";
        }
    },
    drawButtons: function(options){
        var localize = locale.resources(module)();
        var self = this;
        var $buttons = options.$buttons;
        if (options.$type == "question") {
            $buttons = $buttons || "yesno";
        }
        if (options.$type == "prompt") {
            $buttons = $buttons || "okcancel";
            self.$$prompt = $("<input type='text'/>").addClass("s-msgbox-prompt").attr("size", "50").appendTo(self.$$body);
        }
        
        $buttons = $buttons || "ok";
        ["yes", "no", "ok", "cancel"].forEach(function($id){
            if ($buttons.indexOf($id) >= 0) {
                self.drawButton({
                    $id: $id,
                    $text: localize["msgbox_" + $id]
                });
            }
        });
        
        self.$$defaultBtn = self.$$btns[options.$default || "ok"];
        if (!self.$$defaultBtn) {
            self.$$defaultBtn = self.$$btns[Object.keys(self.$$btns)[0]];
        }
        self.$$defaultBtn.addClass("s-msgbox-button-default");
    },
    drawButton: function($btn){
        var btn = document.createElement("a");
        btn.className = "s-msgbox-button";
        btn.setAttribute("data-s-id", $btn.$id);
        this.$$btns[$btn.$id] = $(btn).text($btn.$text).appendTo(this.$$footer);
    },
    close: function(closedBy, response){
        if (this.callback ? (this.callback(response, closedBy) !== false) : true) {
            if (this.$$item) {
                this.$$item.remove();
            }
            document.controller.disposeObject(this);
        }
    },
    dispose: function(){
        document.site.removeResizeListener(this);
        if (this.autoCloseTimeOut) {
            clearInterval(this.autoCloseTimeOut);
            delete this.autoCloseTimeOut;
        }
        if (this.$$footer) {
            this.$$footer.undelegate();
        }
        $(document).unbind("keypress.msgbox");
        if (this.$$bodyPicker) {
            this.$$bodyPicker.unbind();
        }
        if (this.$$copyPicker) {
            this.$$copyPicker.unbind();
        }
        if (this.$$openPicker) {
            this.$$openPicker.unbind();
        }
        if (this.autoCloseConfirMsg) {
            clearTimeout(this.autoCloseConfirMsg);
            delete this.autoCloseConfirMsg;
        }
    }
});
