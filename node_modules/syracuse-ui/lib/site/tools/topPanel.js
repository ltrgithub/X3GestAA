"use strict";
var _opener, _dashPanel, _slot, _onOutSlot;

function _drawDashPanel() {
	var $dashboard = syra_site.$prototype.$navigation && syra_site.$prototype.$navigation.$dashboard;
	if ($dashboard) {
		var ids = Object.keys($dashboard);
		syra_site.$prototype.$links = syra_site.$prototype.$links || {};
		syra_site.$menus = syra_site.$menus || {};
		for (var ii = 0, jj = ids.length; ii < jj; ii++) {
			var key = ids[ii];
			switch (key) {
				case "quickAdmin":
				case "mobileDesktopAuthoring":
					if (!syra_site.developpementMode) {
						var level = profile.getAuthoringLevel();
						if (!(level == "admin" || level == "sage")) {
							delete $dashboard[key];
							continue;
						}
					}
					break;
				case "perfmon":
				case "devsos":
				case "arrayTest":
				case "changeLog":
				case "office":
					if (!syra_site.developpementMode) {
						delete $dashboard[key];
						continue;
					}
					break;
			}
			$dashboard[key].$title = syra_local["siteNavigation_" + key] || $dashboard[key].$title;
			syra_site.$menus[key] = syra_site.$prototype.$links[key] = $dashboard[key];
		}
		_dashPanel = document.createElement("div");
		_dashPanel.className = "s-toppn-dash";
		var header = document.createElement("header");
		header.className = "s-toppn-dash-title";
		header.textContent = syra_local.siteTopPanel_dashboards;
		_dashPanel.appendChild(header);
		var ids = Object.keys($dashboard);
		var colIndex = 0;
		var cols = [];
		for (var ii = 0, jj = ids.length; ii < jj; ii++) {
			var col = cols[colIndex++];
			if (!col) {
				col = document.createElement("div");
				col.className = "s-toppn-dash-col";
				cols.push(_dashPanel.appendChild(col));
			}
			if (colIndex == 3) {
				colIndex = 0;
			}
			syra_site.loadNewItem(col, {
				$category: "link",
				$skin: "s-toppn-dash-link",
				$bind: ids[ii]
			}, syra_site);
		}
		for (var ii = 0, jj = cols.length; ii < jj; ii++) {
			cols[ii].style.width = Math.round(100 / jj) + "%";
		}
		_slot.appendChild(_dashPanel);
	}
}


function _draw() {
	_slot = document.createElement("div");
	_slot.className = "s-site-top-pn";
	_slot.syrainout = syra_site.id;
	syra_site.layoutSlot.appendChild(_slot);
	var profile = syra_site.userProfile;
	if (profile) {
		profile.ensureFormBlock();
		profile.ensurePageVisibility();
		profile.domItem && _slot.appendChild(profile.domItem);
	}!_dashPanel && _drawDashPanel();
	var rect = _opener.getBoundingClientRect();
	if (syra_site.isDocumentRTL) {
		_slot.style.left = rect.left + "px";
	} else {
		_slot.style.right = (syra_site.layoutSlot.getBoundingClientRect().right - rect.right) + "px";
	}
	if (_dashPanel && !(syra_site.fusionGateway && syra_site.fusionGateway.activatedBook)) {
		_slot.appendChild(_dashPanel);
	}
	syra_site.dom.setZIndex(_slot);
}

exports.addOpener = function(slot) {
	_opener = syra_menus.addIconButton(syra_local.site_openWelcomePanel, "s-site-top-pn-opener-link", "onTopPanelClick");
	_opener.syraItem = syra_site.id;
	slot.appendChild(_opener);
};

exports.showUserIdentity = function(profile) {
	if (_opener) {
		if (profile.dataset.user) {
			syra_site.dom.empty(_opener);
			var name = document.createElement("div");
			name.className = "s-site-user-name";
			name.textContent = (profile.dataset.user.firstName ? profile.dataset.user.firstName + " " : "") + (profile.dataset.user.lastName ? profile.dataset.user.lastName : "");
			_opener.appendChild(name);

			var photo = document.createElement("div");
			photo.className = "s-site-user-photo";
			if (profile.dataset.user.photo) {
				profile.loadNewItem(photo, {
					$css: "s-site-user-photo",
					$skin: "s-site-user-photo",
					$inplace: true,
					$imageWidth: " ",
					$imageHeight: " ",
					$bind: "photo",
					$category: "field",
					$field: {
						$type: "image"
					}
				}).setDataValue({
					$url: syra_site.expressionMaker.parse(profile, profile.dataset.user.photo.$url, {
						$uuid: profile.dataset.user.$uuid,
						$pluralType: "users",
						$key: profile.$prototype.$key,
						$baseUrl: profile.$prototype.$baseUrl
					})
				});
			} else {
				var mn = document.createElement("a");
				mn.className = "s-site-user-nophoto";
				photo.appendChild(mn);
			}
			_opener.appendChild(photo);
		}
	}
};


exports.toggle = function(show, event, onClosePopups) {
	if (_opener) {
		if (show && !_slot) {
			_draw();
		} else {
			if (_opener && onClosePopups && event &&
				((event.target == _opener) ||
					_opener.contains(event.target))) {
				return;
			}
			if (event && _slot) {
				if (_slot.contains(event.target) && !(_dashPanel && _dashPanel.contains(event.target))) {
					return;
				}
			}
			syra_site.dom.empty(_slot);
			syra_site.dom.removeChild(_slot);
			_slot = null;
		}
		_opener && syra_site.dom.toggleClass(_opener, "s-open", !! _slot);
	}
};

exports.onItemInOut = function(onEnter, event, target) {
	if (_slot && target == _slot) {
		if (onEnter) {
			_onOutSlot && clearTimeout(_onOutSlot);
			_onOutSlot = null;
		} else {
			if (!syra_site.dialogManager.getTopDialogPage()) {
				_onOutSlot = setTimeout(function() {
					exports.toggle(false);
					_onOutSlot = null;
				}, 1000);
			}
		}
	}
};

exports.dispose = function() {
	_onOutSlot && clearTimeout(_onOutSlot);
	syra_site.dom.removeChild(_slot);
	_onOutSlot = _opener = _dashPanel = _slot = null;
};