"use strict";
var helpers = require('syracuse-core/lib/helpers');
var Article = require("syracuse-ui/lib/article/article").Article;

function TopPanel() {}

exports.TopPanel = helpers.defineClass(TopPanel, Article, {
	loadBox: function() {
		this.page.initializeNewItem(this, {});
		this.domItem = this.layoutSlot;
		Article.prototype.loadBox.call(this);
		if (syra_site.userProfile) {
			syra_site.userProfile.ensureFormBlock();
			syra_site.userProfile.ensurePageVisibility();
			if (syra_site.userProfile.domItem) {
				syra_site.dom.empty(this.userProfileSlot);
				this.userProfileSlot.appendChild(syra_site.userProfile.domItem);
			}
		}

	},
	_buildItems: function($links) {
		var ids = Object.keys($links);
		var colIndex = 0;
		var cols = [];
		for (var ii = 0, jj = ids.length; ii < jj; ii++) {
			var col = cols[colIndex++];
			!col && cols.push(col = []);
			if (colIndex == 3) {
				colIndex = 0;
			}
			this.$prototype.$links[ids[ii]] = $links[ids[ii]];
			col.push({
				$bind: ids[ii]
			});
		}
		var $layout = {
			$layoutType: "row",
			$items: []
		};
		for (var ii = 0, jj = cols.length; ii < jj; ii++) {
			$layout.$items.push({
				$layoutType: "stack",
				$items: cols[ii]
			});
		}
		return $layout;
	},
	addNavigationBar: function() {
		var $dashboard = this.$prototype.$navigation && this.$prototype.$navigation.$dashboard;
		if ($dashboard) {
			var ids = Object.keys($dashboard);
			for (var ii = 0, jj = ids.length; ii < jj; ii++) {
				var key = ids[ii];
				switch (key) {
					case "quickAdmin":
					case "mobileDesktopAuthoring":
						if (!syra_site.developpementMode) {
							var level = syra_site.userProfile.getAuthoringLevel();
							if (!(level == "admin" || level == "sage")) {
								delete $dashboard[key];
								continue;
							}
						}
						break;
						//case "tablethome":
						//case "mobileHome":
					case "perfmon":
					case "devsos":
					case "devsosqueries":
					case "arrayTest":
					case "changeLog":
					case "office":
						if (!syra_site.developpementMode) {
							delete $dashboard[key];
							continue;
						}
						break;
				}
				$dashboard[key].$title = syra_local["siteNavigation_" + key] || $dashboard[key].$title;
			}
			this.navigationBar = this.page.loadNewItem(this.body, {
				$category: "menus",
				$title: syra_local.siteTopPanel_dashboards,
				$skin: "s-toppn-dash",
				$layout: this._buildItems(this.$prototype.$navigation.$dashboard)
			}, this);
			syra_site.layoutValidator.validate(this.navigationBar.layoutContent, true);
		}
	},
	drawBox: function() {
		this.body = this.domItem;
		var bar = document.createElement("div");
		bar.className = "s-site-top-pn-top-bar";
		this.body.appendChild(bar);
		this.userProfileSlot = document.createElement("div");
		bar.appendChild(this.userProfileSlot).id = "s-site-top-pn-user-profile";
		this.addNavigationBar();
	},
	dispose: function() {
		if (this.layoutSlot) {
			syra_site.dom.empty(this.layoutSlot);
		}
		this.userProfileSlot = this.$urlParams = this.navigationBar = null;
		Article.prototype.dispose.call(this);
	}
});