"use strict";
var helpers = require('syracuse-core/lib/helpers');

function DragDropManager(){
}

exports.DragDropManager = helpers.defineClass(DragDropManager, null, {
    load: function(){
        this._observers = {
            barSwiper: [],
            page: [],
            colResizer: [],
            barResizer: []
        };
        this.bindEvents();
    },
    setDragSpot: function(dom, enable){
        if (enable) {
            dom.syraDragSpot = true;
            dom.setAttribute("data-s-drag-spot", "1");
        }
        else {
            delete dom.syraDragSpot;
            dom.removeAttribute("data-s-drag-spot");
        }
    },
    togglePageObserver: function(observer, add){
        this._toggleObserver("page", observer, add);
    },
    toggleColResizerObserver: function(observer, add){
        this._toggleObserver("colResizer", observer, add);
    },
    toggleBarResizerObserver: function(observer, add){
        this._toggleObserver("barResizer", observer, add);
    },
    _toggleObserver: function(key, observer, add){
        if (add) {
            this._observers[key].push(observer);
        }
        else {
            var ii = this._observers[key].indexOf(observer);
            if (ii >= 0) {
                this._observers[key].splice(ii, 1);
            }
        }
    },
    cancel: function(){
        delete this.dropableItem;
    },
    start: function(observer, DragDropClass, boundary){
        if (this.dropableItem) {
            this.ddAgent = new DragDropClass();
            this.ddAgent.start(this.dropableItem, observer, boundary);
            delete this.dropableItem;
        }
    },
    stop: function(){
        this.cancel();
        if (this.ddAgent) {
            if (this.ddAgent.stop) {
                this.ddAgent.stop();
            }
            this.ddAgent.dispose();
            delete this.ddAgent;
        }
        document.site.body.style.cursor = "default";
    },
    bindEvents: function(){
        var self = this;
        $(document).bind("mouseup.syradragdrop", function(event){
            delete self.dropableItem;
            if (self.ddAgent) {
                self.ddAgent.onDragMouseUp(this, event);
                self.stop();
            }
        });
        document.site.$$layoutSlot.delegate("[data-s-drag-spot]", "mousedown.syradragdrop", function(event){
            if (self.ddAgent) {
                self.stop();
            }
            else {
                var keys = ["colResizer", "barResizer", "page"];
                for (var ii = 0, jj = keys.length; ii < jj; ii++) {
                    var observers = self._observers[keys[ii]];
                    for (var mm = 0, kk = observers.length; mm < kk; mm++) {
                        var observer = observers[mm];
                        var item = observers[mm].isDraggable(this, event);
                        if (event.syraRetValue === false) {
                            return false;
                        }
                        if (item) {
                            self.dropableItem = item;
                            return false;
                        }
                    }
                }
            }
            // return false;
        }).delegate("[data-s-drag-spot]", "mousemove.syradragdrop", function(event){
            var keys = ["colResizer", "barResizer", "page"];
            for (var ii = 0, jj = keys.length; ii < jj; ii++) {
                var observers = self._observers[keys[ii]];
                for (var mm = 0, kk = observers.length; mm < kk; mm++) {
                    var observer = observers[mm];
                    if (observer.onDragMove) {
                        var result = observer.onDragMove(this, event);
                        if (result !== true) {
                            return result;
                        }
                    }
                }
            }
        }).bind("mousemove.syradragdrop", function(event){
            if (self.ddAgent) {
                self.ddAgent.onDragMouseMove(event.target, event);
                event.preventDefault();
                return false;
            }
            return true;
        });
    },
    toggleBarSwiperObserver: function(observer, add){
        this._toggleObserver("barSwiper", observer, add);
    },
    dispose: function(){
        if (document.site.$$layoutSlot) {
            document.site.$$layoutSlot.undelegate(".syradragdrop").unbind(".syradragdrop");
        }
        delete this._observers;
    }
});
