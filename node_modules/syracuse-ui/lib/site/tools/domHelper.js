"use strict";

var _zIndex = 100;

exports.toggleClass = function(item, css, show) {
	if (item) {
		var className = item.className;
		if (show) {
			if (className.indexOf(css) < 0) {
				item.className = className + (" " + css);
			}
		} else {
			item.className = className.replace(css, "");
		}
	}
};

exports.disableItem = function(item, isDisabled) {
	if (isDisabled) {
		item.setAttribute("disabled", item.syraIsDisabled = isDisabled);
	} else {
		delete item.syraIsDisabled;
		item.removeAttribute("disabled");
	}
	exports.toggleClass(item, "s-disabled", isDisabled);
};
exports.toggle = function(dom) {
	dom.style.display = exports.isDisplay(dom) ? "none" : "";
};
exports.isDisplay = function(dom) {
	return dom.style.display != "none";
};
exports.empty = function(domNode) {
	if (domNode) {
		while (domNode.firstChild) {
			domNode.removeChild(domNode.firstChild);
		}
	}
};
exports.isParentNode = function(parent, child) {
	while (child && child != document) {
		if (child == parent) {
			return true;
		}
		child = child.parentNode;
	}
	return false;
};
exports.removeChild = function(child) {
	if (child && child.parentNode) {
		child.parentNode.removeChild(child);
	}
};
exports.moveChildNodes = function(source, target) {
	while (source.childNodes.length) {
		target.appendChild(source.childNodes[0]);
	}
};
exports.getInnerSize = function(domItem) {
	var size = {
		height: domItem.clientHeight,
		width: domItem.clientWidth
	};
	var style = window.getComputedStyle(domItem, null);
	size.height -= parseFloat(style.getPropertyValue("padding-top"));
	size.height -= parseFloat(style.getPropertyValue("padding-bottom"));
	size.width -= parseFloat(style.getPropertyValue("padding-left"));
	size.width -= parseFloat(style.getPropertyValue("padding-right"));
	return size;
};

exports.getBoundingClientRect = function(dom, area) {
	var rect = dom.getBoundingClientRect();
	area = area || {};
	area.top = Math.round(rect.top);
	area.bottom = Math.round(rect.bottom);
	area.left = Math.round(rect.left);
	area.right = Math.round(rect.right);
	area.width = Math.round(rect.width);
	area.height = Math.round(rect.height);
	return area;
};

exports.setZIndex = function(item) {
	_zIndex++;
	if (item) {
		item.style.zIndex = _zIndex;
	}
	return _zIndex;
};
exports.getTopZIndex = function() {
	return _zIndex;
};