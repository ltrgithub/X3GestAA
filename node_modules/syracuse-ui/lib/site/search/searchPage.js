"use strict";
var helpers = require("syracuse-core/lib/helpers")
var DesktopPage = require('syracuse-ui/lib/page/desktopPage').DesktopPage;
var MenuBar = require('syracuse-ui/lib/page/menuBar').MenuBar;

function SearchPage(){
}

exports.SearchPage = helpers.defineClass(SearchPage, DesktopPage, {
    fetch: function(options){
        var self = this;
        
        var $queryFunctionsLink = {
            $url: "/sdata/syracuse/search/syracuse/$search?representation=queryResult.$search&q={$search}&source=functions"
        };
        var $queryDataLink = {
            $url: "/sdata/syracuse/search/syracuse/$search?representation=queryResult.$search&q={$search}&source=data"
        }
        self.dataset.$search = self.$urlParts.params.q;
        
        var options = options || {}
        
        // filtering only for 'data' result
        if (!options.jsonParams) {
            self.formatMenuUrl($queryFunctionsLink, self.dataset, function($url, isCanceled){
                options.$location = {
                    $url: $url
                };
                document.controller.sendRequest(self, options, function(data){
                    //data.$itemsPerPage = 5;
                    data.$queryFunctions = data.$resources;
                    data.$searchFacets = null; // no search facet for 'functions' results
                    delete data.$resources;
                    self.applyChange(data);
                });
            });
        }
        
        self.formatMenuUrl($queryDataLink, self.dataset, function($url, isCanceled){
            options.$location = {
                $url: $url
            };
            document.controller.sendRequest(self, options, function(data){
                //data.$itemsPerPage = 5;
                data.$queryData = data.$resources;
                delete data.$resources;
                self.applyChange(data);
            });
        });
    },
    drawBox: function(){
        DesktopPage.prototype.drawBox.call(this);
        this._bindEvents(true);
    },
    _bindEvents: function(bind){
        var self = this;
        if (self.$$item) {
            if (bind) {
                self.$$item.delegate(".s-search-res-record", "click", function(){
                    var $$menu = $(this).find("a[data-s-menu]");
                    var menu = document.controller.findItem($$menu);
                    if (menu && !menu.$isDisabled) {
                        menu.click();
                    }
                    return false;
                });
            }
            else {
                self.$$item.undelegate();
            }
        }
    },
    dispose: function(){
        this._bindEvents(false);
        DesktopPage.prototype.dispose.call(this);
    }
});
