"use strict";
var helpers = require('syracuse-core/lib/helpers');
var Article = require('syracuse-ui/lib/article/article').Article;
var locale = require('syracuse-core/lib/locale');

function SearchFacets(){
}

exports.SearchFacets = helpers.defineClass(SearchFacets, Article, {
    drawBox: function(){
        this.domItem = document.createElement("aside");
        this.domItem.className = "s-search-facets";
        this.$$item = $(this.layoutSlot.appendChild(this.domItem));
        this.articleParent.bind(this, this.$item.$bind);
    },
    onInputMemberChange: function($$check){
        var $$member = $$check.closest(".s-search-facet-member");
        var $$facet = $$member.closest(".s-search-facet'");
        var $facet = this.$searchFacets[$$facet.index()];
        var $member = $facet.$members[$$member.index()];
        
        this._updateFilters($facet.$facet, $member.$value || $member.$title, $$check.is(":checked"));
        
        // in case no filtering param, no "filters" param to add to the url
        var options = Object.keys(this.filters).length > 0 ? {
            jsonParams: {
                filters: this.filters
            }
        } : {};
        
        this.page.updateFilterState(options);
        
        this.fetch(options);
    },
    _updateFilters: function($facet, $title, checked){
        if (checked) {
            (this.filters[$facet] = this.filters[$facet] || []).push($title);
        }
        else {
            var filter = this.filters[$facet];
            if (filter) {
                filter.splice(filter.indexOf($title), 1);
                if (filter.length == 0) {
                    delete this.filters[$facet];
                }
            }
        }
    },
    setDataBind: function($searchFacets, record, metaData){
        // variables
        var self = this;
        var localize = document.site.localize;
        self.filters = {};
        
        if (self.$searchFacets = $searchFacets) {
        
            // clean
            document.site.emptyDom(self.domItem);
            
            // appending searchFacets
            for (var ii = 0, jj = $searchFacets.length; ii < jj; ii++) {
            
                if ($searchFacets[ii].$members && $searchFacets[ii].$members.length > 0) {
                    var facet = document.createElement("div");
                    facet.className = "s-search-facet";
                    
                    var body = document.createElement("div");
                    body.className = "s-search-facet-body";
                    
                    var $searchFacet = $searchFacets[ii];
                    
                    // append members for each searchFacet
                    for (var mm = 0, pp = $searchFacet.$members.length; mm < pp; mm++) {
                        var member = document.createElement("div");
                        member.className = "s-search-facet-member";
                        
                        var checked = document.createElement("input");
                        checked.className = "s-search-facet-member-check";
                        checked.setAttribute("type", "checkbox");
                        document.site.setSpecificAttributes(checked); // add attribute to disable browser spellcheck and autocorrect
                        member.appendChild(checked);
                        
                        var $member = $searchFacet.$members[mm];
                        if ($member.$selected) {
                            checked.setAttribute('checked', true);
                            self._updateFilters($searchFacet.$facet, $member.$value || $member.$title, true);
                        }
                        
                        var title = document.createElement("div");
                        title.className = "s-search-facet-member-title";
                        title.textContent = $member.$title;
                        member.appendChild(title);
                        
                        var count = document.createElement("div");
                        count.className = "s-search-facet-member-count";
                        count.textContent = "(" + $member.$count + ")";
                        member.appendChild(count);
                        
                        // append member links if any
                        if ($member.$links) {
                            var links = document.createElement("div");
                            links.className = "s-search-facet-member-links";
                            member.appendChild(links);
                            var links = self.page.loadNewItem(links, {
                                $category: "menus",
                                $skin: "s-list-menus",
                                $layout: {
                                    $items: Object.keys($member.$links).map(function($bind){
                                        return {
                                            $bind: $bind
                                        };
                                    })
                                }
                            }, self);
                            self.page.applyChange({
                                $links: $member.$links
                            });
                        }
                        
                        body.appendChild(member);
                    }
                    
                    
                    // facet header
                    var header = document.createElement("header");
                    header.className = "s-search-facet-header";
                    var headerTitle = document.createElement("div");
                    headerTitle.className = "s-search-facet-header-title";
                    headerTitle.textContent = $searchFacet.$title || $searchFacet.$facet;
                    header.appendChild(headerTitle);
                    
					/*
                    if (true || $searchFacet.$missing) {
                        var missing = document.createElement("div");
                        missing.className = "s-search-facet-header-missing";
                        missing.textContent = localize.searchFacetMissing + " (" + $searchFacet.$missing + ")";
                        header.appendChild(missing);
                    }*/
                    
                    // finalize building
                    facet.appendChild(header);
                    facet.appendChild(body);
                    self.domItem.appendChild(facet);
                }
                
            }
            
            
            // == old version ==
            /*
             var localize = locale.resources(module)();
             var self = this;
             self.$$item.empty();
             self.filters = {};
             $searchFacets.forEach(function($searchFacet){
             var $$facet = $("<div class='s-search-facet'/>");
             var $$body = $("<div class='s-search-facet-body'/>");
             $searchFacet.$members.forEach(function($member){
             var $$member = $("<div class='s-search-facet-member'/>");
             var $$checked = $("<input class='s-search-facet-member-check' type='checkbox'/>").appendTo($$member);
             
             document.site.setSpecificAttributes($$checked[0]);
             if ($member.$selected) {
             $$checked.attr("checked", true);
             self._updateFilters($searchFacet.$facet, $member.$value || $member.$title, true);
             }
             $("<div class='s-search-facet-member-title'/>").text($member.$title).appendTo($$member);
             $("<div class='s-search-facet-member-count'/>").text("(" + $member.$count + ")").appendTo($$member);
             if ($member.$links) {
             var links = self.page.loadNewItem($("<div class='s-search-facet-member-links'/>").appendTo($$member)[0], {
             $category: "menus",
             $skin: "s-list-menus",
             $layout: {
             $items: Object.keys($member.$links).map(function($bind){
             return {
             $bind: $bind
             };
             })
             }
             }, self);
             self.page.applyChange({
             $links: $member.$links
             });
             }
             $$member.appendTo($$body);
             });
             var $$header = $("<header class='s-search-facet-header'/>");
             $$header.append($("<div class='s-search-facet-header-title'/>").text($searchFacet.$title || $searchFacet.$facet));
             if (true || $searchFacet.$missing) {
             $$header.append($("<div class='s-search-facet-header-missing'/>").text(localize.search_missing + " (" + $searchFacet.$missing + ")"));
             }
             $$facet.append($$header).append($$body).appendTo(self.$$item);
             });*/
        }
    }
});
