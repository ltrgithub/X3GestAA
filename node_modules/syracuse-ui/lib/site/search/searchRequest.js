"use strict";
var helpers = require('syracuse-core/lib/helpers');
var locale = require('syracuse-core/lib/locale');
var RawPage = require('syracuse-ui/lib/article/rawPage').RawPage;
var Field = require('syracuse-ui/lib/field/field').Field;
function SearchRequest(){
}

exports.SearchRequest = helpers.defineClass(SearchRequest, RawPage, {
    drawBox: function(){
        var dom;
        this.$layoutOptions = {
            $skin: this.$skin = "s-search-rq",
            section: "s-h1",
            block: "s-h2",
            menus: "s-page-menus"
        };
        dom = document.createElement("article");
        dom.className = this.$skin;
        this.$$item = $(dom).appendTo(this.$$container);
        
        dom = document.createElement("div");
        this.$$body = $(dom).appendTo(this.$$item);
        
        this._renderLayoutContent(this.$item);
        this.appendArticleMenus();
    },
    createNewItem: function($item, boxParent){
        if ($item.$bind == "$search") {
            var searcField = new SearchField();
            searcField.$field = this.$prototype.$properties[$item.$bind];
            return this.initializeNewItem(searcField, $item, boxParent);
        }
        return RawPage.prototype.createNewItem.call(this, $item, boxParent);
    },
    notifyDataChange: function(field, value){
        if (field.$item.$bind == "$search") {
            this.dataset[field.$item.$bind] = value;
            document.controller.executeMenu(this.menuItems["$searchLink"][0]);
        }
    },
    dispose: function(){
        RawPage.prototype.dispose.call(this);
    }
});

function SearchField(){
}

exports.SearchField = helpers.defineClass(SearchField, Field, {
    _onAutoCompleteOpen: function(){
        var self = this;
        self._autoCompleteList = document.createElement("div");
        self._autoCompleteList.className = self.$skin + "-autocomplete-list";
        self.page.loadNewItem($(self._autoCompleteList), {
            $category: "section",
            $layout: {
                $items: [{
                    $category: "block",
                    $title: "Query1",
                    $layout: {
                        $items: [{
                            $isTitleHidden: true,
                            $bind: "$query1",
                            "$layout": {
                                "$items": [{
                                    "$bind": "login"
                                }, {
                                    "$bind": "firstName"
                                }, {
                                    "$bind": "lastName"
                                }, {
                                    "$bind": "photo"
                                }]
                            }
                        }]
                    }
                }, {
                    $category: "block",
                    $title: "Query2",
                    $layout: {
                        $items: [{
                            $isTitleHidden: true,
                            $bind: "$query2"
                        }]
                    }
                }, {
                    $catgory: "link",
                    $skin: "s-record-menus-link",
                    $bind: "$advanceSearch"
                }]
            }
        }, self.page);
        debugger;
        self.page.dataset.$search = this.getDataValue();
        self.page.formatMenuUrl(self.page.$prototype.$links.$queryLink2, self.page.dataset, function($url, isCanceled){
            document.controller.sendRequest(self, {
                $location: {
                    $url: $url
                }
            }, function(data){
            
            });
        });
        self.page.formatMenuUrl(self.page.$prototype.$links.$queryLink2, self.page.dataset, function($url, isCanceled){
            document.controller.sendRequest(self, {
                $location: {
                    $url: $url
                }
            }, function(data){
            
            });
        });
        return self._autoCompleteList;
    },
    _onAutoCompleteClose: function(){
        if (this._autoCompleteList) {
            document.site.emptyDom(this._autoCompleteList);
            this._autoCompleteList = null;
        }
    },
    onClickPicker: function(){
        this.onInputValidate(); //trigger notification change
    },
    dispose: function(){
        this._onAutoCompleteClose();
        Field.prototype.dispose.call(this);
    }
});

exports.loadRequest = function($$container){
    var $url = "/sdata/syracuse/search/syracuse/$search?representation=queryResult.$search&q={search}";
    var httpQuery = document.controller.parseUrl($url);
    var $itemPage = {
        $autoFetch: false,
        $isEditMode: true,
        $$container: $$container,
        $category: "searchRequest",
        $urlParts: httpQuery.$urlParts,
        $pageCategoryClass: SearchRequest,
        $representation: {
            $prototype: {
                "$baseUrl": "/sdata/sprint1/settings/sprint1",
                $properties: {
                    $query1: {
                        "$type": "application/x-array",
                        $item: {
                            "$properties": {
                                "login": {
                                    "$title": "Default Account",
                                    "$type": "application/x-string",
                                    "$capabilities": "sort",
                                },
                                "firstName": {
                                    "$title": "First Name",
                                    "$type": "application/x-string",
                                    "$capabilities": "sort,filter,alphaTab"
                                },
                                "lastName": {
                                    "$title": "Last Name",
                                    "$type": "application/x-string",
                                    "$capabilities": "sort"
                                },
                                "photo": {
                                    "$title": "Photo",
                                    "$type": "image",
                                    "$url": "{$baseUrl}/users('{$key}')/photo",
                                    "$capabilities": ""
                                }
                            }
                        }
                    },
                    $query2: {
                        "$type": "application/x-array",
                        $item: {
                            "$properties": {
                                "firstName": {
                                    "$title": "First Name",
                                    "$type": "application/x-string",
                                    "$capabilities": "sort,filter,alphaTab"
                                },
                                "lastName": {
                                    "$title": "Last Name",
                                    "$type": "application/x-string",
                                    "$capabilities": "sort"
                                },
                                "photo": {
                                    "$title": "Photo",
                                    "$type": "image",
                                    "$url": "{$baseUrl}/employees('{$key}')/photo",
                                    "$capabilities": ""
                                }
                            }
                        }
                    },
                    $search: {
                        $type: "application/x-string",
                        $title: "Search by key words",
                        $links: {
                            $suggest: {}
                        }
                    }
                },
                $links: {
                    $queryLink1: {
                        $url: "/sdata/syracuse/collaboration/syracuse/users?representation=user.$query&where=(lastName like '%{param1}%')",
                        "$parameters": {
                            "param1": "{$search}",
                        }
                    },
                    $queryLink2: {
                        $url: "/sdata/syracuse/collaboration/syracuse/users?representation=employe.$query&where=(lastName like '%{param1}%')",
                        "$parameters": {
                            "param1": "{$search}",
                        }
                    },
                    $searchLink: {
                        "$type": "application/json;vnd.sage=syracuse",
                        $url: "/sdata/syracuse/search/syracuse/$search?representation=queryResult.$search&q={search}"
                    },
                    $advanceSearch: {
                        $title: "Advanced Search",
                        $url: "/sdata/syracuse/search/syracuse/$search?representation=queryResult.$search&q={search}"
                    }
                }
            },
            $article: {
                $isTitleHidden: true,
                $layout: {
                    $items: [{
                        $bind: "$search",
                        $isTopLabelAlignment: false,
                        $category: "field",
                        $validationTrigger: "keyup",
                        $skin: "s-search-rq-field",
                        $inplace: true
                    }, {
                        $bind: "$searchLink",
                        $category: "link",
                        $noText: true,
                        $skin: "s-site-search-picker"
                    }]
                }
            }
        }
    };
    return document.site.loadNewPage($itemPage);
    
};
