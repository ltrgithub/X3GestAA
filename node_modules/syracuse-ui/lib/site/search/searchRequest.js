"use strict";
var helpers = require('syracuse-core/lib/helpers');
var locale = require('syracuse-core/lib/locale');
var RawPage = require('syracuse-ui/lib/page/rawPage').RawPage;
var Field = require('syracuse-ui/lib/field/field').Field;

function SearchRequest() {}

exports.SearchRequest = helpers.defineClass(SearchRequest, RawPage, {
	drawBox: function() {
		this.$skin = this.$item.$skin = "s-search-rq";
		var dom = document.createElement("article");
		dom.className = this.$skin;
		this.$$item = $(this.layoutSlot.appendChild(dom));

		dom = document.createElement("div");
		this.$$body = $(dom).appendTo(this.$$item);

		this.renderLayoutContent();
		this.appendArticleMenus();
	},
	_bindEvents: function(bind) {
		var self = this;
		if (self._autoCompleteList) {
			if (bind) {
				$(self._autoCompleteList).delegate(".s-search-rq-field-record", "click", function() {
					var $$menu = $(this).find("a[data-s-menu]");
					var menu = document.controller.findItem($$menu);
					if (menu && !menu.$isDisabled) {
						menu.click();
					}
					return false;
				});
			} else {
				$(self._autoCompleteList).undelegate();
			}
		}
	},
	createNewItem: function($item, boxParent) {
		if ($item.$bind == "$search") {
			var searchField = new SearchField();
			searchField.$field = this.$prototype.$properties[$item.$bind];
			return this.initializeNewItem(searchField, $item, boxParent);
		}
		return RawPage.prototype.createNewItem.call(this, $item, boxParent);
	},
	notifyDataChange: function(field, value) {
		if (field.$item.$bind == "$search") {
			// only if search field not empty
			if (value.replace(/\s+/g, '') !== "") {
				this.dataset[field.$item.$bind] = value;
				this.menuItems["$searchLink"][0].$url = this.$prototype.$links.$searchLink.$url + "";
				document.controller.executeMenu(this.menuItems["$searchLink"][0]);
			}
		}
	},
	loadAutoCompleteList: function(searchField) {
		var self = this;
		var searchRqSkin = searchField.$skin;
		var localize = locale.resources(module)();

		self.dataset.$search = searchField.getDataValue();

		if (self.dataset.$search == "") {
			//TODO close dialog if empty field
			return;
		}

		self._autoCompleteList = document.createElement("div");
		self._autoCompleteList.className = searchRqSkin + "-autocomplete-list";

		self.searchItem = self.searchItem || self.loadNewItem(self._autoCompleteList, {
			$category: "section",
			$skin: searchRqSkin + "-h1",
			$isTitleHidden: true,
			$layout: {
				$items: [{
					$skin: searchRqSkin,
					$css: searchRqSkin,
					$title: "Functions",
					$bind: "$query1",
					$noDataText: localize.search_no_res,
					$isPagerHidden: true,
					$isQuickDesignerEnabled: false,
					$format: "cards",
					$cards: {
						$isTitleHidden: true,
						$category: "section",
						$layout: {
							$items: [{
								$isEditMode: false,
								$bind: "title",
								$isTitleHidden: true,
								$skin: searchRqSkin
							}]
						}
					}
				}, {
					$skin: searchRqSkin,
					$css: searchRqSkin,
					$title: "Data",
					$bind: "$query2",
					$noDataText: localize.search_no_res,
					$isPagerHidden: true,
					$isQuickDesignerEnabled: false,
					$format: "cards",
					$cards: {
						$category: "section",
						$isTitleHidden: true,
						$layout: {
							$items: [{
								$isEditMode: false,
								$bind: "title",
								$isTitleHidden: true,
								$skin: searchRqSkin
							}, {
								$isEditMode: false,
								$bind: "type",
								$isTitleHidden: true,
								$skin: searchRqSkin + "-type"
							}]
						}
					}
				}, {
					$category: "link",
					$skin: searchRqSkin + "-advanced",
					$bind: "$advancedSearch"
				}]
			}
		}, self);

		self.formatMenuUrl(self.$prototype.$links.$queryLink1, self.dataset, function($url, isCanceled) {
			document.controller.sendRequest(self, {
				$location: {
					$url: $url
				}
			}, function(data) {
				data.$itemsPerPage = 5;
				data.$query1 = data.$resources;
				delete data.$resources;
				self.applyChange(data);
			});
		});
		self.formatMenuUrl(self.$prototype.$links.$queryLink2, self.dataset, function($url, isCanceled) {
			document.controller.sendRequest(self, {
				$location: {
					$url: $url
				}
			}, function(data) {
				data.$itemsPerPage = 5;
				data.$query2 = data.$resources;
				delete data.$resources;
				self.applyChange(data);
			});
		});

		this._bindEvents(true);

		return self._autoCompleteList;
	},
	unloadAutoCompleteList: function() {
		if (this._autoCompleteList) {
			this._bindEvents(false);
			document.site.emptyDom(this._autoCompleteList);
			this._autoCompleteList = null;
			this.page.removeItem(this.searchItem, true);
			this.searchItem = null;
		}
	},
	dispose: function() {
		this.unloadAutoCompleteList();
		RawPage.prototype.dispose.call(this);
	}
});

function SearchField() {}

exports.SearchField = helpers.defineClass(SearchField, Field, {
	_onAutoCompleteOpen: function() {
		return this.page.loadAutoCompleteList(this);
	},
	_onAutoCompleteClose: function() {
		this.page.unloadAutoCompleteList();
	},
	onClickPicker: function(btn) {
		// handle clear button behaviour
		if (btn && btn.getAttribute("data-s-picker") == "clear") {
			this.setDataValue("");
			btn.style.display = "none";
		}
		this.onInputValidate(); //trigger notification change
	},
	onInputFocusin: function(input, event) {
		// handle clear button behaviour
		var picker = this.picker || $(this._input.parentNode).find("a.s-search-rq-field-clear-picker")[0];
		if (this.getDataValue() != "") {
			picker.style.display = "inline-block";
			picker.style.opacity = 1;
		}
		Field.prototype.onInputFocusin.call(this, input, event);
	},
	onInputFocusout: function(input, event) {
		// handle clear button behaviour
		var picker = this.picker || $(this._input.parentNode).find("a.s-search-rq-field-clear-picker")[0];
		if (this.getDataValue() != "") {
			picker.style.display = "inline-block";
			picker.style.opacity = 0.4;
		}
		Field.prototype.onInputFocusout.call(this, input, event);
	},
	onInputKeyup: function(input, event) {
		// handle clear button behaviour
		var picker = this.picker || $(this._input.parentNode).find("a.s-search-rq-field-clear-picker")[0];
		picker.style.display = this.getDataValue() == "" ? "none" : "inline-block";
		picker.style.opacity = 1;
		Field.prototype.onInputKeyup.call(this, input, event);
	}
});

exports.loadRequest = function(layoutSlot) {
	var $url = "/sdata/syracuse/search/syracuse/$search?representation=queryResult.$search&q={$search}";
	var httpQuery = document.controller.parseUrl($url);
	var $itemPage = {
		$autoFetch: false,
		$isEditMode: true,
		layoutSlot: layoutSlot,
		$category: "searchRequest",
		$urlParts: httpQuery.$urlParts,
		$pageCategoryClass: SearchRequest,
		$representation: {
			$prototype: {
				"$baseUrl": "/sdata/sprint1/settings/sprint1",
				$properties: {
					$query1: {
						"$type": "application/x-array",
						$item: {
							"$properties": {
								"title": {
									"$title": "Description",
									"$type": "application/x-string",
									"$capabilities": "sort,filter,alphaTab",
									"$links": {
										"$details": {
											"$type": "application/json;vnd.sage=syracuse",
											"$url": "{$baseUrl}/{$pluralType}('{$key}')?representation={$representation}.$details&role={$role}"
										}
									}
								}
							}
						}
					},
					$query2: {
						"$type": "application/x-array",
						$item: {
							"$properties": {
								"title": {
									"$title": "Description",
									"$type": "application/x-string",
									"$capabilities": "sort,filter,alphaTab",
									"$links": {
										"$details": {
											"$type": "application/json;vnd.sage=syracuse",
											"$url": "{$baseUrl}/{$pluralType}('{$key}')?representation={$representation}.$details&role={$role}"
										}
									}
								},
								"type": {
									"$title": "Type",
									"$type": "application/x-string",
									"$capabilities": "sort,filter,alphaTab"
								}
							}
						}
					},
					"query": {
						"$type": "application/x-string"
					},
					$search: {
						$type: "application/x-string",
						$title: "Search by key words",
						$links: {
							$suggest: {}
						}
					}
				},
				$links: {
					$queryLink1: {
						$url: "/sdata/syracuse/search/syracuse/$search?representation=queryResult.$search&q={$search}&source=functions"
					},
					$queryLink2: {
						$url: "/sdata/syracuse/search/syracuse/$search?representation=queryResult.$search&q={$search}&source=data"
					},
					$searchLink: {
						"$type": "application/json;vnd.sage=syracuse",
						$url: "/sdata/syracuse/search/syracuse/$search?representation=queryResult.$search&q={$search}"
					},
					$advancedSearch: {
						$title: "See more results",
						$url: "/sdata/syracuse/search/syracuse/$search?representation=queryResult.$search&q={$search}"
					}
				}
			},
			$article: {
				$isTitleHidden: true,
				$layout: {
					$items: [{
						$bind: "$search",
						$isTopLabelAlignment: false,
						$category: "field",
						$validationTrigger: "keyup",
						$skin: "s-search-rq-field",
						$inplace: true
					}, {
						$bind: "$searchLink",
						$category: "link",
						$noText: true,
						$skin: "s-site-search-picker"
					}]
				}
			}
		}
	};
	return document.site.loadNewPage($itemPage);

};