"use strict";
var helpers = require('syracuse-core/lib/helpers');
var locale = require('syracuse-core/lib/locale');
var Article = require("syracuse-ui/lib/article/article").Article;

function SelectorPopup(){

}

exports.SelectorPopup = helpers.defineClass(SelectorPopup, Article, {
    onNotifyRecordChange: function(){
        return null;
    },
    
    loadBox: function(){
        var self = this;
        
        self.localize = locale.resources(module)();
        
        var dom = document.createElement("div");
        dom.className = "s-popup";
        
        self.$$container = $(dom);
        
        document.itemFactory.initializeItem(self, {}, self.opener);
        self.$options.$selectMode = self.$options.$selectMode || "multi";
        self.$prototype = {
            $properties: {
                $resources: self.$options.$properties.$resources
            },
        };
        self.$item = {
            $category: "section",
            $title: self.localize.popup_title,
            $id: self.$item.$id,
            $layout: {
                $items: [{
                    $bind: "$resources",
                    $isEditMode: false,
                    $isPagerHidden: true,
                    $isMenuRecordHidden: true,
                    $isQuickDesignerEnabled: false,
                    $selectMode: self.$options.$selectMode,
                    $fitContainer: false,
                    $isTitleHidden: true
                }]
            
            }
        };
        self.$skin = "s-popup-item";
        Article.prototype.loadBox.call(self);
        
        document.site.setDraggable(self, self.$$header);
        
        dom = document.createElement("div");
        dom.className = "s-popup-footer";
        self.$$footer = $(dom).appendTo(self.$$container);
        
        self.appendOkCancel();
        
    },
    onSelectRecord: function(selectedRecords){
        this.$options.onSelectRecord(selectedRecords);
    },
    appendOkCancel: function(){
        var self = this;
        var btn;
        if (self.$options.$selectMode == "multi") {
            btn = document.createElement("a");
            btn.className = "s-popup-ok";
            btn.setAttribute("title", self.localize.popup_linkOk);
            self.$$item.append(btn);
        }
        
        btn = document.createElement("a");
        btn.className = "s-popup-cancel";
        btn.setAttribute("title", self.localize.popup_linkCancel);
        self.$$item.append(btn);
        
        self.$$item.delegate(".s-popup-cancel,.s-popup-ok", "click", function(){
            if (this.className.indexOf("s-popup-ok") >= 0) {
                self.$options.onValidate();
            }
            setTimeout(function(){
                self.close();
            }, 10);
            return false;
        });
    },
    open: function(opener, $options){
        var self = this;
        self.opener = opener;
        self.$options = $options;
        self.loadBox($options);
        self.applyChange({
            $resources: self.$options.$resources
        });
        self.popup = self.opener.boxParent.openDialog({
            $dialogMode: "popup",
            content: self.opener,
            $$dialog: self.$$container,
            position: {
                my: "left top",
                at: "left bottom",
                of: $options.$$position
            },
            onClose: function(){
                self.popup = null;
                self.getArticleParent().removeItem(self, true, true);
            }
        });
        return self.popup;
    },
    close: function(){
        if (this.popup) {
            if (this.$options.onClose) {
                this.$options.onClose();
            }
            this.popup.close();
        }
    },
    dispose: function(){
        if (this.$options) {
            delete this.$options.onClose;
            delete this.$options.onSelectRecord;
            delete this.$options.onValidate;
            delete this.$options
        }
        delete this.opener;
        Article.prototype.dispose.call(this);
    }
});
