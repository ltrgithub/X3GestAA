"use strict";
var globals = require('streamline/lib/globals');

var URL_KEY_PARAM = "?url=";

function _getSdataUrl(url) {
	var param = url.search(/\?url=/i);
	if (param >= 0) {
		return decodeURIComponent(url).slice(param + (URL_KEY_PARAM).length);
	}
	return url;
}
exports.getSdataUrl = _getSdataUrl;

function _setUrlParameter(url) {
	return (url.indexOf(URL_KEY_PARAM) >= 0) ? url : (URL_KEY_PARAM + encodeURIComponent(url));
};


var _updateHitory;

exports.reloadSite = function() {
	syra_site.isSiteReloading = true;
	document.location.reload(true);
};

exports.cancelChange = function() {
	_updateHitory = true;
	window.history.forward();
};

exports.start = function() {
	//load representation of url
	exports.loadMainPage();
	//listen history change
	window[window.history.pushState ? "onpopstate" : "onhashchange"] = function(event) {
		if (_updateHitory) {
			_updateHitory = false;
		} else {
			exports.loadMainPage(true);
			if (syra_site.mainPage)
				syra_site.mainPage.historyback = true;
		}
	};
};

exports.forceBack = function() {
	window.history.back();
};

exports.update = function(mainPage, $url) {
	var param = _setUrlParameter($url);
	if (window.history.pushState) {
		window.history.replaceState("$updateHitory", param, param);
	} else {
		_updateHitory = true;
		window.location.hash = "#" + encodeURIComponent(param);
	}
	mainPage.openerUrlSegments = syra_site.urlMaker.parse($url);
	syra_site.checkMainPageBookmarkStatus();
};

function _changeMainPage($url, $itemPage, onHistoryChange) {
	if (!window.history.pushState) {
		var hash = $url.indexOf("#");
		if (hash >= 0) {
			var urlPath = $url.slice(0, hash);
			if (urlPath.indexOf("?") >= 0) {
				urlPath = urlPath.slice(0, urlPath.indexOf("?"));
			}
			$url = urlPath + decodeURIComponent($url.slice(hash + 1));
		} else {
			if ($url.indexOf("?") < 0) {
				//add default homepage
			}
		}
	}
	syra_controller.changeMainPage(_getSdataUrl($url), $itemPage, onHistoryChange);
};

exports.load = function($url, target, $itemPage, isDefaultUrl) {
	var param = (isDefaultUrl === false) ? $url : _setUrlParameter($url);
	if (target == "blank") {
		window.open(param, "_blank");
	} else {
		if (window.history.pushState) {
			window.history.pushState("", param, param);
			_changeMainPage($url, $itemPage);
		} else {
			if ($url.indexOf("#") >= 0) {
				window.location.assign(param);
				_changeMainPage($url, $itemPage);
			} else {
				window.location.hash = "#" + encodeURIComponent(param);
			}
		}
	}
};


exports.loadMainPage = function(onHistoryChange) {
	// handle LTR / RTL switch
	var lp = globals.context && globals.context.localePreferences;
	var rtl = lp && lp.code && /^(ar|iw|he)/.test(lp.code);
	var href = document.location.href;
	var qm = href.indexOf('?');
	if (rtl && !/rtl=true/.test(href)) {
		href += (qm < 0 ? '?' : '&') + 'rtl=true';
	} else {
		if (!rtl) {
			href = href.replace(/(\?|\&)rtl=true/, '');
		}
	}
	// loadMainPage page if writing direction changes
	if (href != document.location.href) {
		syra_site.isSiteReloading = true;
		document.location.href = href;
	} else {
		_changeMainPage(href, null, onHistoryChange);
	}
};

exports.getUrlSegment = function($url) {
	return syra_site.urlMaker.parse(_getSdataUrl($url || document.location.href));
};

exports.setHref = function(menu, record, isExternal) {
	if (menu.articleParent) {
		menu.$url = syra_site.urlMaker.formatMenuUrl(menu.articleParent, menu, record);
	}
	menu.isNoSyracuseUrl = menu.$type == "html" || ((menu.$url.indexOf("http") >= 0 && menu.$url.indexOf(window.location.host) < 0));
	menu.domItem.setAttribute("href", menu.href = menu.isNoSyracuseUrl ? menu.$url : _setUrlParameter(menu.$url));
	if (isExternal || menu.isNoSyracuseUrl) {
		menu.domItem.setAttribute("target", menu.$target = (menu.$target || "blank"));
	}
};


exports.ensureProxy = function($url) {
	var lower = $url.toLowerCase();
	if (lower.indexOf(window.location.protocol) == 0 && lower.indexOf(window.location.protocol + "//" + window.location.host) != 0) {
		$url = "/proxy" + _setUrlParameter($url);
	}
	return $url;
};