"use strict";
var helpers = require('syracuse-core/lib/helpers');
var Field = require('syracuse-ui/lib/field/field').Field;

var Widget = helpers.defineClass(function() {}, Field, {
	render: function() {
		var self = this;
		var editable = this.page.$facet === '$edit';
		this.component = this.api.create({
			div: this._dataValue,
			facet: this.page.$facet,
			title: this.$field.$title,
			editable: editable,
			setDirty: function() {
				if (editable) self.page.applyChange({
					$actions: {
						$save: {
							$isDisabled: false,
						}
					}
				});
			}
		});
	},
	validateType: function(errors, value) {
		if (value === undefined) return;
		var result = this.component && this.component.validate && this.component.validate(value);
		if (!result) return;

		function pushOne(res) {
			// for now only handle string - enable diagnoses later.
			if (typeof res === "string") errors.push(res);
			else throw new Error("bad validate result: " + res + ", " + typeof res);
		}
		if (Array.isArray(result)) result.map(pushOne);
		else pushOne(result);
	},
	getDataValue: function() {
		return this.component && this.component.getValue && this.component.getValue();
	},
	setDataValue: function(value) {
		if (this.component && this.component.setValue) this.component.setValue(value);
	},
});

exports.makeClass = function(type, api) {
	return helpers.defineClass(function() {
		Widget.call(this);
	}, Widget, {
		api: api
	});
};