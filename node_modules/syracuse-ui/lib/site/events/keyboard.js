"use strict";
var shortCutInvoker = require('syracuse-ui/lib/site/events/shortCutInvoker');

var _keyCodeMap = {
	"8": "backspace",
	"9": "tab",
	"13": "enter",
	"16": "shift",
	"17": "ctrl",
	"27": "esc",
	"32": "space",
	"33": "pageup",
	"34": "pagedown",
	"36": "home",
	"37": "left",
	"38": "up",
	"39": "right",
	"40": "down",
	"45": "insert",
	"46": "delete",
	"58": ",",
	"65": "a",
	"66": "b",
	"67": "c",
	"68": "d",
	"69": "e",
	"70": "f",
	"71": "g",
	"72": "h",
	"73": "i",
	"74": "j",
	"75": "k",
	"76": "l",
	"77": "m",
	"78": "n",
	"79": "o",
	"80": "p",
	"81": "q",
	"82": "r",
	"83": "s",
	"84": "t",
	"85": "u",
	"86": "v",
	"87": "w",
	"88": "x",
	"89": "y",
	"90": "z",
	"111": "divide",
	"112": "f1",
	"115": "f4",
	"116": "f5",
	"117": "f6",
	"118": "f7",
	"120": "f9",
	"122": "f11",
	"123": "f12",
	"188": ":"
};

var _shortcurts = {};

function _neutralizeWhileUILocker(evt) {
	if (evt.target.syrUILockerBlackHole) {
		evt.returnValue = false;
		evt.preventDefault();
		evt.stopPropagation();
	}
}

function _getPage(focusField, article) {
	var page = focusField ? focusField.page : null;
	var dialog = syra_site.dialogManager.getTopDialogPage();
	if (dialog) {
		if (!page || (page != syra_site)) {
			page = dialog._content;
		}
	}
	if (!page && article && article != syra_site) {
		page = article.page;
	}
	page = page || syra_site.mainPage;
	if (page && page.disposed) {
		page = null;
	}
	return page || syra_site;
}

function _getTargetItems(target) {
	var field, article;
	while (target != null && !field && !article) {
		if (!field && target.syraItem) {
			field = syra_map[target.syraItem];
			if (field && !field.isField) {
				field = null;
			}
			article = field && field.articleParent;
		}
		if (target.syraarticle) {
			article = syra_map[target.syraarticle];
		}
		target = target.parentNode;
	}
	return {
		field: field,
		article: article,
		page: _getPage(field, article)
	};
}



exports.keydown = function(event) {
	var items = _getTargetItems(event.target);
	var isFocusOnMesgBox;
	event = event || window.event;
	if (event.keyCode == 27) {
		_shortcurts = {
			esc: true
		};
		event.preventDefault();
		event.stopPropagation();
	} else {
		if (_shortcurts.esc) {
			_shortcurts.isEnabled = true;
		}
	}
	var isShorcutApplyed = false;
	_shortcurts[event.syraKeyMap = _keyCodeMap[event.keyCode]] = true;
	var messageBox = syra_diagnose.getOpenedBox();
	if (messageBox && !messageBox.displayDisabled) {
		isShorcutApplyed = _applyToMessageBox(messageBox, _shortcurts);
		isFocusOnMesgBox = true;
	}
	if (!isShorcutApplyed && items.field && items.field.applyShortCuts) {
		isShorcutApplyed = items.field.applyShortCuts(_shortcurts, event);
	}
	if (!isShorcutApplyed && items.page) {
		var articleParent = (items.field) ? items.field.articleParent : null;
		if (articleParent && articleParent.arrayLevel === "record" && articleParent.applyShortCuts) {
			isShorcutApplyed = articleParent.applyShortCuts(_shortcurts, event, items.field);
		}
	}
	if (!isShorcutApplyed && items.page) {
		var lists;
		var list = (items.page.getLastFocusGrid(items.field) || (((lists = items.page.getLists()) && lists.length == 1) ? lists[0] : null));
		if (list) {
			isShorcutApplyed = list.applyShortCuts(_shortcurts, event, items.field);
		} else
		if (items.page.getCurrNavigationList) {
			list = items.page.getCurrNavigationList();
			if (list) {
				isShorcutApplyed = list.applyShortCuts(_shortcurts, event, items.field);
			}
		}
	}
	if (!isShorcutApplyed && items.page) {

		isShorcutApplyed = items.page.applyShortCuts(_shortcurts, event, items.field);
		if (items.field) {
			if (!isShorcutApplyed && items.page && items.page.isFusionPage && items.field.onFieldInputEvent && event.keyCode !== 27) {
				items.field.onFieldInputEvent(event, _shortcurts);
				event.stopPropagation();
				return;
			}
		}
		if (isShorcutApplyed && items.page.isFusionPage) {
			syra_site.fusionGateway.onKeyDow(event);
		}
	}
	if (isShorcutApplyed && _shortcurts.esc) {
		_shortcurts = _shortcurts.f1 ? {} : {
			esc: true,
			isEnabled: true
		};
		event.returnValue = false;
		event.preventDefault();
		event.stopPropagation();
		return false;
	}
	if ((isShorcutApplyed && _shortcurts.tab) || isFocusOnMesgBox) {
		event.returnValue = false;
		event.preventDefault();
		event.stopPropagation();
		return false;
	}
	_neutralizeWhileUILocker(event);

};

exports.keypress = function(event) {
	event = event || window.event;
	var charCode;
	if (event.which == null) {
		charCode = String.fromCharCode(event.keyCode); // old IE
	} else {
		if (event.which != 0 && event.charCode != 0) {
			charCode = event.which;
		}
		if (_shortcurts.esc) {
			var funcKey = charCode || event.keyCode;
			if (funcKey && funcKey >= 112 && funcKey <= 123) {
				return false;
			}
		}
	}
	if (charCode !== undefined) {
		if (!(_shortcurts && _shortcurts.esc)) {
			var items = _getTargetItems(event.target);
			if (items.field && items.field.validateKeyPress) {
				if (!items.field.validateKeyPress(String.fromCharCode(event.charCode || event.keyCode), _shortcurts, event)) {
					event.returnValue = false;
					event.preventDefault();
					event.stopPropagation();
					return false;
				}
			}
		}
	}
	_neutralizeWhileUILocker(event);
};

exports.keyup = function(event) {
	event = event || window.event;
	var items = _getTargetItems(event.target);
	if (_shortcurts) {
		if (event.keyCode == 27) {
			if (!_shortcurts.isEnabled) {
				var isEscApplyed;
				if (items.field && items.field.applyEscape) {
					isEscApplyed = items.field.applyEscape(_shortcurts, event);
				}
				if (!isEscApplyed && items.page) {
					items.page.applyEscape(_shortcurts);
				}
			}
			_shortcurts = {};
		} else {
			if (!_shortcurts.esc) {
				delete _shortcurts[event.syraKeyMap = _keyCodeMap[event.keyCode]];
				if (items.field) {
					if (items.field.onKeyUp) {
						items.field.onKeyUp(event);
					} else {
						if (items.page.isFusionPage && items.field.onFieldInputEvent) {
							items.field.onFieldInputEvent(event);
							event.stopPropagation();
							return;
						}
					}
				}
			}
		}
	}
	_neutralizeWhileUILocker(event);
};