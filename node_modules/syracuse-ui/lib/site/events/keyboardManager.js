"use strict";
var helpers = require('syracuse-core/lib/helpers');

var _keyCodeMap = {
	"8": "backspace",
	"9": "tab",
	"13": "enter",
	"16": "shift",
	"17": "ctrl",
	"27": "esc",
	"32": "space",
	"33": "pageup",
	"34": "pagedown",
	"36": "home",
	"37": "left",
	"38": "up",
	"39": "right",
	"40": "down",
	"45": "insert",
	"46": "delete",
	"58": ",",
	"65": "a",
	"66": "b",
	"67": "c",
	"68": "d",
	"69": "e",
	"70": "f",
	"71": "g",
	"72": "h",
	"73": "i",
	"74": "j",
	"75": "k",
	"76": "l",
	"77": "m",
	"78": "n",
	"79": "o",
	"80": "p",
	"81": "q",
	"82": "r",
	"83": "s",
	"84": "t",
	"85": "u",
	"86": "v",
	"87": "w",
	"88": "x",
	"89": "y",
	"90": "z",
	"111": "divide",
	"112": "f1",
	"115": "f4",
	"116": "f5",
	"117": "f6",
	"118": "f7",
	"120": "f9",
	"122": "f11",
	"123": "f12",
	"188": ":"
};

var _keydowEvent, _keypressEvent, _keyupEvent;
var _shortcurts = {};

function _neutralizeWhileUILocker(evt) {
	if (evt.target.className === "s-uiLocker-loading-blackhole") {
		evt.returnValue = false;
		if (evt.preventDefault) {
			evt.preventDefault();
		}
		evt.stopPropagation();
	}
}

exports.dispose = function() {
	if (_keydowEvent || _keypressEvent || _keyupEvent) {
		document.removeEventListener("keydown", _keydowEvent, false);
		document.removeEventListener("keypress", _keypressEvent, false);
		document.removeEventListener("keyup", _keyupEvent, false);
	}
	_keydowEvent = _keypressEvent = _keyupEvent = null;
};

function _getPage(focusField, article) {
	var page = focusField ? focusField.page : null;
	var dialog = syra_site.dialogManager.getTopDialogPage();
	if (dialog) {
		if (!page || (page != syra_site)) {
			page = dialog._content;
		}
	}
	if (!page && article && article != syra_site) {
		page = article.page;
	}
	page = page || syra_site.mainPage;
	if (page && page.disposed) {
		page = null;
	}
	return page || syra_site;
}


exports.load = function() {
	var list, currIst;

	_keydowEvent = document.addEventListener("keydown", function(event) {
		var site = syra_site;
		var focusField = syra_site.findField(event.target);
		var article = syra_site.findArticle(event.target);
		var page = _getPage(focusField, article);
		var doEvent = true,
			isFocusOnMesgBox = false;
		event = event || window.event;
		if (event.keyCode == 27) {
			_shortcurts = {
				esc: true
			};
		} else {
			if (_shortcurts.esc) {
				_shortcurts.isEnabled = true;
			}
		}
		var isShorcutApplyed = false;
		_shortcurts[event.syraKeyMap = _keyCodeMap[event.keyCode]] = true;
		if (site.messageBox && !site.messageBox.displayDisabled) {
			isShorcutApplyed = site.messageBox.applyShortCuts(_shortcurts);
			isFocusOnMesgBox = true;
		}
		if (!isShorcutApplyed && focusField && focusField.applyShortCuts) {
			isShorcutApplyed = focusField.applyShortCuts(_shortcurts, event);
		}
		if (!isShorcutApplyed && page) {
			//focusField = (focusField || page.focusField);
			var articleParent = (focusField) ? focusField.articleParent : null;
			if (articleParent && articleParent.arrayLevel === "record" && articleParent.applyShortCuts) {
				isShorcutApplyed = articleParent.applyShortCuts(_shortcurts, event, focusField);
			}
		}
		if (!isShorcutApplyed && page) {
			var lists;
			list = (page.getLastFocusGrid(focusField) || (((lists = page.getLists()) && lists.length == 1) ? lists[0] : null));
			if (list) {
				isShorcutApplyed = list.applyShortCuts(_shortcurts, event, focusField);
			} else
			if (page.getCurrNavigationList) {
				list = page.getCurrNavigationList();
				if (list) {
					isShorcutApplyed = list.applyShortCuts(_shortcurts, event, focusField);
				}
			}
		}
		if (!isShorcutApplyed && page) {

			isShorcutApplyed = page.applyShortCuts(_shortcurts, event, focusField);
			//TODO : find best way to do that.
			// pb is: f1 open new window so keypress and keyup dont catch so shortcurts is not reinit
			if (isShorcutApplyed && _shortcurts.f1) {
				_shortcurts = {};
			}
			if (focusField) {
				if (!isShorcutApplyed && page && page.isFusionPage && focusField.onFieldInputEvent && event.keyCode !== 27) {
					focusField.onFieldInputEvent(event, _shortcurts);
					event.stopPropagation();
					return;
				}
			}
			if (isShorcutApplyed && page.isFusionPage) {
				doEvent = site.fusionGateway.onKeyDow(event);
			}
		}
		if (isShorcutApplyed && _shortcurts.esc) {
			_shortcurts = {
				esc: true,
				isEnabled: true
			};
			event.returnValue = false;
			if (event.preventDefault) {
				event.preventDefault();
			}
			return false;
		}
		if ((isShorcutApplyed && _shortcurts.tab) || isFocusOnMesgBox) {
			event.returnValue = false;
			if (event.preventDefault) {
				event.preventDefault();
			}
			return false;
		}
		_neutralizeWhileUILocker(event);
	}, false);
	_keypressEvent = document.addEventListener("keypress", function(event) {
		event = event || window.event;
		var charCode;
		if (event.which == null) {
			charCode = String.fromCharCode(event.keyCode); // old IE			 	
		} else {
			if (event.which != 0 && event.charCode != 0) {
				charCode = event.which;
			}
			if (_shortcurts.esc) {
				var funcKey = charCode || event.keyCode;
				if (funcKey && funcKey >= 112 && funcKey <= 123) {
					return false;
				}
			}
		}
		if (charCode !== undefined) {
			if (!(_shortcurts && _shortcurts.esc)) {
				var focusField = syra_site.findField(event.target);
				if (focusField && focusField.validateKeyPress) {
					if (!focusField.validateKeyPress(String.fromCharCode(event.charCode || event.keyCode), _shortcurts, event)) {
						event.returnValue = false;
						if (event.preventDefault) {
							event.preventDefault();
						}
						return false;
					}
				}
			}
		}
		_neutralizeWhileUILocker(event);
	}, false);
	_keyupEvent = document.addEventListener("keyup", function(event) {
		event = event || window.event;
		var site = syra_site;
		var focusField = syra_site.findField(event.target);
		var article = syra_site.findArticle(event.target);
		var page = _getPage(focusField, article);
		if (_shortcurts) {
			if (event.keyCode == 27) {
				if (!_shortcurts.isEnabled) {
					var isEscApplyed;
					if (focusField && focusField.applyEscape) {
						isEscApplyed = focusField.applyEscape(_shortcurts, event);
					}
					if (!isEscApplyed && page) {
						page.applyEscape(_shortcurts);
					}
				}
				_shortcurts = {};
			} else {
				if (!_shortcurts.esc) {
					delete _shortcurts[event.syraKeyMap = _keyCodeMap[event.keyCode]];
					if (focusField) {
						if (focusField.onKeyUp) {
							focusField.onKeyUp(event);
						} else {
							if (page.isFusionPage && focusField.onFieldInputEvent) {
								focusField.onFieldInputEvent(event);
								event.stopPropagation();
								return;
							}
						}
					}
				}
			}
		}
		_neutralizeWhileUILocker(event);
	}, false);
};