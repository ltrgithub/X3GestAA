"use strict";

/*
 Copyright (c)2012 Sage.
 http://wwww.sage.com
 */
/**
 * @fileoverview Printer selection/configuration resources
 */
 
var locale = require('syracuse-core/lib/locale');
var _resource = null;


function _getPage(pageN) {
    if (!_resource) {
        _resource = locale.resources(module)();
    }
    if(!_kProto[pageN].$localization)  {
        _kProto[pageN].$localization = _resource;
    }
    return _kProto[pageN]; 
}

exports.helpers = {
    "getSettings": function (boundFields, printerRcd){
        var settings = {}, i, len, field;
        var deviceName = ["driver", "name", "port"];
        var deviceMode = ["copies", "collate", "startPage", "paperSource", "paperSize", "stopPage", "orientation", "duplex"];
        for(i = 0, len = deviceName.length; i < len; i++) {
            settings[deviceName[i]] = printerRcd[deviceName[i]];
        }
        for(i = 0, len = deviceMode.length; i < len; i++) {
            field = boundFields[deviceMode[i]][0];
            settings[deviceMode[i]] = field.getDataValue();
            if(field.$field.$type == "application/x-boolean" && field.statusValues) {
                settings[deviceMode[i]] = settings[deviceMode[i]] == field.statusValues.on ? "1" : "0";
            }
        }
        return settings;
    },
    "applyCapabilities": function (boundFields, printerRcd){
        var i, len, cap = printerRcd.$capabilities ? printerRcd.$capabilities.split(",") : null;
        var capSupported = ["collate", "copies", "orientation", "duplex"];
        if(boundFields && cap) {
            for(i = 0, len = capSupported.length; i < len; i++) {
                if(boundFields[capSupported[i]]) {
                    boundFields[capSupported[i]][0].setState({"$isDisabled": cap.indexOf(capSupported[i]) >= 0 ? false : true});
                }
            }
        }
    },
    "getDefaultPrinterRcd": function(boundFields) {
        var prt;
        return boundFields && (prt = boundFields["printers"]) && prt[0].dataset.length > 0 ? prt[0].dataset[0] : {"name": ""};
    },
    "getPrinterName": function(printerRcd) {
        return printerRcd.name;
    },
    "checkAdvancedSettings": function(boundFields) {
        var value, field, cfields = ["paperSize", "paperSource", "copies"], len, i;
        for(i = 0, len = cfields.length; i < len; i++) {  
            if(boundFields[cfields[i]]) {
                field = boundFields[cfields[i]][0];
                value = field.getDataValue();
                if(!value && field.$field.$type == "application/x-choice") {
                    field.setDataValue((value = field.getFirstEnum()) ? value.$value : 0);
                }
                else if (field.$field.$type == "application/x-integer") {
                    value = value ? (parseInt(value, 10) || 0) : 0;
                    if(value <= 0 ) {
                        field.setDataValue(1);
                    }
                }
            }
        }
    },
    "shouldCheckOnchange": function(fieldBind) {
        var exclude = ["collate"];
        return !fieldBind || exclude.indexOf(fieldBind) >= 0 ? false : true;
    },
    "checkSettings": function(boundFields, fromNotifyChange, fieldChanged) {
        var value1, value2, field, maxPages = 9999, disabled = false;
        function checkIntR1(fieldName) {
            var fld, val, failed = false;
            if(!(fld = boundFields[fieldName])) {
                return null;
            }
            else {
                fld = fld[0];
                val = fld.getDataValue(), failed = false;
                val = val ? (parseInt(val, 10) || 0) : 0;
                if(val <= 0 ) {
                    fld.setDataValue(1);
                    val = 1;
                    failed = true;
                } 
                return {"val": val, "failed": failed, "field": fld};
            }
        }
        function setState(state, fields) {
            var len, i;
            for(i = 0, len = fields.length; i < len; i++) {  
                fields[i].setState(state);
            }
        }
        value1 = checkIntR1("startPage");
        value2 = checkIntR1("stopPage");
        field = boundFields.allPages && boundFields.allPages[0];
        if(fromNotifyChange && fieldChanged == "allPages") {
            // On radio "page" selection...
            setState ({"$isDisabled": true},[value1.field, value2.field]);
            if(field.getDataValue() == 0) {
                value1.field.setDataValue(1);
                value2.field.setDataValue(maxPages);
                disabled = true;
            }
            setState ({"$isDisabled": disabled},[value1.field, value2.field]); 
         }
        else {
            // Check pages selection
            if(value1 && value2 && field) {
                if(value1.failed || value2.failed || value1.val > value2.val) {
                    value1.field.setDataValue(1);
                    value2.field.setDataValue(maxPages);
                    field.setDataValue(0);
                    setState ({"$isDisabled": true},[value1.field, value2.field]); 
                 }
                else {
                    if(value1.val == 1 && value2.val >= maxPages) {
                        field.setDataValue(0);
                        setState ({"$isDisabled": true},[value1.field, value2.field]); 
                    }
                    else {
                        field.setDataValue(1);
                        setState ({"$isDisabled": false},[value1.field, value2.field]); 
                    }
                }
            }
            if((value1 = checkIntR1("copies")) && value1.failed) {
                // Check copies
                value1.field.setDataValue(value1.val);
            }
        }
    }
};

exports.getSetupPage = function (dummy){
    return _getPage("setup");
};

exports.getPropertiesPage = function (dummy){
   return _getPage("properties");
};

var _kProto = {
    "properties": {
        "$type": "application/json",
        "$title": "{@properties_page_title}",
        "$properties": {
            "paperSize": {
                "$type": "application/x-choice",
                "$format": "$combo",
                "$title": "{@properties_fld_psize}",
                "$capabilities": ""
            },
            "paperSource": {
                "$title": "{@properties_fld_psource}",
                "$type": "application/x-choice",
                "$format": "$combo",
                "$capabilities": ""
            },
            "copies": {
                "$type": "application/x-integer",
                "$title": "{@properties_fld_copies}",
                "$capabilities": ""
            },
            "orientation": {
                "$type": "application/x-choice",
                "$format": "$radios",
                "$value": {
                    "$type": "application/x-integer",
                    "$enum": [
                        {
                            "$value": 0,
                            "$title": "{@properties_fld_ort_P}"
                        },
                        {
                            "$value": 1,
                            "$title": "{@properties_fld_ort_L}"
                        }
                    ]
                },
                //"$title": "{@properties_fld_ort}",
                "$capabilities": ""
            },
            "duplex": {
                "$type": "application/x-choice",
                "$value": {
                    "$type": "application/x-integer",
                    "$enum": [
                        {
                            "$value": 0,
                            "$title": "{@properties_fld_dplx_none}"
                        },
                        {
                            "$value": 1,
                            "$title": "{@properties_fld_dplx_short}"
                        },
                        {
                            "$value": 2,
                            "$title": "{@properties_fld_dplx_long}"
                        }
                    ]
                },
                "$format": "$radios",
                //"$title": "{@properties_fld_dplx}",
                "$capabilities": ""
            }
        },
        "$links": {
            "$save": {
                "$title": "{@properties_link_ok}",
                "$method": "POST"
            },
            "$cancel": {
                "$title": "{@properties_link_cancel}",
                "$method": "POST"
            }
        },
        "$article": {
           "$category": "section",
            "$layout": {
                "$layoutType": "stack",
                "$items": [
                    {
                        "$category": "block",
                        "$layout": {
                            "$items": [
                                {
                                    "$layoutType": "stack",
                                    "$items": [
                                        {
                                            "$bind": "paperSize"
                                        },
                                        {
                                            "$bind": "paperSource"
                                        },
                                        {
                                            "$bind": "copies"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "$category": "block",
                        "$title": "{@properties_blck_ort}",
                        "$layout": {
                            "$items": [
                                {
                                    "$layoutType": "stack",
                                    "$items": [
                                        {
                                            "$bind": "orientation"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "$category": "block",
                        "$title": "{@properties_blck_dpx}",
                        "$layout": {
                            "$items": [
                                {
                                    "$layoutType": "stack",
                                    "$items": [
                                        {
                                            "$bind": "duplex"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        }
    },
    "setup": {
    	"$type": "application/json",
    	"$title": "{@setup_page_title}",
        "$properties": {
            "printers": {
                "$type": "application/x-array",
                "$capabilities": "sort",
                "$item": {
                    "$properties": {
                        "name": {
                            "$title": "{@setup_fld_name}",
                            "$type": "application/x-string",
                            "$capabilities": "",
                            "$isFixed": true,
    						"$isReadOnly":true
                        },
                        "port": {
                            "$type": "application/x-string",
                            "$title": "{@setup_fld_port}",
                            "$capabilities": "",
    						"$isReadOnly":true
                        },
                        "driver": {
                            "$type": "application/x-string",
                            "$title": "{@setup_fld_driver}",
                            "$capabilities": "",
    						"$isReadOnly":true
                        },
                        "comment": {
                            "$type": "application/x-string",
                            "$title": "{@setup_fld_comment}",
                            "$capabilities": "",
    						"$isReadOnly":true
                        },
                        "location": {
                            "$type": "application/x-string",
                            "$title": "{@setup_fld_location}",
                            "$capabilities": "",
    						"$isReadOnly":true
                        },
                        "devmode": {
                            "$type": "application/x-string",
                            "$title": "{@setup_fld_devmode}",
                            "$capabilities": "",
    						"$isReadOnly":true,
    						"$isHidden": true
                        }
    				},
    				"$links": {
                        "$properties": {
                            "$title": "{@setup_mnu_prop}",
                            "$method": "POST"
                        }
                    }
    			}
    		},
            "duplex": {
                "$type": "application/x-integer",
                "$isHidden": true,
                "$displayLength": 1
            },
            "orientation": {
                "$type": "application/x-integer",
                "$isHidden": true,
                "$displayLength": 1            },
            "paperSize": {
                "$type": "application/x-integer",
                "$isHidden": true,
                "$displayLength": 1            },
            "paperSource": {
                "$type": "application/x-integer",
                "$displayLength": 1,
                "$isHidden": true
            },
    		"collate": {
    			"$type": "application/x-boolean",
    			"$title": "{@setup_fld_collate}",
    			"$capabilities": ""
    		},
    		"collateIco": {
    			"$type": "application/x-icon",
    			"$url": "",
    			"$isReadOnly":true
    		},
    		"allPages": {
    			"$type": "application/x-choice",
    			"$format": "$radios",
    			"$value": {
    				"$type": "application/x-integer",
    				"$enum": [
    					{
    						"$value": 1,
    						"$title": "{@setup_fld_pg_pages}"
    					},
                        {
                            "$value": 0,
                            "$title": "{@setup_fld_pg_all}"
                        }
    				]
    			},
    			"$title": "{@setup_fld_pg}",
    			"$capabilities": ""
    		},
    		"copies": {
    			"$type": "application/x-integer",
    			"$title": "{@setup_fld_copies}",
    			"$capabilities": ""
    		},
    		"startPage": {
    			"$type": "application/x-integer",
    			"$title": "{@setup_fld_pgstart}",
    			"$capabilities": ""
    		},
    		"stopPage": {
    			"$type": "application/x-integer",
    			"$title": "{@setup_fld_pgstop}",
    			"$capabilities": ""
    		},
    		"capabilities": {
    			"$type": "application/x-string",
    			"$capabilities": "",
    			"$isReadOnly": true,
    			"$isHidden": true
    		}
        },
        "$links": {
    		"$save": {
                "$title": "{@setup_link_ok}",
                "$method": "POST"
            },
            "$cancel": {
                "$title": "{@setup_link_cancel}",
                "$method": "POST"
            }
        },
    	"$article": {
    	   "$category": "section",
    		"$layout": {
                "$layoutType": "stack",
                "$items": [
                    {
                        "$category": "block",
                        "$title": "{@setup_blck_printers}",
                        "$layout": {
                            "$items": [
                                {
                                    "$layoutType": "stack",
                                    "$items": [
                                        {
                                            "$bind": "printers"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "$layoutType": "row",
                        "$items": [
                            {
                                "$category": "block",
                                "$title": "{@setup_blck_pages}",
                                "$layout": {
                                    "$items": [
                                        {
                                            "$layoutType": "row",
                                            "$items": [
                                                {
                                                    "$bind": "allPages",
                                                    "$choiceLayout": "row"
                                                },
                                                {
                                                    "$bind": "startPage"
                                                },
                                                {
                                                    "$bind": "stopPage"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            {
                                "$category": "block",
                                "$title": "{@setup_blck_copies}",
                                "$layout": {
                                    "$layoutType": "stack",
                                    "$items": [
                                       {
                                            "$layoutType": "row",
                                            "$items": [
                                                {
                                                    "$bind": "copies"
                                                },
                                                {
                                                    "$bind": "collateIco"
                                                },
                                                {
                                                    "$bind": "collate"
                                                }
                                            ]
                                        },
                                        {
                                            "$layoutType": "row",
                                            "$items": [
                                                {
                                                    "$bind": "orientation"
                                                },
                                                {
                                                    "$bind": "duplex"
                                                },
                                                {
                                                    "$bind": "paperSize"
                                                },
                                                {
                                                    "$bind": "paperSource"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                ]
            }
    	}
    }
};
