"use strict";
var helpers = require('syracuse-core/lib/helpers');

function ExternalAdapter() {}

exports.ExternalAdapter = helpers.defineClass(ExternalAdapter, null, {
	onBeforeUploadFiles: function(options) {
		options.doEvent();
	},
	onUncaughtError: function(options) {
		options.doEvent();
	},
	onGlobalClick: function(event) {
		return true;
	},
	onFieldNotifyChange: function(options) {
		options.doEvent();
	},
	onFieldClickPicker: function(options) {
		options.doEvent();
	},
	onGraphClickLink: function(options) {
		return true;
	},
	getFieldEvalTitle: function(field) {
		return null;
	},
	onSelectRecordEvent: function(options) {
		options.doEvent();
	},
	onSortClickEvent: function(options) {
		options.doEvent();
	},
	onSearchClickEvent: function(options) {
		options.doEvent();
	},
	onBoxToggle: function(options) {
		options.doEvent();
	},
	onBoxClick: function(options) {
		return true;
	},
	onFieldEvent: function(options) {
		return options.doEvent();
	},
	releaseMainPage: function(options) {
		options.doEvent();
	},
	onMenuItemClick: function(options) {
		options.doEvent();
	},
	setDataBind: function(field, $resources, record, metaData) {
		return true;
	},
	setButtonValue: function(options) {
		options.doStatements(options);
	},
	notifyFldMandatoryErr: function() {
		return true;
	},
	applyDesignStyle: function() {
		return true;
	},
	sortArray: function() {
		return true;
	},
	onFilterEvent: function(options) {
		options.doEvent();
	},
	getPagerTotalRcdLabel: function(pagerList, nbRecords, defaultLabel) {
		return nbRecords + " " + (nbRecords > 1 ? defaultLabel[1] : defaultLabel[0]);
	},
	onUploadSucceeded: function(options) {
		return true;
	},
	onRemoveUploadedFile: function(options) {
		options.doEvent();
	},
	onRemoveUploadedFileSucceeded: function(options) {
		return true;
	}
});