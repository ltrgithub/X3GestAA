"use strict";
var _top = {};

function _addDashPanel() {
	if (!_top.dashPanel) {
		if (syra_site.$navigation) {
			var ids = Object.keys(syra_site.$navigation);
			syra_site.$prototype.$links = syra_site.$prototype.$links || {};
			syra_site.$menus = syra_site.$menus || {};
			var filter = syra_site.isTabletDevice ? ["mobileHome", "devsos"] : null;
			for (var ii = 0, jj = ids.length; ii < jj; ii++) {
				var key = ids[ii];
				if (filter && filter.indexOf(key) < 0) {
					delete syra_site.$navigation[key];
					continue;
				}
				switch (key) {
					case "mobileDesktopAuthoring":
						if (!syra_context.developpementMode) {
							var level = syra_site.userProfile.getAuthoringLevel();
							if (!(level == "admin" || level == "sage")) {
								delete syra_site.$navigation[key];
								continue;
							}
						}
						break;
					case "perfmon":
					case "devsos":
					case "arrayTest":
					case "changeLog":
						if (!syra_context.developpementMode) {
							delete syra_site.$navigation[key];
							continue;
						}
						break;
				}
				syra_site.$navigation[key].$title = syra_local["siteNavigation_" + key] || syra_site.$navigation[key].$title;
				syra_site.$menus[key] = syra_site.$prototype.$links[key] = syra_site.$navigation[key];
			}
			_top.dashPanel = syra_dom.addDiv("s-toppn-dash");
			var header = document.createElement("header");
			header.className = "s-toppn-dash-title";
			header.textContent = syra_local.siteTopPanel_dashboards;
			_top.dashPanel.appendChild(header);
			var ids = Object.keys(syra_site.$navigation);
			for (var ii = 0, jj = ids.length; ii < jj; ii++) {
				syra_site.addItem(_top.dashPanel, {
					$category: "link",
					$skin: "s-toppn-dash-link",
					$bind: ids[ii]
				}, syra_site);
			}
			_top.slot.appendChild(_top.dashPanel);
		}
	}
	return _top.dashPanel;
}

exports.addOpener = function(slot) {
	_top.openerBtn = syra_button.add({
		parent: syra_site,
		slot: slot,
		text: syra_local.site_openWelcomePanel,
		iconOnly: true,
		css: "s-site-top-pn-btn",
		click: function() {
			exports.toggle(true);
		}
	});
};

exports.showUserIdentity = function(profile) {
	if (_top.openerBtn) {
		if (profile.dataset.user) {
			syra_dom.empty(_top.openerBtn.link);
			var name = document.createElement("div");
			name.className = "s-site-user-name";
			name.textContent = (profile.dataset.user.firstName ? profile.dataset.user.firstName + " " : "") + (profile.dataset.user.lastName ? profile.dataset.user.lastName : "");
			_top.openerBtn.link.appendChild(name);

			var photo = document.createElement("div");
			photo.className = "s-site-user-photo";
			if (profile.dataset.user.photo) {
				profile.addItem(photo, {
					$css: "s-site-user-photo",
					$skin: "s-site-user-photo",
					$inplace: true,
					$imageWidth: " ",
					$imageHeight: " ",
					$bind: "photo",
					$category: "field",
					$field: {
						$type: "image"
					}
				}).setValue({
					$url: syra_expression.parse(profile, profile.dataset.user.photo.$url, {
						$uuid: profile.dataset.user.$uuid,
						$pluralType: "users",
						$key: profile.$prototype.$key,
						$baseUrl: profile.$prototype.$baseUrl
					})
				});
			} else {
				var mn = document.createElement("a");
				mn.className = "s-site-user-nophoto";
				photo.appendChild(mn);
			}
			_top.openerBtn.link.appendChild(photo);
		}
	}
};

exports.showExtensions = function(profile) {
	var widgets = profile.dataset.shellWidgets;
	if (widgets) {
		var index = 0;
		var errors = [];

		function loadRemaining() {
			if (index === widgets.length) {
				if (errors.length > 0)
					syra_alert.error(errors);
				return;
			}
			var widget = widgets[index++];
			require.async(widget.module, function(err, api) {
				if (err) {
					errors.push({
						$message: err.message,
						$stackTrace: err.stack
					});
					return loadRemaining();
				}

				var div = document.createElement("div");
				// TODO: review this hack to get calc popup on top of buttons
				$('#s-site-header').css({
					'z-index': 1
				});
				// TODO: review style and DOM insertion with Daniel
				$(div).css({
					display: 'inline-block',
					padding: '0 10pt',
				}).attr("id", widget.module);
				_top.openerBtn.slot.appendChild(div);
				api.create({
					div: div,
					registerSocket: function(namespace, events) {
						return syra_site.socketHandler.register(namespace, events);
					},
					sessionInfo: {
						user: {
							$uuid: syra_site.userProfile.dataset.user.$uuid
						},
						selectedEndpoint: function() {
							var ep = syra_site.userProfile.dataset.selectedEndpoint;
							return {
								baseUrl: ["/sdata", ep.application, ep.contract, ep.dataset].join("/")
							};
						}
					}
				});
				loadRemaining();
			});
		}
		loadRemaining();
	}
};

exports.toggle = function(show, event, onClosePopups) {
	if (_top.openerBtn) {
		if (show && !_top.slot) {
			_top.slot = syra_dom.addDiv("s-site-top-pn", syra_site.layoutSlot);
			_top.slot.syrainout = syra_site.id;
			syra_site.userProfile.toggle(_top.slot, !(syra_fusion && syra_fusion.activatedBook) && _addDashPanel());
			var rect = _top.openerBtn.link.getBoundingClientRect();
			if (syra_context.isRTL) {
				_top.slot.style.left = rect.left + "px";
			} else {
				_top.slot.style.right = (syra_site.layoutSlot.getBoundingClientRect().right - rect.right) + "px";
			}
			syra_dom.setZIndex(_top.slot);
		} else {
			if (onClosePopups && event &&
				((event.target == _top.openerBtn.link) ||
					_top.openerBtn.link.contains(event.target))) {
				return;
			}
			if (event && _top.slot) {
				if (_top.slot.contains(event.target)) {
					return;
				}
			}
			syra_site.userProfile && syra_site.userProfile.toggle();
			syra_dom.empty(_top.slot);
			syra_dom.remove(_top.slot);
			_top.slot = null;
		}
		syra_dom.toggleClass(_top.openerBtn.link, "s-open", !! _top.slot);
	}
};

exports.onItemInOut = function(onEnter, event, target) {
	if (!syra_context.enableTestRobot && _top.slot && target == _top.slot) {
		if (onEnter) {
			_top.onOutSlot && clearTimeout(_top.onOutSlot);
			_top.onOutSlot = null;
		} else {
			if (!syra_over.getMostOverPage()) {
				_top.onOutSlot = setTimeout(function() {
					exports.toggle(false);
					_top.onOutSlot = null;
				}, 1000);
			}
		}
	}
};

exports.dispose = function() {
	if (_top) {
		_top.onOutSlot && clearTimeout(_top.onOutSlot);
		syra_dom.remove(_top.slot);
		syra_button.dispose(_top.openerBtn);
		syra_site.disposeObject(_top);
		_top = null;
	}
};