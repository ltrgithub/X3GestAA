"use strict";
var _openerBtn, _dashPanel, _slot, _onOutSlot;

function _drawDashPanel() {
	if (syra_site.$navigation) {
		var ids = Object.keys(syra_site.$navigation);
		syra_site.$prototype.$links = syra_site.$prototype.$links || {};
		syra_site.$menus = syra_site.$menus || {};
		var filter = syra_site.isTabletDevice ? ["mobileHome", "devsos"] : null;
		for (var ii = 0, jj = ids.length; ii < jj; ii++) {
			var key = ids[ii];
			if (filter && filter.indexOf(key) < 0) {
				delete syra_site.$navigation[key];
				continue;
			}
			switch (key) {
				case "mobileDesktopAuthoring":
					if (!syra_site.developpementMode) {
						var level = syra_site.userProfile.getAuthoringLevel();
						if (!(level == "admin" || level == "sage")) {
							delete syra_site.$navigation[key];
							continue;
						}
					}
					break;
				case "perfmon":
				case "devsos":
				case "arrayTest":
				case "changeLog":
					if (!syra_site.developpementMode) {
						delete syra_site.$navigation[key];
						continue;
					}
					break;
			}
			syra_site.$navigation[key].$title = syra_local["siteNavigation_" + key] || syra_site.$navigation[key].$title;
			syra_site.$menus[key] = syra_site.$prototype.$links[key] = syra_site.$navigation[key];
		}
		_dashPanel = document.createElement("div");
		_dashPanel.className = "s-toppn-dash";
		var header = document.createElement("header");
		header.className = "s-toppn-dash-title";
		header.textContent = syra_local.siteTopPanel_dashboards;
		_dashPanel.appendChild(header);
		var ids = Object.keys(syra_site.$navigation);
		for (var ii = 0, jj = ids.length; ii < jj; ii++) {
			syra_site.loadNewItem(_dashPanel, {
				$category: "link",
				$skin: "s-toppn-dash-link",
				$bind: ids[ii]
			}, syra_site);
		}
		_slot.appendChild(_dashPanel);
	}
}


function _draw() {
	_slot = document.createElement("div");
	_slot.className = "s-site-top-pn";
	_slot.syrainout = syra_site.id;
	syra_site.layoutSlot.appendChild(_slot);
	var profile = syra_site.userProfile;
	if (profile) {
		profile.ensureFormBlock();
		syra_site.ensureArticleVisibility(profile);
		profile.domItem && _slot.appendChild(profile.domItem);
	}!_dashPanel && _drawDashPanel();
	var rect = _openerBtn.link.getBoundingClientRect();
	if (syra_site.isDocumentRTL) {
		_slot.style.left = rect.left + "px";
	} else {
		_slot.style.right = (syra_site.layoutSlot.getBoundingClientRect().right - rect.right) + "px";
	}
	if (_dashPanel && !(syra_site.fusionGateway && syra_site.fusionGateway.activatedBook)) {
		_slot.appendChild(_dashPanel);
	}
	syra_site.dom.setZIndex(_slot);
}

exports.addOpener = function(slot) {
	_openerBtn = syra_menus.button.add({
		parent: syra_site,
		slot: slot,
		text: syra_local.site_openWelcomePanel,
		iconOnly: true,
		css: "s-site-top-pn-btn",
		btnclick: function() {
			exports.toggle(true);
		}
	});
};

exports.showUserIdentity = function(profile) {
	if (_openerBtn) {
		if (profile.dataset.user) {
			syra_site.dom.empty(_openerBtn.link);
			var name = document.createElement("div");
			name.className = "s-site-user-name";
			name.textContent = (profile.dataset.user.firstName ? profile.dataset.user.firstName + " " : "") + (profile.dataset.user.lastName ? profile.dataset.user.lastName : "");
			_openerBtn.link.appendChild(name);

			var photo = document.createElement("div");
			photo.className = "s-site-user-photo";
			if (profile.dataset.user.photo) {
				profile.loadNewItem(photo, {
					$css: "s-site-user-photo",
					$skin: "s-site-user-photo",
					$inplace: true,
					$imageWidth: " ",
					$imageHeight: " ",
					$bind: "photo",
					$category: "field",
					$field: {
						$type: "image"
					}
				}).setDataValue({
					$url: syra_site.expressionMaker.parse(profile, profile.dataset.user.photo.$url, {
						$uuid: profile.dataset.user.$uuid,
						$pluralType: "users",
						$key: profile.$prototype.$key,
						$baseUrl: profile.$prototype.$baseUrl
					})
				});
			} else {
				var mn = document.createElement("a");
				mn.className = "s-site-user-nophoto";
				photo.appendChild(mn);
			}
			_openerBtn.link.appendChild(photo);
		}
	}
};


exports.toggle = function(show, event, onClosePopups) {
	if (_openerBtn) {
		if (show && !_slot) {
			_draw();
		} else {
			if (onClosePopups && event &&
				((event.target == _openerBtn.link) ||
					_openerBtn.link.contains(event.target))) {
				return;
			}
			if (event && _slot) {
				if (_slot.contains(event.target)) {
					return;
				}
			}
			syra_site.dom.empty(_slot);
			syra_site.dom.removeChild(_slot);
			_slot = null;
		}
		syra_site.dom.toggleClass(_openerBtn.link, "s-open", !! _slot);
	}
};

exports.onItemInOut = function(onEnter, event, target) {
	if (!syra_quality.enableTestRobot && _slot && target == _slot) {
		if (onEnter) {
			_onOutSlot && clearTimeout(_onOutSlot);
			_onOutSlot = null;
		} else {
			if (!syra_site.dialogManager.getTopDialogPage()) {
				_onOutSlot = setTimeout(function() {
					exports.toggle(false);
					_onOutSlot = null;
				}, 1000);
			}
		}
	}
};

exports.dispose = function() {
	_onOutSlot && clearTimeout(_onOutSlot);
	syra_site.dom.removeChild(_slot);
	syra_menus.button.dispose(_openerBtn);
	_onOutSlot = _openerBtn = _dashPanel = _slot = null;
};