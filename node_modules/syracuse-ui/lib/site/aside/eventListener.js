"use strict";
var helpers = require('syracuse-core/lib/helpers');
var KeyboardManager = require('syracuse-ui/lib/site/aside/keyboardManager').KeyboardManager;

function EventListener() {}

exports.EventListener = helpers.defineClass(EventListener, null, {
	load: function() {
		this._bindGlobalEvent();
		(this.keyboardManager = new KeyboardManager()).load();
		this._bindFieldEvents();
		this._bindSearchFacetEvents();
		this._bindResize();
		this._bindListEvents();
	},
	_bindGlobalEvent: function() {
		// return;
		document.site.$$layoutSlot.bind("click", function(event) {
			if (!document.site.authorPage) {
				var availableTarget = false;
				document.site.toggleTopPanel(false, event);
				if (document.site.mainPage && document.site.mainPage.isFusionPage) {
					var $$target = $(event.target);
					["data-s-menu", "data-s-field", "data-s-picker"].some(function(selector) {
						if ((event.target.getAttribute(selector) != null) || $$target.closest("[" + selector + "]").length > 0)
							return availableTarget;
					});
					if (!availableTarget) {
						if ($$target.closest("[data-s-fusion-page]").length > 0) {
							return document.site.mainPage.externalAdapter.onGlobalClick(event);
						}
					}
				}
			}

		});
	},
	_bindResize: function() {
		$(window).bind("resize", function(event) {
			document.site.resize();
		});
	},
	_bindFieldEvents: function() {
		var self = this; // manage key tab +
		document.site.$$layoutSlot.delegate("[data-s-field]", "mouseenter mouseleave", function(event) {
			var field = document.controller.findField(this);
			if (field && field.domItem == this) {
				field.onFieldMouseEvent(event);
			}
		}).delegate("textarea,input,select,[contenteditable]", "mousedown click change focusin focusout", function(event) {
			if (this.syraFieldId) {
				var field = document.controller.findField(this);
				if (field) {
					if (event.type == "focusin" || event.type == "click") {
						document.site.closePopups(null, event);
					}
					if (field.page.designer) {
						if (!field.page.designer.onClickItem(field, this, field.article)) {
							event.stopPropagation();
							return false;
						}
					}
					field.onFieldInputEvent(event);
					field.page.registerLastFocusGrid(field);
					event.stopPropagation();
				}
			}
		}).delegate("a[data-s-field-binary]", "click focusin focusout", function(event) {
			var field = document.controller.findField(this);
			if (field && !field.page.isDesignFreeze) {
				field.onFieldInputEvent(event);
				if (event.type != "click") {
					event.stopPropagation();
					return false;
				}
			}
		}).delegate("a.s-icon-link", "click", function(event) {
			var field = document.controller.findField(this);
			if (field && !field.page.isDesignFreeze) {
				field.onFieldInputEvent(event);
				event.stopPropagation();
			}
			return false;
		}).delegate("textarea", "input", function(event) {
			var field = document.controller.findField(this);
			if (field) {
				field.onFieldInputEvent(event);
				event.stopPropagation();
			}
			return false;
		});
	},
	_bindListEvents: function() {
		document.site.$$layoutSlot.delegate("[data-s-menu],[data-s-picker],[data-s-box]", "click", function(event, data) {
			try {
				var $$link = $(this);
				var article = document.controller.findArticle($$link);
				var pickerId = event.currentTarget.getAttribute("data-s-picker");
				var menuId = this.getAttribute("data-s-menu");
				var boxId = this.getAttribute("data-s-box");
				var doEvent = true;
				if (article && pickerId == "diag-picker") {
					var panel;
					if (this.$syraDiagPage) {
						if (document.site.desktopPages[this.$syraDiagPage]) {
							panel = document.site.desktopPages[this.$syraDiagPage].diagnosesPanel;
						}
					}
					panel = panel || document.site.diagnosesPanel;
					if (panel) {
						panel.onClickPicker(this);
						doEvent = false;
					}
				}
				if (doEvent) {
					if (article.page.designer) {
						doEvent = article.page.designer.onClickItem(box, this, article);
					}
					if (doEvent) {
						if (boxId) {
							var box = document.controller.findBox($$link);
							if (box) {
								doEvent = !article.onBoxClickItem || article.onBoxClickItem(box, this);
								if (doEvent) {
									if (box.isTitleUrlLink && this.syraBoxPickerId != "expand") {
										return true;
									}
									if (box.tabTitle) {
										var isTabSelected = box.layoutParent.tabOpened == box;
										if (isTabSelected) {
											box.page.externalAdapter.onBoxClick({
												box: box,
												event: event,
												tabIdx: $$link.index()
											});
										} else {
											if (!document.site.ddManager.ddAgent) {
												var open = !box.$item.$opened;
												var isFirstTime = !box.loaded;
												box.page.externalAdapter.onBoxToggle({
													nativeEvent: event,
													nativeEvenData: data,
													box: box,
													isTabSelected: isTabSelected,
													open: open,
													isFirstTime: isFirstTime,
													tabIdx: $$link.index(),
													doEvent: function() {
														if (!isTabSelected) {
															document.site.boxFocus = box;
															box.openBox(open);
														}
														document.site.resize(true);
													}
												});
												return false;
											}
										}
									} else {
										if (box.$item.$isBoxCollapsable) {
											document.site.onBeforClick(box);
											box._expandBody(undefined, event);
										}
									}
								} else {
									event.stopPropagation();
								}
							}
						} else {
							document.site.onBeforClick(undefined, event);
							if (menuId) {
								var menu = document.controller.findMenu($$link);
								if (menu && !menu.$isDisabled) {
									menu.click(event);
								}
							} else {
								if (pickerId && article) {
									if (!article.onClickPicker || article.onClickPicker(event.currentTarget, event)) {
										switch (pickerId) {
											case "favorite":
												document.site.favoritesProvider.onClickPicker(event.currentTarget, event);
												break;
											case "field-choice":
												var field = document.controller.findField(this);
												if (field) {
													field.builder.onChoiceItemClick(this.syraChoice);
												}
												break;
											case "box-picker":
												setTimeout(function() {
													document.controller.findBox($(event.target)).doPicker(event.target.syraBoxPickerId);
												}, 20);
												break;
											case "field-diagnose-link":
												var field = document.controller.findField(this);
												if (field) {
													field.focus();
												}
												event.stopPropagation();
												break;
											case "s-bar-dockMode":
											case "s-bar-collapse":
											case "s-bar-title":
												var bar;
												if (event.currentTarget.className.indexOf("s-nav-modulebar") >= 0) {
													bar = article.moduleBar;
												} else {
													var isFusionBar = event.currentTarget.className.indexOf("s-fusion-bar") >= 0;
													if (isFusionBar) {
														bar = article.fusionBar;
													} else {
														bar = (event.currentTarget.className.indexOf("s-aw-treebar") >= 0) ? article : article.menuBar;
													}
												}
												bar.onClickPicker(event.currentTarget, event);
												break;
											default:
												var field = document.controller.findField(this);
												if (field) {
													field.onClickPicker(event.currentTarget, event);
												}
												break;
										}
									}

								}

							}
						}
					} else {
						event.stopPropagation();
					}
				}
			} catch (error) {
				//debugger;
				document.site.onError(error);
			} finally {
				if (article && article.page) {
					article.page.registerLastFocusGrid(article);
				}
				return event.syraRetValue || false;
			}
		}).delegate(".s-list-selector-row", "mouseenter mouseleave", function(event) {
			var list = document.controller.findArticle($(this)).list;
			if (list) {
				list.selector.onSelectMouseEvent(event);
				list.page.registerLastFocusGrid(list);
			}
			return false;
		});
	},
	_bindSearchFacetEvents: function() {
		document.site.$$layoutSlot.delegate("input.s-search-facet-member-check", "change", function() {
			var $$input = $(this);
			document.controller.findArticle($$input).onInputMemberChange($$input);
			return false;
		});
	},
	dispose: function() {
		if (this.keyboardManager) {
			this.keyboardManager.dispose();
			this.keyboardManager = null;
		}
		document.site.$$layoutSlot.unbind();
		document.site.$$layoutSlot.undelegate();
		$(window).unbind("resize");
	}
});