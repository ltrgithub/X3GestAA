"use strict";
var helpers = require('syracuse-core/lib/helpers');

function EventListener(){
}

exports.EventListener = helpers.defineClass(EventListener, null, {
    load: function(){
        this._bindGlobalEvent();
        this._bindMenuClick();
        this._bindFieldEvents();
        this._bindSearchFacetEvents();
        this._bindResize();
        this._bindListEvents();
        this._bindChoiceFieldList();
    },
    findArticle: function($$item){
        var articleId = $$item.closest("[data-s-article]").attr("data-s-article");
        return document.controller._articles[articleId];
    },
    findField: function($$item){
        var article = this.findArticle($$item);
        var fieldId = $$item.attr("data-s-field");
        if (!fieldId) {
            fieldId = $$item.closest("[data-s-field]").attr("data-s-field");
        }
        return article ? article.idMap[fieldId] : null;
    },
    _bindGlobalEvent: function(){
        document.site.$$container.bind("click", function(event){
            var availableTarget = false;
            if (document.site.mainPage && document.site.mainPage.isFusionPage) {
                var $$target = $(event.target);
                ["data-s-menu", "data-s-field", "data-s-picker"].some(function(selector){
                    if ((event.target.getAttribute(selector) != null) ||
                    $$target.closest("[" + selector + "]").length > 0) 
                        return availableTarget;
                });
                if (!availableTarget) {
                    if ($$target.closest("[data-s-fusion-page]").length > 0) {
                        return document.site.mainPage.externalAdapter.onGlobalClick(event);
                    }
                }
            }
        });
    },
    _bindResize: function(){
        $(window).bind("resize", function(evt){
            document.site.resize();
        });
    },
    _bindMenuClick: function(){
        var self = this;
        document.site.$$container.delegate("a[data-s-menu]", "click", function(event){
            try {
                var $$menu = $(this);
                var menu = document.controller.findItem($$menu);
                if (!menu) {
                    throw new Error("menu not found"); // to manage by
                    // diagnose
                }
                if (!menu.$isDisabled) {
                    menu.click();
                }
            } 
            catch (error) {
                document.site.onError(error);
                return false;
            }
            return false;
        });
    },
    _bindFieldEvents: function(){
        var self = this;
        document.site.$$container.delegate("textarea[data-s-field],input[data-s-field],select[data-s-field]", "click change keydown keypress keyup focusin focusout", function(event){
            var field = self.findField($(event.target));
            if (field) {
                field.onFieldInputEvent(event);
                event.stopPropagation();
            }
        }).delegate("a.s-icon-link", "click", function(event){
            var field = self.findField($(event.target));
            if (field) {
                field.onFieldInputEvent(event);
                event.stopPropagation();
            }
            return false;
        }).delegate("[data-s-picker]", "click", function(event){
            var field = self.findField($(event.target));
            if (event.target.getAttribute("data-s-picker") == "menus") {
                (field ? field.menusController : self.findArticle($(event.target))).contextMenu.onFieldClickPicker();
            }
            else {
                if (field) {
                    field.onClickPicker(event.target);
                }
            }
            return false;
        });
    },
    _bindListEvents: function(){
        var self = this;
        document.site.$$container.delegate("a[data-s-sort]", "click", function(event){
            var $$link = $(this);
            var list = self.findArticle($$link);
            list._store.sortCapability.onSortClick(event, $$link.attr("data-s-sort"));
            return false;
        }).delegate("a.s-alphatab-link", "click", function(){
            var $$link = $(this);
            self.findArticle($$link)._store.sortCapability.onSortAlphaTab($$link);
            return false;
        }).delegate("a[data-s-cardview-opener]", "click", function(event){
            var $$link = $(this);
            var article = self.findArticle($$link);
            article.builder.cardview.onOpenerClick($$link, article);
            return false;
        }).delegate("a[data-s-page]", "click", function(event){
            var $$link = $(this);
            self.findArticle($$link)._store.pagingCapability.onPageClick($$link);
            return false;
        }).delegate(".s-list-selector-row", "click", function(event){
            var $$link = $(this);
            self.findArticle($(this)).list._store.selector.onSelectRecords(event);
            return false;
        }).delegate(".s-list-selector,.s-list-selector-all", "click", function(event){
            var $$link = $(this);
            var article = self.findArticle($$link);
            event.stopPropagation();
            (article.list ? article.list : article)._store.selector.onSelectRecords(event);
        }).delegate("a.s-field-diagnose-link", "click", function(event){
            var $$link = $(event.currentTarget);
            var field = self.findField($$link);
            if (field) {
                field.focus();
            }
            event.stopPropagation();
        });
    },
    _bindSearchFacetEvents: function(){
        document.site.$$container.delegate("input.s-search-facet-member-check", "change", function(){
            var $$input = $(event.target);
            self.findArticle($$input).onInputMemberChange($$input);
            event.stopPropagation();
        });
    },
    _bindChoiceFieldList: function(){
        var self = this;
        document.site.$$container.delegate("a[data-s-cb-index]", "click", function(){
            var field = self.findField($(this));
            if (field) {
                field.builder.onChoiceItemClick(parseInt(this.getAttribute("data-s-cb-index"), 10));
            }
            return false;
        });
    },
    dispose: function(){
        document.site.$$container.unbind();
        document.site.$$container.undelegate();
        $(window).unbind("resize");
    }
});
