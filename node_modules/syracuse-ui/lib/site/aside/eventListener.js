"use strict";
var helpers = require('syracuse-core/lib/helpers');
var KeyboardManager = require('syracuse-ui/lib/site/aside/keyboardManager').KeyboardManager;

function EventListener() {}



exports.EventListener = helpers.defineClass(EventListener, null, {
	load: function() {
		this._bindGlobalEvent();
		(this.keyboardManager = new KeyboardManager()).load();
		this._bindPageTitleClick();
		this._bindFieldEvents();
		this._bindSearchFacetEvents();
		this._bindResize();
		this._bindListEvents();
		this._bindBox();
	},
	_bindGlobalEvent: function() {
		document.site.$$layoutSlot.bind("click", function(event) {
			if (!document.site.authorPage) {
				var availableTarget = false;
				document.site.toggleTopPanel(false, event);
				if (document.site.mainPage && document.site.mainPage.isFusionPage) {
					var $$target = $(event.target);
					["data-s-menu", "data-s-field", "data-s-picker"].some(function(selector) {
						if ((event.target.getAttribute(selector) != null) || $$target.closest("[" + selector + "]").length > 0) return availableTarget;
					});
					if (!availableTarget) {
						if ($$target.closest("[data-s-fusion-page]").length > 0) {
							return document.site.mainPage.externalAdapter.onGlobalClick(event);
						}
					}
				}
			}

		});
	},

	_bindResize: function() {
		$(window).bind("resize", function(event) {
			document.site.resize();
		});
	},
	_bindPageTitleClick: function() {
		document.site.$$layoutSlot.delegate(".s-page-title", "click", function(event) {
			try {
				if (event.shiftKey && event.ctrlKey && event.altKey) {
					var page = document.controller.findArticle($(this));
					if (page && page.loadProtoArticle) {
						page.loadProtoArticle();
					}
				}
			} catch (error) {
				document.site.onError(error);
				return false;
			}
			return false;
		});
	},
	_bindFieldEvents: function() {
		var self = this; // manage key tab +
		document.site.$$layoutSlot.delegate("textarea,input,select", "mouseenter mouseleave mousedown click change focusin focusout", function(event) {
			if (this.$syraFieldId) {
				var field = document.controller.findField(this);
				if (field) {
					if (event.type == "mouseenter" || event.type == "mouseleave") {
						field.onFieldMouseEvent(event);
						return;
					}
					if (document.site.authorPage && !document.site.authorPage.authorizeEvent(field)) {
						return;
					}
					var doEvent = true;
					if (event.type == "focusin" || event.type == "click") {
						document.site.closePopups(null, event);
					}
					if (event.type == "click" && document.site.authorPage) {
						doEvent = document.site.authorPage.onClickItem(field, this);
					}
					if (doEvent) {
						field.onFieldInputEvent(event);
					}
					field.page.registerLastFocusGrid(field);
					event.stopPropagation();
				}
			}
		}).delegate("a[data-s-field-binary]", "click focusin focusout", function(event) {
			var field = document.controller.findField(this);
			if (field) {
				if (document.site.authorPage && !document.site.authorPage.authorizeEvent(field)) {
					return;
				}
				field.onFieldInputEvent(event);
				if (event.type != "click") {
					event.stopPropagation();
					return false;
				}
			}
		}).delegate("a.s-icon-link", "click", function(event) {
			var field = document.controller.findField(this);
			if (field) {
				if (document.site.authorPage && !document.site.authorPage.authorizeEvent(field)) {
					return;
				}
				field.onFieldInputEvent(event);
				event.stopPropagation();
			}
			return false;
		});
	},
	_bindListEvents: function() {
		document.site.$$layoutSlot.delegate("[data-s-btn],[data-s-menu],[data-s-picker]", "click", function(event) {
			var retValue = false;
			try {
				document.site.onBeforClick();
				var $$link = $(this);
				var article = document.controller.findArticle($$link);
				var menuId = this.getAttribute("data-s-menu");
				if (menuId) {
					var menu = document.controller.findItem($$link);
					if (menu && !menu.$isDisabled) {
						menu.click();
					}
				} else {
					var pickerId = this.getAttribute("data-s-picker");
					if (pickerId) {
						var $$link = $(event.currentTarget);
						if (article) {
							if (document.site.authorPage && !document.site.authorPage.authorizeEvent(article)) {
								return;
							}
							var pickerId = event.currentTarget.getAttribute("data-s-picker");
							if (!article.onClickPicker || article.onClickPicker(event.currentTarget, event)) {
								switch (pickerId) {
									case "s-bar-dockMode":
									case "s-bar-collapse":
									case "s-bar-title":
										var isFusionBar = event.currentTarget.className.indexOf("s-fusion-bar") >= 0;
										var bar;
										if (isFusionBar) {
											bar = article.fusionBar;
										} else {
											bar = (event.currentTarget.className.indexOf("s-aw-toolbar") >= 0) ? article.awPalette : article.menuBar;
										}
										bar.onClickPicker(event.currentTarget, event);
										break;
									default:
										var field = document.controller.findField(this);
										if (field) {
											field.onClickPicker(event.currentTarget);
										}
										break;
								}
							}
						}
					} else {
						switch (this.getAttribute("data-s-btn")) {
							case "list-sort":
								if (!document.site.authorPage || document.site.authorPage.authorizeEvent(article)) {
									article.sortCapability.onSortClick(event, this.$syraBind);
								}
								break;
							case "list-alphatab":
								if (!document.site.authorPage || document.site.authorPage.authorizeEvent(article)) {
									article.sortCapability.onSortAlphaTab(this);
								}
								break;
							case "list-card-opener":
								article.builder.cardBuilder.onOpenerClick(this);
								break;
							case "list-page":
								if (!document.site.authorPage || document.site.authorPage.authorizeEvent(article)) {
									article.pagging.onPageClick(this);
								}
								break;
							case "list-selector":
								event.stopPropagation();
								article = article.list ? article.list : article;
								if (this.className.indexOf("s-list-selector-row") >= 0) {
									//See with Aurelien
									event.applyShortCut = article.applyShortCut;
									delete article.applyShortCut;
								}
								article.selector.onSelectRecords(event);
								retValue = true;
								break;
							case "list-tree-picker":
								event.stopPropagation();
								(article = article.list).treeDecorator.onNodeEvent(event);
								break;
							case "field-choice":
								var field = document.controller.findField(this);
								if (field) {
									field.builder.onChoiceItemClick(this.$syraChoice);
								}
								break;
							case "box-picker":
								setTimeout(function() {
									document.controller.findBox($(event.target)).doPicker(event.target.$syraBoxPickerId);
								}, 20);
								break;
							case "field-diagnose-link":
								var field = document.controller.findField(this);
								if (field) {
									field.focus();
								}
								event.stopPropagation();
								break;

							case "diag-picker":
								var panel;
								if (this.$syraDiagPage) {
									if (document.site.desktopPages[this.$syraDiagPage]) {
										panel = document.site.desktopPages[this.$syraDiagPage].diagnosesPanel;
									}
								}
								panel = panel || document.site.diagnosesPanel;
								if (panel) {
									panel.onClickPicker(this);
								}
								break;
						}
					}
				}
			} catch (error) {
				document.site.onError(error);
			} finally {
				if (article && !article.disposed) {
					article.page.registerLastFocusGrid(article);
				}
				return retValue;
			}
		}).delegate(".s-list-selector-row", "mouseenter mouseleave", function(event) {
			var list = document.controller.findArticle($(this)).list;
			if (list) {
				list.selector.onSelectMouseEvent(event);
				list.page.registerLastFocusGrid(list);
			}
			return false;
		});
	},

	_bindSearchFacetEvents: function() {
		document.site.$$layoutSlot.delegate("input.s-search-facet-member-check", "change", function() {
			var $$input = $(this);
			document.controller.findArticle($$input).onInputMemberChange($$input);
			return false;
		});
	},
	_bindBox: function() {
		document.site.$$layoutSlot.delegate("a[data-s-box]", "click", function(event, data) {
			var $$link = $(this);
			var box = document.controller.findBox($$link);
			if (box) {
				var doEvent = true;
				if (document.site.authorPage) {
					doEvent = document.site.authorPage.onClickItem(box, this);
				}
				if (doEvent) {
					if (box.isTitleUrlLink) {
						return true;
					}
					if (box.tabTitle) {
						var isTabSelected = box.layoutParent.tabOpened == box;
						if (isTabSelected) {
							box.page.externalAdapter.onBoxClick({
								box: box,
								event: event,
								tabIdx: $$link.index()
							});
						} else {
							if (!document.site.dragDropInstance) {
								var open = !box.$item.$opened;
								var isFirstTime = !box.loaded;
								box.page.externalAdapter.onBoxToggle({
									nativeEvent: event,
									nativeEvenData: data,
									box: box,
									isTabSelected: isTabSelected,
									open: open,
									isFirstTime: isFirstTime,
									tabIdx: $$link.index(),
									doEvent: function() {
										if (!isTabSelected) {
											document.site.boxFocus = box;
											box.openBox(open);
										}
										document.site.resize(true);
									}
								});
								return false;
							}
						}
					} else {
						if (box.$item.$isBoxCollapsable) {
							document.site.onBeforClick(box);
							box._expandBody(undefined, event);
						}
					}
				} else {
					event.stopPropagation();
				}
			}
			return false;
		});

	},
	dispose: function() {
		if (this.keyboardManager) {
			this.keyboardManager.dispose();
			this.keyboardManager = null;
		}
		document.site.$$layoutSlot.unbind();
		document.site.$$layoutSlot.undelegate();
		$(window).unbind("resize");
	}
});