"use strict";

var helpers = require('syracuse-core/lib/helpers');
var SectionBlock = require('syracuse-ui/lib/article/sectionBlock').SectionBlock;
var SheetPage = require('syracuse-ui/lib/fusion/article/sheetPage').SheetPage;


exports.navTab = function(isRight){
	// retrieve current sectionBlock 
	var focus =  document.site.lastTabFocus ? document.site.lastTabFocus : document.site.boxFocus;
	var keys = Object.keys(document.site.mainPage.idMap);
	var tab = []
	var found = null;
	var i=0;
	var move = +1;
	if( !isRight ){
		move = -1;
	}
	for(i=0;i<keys.length ;i++){
		if( document.site.mainPage.idMap[keys[i]].tabTitle ){
			tab.push(document.site.mainPage.idMap[keys[i]]);
			if(focus && document.site.mainPage.idMap[keys[i]].id === focus.id ){
				found = focus;
			}else if( !focus.tabTitle && tab.length === 1  ){
				found = document.site.mainPage.idMap[keys[i]];
			}
		}
	}
	if( tab.indexOf(found)+move < tab.length && tab.indexOf(found)+move >= 0 ){
		$(tab[tab.indexOf(found)+move].tabTitle).click();
		document.site.lastTabFocus = tab[tab.indexOf(found)+move];
	}
};

exports.navPageGrid = function(isPageDown,event){
		// get the grid
	var lastFocus = document.site.lastFocusField;
	if( isFusion ){
		var lastGrid = document.site.lastFocusGrid && document.site.lastFocusGrid.$$item ? document.site.lastFocusGrid:null;
		if(!lastGrid && lastFocus.$$item && lastFocus.$$item[0].localName === 'td' ){
			lastGrid = lastFocus.articleParent.articleParent;
		}
		if( lastFocus.pagingCapability ){
			// looking for the next page 
			var pcap = lastFocus.pagingCapability ;
			var pageNumber = Math.floor(pcap.$startIndex / pcap._$itemsPerPage)+1;
			if( document.site.lastFocusField && document.site.lastFocusField.$$item&& document.site.lastFocusField.$$item[0].localName === 'td' ){
				event.keyCode = _keyboardMap['esc'];
				event.type = 'keydown';
				//document.site.lastFocusField.onFieldInputEvent(event);
				document.site.lastFocusField.$$item.blur();
			}
			if( isPageDown ){
				if( 0 < pageNumber-1 ){
					$(pcap.pageLinks[pageNumber-1]).click();
				}
			}else{
				if( pcap.pageLinks.length >= pageNumber+1 ){
					$(pcap.pageLinks[pageNumber+1]).click();
				}
			}
			console.log("last focus "+JSON.stringify(document.site.lastFocusField));
		}
	}
};

exports.navRecord = function(action){
	var keys = Object.keys(document.site.mainPage.idMap);
	var found = null;
	for(var i=0;i<keys.length && !found;i++){
		if( document.site.mainPage.idMap[keys[i]].$bind === action ){
			found = document.site.mainPage.idMap[keys[i]];
		}
	}
	if( found ){
		found.$$item.click();
	}
};

exports.selectAllGridLines = function(){
	// get current grid, we need to have focus at least of an element of the grid 
	var range = document.createRange();
	var lastFocus = document.site.lastFocusGrid ;
	if( lastFocus ){
		range.selectNode(lastFocus.$$item[0]);
		window.getSelection().addRange(range);
	}
};

exports.actionGridLine = function(action){
	var lastFocus = document.site.lastFocusField.articleParent;
	if( lastFocus.menuItems[action] )
		lastFocus.menuItems[action][0].click();
};

exports.actionPage = function(action){
	if( document.site.mainPage.menuItems[action] )
		document.site.mainPage.menuItems[action][0].click();
};

exports.mainActionPage = function(){
	var found=null;
	var keys = Object.keys(document.site.mainPage.menuItems);
	for(var i=0; i<keys.length && !found;i++){
		if( document.site.mainPage.menuItems[keys[i]][0].$item.$style === "main" ){
			found = document.site.mainPage.menuItems[keys[i]][0];
		}
	}
	if( found )
		found.click();
};

exports.goToHelp = function(){
	$(document.site._header.children["s-site-header-top-right"].children["s-site-help"].children[0]).click();
};

exports.goToHome = function(){
	$(document.site._header.children["s-site-header-top-right"].children["s-site-home"].children[0]).click();
};
function actionContextMenu(isGrid){
	var lastFocus = isGrid ? document.site.lastFocusField.articleParent :  document.site.lastFocusField;
	
	if(lastFocus.menusBox && lastFocus.menusBox.domTitle){
		$(lastFocus.menusBox.domTitle).click();	
	}

};
exports.refresh = function(){
	if( isFusion ){
		var menu = "2823";// x3 action
		var found = null;
		var keys = Object.keys(document.site.mainPage.menuItems);
		for(var i=0;i<keys.length && !found;i++){
			if( document.site.mainPage.menuItems[keys[i]][0].$bind === menu ){
				found = document.site.mainPage.menuItems[keys[i]][0];
			}
		}
		if( found )
			found.$$item.click();
	}
};

exports.goToFunction = function(){
	menu = "1186"; // x3 action 
	if( document.site.mainPage.menuItems[menu] )
		document.site.mainPage.menuItems[menu][0].click();

};

exports.hideBar = function(letter){
	// if l = leftlist, r = menu bar, a = all
	if( letter === 'a' || letter === 'l' ){
		if( document.site.mainPage.fusionBar ){
			$(document.site.mainPage.fusionBar.openerPicker).click();
		}
	}
	if( letter === 'a' || letter === 'r' ){
		if( document.site.mainPage.menuBar ){
			$(document.site.mainPage.menuBar.openerPicker).click();
		}
	}
};

exports.actionLookup = function(){
// get the lookup picker 
	var lastFocus = document.site.lastFocusField;
	if( lastFocus.$$input && lastFocus.boxPickers && lastFocus.boxPickers.children.length > 0 ){
		var lookup = null;
		for(var i=0;i<lastFocus.boxPickers.children.length && !lookup;i++){
			if( $(lastFocus.boxPickers.children[i]).attr('data-s-picker') === "lookup" ){
				lookup =  $(lastFocus.boxPickers.children[i]);
			}
		}
		if( lookup ){
			lookup.click();
		}
	}
};

exports.goToDetailTunnel = function(){
	var lastFocus = document.site.lastFocusField;
	if( lastFocus.$$input && lastFocus.tunnelPicker  ){
		lastFocus.tunnelPicker.click();
	}
};

exports.focusUSB = function(){
	// focus of search box
	var keys = Object.keys(document.site.searchField.idMap);
	var items = document.site.searchField.idMap;
	var input = null;
	for(var i=0;i<keys.length && !input;i++){
		if( items[keys[i]].$$input ){
			input = items[keys[i]].$$input;
		}
	}
	if( input ) {
		$(input[0]).focus();
	}
};

exports.nextFieldConvGrid = function(){
	if(document.site.lastFocusField && document.site.lastFocusField.arrayLevel==="cell"){
		if(isFusion && document.site.lastFocusField.page.externalAdapter.onFieldClickPicker){
			document.site.lastFocusField.page.externalAdapter.onFieldClickPicker({"field":document.site.lastFocusField,"pickerType":"cancelEdit"})
		}
	}
};
