"use strict";
var helpers = require('syracuse-core/lib/helpers');

exports.navTab = function(ctx) {
	// retrieve current sectionBlock 
	var focus = document.site.lastTabFocus ? document.site.lastTabFocus : document.site.boxFocus;
	var mainpage = document.site.mainPage;
	if (ctx.isFusion) {
		mainpage = document.site.fusionGateway._books[0].selectedSheet;
	}
	var keys = Object.keys(mainpage.idMap);
	var tab = [];
	var found = null;
	var i = 0;
	var move = +1;
	if (!ctx.isRight) {
		move = -1;
	}
	for (i = 0; i < keys.length; i++) {
		if (mainpage.idMap[keys[i]].tabTitle) {
			tab.push(mainpage.idMap[keys[i]]);
			if (focus && mainpage.idMap[keys[i]].id === focus.id) {
				found = focus;
			} else if ((!focus || !focus.tabTitle) && tab.length === 1) {
				found = mainpage.idMap[keys[i]];
			}
		}
	}
	if (tab.indexOf(found) + move < tab.length && tab.indexOf(found) + move >= 0) {
		$(tab[tab.indexOf(found) + move].tabTitle).click();
		document.site.lastTabFocus = tab[tab.indexOf(found) + move];
	} else {
		if (document.site.lastTabFocus) $(document.site.lastTabFocus.tabTitle).click();
	}
};

exports.navPageGrid = function(ctx) {
	var lastFocus = document.site.lastFocusField;
	var lastGrid = document.site.lastFocusGrid && document.site.lastFocusGrid.$$item ? document.site.lastFocusGrid : null;
	if (!lastGrid && lastFocus.$$item && lastFocus.$$item[0].localName === 'td') {
		lastGrid = lastFocus.articleParent.articleParent;
	}
	if (lastGrid.pagging) {
		lastGrid.pagging.onShortKeyEvent(ctx);
	}
};

exports.navRecord = function(ctx) {

	var mainpage = document.site.mainPage;
	if (ctx.isFusion) {
		mainpage = document.site.fusionGateway._books[0].selectedSheet;
	}
	var keys = Object.keys(mainpage.idMap);
	var found = null;
	for (var i = 0; i < keys.length && !found; i++) {
		if (mainpage.idMap[keys[i]].$bind === ctx.action) {
			found = mainpage.idMap[keys[i]];
		}
	}
	if (found) {
		found.$$item.click();
	}
};

exports.selectAllGridLines = function() {
	// get current grid, we need to have focus at least of an element of the grid 
	var range = document.createRange();
	var lastFocus = document.site.lastFocusGrid;
	if (lastFocus) {
		range.selectNode(lastFocus.$$item[0]);
		window.getSelection().addRange(range);
	}
};

exports.actionGridLine = function(ctx) {
	var lastFocus = document.site.lastFocusField.articleParent;
	if (lastFocus.menuItems[ctx.action]) lastFocus.menuItems[ctx.action][0].click();
};

exports.actionPage = function(ctx) {

	var mainpage = document.site.mainPage;
	if (ctx.isFusion) {
		mainpage = document.site.fusionGateway._books[0].selectedSheet;
	}
	if (ctx.isFusion) {
		ctx = ctx.fusion;
	}
	if (mainpage.menuItems[ctx.action]) mainpage.menuItems[ctx.action][0].click();
};

exports.mainActionPage = function(ctx) {
	var found = null;
	var mainpage = document.site.mainPage;
	if (ctx.isFusion) {
		mainpage = document.site.fusionGateway._books[0].selectedSheet;
	}
	var keys = Object.keys(mainpage.menuItems);
	for (var i = 0; i < keys.length && !found; i++) {
		if (mainpage.menuItems[keys[i]][0].$item.$style === "main") {
			found = mainpage.menuItems[keys[i]][0];
		}
	}
	if (found && found.$isDisabled) found.click();
};

exports.goToHelp = function(ctx) {
	ctx.listener.keysDown = [];
	ctx.listener.keysOk = [];
	if (ctx.isFusion) {
		if (document.site.focusedField) {
			if (document.site.focusedField.page.externalAdapter.onFieldClickPicker) {
				document.site.focusedField.page.externalAdapter.onFieldClickPicker({
					"field": document.site.focusedField,
					"pickerType": "help"
				});
			}
		} else {
			//click help fct
		}
	} else {
		$(document.site.idMap["s-site-help-link"].mn).click();
	}
};

exports.goToHome = function() {
	$(document.site._header.children["s-site-header-top-right"].children["s-site-home"].children[0]).click();
};
exports.actionContextMenu = function(ctx) {
	var lastFocus = ctx.isGrid ? document.site.lastFocusField.articleParent : document.site.lastFocusField;

	if (lastFocus.menusBox && lastFocus.menusBox.domTitle) {
		$(lastFocus.menusBox.domTitle).click();
	}

};
exports.navRowList = function(ctx) {
	var lastFocus = document.site.lastFocusField;
	var lastGrid = document.site.lastFocusGrid && document.site.lastFocusGrid.$$item ? document.site.lastFocusGrid : null;
	if (!lastGrid && lastFocus.$$item && lastFocus.$$item[0].localName === 'td') {
		lastGrid = lastFocus.articleParent.list;
	}
	if (lastGrid) {
		var tmp = 0;
		if (ctx.isDown) {
			tmp = 1;
		} else if (ctx.isSelect) {
			tmp = 0;
		} else {
			tmp = -1;
		}
		// get current list selected
		if (lastGrid.records && lastGrid.records.length > 0) {
			var index = 0;
			if (lastGrid.selector.records && Object.keys(lastGrid.selector.records).length > 0) {
				var key = Object.keys(lastGrid.selector.records);
				var recordselected = lastGrid.selector.records[key];
				index = lastGrid.records.indexOf(recordselected) + tmp;
			}
			if (index >= 0 && index < lastGrid.records.length) {
				var recordToSelect = lastGrid.records[index];
				var key = Object.keys(recordToSelect.idMap)[0];
				if (!ctx.isSelect) recordToSelect.list.applyShortCut = true;
				recordToSelect.idMap[key].$$item.click();
			}
		}
	}
};

exports.refresh = function(ctx) {
	if (ctx.isFusion) {
		var menu = "2823"; // x3 action
		var found = null;
		var mainpage = document.site.mainPage;
		if (ctx.isFusion) {
			mainpage = document.site.fusionGateway._books[0].selectedSheet;
		}
		var keys = Object.keys(mainpage.menuItems);
		for (var i = 0; i < keys.length && !found; i++) {
			if (mainpage.menuItems[keys[i]][0].$bind === menu) {
				found = mainpage.menuItems[keys[i]][0];
			}
		}
		if (found) found.$$item.click();
	}
};

exports.goToFunction = function(ctx) {
	var menu = "1186"; // x3 action 
	var mainpage = document.site.mainPage;
	if (ctx.isFusion) {
		mainpage = document.site.fusionGateway._books[0].selectedSheet;
	}
	if (mainpage.menuItems[menu]) mainpage.menuItems[menu][0].click();

};

exports.colFitToWidth = function(ctx) {
	var lastFocus = document.site.lastFocusField;
	var lastGrid = document.site.lastFocusGrid && document.site.lastFocusGrid.$$item ? document.site.lastFocusGrid : null;
	if (!lastGrid && lastFocus.$$item && lastFocus.$$item[0].localName === 'td') {
		lastGrid = lastFocus.articleParent.list;
	}
	if (lastGrid) {
		lastGrid.fitToWidth(lastGrid);
	}

};

exports.hideBar = function(ctx) {
	// if l = leftlist, r = menu bar, a = all
	var letter = ctx.letter;
	var mainpage = document.site.mainPage;
	if (ctx.isFusion) {
		mainpage = document.site.fusionGateway._books[0].selectedSheet;
	}
	if (letter === 'a' || letter === 'l') {
		if (mainpage.fusionBar) {
			$(mainpage.fusionBar.openerPicker).click();
		}
	}
	if (letter === 'a' || letter === 'r') {
		if (mainpage.menuBar) {
			$(mainpage.menuBar.openerPicker).click();
		}
	}
};

exports.actionLookup = function() {
	// get the lookup picker 
	var lastFocus = document.site.lastFocusField;
	if (lastFocus.$$input && lastFocus.boxPickers && lastFocus.boxPickers.children.length > 0) {
		var lookup = null;
		for (var i = 0; i < lastFocus.boxPickers.children.length && !lookup; i++) {
			if ($(lastFocus.boxPickers.children[i]).attr('data-s-picker') === "lookup") {
				lookup = $(lastFocus.boxPickers.children[i]);
			}
		}
		if (lookup) {
			lookup.click();
		}
	}
};

exports.goToDetailTunnel = function() {
	var lastFocus = document.site.lastFocusField;
	if (lastFocus.$$input && lastFocus.tunnelPicker) {
		lastFocus.tunnelPicker.click();
	}
};

exports.focusUSB = function() {
	// focus of search box
	if (document.site.searchField) {
		var keys = Object.keys(document.site.searchField.idMap);
		var items = document.site.searchField.idMap;
		var input = null;
		for (var i = 0; i < keys.length && !input; i++) {
			if (items[keys[i]].$$input) {
				input = items[keys[i]].$$input;
			}
		}
		if (input) {
			$(input[0]).focus();
		}
	}
};

exports.nextFieldConvGrid = function(ctx) {
	if (document.site.lastFocusField && document.site.lastFocusField.arrayLevel === "cell") {
		if (ctx.isFusion && document.site.lastFocusField.page.externalAdapter.onFieldClickPicker) {
			document.site.lastFocusField.page.externalAdapter.onFieldClickPicker({
				"field": document.site.lastFocusField,
				"pickerType": "cancelEdit"
			});
		}
	}
};