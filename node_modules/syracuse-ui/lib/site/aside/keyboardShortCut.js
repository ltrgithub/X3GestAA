"use strict";
var helpers = require('syracuse-core/lib/helpers');
var uiLocker = require('syracuse-ui/lib/site/uiLocker');
var handler = require('./shortcutHandler');
var SectionBlock = require('syracuse-ui/lib/article/sectionBlock').SectionBlock;
var SheetPage = require('syracuse-ui/lib/fusion/article/sheetPage').SheetPage;
var _keyCodeArray = [
	["backspace" , 8],
	["tab" , 9],
	["enter" , 13],
	["shift", 16],
	["esc" , 27],
	["home" , 36],
	["pageup" , 33],
	["pagedown" , 34],
	["insert" , 45],
	["delete" , 46],
	["," , 58],
	["divide" , 111],
	["f1" , 112],
	["f4" , 115],
	["f5" , 116],
	["f7" , 118],
	["f9" , 120],
	["f11" , 122],
	["f12" , 123],
	[":" , 188],
	["right" , 39],
	["left" , 37],
	["up" , 38],
	["down" , 40],
	['a' , 65],
	['b' , 66],
	['c' , 67],
	['d' , 68],
	['e' , 69],
	['f' , 70],
	['g' , 71],
	['h' , 72],
	['i' , 73],
	['j' , 74],
	['k' , 75],
	['l' , 76],
	['m' , 77],
	['n' , 78],
	['o' , 79],
	['p' , 80],
	['q' , 81],
	['r' , 82],
	['s' , 83],
	['t' , 84],
	['u' , 85],
	['v' , 86],
	['w' , 87],
	['x'  , 88],
	['y' , 89],
	[ 'z' , 90] 
];

var _letterMap = _keyCodeArray.reduce(function(key,desc){
	key[desc[0]] = desc[1];
	return key;
},{});

var _keyCodeMap = _keyCodeArray.reduce(function(key,desc){
	key[desc[1]] = desc[0];
	return key;
},{});

var mapShortCut = {
	'modifier' : 'esc',
	'2' : { // shortcut with 2 key
		'up' :{
			handler:  handler.navRowList,
			parameter : {
				isDown : false
			},

		},
		'down' :{
			handler:  handler.navRowList,
			parameter : {
				isDown : true
			},

		},
		'p' : {
			handler:  handler.actionPage,
			parameter : {
				action : '$print'
			},
		},
		'r': {
			handler : handler.colFitToWidth,
		},
		'a': {
			handler : handler.selectAllGridLines,
		},
		'left':{
			handler : handler.navTab,
			parameter :{
				isRight : false,
			}
		},
		'right': {
			handler : handler.navTab,
			parameter :{
				isRight : true,
			}
		},
		'delete':{
			handler : handler.actionGridLine,
			parameter: {
				action : '$delete',
			}
		},
		'insert':{
			handler : handler.actionGridLine,
			parameter: {
				action : '$create',
			}
		},
		'n':{
			handler : handler.actionPage,
			parameter : {
				fusion : {// specific fusion
					action : '1115'
				},
				action : '$create'
			}
		},
		'pageup':{
			handler: handler.navPageGrid,
			parameter : {
				isPageDown : false,
			},
		},
		'pagedown':{
			handler: handler.navPageGrid,
			parameter : {
				isPageDown : true,
			},
		},
		'enter':{
			handler : handler.mainActionPage,
		},
		'f1':{
			handler : handler.goToHelp,
		},
		'm' :{
			handler : handler.actionContextMenu,
			parameter : {
				isGrid : false,
			}
		},
		'f4':{
			handler : handler.actionContextMenu,
			parameter : {
				isGrid : false,
			}
		},
		'l':{
			handler : handler.actionLookup,
		},
		'f12':{
			handler : handler.actionLookup,
		},
		'j':{
			handler : handler.navRecord,
			parameter : {
				action : '$previous',
			}
		},
		'k':{
			handler : handler.navRecord,
			parameter : {
				action : '$next',
			}
		},
		'f11':{
			handler : handler.hideBar,
			parameter : {
				letter : 'a',
			}
		},
		's' :{
			handler : handler.focusUSB,
		},
		'divide' :{
			handler : handler.focusUSB,
		},
		'f9':{
			handler : handler.goToDetailTunnel,
		},
		'f7':{
			handler : handler.goToFunction,
		},
		'f5':{
			handler : handler.refresh,
		},
		'tab':{
			handler :  handler.nextFieldConvGrid,
		},
	},
	'3' : { // shortcut with 3 key
		'g' :{
			'h' : {
				handler : handler.goToHome,
			}
		},
		'shift':{
			'm' :{
				handler : handler.actionContextMenu,
				parameter :{
					isGrid : true,
				}
			},
			'f4' :{
				handler : handler.actionContextMenu,
				parameter :{
					isGrid : true,
				}
			},
			'k':{
				handler : handler.navRecord,
				parameter :{
					action : '$last',
				}
			},
			'j':{
				handler : handler.navRecord,
				parameter :{
					action : '$first',
				}
			},
			':':{
				handler  : handler.focusUSB,
			},
			'pagedown' :{
				handler : handler.navPageGrid,
				parameter :{
					isPageDown : true,
					isShift : true,
				}
			},
			'pageup' :{
				handler : handler.navPageGrid,
				parameter :{
					isPageDown : false,
					isShift : true,
				}
			}
		},
		'h':{
			'a':{
				handler : handler.hideBar,
				parameter :{
					letter : 'a',
				}
			},
			'l':{
				handler : handler.hideBar,
				parameter :{
					letter : 'l',
				}
			},
			'r':{
				handler : handler.hideBar,
				parameter :{
					letter : 'r',
				}
			}
		}
	}
};

	
exports.applyKeyboardShortCut2= function(context){
	var isFusion = context.isFusion;
	var keysDown = context.keysDown;
	var event = context.event;
	try{
		if( mapShortCut[keysDown.length] ){
			var stop = false;
			var current = mapShortCut[keysDown.length];
			for(var i=1;i<keysDown.length && !stop;i++){
				if( current[_keyCodeMap[keysDown[i]]] ){
					current = current[_keyCodeMap[keysDown[i]]];
					if( current.handler ){
						stop = true;
					}
				}
			}
			if( current  && current.handler ){
				// execute handler 
				var param = current.parameter ? current.parameter : null;
				if( param ){
					param.isFusion = isFusion;
				}else{
					param = {isFusion : isFusion};
				}
				param.listener = context.eventListener;
				uiLocker.lock(0,"progress");
				current.handler(param);
				uiLocker.unlock();
				return true;
			}
		}
		return false;
	}catch(e){
		console.log(e.stack);
	}
};

exports.getModifier =  function(){
	return _letterMap[mapShortCut.modifier];
};



