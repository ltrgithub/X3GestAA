"use strict";
var helpers = require('syracuse-core/lib/helpers');
var Article = require("syracuse-ui/lib/article/article").Article;

function SiteTopPanel() {}

exports.SiteTopPanel = helpers.defineClass(SiteTopPanel, Article, {
	loadBox: function() {
		this._localize = document.site.localize;
		this.page.initializeNewItem(this, {});
		this.$$item = $(this.layoutSlot);
		document.site.setZIndex(this.layoutSlot);
		Article.prototype.loadBox.call(this);
		if (document.site.userProfile) {
			document.site.userProfile.ensureFormBlock();
			document.site.userProfile.ensurePageVisibility();
			if (document.site.userProfile.domItem) {
				document.site.emptyDom(this.userProfileSlot);
				this.userProfileSlot.appendChild(document.site.userProfile.domItem);
			}
		}
		var rect = this.body.getBoundingClientRect();
		this.layoutSlot.style.height = (rect.height + rect.top) + "px";
	},
	_buildItems: function($links, addColumns) {
		var ids = Object.keys($links);
		var $items = [];
		if (addColumns) {
			var $row;
			var $items;
			for (var ii = 0, jj = ids.length; ii < jj; ii++) {
				if (!$row) {
					$row = {
						$layoutType: "row",
						$items: []
					};
					$items.push($row);
				}
				this.$prototype.$links[ids[ii]] = $links[ids[ii]];
				$row.$items.push({
					$bind: ids[ii]
				});
				if ($row.$items.length == 3) {
					$row = null;
				}
			}
			if ($row) {
				while ($row.$items.length < 3) {
					$row.$items.push({
						$category: "space"
					});
				}
			}
			return {
				$layoutType: "stack",
				$items: $items
			};
		}
		for (var ii = 0, jj = ids.length; ii < jj; ii++) {
			this.$prototype.$links[ids[ii]] = $links[ids[ii]];
			$items.push({
				$bind: ids[ii]
			});
		}
		return {
			$layoutType: "row",
			$autoSize: true,
			$items: $items
		};
	},
	onMenuClick: function(menuItem) {
		switch (menuItem.$item.$bind) {
			case "$help":
				document.site.gotoHelp();
				return false;
		}
		return true;
	},
	addNavigationBar: function() {
		var $dashboard = this.$prototype.$navigation.$dashboard;
		var ids = Object.keys($dashboard);
		for (var ii = 0, jj = ids.length; ii < jj; ii++) {
			var key = ids[ii];
			switch (key) {
				case "quickAdmin":
				case "mobileDesktopAuthoring":
					if (!document.site.developpementMode) {
						var level = document.site.userProfile.getAuthoringLevel();
						if (!(level == "admin" || level == "sage")) {
							delete $dashboard[key];
							continue;
						}
					}
					break;
				case "tablethome":
				case "mobileHome":
				case "perfmon":
				case "devsos":
				case "devsosqueries":
				case "arrayTest":
				case "changeLog":
				case "office":
					if (!document.site.developpementMode) {
						delete $dashboard[key];
						continue;
					}
					break;
			}
			$dashboard[key].$title = this._localize["siteNavigation_" + key] || $dashboard[key].$title;
		}
		var $menu = {
			$category: "menus",
			$skin: "s-site-nav-bar",
			$layout: {
				$layoutType: "stack",
				$items: [{
					$category: "menus",
					$title: this._localize.siteTopPanel_dashboards,
					$slotStyle: "s-site-top-pn-dashboards",
					$skin: "s-site-nav",
					$layout: this._buildItems(this.$prototype.$navigation.$dashboard, true)
				}]
			}
		};
		document.site.layoutValidator.validate(this.page.loadNewItem(this.body, $menu, this).layoutContent, true);
	},
	drawBox: function() {
		this.body = document.createElement("div");
		this.$$item[0].appendChild(this.body).id = "s-site-top-pn-body";
		var bar = document.createElement("div");
		this.body.appendChild(bar).id = "s-site-top-pn-top-bar";
		this.userProfileSlot = document.createElement("div");
		bar.appendChild(this.userProfileSlot).id = "s-site-top-pn-user-profile";

		if (!(this.page.fusionGateway && this.page.fusionGateway.activatedBook)) {
			this.addNavigationBar();
		}
		/*var $about = this.$prototype.$navigation.$about;
		if ($about) {
			$about.$help.$title = this._localize.siteAbout_help || $about.$help.$title;
			$about.$contactus.$title = this._localize.siteAbout_contactus || $about.$contactus.$title;
			this._aboutItem = this.page.loadNewItem(this.body, {
				$category: "menus",
				$title: this._localize.siteTopPanel_about,
				$skin: "s-site-top-pn-about-bar",
				$layout: this._buildItems(this.$prototype.$navigation.$about)
			}, this);
			document.site.layoutValidator.validate(this._aboutItem.layoutContent, true);
		}*/
	},
	closePanel: function() {
		var $$item = document.site.userProfile ? document.site.userProfile.$$item : null;
		if ($$item) {
			$$item.detach();
		}
		this.layoutSlot.style.display = "none";
		document.site.emptyDom(this.layoutSlot);
		this.dispose();
	},
	dispose: function() {
		this._localize = this._aboutItem = this.userProfileSlot = this.$urlParams = null;
		Article.prototype.dispose.call(this);
	}
});