"use strict";
var helpers = require('syracuse-core/lib/helpers');
var Article = require("syracuse-ui/lib/article/article").Article;
var locale = require('syracuse-core/lib/locale');

function SiteTopPanel(){
}

exports.SiteTopPanel = helpers.defineClass(SiteTopPanel, Article, {
    loadBox: function(){
        this._localize = locale.resources(module)();
        this.page.initializeNewItem(this, {});
        this.$$item = $(this.layoutSlot);
        document.site.setZIndex(this.layoutSlot);
        Article.prototype.loadBox.call(this);
        if (document.site.userProfile) {
            document.site.userProfile.ensureFormBlock();
            if (document.site.userProfile.$$item) {
                if (document.site.userProfile.$$item.parent().length == 0) {
                    this.$$topUserProfile.empty().append(document.site.userProfile.$$item);
                }
            }
        }
        this.layoutSlot.style.height = (this.$$body.outerHeight() + this.$$body.offset().top) + "px";
    },
    _buildItems: function($links){
        var ids = Object.keys($links);
        var $menus = [];
        for (var ii = 0, jj = ids.length; ii < jj; ii++) {
            var id = ids[ii];
            this.$prototype.$links[id] = $links[id];
            $menus.push({
                $bind: id
            });
        }
        return $menus;
    },
    onMenuClick: function(menuItem){
        switch (menuItem.$item.$bind) {
            case "$addBookmark":
                return false;
            case "$authoring":
                document.site.openAuthoringPage(true);
                return false;
        }
        return true;
    },
    addAuthoringBar: function(){
        this.$prototype.$links.$addBookmark = {
            $title: this._localize.dtp_bookmarkLinkTitle,
            $description: this._localize.dtp_bookmarkLinkDesc,
        };
        this.$prototype.$links.$authoring = {
            $title: this._localize.dtp_authoringLinkTitle,
            $description: this._localize.dtp_authoringLinkDesc,
        };
        this.page.loadNewItem(this.$$topBar[0], {
            "$category": "menus",
            "$skin": "s-top-link",
            "$isDescriptionVisible": true,
            "$itemIcon": {
                "$mode": "iconText",
                "$path": "site/s-top-"
            },
            "$layout": {
                $layoutType: "stack",
                $items: [{
                    $bind: "$addBookmark"
                }, {
                    $bind: "$authoring"
                }]
            }
        }, this);
    },
    addNavigationBar: function(){
        var $menu = {
            $category: "menus",
            $skin: "s-site-nav-bar",
            $layout: {
                $layoutType: "row",
                $items: [{
                    $category: "menus",
                    $title: this._localize.dtp_drafts,
                    $slotStyle: "s-site-top-pn-drafts",
                    $skin: "s-site-nav",
                    $layout: {
                        $items: [{
                            $bind: "$home"
                        }]
                    }
                }, {
                    $category: "menus",
                    $title: this._localize.dtp_historic,
                    $skin: "s-site-nav",
                    $slotStyle: "s-site-top-pn-historic",
                    $layout: {
                        $items: this._buildItems(this.$prototype.$navigation.$historic)
                    }
                }, {
                    $category: "menus",
                    $title: this._localize.dtp_bookmarks,
                    $slotStyle: "s-site-top-pn-bookmarks",
                    $skin: "s-site-nav",
                    $layout: {
                        $items: [{
                            $bind: "$home"
                        }, {
                            $bind: "$help"
                        }]
                    }
                }, {
                    $category: "menus",
                    $title: this._localize.dtp_dashboards,
                    $slotStyle: "s-site-top-pn-dashboards",
                    $skin: "s-site-nav",
                    $layout: {
                        $items: this._buildItems(this.$prototype.$navigation.$dashboard)
                    }
                }]
            }
        };
        this.page.loadNewItem(this.$$body[0], $menu, this);
    },
    drawBox: function(){
        this.$$body = $("<div id='s-site-top-pn-body'/>").appendTo(this.$$item);
        this.$$topBar = $("<div id='s-site-top-pn-top-bar'/>").appendTo(this.$$body);
        this.$$topUserProfile = $("<div id='s-site-top-pn-user-profile'/>").appendTo(this.$$topBar);
        
        this.addAuthoringBar();
        
        this.addNavigationBar();
        
        this.page.loadNewItem(this.$$body[0], {
            $category: "menus",
            $title: this._localize.dtp_about,
            $skin: "s-site-top-pn-about-bar",
            $layout: {
                $layoutType: "row",
                $autoSize: true,
                $items: this._buildItems(this.$prototype.$navigation.$about)
            }
        }, this);
    },
    
    closePanel: function(){
        var $$item = document.site.userProfile ? document.site.userProfile.$$item : null;
        if ($$item) {
            $$item.detach();
        }
        this.layoutSlot.style.display = "none";
        document.site.emptyDom(this.layoutSlot);
        document.controller.disposeObject(this);
    }
});
