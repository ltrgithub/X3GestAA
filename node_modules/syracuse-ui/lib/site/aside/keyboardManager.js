"use strict";
var helpers = require('syracuse-core/lib/helpers');
var uiLocker = require('syracuse-ui/lib/site/uiLocker');

var _keyCodeMap = {
	"8": "backspace",
	"9": "tab",
	"13": "enter",
	"16": "shift",
	"17": "ctrl",
	"27": "esc",
	"32": "space",
	"33": "pageup",
	"34": "pagedown",
	"36": "home",
	"37": "left",
	"38": "up",
	"39": "right",
	"40": "down",
	"45": "insert",
	"46": "delete",
	"58": ",",
	"65": "a",
	"66": "b",
	"67": "c",
	"68": "d",
	"69": "e",
	"70": "f",
	"71": "g",
	"72": "h",
	"73": "i",
	"74": "j",
	"75": "k",
	"76": "l",
	"77": "m",
	"78": "n",
	"79": "o",
	"80": "p",
	"81": "q",
	"82": "r",
	"83": "s",
	"84": "t",
	"85": "u",
	"86": "v",
	"87": "w",
	"88": "x",
	"89": "y",
	"90": "z",
	"111": "divide",
	"112": "f1",
	"115": "f4",
	"116": "f5",
	"117": "f6",
	"118": "f7",
	"120": "f9",
	"122": "f11",
	"123": "f12",
	"188": ":"
};


function KeyboardManager() {}


exports.KeyboardManager = helpers.defineClass(KeyboardManager, null, {
	getPage: function(focusField, article) {
		var page = focusField ? focusField.page : null;
		var dialog = document.site.getTopDialogPage();
		if (dialog) {
			if (!page || (page != document.site)) {
				page = dialog._content;
			}
		}
		if (!page && article) {
			page = article.page;
		}
		return page || document.site.mainPage || document.site;
	},
	load: function() {
		var self = this;
		self.shortcurts = {};
		self.keydown = document.addEventListener("keydown", function(event) {
			var site = document.site;
			var focusField = document.controller.findField(event.target);
			var article = document.controller.findArticle($(event.target));
			var page = self.getPage(focusField, article);
			var doEvent = true;
			if (page && page.$isFusionPage) {
				doEvent = site.fusionGateway.onKeyDow(event);
			}
			if (doEvent) {

				event = event || window.event;
				if (event.keyCode == 27) {
					self.shortcurts = {
						esc: true
					};
				} else {
					if (self.shortcurts.esc) {
						self.shortcurts.isEnabled = true;
					}
				}
				var isShorcutApplyed = false;
				self.shortcurts[_keyCodeMap[event.keyCode]] = true;
				if (site.messageBox && !site.messageBox.disposed && !site.messageBox.displayDisabled) {
					isShorcutApplyed = site.messageBox.applyShortCuts(self.shortcurts);
				} else {
					if (focusField && focusField.applyShortCuts) {
						isShorcutApplyed = focusField.applyShortCuts(self.shortcurts, event);
					}
					if (!isShorcutApplyed && page) {
						isShorcutApplyed = page.applyShortCuts(self.shortcurts);
						if (focusField && !isShorcutApplyed && page && page.$isFusionPage) {
							focusField.onFieldInputEvent(event);
							event.stopPropagation();
							return;
						}
					}
				}
				if (isShorcutApplyed && self.shortcurts.esc) {
					self.shortcurts = {
						esc: true,
						isEnabled: true
					};
					event.returnValue = false;
					if (event.preventDefault) {
						event.preventDefault();
					}
					return false;
				}
			}
		}, false);
		self.keypress = document.addEventListener("keypress", function(event) {
			event = event || window.event;
			var charCode;
			if (event.which == null) {
				charCode = String.fromCharCode(event.keyCode); // old IE			 	
			} else if (event.which != 0 && event.charCode != 0) {
				charCode = event.which;
			}
			if (charCode !== undefined) {
				if (!(self.shortcurts && self.shortcurts.esc)) {
					var focusField = document.controller.findField(event.target);
					if (focusField && focusField.validateKeyPress) {
						if (!focusField.validateKeyPress(String.fromCharCode(event.charCode || event.keyCode), self.shortcurts, event)) {
							event.returnValue = false;
							if (event.preventDefault) {
								event.preventDefault();
							}
							return false;
						}
					}
				}
			}
		}, false);
		self.keyup = document.addEventListener("keyup", function(event) {
			event = event || window.event;
			var site = document.site;
			var focusField = document.controller.findField(event.target);
			var article = document.controller.findArticle($(event.target));
			var page = self.getPage(focusField, article);
			if (self.shortcurts) {
				if (event.keyCode == 27) {
					if (!self.shortcurts.isEnabled) {
						var isEscApplyed;
						if (focusField && focusField.applyEscape) {
							isEscApplyed = focusField.applyEscape(event);
						}
						if (!isEscApplyed && page) {
							/*if (page.$isFusionPage && focusField) {
                             focusField.onFieldInputEvent(event);
                             event.stopPropagation();
                             return;
                             }*/
							page.applyEscape(self.shortcurts);
						}
					}
					self.shortcurts = {};
				} else {
					if (!self.shortcurts.esc) {
						delete self.shortcurts[_keyCodeMap[event.keyCode]];
						if (focusField && focusField.onKeyUp) {
							focusField.onKeyUp(event);
						}
					}
				}
			}
		}, false);
	},
	dispose: function() {
		if (this.keydow || this.keypress || this.keyup) {
			document.removeEventListener("keydown", this.keydown, false);
			document.removeEventListener("keypress", this.keypress, false);
			document.removeEventListener("keyup", this.keyup, false);
		}
		this.keydow = this.keypress = this.keyup = null;
	}
});