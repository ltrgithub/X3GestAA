"use strict";
var helpers = require('syracuse-core/lib/helpers');
var DesktopPage = require("syracuse-ui/lib/page/desktopPage").DesktopPage;

function LegalPage() {}

exports.LegalPage = helpers.defineClass(LegalPage, DesktopPage, {
	loadBox: function($prototype) {
		this.layoutSlot = document.createElement("div");
		this.localize = document.site.localize;

		this.$prototype = $prototype;
		this.$prototype.$properties.$copyright = {
			$type: "application/x-string",
			$isReadOnly: true
		};

		this.$prototype.$properties.$banner = {
			$type: "application/x-string"
		};


		this.$prototype.$links = this.$prototype.$links || {};
		this.$prototype.$links.$eula = {
			$title: document.site.localize.legalEula,
			$url: ""
		};
		this.$prototype.$links.$banner = {
			$isDisabled: true,
			$title: "Legal banner"
		};

		var $skin = "s-site-legal";

		this.$item = {
			$category: "page",
			$title: document.site.localize.legalPageTitle,
			$layout: {
				$layout: {
					$items: [{
						$category: "section",
						$isTitleHidden: true,
						$isEmptyVisible: true,
						$clientId: "s-legal-page-banner"
					}, {
						$isTitleHidden: true,
						$css: $skin + "-copyright-slot",
						$layout: {
							$layoutType: "row",
							$items: [{
								$bind: "$copyright",
								$isTitleHidden: true,
								$css: $skin + "-copyright-item"
							}, {
								$category: "link",
								$bind: "$eula",
								$css: $skin + "-copyright-eula"
							}]
						}

					}, {
						$format: "cards",
						$isTitleHidden: true,
						$isPagerHidden: true,
						$isQuickDesignerDisabled: true,
						$isRowIndexVisible: false,
						$selectByRowIndex: false,
						$isMenuRecordHidden: true,
						$bind: "$resources",
						$layout: {
							$isTitleHidden: true,
							$items: [{
								$layoutType: "stack",
								$items: [{
									$isTitleHidden: true,
									$layout: {
										$layoutType: "row",
										$isFixedWidth: true,
										$widths: "*,*",
										$items: [{
											$bind: "product",
											$isTitleHidden: true,
											$isMenusHidden: true
										}, {
											$bind: "productVersion",
											$isTitleHidden: true
										}]
									}
								}, {
									$isTitleHidden: true,
									$layout: {
										$layoutType: "row",
										$items: [{
											$isTitleHidden: true,
											$layout: {
												$layoutType: "stack",
												$items: [{
													$bind: "serial"
												}, {
													$bind: "licenseeName"
												}, {
													$bind: "licenseeRegistrationNumber"
												}]
											}
										}, {
											$isTitleHidden: true,
											$layout: {
												$layoutType: "stack",
												$items: [{
													$bind: "valEnd"
												}, {
													$bind: "resellerName"
												}, {
													$bind: "resellerRegistrationNumber"
												}]
											}
										}]
									}
								}]
							}]
						}

					}]
				}

			}
		};
		DesktopPage.prototype.loadBox.call(this);
	},
	applyChange: function(newData) {
		// append copyright data
		newData.$copyright = document.site.localize.legalCopyright;

		DesktopPage.prototype.applyChange.call(this, newData);

		// append banner
		this._appendBanner();
	},
	_appendBanner: function() {
		var bannerSlot = document.createElement("div");
		bannerSlot.className = "s-site-legal-banner-slot";
		var bannerItem = document.createElement("div");
		bannerItem.className = "s-site-legal-banner-item";
		bannerSlot.appendChild(bannerItem);

		this.idMap["s-legal-page-banner"].body.appendChild(bannerSlot);
		this.idMap["s-legal-page-banner"].setState({
			$isHidden: false
		});

		document.site.toggleClass(this.idMap["s-legal-page-banner"].domTitle, "s-disabled");
	},
	onMenuClick: function(menuItem) {
		if (menuItem.$bind == "$eula") {
			alert("EULA downloading not set yet");
		}
	}

});