"use strict";
var helpers = require('syracuse-core/lib/helpers');

var DesktopPage = require("syracuse-ui/lib/page/desktopPage").DesktopPage;
var BookmarkItemList = require('./bookmarkItem/bookmarkItemList').BookmarkItemList;
var BookmarkMenuItem = require('./bookmarkItem/bookmarkMenuItem').BookmarkMenuItem;
var BookmarkMenuBlock = require('./bookmarkItem/bookmarkMenuBlock').BookmarkMenuBlock;

function BookmarksPage() {}

exports.BookmarksPage = helpers.defineClass(BookmarksPage, DesktopPage, {
	loadBox: function() {
		this.mainPageDesignerAccess = "unknow";
		DesktopPage.prototype.loadBox.call(this);
	},
	createField: function($field, $item, boxParent, $class) {
		switch ($item.$bind) {
			case "items":
				return new BookmarkItemList();
			case "$singleField":
				switch ($item.$variantItemKey) {
					case "menuItem":
						return new BookmarkMenuItem();
					case "menuBlock":
						return new BookmarkMenuBlock();
				}
				return null;
		}
		return null;
	},
	notifyChangeToServer: function() {
		syra_site.bookmarksManager.notifyChangeToServer(syra_site.deltaManager.cleanServerIndex(helpers.object.clone(this.dataset, true)));
	},
	notifyDataChange: function() {
		this.notifyChangeToServer();
	},
	onMenuClick: function(menuItem) {
		if (menuItem.isBookmarkMenuItem) {
			if (syra_site.bookmarksManager.onLinkLinkClick(menuItem)) {
				if (this.dialogWrapper) {
					this.dialogWrapper.close();
				}
			}
			return false;
		}
		return true;
	},
	dispose: function() {
		syra_site.checkMainPageBookmarkStatus();
		syra_site.bookmarksManager.refreshNavigationPage();
		DesktopPage.prototype.dispose.call(this);
	}
});