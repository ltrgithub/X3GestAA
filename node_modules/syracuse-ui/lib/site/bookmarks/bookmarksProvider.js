"use strict";
var helpers = require('syracuse-core/lib/helpers');

function BookmarksProvider(){
}

exports.BookmarksProvider = helpers.defineClass(BookmarksProvider, null, {
    maxBookmarks: 25,
    save: function($url, $title, $description, params){
        if ($url) {
            var start = $url.indexOf("?");
            if (start) {
                $url = $url.slice(start);
            }
            if (!this.map[$url]) {
                this.map[$url] = {};
                var item = {
                    menuItem: {}
                };
                item.menuItem.$links = {
                    $execute_$details: {
                        $url: $url
                    }
                };
                item.menuItem.description = ($description || "");
                item.menuItem.title = ($title || "");
                if (params) {
                    item.menuItem.params = params;
                }
                this.items.push(item);
                return true;
            }
        }
        else {
            document.site.showDiagnoses({
                $diagnoses: [{
                    $message: $title + " : no $url found",
                    $severity: "warning"
                }]
            });
        }
        return false;
    },
    _getItem: function(url){
        for (var ii = 0; ii < this.items.length; ii++) {
            if (this.items[ii].menuItem && this.items[ii].menuItem.$links.$execute_$details.$url === url) {
                return this.items[ii].menuItem;
            }
        }
        return null;
    },
    onMenuClick: function(menuItem){
        if (menuItem.$bind.split("-")[0] === "bookmark") {
            this.navigate(menuItem);
            return false;
        }
        return true;
    },
    navigate: function(menuItem){
        var workBook, params, item = (menuItem.$item || menuItem);
        if (document.site.fusionGateway && (workBook = document.site.fusionGateway.activatedBook)) {
            var self = this;
            if (item && item.params) { //x3 fct : open via ackcall
                //how to get current field with best way ?
                var sapController = workBook.fusionSite.controller._sapController;
                document.site.mainPage.externalAdapter.onBlockExRpc({
                    field: sapController.getBoundField(sapController._currCtx.ist),
                    call: {
                        proxy: "EXEFNC1",
                        values: [item.params.f, item.params.transaction],
                        callback: self._navigateRep
                    }
                });
            }
            else { //open in new tab
                window.open(item.$url, "_blank");
            }
            
        }
        else {
            document.controller.changeMainPage(item.$links.$execute_$details.$url);
        }
    },
    _navigateRep: function(){
    
    },
    notifyDataChange: function(item, data){
        if (item) {
            switch (item.arrayLevel) {
                case "array":
                    this.items = helpers.object.clone(data, true);
                    //if(this.bookmarksPage) this.bookmarksPage.applyChange({"items":helpers.object.clone(data, true)});
                    this.updateSiteFavorites();
                    break;
                case "cell":
                    this.items[item.articleParent.$serverIndex][item.$item.$variantItemKey].title = data.title;
                    // if(this.bookmarksPage) this.bookmarksPage.applyChange({"items":helpers.object.clone(this.items, true)})
                    this.updateSiteFavorites();
                    break;
            }
        }
    },
    isBookmarkLink: function(url){
        return this.map && this.map[url];
    },
    toggleNavigationMenuItem: function(item){
        item.isBookmark = !item.isBookmark;
        if (item.isBookmark) {
            if (this.items.length < this.maxBookmarks) {
                item.isBookmark = this.save(item.codeMenu.href, item.codeMenu.$title, item.codeMenu.$description);
            }
            else {
                item.isBookmark = false;
            }
        }
        else {
            var url = item.codeMenu.href;
            var start = url.indexOf("?");
            if (start) {
                url = url.slice(start);
            }
            delete this.map[url];
            for (var ii = 0; ii < this.items.length; ii++) {
                if (this.items[ii].menuItem && this.items[ii].menuItem.$links.$execute_$details.$url === url) {
                    this.items.splice(ii, 1);
                    break;
                }
            }
        }
        item.setBookmarkStatus(item.isBookmark);
    },
    dispose: function(){
    
        this.items = this.map = this.clientMap = null;
    },
    initialize: function(){
        this.map = {};
        this.items = [];
        this.items = this._defaultData();
    },
    _defaultData: function(){
        var items = [        /* {
         "menuItem" : {
         "$url" : "?url=%2Ftrans%2Fx3%2Ferp%2FGX3APP%2F%24sessions%3Ff%3DGESPOH~AFF%2F2%2F%2FM%2F",
         "description" : "Supplier orders AFF : Commandes std (tout affiché)",
         "title" : "Supplier orders AFF : Commandes std (tout affiché)",
         "params" : {
         "f" : "GESPOH",
         "transaction" : "AFF"
         },
         "$serverIndex" : 1
         }
         }, {
         "menuItem" : {
         "$url" : "?url=%2Ftrans%2Fx3%2Ferp%2FGX3APP%2F%24sessions%3Ff%3DGESAMK%252F2%252F%252FM%252F",
         "description" : "Screen dictionary",
         "title" : "Screen dictionary",
         "params" : {
         "f" : "GESAMK"
         },
         "$serverIndex" : 2
         }
         },{
         "menuItem": {
         "$url": "?url=%2Fsdata%2Fsyracuse%2Fcollaboration%2Fsyracuse%2Fapplications%3Frepresentation%3Dapplication.%24query",
         "description": "Entity: applications",
         "title": "Applications"
         }
         }*/
        ];
        return items;
    }
});
