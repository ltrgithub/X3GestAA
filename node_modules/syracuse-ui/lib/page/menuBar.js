"use strict";
var helpers = require('syracuse-core/lib/helpers');

function MenuBar(){
}

exports.MenuBar = helpers.defineClass(MenuBar, null, {
    load: function(page){
        this.preferences = document.site.ensurePreferences();
        this.preferences.menuBar = this.preferences.menuBar || {};
        
        page.initializeNewItem(this);
        if (this.preferences.menuBar.isDocked === undefined) {
            this.preferences.menuBar.isDocked = true;
        }
        this._slot = document.createElement("div");
        this._slot.className = this.page.$skin + "-menubar-slot";
        this._slot.style.display = "none";
        this._slot.width = "200px";
        this.$$slot = $(this.page._item.appendChild(this._slot));
        
        this._bar = document.createElement("div");
        this._bar.className = "s-page-menu-bar";
        this.$$bar = $(this._bar);
        this._slot.appendChild(this._bar);
        
        this.appendPickerBar();
        this._body = document.createElement("div");
        this._body.className = "s-page-menu-bar-body";
        this._$$body = $(this._body);
        this._bar.appendChild(this._body);
        this.page.appendArticleMenus(this._body);
        //this._bindEvents(true);
        this.ensureState();
    },
    appendPickerBar: function(){
        var self = this;
        self.resizeBar = document.createElement("a");
        self.resizeBar.className = "s-page-menu-bar-resizer";
        self.openerPicker = document.createElement("a");
        self.openerPicker.className = "s-page-menu-bar-opener";
        self.openerPicker.setAttribute("data-s-picker", "s-bar-collapse");
        self.resizeBar.appendChild(self.openerPicker);
        self._bar.appendChild(self.resizeBar);
        self.openerPickerHeight = $(self.openerPicker).outerHeight();
        self._resizer = document.site.setResizable({
            source: self,
            slot: self._slot,
            dragSpot: null,
            direction: {
                left: true
            },
            resizerSpot: self.resizeBar,
            minWidth: 200,
            onResize: function(resizer, moving){
                if (!moving) {
                    document.site.toggleClass(self.resizeBar, "s-resizing", document.site.resizing);
                    document.site.toggleClass(self.openerPicker, "s-resizing", document.site.resizing);
                }
            }
        });
        self._resizer.isEnabled = !self.preferences.menuBar.isCollapsed;
    },
    hideBar: function(){
        this.isHidden = true;
        if (this._slot) {
            this._slot.style.display = "none";
        }
    },
    onMenuDataFilled: function(menuItem){
        if (!this.isSlotVisible && !this.isHidden) {
            if (menuItem.boxParent.menuGroupRoot) {
                if (menuItem.boxParent.menuGroupRoot.$item.$isMenuPage) {
                    this.isSlotVisible = true;
                    if (!this.page.authoringPage) {
                        this._slot.style.display = "";
                        if (this.page.layoutSlot.style.display != "none") {
                            document.site.resize();
                        }
                    }
                }
            }
        }
    },
    onClickPicker: function(pickerId){
        switch (pickerId) {
            case "s-bar-dockMode":
                this.preferences.menuBar.isDocked = !this.preferences.menuBar.isDocked;
                break;
            case "s-bar-collapse":
                this._resizer.isEnabled = !(this.preferences.menuBar.isCollapsed = !this.preferences.menuBar.isCollapsed);
                break;
        }
        this.ensureState();
    },
    /*_bindEvents: function($bind){
     var self = this;
     if ($bind) {
     self.$$slot.bind("mouseenter mouseleave", function(event){
     clearTimeout(self._closeTimeout);
     if (event.type == "mouseleave" && !self.preferences.menuBar.isCollapsed && !self.preferences.menuBar.isDocked) {
     self._closeTimeout = setTimeout(function(){
     self.preferences.menuBar.isCollapsed = !self.preferences.menuBar.isCollapsed;
     self.ensureState();
     }, 300);
     }
     });
     }
     else {
     if (self.$$slot) {
     self.$$slot.unbind();
     }
     }
     },*/
    ensureState: function(){
        if (!this.isHidden) {
            if (this.preferences.menuBar.isCollapsed) {
                this.openedWidth = this.$$slot.outerWidth();
                this._slot.style.width = "10px";
                this._body.style.display = "none";
                document.site.toggleClass(this.resizeBar, "s-close", true);
                document.site.toggleClass(this.openerPicker, "s-close", true);
                if (!this.preferences.menuBar.isDocked) {
                    this._bar.style.width = "10px";
                }
            }
            else {
                this.resizeBar.style.width = "";
                document.site.toggleClass(this.resizeBar, "s-close", false);
                document.site.toggleClass(this.openerPicker, "s-close", false);
                if (this.preferences.menuBar.isDocked) {
                    this._bar.style.width = "";
                    this._slot.style.width = (this.openedWidth || 200) + "px";
                    this._bar.style.position = "";
                }
                else {
                    this._slot.style.width = "10px";
                    document.site.setZIndex(this._bar);
                    this._bar.style.position = "absolute";
                    this._bar.style.width = "200px";
                    this._bar.style.top = "0px";
                    this._bar.style.right = "0px";
                }
                this._body.style.display = "";
                if (this.isSlotVisible) {
                    this._slot.style.display = "";
                }
            }
            this._resizeWidthPage();
        }
    },
    onWindowResize: function(){
        if (this._bar && this._slot) {
            var height = $(this.page.scrollview).height();
            if (height) {
                this._bar.style.height = height + "px";
                this.resizeBar.style.height = height + "px";
                this.openerPicker.style.top = ((height - this.openerPickerHeight) / 2) + "px";
                this._body.style.height = height + "px";
                if (this.authoringOverlay) {
                    var style = this.authoringOverlay.style;
                    var offset = this.$$bar.offset();
                    style.top = offset.top + "px";
                    style.left = offset.left + "px";
                    style.height = this.$$bar.outerHeight(true) + "px";
                    style.width = this.$$bar.outerWidth(true) + "px";
                }
                this._resizeWidthPage();
            }
        }
    },
    _resizeWidthPage: function(){
        if (this.page.dialogWrapper && !this._onAuthoring) {
            var width = this.page.dialogWrapper.$$dialogSlot.width();
            if (width) {
                this.page.scrollview.style.width = (width - this.$$bar.outerWidth(true)) + "px";
            }
        }
    },
    toggleItemAuthoring: function(enable, isOnPreviewMode){
        if (enable) {
            if (!this.authoringOverlay) {
                this.authoringOverlay = document.createElement("div");
                this.authoringOverlay.className = "s-fusion-bar-overlay";
                document.site.setZIndex(this.authoringOverlay);
                document.site.layoutSlot.appendChild(this.authoringOverlay);
            }
            this._onAuthoring = true;
            this._slot.style.display = this.authoringOverlay.style.display = (isOnPreviewMode && (!this.isHidden && this.isSlotVisible)) ? "" : "none";
            this.onWindowResize();
        }
        else {
            if (this.authoringOverlay) {
                document.site.removeDomChild(this.authoringOverlay);
                delete this.authoringOverlay;
            }
            this._onAuthoring = false;
            this.ensureState();
        }
    },
    dispose: function(){
        //this._bindEvents(false);
        if (this._resizer) {
            this._resizer.dispose();
            this._resizer = null;
        }
        this.$$slot = this._slot = this._bar = this.$$bar = null;
        this._$$body = this._body = this.page = null;
    }
});
