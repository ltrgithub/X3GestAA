"use strict";
var helpers = require('syracuse-core/lib/helpers');

function BarSplitter() {}

exports.BarSplitter = helpers.defineClass(BarSplitter, null, {
	load: function(page) {
		this.page = page;
		this.page.attachToPageResizeListener(true, this);
		this._bar = document.createElement("div");
		this.$$bar = $(this._bar);
		this._bar.className = this.options.$skins.bar;

		this.appendPickerBar();

		this._bar.appendChild(this.barBody);
		this.barSlot.appendChild(this._bar);
		this.onBarBodyAdded();
		this.ensureState();
	},
	onBarBodyAdded: function() {

	},
	appendPickerBar: function() {
		var self = this;
		self._resizeBar = document.createElement("a");
		self._resizeBar.className = self.options.$skins.resizeBar;

		self._openerPicker = document.createElement("a");
		self._openerPicker.className = self.options.$skins.openerPicker;
		self._openerPicker.setAttribute("data-s-picker", "s-bar-collapse");
		self._openerPicker.style.display = "none";
		self._resizeBar.appendChild(self._openerPicker);

		self._bar.appendChild(self._resizeBar);
		self._widgetResizer = document.site.setWidgetResizable({
			source: self,
			slot: self.barSlot,
			dragSpot: null,
			direction: self.options.resizeDirection,
			resizerSpot: self._resizeBar,
			minWidth: 200,
			onResize: function(resizer, moving) {
				if (!moving) {
					document.site.toggleClass(self._resizeBar, "s-resizing", document.site.resizing);
					document.site.toggleClass(self._openerPicker, "s-resizing", document.site.resizing);
				}
			}
		});
		self._widgetResizer.isEnabled = !self.preferences.isCollapsed;
	},
	toggleBar: function(show) {
		this.isHidden = !show;
		if (this.barSlot) {
			this.barSlot.style.display = this.isHidden ? "none" : "";
		}
	},
	ensureState: function() {
		if (!this.isHidden && !this._designing) {
			if (this.preferences.isCollapsed) {
				if (!this.isCollapsed) {
					this.isCollapsed = true;
					this.openedWidth = this.barSlot.style.width;
				}
				this.barSlot.style.width = "";
				this.barBody.style.display = "none";
			} else {
				this.isCollapsed = false;
				if (this.openedWidth) {
					this.barSlot.style.width = this.openedWidth;
				}
				if (!this.preferences.isDocked) {
					document.site.toggleClass(this.barSlot, "s-docked", false);
				}
				this.barBody.style.display = "";
				if (this.isSlotVisible) {
					this.barSlot.style.display = "";
				}
			}
			document.site.toggleClass(this.barSlot, "s-close", this.isCollapsed);
			document.site.toggleClass(this._resizeBar, "s-close", this.isCollapsed);
			document.site.toggleClass(this._openerPicker, "s-close", this.isCollapsed);
			this._resizeDialogPage();
		}
	},
	onWindowResize: function() {
		if (this._bar && this.barSlot) {
			var $$scrollview = $(this.page.scrollview);
			var height = $$scrollview.height();
			if (height) {
				if (this.preferences.isCollapsed != this.isCollapsed) {
					this.ensureState();
				}
				height += $$scrollview.position().top;
				this._bar.style.height = height + "px";
				this._resizeBar.style.height = height + "px";
				this._openerPicker.style.display = "";
				this._openerPicker.style.top = ((height - this._openerPicker.clientHeight) / 2) + "px";
				this.barBody.style.height = height + "px";
				if (this.authoringOverlay) {
					var style = this.authoringOverlay.style;
					var offset = this.$$bar.offset();
					style.top = offset.top + "px";
					style.left = offset.left + "px";
					style.height = this.$$bar.outerHeight(true) + "px";
					style.width = this.$$bar.outerWidth(true) + "px";
				}
				if (this._onResizeBody) {
					this._onResizeBody();
				}
				this._resizeDialogPage();
			}
		}
	},
	collapse: function() {
		this._widgetResizer.isEnabled = !(this.preferences.isCollapsed = !this.preferences.isCollapsed);
		this._onSwitchBarState();
	},
	onClickPicker: function(picker) {
		var $bind = picker.getAttribute("data-s-picker");
		switch ($bind) {
			case "s-bar-dockMode":
			case "s-bar-collapse":
				if ($bind == "s-bar-dockMode") {
					this.preferences.isDocked = !this.preferences.isDocked;
				} else {
					this.collapse();
				}
				this._onSwitchBarState();
				return true;
		}
		return false;
	},
	_onSwitchBarState: function() {
		this.ensureState();
		this.page.onWindowResize();
		this._resizeDialogPage();
	},
	_resizeDialogPage: function() {
		if (this.page.dialogWrapper) {
			var width = this.page.dialogWrapper.$$dialogSlot.width();
			if (width) {
				this.page.scrollview.style.width = (width - this.$$bar.outerWidth(true)) + "px";
				//this.page.scrollview.style.width = (width - (200 + this.barSlot.offsetWidth)) + "px";
			}
		}
	},
	toggleUIDesign: function(enable, isOnPreviewMode) {
		if (enable) {
			if (!this.authoringOverlay) {
				this.authoringOverlay = document.createElement("div");
				this.authoringOverlay.className = "s-fusion-bar-overlay";
				document.site.setZIndex(this.authoringOverlay);
				document.site.layoutSlot.appendChild(this.authoringOverlay);
			}
			this._designing = true;
			this.barSlot.style.display = this.authoringOverlay.style.display = (isOnPreviewMode && (!this.isHidden && this.isSlotVisible)) ? "" : "none";
			this.onWindowResize();
		} else {
			if (this.authoringOverlay) {
				document.site.removeDomChild(this.authoringOverlay);
				delete this.authoringOverlay;
			}
			this._designing = false;
			this.ensureState();
		}
	},
	toggleAutoFloat: function(isAutoFloat) {
		if (isAutoFloat) {
			this.isAutoFloat = isAutoFloat;
			if (this.preferences.isDocked) {
				this.preferences.isDocked = false;
				this.preferences.isCollapsed = true;
				this.ensureState();
			}
		} else {
			if (this.isAutoFloat) {
				this.isAutoFloat = isAutoFloat;
				if (!this.preferences.isDocked) {
					this.preferences.isDocked = true;
					this.preferences.isCollapsed = false;
					this.ensureState();
				}
			}
		}
	},
	dispose: function() {
		if (this._widgetResizer) {
			this._widgetResizer.dispose();
			this._widgetResizer = null;
		}
		if (this.page) {
			this.page.attachToPageResizeListener(false, this);
		}
		if (this.authoringOverlay) {
			document.site.removeDomChild(this.authoringOverlay);
			delete this.authoringOverlay;
		}
		this.$$bar = this.page = this.barSlot = this.barBody = this._bar = null;
		this._resizeBar = this._openerPicker = null;
	}

});