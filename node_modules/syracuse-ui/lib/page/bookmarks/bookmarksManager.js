"use strict";
var helpers = require('syracuse-core/lib/helpers');
var BookmarksPage = require("./bookmarksPage").BookmarksPage;
var _dialog;

var _dataset, _moreBtn, _morePopupBody, _addBtn, _manageBtn, _buttonsSlot, _buttons, _morePopupDlg;
var _lastCheckedPage;
var _count, _fusionMenuItems, _syracuseMenuItems;

function _refreshItems(items) {
	for (var ii = 0, jj = items.records.length; ii < jj; ii++) {
		var record = items.records[ii];
		if (record.singleField.$variantItemKey == "menuItem") {
			exports.checkNavigationMenuItemBookMark(record.singleField.variantItem);
		} else {
			_refreshItems(record.singleField.variantItem.record.itemsField);
		}

	}
}

exports.refreshNavigationPage = function() {
	if (syra_site.mainPage && syra_site.mainPage.isNavigationPage) {
		var page = syra_site.mainPage;
		if (!page.isAdminMode) {
			var modules = page.boundFields && page.boundFields.modules;
			if (modules) {
				for (var ii = 0, jj = modules.length; ii < jj; ii++) {
					var module = modules[ii];
					for (var mm = 0, kk = module.records.length; mm < kk; mm++) {
						var subModules = module.records[mm].subModulesItem;
						if (subModules) {
							for (var pp = 0, nn = subModules.records.length; pp < nn; pp++) {
								_refreshItems(subModules.records[pp].itemsField);
							}
						}

					}
				}
			}
		}
	}
};

function _refreshManager() {
	if (_dialog) {
		var items = helpers.object.clone(_dataset.items, true);
		_dialog._content.applyChange({
			items: items
		});
		_dialog.resizeDialog();
	}
}

function _defineMenuItemLinks() {
	return {
		$select: {
			$title: "Add",
			$variants: {
				menuItem: {
					$title: syra_local.bookmarksSelectMenu,
					$url: "/sdata/syracuse/collaboration/syracuse/menuItems?representation=menuItem.$select"
				}
			}
		}
	};
}

function _defineMenuItem() {
	return {
		$type: "application/x-reference",
		$capabilities: "reorder,delete",
		$item: {
			$value: "{title}",
			$key: "{$uuid}",
			$properties: {
				title: {
					$type: "application/x-string"
				}
			}
		}
	};
}

function _onManagerClick() {
	var pageSlot = document.createElement("div");
	pageSlot.className = "s-bookmarks-viewer";
	syra_site.layoutSlot.appendChild(pageSlot);
	_dialog = syra_site.dialogManager.openPage(syra_site, {
		onClose: function(isCanceled, dispose) {
			_dialog = null;
			return true;
		},
		$itemPage: {
			$pageCategoryClass: BookmarksPage,
			layoutSlot: pageSlot,
			$category: "page",
			$facet: "$bookmarks",
			$representation: {
				$prototype: {
					$type: "application/json",
					$title: syra_local.bookmarksTitle,
					$properties: {
						items: {
							$type: "application/x-array",
							$capabilities: "reorder",
							$links: _defineMenuItemLinks(),
							$item: {
								$type: "application/x-variant",
								$variants: {
									menuItem: _defineMenuItem(),
									menuBlock: {
										$type: "application/x-object",
										$capabilities: "append,reorder,delete",
										$item: {
											$value: "{title}",
											$key: "{$uuid}",
											$id: "menuSubblock",
											$properties: {
												title: {
													$type: "application/x-string"
												},
												items: {
													$type: "application/x-array",
													$capabilities: "reorder",
													$links: _defineMenuItemLinks(),
													$item: {
														$type: "application/x-variant",
														$variants: {
															menuItem: _defineMenuItem(),
															menuBlock: {
																$type: "application/x-object",
																$capabilities: "append,reorder,delete",
																$item: {
																	$prototype: "#menuSubblock",
																	$type: "application/x-pointer"
																}
															}
														}

													}

												}
											}
										}
									}
								}
							}
						}
					}
				},
				$article: {
					$layout: {
						$items: [{
							$layout: {
								$items: [{
									$isEditMode: true,
									$bind: "items",
									$skin: "s-bookmarks",
									$layout: {
										$items: [{
											$bind: "menuItem"
										}]
									}
								}]
							}
						}]
					}
				}
			}
		}
	});
	_refreshManager();
}

exports.dispose = function() {
	_resetLinks();
	_dialog && _dialog.dispose();
	syra_menus.button.dispose(_moreBtn);
	syra_menus.button.dispose(_addBtn);
	syra_menus.button.dispose(_manageBtn);
	_dataset = _moreBtn = _morePopupBody = _addBtn = _manageBtn = _buttonsSlot = _buttons, _morePopupDlg = _dialog = null;
};

function _resetLinks() {
	_lastCheckedPage = null;
	_count = 0;
	_fusionMenuItems = {};
	_syracuseMenuItems = {};
	for (var ii = 0, jj = _buttons.length; ii < jj; ii++) {
		syra_menus.button.dispose(_buttons[ii]);
	}
	_buttons = [];
}


function _onLinkClick(event, btn) {
	!this.$isDisabled && exports.onLinkClick(this.menuItem);
}

function _addLineLinks(items) {
	if (items) {
		var selectedEndpoint = syra_site.userProfile.dataset.selectedEndpoint;
		for (var ii = 0, jj = items.length; ii < jj; ii++) {
			var item = items[ii];
			var btn;
			if (item.menuItem) {
				if (item.menuItem.$url) {
					btn = syra_menus.button.add({
						parent: syra_site,
						slot: _buttonsSlot,
						text: item.menuItem.title || item.menuItem.description || "???",
						title: item.menuItem.description,
						css: "s-bookmarks-bar-link",
						btnclick: _onLinkClick,
						menuItem: item.menuItem
					});
					if (item.menuItem.$hasSeparator) {
						btn.hasSeparator = true;
						btn.link.className += " s-separator";
					}
					var seg = item.menuItem.urlSegment = syra_url.parse(item.menuItem.$url, true);
					if (seg.host) {
						//set relative url
						seg.isSyracuse = true;
						seg.uri = seg.uri.slice(seg.uri.indexOf(seg.host) + seg.host.length);
						seg.$url = seg.$url.slice(seg.$url.indexOf(seg.host) + seg.host.length);
						seg.host = null;
					}
					if (syra_url.replaceSegmentEndpoint(seg, selectedEndpoint, true)) {
						item.menuItem.$url = syra_url.build(seg);
						btn.isBookmarkEnabled = true;
					} else {
						if (seg.endpointSeg && seg.endpointSeg.application == "syracuse" && seg.endpointSeg.contract == "collaboration") {
							btn.isBookmarkEnabled = true;
						}
					}
					if (seg.isFusion) {
						_fusionMenuItems[seg.fusionParams.fullCode] = item.menuItem;
					} else {
						(_syracuseMenuItems[item.menuItem.urlSegment.uri] = _syracuseMenuItems[seg.uri] || []).push(item.menuItem);
					}

					syra_url.history.setHref({
						$url: item.menuItem.$url,
						domItem: btn.link
					});
					_count++;

					_buttons.push(btn);
				} else {
					items.splice(ii, 1); //remove old separator
					ii--;
					jj--;
				}
			} else {
				if (item.menuBlock && !_addLineLinks(item.menuBlock.items)) {
					return false;
				}
			}
		}
	}
	return true;
}

exports.onLinkClick = function(menuItem) {
	var workBook = syra_site.fusionGateway && syra_site.fusionGateway.activatedBook;
	var target;
	if (workBook) {
		if (menuItem.urlSegment.fusionParams) {
			//x3 fct : open via ackcall
			//how to get current field with best way ?
			var sapController = workBook.fusionSite.controller._sapController;
			if (sapController) {
				syra_site.mainPage.externalAdapter.onBlockExRpc({
					field: sapController.getBoundField(sapController._currCtx.ist),
					call: {
						proxy: "EXEFNC1",
						values: [menuItem.urlSegment.fusionParams.functionCode, menuItem.urlSegment.fusionParams.transaction],
						callback: function() {

						}
					}
				});
			}
		}
		return;
		//target = "blank";
	}
	syra_url.history.load(menuItem.urlSegment.$url, target);
};


function _toggleButton(btn, isOn) {
	syra_menus.button.setText(btn, isOn ? syra_local.bookmarksRemove : syra_local.bookmarksAdd, isOn ? "bookmark_on" : "bookmark_off");
}

function _deleteMenuItem(deletedItem, items) {
	var count = 0;
	items = items || _dataset.items;
	for (var ii = 0, jj = items.length; ii < jj; ii++) {
		var item = items[ii];
		if (item.menuItem == deletedItem) {
			items.splice(ii, 1);
			return true;
		} else {
			if (item.menuBlock && item.menuBlock.items && _deleteMenuItem(deletedItem, item.menuBlock.items)) {
				return true;
			}
		}
	}
}

exports.onNavigationMenuItemPickerClick = function(navigationMenuItem) {
	if (!navigationMenuItem.isBookmark) {
		if (!_findMenuItem(navigationMenuItem.urlSegment)) {
			navigationMenuItem.isBookmark = true;
			_dataset.items.push({
				menuItem: {
					$url: navigationMenuItem.urlSegment.$url,
					description: navigationMenuItem.codeMenu.$description || "",
					title: navigationMenuItem.codeMenu.$title || ""
				}
			});
		}
	} else {
		navigationMenuItem.isBookmark = false;
		var menuItem = _findMenuItem(navigationMenuItem.urlSegment);
		if (menuItem) {
			_deleteMenuItem(menuItem);
		}
	}
	_toggleButton(navigationMenuItem.bookmarkBtn, navigationMenuItem.isBookmark);
	exports.notifyChangeToServer();
};

function _findMenuItem(urlSegment, items, deleteIfFound) {
	var menuItem;
	if (_count) {
		if (urlSegment.fusionParams) {
			menuItem = _fusionMenuItems[urlSegment.fusionParams.fullCode];
		} else {
			var menuItems = _syracuseMenuItems[urlSegment.uri];
			if (menuItems) {
				for (var ii = menuItems.length - 1; !menuItem && ii >= 0; ii--) {
					var seg2 = menuItems[ii].urlSegment;
					if (!urlSegment.params && !seg2.params) {
						menuItem = menuItems[ii];
					} else {
						if (urlSegment.params && seg2.params) {
							var keys1 = Object.keys(urlSegment.params);
							var keys2 = Object.keys(seg2.params);
							if (keys1.length == keys2.length) {
								for (var mm = keys1.length - 1; mm >= 0; mm--) {
									if (urlSegment.params[keys1[mm]] != seg2.params[keys1[mm]]) {
										break;
									}
								}
								if (mm < 0) {
									menuItem = menuItems[ii];
								}
							}
						}
					}
				}
			}
		}
	}
	return menuItem;
}

exports.checkNavigationMenuItemBookMark = function(navigationMenuItem) {
	navigationMenuItem.urlSegment = syra_url.parse(navigationMenuItem.codeMenu.$url);
	syra_url.replaceSegmentEndpoint(navigationMenuItem.urlSegment, syra_site.userProfile.dataset.selectedEndpoint, true);
	if (_findMenuItem(navigationMenuItem.urlSegment)) {
		navigationMenuItem.isBookmark = true;
		_toggleButton(navigationMenuItem.bookmarkBtn, navigationMenuItem.isBookmark);
	} else {
		if (navigationMenuItem.isBookmark) {
			navigationMenuItem.isBookmark = false;
			_toggleButton(navigationMenuItem.bookmarkBtn, navigationMenuItem.isBookmark);
		}
	}
};

exports.notifyChangeToServer = function(dataset) {
	var userProfile = syra_site.userProfile;
	_dataset = dataset || _dataset;
	syra_controller.callServer(userProfile, {
		$location: {
			$url: syra_site.expressionMaker.parse(userProfile, userProfile.$menus.$bookmarks.$url)
		},
		data: {
			$etag: _dataset.$etag,
			content: _dataset
		},
		method: "PUT",
		$etag: _dataset.$etag
	}, function(data, response, requestUrl) {
		if (!userProfile.disposed) {
			exports.refresh();
			_refreshManager();
			exports.refreshNavigationPage();
		}
	});
};

exports.loadBookmarks = function() {
	syra_controller.callServer(syra_site.userProfile, {
		$location: {
			$url: syra_site.expressionMaker.parse(syra_site.userProfile, syra_site.userProfile.$menus.$bookmarks.$url)
		},
	}, function(data, response, requestUrl) {
		if (!syra_site.userProfile.disposed) {
			_dataset = data.content || {};
			_dataset.items = _dataset.items || [];
			exports.refresh();
		}
	});
};

exports.refresh = function() {
	syra_site.dom.empty(_buttonsSlot);
	syra_site.dom.empty(_morePopupBody);
	syra_menus.button.visibility(_moreBtn, false);
	_resetLinks();
	_addLineLinks(_dataset.items);
	exports.checkMainPageStatus();
};


function _onAddClick() {
	var title, urlSegment, description;
	var page = syra_site.fusionGateway.getActivatedSheet();
	if (page) {
		var fct = page.$fusionPageMeta.winModel.getFctName();
		if (fct.name && (page.$fusionPageMeta.winModel._mdata.type == 1 || page.$fusionPageMeta.winModel._mdata.type == 2)) {
			if (page.openerUrlSegments.fusionParams.functionCode != fct.name) {
				urlSegment = helpers.object.clone(page.openerUrlSegments, true);
				syra_url.replaceFusionCode(urlSegment, fct.name);
				syra_url.build(urlSegment);
				title = page.getTitle();
			} else {
				urlSegment = page.openerUrlSegments;
				title = fct.title;
			}
			description = syra_local.nvpFunction + ": " + page.openerUrlSegments.fusionParams.functionCode;
		}
	} else {
		page = syra_site.mainPage;
		if (page && page.openerUrlSegments) {
			urlSegment = page.openerUrlSegments;
			title = page.getTitle();
			if (page.$prototype.$representation) {
				description = syra_local.nvpEntity + ": " + page.$prototype.$representation;
				/*if (page.$prototype.$representation != helpers.string.pluralize(page.$prototype.$representation || "")) {
                 description += " (" + syra_local.nvpRepresentation + ": " + page.$prototype.$representation + ")";
                 }*/
			}
		}
	}
	if (urlSegment) {
		var menuItem = _findMenuItem(urlSegment);
		if (menuItem) {
			_deleteMenuItem(menuItem);
		} else {
			menuItem = {
				$url: urlSegment.$url,
				title: title
			};
			if (description) {
				menuItem.description = description;
			}
			_dataset.items.push({
				menuItem: menuItem
			});
		}
		exports.refreshNavigationPage();
		exports.notifyChangeToServer();

	}
}



exports.checkMainPageStatus = function() {
	var activePage = syra_site.fusionGateway.getActivatedSheet() || syra_site.mainPage;
	if (activePage && !activePage.disposed && activePage != _lastCheckedPage) {
		_lastCheckedPage = activePage;
		var isBookmarkEnabled;
		if (activePage) {
			isBookmarkEnabled = activePage.isBookmarkEnabled;
			if (isBookmarkEnabled === undefined) {
				isBookmarkEnabled = activePage.$item.$isBookmarkEnabled;
			}
			if (isBookmarkEnabled === undefined) {
				isBookmarkEnabled = activePage.$facet != "$edit";
			}
		}
		var isOn = false;
		var functionfusion;
		var menuItem;
		if (activePage) {
			var urlSegment;
			if (activePage.isFusionPage) {
				functionfusion = activePage.$fusionPageMeta && activePage.$fusionPageMeta.winModel.getFctName();
				if (functionfusion) {
					urlSegment = {
						isFusion: true,
						fusionParams: {
							fullCode: functionfusion.name,
							functionCode: functionfusion.name,
							transaction: functionfusion.transaction
						}
					};
					if (functionfusion.transaction) {
						urlSegment.fusionParams.fullCode += "~" + functionfusion.transaction;
					}
					//(urlSegment.fusionParams.transaction == item.menuItem.urlSegment.transaction)) {
				}
			} else {
				urlSegment = syra_url.history.getUrlSegment(activePage.openerUrlSegments.$url);
			}
			menuItem = urlSegment && _findMenuItem(urlSegment);
		}
		isOn = !! menuItem;
		for (var ii = 0, jj = _buttons.length; ii < jj; ii++) {
			var btn = _buttons[ii];
			if (btn.menuItem) {
				syra_site.dom.toggleClass(btn.link, "s-on", btn.bookMarkOn = menuItem && btn.menuItem == menuItem);
				syra_menus.button.disable(btn, !btn.isBookmarkEnabled || ((activePage && activePage.isFusionPage) && !btn.menuItem.urlSegment.isFusion));
			}
		}
		syra_menus.button.visibility(_manageBtn, _count);
		if (_count >= syra_site.$maxBookmarks) {
			isBookmarkEnabled = false;
		}
		syra_menus.button.disable(_addBtn, !isBookmarkEnabled);
		_toggleButton(_addBtn, isOn);
		exports.onResize();
	}
};


exports.onResize = function() {
	var maxW = syra_site.headerBottom.clientWidth;
	_buttonsSlot.style.width = Math.max(0, Math.max(0, maxW - _buttonsSlot.getBoundingClientRect().left) - _moreBtn.link.clientWidth) + "px";
	if (_buttonsSlot.clientWidth <= (_buttonsSlot.scrollWidth - 2)) {
		for (var ii = _buttons.length - 1; ii >= 0; ii--) {
			var btn = _buttons[ii];
			if (!btn.isInMore) {
				btn.isInMore = true;
				var css = "s-bookmarks-bar-link-in-more";
				if (btn.hasSeparator) {
					css += " s-separator";
				}
				if (btn.bookMarkOn) {
					css += " s-on";
				}
				btn.link.className = css;
				if (btn.$isDisabled || !btn.isBookmarkEnabled) {
					syra_menus.button.disable(btn, true);
				}
				_morePopupBody.insertBefore(btn.link, _morePopupBody.firstChild);
			}
			if (_buttonsSlot.clientWidth >= (_buttonsSlot.scrollWidth - 2)) {
				break;
			}
		}
	} else {
		if (_morePopupBody.children.length) {
			for (var ii = 0, jj = _buttons.length; ii < jj; ii++) {
				var btn = _buttons[ii];
				if (btn.isInMore) {
					btn.link.className = "s-bookmarks-bar-link";
					if (btn.$isDisabled || !btn.isBookmarkEnabled) {
						syra_menus.button.disable(btn, true);
					}
					if (btn.bookMarkOn) {
						btn.link.className += " s-on";
					}
					_buttonsSlot.appendChild(btn.link);
					if (_buttonsSlot.clientWidth <= (_buttonsSlot.scrollWidth - 2)) {
						btn.link.className = "s-bookmarks-bar-link-in-more";
						if (btn.bookMarkOn) {
							btn.link.className += " s-on";
						}
						if (btn.$isDisabled || !btn.isBookmarkEnabled) {
							syra_menus.button.disable(btn, true);
						}
						_morePopupBody.insertBefore(btn.link, _morePopupBody.firstChild);
						break;
					} else {
						btn.isInMore = false;
					}
					if (btn.hasSeparator) {
						btn.link.className += " s-separator";
					}
				}
			}
		}
	}
	syra_menus.button.visibility(_moreBtn, _morePopupBody.children.length > 0);
};

function _onMoreClick() {
	if (!_morePopupDlg) {
		_morePopupDlg = syra_site.dialogManager.openPopup(syra_site, {
			content: {
				id: ++syra_site._childItemOffset
			},
			slot: _morePopupBody,
			picker: _moreBtn.link,
			position: {
				my: "left top",
				at: "left bottom",
				of: $(_moreBtn.link)
			},
			onClose: function() {
				setTimeout(function() {
					_morePopupDlg = null;
				}, 200);
			}
		});
	} else {
		_morePopupDlg.close();
	}
}

exports.load = function() {
	_dataset = {
		items: []
	};

	_buttons = [];
	_addBtn = syra_menus.button.add({
		parent: syra_site,
		slot: syra_site.headerBottom,
		text: syra_local.bookmarksAdd,
		css: "s-bookmarks-bar-btn",
		iconOnly: true,
		fontIcon: "bookmark_off",
		btnclick: _onAddClick
	});

	_manageBtn = syra_menus.button.add({
		parent: syra_site,
		slot: syra_site.headerBottom,
		text: syra_local.bookmarksManage,
		css: "s-bookmarks-bar-btn",
		iconOnly: true,
		fontIcon: "expand",
		btnclick: _onManagerClick
	});
	syra_menus.button.visibility(_manageBtn, false);

	_buttonsSlot = document.createElement("div");
	_buttonsSlot.id = "s-bookmarks-bar-links";
	syra_site.headerBottom.appendChild(_buttonsSlot);

	_moreBtn = syra_menus.button.add({
		parent: syra_site,
		slot: syra_site.headerBottom,
		text: syra_local.bookmarksMore,
		title: syra_local.bookmarksMoreTooltip,
		css: "s-bookmarks-more-btn",
		btnclick: _onMoreClick
	});
	syra_menus.button.visibility(_moreBtn, false);

	_morePopupBody = document.createElement("div");
	_morePopupBody.className = "s-mn-popup-body";
};