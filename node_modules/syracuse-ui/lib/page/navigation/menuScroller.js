"use strict";
var helpers = require('syracuse-core').helpers;

function MenuScroller() {}

MenuScroller.prototype.onClick = function() {
	if (this.scrollDirection == "down")
		this.parent.scrollerSlot.scrollTop += this.parent.scrollIncrement;
	else
		this.parent.scrollerSlot.scrollTop -= this.parent.scrollIncrement;
};
MenuScroller.prototype.addScrollButton = function(direction, menuSlot) {
	var $button = {
		parent: this,
		css: 's-mega-scroll-' + direction + '-btn',
		scrollDirection: direction,
		click: this.onClick
	};

	var scrollButton = syra_button.add($button);

	if (menuSlot) {
		menuSlot.appendChild(scrollButton.link);
	}

	return scrollButton;
};
MenuScroller.prototype.setScrollerState = function(enable) {
	syra_dom.toggleClass(this.scrollUpButton.link, "s-mega-disable-scroll", !enable);
	syra_dom.toggleClass(this.scrollDownButton.link, "s-mega-disable-scroll", !enable);
};
MenuScroller.prototype.revalidate = function(clientHeight) {
	this.scrollDownButton.link.style.top = clientHeight - this.scrollDownButton.link.clientHeight + "px";

	this.scrollIncrement = this.scrollerSlot.childNodes.length > 1 ? $(this.scrollerSlot.childNodes[1]).outerHeight(true) : 0;

	this.setScrollerState(this.scrollerSlot.lastChild.offsetTop + this.scrollIncrement > clientHeight);
};

exports.addScroller = function(page, menuSlot) {
	var menuScroller = syra_item.initialize(page, new MenuScroller());

	menuScroller.scrollUpButton = menuScroller.addScrollButton('up', menuSlot);

	menuScroller.scrollerSlot = syra_dom.div("s-mega-scroller", menuSlot);

	menuScroller.scrollDownButton = menuScroller.addScrollButton('down');
	menuSlot.appendChild(menuScroller.scrollDownButton.link);

	return menuScroller;
};