"use strict";
var helpers = require('syracuse-core/lib/helpers');

function ModuleBuilder() {}

exports.ModuleBuilder = helpers.defineClass(ModuleBuilder, null, {
	initialize: function(list) {
		this.list = list;
		this.emptyMessage = syra_local.nvpNoModule;
		list.$item.$isTopLabelAlignment = true;
		if (!list.$item.$layout || !list.$item.$layout.$items) {
			list.$item.$layout = list.defineDefaultCard().$layout;
		}
		list.$item.$alternateStyle = false;
	},
	endInitiallize: function() {},
	isDraggable: function(target, event) {
		return this.list.isReorderRecordDraggable(target, event);
	},
	list_onAfterSetDataValue: function() {
		if (this.list.records.length && !this.list.selector.getSelectedRecord()) {
			this.list.selector.selectRecord(this.list.recordsMap[this.list.page.$profilePreference.$module] || this.list.records[0], true);
		}
	},
	list_onAfterDraw: function() {
		this.list.body = this.list._core;
		this.list._dataValue.style.overflow = "auto";
		this.list.$skin = this.list.$item.$skin || "s-cards";
		this.list.applyDesignMeta(this.list.$item, false);
		this.list.addSelector();
		this.list.applyCapabilities();
		syra_fields.ensureLayoutMode(this.list);
		this.list.layoutSlot.appendChild(this.list.domItem);
		syra_dd.addToColResizers(this.list, true);
	},
	record_onBeforeLoad: function(record, initData, isCreateAction) {
		record.isModuleRecord = true;
		record.$defaultSkinSection = record.$defaultSkinBlock = this.list.$item.$skinCard || "s-h3";
	},
	record_onItemInOut: function(record, onEnter, event) {
		this.list.selector && record.highlightOnEnter(onEnter, event);
	},
	record_reorder: function(record, target, isAfter) {
		if (target) {
			target.domItem.parentNode.insertBefore(record.domItem, isAfter ? target.domItem.nextSibling : target.domItem);
		} else {
			if (isAfter) {
				this.list.body.appendChild(record.domItem);
			} else {
				this.list.body.insertBefore(record.domItem, this.list.body.firstChild);
			}
		}
	},
	record_dispose: function(record) {
		syra_dom.remove(record.subModulesHead);
		syra_dom.remove(record.subModulesAdminBodySep);
		syra_dom.remove(record.subModulesBody);
		syra_dom.remove(record.subModulesSlot);
	},

	record_draw: function(record) {
		record.$useDeletePicker = true;
		record.$item.$isPickerMenuHidden = true;
		record.$isVerticalDirection = true;
		record.domItem = document.createElement("div");
		record.$skin = record.page.isAdminMode ? "s-nav-admin-module" : "s-nav-module";
		record.domItem.className = record.$skin;
		record.domItem.syrainout = record.domItem.syraItem = record.id;
		record.dataSlot = record.body = document.createElement("div");
		record.icon = document.createElement("div");
		record.icon.className = record.$skin + "-icon";
		record.domItem.appendChild(record.icon);

		record.body.className = record.$skin + "-title";
		record.domItem.appendChild(record.body);
		if (record.page.isAdminMode) {
			record.menusSlot = document.createElement("div");
			record.menusSlot.className = "s-ldpm-record-btns";
			record.domItem.appendChild(record.menusSlot);
			this.list.addReorder(record);
		}
		if (this.list.selector.isRowMode) {
			record.body.syraOnClick = "onSelectorClick";
			record.body.className += " s-list-selector-row";
		}
		record.cardItem = record.page.addItem(record.body, {
			$bind: "title",
			$isMenusHidden: true,
			$isDetailLinkDisabled: true,
			$category: "field",
			$isEditMode: record.$isEditMode,
			$inplace: true
		}, record);
		this.list._core.appendChild(record.domItem);
		this.list.applyCapabilitiesToRecord(record);
	},

	record_onAfterApplyChange: function(record, metaData) {
		if (record.dataset.description && record.dataset.description != record.dataset.title) {
			record.domItem.title = record.dataset.description;
		}
		if (record.dataset.code && record.icon) {
			record.icon.style.backgroundImage = "url('" + syra_site.$iconPath + "modules/s_module_" + record.dataset.code.toLowerCase() + ".png')";
		}
		if (record.page.isAdminMode) {
			var titleMeta = metaData && metaData.$properties && metaData.$properties.title;
			if (titleMeta) {
				titleMeta.$isDisabled = true;
			}
			if (titleMeta && titleMeta.$isDisabled && record.boundFields.title && record.boundFields.title.length) {
				syra_dom.toggleClass(record.boundFields.title[0]._dataValue, "s-disabled", false);
			}
		}
	},
	record_onSelect: function(record, selected) {
		var page = record.page;
		syra_dom.toggleClass(record.domItem, "s-list-record-selected", selected);
		if (page.isAdminMode) {
			if (selected) {
				page.selectedModule = record;
				if (!record.subModulesItem) {
					record.subModulesHead = document.createElement("div");
					record.subModulesHead.className = "s-nav-admin-submodules-head";

					record.subModulesAdminTitleList = document.createElement("div");
					record.subModulesHead.appendChild(record.subModulesAdminTitleList).className = "s-nav-admin-submodules-titles";

					record.subModulesAdminBodySep = document.createElement("div");
					record.subModulesAdminBodySep.className = "s-nav-admin-body-sep";
					record.subModulesBody = document.createElement("div");
					record.subModulesBody.className = "s-nav-admin-submodules-body";
					record.subModulesItem = page.addItem(record.subModulesBody, {
						$isTitleHidden: true,
						$bind: "submodules"
					}, record);
					page.adminTableBody.appendChild(record.subModulesHead);
					page.adminTableBody.appendChild(record.subModulesAdminBodySep);
					page.adminTableBody.appendChild(record.subModulesBody);
				}
				page.refreshExpandAllLinks(page.selectedSubModuleRecord = record.selectedSubModuleRecord, true);
			} else {
				if (page.selectedModule == record) {
					page.selectedModule = null;
				}
			}
			syra_dom.hide(record.subModulesHead, !selected);
			syra_dom.hide(record.subModulesAdminBodySep, !selected);
			syra_dom.hide(record.subModulesBody, !selected);
		} else {
			if (selected) {
				if (!record.subModulesItem) {
					record.subModulesSlot = document.createElement("div");
					record.subModulesSlot.className = "s-nav-submodules-slot";
					record.subModulesBody = document.createElement("div");
					record.subModulesBody.className = "s-nav-submodules-body";
					record.subModulesItem = page.addItem(record.subModulesBody, {
						$isTitleHidden: true,
						$bind: "submodules"
					}, record);
					record.subModulesSlot.appendChild(record.subModulesBody);
					page.layoutContent.domItem.appendChild(record.subModulesSlot);
				}
			}
			syra_dom.hide(record.subModulesSlot, !selected);
		}
		if (selected && page.isPageLoaded) {
			page.$profilePreference.$module = record.dataset.$uuid;
			syra_preference.profile.save("navigationpage", page.$profilePreference);
			syra_site.ensureArticleVisibility(page);
			record.scrollToRecord();
		}
	},
	dispose: function() {
		if (this.list) {
			syra_dd.addToColResizers(this.list, false);
			syra_dom.empty(this.list._core);
		}
	}
});