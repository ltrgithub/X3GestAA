"use strict";
var helpers = require('syracuse-core/lib/helpers');

function _onDisposeRecord(record) {
	syra_site.dom.removeChild(record.subModulesHead);
	syra_site.dom.removeChild(record.subModulesAdminBodySep);
	syra_site.dom.removeChild(record.subModulesBody);
	syra_site.dom.removeChild(record.subModulesSlot);
}

function ModuleBuilder() {}

exports.ModuleBuilder = helpers.defineClass(ModuleBuilder, null, {
	initialize: function(list) {
		this.list = list;
		this.emptyMessage = syra_local.nvpNoModule;
		list.$item.$isTopLabelAlignment = true;
		if (!list.$item.$layout || !list.$item.$layout.$items) {
			list.$item.$layout = list.defineDefaultCard().$layout;
		}
		list.$item.$alternateStyle = false;
	},
	endInitiallize: function() {},
	isDraggable: function(target, event) {
		return this.list.isReorderRecordDraggable(target, event);
	},
	list_onItemInOut: function(onEnter, event, target) {

	},
	list_onAfterSetDataBind: function() {
		if (this.list.records.length && this.list.selector.uuid == undefined) {
			this.list.selector.selectRecord(this.list.page.preferences.$module, true, true);
		}
	},
	list_onAfterDraw: function() {
		this.list.body = this.list._core;
		this.list._dataValue.style.overflow = "auto";
		this.list.$skin = this.list.$item.$skin || "s-cards";
		this.list.applyDesignMetaData(this.list.$item, false);
		this.list.loadSelector();
		this.list.capabilityMaker.apply(this.list);
		this.list.ensureLayoutMode();
		this.list.layoutSlot.appendChild(this.list.domItem);
		syra_dd.addToColResizers(this.list, true);
	},
	record_onBeforeLoad: function(record, initData, isCreateAction) {
		record.isModuleRecord = true;
		record.$defaultSkinSection = record.$defaultSkinBlock = this.list.$item.$skinCard || "s-h3";
	},
	record_onItemInOut: function(record, onEnter, event) {
		if (this.list.selector) {
			syra_site.dom.toggleClass(record.domItem, "s-record-enter", onEnter);
			this.list.selector.onItemInOut(record, onEnter, event);
		}
	},
	record_reorder: function(record, target, isAfter) {
		if (target) {
			target.domItem.parentNode.insertBefore(record.domItem, isAfter ? target.domItem.nextSibling : target.domItem);
		} else {
			if (isAfter) {
				this.list.body.appendChild(record.domItem);
			} else {
				this.list.body.insertBefore(record.domItem, this.list.body.firstChild);
			}
		}
	},
	record_draw: function(record) {
		record.onDisposeRecord = _onDisposeRecord;
		record.$useDeletePicker = true;
		record.$item.$isPickerMenuHidden = true;
		record.$isVerticalDirection = true;
		record.domItem = document.createElement("div");
		record.$skin = record.page.isAdminMode ? "s-nav-admin-module" : "s-nav-module";
		record.domItem.className = record.$skin;
		record.domItem.setAttribute("data-s-record", record.domItem.syraRecord = record.$uuid);
		record.domItem.syrainout = record.domItem.syraItem = record.id;
		record.dataSlot = record.body = document.createElement("div");
		record.icon = document.createElement("div");
		record.icon.className = record.$skin + "-icon";
		record.domItem.appendChild(record.icon);

		record.body.className = record.$skin + "-title";
		record.domItem.appendChild(record.body);
		if (record.page.isAdminMode) {
			record.menusSlot = record.domItem;
			this.list.capabilityMaker.addReorder(record);
		}
		if (this.list.selector.isRowMode) {
			record.body.syraOnClick = "onSelectorClick";
			record.body.className += " s-list-selector-row";
		}
		record.cardItem = record.page.loadNewItem(record.body, {
			$bind: "title",
			$isMenusHidden: true,
			$isDetailLinkDisabled: true,
			$category: "field",
			$isEditMode: record.$isEditMode,
			$inplace: true
		}, record);
		this.list._core.appendChild(record.domItem);
		this.list.capabilityMaker.applyToRecord(record);
	},
	record_onAfterApplyChange: function(record, metaData) {
		if (record.dataset.description && record.dataset.description != record.dataset.title) {
			record.domItem.title = record.dataset.description;
		}
		if (record.dataset.code && record.icon) {
			record.icon.style.backgroundImage = "url('" + syra_site.$item.$iconPath + "modules/s_module_" + record.dataset.code.toLowerCase() + ".png')";
		}
		if (record.page.isAdminMode) {
			var titleMeta = metaData && metaData.$properties && metaData.$properties.title;
			if (titleMeta) {
				titleMeta.$isDisabled = true;
			}
			if (titleMeta && titleMeta.$isDisabled && record.boundFields.title && record.boundFields.title.length) {
				syra_site.dom.toggleClass(record.boundFields.title[0]._dataValue, "s-disabled", false);
			}
		}
	},
	record_onShowSelection: function(record, selected) {
		var page = record.page;
		syra_site.dom.toggleClass(record.domItem, "s-list-record-selected", selected);
		selected && record.setFocusRecord();
		if (page.isAdminMode) {
			if (selected) {
				page.selectedModule = record;
				if (!record.subModulesItem) {
					record.subModulesHead = document.createElement("div");
					record.subModulesHead.className = "s-nav-admin-submodules-head";
					record.subModulesAdminActions = document.createElement("div");
					record.subModulesHead.appendChild(record.subModulesAdminActions).className = "s-nav-admin-submodules-menus-slot";

					record.subModulesAdminTitleList = document.createElement("div");
					record.subModulesHead.appendChild(record.subModulesAdminTitleList).className = "s-nav-admin-submodules-titles";

					record.subModulesAdminBodySep = document.createElement("div");
					record.subModulesAdminBodySep.className = "s-nav-admin-body-sep";
					record.subModulesBody = document.createElement("div");
					record.subModulesBody.className = "s-nav-admin-submodules-body";
					record.subModulesItem = page.loadNewItem(record.subModulesBody, {
						$isTitleHidden: true,
						$bind: "submodules"
					}, record);
					page.adminTableBody.appendChild(record.subModulesHead);
					page.adminTableBody.appendChild(record.subModulesAdminBodySep);
					page.adminTableBody.appendChild(record.subModulesBody);
				}
				page.refreshExpandAllLinks(page.selectedSubModuleRecord = record.selectedSubModuleRecord, true);
			} else {
				if (page.selectedModule == record) {
					page.selectedModule = null;
				}
			}
			record.subModulesHead.style.display = record.subModulesAdminBodySep.style.display = record.subModulesBody.style.display = selected ? "" : "none";
		} else {
			if (selected) {
				if (!record.subModulesItem) {
					record.subModulesSlot = document.createElement("div");
					record.subModulesSlot.className = "s-nav-submodules-slot";
					record.subModulesBody = document.createElement("div");
					record.subModulesBody.className = "s-nav-submodules-body";
					record.subModulesItem = page.loadNewItem(record.subModulesBody, {
						$isTitleHidden: true,
						$bind: "submodules"
					}, record);
					record.subModulesSlot.appendChild(record.subModulesBody);
					page.layoutContent.domItem.appendChild(record.subModulesSlot);
				}
				record.subModulesSlot.style.display = "";
			} else {
				if (record.subModulesSlot) {
					record.subModulesSlot.style.display = "none";
				}
			}
		}
		if (selected && page.isPageLoaded) {
			page.setPreferences(record.dataset.$uuid);
			syra_site.ensureArticleVisibility(page);
			record.scrollToRecord();
		}
	},
	dispose: function() {
		if (this.list) {
			syra_dd.addToColResizers(this.list, false);
			syra_site.dom.empty(this.list._core);
		}
	}
});