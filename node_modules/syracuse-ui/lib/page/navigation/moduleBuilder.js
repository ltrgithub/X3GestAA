"use strict";
var helpers = require('syracuse-core/lib/helpers');
var ModuleRecord = require('./moduleRecord').ModuleRecord;

function ModuleBuilder() {}

exports.ModuleBuilder = helpers.defineClass(ModuleBuilder, null, {
	initialize: function() {
		this.list.$item.$isTopLabelAlignment = true;
		this.RecordClass = ModuleRecord;
		if (!this.list.$item.$layout) {
			this.list.$item.$layout = {};
		}
		var $items = this.list.$item.$layout.$items;
		if (!$items) {
			$items = this.list.$item.$layout.$items = [];
			var $binds = Object.keys(this.list.$fields);
			for (var ii = 0, jj = $binds.length; ii < jj; ii++) {
				if (!this.list.$fields[$binds[ii]].$isExcluded) {
					$items.push({
						$bind: $binds[ii]
					});
				}
			}
		}
	},
	applyDesignMetaData: function(metaData, designing) {

	},
	emptyBody: function(addEmptySlot, onFetch) {
		document.site.emptyDom(this.body);
		if (addEmptySlot) {
			var empty = document.createElement("div");
			empty.className = this.list.$skin + "-empty-slot";
			empty.textContent = this.list.localize.flNoData;
			this.body.appendChild(this.list.emptyDataItem = empty);
		}
	},
	drawBuilder: function() {
		this.list.fieldValue.style.overflow = "auto";
		this.list.$skin = this.list.$item.$skin || "s-cards";
		this.list.applyDesignMetaData(this.list.$item, false);
		this.body = document.createElement("div");
		this.list._core.appendChild(this.body);
		this.list.loadSelector();
		this.body.className = this.list.$skin + "-body";
		this.list.applyCapabilities();
	},
	dispose: function() {
		this.list = this.rows = this.body = null;
	}
});