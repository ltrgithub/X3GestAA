"use strict";
var _megaDetailPanel = require('./megaDetailPanel');

function MenuBlock(navParent) {
	syra_item.initialize(navParent.page, this);
	this.navParent = navParent;
	this.submodule = navParent.submodule || navParent;
}

MenuBlock.prototype.load = function(dataset) {
	//test par rapport au submodule
	this.record = dataset;
	if (this.submodule == this.navParent && this.submodule.mode == "large") {
		this.$skin = this.submodule.$skin + "-large-block";
		this.megaDetailPanel = _megaDetailPanel.add(this);
	} else {
		this.$skin = this.page.$skin + "-block";
		this.body = syra_dom.div(this.$skin + "-body");
	}
	this.domItem = this.slot = syra_dom.li(this.$skin);
	this.domItem.syrainout = this.id;
	this.title = syra_dom.text(this.$skin + "-title", dataset.title, this.slot);
	this.submodule.addItems(dataset.items, this);
	if (!this.megaDetailPanel) {
		this.slot.appendChild(this.body);
	}
};
MenuBlock.prototype.onItemInOut = function(onEnter) {
	onEnter && this.activate(true);
};
MenuBlock.prototype.onActivated = function() {
	this.megaDetailPanel && this.megaDetailPanel.activate();
};
MenuBlock.prototype.activate = function(on) {
	this.megaDetailPanel && this.page.activateItem(this, on);
};
MenuBlock.prototype.dispose = function() {
	syra_item.unregister(this);
	syra_site.disposeObject(this);
};

exports.add = function(navParent) {
	return new MenuBlock(navParent);
};