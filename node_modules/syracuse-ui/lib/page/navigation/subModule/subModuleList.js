"use strict";
var helpers = require('syracuse-core/lib/helpers');
var MultiList = require("syracuse-ui/lib/field/array/multiList").MultiList;
var SubModuleRecord = require("./subModuleRecord").SubModuleRecord;

function SubModuleList(){
}

exports.SubModuleList = helpers.defineClass(SubModuleList, MultiList, {
    loadBox: function(initData){
        this.isSubModuleList = true;
        if (this.page.isAdminMode) {
            this.$item.$selectMode = "row";
            this.selectFirstByDefault = true;
        }
		this.$item.$iconPath = "page/s-nav-";
        this.$item.$skinMenus = "s-nav-list-menus";
        this.emptyMessage = this.localize.navigPageNoSubModule;
        this.$confirmDelete = this.localize.navigPageConfirmDeleteSubModule;
        this.$isQuickDesignerEnabled = false;
        this.$item.$isPagerHidden = true;
        MultiList.prototype.loadBox.call(this, initData);
    },
    initializeList: function(){
        this.$item.$isTopLabelAlignment = true;
        this.RecordClass = SubModuleRecord;
        if (!this.$item.$layout || !this.$item.$layout.$items) {
            this.$item.$layout = this.defineDefaultCard().$layout;
        }
        MultiList.prototype.initializeList.call(this);
    },
    onItemEnterLeave: function(event){
        this.page.toggleCssOnEnter(this.menusSlot, event);
    },
    appendMenusSlot: function(){
        if (this.page.isAdminMode) {
            this.menusSlot = this.articleParent.subModulesAdminActions;
            this.setArticleId(this.articleParent.subModulesHead);
            this.setArticleId(this.articleParent.subModulesBody);
            this.articleParent.subModulesHead.setAttribute("data-s-inout", this.id);
            this.page.toggleCssOnEnter(this.menusSlot);
        }
        else {
            MultiList.prototype.appendMenusSlot.call(this);
        }
    },
    onRecordReorderAgentBeforeStart: function(recordReorderDDAgent){
        recordReorderDDAgent.boundaryItem = this.articleParent.subModulesAdminTitleList;
    },
    onRecordReorderAgentCalculateDragOffset: function(recordReorderDDAgent){
        recordReorderDDAgent.$drag = document.site.getBoundingClientRect(recordReorderDDAgent.targetRecord.header);
    },
    drawBox: function(){
        MultiList.prototype.drawBox.call(this);
        this.body = this._core;
        this.fieldValue.style.overflow = "auto";
        this.$skin = this.$item.$skin || "s-cards";
        this.applyDesignMetaData(this.$item, false);
        this.loadSelector();
        this.applyCapabilities();
        document.site.ddManager.toggleColResizerObserver(this, true);
        this.ensureLayoutMode();
        this.layoutSlot.appendChild(this.domItem);
    },
    
    _createMenusBox: function(){
        if (!this.isMenuLoaded) {
            this.isMenuLoaded = true;
            this.page.toggleCssOnEnter(this.menusSlot);
            if (this.page.isAdminMode) {
				var $item;  
                ($item =this.defineNewIconMenu("$create", this.$skinMenus + "-link")).$icon.$value = "new-submodule";
                this.page.loadNewItem(this.menusSlot,$item, this);
                ($item =this.defineNewIconMenu("$select", this.$skinMenus + "-link")).$icon.$value = "select-submodule";
                this.page.loadNewItem(this.menusSlot, $item, this);
            }
        }
    },
    isDraggable: function(target, event){
        return this.isReorderRecordDraggable(target, event);
    },
    onWindowResize: function(){
        if (!this.disposed && this.records) {
            for (var ii = 0, jj = this.records.length; ii < jj; ii++) {
                this.records[ii].resizeResizableChildren();
            }
        }
    },
    dispose: function(){
        document.site.emptyDom(this._core);
        this.rows = null;
        MultiList.prototype.dispose.call(this);
    }
});
