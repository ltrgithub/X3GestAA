"use strict";
var helpers = require('syracuse-core/lib/helpers');
var SubModuleRecord = require('./subModuleRecord').SubModuleRecord;

function SubModuleBuilder() {}

exports.SubModuleBuilder = helpers.defineClass(SubModuleBuilder, null, {
	initialize: function() {
		this.list.$item.$isTopLabelAlignment = true;
		this.RecordClass = SubModuleRecord;
		if (!this.list.$item.$layout || !this.list.$item.$layout.$items) {
			this.list.$item.$layout = this.list.defineDefaultCard().$layout;
		}
	},
	emptyBody: function(addEmptySlot) {
		document.site.emptyDom(this.body);
		if (addEmptySlot) {
			var empty = document.createElement("div");
			empty.className = this.$skin + "-empty-slot";
			empty.textContent = this.localize.flNoData;
			this.body.appendChild(this.emptyDataItem = empty);
		}
	},
	applyDesignMetaData: function(metaData, designing) {},
	drawBuilder: function() {
		this.body = this.list._core;
		this.list.fieldValue.style.overflow = "auto";
		this.list.$skin = this.list.$item.$skin || "s-cards";
		this.list.applyDesignMetaData(this.list.$item, false);
		this.list.loadSelector();
		this.list.applyCapabilities();
	},
	onWindowResize: function() {
		if (!this.disposed && this.list.records) {
			for (var ii = 0, jj = this.list.records.length; ii < jj; ii++) {
				this.list.records[ii].resizeResizableChildren();
			}
		}
	},
	dispose: function() {
		this.list = this.rows = this.body = null;
	}
});