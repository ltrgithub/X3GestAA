"use strict";
var _megaDetailPanel = require('./megaDetailPanel');
var Carousel = require('syracuse-ui/lib/scroll/carousel').Carousel;

function _useLargeMode(sub) {
	return !sub.page.breadcrumbModules;
}

function _endLoad(page) {
	syra_site.breadcrumbs.$prototype = syra_nav.megaMenus.$prototype;
	syra_site.breadcrumbs.dataset = syra_nav.megaMenus.dataset;
	syra_site.breadcrumbs.load();
}

exports.page = {
	load: function(page, options) {
		page.$skin = "s-nav-breadcrumb";
		page.modulesBar = syra_dom.ul(page.$skin + "-modules");
		page.eventSourceDomItem = options.menu.item;
		page.onNavMenuClick = function() {
			this.breadcrumb_togglePopup();
		};
		page.breadcrumb_togglePopup = function(content, items) {
			var self = this;
			if (content) {
				if (!self.breadcrumb_popup) {
					self.breadcrumb_popup = syra_dom.div(self.$skin + "-popup");
				}
				self.breadcrumb_popup.appendChild(content);
				if (!self.breadcrumb_popupDlg) {
					self.breadcrumb_popupDlg = syra_over.openPopup(self.page, {
						content: {},
						slot: self.breadcrumb_popup,
						picker: self.eventSourceDomItem,
						position: {
							my: "left top",
							at: "left bottom",
							of: self.eventSourceDomItem
						},
						close: function() {
							self.lastSelected && self.lastSelected.activate(false);
							self.breadcrumb_popupDlg = null;
						}
					});

					if (items && items.carousel) {
						items.carousel.adjustContainerHeight(self.breadcrumb_popup);
					} else {
						var height = syra_site.size.popupMaxHeight + "px";
						self.breadcrumb_popup.style.height = height;
						self.breadcrumb_popup.style.maxHeight = height;
					}

					self.breadcrumb_popup.style.width = "978px";
					self.carousel && self.carousel.validate();
				}
			} else {
				self.breadcrumb_popupDlg && self.breadcrumb_popupDlg.close();
			}
		};
		_endLoad(page);
	},
	resizeItem: function(page) {
		if (page.isModulesLoaded) {

			if (page.breadcrumb_popup && page.lastSelected) {
				page.lastSelected.carousel.adjustContainerHeight(page.breadcrumb_popup);
			}

			page.megaDetailPanelActivated && page.megaDetailPanelActivated.resizeItem();
			var lastSelected = page.lastSelected;
			while (lastSelected) {
				lastSelected.carousel && lastSelected.carousel.validate();
				lastSelected = lastSelected.lastSelected;
			}
		}
	},
	dispose: function(page) {
		syra_dom.remove(page.modulesBar);
	}
};

exports.modules = {
	activate: function(on, page) {
		if (on) {
			this._showModules(page);
		}
	},
	_showModules: function(page) {
		var modules = {};
		page.breadcrumbModules = true;
		if (!modules.body) {
			modules.scrollview = syra_dom.div(page.$skin + "-modules-slot");
			modules.scrollview.appendChild(page.modulesBar);
			modules.body = page.modulesBar;
			modules.carousel = new Carousel({
				page: modules,
				view: modules.scrollview,
				content: modules.body,
				css: "s-nav-mega-carousel"
			});
		}
		page.breadcrumb_togglePopup(modules.scrollview, modules);
	},
	getModule(breadcrumbs, index, modules) {
		var item;
		for (var ii = 1, jj = index; ii <= jj; ii++) {
			if (item) {
				item = item.getChildItem(breadcrumbs[ii].$uuid); //this._getItem(breadcrumbs[ii].$uuid, ));
			} else {
				item = this._getItem(breadcrumbs[ii].$uuid, modules);
				item.addSubModules();
			}
		}
		return item;
	},
	_getItem: function(uuid, items) {
		for (var ii = 0, jj = items.length; ii < jj; ii++) {
			var item = items[ii];
			if (item.dataset.$uuid === uuid) {
				return item;
			}
		}
	}
};

exports.module = {
	create: function(module) {
		module.title = syra_dom.div(module.$skin + "-title", module.slot);
		module.title.textContent = module.dataset.title;
	},
	activate: function(on, module) {
		if (on) {
			this._showSubModules(module);
		} else {
			if (module.page.breadcrumbModules) {
				var parentNode = module.scrollview.parentNode;
				for (var ii = 1, jj = parentNode.childNodes.length; ii < jj; ii++) {
					parentNode.removeChild(parentNode.lastChild);
				}
			} else {
				syra_dom.empty(module.scrollview.parentNode);
			}
		}
		module.title.className = module.$skin + "-title" + (on ? " s-selected" : "");
	},
	_showSubModules: function(module) {
		var page = module.page;
		if (!module.body) {
			module.scrollview = syra_dom.div(page.$skin + "-submodules-slot");
			module.body = syra_dom.ul(page.$skin + "-submodules", module.scrollview);
			if (module.dataset.submodules) {
				module.carousel = new Carousel({
					page: page,
					view: module.scrollview,
					content: module.body,
					css: "s-nav-mega-carousel"
				});
			}
			module.addSubModules();
		}
		page.breadcrumb_togglePopup(module.scrollview, module);
		module.carousel && module.carousel.validate();
	}
};

exports.subModule = {
	create: function(sub) {
		sub.title = syra_dom.text(sub.$skin + "-title", sub.dataset.title, sub.slot);
		if (_useLargeMode(sub)) {
			sub.mode = "large";
			sub.scrollview = syra_dom.div(sub.$skin + "-large-slot");
			sub.body = syra_dom.ul(sub.$skin + "-large", sub.scrollview);
			sub.carousel = new Carousel({
				page: sub.page,
				view: sub.scrollview,
				content: sub.body,
				css: "s-nav-mega-carousel"
			});
			sub.$skin_menu = sub.$skin + "-large-link";
		} else {
			sub.mode = "small";
			sub.megaDetailPanel = _megaDetailPanel.add(sub);
		}
		sub.addItems(sub.dataset.items);
	},
	activate: function(on, block, subModule) {
		if (block) {
			if (on) {
				block.page.breadcrumb_popup.appendChild(block.scrollview || block.body);
				block.megaDetailPanel && block.megaDetailPanel.activate();
				block.navParent.lastSelected = block;
				block.carousel && block.carousel.validate();
			} else {
				var scrollview = block.scrollview || block.body;
				if (scrollview.parentNode) {
					while (block.page.breadcrumb_popup.lastChild != scrollview) {
						syra_dom.remove(block.page.breadcrumb_popup.lastChild);
					}
					syra_dom.remove(scrollview);
				}
			}
			block.title.className = block.$skin + "-title" + (on ? " s-selected" : "");
			block.slot.className = block.$skin + (on ? " s-selected" : "");
		} else {
			this._showSubModule(subModule);
		}
	},
	_showSubModule: function(submodule) {
		submodule.page.breadcrumb_togglePopup(submodule.scrollview, submodule);
		submodule.carousel && submodule.carousel.validate();
	}
};

exports.menuBlock = {
	create: function(block) {
		if (block.submodule == block.navParent && block.submodule.mode == "large") {
			block.$skin = block.submodule.$skin + "-large-block";
			block.megaDetailPanel = _megaDetailPanel.add(block);
		} else {
			block.body = syra_dom.ul(block.$skin + "-body");
		}
		block.domItem = block.slot = syra_dom.li(block.$skin);
		block.title = syra_dom.text(block.$skin + "-title", block.dataset.title, block.slot);
		block.domItem.syrainout = block.id;
	},
	activate: function(on, block) {
		this._showMenuBlock(block);
	},
	_showMenuBlock: function(block) {
		if (!block.megaDetailPanel) {
			block.megaDetailPanel = _megaDetailPanel.add(block);
			block.submodule.addItems(block.dataset.items, block);
		}
		block.page.breadcrumb_togglePopup(block.megaDetailPanel.navParent.body);
	}
};