"use strict";
var _megaDetailPanel = require('./megaDetailPanel');
var _menuItem = require('./menuItem');

function SubModuleMenuBlock(navParent) {
	syra_item.initialize(navParent.page, this);
	this.navParent = navParent;
	this.submodule = navParent.submodule || navParent;
}

SubModuleMenuBlock.prototype.load = function(dataset) {
	//test par rapport au submodule
	this.record = dataset;
	if (this.submodule == this.navParent && this.submodule.mode == "large") {
		this.isHLayout = true;
		this.slot = syra_dom.li("s-mega-sub-menu-block-slot");
		this.title = syra_dom.div("s-mega-sub-menu-block-title", this.slot);
		this.megaDetailPanel = _megaDetailPanel.add(this);
	} else {
		this.slot = syra_dom.li("s-mega-block-slot");
		this.title = syra_dom.div("s-mega-block-title", this.slot);
		this.body = syra_dom.div("s-mega-block-body");
	}
	this.domItem = this.slot;
	this.domItem.syrainout = this.id;
	this.title.textContent = dataset.title;
	this.children = [];
	for (var ii = 0, jj = dataset.items.length; ii < jj; ii++) {
		var item = dataset.items[ii];
		var dataItem = item.menuItem || item.menuBlock;
		if (dataItem) {
			var child = item.menuItem ? _menuItem.add(this) : exports.add(this);
			child.load(dataItem);
			if (this.megaDetailPanel) {
				this.megaDetailPanel.firstColumnSlot().appendChild(child.slot);
			} else {
				this.body.appendChild(child.slot);
			}
			this.children.push(child);
		}
	}
	if (!this.isHLayout) {
		this.domItem.appendChild(this.body);
	}
};
SubModuleMenuBlock.prototype.onItemInOut = function(onEnter) {
	onEnter && this.activate(true);
};
SubModuleMenuBlock.prototype.onActivated = function() {
	if (this.isHLayout) {
		this.megaDetailPanel.activate();
	}
};
SubModuleMenuBlock.prototype.activate = function(on) {
	this.isHLayout && this.page.activateItem(this, on);
};
SubModuleMenuBlock.prototype.dispose = function() {
	syra_item.unregister(this);
	syra_site.disposeObject(this);
};

exports.add = function(navParent) {
	return new SubModuleMenuBlock(navParent);
};