"use strict";
var _megaMenuColumns = require('./megaMenuColumns');
var _menuItem = require('./menuItem');

function SubModuleMenuBlock() {}

SubModuleMenuBlock.prototype.load = function(dataset) {
	//test par rapport au submodule
	var css = this.isHLayout ? {
		slot: "s-mega-sub-menu-block-slot",
		title: "s-mega-sub-menu-block-title",
		body: "s-mega-submodules-level-2 s-mega-block-detail",
		scroll: "simplebar",
		titleLink: "s-mega-link-slot"
	} : {
		slot: "s-mega-block-slot",
		title: "s-mega-block-title",
		body: "s-mega-block-body",
		titleLink: "s-mega-link-slot"
	};

	this.record = dataset;
	this.domItem = this.slot;
	this.domItem.syrainout = this.id;
	this.title = syra_dom.div(css.title, this.domItem);
	this.title.textContent = dataset.title;
	this.body = syra_dom.div(css.body);


	if (this.isHLayout) {
		this.body.style.width = (this.submodule.maxColumns - 2) * 240 + "px";
		this.megaScrollPanel = syra_dom.div(css.scroll, this.body);

		this.megaScrollPanel.id = "contentPanelScrollBar";
		this.megaMenuColumns = _megaMenuColumns.add(this.megaScrollPanel, this.body);
	}

	for (var ii = 0, jj = dataset.items.length; ii < jj; ii++) {
		var item = dataset.items[ii];
		var dataItem = item.menuItem || item.menuBlock;
		if (dataItem) {
			var child;
			if (item.menuItem) {
				child = _menuItem.add();
				child.slot = syra_dom.li(css.titleLink, this.isHLayout ? this.megaMenuColumns.firstColumnSlot() : this.body);
			} else {
				child = exports.add();
				if (this.megaMenuColumns && this.megaMenuColumns.firstColumnSlot()) {
					child.slot = syra_dom.li(css.slot, this.megaMenuColumns.firstColumnSlot());
				} else {
					child.slot = syra_dom.li(css.slot, this.body);
				}
			}
			child = syra_item.initialize(this.page, child);
			child.megaParent = this;
			child.submodule = this.submodule;
			child.load(dataItem);
			if (child.slot != child.domItem) {
				child.slot.appendChild(child.domItem);
			}
		}
	}
	if (!this.isHLayout) {
		this.domItem.appendChild(this.body);
	}
};
SubModuleMenuBlock.prototype.onItemInOut = function(onEnter) {
	onEnter && this.activate(true);
};
SubModuleMenuBlock.prototype.onActivated = function() {
	if (this.isHLayout) {
		this.megaScrollPanel.style.height = this.page.popup.clientHeight + "px";
		this.page.popupBody.appendChild(this.body);

		this.megaMenuColumns.adjustColumnContent(this.submodule.maxColumns);
	}
};
SubModuleMenuBlock.prototype.activate = function(on) {
	this.isHLayout && this.page.activateItem(this, on);
};
SubModuleMenuBlock.prototype.dispose = function() {
	syra_item.unregister(this);
	syra_site.disposeObject(this);
};

exports.add = function() {
	var block = new SubModuleMenuBlock();
	return block;
};