"use strict";
var helpers = require('syracuse-core/lib/helpers');

function _onExpandSubModule(event) {
	var subModule = this.parent;
	subModule.isExpanded = !(subModule.isExpanded !== false);
	if (event.shiftKey) {
		var records = subModule.list.records;
		for (var ii = 0, jj = records.length; ii < jj; ii++) {
			_expandSubModule(records[ii], subModule.isExpanded);
		}
	} else {
		_expandSubModule(subModule, subModule.isExpanded);
	}
}


function _expandSubModule(subModule, expanded) {
	syra_dom.hide(subModule.body, !(subModule.isExpanded = expanded));
	syra_button.setFontIcon(subModule.domTitle.firstChild, expanded ? "node_expanded" : "node_collapsed");
	subModule.domTitle.syraTipTitle = expanded ? syra_local.nvpCollapseSubModule : syra_local.nvpExpandSubModule;
	subModule.page.refreshExpandAllLinks(subModule);
	//syra_dom.hide(subModule.btnExpandAll, !(subModule.btnExpandAll.hasChildBlock && expanded));
	//syra_dom.hide(subModule.btnCollapseAll, !(subModule.btnCollapseAll.hasChildBlock && expanded));
}

exports.expandMenuBlocks = function(subModule, expand, itemsField) {
	var items = itemsField || subModule.itemsField;
	for (var ii = 0, jj = items.records.length; ii < jj; ii++) {
		var record = items.records[ii];
		if (record.singleField.variantItem.isMenuBlock) {
			record.singleField.variantItem.record.expandMenuBlock(expand);
			exports.expandMenuBlocks(subModule, expand, record.singleField.variantItem.record.itemsField);
		}
	}
	if (!itemsField && !subModule.page.isAdminMode) {
		_expandSubModule(subModule, expand);
	}

};

function _onExpandAll(event) {
	var subModule = this.parent;
	if (event.shiftKey) {
		for (var ii = 0, jj = subModule.list.records.length; ii < jj; ii++) {
			exports.expandMenuBlocks(subModule.list.records[ii], this.isExpandAll);
		}
	} else {
		exports.expandMenuBlocks(subModule, this.isExpandAll);
	}
}


function SubModuleBuilder() {}

exports.SubModuleBuilder = helpers.defineClass(SubModuleBuilder, null, {
	initialize: function(list) {
		this.list = list;
		this.emptyMessage = syra_local.nvpNoSubModule;
		list.onRecordReorderStart = function(ddAgent) {
			ddAgent.boundaryItem = list.articleParent.subModulesAdminTitleList;
		};
		list.onRecordReorderCalculatePosition = function(ddAgent) {
			ddAgent.$drag = syra_dom.getBoundingClientRect(ddAgent.targetRecord.header);
		};
		list.emptyBody = function() {
			this.filler.emptyBody(this);
			if (this.page.isAdminMode) {
				syra_dom.empty(this.articleParent.subModulesAdminTitleList);
				//this.articleParent.subModulesAdminTitleList.appendChild(this.builder.emptyDataItem);
			}
		};
		list.$item.$isTopLabelAlignment = true;
		if (!list.$item.$layout || !list.$item.$layout.$items) {
			list.$item.$layout = list.defineDefaultCard().$layout;
		}
		list.$item.$alternateStyle = false;
	},
	endInitiallize: function() {},
	isDraggable: function(target, event) {
		return this.list.isReorderRecordDraggable(target, event);
	},
	list_onAfterSetDataValue: function(dataRecordSet, parentDataRecord, metaData) {
		if (this.list.records.length && !this.list.selector.getSelectedRecord()) {
			this.list.selector.selectRecord(this.list.recordsMap[this.list.page.$profilePreference.$submodule] || this.list.records[0], true);
		}
	},
	list_onAfterDraw: function() {
		this.list.body = this.list._core;
		this.list._dataValue.style.overflow = "auto";
		this.list.$skin = this.list.$item.$skin || "s-cards";
		this.list.applyDesignMeta(this.list.$item, false);
		this.list.loadSelector();
		this.list.applyCapabilities();
		syra_fields.ensureLayoutMode(this.list);
		this.list.layoutSlot.appendChild(this.list.domItem);
		if (this.list.page.isAdminMode) {
			var header = this.list.articleParent.subModulesHead;
			header.insertBefore(this.list.topbar, header.firstChild);
		} else {
			syra_dom.removeChild(this.list.topbar);
		}
		syra_dd.addToColResizers(this.list, true);
	},
	onAfterAddRecord: function(record) {
		record.itemsField._core.insertBefore(record.itemsField.menusSlot, record.itemsField._core.firstChild);
	},
	record_onBeforeLoad: function(record, initData, isCreateAction) {
		record.isSubModuleRecord = true;
		record.$defaultSkinSection = record.$defaultSkinBlock = this.list.$item.$skinCard || "s-h3";
	},
	record_onBeforeApplyChange: function(record, metaData, serverResponse) {
		serverResponse && syra_dataset.applyDelta(record.page, record.dataset, metaData);
	},
	record_onAfterApplyChange: function(record, metaData) {
		var title = record.dataset.title;
		if (record.dataset.description && record.dataset.description != title) {
			title = record.dataset.description;
		}
		syra_button.setText(record.subModuleTitleBtn, title);
	},
	record_onItemInOut: function(record, onEnter, event) {
		if (this.list.selector) {
			record.highlightOnEnter(onEnter, event);
			record.header && syra_dom.toggleClass(record.header, "s-record-enter", onEnter);
		}
	},
	record_reorder: function(record, target, isAfter) {
		if (target) {
			target.domItem.parentNode.insertBefore(record.domItem, isAfter ? target.domItem.nextSibling : target.domItem);
			if (record.page.isAdminMode) {
				target.header.parentNode.insertBefore(record.header, isAfter ? target.header.nextSibling : target.header);
			}
		} else {
			if (isAfter) {
				this.list.body.appendChild(record.domItem);
			} else {
				this.list.body.insertBefore(record.domItem, this.list.body.firstChild);
			}
			if (record.page.isAdminMode) {
				var list = this.list.articleParent.subModulesAdminTitleList;
				if (isAfter) {
					list.appendChild(record.header);
				} else {
					list.insertBefore(record.header, list.firstChild);
				}
			}
		}
	},
	record_onSelect: function(record, selected) {
		if (record.page.isAdminMode) {
			syra_dom.toggleClass(record.header, "s-list-record-selected", selected);
			syra_dom.hide(record.domItem, !selected);
			if (selected) {
				record.page.$profilePreference.$submodule = record.dataset.$uuid;
				syra_preference.profile.save("navigationpage", record.page.$profilePreference);
				if (record.page.selectedModule) {
					record.page.refreshExpandAllLinks(record.page.selectedSubModuleRecord = record.page.selectedModule.selectedSubModuleRecord = record);
				}
			}
		}
	},
	record_dispose: function(record) {
		if (record.page && record.page.selectedSubModuleRecord == record) {
			delete record.page.selectedSubModuleRecord;
		}
	},
	record_draw: function(record) {
		record.$useDeletePicker = true;
		record.$item.$isPickerMenuHidden = true;
		record.$isVerticalDirection = true;
		record.domItem = document.createElement("div");
		record.$skin = record.page.isAdminMode ? "s-nav-admin-submodule" : "s-nav-submodule";
		record.domItem.className = record.$skin;

		record.header = document.createElement("header");
		record.header.className = record.$skin + "-head";
		if (record.page.isAdminMode) {
			record.subModuleTitleBtn = syra_button.add({
				isIndicator: true,
				parent: record,
				slot: record.header,
				text: "",
				css: record.$skin + "-title",
				btnclick: function(event, btn) {
					this.parent.onSelectorClick(event, btn);
				}
			});
			record.domTitle = record.subModuleTitleBtn.link;
			record.header.setAttribute("data-s-record", record.$uuid);
			this.list.articleParent.subModulesAdminTitleList.appendChild(record.header);
			record.header.syrainout = record.header.syraItem = record.id;
			syra_dom.hide(record.domItem, true);
			record.domTitle.className += " s-list-selector-row";
		} else {
			record.subModuleTitleBtn = syra_button.add({
				parent: record,
				slot: record.header,
				text: "",
				title: syra_local.nvpCollapseSubModule,
				css: "s-nav-submodule-title",
				fontIcon: "node_expanded",
				btnclick: _onExpandSubModule
			});
			record.domTitle = record.subModuleTitleBtn.link;
			record.domItem.appendChild(record.header);
		}
		record.reorderBtnParent = record.domTitle.parentNode;
		record.dataSlot = record.body = document.createElement("div");
		record.body.className = record.$skin + "-body";
		record.isExpanded = true;
		if (record.page.isAdminMode) {
			record.menusSlot = document.createElement("div");
			record.menusSlot.className = "s-ldpm-record-btns";
			record.header.appendChild(record.menusSlot);
		} else {
			var slot = document.createElement("div");
			slot.className = "s-section-btns";
			record.header.appendChild(slot);

			record.btnExpandAll = syra_button.add({
				parent: record,
				slot: slot,
				text: syra_local.nvpExpandAll,
				iconOnly: true,
				css: "s-nav-submodule-btn",
				fontIcon: "expand_l",
				btnclick: _onExpandAll,
				isExpandAll: true
			});

			record.btnCollapseAll = syra_button.add({
				parent: record,
				slot: slot,
				text: syra_local.nvpCollapseAll,
				iconOnly: true,
				css: "s-nav-submodule-btn",
				fontIcon: "collapse_l",
				btnclick: _onExpandAll
			});
		}
		record.itemsFieldSlot = document.createElement("div");
		record.itemsFieldSlot.className = record.page.isAdminMode ? "s-nav-admin-submodules-slot" : "s-nav-submodules-slot";
		record.body.appendChild(record.itemsFieldSlot);
		record.itemsField = record.page.loadNewItem(record.itemsFieldSlot, {
			$isTitleHidden: true,
			$bind: "items"
		}, record);
		this.list.applyCapabilitiesToRecord(record);
		record.page.isAdminMode && this.list.addReorder(record);
		this.list._core.appendChild(record.domItem);

		record.domItem.appendChild(record.body);


	},
	dispose: function() {
		if (this.list) {
			syra_dd.addToColResizers(this.list, false);
			syra_dom.empty(this.list._core);
			this.list.rows = null;
		}
	}
});