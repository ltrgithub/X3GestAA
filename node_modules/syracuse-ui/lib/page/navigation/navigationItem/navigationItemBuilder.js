"use strict";
var helpers = require('syracuse-core/lib/helpers');
var SingleBuilder = require('syracuse-ui/lib/field/array/singleBuilder/singleBuilder').SingleBuilder;
var NavigationItemRecord = require('./navigationItemRecord').NavigationItemRecord;

function NavigationItemBuilder() {}

exports.NavigationItemBuilder = helpers.defineClass(NavigationItemBuilder, SingleBuilder, {
	initialize: function() {
		this.columnsCount = this.list.articleParent.isSubModuleRecord ? 3 : 1;
		this._initRows();
		this.emptyMessage = this.list.localize.dskpNavigationPageNoMenuItem;
		this.list.$item.$isTopLabelAlignment = true;
		this.RecordClass = NavigationItemRecord;
		SingleBuilder.prototype.initialize.call(this);
	},
	_initRows: function() {
		this.rows = [];
		this.currentCol = 0;
	},
	onEmptyBody: function(addEmptySlot, onFetch) {
		this._initRows();
	},
	appendRow: function() {
		var row = {
			slot: document.createElement("div"),
			cols: [],
		};
		row.slot.className = this.list.$skin + "-row";
		this.body.appendChild(row.slot);
		for (var ii = 0; ii < this.columnsCount; ii++) {
			var slot = document.createElement("div");
			slot.className = this.list.$skin + "-col";
			row.slot.appendChild(slot);
			row.cols.push({
				slot: slot,
				items: []
			});
		}
		return row;
	},
	onAppendRecord: function(newRecord) {
		if (this.rows.length == 0) {
			this.rows = [this.appendRow()];
		}
		this.rows[0].cols[this.currentCol++].slot.appendChild(newRecord.domItem);
		if (this.currentCol == this.columnsCount) {
			this.currentCol = 0;
		}
	}
});