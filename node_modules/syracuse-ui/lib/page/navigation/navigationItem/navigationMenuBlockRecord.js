"use strict";
var helpers = require('syracuse-core/lib/helpers');
var ChildFieldRecord = require('syracuse-ui/lib/field/child/childFieldRecord').ChildFieldRecord;

function NavigationMenuBlockRecord(){
}

exports.NavigationMenuBlockRecord = helpers.defineClass(NavigationMenuBlockRecord, ChildFieldRecord, {
    drawBox: function(){
        this.$expanded = true;
        this.$$item = $(this.list._core);
        this.blockCard = this.list._core.appendChild(document.createElement("div"));
        this.blockCard.className = this.list.$skin + "-record";
        this.$prototype.$properties.title.$isMandatory = true;
        if (this.articleParent.articleParent.menusSlot) {
            this.articleParent.articleParent.menusSlot.className = "s-nav-block-menus";
        }
        this.toggleDesignMode();
    },
    toggleDesignMode: function(){
        var isAdminMode = this.page.isAdminMode();
        var prevTitleField = this.titleField;
        this.titleField = this.page.loadNewItem(this.blockCard, {
            $bind: "title",
            $isEditMode: isAdminMode,
            $isTitlePlaceHolder: true,
            $title: this.page.localize.navigPageEnterMenuBlock,
            $contentEditable: true,
            $skin: "s-nav-block-title-field",
            $isMenusHidden: !isAdminMode,
            $isDetailLinkDisabled: true,
            $useLocalizePicker: true,
            $isTitleHidden: true
        }, this);
        if (!this.itemsField) {
            this.itemsField = this.page.loadNewItem(this.blockCard, {
                $bind: "items",
                $isTitleHidden: true
            }, this);
            this.itemsField.body.className += " s-nav-block-items-field";
            this.itemsField.menusSlot.className = "s-nav-items-menus-slot";
        }
        else {
            this.blockCard.insertBefore(this.titleField.domItem, this.itemsField.domItem);
        }
        var itemRecord = this.articleParent.articleParent;
        if (isAdminMode) {
            this.titleField.boxPickers.style.paddingRight = 0;
            this.page.showOnEnter(this.titleField.boxPickers);
            this.titleField._dataValue.appendChild(this.itemsField.menusSlot);
        }
        this.addExpandPicker();
        this.titleField._dataValue.insertBefore(itemRecord.reorderPicker, this.titleField._dataValue.firstChild);
        if (itemRecord.reorderPicker) {
            this.titleField._dataValue.insertBefore(itemRecord.reorderPicker, this.titleField._dataValue.firstChild);
        }
        if (isAdminMode) {
            this.titleField._dataValue.appendChild(itemRecord.menusSlot);
        }
        this.titleField._dataValue.setAttribute("data-s-inout", this.id);
        if (prevTitleField) {
            this.removeItem(prevTitleField, true, true);
        }
    },
    addExpandPicker: function(){
        if (!this.expandPicker) {
            this.expandPicker = document.createElement("a");
            this.expandPicker.setAttribute("href", "#");
            this.expandPicker.setAttribute("data-s-picker", this.id);
            this.expandPicker.syraIsDesignEnable = true;
            this.expandPicker.syraBoxId = this.id;
            this.expandPicker.syraBoxPickerId = "expand";
            this.expandPicker.className = "s-nav-block-expand";
            this.expandPicker.title = this.page.localize.box_collapse;
            if (this.$item.$css) {
                this.expandPicker.className += " " + this.$item.$css;
            }
            this.titleField.domItem.insertBefore(this.expandPicker, this.titleField.domItem.firstChild);
        }
        this.ensureExpandedState();
    },
    onClickPicker: function(picker){
        if (picker == this.expandPicker) {
            this.expandMenuBlock(!this.$expanded);
            return false;
        }
		return true;
    },
    expandMenuBlock: function(expanded){
        this.$expanded = expanded;
        this.ensureExpandedState();
    },
    ensureExpandedState: function(){
        this.expandPicker.title = this.$expanded ? this.page.localize.box_collapse : this.page.localize.box_expand;
        document.site.toggleClass(this.expandPicker, "s-close", !this.$expanded);
        this.itemsField.domItem.style.display = this.$expanded ? "" : "none";
    },
    onItemEnterLeave: function(event){
        if (this.itemsField && this.itemsField.menusSlot) {
            this.page.ensureDesignedItemVisibility(this.itemsField, event);
        }
        this.page.showOnEnter(this.titleField.boxPickers, event);
        this.page.ensureDesignedItemVisibility(this.articleParent.articleParent, event);
    },
    _createMenusBox: function(){
    
    },
    applyActionLinkChange: function(resources){
        ChildFieldRecord.prototype.applyActionLinkChange.call(this, resources);
        if (!this.menusBox && resources && (resources.$links !== undefined || resources.$actions !== undefined)) {
            this._createMenusBox();
        }
    },
    dispose: function(){
        this.blockCard = this.titleField = this.itemsField = null;
        ChildFieldRecord.prototype.dispose.call(this);
    }
});
