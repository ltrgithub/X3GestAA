"use strict";
var helpers = require('syracuse-core/lib/helpers');
var DesktopList = require("syracuse-ui/lib/field/array/list").DesktopList;
var NavigationItemBuilder = require("./navigationItemBuilder").NavigationItemBuilder;

function NavigationItemList() {}

exports.NavigationItemList = helpers.defineClass(NavigationItemList, DesktopList, {
	loadBox: function(initData) {
		this.$item.$skin = "s-nav-items";
		this.BuilderClass = NavigationItemBuilder;
		this.$isQuickDesignerEnabled = false;
		DesktopList.prototype.loadBox.call(this, initData);
	},
	_createMenusBox: function() {
		if (!this.isMenuLoaded) {
			this.isMenuLoaded = true;
			this.page.loadNewItem(this._menusSlot, {
				$layoutType: "row",
				$autoSize: true,
				$items: [{
					$skin: "s-list-menus-link",
					$bind: "$create",
					$category: "link",
					$icon: {
						$mode: "icon",
						$path: "list/s-list-"
					}
				}, {
					$skin: "s-list-menus-link",
					$bind: "$select",
					$category: "link",
					$icon: {
						$mode: "icon",
						$path: "list/s-list-"
					}
				}]
			}, this);
		}
		this.topbar.style.display = "";
	},
	appendMenusslot: function() {
		this._menusSlot = document.createElement("div");
		this._menusSlot.className = "s-nav-items-menus-slot s-text";
		if (this.articleParent.isSubModuleRecord) {
			this.articleParent._menusSlot.appendChild(this._menusSlot);
		} else {
			this.topbar.appendChild(this._menusSlot);
		}
	},
	setDataBind: function(dataRecordSet, parentDataRecord, metaData) {
		if (dataRecordSet && dataRecordSet.length) {
			var isUpdated;
			for (var ii = 0, jj = dataRecordSet.length; ii < jj; ii++) {
				if (!dataRecordSet[ii].menuItem && !dataRecordSet[ii].menuBlock) {
					dataRecordSet[ii] = {
						menuBlock: dataRecordSet[ii]
					};
					isUpdated = true;
				}
			}
			if (isUpdated) {
				for (var ii = 0, jj = this.articleParent.dataset.items.length; ii < jj; ii++) {
					if (!this.articleParent.dataset.items[ii].menuItem && !this.articleParent.dataset.items[ii].menuBlock) {
						this.articleParent.dataset.items[ii] = {
							menuBlock: this.articleParent.dataset.items[ii]
						};
					}
				}
			}
		}
		DesktopList.prototype.setDataBind.call(this, dataRecordSet, parentDataRecord, metaData);
	}
});