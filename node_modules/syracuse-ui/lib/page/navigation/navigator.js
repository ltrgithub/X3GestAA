"use strict";
var helpers = require('syracuse-core').helpers;
var DesktopPage = require('syracuse-ui/lib/page/desktopPage').DesktopPage;
var _module = require('./module');
var _megaMenus;

function MegaMenus() {}

helpers.defineClass(MegaMenus, DesktopPage, {
	load: function() {
		(this.page = this).$item = {
			$layout: {
				$items: []
			}
		};
		var sav = this.body;
		DesktopPage.prototype.load.call(this);
		this.body = sav;
		this.popup = syra_dom.div("s-mega-popup");

		this.popupImage = syra_dom.div("s-mega-popup-image", this.popup);
		this.popupBody = syra_dom.div("s-mega-popup-body", this.popupImage);

		this.draw();
		this.isModulesLoaded = true;
		this.resize();
	},
	activateItem: function(item, on) {
		if (on) {
			if (item.megaParent.lastSelected) {
				item.megaParent.lastSelected.activate(false);
			}
			item.onActivated();
			this.popupBody.appendChild(item.body);
			item.megaParent.lastSelected = item;
		} else {
			if (item == item.megaParent.lastSelected) {
				item.megaParent.lastSelected = null;
			}
			if (item.children) {
				for (var ii = 0, jj = item.children.length; ii < jj; ii++) {
					item.children[ii].activate && item.children[ii].activate(false);
				}
			}
			syra_dom.remove(item.body);
		}
		syra_dom.toggleClass(item.title, "s-selected", on);
		syra_dom.toggleClass(item.slot, "s-selected", on);
	},
	togglePopup: function(content) {
		var self = this;
		if (content) {
			self.popupBody.appendChild(content);
			if (!self.popupDlg) {
				self.popupDlg = syra_over.openPopup(self.page, {
					content: {},
					slot: self.popup,
					autoCloseBoundary: self.body,
					picker: self.body,
					position: {
						my: "left top",
						at: "left bottom",
						of: self.body
					},
					close: function() {
						if (exports.cssMode) {
							return false;
						}
						self.popupDlg = null;
					}
				});

				var height = syra_site.size.popupMaxHeight + "px";
				self.popupDlg.overSlot.style.height = height;
				self.popupDlg.overSlot.style.maxHeight = height;
				self.popupImage.style.maxHeight = height;
				self.popupBody.style.height = height;

				self.popupImage.style.width = (self.isHighRes ? 1200 : 960) + "px";
				self.popupImage.style.left = (self.body.clientWidth - self.popupImage.clientWidth) / 2 + "px";
			}
		} else {
			self.popupDlg && self.popupDlg.close();
		}
	},
	addMore: function() {
		var self = this;
		self.moreBtn = syra_button.add({
			parent: syra_site,
			slot: syra_dom.li("s-mega-module-more", self.body),
			text: syra_local.megaMenuMore,
			title: syra_local.megaMenuMoreTooltip,
			css: "s-mega-module-more-link",
			click: function() {
				if (!self.morePopupDlg) {
					var slot = syra_dom.div("s-mega-more-popup");
					slot.appendChild(self.morePopupBody);
					self.morePopupDlg = syra_over.openPopup(self.page, {
						content: {},
						slot: slot,
						picker: self.moreBtn.link,
						position: {
							my: "left top",
							at: "left bottom",
							of: self.moreBtn.link
						},
						close: function() {
							if (exports.cssMode) {
								return false;
							}
							self.morePopupDlg = null;
						}
					});
				} else {
					self.morePopupDlg.close();
				}
			}
		});
		self.morePopupBody = syra_dom.ul("s-mega-more-popup-body");
	},
	draw: function() {
		var dataRecords = this.page.dataset && this.page.dataset.modules;
		this.modules = [];
		syra_dom.empty(this.body);
		if (dataRecords) {
			for (var ii = 0, jj = dataRecords.length; ii < jj; ii++) {
				this.modules.push(_module.add(this, this.body, dataRecords[ii]));
			}
		}
		if (!this.modules.length) {
			syra_dom.text("s-mega-submodules-empty-slot", syra_local.nvpNoModule, this.body);
		}
	},
	resize: function() {
		if (this.isModulesLoaded && this.body) {
			var maxW = this.body.clientWidth + 1; //1 for little space
			if (this.lastWidth != maxW) {
				!this.moreBtn && this.addMore();
				this.lastWidth = maxW;
				if (this.body.scrollWidth > maxW) {
					while (this.body.scrollWidth > maxW) {
						var item = this.moreBtn.slot.previousSibling;
						if (!item) {
							break;
						}
						item.className += " s-mega-more-popup-item";
						this.morePopupBody.insertBefore(item, this.morePopupBody.firstChild);
					}
				} else {
					while (this.morePopupBody.childNodes.length) {
						var node = this.morePopupBody.childNodes[0];
						node.className = node.className.replace("s-mega-more-popup-item", "");
						this.body.insertBefore(node, this.moreBtn.slot);
						if (this.body.scrollWidth > maxW) {
							node.className += " s-mega-more-popup-item";
							this.morePopupBody.insertBefore(node, this.morePopupBody.firstChild);
							break;
						}
					}
				}
				this.moreBtn.slot.style.visibility = this.morePopupBody.childNodes.length ? "visible" : "hidden";
			}

			this.isHighRes = this.body.clientWidth >= 1260;
		}
	},
	clear: function() {
		syra_dom.empty(this.popupBody);
		syra_dom.empty(this.body);
		syra_button.remove(this.moreBtn);
		this.moreBtn = this.lastSelected = null;
		if (this.modules) {
			for (var ii = 0, jj = this.modules.length; ii < jj; ii++) {
				this.modules[ii].dispose();
			}
		}
	},
	dispose: function() {
		_megaMenus = null;
		this.clear();
		DesktopPage.prototype.dispose.call(this);
	}
});



var _isEnabled = true;

exports.on = function() {
	_isEnabled = true;
	_megaMenus.load();
};
exports.large = function() {
	exports.mode = "large";
	if (_megaMenus) {
		_megaMenus.clear();
		_megaMenus.draw();
		_megaMenus.resize();
	}
};
exports.small = function() {
	exports.mode = "small";
	if (_megaMenus) {
		_megaMenus.clear();
		_megaMenus.draw();
		_megaMenus.resize();
	}
};
exports.css = function() {
	exports.cssMode = true;
};

exports.mode = "large"; // default;
//exports.mode = "small";

exports.resize = function() {
	_megaMenus && _megaMenus.resize();
};

exports.setMode = function(value) {
	exports.mode = value;
	this.megaMenus.draw();
};

exports.fetch = function() {
	_megaMenus = exports.megaMenus = new MegaMenus();
	_megaMenus.body = syra_dom.ul("s-mega-modules", syra_site.header);
	syra_router.loadRepresentation({
		article: syra_site,
		segments: syra_site.$menus.$navigation.$url,
		success: function($itemPage) {
			if ($itemPage && $itemPage.$representation) {
				_megaMenus.$prototype = $itemPage.$representation.$prototype;
				_megaMenus.dataset = {};
				var initData = $itemPage.$representation;
				var $keys = Object.keys(initData);
				/*if (initData && initData.modules) {
                 for (var ii = 0; ii < 20; ii++) {
                 var newmod = helpers.object.clone(initData.modules[0], true);
                 newmod.$uuid += "-" + "ii";
                 initData.modules.push(newmod);
                 }
                 }*/
				for (var ii = 0, jj = $keys.length; ii < jj; ii++) {
					if ($keys[ii] != "$prototype" && $keys[ii] != "$article") {
						_megaMenus.dataset[$keys[ii]] = initData[$keys[ii]];
					}
				}

				_megaMenus.load();
			}
		}
	});
};




exports.showSiteMap = function() {
	alert("");
};