"use strict";
var helpers = require('syracuse-core').helpers;
var DesktopPage = require('syracuse-ui/lib/page/desktopPage').DesktopPage;
var _module = require('./module');
var _moreModules = require('./moreModules');
var _$representation = require('./test/navigdata').data;


var _views = {
	megamenus: {
		add: function() {
			syra_site.megaMenus = new Navigator();
			syra_site.megaMenus.$skin = "s-mega-mn";
			syra_site.megaMenus.body = syra_site.megaMenus.modulesBar = syra_dom.ul(syra_site.megaMenus.$skin + "-modules", syra_site.header);
			syra_router.loadRepresentation({
				article: syra_site,
				segments: syra_site.$menus.$navigation.$url,
				success: function($itemPage) {
					if ($itemPage && $itemPage.$representation) {

						$itemPage.$representation = _$representation;

						syra_site.megaMenus.$prototype = $itemPage.$representation.$prototype;
						syra_site.megaMenus.dataset = {};
						var initData = $itemPage.$representation;
						var $keys = Object.keys(initData);
						for (var ii = 0, jj = $keys.length; ii < jj; ii++) {
							if ($keys[ii] != "$prototype" && $keys[ii] != "$article") {
								syra_site.megaMenus.dataset[$keys[ii]] = initData[$keys[ii]];
							}
						}
						syra_site.megaMenus.load();
						syra_menus.applyChange(syra_site, {
							$links: {
								site_sitemap: {
									$isDisabled: false
								}
							}
						});
					}
				}
			});
		}
	},
	sitemap: {
		add: function() {
			syra_site.sitemap = new Navigator();
			syra_site.sitemap.$prototype = syra_site.megaMenus.$prototype;
			syra_site.sitemap.dataset = syra_site.megaMenus.dataset;
			syra_site.sitemap.load();
		}
	}
};


function Navigator() {}

helpers.defineClass(Navigator, DesktopPage, {
	load: function() {
		(this.page = this).$item = {
			$layout: {
				$items: []
			}
		};

		syra_pageBuilder.initialize(this);
		this.externalAdapter = syra_site.externalAdapter;
		syra_article.beforeDraw(this);
		syra_article.endDraw(this);
		var dataRecords = this.page.dataset && this.page.dataset.modules;
		this.modules = [];
		if (dataRecords) {
			for (var ii = 0, jj = dataRecords.length; ii < jj; ii++) {
				this.modules.push(_module.add(this, this.modulesBar, dataRecords[ii]));
			}
		}
		if (!this.modules.length) {
			syra_dom.text(this.$skin + "-no-modules", syra_local.nvpNoModule, this.modulesBar);
		}
		this.isModulesLoaded = true;
		this.resizeItem();
	},
	activateItem: function(item, on) {
		if (on) {
			if (item.navParent.lastSelected) {
				item.navParent.lastSelected.activate(false);
			}
			item.onActivated();
			this.popup.appendChild(item.body);
			item.navParent.lastSelected = item;
		} else {
			if (item == item.navParent.lastSelected) {
				item.navParent.lastSelected = null;
			}
			if (item.children) {
				for (var ii = 0, jj = item.children.length; ii < jj; ii++) {
					item.children[ii].activate && item.children[ii].activate(false);
				}
			}
			syra_dom.remove(item.body);
		}
		syra_dom.toggleClass(item.title, "s-selected", on);
		syra_dom.toggleClass(item.slot, "s-selected", on);
	},
	togglePopup: function(content) {
		var self = this;
		if (content) {
			if (!self.popup) {
				self.popup = syra_dom.div("s-mega-mn-popup");
			}
			self.popup.appendChild(content);
			if (!self.popupDlg) {
				self.popupDlg = syra_over.openPopup(self.page, {
					content: {},
					slot: self.popup,
					autoCloseBoundary: self.modulesBar,
					picker: self.modulesBar,
					position: {
						my: "left top",
						at: "left bottom",
						of: self.modulesBar
					},
					close: function() {
						return false;
						self.popupDlg = null;
					}
				});
				var height = syra_site.size.popupMaxHeight + "px";
				self.popup.style.height = height;
				self.popup.style.maxHeight = height;
				self.popup.style.width = (self.isHighRes ? 1200 : 960) + "px";
				self.popup.style.left = (self.modulesBar.clientWidth - self.popup.clientWidth) / 2 + "px";
			}
		} else {
			self.popupDlg && self.popupDlg.close();
		}
	},
	resizeItem: function(resize, articleParent) {
		if (this.isModulesLoaded && this.modulesBar) {
			var maxW = this.modulesBar.clientWidth + 1; //1 for little space
			if (this.lastWidth != maxW) {
				_moreModules.resizeModulesBar(this, this.lastWidth = maxW);
			}
			this.isHighRes = this.modulesBar.clientWidth >= 1260;
		}
	},
	clear: function() {
		syra_dom.empty(this.popup);
		syra_dom.empty(this.modulesSlot);
		this.more && this.more.dispose();
		this.more = this.lastSelected = null;
		if (this.modules) {
			for (var ii = 0, jj = this.modules.length; ii < jj; ii++) {
				this.modules[ii].dispose();
			}
		}
	},
	dispose: function() {
		this.clear();
		DesktopPage.prototype.dispose.call(this);
	}
});


exports.showMegaMenus = function() {
	_views.megamenus.add();
};

exports.showSiteMap = function() {
	_views.sitemap.add();
};