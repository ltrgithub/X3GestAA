"use strict";
var helpers = require('syracuse-core').helpers;
var DesktopPage = require('syracuse-ui/lib/page/desktopPage').DesktopPage;
var _module = require('./module');

var _mode = {
	mega: require('./modeMega'),
	map: require('./modeMap'),
	breadcrumb: require('./modeBreadcrumb')
};
exports.megaMenus = null;

function Navigator() {}

helpers.defineClass(Navigator, DesktopPage, {
	load: function() {
		(this.page = this).$item = {
			$layout: {
				$items: []
			}
		};

		syra_pageBuilder.initialize(this);
		this.externalAdapter = syra_site.externalAdapter;
		syra_article.beforeDraw(this);
		syra_article.endDraw(this);
		this._loadModules();
		this.resizeItem();
	},

	_loadModules: function() {
		var items = this.page.dataset && this.page.dataset.modules;

		this.children = [];
		if (items) {
			for (var ii = 0, jj = items.length; ii < jj; ii++) {
				this.children.push(_module.add(this, items[ii]));
			}
		}
		if (!this.children.length) {
			syra_dom.text(this.$skin + "-no-modules", syra_local.nvpNoModule, this.modulesBar);
		}
		this.isModulesLoaded = true;
	},
	resizeItem: function() {
		this.mode.page.resizeItem(this);
	},
	clear: function() {
		syra_dom.empty(this.mega_popup);
		syra_dom.empty(this.modulesSlot);
		this.more && this.more.dispose();
		this.more = this.lastSelected = null;
		if (this.children) {
			for (var ii = 0, jj = this.children.length; ii < jj; ii++) {
				this.disposeChild(this.children[ii]);
			}
		}
	},
	disposeChild: function(child) {
		if (child) {
			if (child.children) {
				for (var ii = 0, jj = child.children.length; ii < jj; ii++) {
					this.disposeChild(child.children[ii]);
				}
			}
			child.carousel && child.carousel.dispose();
			syra_item.unregister(child);
			syra_site.disposeObject(child);
		}
	},
	dispose: function() {
		this.clear();
		this.mode && this.mode.page.dispose(this);
		DesktopPage.prototype.dispose.call(this);
	}
});


exports.toggleMegaMenus = function(show, $representation) {
	var isShown = syra_dom.isDisplay(syra_site.megaMenusBar);
	if (show) {
		if (exports.megaMenus) {
			if ((syra_site.userProfile.selectedEndpointUiid !== exports.megaMenus.selectedEndpointUiid) || (syra_site.userProfile.selectedRoleUiid !== exports.megaMenus.selectedRoleUiid)) {
				exports.megaMenus.dispose();
				exports.megaMenus = null;
			}
		}

		if (!exports.megaMenus) {
			var page = exports.megaMenus = new Navigator();
			exports.megaMenus.selectedEndpointUiid = syra_site.userProfile.selectedEndpointUiid;
			exports.megaMenus.selectedRoleUiid = syra_site.userProfile.selectedRoleUiid;
			page.$representation = $representation;
			(page.mode = _mode.mega).page.load(page);
		}
	}
	if (isShown != show) {
		syra_dom.hide(syra_site.megaMenusBar, !show);
		syra_site.resizeItem();
	}

};

exports.showSiteMap = function() {
	var page = syra_site.sitemap = new Navigator();
	(page.mode = _mode.map).page.load(page);
};

exports.showBreadcrumbs = function(breadcrumbs, options) {
	var page = syra_site.breadcrumbs = new Navigator();
	page.breadcrumbs = breadcrumbs;
	page.breadcrumbIndex = options.menu.index;

	(page.mode = _mode.breadcrumb).page.load(page, options);

	if (options.menu.index === 0) {
		page.mode.modules.activate(true, page);
	} else {
		var menuNode = page.mode.modules.getModule(breadcrumbs, options.menu.index, syra_site.breadcrumbs.children);

		switch (options.menu.index) {
			case 1:
				page.mode.module.activate(true, menuNode);
				break;
			case 2:
				page.mode.subModule.activate(true, null, menuNode);
				break;
			default:
				page.mode.menuBlock.activate(true, menuNode);
		}
	}
};