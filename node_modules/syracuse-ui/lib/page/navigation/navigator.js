"use strict";
var helpers = require('syracuse-core').helpers;
var DesktopPage = require('syracuse-ui/lib/page/desktopPage').DesktopPage;
var _module = require('./module');
var _moreModules = require('./moreModules');
var _$representation = require('./test/navigdata').data;


var _views = {
	megamenus: {
		add: function() {
			var page = syra_site.megaMenus = new Navigator();
			page.$skin = "s-nav-mega";
			page.body = page.modulesBar = syra_dom.ul(page.$skin + "-modules", syra_site.header);
			page.mega_togglePopup = function(content) {
				var self = this;
				if (content) {
					if (!self.mega_popup) {
						self.mega_popup = syra_dom.div("s-nav-mega-popup");
					}
					self.mega_popup.appendChild(content);
					if (!self.mega_popupDlg) {
						self.mega_popupDlg = syra_over.openPopup(self.page, {
							content: {},
							slot: self.mega_popup,
							autoCloseBoundary: self.modulesBar,
							picker: self.modulesBar,
							position: {
								my: "left top",
								at: "left bottom",
								of: self.modulesBar
							},
							close: function() {
								//return false;
								self.lastSelected && self.lastSelected.activate(false);
								self.mega_popupDlg = null;
							}
						});
						var height = syra_site.size.popupMaxHeight + "px";
						self.mega_popup.style.height = height;
						self.mega_popup.style.maxHeight = height;
						self.mega_popup.style.width = (self.isHighRes ? 1200 : 960) + "px";
						self.mega_popup.style.left = (self.modulesBar.clientWidth - self.mega_popup.clientWidth) / 2 + "px";
					}
				} else {
					self.mega_popupDlg && self.mega_popupDlg.close();
				}
			};
			syra_router.loadRepresentation({
				article: syra_site,
				segments: syra_site.$menus.$navigation.$url,
				success: function($itemPage) {
					if ($itemPage && $itemPage.$representation) {

						$itemPage.$representation = _$representation;

						syra_site.megaMenus.$prototype = $itemPage.$representation.$prototype;
						syra_site.megaMenus.dataset = {};
						var initData = $itemPage.$representation;
						var $keys = Object.keys(initData);
						for (var ii = 0, jj = $keys.length; ii < jj; ii++) {
							if ($keys[ii] != "$prototype" && $keys[ii] != "$article") {
								syra_site.megaMenus.dataset[$keys[ii]] = initData[$keys[ii]];
							}
						}
						syra_site.megaMenus.load();
						syra_menus.applyChange(syra_site, {
							$links: {
								site_sitemap: {
									$isDisabled: false
								}
							}
						});
					}
				}
			});
		}
	},
	sitemap: {
		add: function() {
			var page = syra_site.sitemap = new Navigator();
			page.$skin = "s-nav-map";
			page.$prototype = syra_site.megaMenus.$prototype;
			page.dataset = syra_site.megaMenus.dataset;

			page.domItem = syra_dom.article(this.$skin);
			//page.domItem.syraPage = page.domItem.syraItem = this.id;

			page.scrollview = syra_dom.div(page.$skin + "-scrollview", page.domItem);
			page.header = syra_dom.header(page.$skin + "-head", page.scrollview);
			page.domTitle = syra_dom.div(page.$skin + "-title", page.header);
			page.body = syra_dom.div(page.$skin + "-scrollview", page.scrollview);

			syra_over.openModal(syra_site, {
				page: page
			});
			page.load();
		}
	}
};


function Navigator() {}

helpers.defineClass(Navigator, DesktopPage, {
	load: function() {
		(this.page = this).$item = {
			$layout: {
				$items: []
			}
		};

		syra_pageBuilder.initialize(this);
		this.externalAdapter = syra_site.externalAdapter;
		syra_article.beforeDraw(this);
		syra_article.endDraw(this);
		this._loadModules();
		this.resizeItem();
	},
	_loadModules: function() {
		var items = this.page.dataset && this.page.dataset.modules;
		this.children = [];
		if (items) {
			for (var ii = 0, jj = items.length; ii < jj; ii++) {
				this.children.push(_module.add(this, items[ii]));
			}
		}
		if (!this.children.length) {
			syra_dom.text(this.$skin + "-no-modules", syra_local.nvpNoModule, this.modulesBar);
		}
		this.isModulesLoaded = true;
	},
	resizeItem: function(resize, articleParent) {
		if (this.isModulesLoaded) {
			if (this.modulesBar) {
				var maxW = this.modulesBar.clientWidth + 1; //1 for little space
				if (this.lastWidth != maxW) {
					_moreModules.resizeModulesBar(this, this.lastWidth = maxW);
				}
				this.isHighRes = this.modulesBar.clientWidth >= 1260;
			}
			if (this.mega_popup) {
				var height = syra_site.size.popupMaxHeight + "px";
				this.mega_popup.style.height = height;
				this.mega_popup.style.maxHeight = height;
			}
			this.megaDetailPanelActivated && this.megaDetailPanelActivated.resizeItem();
		}
	},
	clear: function() {
		syra_dom.empty(this.mega_popup);
		syra_dom.empty(this.modulesSlot);
		this.more && this.more.dispose();
		this.more = this.lastSelected = null;
		if (this.children) {
			for (var ii = 0, jj = this.children.length; ii < jj; ii++) {
				this.children[ii].dispose();
			}
		}
	},
	disposeItem: function(item) {
		if (item.children) {
			for (var ii = 0, jj = item.children.length; ii < jj; ii++) {
				item.children[ii].dispose();
			}
		}
		syra_item.unregister(item);
		syra_site.disposeObject(item);
	},
	dispose: function() {
		this.clear();
		DesktopPage.prototype.dispose.call(this);
	}
});


exports.showMegaMenus = function() {
	_views.megamenus.add();
};

exports.showSiteMap = function() {
	_views.sitemap.add();
};