"use strict";
require('syracuse-ui/lib/field/custom/simpleScroller').simplebar;

function DetailPanel(navParent) {
	this.navParent = navParent;
	this._slot = this.navParent.body = syra_dom.div("s-mega-mn-detail-panel");
	this._scrollview = syra_dom.div("s-mega-mn-detail-scrollview", this._slot);
	this._body = syra_dom.div("s-mega-mn-detail-body", this._scrollview);
	this.cols = [];
	this.addColumn();
}

DetailPanel.prototype.firstColumnSlot = function() {
	return this.cols[0].slot;
};
DetailPanel.prototype.activate = function() {
	this.navParent.page.popup.appendChild(this._slot); //popupBody
	if (!this.adjusted) {
		this.adjusted = true;

		/*
		 * Remove each overflowed root element from the column and place it an array, leave at least one element in the first column
		 */
		var overflowContent = [];
		while (this._slot.clientHeight < this.firstColumnSlot().scrollHeight && this.firstColumnSlot().childNodes.length > 1) {
			overflowContent.push(this.firstColumnSlot().removeChild(this.firstColumnSlot().lastChild));
		}

		if (overflowContent.length) {
			/*
			 * Start adding the array elements to the new column slot in reverse order.
			 */
			var columnNumber = 1;
			var subModule = this.navParent.subModule || this.navParent;
			var maxItemColumns = (subModule.mode == "large" && sub.page.isHighRes) ? 3 : 2;

			this.addColumn();

			var maxScrollHeight = Math.max(this.cols[0].slot.clientHeight, this._slot.clientHeight);

			for (var ii = overflowContent.length - 1; ii > -1; ii--) {
				var overflowDomItem = overflowContent[ii];
				this.cols[columnNumber].slot.appendChild(overflowDomItem);

				if (columnNumber + 1 < maxItemColumns) {
					if (maxScrollHeight + 1 < this.cols[columnNumber].slot.scrollHeight && this.cols[columnNumber].slot.childNodes.length > 1) {
						this.cols[columnNumber].slot.removeChild(this.cols[columnNumber].slot.lastChild);

						/*if (columnNumber === this.columnList.lastColumn - 1) 
                         break;
                         */
						if (columnNumber === this.lastColumn - 1)
							break;
						maxScrollHeight = Math.max(this.cols[columnNumber].slot.clientHeight, maxScrollHeight);
						++columnNumber;
						this.addColumn();
						ii++;
					}
				}
			}
		}
		// adjust the position of the scrollbar...
		$(this._slot).simplebar({
			css: {
				container: this._slot.className,
				content: this._body.className,
				scrollContent: this._scrollview.className,
				scrollbar: 'simplebar-scrollbar',
				scrollbarTrack: 'simplebar-track'
			},
			wrapContent: false,
			autoHide: false
		});

	}

};

DetailPanel.prototype.addColumn = function() {
	this.cols.push({
		slot: syra_dom.ul("s-mega-mn-detail-col", this._body)
	});
};

DetailPanel.prototype.dispose = function() {};

exports.add = function(navParent) {
	return new DetailPanel(navParent);
};