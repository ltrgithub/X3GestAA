"use strict";
var helpers = require('syracuse-core/lib/helpers');
var ModuleRecord = require("./moduleRecord").ModuleRecord;
var MultiList = require("syracuse-ui/lib/field/array/multiList").MultiList;

function ModuleList() {

}

exports.ModuleList = helpers.defineClass(ModuleList, MultiList, {
	loadBox: function(initData) {
		this.emptyMessage = this.localize.navigPageNoModule;
		this.$confirmDelete = this.localize.navigPageConfirmDeleteModule;
		this.$isEditMode = false;
		this.$isQuickDesignerDisabled = true;
		this.$item.$iconPath = "page/s-nav-";
		this.$item.$skinMenus = "s-nav-list-menus";
		this.$item.$isPagerHidden = true;
		this.$item.$selectMode = "row";
		MultiList.prototype.loadBox.call(this, initData);
	},
	setDataBind: function(dataRecordSet, parentDataRecord, metaData) {
		MultiList.prototype.setDataBind.call(this, dataRecordSet, parentDataRecord, metaData);
		if (this.records.length && this.selector.uuid == undefined) {
			this.selector.select(this.page.preferences.$module, true, true);
		}
	},
	drawBox: function() {
		MultiList.prototype.drawBox.call(this);
		this.body = this._core;
		this.fieldValue.style.overflow = "auto";
		this.$skin = this.$item.$skin || "s-cards";
		this.applyDesignMetaData(this.$item, false);
		this.loadSelector();
		this.applyCapabilities();
		document.site.ddManager.toggleColResizerObserver(this, true);
		this.ensureLayoutMode();
		this.layoutSlot.appendChild(this.domItem);
	},
	initializeList: function() {
		this.$item.$isTopLabelAlignment = true;
		this.RecordClass = ModuleRecord;
		if (!this.$item.$layout || !this.$item.$layout.$items) {
			this.$item.$layout = this.defineDefaultCard().$layout;
		}
		MultiList.prototype.initializeList.call(this);
	},
	_createMenusBox: function() {
		if (!this.isMenuLoaded) {
			this.isMenuLoaded = true;
			if (this.page.isAdminMode) {
				var $item;
				($item = this.defineNewIconMenu("$create", this.$skinMenus + "-link")).$icon.$value = "new-module";
				this.page.loadNewItem(this.menusSlot, $item, this);
				($item = this.defineNewIconMenu("$select", this.$skinMenus + "-link")).$icon.$value = "select-module";
				this.page.loadNewItem(this.menusSlot, $item, this);
			}
		}
	},
	isDraggable: function(target, event) {
		return this.isReorderRecordDraggable(target, event);
	},
	dispose: function() {
		document.site.emptyDom(this._core);
		MultiList.prototype.dispose.call(this);
	}
});