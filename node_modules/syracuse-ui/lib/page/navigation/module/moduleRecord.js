"use strict";
var helpers = require('syracuse-core/lib/helpers');
var RecordArticle = require("syracuse-ui/lib/field/array/recordArticle").RecordArticle;


function ModuleRecord() {}

exports.ModuleRecord = helpers.defineClass(ModuleRecord, RecordArticle, {
	loadBox: function() {
		this.isModuleRecord = true;
		this.$defaultSkinSection = this.$defaultSkinBlock = this.list.$item.$skinCard || "s-h3";
		RecordArticle.prototype.loadBox.call(this);
	},
	reorderItem: function(targetRecord, isAfter) {
		if (targetRecord) {
			targetRecord.domItem.parentNode.insertBefore(this.domItem, isAfter ? targetRecord.domItem.nextSibling : targetRecord.domItem);
		} else {
			if (isAfter) {
				this.list.body.appendChild(this.domItem);
			} else {
				this.list.body.insertBefore(this.domItem, this.list.body.firstChild);
			}
		}
	},

	applyChange: function(metaData) {
		RecordArticle.prototype.applyChange.call(this, metaData);
		if (this.dataset.description && this.dataset.description != this.dataset.title) {
			this.domItem.title = this.dataset.description;
		}
		if (this.dataset.code && this.icon) {
			this.icon.style.backgroundImage = "url('" + syra_site.$item.$iconPath + "modules/s_module_" + this.dataset.code.toLowerCase() + ".png')";
		}
		if (this.page.isAdminMode) {
			var titleMeta = metaData && metaData.$properties && metaData.$properties.title;
			if (titleMeta) {
				titleMeta.$isDisabled = true;
			}
			if (titleMeta && titleMeta.$isDisabled && this.boundFields.title && this.boundFields.title.length) {
				syra_site.dom.toggleClass(this.boundFields.title[0]._dataValue, "s-disabled", false);
			}
		}
	},
	drawBox: function() {
		this.$useDeletePicker = true;
		this.$item.$isPickerMenuHidden = true;
		this.$isVerticalDirection = true;
		this.dataRow = this.domItem = document.createElement("div");
		this.$skin = this.page.isAdminMode ? "s-nav-admin-module" : "s-nav-module";
		this.domItem.className = this.$skin;
		this.domItem.setAttribute("data-s-record", this.domItem.syraRecord = this.$uuid);
		this.domItem.syrainout = this.domItem.syraItem = this.id;
		this.dataSlot = this.body = document.createElement("div");
		this.icon = document.createElement("div");
		this.icon.className = this.$skin + "-icon";
		this.domItem.appendChild(this.icon);

		this.body.className = this.$skin + "-title";
		this.domItem.appendChild(this.body);
		if (this.page.isAdminMode) {
			this.menusSlot = this.domItem;
			this.list.capabilityMaker.addReorder(this);
		}
		if (this.list.selector.isRowMode) {
			this.body.syraOnClick = "onSelectorClick";
			this.body.className += " s-list-selector-row";
			this.body.setAttribute("data-s-record", this.body.syraRecord = this.$uuid);
		}
		this.cardItem = this.page.loadNewItem(this.body, {
			$bind: "title",
			$isMenusHidden: true,
			$isDetailLinkDisabled: true,
			$category: "field",
			$isEditMode: this.$isEditMode,
			$inplace: true
		}, this);
		this.list._core.appendChild(this.domItem);
		this.list.capabilityMaker.applyToRecord(this);
	},
	dispose: function() {
		var site = syra_site;
		site.dom.removeChild(this.subModulesHead);
		site.dom.removeChild(this.subModulesAdminBodySep);
		site.dom.removeChild(this.subModulesBody);
		site.dom.removeChild(this.subModulesSlot);
		this.subModulesItem = this.subModulesSlot = this.subModulesAdminTitleList = this.subModulesAdminBodySep = this.subModulesHead = this.subModulesAdminActions = this.subModulesBody = null;
		this.selectedSubModuleRecor = this.icon = this.cardItem = this.dataSlot = this.body = this.dataRow = null;
		RecordArticle.prototype.dispose.call(this);
	}
});