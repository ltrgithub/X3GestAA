"use strict";
var _moreModules = require('./moreModules');
var _megaDetailPanel = require('./megaDetailPanel');
var Carousel = require('syracuse-ui/lib/scroll/carousel').Carousel;

function _useLargeMode(items, isLastLevel) {
	var blockCount = 0;
	if (items) {
		for (var ii = 0, jj = items.length; ii < jj; ii++) {
			if (items[ii].menuBlock) {
				blockCount++;
				if (isLastLevel) {
					return true;
				} else {
					return _useLargeMode(items[ii].menuBlock.items, true);
				}
			}
		}
	}
	return blockCount > 6;
}

function _endLoad(page, $representation) {
	if ($representation) {
		syra_site.megaMenus.$prototype = $representation.$prototype;
		syra_site.megaMenus.dataset = {};
		var $keys = Object.keys($representation);
		for (var ii = 0, jj = $keys.length; ii < jj; ii++) {
			if ($keys[ii] != "$prototype" && $keys[ii] != "$article") {
				syra_site.megaMenus.dataset[$keys[ii]] = $representation[$keys[ii]];
			}
		}
		syra_site.megaMenus.load();
		syra_menus.applyChange(syra_site, {
			$links: {
				site_sitemap: {
					$isDisabled: false
				}
			}
		});
	}
}

exports.page = {
	load: function(page) {
		page.$skin = "s-nav-mega";
		page.body = page.modulesBar = syra_dom.ul(page.$skin + "-modules", syra_site.header);
		page.onNavMenuClick = function() {
			this.mega_togglePopup();
		};
		page.mega_togglePopup = function(content) {
			var self = this;
			if (content) {
				if (!self.mega_popup) {
					self.mega_popup = syra_dom.div(self.$skin + "-popup");
				}
				self.mega_popup.appendChild(content);
				if (!self.mega_popupDlg) {
					self.mega_popupDlg = syra_over.openPopup(self.page, {
						content: {},
						slot: self.mega_popup,
						autoCloseBoundary: self.modulesBar,
						picker: self.modulesBar,
						position: {
							my: "left top",
							at: "left bottom",
							of: self.modulesBar
						},
						close: function() {
							self.lastSelected && self.lastSelected.activate(false);
							self.mega_popupDlg = null;
						}
					});
					var height = syra_site.size.popupMaxHeight + "px";
					self.mega_popup.style.height = height;
					self.mega_popup.style.maxHeight = height;
					self.mega_popup.style.width = (self.isHighRes ? 1200 : 960) + "px";
					self.mega_popup.style.left = (self.modulesBar.clientWidth - self.mega_popup.clientWidth) / 2 + "px";
				}
			} else {
				self.mega_popupDlg && self.mega_popupDlg.close();
			}
		};
		if (page.$representation) {
			_endLoad(page, page.$representation);
		} else {
			syra_router.loadRepresentation({
				article: syra_site,
				segments: syra_config.$sitemapUrl,
				success: function($itemPage) {
					_endLoad(page, $itemPage && $itemPage.$representation);
				}
			});
		}
	},
	resizeItem: function(page) {
		if (page.isModulesLoaded) {
			if (page.modulesBar) {
				var maxW = page.modulesBar.clientWidth + 1; //1 for little space
				if (page.lastWidth != maxW) {
					_moreModules.resizeModulesBar(page, page.lastWidth = maxW);
				}
				page.isHighRes = page.modulesBar.clientWidth >= 1260;
			}
			if (page.mega_popup) {
				var height = syra_site.size.popupMaxHeight + "px";
				page.mega_popup.style.height = height;
				page.mega_popup.style.maxHeight = height;
			}
			page.megaDetailPanelActivated && page.megaDetailPanelActivated.resizeItem();
			var lastSelected = page.lastSelected;
			while (lastSelected) {
				lastSelected.carousel && lastSelected.carousel.validate();
				lastSelected = lastSelected.lastSelected;
			}
		}
	},
	dispose: function(page) {
		syra_dom.remove(page.modulesBar);
	}
};

exports.module = {
	create: function(module) {
		module.slot.textContent = module.dataset.title;
	},
	activate: function(on, module) {
		if (on) {
			this._showSubModules(module);
		} else {
			syra_dom.empty(module.scrollview.parentNode);
		}
	},
	_showSubModules: function(module) {
		var page = module.page;
		if (!module.body) {
			module.scrollview = syra_dom.div(page.$skin + "-submodules-slot");
			module.body = syra_dom.ul(page.$skin + "-submodules", module.scrollview);
			if (module.dataset.submodules) {
				module.carousel = new Carousel({
					page: page,
					view: module.scrollview,
					content: module.body,
					css: "s-nav-mega-carousel"
				});
			}
			module.addSubModules();
		}
		page.mega_togglePopup(module.scrollview);
		module.carousel && module.carousel.validate();
	}
};

exports.subModule = {
	create: function(sub) {
		sub.title = syra_dom.text(sub.$skin + "-title", sub.dataset.title, sub.slot);
		if (_useLargeMode(sub.dataset.items)) {
			sub.mode = "large";
			sub.scrollview = syra_dom.div(sub.$skin + "-large-slot");
			sub.body = syra_dom.ul(sub.$skin + "-large", sub.scrollview);
			sub.carousel = new Carousel({
				page: sub.page,
				view: sub.scrollview,
				content: sub.body,
				css: "s-nav-mega-carousel"
			});
			sub.$skin_menu = sub.$skin + "-large-link";
		} else {
			sub.mode = "small";
			sub.megaDetailPanel = _megaDetailPanel.add(sub);
		}
		sub.addItems(sub.dataset.items);
	},
	activate: function(on, block) {
		if (on) {
			block.page.mega_popup.appendChild(block.scrollview || block.body);
			block.megaDetailPanel && block.megaDetailPanel.activate();
			block.navParent.lastSelected = block;
			block.carousel && block.carousel.validate();
		} else {
			var scrollview = block.scrollview || block.body;
			if (scrollview.parentNode) {
				while (block.page.mega_popup.lastChild != scrollview) {
					syra_dom.remove(block.page.mega_popup.lastChild);
				}
				syra_dom.remove(scrollview);
			}
		}
		block.title.className = block.$skin + "-title" + (on ? " s-selected" : "");
		block.slot.className = block.$skin + (on ? " s-selected" : "");
	}
};

exports.menuBlock = {
	create: function(block) {
		if (block.submodule == block.navParent && block.submodule.mode == "large") {
			block.$skin = block.submodule.$skin + "-large-block";
			block.megaDetailPanel = _megaDetailPanel.add(block);
		} else {
			block.body = syra_dom.ul(block.$skin + "-body");
		}
		block.domItem = block.slot = syra_dom.li(block.$skin);
		block.title = syra_dom.text(block.$skin + "-title", block.dataset.title, block.slot);
		block.domItem.syrainout = block.id;
	}
};