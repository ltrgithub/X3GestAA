"use strict";
var helpers = require('syracuse-core/lib/helpers');
var RecordArticle = require("syracuse-ui/lib/field/array/recordArticle").RecordArticle;


function LandingPageRecord() {}

exports.LandingPageRecord = helpers.defineClass(LandingPageRecord, RecordArticle, {
	loadBox: function() {
		this.isLandingPageRecord = true;
		this.$defaultSkinSection = this.$defaultSkinBlock = this.list.$item.$skinCard || "s-h3";
		RecordArticle.prototype.loadBox.call(this);
	},
	reorderItem: function(targetRecord, isAfter) {
		if (targetRecord) {
			targetRecord.domItem.parentNode.insertBefore(this.domItem, isAfter ? targetRecord.domItem.nextSibling : targetRecord.domItem);
		} else {
			if (isAfter) {
				this.list.body.appendChild(this.domItem);
			} else {
				this.list.body.insertBefore(this.domItem, this.list.body.firstChild);
			}
		}
	},
	remove: function() {
		if (this.$$item) {
			this.$$item.remove();
		}
	},
	applyReorderCapability: function(reorder) {
		if (this.hasReorderCapability = reorder) {
			if (!this.reorderPicker) {
				this.reorderPicker = document.createElement("div");
				this.reorderPicker.className = this.$skin + "-card-reorder";
				this.reorderPicker.syraReorderRecordId = this.list.id;
				document.site.ddManager.setDragSpot(this.reorderPicker, true);
				this.domItem.insertBefore(this.reorderPicker, this.domItem.firstChild);
			}
		} else {
			if (this.reorderPicker) {
				document.site.removeDomChild(this.reorderPicker);
				delete this.reorderPicker;
			}
		}
	},
	applyChange: function(metaData) {
		RecordArticle.prototype.applyChange.call(this, metaData);
		if (this.dataset.description && this.dataset.description != this.dataset.title) {
			this.domItem.title = this.dataset.description;
		}
	},
	drawBox: function() {
		this.$isVerticalDirection = true;
		this.dataRow = this.domItem = document.createElement("div");
		this.$skin = "s-nav-module";
		this.domItem.className = this.$skin;
		this.domItem.setAttribute("data-s-record", this.$uuid);
		this.domItem.setAttribute("data-s-inout", this.id);
		this.$$item = $(this.domItem);
		this.dataSlot = this.body = document.createElement("div");
		this.body.className = this.$skin + "-title";
		this.domItem.appendChild(this.body);

		this.menusSlot = document.createElement("div");
		this.menusSlot.className = this.$skin + "-links";
		this.domItem.appendChild(this.menusSlot);
		this.applyReorderCapability(true);

		if (this.list.selector.isRowMode) {
			this.body.setAttribute("data-s-picker", "list-selector");
			this.body.className += " s-list-selector-row";
			this.body.setAttribute("data-s-record", this.$uuid);
		}

		this.cardItem = this.page.loadNewItem(this.body, {
			$bind: "title",
			$isMenusHidden: true,
			$isDetailLinkDisabled: true,
			$category: "field",
			$isEditMode: this.$isEditMode,
			$inplace: true
		}, this);
		this.list._core.appendChild(this.domItem);
		this.list.applyRecordCapabilities(this);
		this.page.ensureDesignedItemVisibility(this);
	},
	_createMenusBox: function() {
		if (!this._isMenuLoaded) {
			this._isMenuLoaded = true;
			this.page.ensureDesignedItemVisibility(this);
			this.page.loadNewItem(this.menusSlot, {
				$noText: true,
				$category: "link",
				$skin: this.$skin + "-link",
				$bind: "$edit",
				$icon: {
					$mode: "icon",
					$path: "list/s-list-"
				}
			}, this);
			this.page.loadNewItem(this.menusSlot, {
				$noText: true,
				$category: "link",
				$skin: this.$skin + "-link",
				$bind: "$delete",
				$icon: {
					$mode: "icon",
					$path: "list/s-list-"
				}
			}, this);
		}
	},
	onItemEnterLeave: function(event) {
		this.page.ensureDesignedItemVisibility(this, event);
		RecordArticle.prototype.onItemEnterLeave.call(this, event);
	},
	onSelectMouseEvent: function(event) {
		document.site.toggleClass(this.domItem, "s-record-over", event.type == "mouseenter");
	},
	onModuleSelected: function(module) {
		this.modules[module.$uuid];
		if (module.subModules) {
			for (var ii = 0, jj = module.subModules.length; ii < jj; ii++) {

			}
		}
	},
	highlightSelection: function(selected) {
		document.site.toggleClass(this.domItem, "s-list-record-selected", selected);
		if (selected) {
			if (!this.subModulesItem) {
				this.subModulesSlot = document.createElement("div");
				this.subModulesHead = document.createElement("div");
				this.subModulesBody = document.createElement("div");
				if (this.page.isAdminMode()) {
					this.subModulesSlot.className = "s-nav-submodules-slot-admin";
					this.subModulesAdminTitleList = document.createElement("div");
					this.subModulesHead.appendChild(this.subModulesAdminTitleList).className = "s-nav-submodules-titles-admin";
					this.subModulesAdminActions = document.createElement("div");
					this.subModulesHead.appendChild(this.subModulesAdminActions).className = "s-nav-submodules-actions-admin";
					this.subModulesSlot.appendChild(this.subModulesHead).className = "s-nav-submodules-head-admin";
					this.subModulesBody.className = "s-nav-submodules-body-admin";
				} else {
					this.subModulesSlot.className = "s-nav-submodules-slot";
					this.subModulesBody.className = "s-nav-submodules-body";
				}
				this.subModulesSlot.appendChild(this.subModulesBody).className = "s-nav-submodules-body-admin";
				this.subModulesItem = this.page.loadNewItem(this.subModulesBody, {
					$isTitleHidden: true,
					$bind: "submodules"
				}, this);
				this.page.layoutContent.domItem.appendChild(this.subModulesSlot);
			}
			this.subModulesSlot.style.display = "";
		} else {
			if (this.subModulesSlot) {
				this.subModulesSlot.style.display = "none";
			}
		}
	},
	dispose: function() {
		this.subModulesItem = this.subModulesSlot = this.subModulesAdminTitleList = this.subModulesHead = this.subModulesAdminActions = this.subModulesBody = null;
		this.cardItem = this.domItem = this.dataSlot = this.body = this.menusSlot = this.dataRow = null;
		RecordArticle.prototype.dispose.call(this);
	}
});