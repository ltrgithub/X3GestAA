"use strict";
var helpers = require('syracuse-core/lib/helpers');
var VignettePage = require('syracuse-ui/lib/page/vignettePage').VignettePage;
var _facetsBar = require('syracuse-ui/lib/search/facetsBar');

function LandingSearchVignettePage() {}

exports.LandingSearchVignettePage = helpers.defineClass(LandingSearchVignettePage, VignettePage, {
	loadBox: function(initData) {
		this.isMenuBarDisabled = true;
		VignettePage.prototype.loadBox.call(this, initData);
		_facetsBar.load(this, {
			$facetSkin: "s-search-vignette",
			$isResizerDisabled: true
		}, {
			$filters: ["menuModule", "menuCategory"],
			$order: ["menuModule", "menuCategory"]
		});
	},
	applyChange: function(newData) {
		VignettePage.prototype.applyChange.call(this, newData);
		newData && newData.$searchFacets && _facetsBar.fill(this.dataset.$searchFacets);
	},
	checkFacetBarVisibility: function() {
		_facetsBar.checkVisibility();
	},
	onFieldInputEvent: function(event) {
		_facetsBar.onFieldInputEvent(event);
	},
	onItemInOut: function(onEnter, event, target) {
		_facetsBar.onItemInOut(onEnter, event, target);
	},
	fetch: function(options, callback, error) {
		this.vignetteField && this.vignetteField.page.fetch(options);
	},
	onMenuClick: function(menu) {
		return this.vignetteField.page.onMenuClick(menu);
	},
	onSelectRecord: function(records) {
		if (records) {
			var keys = Object.keys(records);
			keys.length && syra_menus.click.detail(records[keys[0]]);
		}
	},
	setFilterQueryParam: function(options) {
		this.vignetteField.page.setFilterQueryParam(options);
	},
	dispose: function() {
		_facetsBar.dispose();
	}
});