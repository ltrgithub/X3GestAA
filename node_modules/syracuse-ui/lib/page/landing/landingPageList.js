"use strict";
var helpers = require('syracuse-core/lib/helpers');
var LandingPageRecord = require("./landingPageRecord").LandingPageRecord;
var MultiList = require("syracuse-ui/lib/field/array/multiList").MultiList;

function LandingPageList(){

}

exports.LandingPageList = helpers.defineClass(LandingPageList, MultiList, {
    loadBox: function(initData){
        this.emptyMessage = this.localize.landingPageNoPage;
        this.$confirmDelete = this.localize.landingPageConfirmDelete;
        this.$isEditMode = false;
        this.$isQuickDesignerEnabled = false;
        this.$item.$skinMenus = "s-nav-list-menus";
        this.$item.$isPagerHidden = true;
        this.$item.$selectMode = "row";
        this.selectFirstByDefault = true;
        MultiList.prototype.loadBox.call(this, initData);
    },
    drawBox: function(){
        MultiList.prototype.drawBox.call(this);
        this.body = this._core;
        this.fieldValue.style.overflow = "auto";
        this.$skin = this.$item.$skin || "s-cards";
        this.applyDesignMetaData(this.$item, false);
        this.loadSelector();
        this.applyCapabilities();
        document.site.ddManager.toggleColResizerObserver(this, true);
        this.ensureLayoutMode();
        this.layoutSlot.appendChild(this.domItem);
        this.topbar.className += " s-nav-modules-bar";
        this._core.parentNode.appendChild(this.topbar);
    },
    initializeList: function(){
        this.$item.$isTopLabelAlignment = true;
        this.RecordClass = LandingPageRecord;
        if (!this.$item.$layout || !this.$item.$layout.$items) {
            this.$item.$layout = this.defineDefaultCard().$layout;
        }
        MultiList.prototype.initializeList.call(this);
    },
    _createMenusBox: function(){
        if (!this.isMenuLoaded) {
            this.isMenuLoaded = true;
            this.page.ensureDesignedItemVisibility(this);
            if (this.page.isAdminMode) {
                this.page.loadNewItem(this.menusSlot, {
                    $skin: this.$skinMenus + "-link",
                    $bind: "$create",
                    $category: "link",
                    $icon: {
                        $mode: "iconText",
                        $path: "list/s-list-"
                    }
                }, this);
                this.page.loadNewItem(this.menusSlot, {
                    $skin: this.$skinMenus + "-link",
                    $bind: "$select",
                    $category: "link",
                    $icon: {
                        $mode: "iconText",
                        $path: "list/s-list-"
                    }
                }, this);
            }
        }
    },
    onWindowResize: function(){
        if (!this.disposed && this.records) {
            for (var ii = 0, jj = this.records.length; ii < jj; ii++) {
                this.records[ii].resizeResizableChildren();
            }
        }
    },
    isDraggable: function(target, event){
        return this.isReorderRecordDraggable(target, event);
    },
    dispose: function(){
        document.site.emptyDom(this._core);
        this.rows = null;
        MultiList.prototype.dispose.call(this);
    }
});
