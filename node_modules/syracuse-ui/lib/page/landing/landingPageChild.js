"use strict";
var helpers = require('syracuse-core/lib/helpers');
var LandingPageDesigner = require("syracuse-ui/lib/page/landing/designer/landingPageDesigner").LandingPageDesigner;
var DesktopPage = require('syracuse-ui/lib/page/desktopPage').DesktopPage;

function LandingPageChild() {}

exports.LandingPageChild = helpers.defineClass(LandingPageChild, DesktopPage, {
	designArticle: function(open) {
		if (open) {
			this.designer = new LandingPageDesigner();
			this.designer.openDesigner(this);
		} else {
			if (this.designer) {
				this.designer.dispose();
			}
			this.designer = null;
			this.resizeArticle();
		}
	},
	dispose: function() {
		this.landingPageMaster = this.masterRecord = this.addLink = this.refreshLink = this.designPicker = null;
		DesktopPage.prototype.dispose.call(this);
	},
	getAddVignetteDefinition: function() {
		var vignettes = this.masterRecord.$prototype.$properties.vignettes;
		return vignettes && vignettes.$links && vignettes.$links.$select;
	},
	appendHeader: function() {
		DesktopPage.prototype.appendHeader.call(this);

		this.addLink = document.createElement("a");
		this.addLink.style.display = "none";
		this.addLink.className = "s-ldp-add-vignette";
		this.addLink.title = this.localize.ldpAddVignette;
		this.addLink.setAttribute("data-s-picker", "s-ldp-add-vignette");

		this.headerCoreRight.appendChild(this.addLink);
		this.headerCoreRight.setAttribute("data-s-inout", this.id);
		this.refreshLink = document.createElement("a");
		this.refreshLink.className = "s-ldp-refresh";
		this.refreshLink.title = this.localize.ldpRefresh;
		this.refreshLink.setAttribute("data-s-picker", "s-ldp-refresh");
		this.headerCoreRight.appendChild(this.refreshLink);
		if (this.isDesignModeEnabled) {
			this.designPicker = document.createElement("a");
			this.designPicker.className = "s-ldp-designer-picker";
			this.designPicker.setAttribute("data-s-picker", "ldp-openDesigner");
			this.designPicker.title = this.localize.ldpOpenDesigner;
			this.designPicker.style.display = this.refreshLink.style.display = "none";
			this.headerCoreRight.appendChild(this.designPicker);
		}
	},
	onItemEnterLeave: function(event) {
		if (event.currentTarget == this.headerCoreRight) {
			this.toggleCssOnEnter(this.headerCoreRight, event);
		}
	},
	onClickPicker: function(picker, event) {
		switch (picker.getAttribute("data-s-picker")) {
			case "s-ldp-add-tab":
				this._createNewTab();
				this.designer.endArticleUpdate();
				break;
			case "s-ldp-add-vignette":
				this.landingPageMaster.addVignette(this);
				event.stopPropagation();
				return false;
			case "s-ldp-refresh":
				var items = this.layoutContent.getFields();
				for (var ii = 0, jj = items.length; ii < jj; ii++) {
					items[ii].refresh();
				}
				event.stopPropagation();
				return false;
			case "ldp-openDesigner":
				this.designer.toggleDesigner();
				event.stopPropagation();
				return false;
		}
		return true;
	},
	onEditTabClick: function(picker) {
		var box = document.site.itemHelper.findBox(picker);
		this.editTitleSlot = document.createElement("div");
		this.editTitleSlot.className = box.$skin + "-edit-text";
		var titleText = box.tabTitle ? box.tabTitleText : box.titleText;
		titleText.style.display = "none";
		titleText.parentNode.insertBefore(this.editTitleSlot, titleText);
		this.editTitleField = this.page.loadNewItem(this.editTitleSlot, {
			$category: "field",
			//$contentEditable: true,
			$isTitleHidden: true,
			$isTopLabelAlignment: false,
			$isEditMode: true,
			$field: {
				$isMandatory: true,
				$type: "application/x-string"
			}
		});
		this.editTitleField.setDataValue(box.getTitle());
	},
	deleteOpenedTab: function() {
		var self = this;
		var box = self.layoutContent.getOpenedTab();
		if (box && box.layoutContent) {
			var vignettes = box.layoutContent.getFields();
			document.site.showMessage({
				$title: self.localize.ldpDeleteVignette,
				$message: self.localize.ldpConfirmTabDeleteVignette.replace("{0}", box.getTitle()),
				$type: "question",
				callback: function(response) {
					if (response && response.$clientId === "yes") {
						var uiids = [];
						for (var ii = 0, jj = vignettes.length; ii < jj; ii++) {
							uiids.push(vignettes[ii].$field.$vignetteId);
						}
						var fields = box.layoutContent.getFields();
						for (var ii = 0, jj = fields.length; ii < jj; ii++) {
							self.removeItem(fields[ii], true, true);
						}
						box.layoutParent.removeItem(box, true);
						self.landingPageMaster.deleteVignettes(self.masterRecord, uiids);
					}
				}
			});
		}
	},
	applyShortCuts: function(shortcurts, event) {
		if (shortcurts.esc && shortcurts.r) {
			var $binds = Object.keys(this.boundFields);
			for (var ii = 0, jj = $binds.length; ii < jj; ii++) {
				var field = this.boundFields[$binds[ii]][0];
				if (field.vignette && field.vignette.applyShortCuts) {
					field.vignette.applyShortCuts(shortcurts);
				}
			}
			return true;
		}
		return DesktopPage.prototype.applyShortCuts.call(this, shortcurts, event);
	},
	ensureDefaultArticle: function($article, $prototype) {
		$article = $article || {};
		$article.$layout = $article.$layout || {};
		$article.$layout.$layoutType = "tabs";
		$article.$layout.$items = $article.$layout.$items || [];
		return $article;
	},
	_createNewTab: function() {
		var tab = this.layoutContent.loadChildItem(null, {
			$category: "section",
			$isEmptyVisible: true,
			$title: document.site.localizer.getDefaultTabTitle(this),
		}); //, this.layoutContent.items.indexOf(sibling));
		tab.openBox(true);
		return tab;
	},
	onBoxClickItem: function(box, link) {
		if (box) {
			if (box.isTabLayout) {
				if (this.designer) {
					this.designer.onTabClik(box);
				}
				this.landingPageMaster.preferences.tabs = this.landingPageMaster.preferences.tabs || {};
				this.landingPageMaster.preferences.tabs[this.masterRecord.$uuid] = box.layoutParent.getChildIndex(box);
				this.landingPageMaster.savePreferences();
			}
		}
		return true;
	},
	removeDeletedVignettes: function($vignettes) {
		var $binds = Object.keys(this.$prototype.$properties);
		for (var ii = 0, jj = $binds.length; ii < jj; ii++) {
			var $bind = $binds[ii];
			if (!$vignettes[$bind]) {
				var fields = this.boundFields[$bind];
				if (fields) {
					for (var mm = 0, kk = fields.length; mm < kk; mm++) {
						var vignette = fields[mm];
						vignette.layoutParent.removeItem(vignette, true, true);
						delete this.$prototype.$properties[$bind];
					}
				}
				delete this.boundFields[$bind];
			}
		}
	},
	applyVignettesChange: function($vignettes) {
		this.removeDeletedVignettes($vignettes);
		var $binds = Object.keys($vignettes);
		for (var ii = 0, jj = $binds.length; ii < jj; ii++) {
			var $bind = $binds[ii];
			var $vignette = $vignettes[$bind];
			var $field = this.$prototype.$properties[$bind];
			if (!$field) {
				var tab = this.layoutContent.getOpenedTab() || this._createNewTab();
				this.$prototype.$properties[$bind] = $vignette;
				tab.layoutContent.createChildItem({
					$bind: $bind
				});
			}
		}
		if (this.designer) {
			this.designer.endArticleUpdate(null, null, false);
		}
	},
	getPageSlot: function() {
		return document.site.body;
	},
	loadBox: function(initData, $initDiagnoses) {
		this.isMenuBarDisabled = true;
		this.mainPageDesignerAccess = "unknow";
		this.landingPageMaster = (this.masterRecord = this.$prototype.masterRecord).page;
		delete this.$prototype.masterRecord;
		this.isDesignModeEnabled = this.masterRecord.getSaveDesignLink() != null;
		this.isAutoInsertFieldDisabled = true;
		this.isLandingPage = true;
		this.$skin = this.$item.$skin || "s-ldp";
		this.$skinMenu = "s-ldp-nav";
		this.$defaultSkinBlock = "s-ldp-h2";
		this.$defaultSkinSection = "s-ldp-h1";
		this._defaultTitle = this.localize.ldpTitle;
		this.$autoFetch = false;
		this.landingPageMaster.preferences.tabs = this.landingPageMaster.preferences.tabs || {};
		this.$item.$layout.$tabIndex = this.landingPageMaster.preferences.tabs[this.masterRecord.$uuid] || 0;
		DesktopPage.prototype.loadBox.call(this, initData, $initDiagnoses);
		if (this.isDesignModeEnabled) {
			this.addTab = document.createElement("a");
			this.addTab.className = "s-ldp-add-tab";
			this.addTab.textContent = "+";
			this.addTab.title = this.localize.ldpAddTab;
			this.addTab.setAttribute("data-s-picker", "s-ldp-add-tab");
			this.layoutContent.tabStop = this.layoutContent._tabs.appendChild(this.addTab);
			this.designPicker.style.display = this.refreshLink.style.display = "";
		}
		//temp for right implementation
		if (this.pageViewSelector) {
			this.pageViewSelector.disable(false);
		}
		if (this.isDesignModeEnabled) {
			this.designArticle(true);
		}
		if (this.isDesignModeEnabled && this.getAddVignetteDefinition()) {
			this.addLink.style.display = "";
		}
	}
});