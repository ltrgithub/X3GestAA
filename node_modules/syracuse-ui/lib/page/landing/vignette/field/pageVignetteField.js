"use strict";
var helpers = require('syracuse-core/lib/helpers');
var VignetteField = require("syracuse-ui/lib/page/landing/vignette/field/vignetteField").VignetteField;

function PageVignetteField() {}

exports.PageVignetteField = helpers.defineClass(PageVignetteField, VignetteField, {
	showAdvancedFields: function(show) {
		if (!this._isOnChildPageUpdate) {
			VignetteField.prototype.showAdvancedFields.call(this, show);
			if (this.vignette && this.vignette.showAdvancedFields) {
				this._isOnChildPageUpdate = true;
				this.vignette.showAdvancedFields(this.vignette.$isAdvancedFieldsVisible = this.$isAdvancedFieldsVisible);
				this._isOnChildPageUpdate = false;
			}
		}
	},
	doPicker: function(pickerId) {
		VignetteField.prototype.doPicker.call(this, pickerId);
		switch (pickerId) {
			case "design":
				this.designArticle(!this.designer);
				break;
		}
	},
	designArticle: function(open) {
		if (this.vignette && this.vignette.$facet == "$query") {
			var fields = this.vignette.layoutContent.getFields();
			for (var ii = 0, jj = fields.length; ii < jj; ii++) {
				if (fields[ii].isList) {
					var open = !fields[ii].designer;
					fields[ii].designArticle(open);
					break;
				}
			}
		}
	},
	renderLayoutContent: function($url, onVignetteRefresh) {
		var self = this;
		VignetteField.prototype.renderLayoutContent.call(self);
		if ($url) {
			self.$url = $url;
		}
		// to handle search vignette page (fk)
		if (!self.$url && self.$field && self.$field.$prototype) {
			var $itemPage = {};
			$itemPage.layoutSlot = self.body;
			$itemPage.$category = "vignette";
			$itemPage.vignetteField = self;
			$itemPage.$urlParts = {
				$facet: "$query"
			};
			$itemPage.$autoFetch = false;
			$itemPage.$representation = self.$field;
			self.vignette = document.site.loadNewPage($itemPage);
			if (onVignetteRefresh) {
				self.onItemEnterLeave(null, true);
			}
		} else {
			document.controller.loadRepresentation(null, self.$url || self.$field.$location.$url, function($itemPage) {
				if (self.body) {
					$itemPage.layoutSlot = self.body;
					$itemPage.$category = "vignette";
					$itemPage.vignetteField = self;
					if (!self.$url && self.$item.$page) {
						$itemPage.$representation.$article = self.$item.$page;
						delete self.$item.$page.$menus;
					}
					self.vignette = document.site.loadNewPage($itemPage);
					if (onVignetteRefresh) {
						self.onItemEnterLeave(null, true);
					}
				}
			});
		}

	}
});