"use strict";
var helpers = require('syracuse-core/lib/helpers');
var VignetteField = require("syracuse-ui/lib/page/landing/vignette/field/vignetteField").VignetteField;
var HTMLVignetteDesigner = require("syracuse-ui/lib/authoring/htmlVignetteDesigner").HTMLVignetteDesigner;

function HTMLVignetteField() {}

exports.HTMLVignetteField = helpers.defineClass(HTMLVignetteField, VignetteField, {
	ensureDefaultTitle: function() {

	},
	setDataBind: function(value, record, metaData, $bind) {
		if (this.page.externalAdapter.setDataBind(this, value, record, metaData)) {
			if (value !== undefined) {
				this.$contentUrl = this.$item.$url = value;
				this._showUrl();
			}
		}
	},
	applyDesignMetaData: function(metaData, designing) {
		VignetteField.prototype.applyDesignMetaData.call(this, metaData, designing);
		if (metaData.$url !== undefined) {
			this.$contentUrl = this.$item.$url = metaData.$url;
		}
		if (metaData.$width !== undefined) {
			this.$item.$width = metaData.$width;
			if (this._iframe) {
				this._iframe.style.width = this.$item.$width;
			}
		}
		if (metaData.$opened !== undefined) {
			this.openBox(this.$item.$opened = metaData.$opened);
		}
		if (metaData.$url !== undefined) {
			this._showUrl();
		}
		if (metaData.$isPageHeightDocked !== undefined || metaData.$height !== undefined) {
			if (metaData.$isPageHeightDocked !== undefined) {
				this.$item.$isPageHeightDocked = metaData.$isPageHeightDocked;
			}
			if (metaData.$height !== undefined) {
				this.$item.$height = metaData.$height;
			}
			if (this._iframe) {
				if (this.$item.$isPageHeightDocked) {
					this.resizeField();
				} else {
					if (!this.isMaximized) {
						this._iframe.style.height = this.$item.$height;
					}
				}
			}
		}
	},
	resizeField: function() {
		if (this._iframe) {
			var maxHeight = this.page.scrollview.clientHeight;
			this._iframe.style.display = "";
			if (this.isMaximized) {
				this._iframe.style.height = maxHeight + "px";
				this._iframe.style.height = (maxHeight - (this.page.scrollview.scrollHeight - maxHeight)) + "px";
			} else {
				if (this.$item.$isPageHeightDocked) {
					var scrollTop = this.page.scrollview.getScrollviewSize().top;
					var bodyTop = this._iframe.getBoundingClientRect().top;
					if (bodyTop) {
						this._iframe.style.height = (maxHeight - (bodyTop - scrollTop) - 20) + "px";
					}
				} else {
					this._iframe.style.height = this.$item.$height || document.body.clientHeight * 0.8 + "px";
				}
			}
		}
	},
	onSwitchMaximize: function() {
		if (!this.isMaximized) {
			this._iframe.style.height = this.$item.$height || "100%";
		}
		this.resizeField();
	},
	designArticle: function(open) {
		syra_site.dom.toggleClass(this.btns.items.design, "s-close", open);
		syra_site.designArticle(open, this, HTMLVignetteDesigner);
	},
	_showUrl: function() {
		var sb;
		if (this.$contentUrl) {
			if (!this._iframe) {
				this._iframe = document.createElement("iframe");
				this._iframe.target = "_top";
				if ((sb = this._getSecurityLevel()) !== null) {
					this._iframe.setAttribute("sandbox", sb);
				}
				this._iframe.style.width = this.$item.$width || "100%";
				this._iframe.style.display = "none";
				syra_site.dom.empty(this.body);
				this.body.appendChild(this._iframe);
			}
			this._iframe.setAttribute("src", this.$contentUrl);
			this.domTitle.href = this.$contentUrl;
			this.domTitle.target = "_blank";
		} else {
			this.domTitle.href = "";
			this.domTitle.target = "";
			syra_site.dom.empty(this.body);
			this._iframe = null;
		}
		syra_site.dom.toggleClass(this.domTitle, "s-title-link", this.$contentUrl != null);
	},
	renderLayoutContent: function() {
		VignetteField.prototype.renderLayoutContent.call(this);
		if (!this.$contentUrl) {
			this.$contentUrl = this.$field.$location && this.$field.$location.$url;
		}
		var title = this.domTitle.textContent;
		this.domTitle.title = title;
		this.domTitle.textContent = title;
		this._showUrl();
	},
	_getSecurityLevel: function() {
		var l1, l2, l3, i, len;
		// Expected values : "low", "medium", "high"
		if (this.$field && (l1 = this.$field.$securityLevel)) {
			if (typeof l1 !== 'string') {
				// How vignette could contains several sources (especially for classic pages), at now we align security on the most restrictive source level
				l2 = l1[0];
				for (i = 1, len = l1.length; i < len; i++) {
					if ((l3 = l1[i]) && l3.charCodeAt(l3.length - 1) < l2.charCodeAt(l2.length - 1)) {
						l2 = l3;
					}
				}
				l1 = null;
			}
		}
		switch ((l1 || l2)) {
			case "high":
				l3 = "";
				break;
			case "low":
				l3 = null;
				break;
			default:
				// So, medium level
				l3 = "allow-same-origin allow-forms allow-scripts";
		}
		return l3;
	},
	dispose: function() {
		this._iframe = null;
		VignetteField.prototype.dispose.call(this);
	}
});