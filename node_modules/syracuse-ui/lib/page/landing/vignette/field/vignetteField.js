"use strict";
var helpers = require('syracuse-core/lib/helpers');
var SectionBlock = require("syracuse-ui/lib/article/sectionBlock").SectionBlock;

function VignetteField() {}

exports.VignetteField = helpers.defineClass(VignetteField, SectionBlock, {
	ensureSkin: function() {
		SectionBlock.prototype.ensureSkin.call(this);
		this.$skinSlot = this.$skin;
		this.$designLevel = "field";
	},
	ensureVisibility: function() {
		//specific behavior for vignetteField that are section and field
		return true;
	},
	resizeField: function() {},
	setDataBind: function(value, record, metaData, $bind) {},
	loadBox: function() {
		SectionBlock.prototype.loadBox.call(this);
		if (this.page.registerVignette) {
			this.page.registerVignette(this);
		} else {
			this.articleParent.bind(this, this.$item.$bind);
		}
		this.articleParent.registerAutoSizeFields(this, true);
	},
	dispose: function() {
		this.articleParent.registerAutoSizeFields(this, false);
		this.vignette = this.$field = null;
		SectionBlock.prototype.dispose.call(this);
	},
	refresh: function(onVignetteRefresh) {
		this.renderLayoutContent(null, onVignetteRefresh);
	},
	onDesignOpenerClick: function(picker, event) {
		this.designArticle(!this.designer);
	},
	onDeleteClick: function(picker, event) {
		this.page.landingPageMaster.onDeleteVignetteClick(this);
	},
	onRefreshClick: function(picker, event) {
		this.refresh(true);
	},
	onItemInOut: function(onEnter, event) {
		if (!(event && event.target != this.domItem)) {
			if (this.pickers && !syra_site.siteOptions.isOffice && !syra_site.isTabletDevice) {
				this.pickers.slot.style.visibility = onEnter ? "visible" : "hidden";
			}
		}
	},
	ensurePickersVisibiliy: function() {
		this.onItemInOut();
	},
	drawBox: function() {
		if (syra_site.isTabletDevice) {
			this.pickerWidth = 25;
		}
		this.domItem = document.createElement("section");
		this.domItem.className = this.$skin;
		this.domItem.syrainout = this.id;

		this.layoutSlot.appendChild(this.domItem);
		this.setState(this.$item);
		this.body = document.createElement("div");
		this.body.className = this.$skin + "-body";
		this.appendHeader();
		this.ensureLayoutMode();
		this.domItem.appendChild(this.body);
		this.applyDesignMetaData(this.$item, false);
		if (this.page.isDesignModeEnabled) {
			this.togglePicker("design", true);
		}
		this.togglePicker("refresh", true);
		this.togglePicker("maximizebox", true);
		if (this.page.isDesignModeEnabled) {
			this.togglePicker("delete", true);
		}
		this.openBox(this.$item.$opened !== false);
	},
	onDesignVignette: function(open) {
		if (this.pickers.items) {
			var site = syra_site;
			var ids = Object.keys(this.pickers.items);
			for (var ii = 0, jj = ids.length; ii < jj; ii++) {
				if (ids[ii] != "maximizebox") {
					site.dom.disableItem(this.pickers.items[ids[ii]], open);
				}
			}
		}
	},
	ensureLayoutMode: function() {
		this.ensureSkin();
		if (this.layoutParent) {
			this.layoutParent.ensureLayoutSlot(this);
		}
	},
	renderLayoutContent: function() {
		if (this.vignette) {
			syra_site.dom.empty(this.body);
			this.vignette.dispose();
		}
	}
});