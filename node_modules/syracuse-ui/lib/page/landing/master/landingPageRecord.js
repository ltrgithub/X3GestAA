"use strict";
var helpers = require('syracuse-core/lib/helpers');
var RecordArticle = require("syracuse-ui/lib/field/array/recordArticle").RecordArticle;
var LandingPageChild = require('syracuse-ui/lib/page/landing/landingPageChild').LandingPageChild;

function LandingPageRecord(){
}

exports.LandingPageRecord = helpers.defineClass(LandingPageRecord, RecordArticle, {
    loadBox: function(){
        this.$defaultSkinSection = this.$defaultSkinBlock = this.list.$item.$skinCard || "s-h3";
        RecordArticle.prototype.loadBox.call(this);
    },
    resizeArticle: function(){
        RecordArticle.prototype.resizeArticle.call(this);
        if (this.childPage) {
            this.childPage.resizeArticle();
        }
    },
    reorderItem: function(targetRecord, isAfter){
        if (targetRecord) {
            targetRecord.domItem.parentNode.insertBefore(this.domItem, isAfter ? targetRecord.domItem.nextSibling : targetRecord.domItem);
        }
        else {
            if (isAfter) {
                this.list.body.appendChild(this.domItem);
            }
            else {
                this.list.body.insertBefore(this.domItem, this.list.body.firstChild);
            }
        }
    },
    remove: function(){
        if (this.$$item) {
            this.$$item.remove();
        }
    },
    applyReorderCapability: function(reorder){
        if (this.hasReorderCapability = reorder) {
            if (!this.reorderPicker) {
                this.reorderPicker = document.createElement("div");
                this.reorderPicker.className = this.$skin + "-card-reorder";
                this.reorderPicker.syraReorderRecordId = this.list.id;
                document.site.ddManager.setDragSpot(this.reorderPicker, true);
                this.domItem.insertBefore(this.reorderPicker, this.domItem.firstChild);
            }
        }
        else {
            if (this.reorderPicker) {
                document.site.removeDomChild(this.reorderPicker);
                delete this.reorderPicker;
            }
        }
    },
    applyChange: function(metaData){
        RecordArticle.prototype.applyChange.call(this, metaData);
        if (this.dataset.description && this.dataset.description != this.dataset.title) {
            this.domItem.title = this.dataset.description;
        }
        if (this.childPage && metaData && metaData.vignettes) {
            this.loadVignettesInChildPage(metaData.vignettes);
        }
    },
    drawBox: function(){
        this.$isVerticalDirection = true;
        this.dataRow = this.domItem = document.createElement("div");
        this.$skin = "s-ldpm-record";
        this.domItem.className = this.$skin;
        this.domItem.setAttribute("data-s-record", this.$uuid);
        this.domItem.setAttribute("data-s-inout", this.id);
        this.$$item = $(this.domItem);
        this.dataSlot = this.body = document.createElement("div");
        this.body.className = this.$skin + "-title";
        this.domItem.appendChild(this.body);
        
        this.menusSlot = document.createElement("div");
        if (!this.list.isRoleList()) {
            this.menusSlot.className = this.$skin + "-links";
            this.domItem.appendChild(this.menusSlot);
        }
        
        this.applyReorderCapability(true);
        
        if (this.list.selector.isRowMode) {
            this.body.setAttribute("data-s-picker", "list-selector");
            this.body.className += " s-list-selector-row";
            this.body.setAttribute("data-s-record", this.$uuid);
        }
        
        this.cardItem = this.page.loadNewItem(this.body, {
            $bind: "title",
            $isMenusHidden: true,
            $isDetailLinkDisabled: true,
            $category: "field",
            $isEditMode: this.$isEditMode,
            $inplace: true
        }, this);
        this.list._core.appendChild(this.domItem);
        this.applyRecordCapabilities();
        this.onItemEnterLeave();
    },
    _createMenusBox: function(){
        if (!this._isMenuLoaded) {
            this._isMenuLoaded = true;
            if (!this.list.isRoleList()) {
                this.onItemEnterLeave();
                this.page.loadNewItem(this.menusSlot, this.list.defineNewIconMenu("$edit", this.$skin + "-link", true), this);
                this.page.loadNewItem(this.menusSlot, this.list.defineNewIconMenu("$delete", this.$skin + "-link", true), this);
            }
        }
    },
    onItemEnterLeave: function(event){
        this.page.ensureReorderAndMenusVisibility(this, event, true);
        RecordArticle.prototype.onItemEnterLeave.call(this, event);
    },
    onSelectMouseEvent: function(event){
        document.site.toggleClass(this.domItem, "s-record-over", event.type == "mouseenter");
    },
    highlightSelection: function(selected){
        document.site.toggleClass(this.domItem, "s-list-record-selected", selected);
        this.selectChildLanding(selected);
    },
    loadVignettesInChildPage: function(vignettes){
        var $fields = {};
        var $diagnoses = [];
        if (vignettes) {
            for (var ii = 0, jj = vignettes.length; ii < jj; ii++) {
                var source = helpers.object.clone(vignettes[ii]);
                if (source.$links && source.$links.$location) {
                    source.$links.$location.$url = this.page.parseExpression(source.$links.$location.$url);
                    $fields[source.bind] = {
                        $vignetteId: source.$uuid,
                        $type: "application/x-vignette",
                        $title: source.$links.$location.$title,
                        $location: source.$links.$location
                    };
                }
                else {
                    $diagnoses.push({
                        $message: this.page.localize.ldpVignetteNoLocation.replace("{0}", source.bind),
                        $severity: "warning"
                    });
                }
            }
        }
        if ($diagnoses.length) {
            this.page.showDiagnoses({
                $diagnoses: $diagnoses
            });
        }
        if (!this.childPage) {
            this.childPage = document.site.loadNewPage({
                $pageCategoryClass: LandingPageChild,
                layoutSlot: this.page.childSlot,
                $category: "dashboard",
                openerUrlSegments: this.page.openerUrlSegments,
                $representation: {
                    $prototype: {
                        masterRecord: this,
                        $title: this.dataset.title,
                        $properties: $fields
                    },
                    $article: (this.dataset.stdLayout && this.dataset.stdLayout.content) || null
                }
            });
        }
        else {
            this.childPage.applyVignettesChange($fields);
        }
        return this.childPage;
    },
    getSaveDesignLink: function(){
        var stdLayout = this.$prototype.$properties.stdLayout;
        return stdLayout && stdLayout.$item && stdLayout.$item.$links && stdLayout.$item.$links.$save;
    },
    selectChildLanding: function(selected){
        var page = this.page;
        if (selected) {
            if (this.page.selectedPageRecord && this.list != this.page.selectedPageRecord.list) {
                this.page.selectedPageRecord.list.selector.select(this.page.selectedPageRecord.dataset.$uuid, false);
            }
            this.page.selectedPageRecord = this;
            this.loadVignettesInChildPage(this.dataset.vignettes);
            this.page.childSlot.appendChild(this.childPage.domItem);
            this.page.setPreferences(this.dataset.$uuid);
            this.page.setTitle(this.page.$item.$title = this.childPage.getTitle());
            document.site.updateDocumentTitle();
        }
        else {
            if (this.page.selectedPageRecord == this) {
                this.page.selectedPageRecord = null;
            }
            if (this.childPage) {
                document.site.removeDomChild(this.childPage.domItem);
            }
        }
    },
    dispose: function(){
        if (this.page && this.page.selectedPageRecord == this) {
            this.selectChildLanding(false);
        }
        if (this.childPage) {
            this.removeItem(this.childPage, true);
        }
        this.childPage = this.cardItem = this.domItem = this.dataSlot = this.body = this.menusSlot = this.dataRow = null;
        RecordArticle.prototype.dispose.call(this);
    }
});
