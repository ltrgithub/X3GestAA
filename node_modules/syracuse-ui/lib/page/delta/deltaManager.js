"use strict";

function DeltaManager() {}

function _isVariantArray(list) {
	if (list.length) {
		if (list[0].$uuid == undefined) {
			if (typeof(list[0]) == 'object' && Object.keys(list[0]).length == 1) {
				return true;
			}
		}
	}
	return false;
}

function _ensureServerIndex(list) {
	if (_isVariantArray(list)) {
		for (var ii = 0, jj = list.length; ii < jj; ii++) {
			var record = list[ii];
			if (typeof(record) == 'object') {
				record[Object.keys(record)[0]].$serverIndex = ii;
			}
		}
	} else {
		for (var ii = 0, jj = list.length; ii < jj; ii++) {
			list[ii].$serverIndex = ii;
		}
	}
}

function _applyPageRecordDelta(page, record, subRecord, targetMap, targetList, variantKey) {
	if (subRecord.$uuid !== undefined) {
		if (!subRecord.$isDeleted) {
			if ((subRecord.$uuid !== undefined) && targetMap[subRecord.$uuid]) {
				if (variantKey) {
					var newNecord = _applyObjectDelta(page, targetMap[subRecord.$uuid], subRecord);
					record = {};
					record[variantKey] = newNecord;
					targetList.push(record);
				} else {
					targetList.push(_applyObjectDelta(page, targetMap[subRecord.$uuid], subRecord));
				}
			} else {
				targetList.push(record);
			}
		}
	} else {
		targetList.push(record);
	}
}

function _applyObjectArrayDelta(page, targetList, sourceList) {
	if (sourceList) {
		if (targetList.length == sourceList.length) {
			for (var ii = 0, jj = sourceList.length; ii < jj; ii++) {
				_applyObjectDelta(page, targetList[ii], sourceList[ii]);
			}
		} else {
			targetList.splice(0, targetList.length);
			for (var ii = 0, jj = sourceList.length; ii < jj; ii++) {
				targetList.push(sourceList[ii]);
			}
		}
	}
	return targetList;
}

function _applyObjectDelta(page, target, source, isObjectDelta) {
	if (source) {
		var properties = Object.keys(source);
		for (var ii = 0, jj = properties.length; ii < jj; ii++) {
			var property = properties[ii];
			var targetValue = target[property];
			var sourceValue = source[property];
			if (typeof(sourceValue) == 'object') {
				if (!(targetValue == null || sourceValue === null)) {
					if (Array.isArray(sourceValue)) {
						if (isObjectDelta) {
							sourceValue = _applyObjectArrayDelta(page, targetValue, sourceValue);
						} else {
							if (page.$isEditMode || page.$isPartialDelta) {
								sourceValue = exports.applyPageArrayDelta(page, targetValue, sourceValue);
							}
						}
					} else {
						sourceValue = _applyObjectDelta(page, targetValue, sourceValue, isObjectDelta);
					}
				}
				if (Array.isArray(sourceValue)) {
					_ensureServerIndex(sourceValue);
				}
			}
			target[property] = sourceValue;
		}
	}
	return target;
}


exports.cleanServerIndex = function(source) {
	if (source && (typeof(source) == 'object')) {
		if (Array.isArray(source)) {
			for (var ii = 0, jj = source.length; ii < jj; ii++) {
				exports.cleanServerIndex(source[ii]);
			}
		} else {
			delete source.$serverIndex;
			var properties = Object.keys(source);
			for (var ii = 0, jj = properties.length; ii < jj; ii++) {
				exports.cleanServerIndex(source[properties[ii]]);
			}
		}
	}
	return source;
};

exports.applyObjectDelta = _applyObjectDelta;

exports.applyPageArrayDelta = function(page, targetList, sourceList) {
	if (sourceList) {
		var targetMap = {};
		var isVariant = _isVariantArray(sourceList);
		if (page.$isPartialDelta || (sourceList.length == 1 && sourceList[0].$index !== undefined)) {
			var found, foundIndex;
			for (var ii = 0, jj = sourceList.length; ii < jj; ii++) {
				found = null;
				var sourceRecord = sourceList[ii];
				foundIndex = 0;
				for (var mm = targetList.length; foundIndex < mm; foundIndex++) {
					found = targetList[foundIndex];
					if (found.$uuid == sourceRecord.$uuid) {
						break;
					} else {
						found = null;
					}
				}
				if (found) {
					if (sourceRecord.$isDeleted) {
						targetList.splice(foundIndex, 1);
					} else {
						_applyObjectDelta(page, found, sourceRecord);
						if (sourceRecord.$index !== undefined && sourceRecord.$index != foundIndex) {
							targetList.splice(foundIndex, 1);
							targetList.splice(sourceRecord.$index, 0, found);
							delete found.$index;
						}
					}
				} else {
					if (!sourceRecord.$isDeleted) {
						if (sourceRecord.$index !== undefined) {
							targetList.splice(sourceRecord.$index, 0, sourceRecord);
						} else {
							targetList.push(sourceRecord);
						}
					}
				}
			}
		} else {
			for (var ii = 0, jj = targetList.length; ii < jj; ii++) {
				var record = targetList[ii];
				if (record) {
					if (record.$uuid !== undefined) {
						targetMap[record.$uuid] = record;
					} else {
						if (isVariant) {
							record = record[Object.keys(record)[0]];
							if (record.$uuid !== undefined) {
								targetMap[record.$uuid] = record;
							}
						}
					}

				}
			}
			targetList = [];
			for (var ii = 0, jj = sourceList.length; ii < jj; ii++) {
				var record = sourceList[ii];
				if (isVariant) {
					var variantKey = Object.keys(record)[0];
					_applyPageRecordDelta(page, record, record[variantKey], targetMap, targetList, variantKey);
				} else {
					_applyPageRecordDelta(page, record, record, targetMap, targetList);
				}

			}
		}
	}
	return targetList;
};