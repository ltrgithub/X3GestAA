"use strict";
var helpers = require('syracuse-core/lib/helpers');

function _appplyPreferences(bar) {
	var state;
	if (syra_site.$preferences) {
		state = syra_site.$preferences[bar.preferenceKey || bar.userPreferenceKey || "none"];
	}
	state = state || {
		$isCollapsed: false
	};
	if (bar.preferenceKey) {
		syra_site.getPreferences(bar.preferenceKey, state, bar);
	} else {
		if (bar.userPreferenceKey) {
			state = bar.page.userPreferences.getForKey(bar.userPreferenceKey) || state;
		}
		syra_site.applyValues(bar, state);
	}
	bar.$isFloating = bar.options.$isFloating /*|| syra_site.isTabletDevice;*/ ;
}

function Moving(sideBar) {
	syra_site.isInoutDisabled = true;
	this.sideBar = sideBar;
	syra_dom.getBoundingClientRect(sideBar.slot, this);
	this.isLeftDirection = sideBar.options.resizeDirection == "left";
	if (syra_site.isDocumentRTL) {
		this.isLeftDirection = !this.isLeftDirection;
	}
	this.resizerRect = sideBar.resizePicker.getBoundingClientRect();
	if (sideBar.$isCollapsed) {
		sideBar.ensureState(true);
	}
	syra_site.layoutSlot.style.cursor = "e-resize";
	this.bindMouseEvent(true);
}

helpers.defineClass(Moving, null, {
	_move: function(event) {
		var cursor = "not-allowed";
		if ((event.pageY >= (this.top - 20)) && (event.pageY <= (this.bottom + 20))) {
			var newWidth = this.width + (this.isLeftDirection ? (event.pageX - this.resizerRect.left) : (this.resizerRect.left - event.pageX));
			if (newWidth > 0) {
				this.sideBar.resizeSplitter(this.newWidth = newWidth);
			}
		}
	},
	bindMouseEvent: function(bind) {
		var self = this;
		if (bind) {
			syra_site.layoutSlot.addEventListener("mousemove", self.on_mousemove = function(event) {
				event.preventDefault();
				if (!self.timeout) {
					self.timeout = setTimeout(function() {
						self.timeout = null;
						self._move(event);
					}, 50);
				}
			}, false);
			syra_site.layoutSlot.addEventListener("mouseup", self.on_mouseup = function(event) {
				self.end();
			}, false);
		} else {
			self.on_mousemove && syra_site.layoutSlot.removeEventListener("mousemove", self.on_mousemove);
			self.on_mouseup && syra_site.layoutSlot.removeEventListener("mouseup", self.on_mouseup);
			self.on_mousemove = self.on_mouseup = null;
		}
	},

	end: function() {
		this.bindMouseEvent(false);
		if (self.timeout) {
			clearTimeout(self.timeout);
			self.timeout = null;
			this._move(event);
		}
		var newWidth = this.sideBar.slot.clientWidth;
		if (newWidth <= this.sideBar.closeWidth) {
			this.sideBar.$isCollapsed = true;
			this.sideBar.ensureState();
		} else {
			this.sideBar.$width = this.sideBar.slot.clientWidth;
		}
		syra_site.layoutSlot.style.cursor = "default";
		this.sideBar.savePreferences();
		this.sideBar.page.resizeArticle(true);
		this.dispose();
		syra_site.isInoutDisabled = false;
	},

	dispose: function() {
		this.bindMouseEvent(false);
		if (this.sideBar) {
			delete this.sideBar.moving;
		}
		syra_site.disposeObject(this);
	}
});

function SideBar() {}

exports.SideBar = helpers.defineClass(SideBar, null, {
	load: function(page) {
		var self = this;
		self.articleParent = page;
		if (!self.id) {
			self.id = page.id + "-" + (++page._childItemOffset);
		}
		syra_store.add(self);
		self.closeWidth = 100;
		self.minWidth = self.minWidth || 200;
		self.page = page;
		_appplyPreferences(self);
		self.options.resizeDirection = self.options.resizeDirection || "left";
		self.slot.className += " s-bar-slot s-bar-slot-" + self.options.resizeDirection;
		if (self.$width != undefined && parseInt(self.$width) <= self.closeWidth) {
			delete self.$width;
		}
		if (self.options.$isResizerDisabled) {
			self.options.isAutoModeDisabled = true;
		}
		if (!self.options.$isResizerDisabled || self.options.$isCollapsable) {
			self.resizePicker = document.createElement("a");
			self.resizePicker.className = self.options.$skin + "-resizer s-bar-resizer-" + self.options.resizeDirection;
			self.openButton = syra_menus.button.add({
				parent: self,
				slot: self.resizePicker,
				text: syra_local.bar_collapse,
				css: self.options.$skin + "-opener s-bar-opener",
				iconOnly: true,
				shortCutTip: ((self.options.resizeDirection == "left") ? syra_shortCuts.tip.hideLeftBar : syra_shortCuts.tip.hideRightBar) + ", " + syra_shortCuts.tip.hideFull,
				fontIcon: self.options.resizeDirection + "_arrow",
				btnclick: function() {
					self.collapse();
				}

			});
			if (!self.options.$isResizerDisabled) {
				self.resizePicker.addEventListener("mousedown", self.on_mousedown = function(event) {
					event.preventDefault();
					if (event.target != self.openButton.link) {
						self.moving = new Moving(self);
						event.stopPropagation();
					}
				}, false);
			}
			self.slot.appendChild(self.resizePicker);
		}

		self.slot.appendChild(self.body);
		syra_dom.setZIndex(self.slot, true);
		self.page.setArticleId(self.slot);
		self.page.bars.push(self);
		self.ensureState();
	},
	resizeSplitter: function(newWidth) {
		if (!this.designing) {
			if (!this.options.isAutoModeDisabled) {
				if (this.isSmall != syra_site.getSize().isSmall) {
					this.isSmall = syra_site.getSize().isSmall;
					this.$isCollapsed = this.isSmall;
				}
			}!newWidth && this.ensureState();
			if (this.slot.parentNode) {
				if (newWidth !== undefined) {
					this.slot.style.width = newWidth + "px";
				}
				var direction = this.options.resizeDirection;
				if (this.$isCollapsed || !this.$isFloating) {
					if (syra_site.isDocumentRTL) {
						direction = direction == "left" ? "right" : "left";
					}
					if (this.slot.parentNode) {
						this.slot.parentNode.style["padding" + direction.substr(0, 1).toUpperCase() + direction.substr(1)] = (newWidth || this.slot.clientWidth) + "px";
					}
				}
			}!newWidth && this.resizeBar();
		}
	},

	toggleBar: function(show) {
		syra_dom.hide(this.slot, this.isHidden = !show);
	},
	ensureState: function(startResize) {
		if (!this.isHidden) {
			if (startResize && this.$isCollapsed) {
				this.curCollapsedState = this.$isCollapsed = false;
				delete this.$width;
				this.slot.style.width = this.slot.clientWidth + "px";
				syra_dom.hide(this.body, false);
			} else {
				if (this.curCollapsedState != this.$isCollapsed) {
					if (this.$isCollapsed) {
						syra_dom.hide(this.body, true);
						this.slot.style.width = "";
					} else {
						this.$isCollapsed = false;
						this.slot.style.width = Math.max(this.$width || 0, this.minWidth) + "px";
						syra_dom.hide(this.body, false);
					}
					this.curCollapsedState = this.$isCollapsed;
				}
			}
			syra_dom.toggleClass(this.slot, "s-close", this.$isCollapsed);
			if (this.resizePicker) {
				var icon = this.options.resizeDirection;
				if (this.$isCollapsed) {
					icon = icon == "left" ? "right" : "left";
				}
				syra_menus.button.setText(this.openButton, this.$isCollapsed ? syra_local.bar_expand : syra_local.bar_collapse, icon + "_arrow");
			}
		}
	},
	resizeBar: function(resize) {
		if (this.slot) {
			var pageSize = this.page.getPageSize();
			var height = pageSize.barHeight || pageSize.scrollview.height;
			if (height && (resize || (height != this.lastHeight))) {
				this.lastHeight = height;
				this.slot.style.height = height + "px";
				if (this.openButton) {
					this.openButton.link.style.top = ((height - this.openButton.link.clientHeight) / 2) + "px";
				}
				this.body.style.height = height + "px";
				return true;
			}
		}
		return false;
	},

	collapse: function() {
		delete this.onBeforeMaximized;
		this.$isCollapsed = !this.$isCollapsed;
		this.savePreferences();
		this.ensureState();
		this.page.resizeArticle(true);
	},
	clearPreferences: function() {
		var key = this.preferenceKey || this.userPreferenceKey;
		if (key) {
			syra_site.setPreferences(key);
			delete this.$width;
			delete this.$isCollapsed;
			this.ensureState();
			_appplyPreferences(this);
		}
	},
	savePreferences: function(key) {
		if (this.preferenceKey) {
			syra_site.setPreferences(this.preferenceKey, this, ["$width", "$isCollapsed"]);
		} else {
			if (this.userPreferenceKey) {
				var pref = this.page.userPreferences.getForKey(this.userPreferenceKey, {});
				pref.$width = this.$width;
				pref.$isCollapsed = this.$isCollapsed;
				this.page.savePageDesign(true);
			}
		}
	},
	dispose: function() {
		this.on_mousedown && this.resizePicker && this.resizePicker.removeEventListener("mousedown", this.on_mousedown);
		this.moving && this.moving.dispose();
		var bars = this.page && this.page.bars;
		if (bars) {
			var index = bars.indexOf(this);
			if (index >= 0) {
				bars.splice(index, 1);
			}
		}
		syra_store.remove(this);
		this.$isFloating && syra_dom.removeChild(this.slot);
		syra_site.disposeObject(this);
	}
});