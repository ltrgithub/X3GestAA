"use strict";

function _getDotItem(slot) {
	var middle = -1;
	var sizeBC = 0;
	for (var i = 0; i < slot.childNodes.length; i++) {
		var item = slot.childNodes.item(i);
		sizeBC += item.scrollWidth;
		if (item.firstChild.textContent.indexOf("...") === 0) {
			middle = i; // identify the middle
		}
	};
	if (middle === -1) {
		middle = Math.floor(slot.childNodes.length / 2);
	}
	return {
		middle: middle,
		size: sizeBC
	};
}

exports.showOLd = function(page) {
	if (page.$facet !== "$modal2") {
		if (page.breadCrumbSlot)
			page.breadCrumbSlot.textContent = "";
		var breadCrumbSlot = document.createElement("div");
		if (page.$breadCrumb && page.$breadCrumb.length > 0) {
			var item, breadLink;
			for (var ii = 0, jj = page.$breadCrumb.length - 1; ii <= jj; ii++) {
				var item = document.createElement("div");
				item.className = page.$skin + "-breadcrumb-item";
				item.textContent = page.$breadCrumb[ii].title;
				var child = document.createElement("span");
				if (ii === jj) {
					child.className = "s-page-breadcrumb-close";
				} else {
					child.className = "s-page-breadcrumb-item s-fonticon-btn";
					child.innerHTML = syra_context.isRTL ? syra_icon.font["filter_lt"] : syra_icon.font["filter_gt"];
				}
				item.appendChild(child);
				breadCrumbSlot.appendChild(item);
			}
			// check total length of breadCrumbSlot
			page.breadCrumbSlot.appendChild(breadCrumbSlot);
			// check the size of breadCrumBSlot depending of the size of the page

			var dotItem = _getDotItem(breadCrumbSlot);
			var sizeBC = dotItem.size;
			var middle = dotItem.middle;

			var setDot = false;
			// still continu if the size if bigger that page size and if the middle of the BC is 1 and already contains "..." string
			while (page.scrollview.scrollWidth < sizeBC && (breadCrumbSlot.childNodes.length > 3 || !setDot)) {
				var lnMax = breadCrumbSlot.childNodes.length - 1;
				// set ... for the middle one
				if (setDot) { // if it's already set ... we have to remove the previous one of the next one
					if (breadCrumbSlot.childNodes.length % 2) { // try to remove on the left but on the right if it's not working
						middle - 1 > 0 ? breadCrumbSlot.removeChild(breadCrumbSlot.childNodes[middle - 1]) : middle + 1 < lnMax && breadCrumbSlot.removeChild(breadCrumbSlot.childNodes[middle + 1]);
					} else { // try to remove on te right but on te left if it's not possible
						middle + 1 < lnMax ? breadCrumbSlot.removeChild(breadCrumbSlot.childNodes[middle + 1]) : middle - 1 > 0 && breadCrumbSlot.removeChild(breadCrumbSlot.childNodes[middle - 1]);
					}
				} else {
					breadCrumbSlot.childNodes[middle].firstChild.textContent = "...";
					setDot = true;
				}
				// find the one that contain ... or take te middle
				dotItem = _getDotItem(breadCrumbSlot);
				sizeBC = dotItem.size;
				middle = dotItem.middle;
			}
		}
	}
};

exports.show = function(page, slot) {
	if (page.$breadCrumb && page.$breadCrumb.length > 0 && page.$facet !== "$modal2") {
		var nav = document.createElement("div");
		nav.className = "s-page-head-breadcrumb";
		var item, breadLink;
		for (var ii = 0, jj = page.$breadCrumb.length - 1; ii <= jj; ii++) {
			var item = document.createElement("div");
			item.className = page.$skin + "-breadcrumb-item";
			item.textContent = page.$breadCrumb[ii].title;
			var child = document.createElement("span");
			if (ii === jj) {
				child.className = "s-page-breadcrumb-close";
			} else {
				child.className = "s-page-breadcrumb-item s-fonticon-btn";
				child.innerHTML = syra_context.isRTL ? syra_icon.font["filter_lt"] : syra_icon.font["filter_gt"];
			}
			item.appendChild(child);
			nav.appendChild(item);
		}
		slot.appendChild(nav);
		syra_dom.hide(slot, false);
	}
};