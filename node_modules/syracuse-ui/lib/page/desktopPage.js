"use strict";
var _helpers = require('syracuse-core/lib/helpers');
var RawPage = require('./rawPage').RawPage;
var FieldsGarbage = require('syracuse-ui/lib/page/tools/fieldsGarbage').FieldsGarbage;
var _breadcrumb = require('syracuse-ui/lib/page/tools/breadcrumb');
var _designerViewChoice = require('syracuse-ui/lib/authoring/designerViewChoice');

function _tempautoAddCubeFields(page) {
	var $fields = {}, $cubeField;
	var binds = Object.keys(page.$prototype.$properties);
	for (var ii = 0, jj = binds.length; ii < jj; ii++) {
		var $field = page.$prototype.$properties[binds[ii]];
		if ($field && !$field.$isExcluded) {
			if ($field.type != "application/x-array") {
				$cubeField = binds[ii];
			}
			$fields[binds[ii]] = $field;
		}
	}
	var $binds = Object.keys($fields);
	if ($cubeField && $binds.length) {
		var $items = syra_site.layoutUpdater.getItemSettings(page, null, true) || [];
		var definedBinds = {};
		for (var ii = 0, jj = $items.length; ii < jj; ii++) {
			if ($items[ii].$bind) {
				definedBinds[$items[ii].$bind] = $items[ii];
			}
		}
		//add date
		var $items = [];
		for (var ii = 0; ii <= 10; ii++) {
			var start = "datstart" + ii;
			if ($fields[start]) {
				var end = "datend" + ii;
				$items.push({
					$layoutType: "row",
					$items: [definedBinds[start] || {
							$bind: start
						},
						definedBinds[end] || {
							$bind: end
						}
					]
				});
				delete $fields[start];
				delete $fields[end];
			}
		}
		$binds = Object.keys($fields);
		for (var ii = 0, jj = $binds.length; ii < jj; ii++) {
			$items.push(definedBinds[$binds[ii]] || {
				$bind: $binds[ii]
			});
		}
		page.$item.$layout = {
			$items: [{
				$category: "section",
				$layout: {
					$items: [{
						$category: "section",
						$layout: {
							$items: $items
						}
					}]
				}
			}]
		};
	}
}

function DesktopPage() {}

exports.DesktopPage = _helpers.defineClass(DesktopPage, RawPage, {
	loadBox: function(initData) {
		this.isDesktopPage = true;
		if (this.$facet == "$cube") {
			_tempautoAddCubeFields(this);
		}
		switch (this.$pageCategory) {
			case "lookup":
				this.$skin = this.$item.$skin || "s-page";
				this._defaultTitle = syra_local.dskpPageTitle;
				break;
			default:
				this.$skin = this.$skin || this.$item.$skin || "s-page";
				if (this.inlinePageHost) {
					this.$skin = "s-inline-page " + this.$skin;
				}
				this._defaultTitle = this._defaultTitle || syra_local.dskpPageTitle;
				break;
		}
		var autoInsertFields = this.insertNewItems();
		RawPage.prototype.loadBox.call(this, initData);

		(this.garbage = new FieldsGarbage()).load(this);
		autoInsertFields && autoInsertFields.showDiagnoses();
	},
	resizeArticle: function(resize, articleParent) {
		if (this.displayed !== false && this.isPageLoaded && !this._isDataChanging) {
			if (syra_site.dom.isVisible(this.domItem)) {
				delete this.scrollviewSize;
				var height;
				if (this.dialogWrapper) {
					if (!this.dialogWrapper.isOpened) {
						return;
					}
				} else {
					var isHFit = !this.inlinePageHost && !this.vignetteField;
					var slot = this.scrollContainer,
						diff = 0;
					if (this.vignetteField) {
						if (this.vignetteField.isMaximized) {
							slot = this.vignetteField.page.isLandingPage ? syra_site.body : this.vignetteField.page.layoutSlot;
							var rect = this.vignetteField.header.getBoundingClientRect();
							diff = rect.height + (2 * (rect.top - slot.getBoundingClientRect().top));
							isHFit = true;
						} else {
							if (this.scrollview.syraIsHFit) {
								//just after minimize  
								this.domItem.style.height = "";
								this.scrollview.style.height = "";
								this.body.style.minHeight = "";
								this.scrollview.syraIsHFit = false;
							}
						}
					}
					if (!slot) {
						slot = this.isLandingPage ? syra_site.body : this.layoutSlot;
					}
					if (this.scrollview && slot && isHFit) {
						height = this.barHeight = slot.getBoundingClientRect().height;
						this.domItem.style.height = height + "px";
						if (this.menuBar && !this.menuBar.isVertical) {
							height -= this.menuBar.slot.getBoundingClientRect().height;
						}
						var height = height - diff;
						this.scrollview.syraIsHFit = true;
						this.scrollview.style.height = (height - this.diagnoseSlot.getBoundingClientRect().height) + "px";
						if (this.footer) {
							this.body.syraMinHeight = (this.scrollview.clientHeight - this.header.clientHeight - this.footer.clientHeight);
							this.body.style.minHeight = this.body.syraMinHeight + "px";
						}
					}
				}
				syra_site.dialogManager.resizePositionedDialogs(this);
				this.designer && this.designer.resizeArticle(resize);
				this.setScrollViewPosition && this.setScrollViewPosition();
				this.resizeBars();
				RawPage.prototype.resizeArticle.call(this, resize, articleParent);
				if (this.dialogWrapper && this.dialogWrapper.isOpened) {
					this.dialogWrapper.resizeDialog();
				}
				this.inlinePageHost && this.inlinePageHost.onInlinePageResized(this);
			}
		}
	},
	appendHeader: function() {
		this.header = document.createElement("header");
		this.header.className = this.$skin + "-head";
		this.scrollview.appendChild(this.header);

		// breadcrumb
		if (!this.isSecurityViewHidden && !this.isBreadCrumbHidden) {
			this.securityBreadcrumbSlot = document.createElement("div");
			this.securityBreadcrumbSlot.className = "s-page-head-top";
			syra_site.dom.hide(this.securityBreadcrumbSlot, true);
			!this.isBreadCrumbHidden && _breadcrumb.show(this, this.securityBreadcrumbSlot);
			this.header.appendChild(this.securityBreadcrumbSlot);
		}

		this.domTitle = document.createElement("div");
		this.domTitle.className = this.$skin + "-title";
		this.domTitle.syraItem = this.id;
		this.header.appendChild(this.domTitle);
		delete this.$item.$isTitleHidden;
		this.setTitle(this.$item.$title || (this.$field ? this.$field.$title : null));
		this.setDescription(this.$prototype.$description || this.$item.$description);
		_designerViewChoice.registerDesignViews(this);
	},
	drawBox: function() {
		this.$item.$title = this.$item.$title || "{$title}";
		this.domItem = document.createElement("article");
		this.domItem.className = this.$skin;
		this.domItem.syraPage = this.domItem.syraItem = this.id;
		this.layoutSlot && this.layoutSlot.appendChild(this.domItem);

		this.diagnoseSlot = document.createElement("div");

		this.scrollview = document.createElement("div");
		this.scrollview.className = this.$skin + "-scrollview";

		this.body = document.createElement("div");
		this.appendHeader();
		this.ensureLayoutMode();
		this.scrollview.appendChild(this.body);
		if (!this.isFooterDisabled && !this.dialogWrapper && !this.inlinePageHost && !this.isVignettePage) {
			this.footer = document.createElement("footer");
			this.footer.className = "s-site-footer";
			this.siteLegalLink = syra_site.loadNewItem(this.footer, {
				$bind: "$legal",
				$category: "link",
				$skin: "s-site-footer-legal-link"
			}, syra_site);
			this.scrollview.appendChild(this.footer);
		}
		this.domItem.appendChild(this.diagnoseSlot);
		this.domItem.appendChild(this.scrollview);
		this.ensureMenuBar();
		this.renderLayoutContent();
	}

});