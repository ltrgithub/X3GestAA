"use strict";
var _helpers = require('syracuse-core/lib/helpers');
var RawPage = require('./rawPage').RawPage;
var FieldsGarbage = require('syracuse-ui/lib/article/fieldsGarbage').FieldsGarbage;
var MenuBar = require('syracuse-ui/lib/page/bar/menuBar').MenuBar;
var _advancedStateHelper = require('syracuse-ui/lib/field/helpers/advancedStateHelper');
var _designerViewChoice = require('syracuse-ui/lib/authoring/designerViewChoice');

function DesktopPage() {}

exports.DesktopPage = _helpers.defineClass(DesktopPage, RawPage, {
	onAdvancedClick: function() {
		_advancedStateHelper.onAdvancedClick(this);
	},
	getDefaultTitle: function() {
		return this._defaultTitle || "";
	},
	onDesignViewClick: function(event, target) {
		_designerViewChoice.onDesignViewClick(this, event, target);
	},
	onItemInOut: function(onEnter, event, target) {
		if (target.syraViewIndex !== undefined) {
			_designerViewChoice.onItemInOut(onEnter, event, target);
		}
	},
	setHistoryBack: function(b) {
		this.historyback = b;
	},
	setTitle: function(title, isDynamic) {
		RawPage.prototype.setTitle.call(this, title, isDynamic);
		this.isPageLoaded && syra_site.refreshBrowserTitle(this);
	},
	loadBox: function(initData) {
		this.isDesktopPage = true;
		if (this.$facet == "$cube") {
			syra_page.tempautoAddCubeFields(this);
		}
		switch (this.$pageCategory) {
			case "lookup":
				this.$skin = this.$item.$skin || "s-page";
				this._defaultTitle = syra_local.dskpPageTitle;
				break;
			default:
				this.$skin = this.$skin || this.$item.$skin || "s-page";
				if (this.inlinePageHost) {
					this.$skin = "s-inline-page " + this.$skin;
				}
				this._defaultTitle = this._defaultTitle || syra_local.dskpPageTitle;
				break;
		}
		var autoInsertFields = this.insertNewItems();
		RawPage.prototype.loadBox.call(this, initData);
		syra_page.showBreadCrumb(this);
		(this.garbage = new FieldsGarbage()).load(this);
		autoInsertFields && autoInsertFields.showDiagnoses();
	},
	switchDesigner: function(open) {
		var self = this;
		if (open) {
			var path = self.isLandingPage ? "syracuse-ui/lib/authoring/landingPageDesigner" : "syracuse-ui/lib/authoring/pageDesigner";
			require.async(path, function(err, module) {
				_advancedStateHelper.toggleAllFields(self, true);
				self.designer = new module.Designer();
				self.designer.openDesigner(self);
				self.resizeArticle(true);
			});
		} else {
			if (self.designer) {
				syra_site.showDiagnoses({
					$diagnoses: null
				}, self.page);
				self.designer.dispose();
				_advancedStateHelper.toggleAllFields(self);
				self.resizeArticle(true);
			}
			self.designer = null;
		}
	},
	getScrollviewSize: function() {
		if (!this.scrollviewSize) {
			this.scrollviewSize = syra_site.dom.getBoundingClientRect(this.scrollview);
		}
		return this.scrollviewSize;
	},
	resizeArticle: function(resize, boxParent) {
		if (this.displayed !== false && this.isPageLoaded && !this._isDataChanging) {
			delete this.scrollviewSize;
			var height;
			if (this.dialogWrapper) {
				if (!this.dialogWrapper.isOpened) {
					return;
				}
			} else {
				var isHFit = !this.inlinePageHost && !this.vignetteField;
				var slot = this.scrollContainer,
					diff = 0;
				if (this.vignetteField) {
					if (this.vignetteField.isMaximized) {
						slot = this.vignetteField.page.isLandingPage ? syra_site.body : this.vignetteField.page.layoutSlot;
						var rect = this.vignetteField.header.getBoundingClientRect();
						diff = rect.height + (2 * (rect.top - slot.getBoundingClientRect().top));
						isHFit = true;
					} else {
						if (this.scrollview.syraIsHFit) {
							//just after minimize  
							this.domItem.style.height = "";
							this.scrollview.style.height = "";
							this.body.style.minHeight = "";
							this.scrollview.syraIsHFit = false;
						}
					}
				}
				if (!slot) {
					slot = this.isLandingPage ? syra_site.body : this.layoutSlot;
				}
				if (isHFit) {
					height = this.barHeight = slot.getBoundingClientRect().height;
					this.domItem.style.height = height + "px";
					if (this.menuBar && !this.menuBar.isVertical) {
						height -= this.menuBar.barSlot.getBoundingClientRect().height;
					}
					var height = height - diff;
					this.scrollview.syraIsHFit = true;
					this.scrollview.style.height = (height - this.diagnoseSlot.getBoundingClientRect().height) + "px";
					if (this.footer) {
						this.body.syraMinHeight = (this.scrollview.clientHeight - this.header.getBoundingClientRect().height - this.footer.clientHeight);
						this.body.style.minHeight = this.body.syraMinHeight + "px";
					}
				}
			}
			syra_site.dialogManager.resizePositionedDialogs(this);
			if (this.designer) {
				this.designer.resizeArticle(resize);
			} else {
				this.menuBar && this.menuBar.resizeSplitter();
				this.fusionBar && this.fusionBar.resizeSplitter();
			}
			this.setScrollViewPosition && this.setScrollViewPosition();
			this.bar && this.bar.resizeSplitter();
			RawPage.prototype.resizeArticle.call(this, resize, boxParent); //boxParent is set for landingpage
			if (this.dialogWrapper && this.dialogWrapper.isOpened) {
				this.dialogWrapper.resizeDialog();
			}
			this.inlinePageHost && this.inlinePageHost.onInlinePageResized(this);
		}
	},
	endChange: function(discardRedraw) {
		RawPage.prototype.endChange.call(this, discardRedraw);
		if (!this.disposed && this.isPageLoaded && !this.isFusionPage) {
			syra_site.refreshBrowserTitle(this);
		}
	},
	setDescription: function($description) {
		if ($description) {
			var title = this.titleLabel ? this.titleLabel.textContent : null;
			if (title != $description) {
				if (!this.domDescription) {
					this.domDescription = document.createElement("div");
					this.domDescription.className = this.$skin + "-description";
					if (this.titleLabel) {
						this.titleLabel.parentNode.insertBefore(this.domDescription, this.titleLabel.nextSibling);
					} else {
						this.header.appendChild(this.domDescription);
					}
				}
				if ($description.indexOf("{") < 0) {
					this.domDescription.textContent = $description;
				} else {
					syra_site.expressionMaker.render(this, $description, this.domDescription, this.$skin + "-description-field", false);
				}
				if (title && title == this.domDescription.textContent) {
					this.domDescription.style.display = "none";
				}
			}
		}
	},
	appendHeader: function() {
		this.header = document.createElement("header");
		this.header.className = this.$skin + "-head";
		this.header.style.display = "none";
		this.scrollview.appendChild(this.header);
		this.securityViewSlot = document.createElement("div");
		this.securityViewSlot.className = "s-security-view-slot";
		this.header.appendChild(this.securityViewSlot);
		this.header.appendChild(this._createBoxTitle());
		delete this.$item.$isTitleHidden;
		this.setTitle(this.$item.$title || (this.$field ? this.$field.$title : null));
		this.setDescription(this.$prototype.$description || this.$item.$description);
		_designerViewChoice.registerDesignViews(this);
	},
	togglePageOptions: function() {
		_designerViewChoice.toggle(this);
	},
	onBreadcrumbClick: function(event, btn) {

	},
	drawBox: function() {
		this.$item.$title = this.$item.$title || "{$title}";
		this.domItem = document.createElement("article");
		this.domItem.className = this.$skin;
		this.domItem.syraPage = this.domItem.syraItem = this.id;
		this.layoutSlot.appendChild(this.domItem);

		this.diagnoseSlot = document.createElement("div");
		this.diagnoseSlot.className = this.$skin + "-diag-slot";

		this.scrollview = document.createElement("div");
		this.scrollview.className = this.$skin + "-scrollview";
		syra_page.bindScrollView(this, true);

		this.body = document.createElement("div");
		this.appendHeader();
		this.ensureLayoutMode();
		this.scrollview.appendChild(this.body);
		syra_page.addFooter(this);
		this.domItem.appendChild(this.diagnoseSlot);
		this.domItem.appendChild(this.scrollview);
		this._ensureMenus();
		this.renderLayoutContent();
	},
	_ensureMenus: function() {
		if (!this.isMenuBarDisabled) {
			this.menuBar = new MenuBar();
			this.menuBar.load(this);
		}
	},
	onMenuDataFilled: function(menuItem) {
		if (menuItem && menuItem.$item && menuItem.$item.$bind) {
			var icon = menuItem.$item.$bind;
			icon = (icon[0] == "$") ? icon.substr(1) : icon;
			if (syra_menus.fontIcons[icon]) {
				(menuItem.$item.$icon = menuItem.$item.$icon || {}).$value = icon;
			}
		}
		this.menuBar && this.menuBar.onMenuDataFilled(menuItem);

	},
	diposeContent: function() {
		RawPage.prototype.diposeContent.call(this);
		syra_site.dom.empty(this.body);
		this.loaded = false;
		if (this.menuBar) {
			this.menuBar.barSlot && syra_site.dom.removeChild(this.menuBar.barSlot);
			this.menuBar.dispose();
		}
		if (this.diagnosesPanel) {
			this.diagnosesPanel.dispose();
			syra_site.dom.empty(this.diagnoseSlot);
		}
		this.diagnosesPanel = this.menuBar = null;
	},

	reloadLayout: function($item) {
		if (this._advancedFieldsBtn) {
			delete this._hasAdvancedFields;
			syra_site.dom.removeChild(this._advancedFieldsBtn);
			this._advancedFieldsBtn = null;
		}
		RawPage.prototype.reloadLayout.call(this, $item, null);
		this.garbage.load(this);
	},
	loadSelectedDesignView: function($selectedView) {
		var self = this;
		var query = syra_controller.parseUrl(syra_site.urlMaker.buildPageCollaborationUrl(self, self.openerUrlSegments));
		query.sendNewRequest({
			params: {
				select: "$views"
			},
			onSuccess: function(data, response, requestUrl) {
				self.$views = data.$views;
				//test for f_SAM_102572 merge
				/*if ($selectedView && self.$views) {
                 for (var ii = 0, jj = self.$views.length; ii < jj; ii++) {
                 if (self.$views[ii].$selected) {
                 $selectedView = self.$views[ii];
                 }
                 }
                 }*/
				_designerViewChoice.registerDesignViews(self, $selectedView || true);
				if (!self.$views) {
					self.$item = _helpers.object.clone(self.ensureDefaultArticle(self.$prototype.$article, self.$prototype), true);
					self.reloadLayout(self.$item);
					if (self.openerUrlSegments) {
						delete self.openerUrlSegments.params.pageview;
						syra_site.urlMaker.build(self.openerUrlSegments);
						if (!syra_site.mobileGateway) {
							syra_site.history.update(self, self.openerUrlSegments.$url);
						}
					}
				}
			}
		});
	},
	dispose: function() {
		this.siteLegalLink && syra_site.removeItem(this.siteLegalLink, false, true);
		syra_controller.deleteWorkingCopy(this);
		this.isDesigned && syra_site.switchItemDesigner(this, false);
		syra_page.bindScrollView(this, false);
		this.menuBar && this.menuBar.dispose();
		this._autoInsertFields && this._autoInsertFields.dispose();
		this.garbage && this.garbage.dispose();
		this.diagnosesPanel && this.diagnosesPanel.dispose();
		_designerViewChoice.dispose(this);
		RawPage.prototype.dispose.call(this);
	}
});