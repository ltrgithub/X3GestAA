"use strict";
var helpers = require('syracuse-core/lib/helpers');
var BarSplitter = require("syracuse-ui/lib/page/bar/barSplitter").BarSplitter;

var _$mainActions = {
	$cube: "$create",
	$query: "$create",
	$details: "$edit",
	$edit: "$save",
	$request: "$invoke"
};


function _addInlinePageMenus(page) {
	page.$item.$menus = [{
		$skin: "s-mn-inline",
		$category: "menus",
		$isMenuPage: true,
		$layout: {
			$items: [{
				$bind: page.$mainAction
			}, {
				$bind: "$abort"
			}]
		}
	}];
	var $actions = page.$prototype.$actions = page.$prototype.$actions || {};
	if (!$actions.$abort) {
		$actions.$abort = {
			$title: syra_local.inlinepage_cancel
		};
	}
	return page.$item.$menus;
}

function _addDefaultPageMenus(page) {
	if (!page.$item.$menus) {
		page.$item.$menus = [{
			$skin: page.$skinMenu || "s-mn-main",
			$category: "menus",
			$isBoxCollapsable: true,
			$isMenusBag: true,
			$layout: {
				$items: []
			}
		}];
		if (page.$mainAction) {
			page.$item.$menus[0].$layout.$items.push({
				$showIfSet: true,
				$bind: page.$mainAction,
				$style: "main"
			});
		}
	} else {
		if (!Array.isArray(page.$item.$menus)) {
			page.$item.$menus = [{
				$isMenusBag: true,
				$layout: {
					$items: syra_page.getDefinedFieldList(page.$item.$menus.$layout.$items)
				}
			}];
		}
	}
	for (var ii = 0, jj = page.$item.$menus.length; ii < jj; ii++) {
		var $menus = page.$item.$menus[ii];
		$menus.$isMenuPage = true;
		$menus.$category = "menus";
		if ($menus.$isBoxCollapsable === undefined) {
			$menus.$isBoxCollapsable = true;
		}
		if ($menus.$skin === undefined) {
			$menus.$skin = page.$skinMenu || "s-mn-main";
		}
	}
	return page.$item.$menus;
}

function MenuBar() {}

exports.MenuBar = helpers.defineClass(MenuBar, BarSplitter, {
	load: function(page) {
		this.preferenceKey = page.isVignettePage ? "vignette-menubar" : "menuBar";
		this.options = this.options || {};
		if (page.inlinePageHost) {
			this.options.$isResizerDisabled = true;
			this.options.resizeDirection = "bottom";
		} else {
			this.options.resizeDirection = (page.$pageCategory == "vignette" || page.isLandingPage) ? "left" : "right";
		}
		this.options.$skin = page.$skin + "-menubar";
		page.initializeNewItem(this);
		this.slot = document.createElement("div");
		this.slot.className = page.$skin + "-menubar-slot";
		this.slot.style.display = "none";

		this.body = document.createElement("div");
		this.body.className = page.$skin + "-menubar-body";

		if (page.$pageCategory == "vignette" || page.isLandingPage) {
			this.page.domItem.insertBefore(this.slot, this.page.domItem.firstChild);
		} else {
			this.page.domItem.appendChild(this.slot);
		}
		this.isSlotVisible = false;
		BarSplitter.prototype.load.call(this, page);

		if (!syra_site.mobileGateway) {
			if (this.page.isFusionPage && this.page.$item.$menus && this.page.$item.$menus.length) {
				this.page.$item.$menus[0].$isMenusBag = true;
			}
			this.page.$mainAction = _$mainActions[this.page.$facet];
			this.page.loadNewItem(this.body, {
				$layoutType: "stack",
				$items: this.page.inlinePageHost ? _addInlinePageMenus(page) : _addDefaultPageMenus(this.page)
			}).isMenuBarLayout = true;
		}
	},

	ensureState: function(startResize) {
		if (this.isSlotVisible) {
			BarSplitter.prototype.ensureState.call(this, startResize);
		}
	},

	toggleBar: function(show) {
		if (!this.isSlotVisible) {
			show = false;
		}
		if (show && this.page.dialogWrapper) {
			if (this.page.isFusionPage) {
				show = this.$facet != "$lookup";
			} else {
				show = false;
			}
		}
		BarSplitter.prototype.toggleBar.call(this, show);
	}
});