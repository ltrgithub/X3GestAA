"use strict";
var helpers = require('syracuse-core/lib/helpers');
var BarSplitter = require("syracuse-ui/lib/page/bar/barSplitter").BarSplitter;

function MenuBar() {}

exports.MenuBar = helpers.defineClass(MenuBar, BarSplitter, {
	load: function(page) {
		this.preferenceKey = page.menuBarPreferenceKey || "menuBar";
		this.options = this.options || {};
		this.options.resizeDirection = {};
		this.options.$skins = {
			bar: page.$skin + "-menubar",
			openerPicker: page.$skin + "-menubar-opener",
			resizePicker: page.$skin + "-menubar-resizer"
		};

		this.options.resizeDirection[page.isDashBoard ? "left" : "right"] = true;
		page.initializeNewItem(this);
		this.barSlot = document.createElement("div");
		this.barSlot.className = page.$skin + "-menubar-slot";
		this.barSlot.style.display = "none";

		this.barBody = document.createElement("div");
		this.barBody.className = page.$skin + "-menubar-body";

		if (page.$pageCategory == "vignette" || page.$pageCategory == "dashboard") {
			this.page.domItem.insertBefore(this.barSlot, this.page.domItem.firstChild);
			this.options.resizeDirection.left = true;
		} else {
			this.page.domItem.appendChild(this.barSlot);
		}
		BarSplitter.prototype.load.call(this, page);
	},
	onBarBodyAdded: function() {
		this.page.appendPageMenus(this.barBody);
	},
	onMenuDataFilled: function(menuItem) {
		if (!this.isSlotVisible && !this.isHidden) {
			if (menuItem.boxParent.menuGroupRoot) {
				if (menuItem.boxParent.menuGroupRoot.$item.$isMenuPage) {
					this.isSlotVisible = true;
					if (!this.page.designer) {
						this.toggleBar(true);
						this.ensureState();
						if (this.page.layoutSlot.style.display != "none") {
							document.site.resize();
						}
					}
				}
			}
		}
	},
	toggleBar: function(show) {
		if (show && this.page.dialogWrapper) {
			if (this.page.$isFusionPage) {
				show = this.$facet != "$lookup";
			} else {
				show = false;
			}
		}
		BarSplitter.prototype.toggleBar.call(this, show);
	}
});