"use strict";
var helpers = require('syracuse-core/lib/helpers');
var BarResizerDDAgent = require("./barResizerDDAgent").BarResizerDDAgent;

function _appplyPreferences(bar) {
	var defaultState;
	var defaultViewMode = bar.options.$viewMode || (syra_site.isTabletDevice ? "float" : "dock");
	if (syra_site.$item.$preferences) {
		defaultState = syra_site.$item.$preferences[bar.preferenceKey || bar.userPreferenceKey || "none"];
	}
	defaultState = defaultState || {
		$viewMode: defaultViewMode,
		$isCollapsed: false
	};
	if (bar.preferenceKey) {
		syra_site.getPreferences(bar.preferenceKey, defaultState, bar);
	} else {
		if (bar.userPreferenceKey) {
			defaultState = bar.page.userPreferences.getForKey(bar.userPreferenceKey) || defaultState;
		}
		syra_site.applyValues(bar, defaultState);
	}
	if (bar.options.$viewMode || !bar.$viewMode) {
		bar.$viewMode = defaultViewMode;
	}
}

function BarSplitter() {}

exports.BarSplitter = helpers.defineClass(BarSplitter, null, {
	load: function(page) {
		this.articleParent = page;
		if (!this.id) {
			this.id = page.id + "-" + (++page._childItemOffset);
		}
		syra_store.add(this);
		this.closeWidth = 100;
		this.minWidth = this.minWidth || 200;
		this.page = page;
		if (this.isSlotVisible === undefined) {
			this.isSlotVisible = true;
		}
		_appplyPreferences(this);
		this.options.resizeDirection = this.options.resizeDirection || "left";
		this.barSlot.className += " s-bar-slot-" + this.options.resizeDirection;
		if (this.$width != undefined && parseInt(this.$width) <= this.closeWidth) {
			delete this.$width;
		}

		if (!this.options.$isResizerDisabled) {
			this.resizePicker = document.createElement("a");
			this.resizePicker.className = this.options.$skins.resizePicker + " s-bar-resizer-" + this.options.resizeDirection;
			this.openButton = syra_menus.addIconButton(syra_local.bar_collapse, this.options.$skins.openButton, "onOpenerClick", "ESC H " + ((this.options.resizeDirection == "left") ? "L" : "R") + ", ESC F11");
			this.openButton.syraTool = this.id;
			this.page.setArticleId(this.openButton);
			this.resizePicker.appendChild(this.openButton);
			this.resizePicker.syraDragSpot = this.id;
			this.barSlot.appendChild(this.resizePicker);
			syra_dd.barResizer.push(this);
		}

		this.barSlot.appendChild(this.barBody);
		syra_site.dom.setZIndex(this.barSlot, true);
		this.page.setArticleId(this.barSlot);
		this.ensureState();
	},
	isDraggable: function(target, event) {
		if (target == this.resizePicker) {
			if (event.target != this.openButton) {
				syra_dd.dropableItem = {
					barSplitter: this,
					resizeDirection: this.options.resizeDirection
				};
				syra_dd.start(this, BarResizerDDAgent, this.barSlot);
				event.syraRetValue = false;
				return;
			}
		}
		return null;
	},
	toggleBar: function(show) {
		this.isHidden = !show;
		if (this.barSlot) {
			this.barSlot.style.display = this.isHidden ? "none" : "";
		}
	},
	ensureState: function(startResize) {
		if (!this.isHidden) {
			if (startResize && this.$isCollapsed) {
				this.curCollapsedState = this.$isCollapsed = false;
				delete this.$width;
				this.barSlot.style.width = this.barSlot.getBoundingClientRect().width + "px";
				this.barBody.style.display = "";
			} else {
				if (this.curCollapsedState != this.$isCollapsed) {
					if (this.$isCollapsed) {
						this.barBody.style.display = "none";
						this.barSlot.style.width = "";
					} else {
						this.$isCollapsed = false;
						this.barSlot.style.width = Math.max(this.$width || 0, this.minWidth) + "px";
						this.barBody.style.display = "";
					}
					this.curViewMode = this.$viewMode;
					this.curCollapsedState = this.$isCollapsed;
				}
			}
			syra_site.dom.toggleClass(this.barSlot, "s-close", this.$isCollapsed);
			if (this.resizePicker) {
				syra_menus.setButtonTitle(this.openButton, this.$isCollapsed ? syra_local.bar_expand : syra_local.bar_collapse);
				syra_site.dom.toggleClass(this.openButton, "s-close", this.$isCollapsed);
			}
		}
	},
	resizeBar: function(resize) {
		if (this.barSlot) {
			var height = this.page.barHeight || this.page.getScrollviewSize().height;
			if (height && (resize || (height != this.lastHeight))) {
				this.lastHeight = height;
				this.barSlot.style.height = height + "px";
				if (this.openButton) {
					this.openButton.style.top = ((height - this.openButton.clientHeight) / 2) + "px";
				}
				this.barBody.style.height = height + "px";
				return true;
			}
		}
		return false;
	},
	collapse: function() {
		this.$isCollapsed = !this.$isCollapsed;
		this.savePreferences();
		this.ensureState();
		this.page.resizeArticle(true);
	},
	clearPreferences: function() {
		var key = this.preferenceKey || this.userPreferenceKey;
		if (key) {
			syra_site.setPreferences(key);
			delete this.$width;
			delete this.$isCollapsed;
			this.ensureState();
			_appplyPreferences(this);
		}
	},
	savePreferences: function(key) {
		if (this.preferenceKey) {
			syra_site.setPreferences(this.preferenceKey, this, ["$width", "$isCollapsed"]);
		} else {
			if (this.userPreferenceKey) {
				var pref = this.page.userPreferences.getForKey(this.userPreferenceKey, {});
				pref.$width = this.$width;
				pref.$isCollapsed = this.$isCollapsed;
				this.page.savePageDesign(true);
			}
		}
	},
	onOpenerClick: function() {
		this.collapse();
	},

	dispose: function() {
		syra_store.remove(this);
		if (this.resizePicker) {
			var ii = syra_dd.barResizer.indexOf(this);
			if (ii >= 0) {
				syra_dd.barResizer.splice(ii, 1);
			}
		}
		if (this.barSlot && this.$viewMode == "float") {
			syra_site.dom.removeChild(this.barSlot);
		}
		this.articleParent = this.page = this.barSlot = this.barBody = this.resizePicker = this.openButton = null;
	}

});