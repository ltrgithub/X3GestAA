"use strict";
var helpers = require('syracuse-core/lib/helpers');
var BarResizerDDAgent = require("./barResizerDDAgent").BarResizerDDAgent;

function BarSplitter() {}

exports.BarSplitter = helpers.defineClass(BarSplitter, null, {
	_appplyPreferences: function() {
		var defaultState;
		if (document.site.$item.$preferences) {
			defaultState = document.site.$item.$preferences[this.preferenceKey || this.userPreferenceKey || "none"];
		}
		defaultState = defaultState || {
			$viewMode: document.site.isTableDevice() ? "float" : "dock",
			$isCollapsed: false
		};
		if (this.preferenceKey) {
			document.site.getPreferences(this.preferenceKey, defaultState, this);
		} else {
			if (this.userPreferenceKey) {
				defaultState = this.page.$userPreferences[this.userPreferenceKey] || defaultState;
			}
			document.site.applyValues(this, defaultState);
		}
		if (!this.$viewMode) {
			this.$viewMode = document.site.isTableDevice() ? "float" : "dock";
		}
	},
	load: function(page) {
		this.page = page;
		this._appplyPreferences();

		this._bar = document.createElement("div");
		this._bar.className = this.options.$skins.bar;

		if (document.site.isTableDevice()) {
			this.swipeBar = document.createElement("div");
			this.swipeBar.className = this.options.$skins.resizePicker;
			this.openerPicker = document.createElement("a");
			this.openerPicker.className = this.options.$skins.openerPicker;
			this.openerPicker.setAttribute("data-s-picker", "s-bar-collapse");
			this.page.setArticleId(this.openerPicker);
			this.openerPicker.style.display = "none";
			this.swipeBar.appendChild(this.openerPicker);
			this._bar.appendChild(this.swipeBar);
			document.site.ddManager.toggleBarSwiperObserver(this, true);
		} else {
			if (!this.options.$isResizerDisabled) {
				this.resizePicker = document.createElement("a");
				this.resizePicker.className = this.options.$skins.resizePicker;
				this.openerPicker = document.createElement("a");
				this.openerPicker.className = this.options.$skins.openerPicker;
				this.openerPicker.setAttribute("data-s-picker", "s-bar-collapse");
				this.page.setArticleId(this.openerPicker);
				this.openerPicker.style.display = "none";
				this.resizePicker.appendChild(this.openerPicker);
				document.site.ddManager.setDragSpot(this.resizePicker, true);
				this._bar.appendChild(this.resizePicker);
				document.site.ddManager.toggleBarResizerObserver(this, true);
			}
		}
		this._bar.appendChild(this.barBody);
		this.barSlot.appendChild(this._bar);
		this.onBarBodyAdded();
		this.ensureState();
	},
	onBarBodyAdded: function() {

	},
	isDraggable: function(target, event) {
		if (target == this.resizePicker) {
			if (event.target != this.openerPicker) {
				document.site.ddManager.dropableItem = {
					barSplitter: this,
					resizeDirection: this.options.resizeDirection
				};
				document.site.ddManager.start(this, BarResizerDDAgent, this._bar);
				event.syraRetValue = false;
				return;
			}
		}
		return null;
	},
	toggleBar: function(show) {
		this.isHidden = !show;
		if (this.barSlot) {
			this.barSlot.style.display = this.isHidden ? "none" : "";
		}
	},
	isSwipable: function(target, event) {
		if (target == this.swipeBar) {
			document.site.ddManager.swipableItem = {
				barSplitter: this,
				resizeDirection: this.options.resizeDirection,
				swipeDirection: "left" //(event.type == "swiperight") ? "right" : "left"
			};
			return;
		}
		return null;
	},
	onSwipeRight: function() {
		if (($(this._bar).is(".s-dash-menubar , .s-fusion-bar") && this.$isCollapsed) ||
			($(this._bar).is(".s-page-menubar") && !this.$isCollapsed)) {
			this.collapse();
		}
		return false;
	},
	onSwipeLeft: function() {
		if (($(this._bar).is(".s-dash-menubar, .s-fusion-bar") && !this.$isCollapsed) ||
			($(this._bar).is(".s-page-menubar") && this.$isCollapsed)) {
			this.collapse();
		}
		return false;
	},
	ensureState: function() {
		if (!this.isHidden && !this._designing) {
			if (this.$isCollapsed) {
				this.barSlot.style.width = "";
				this.barBody.style.display = "none";
			} else {
				this.$isCollapsed = false;
				this.barSlot.style.width = this.$barWidth || "";
				this.barBody.style.display = "";
				if (this.isSlotVisible) {
					this.barSlot.style.display = "";
				}
			}
			if (this.options && this.options.resizeDirection) {
				// adapt display according to $viewMode value
				this._applyFloatStyle(this.$viewMode == "float");
			}

			document.site.toggleClass(this.barSlot, "s-close", this.$isCollapsed);
			if (this.resizePicker) {
				document.site.toggleClass(this.resizePicker, "s-close", this.$isCollapsed);
				document.site.toggleClass(this.openerPicker, "s-close", this.$isCollapsed);
			}
			if (this.swipeBar) {
				document.site.toggleClass(this.swipeBar, "s-close", this.$isCollapsed);
				document.site.toggleClass(this.openerPicker, "s-close", this.$isCollapsed);
			}
		}
	},
	_applyFloatStyle: function(isAutoFloat) {
		if (isAutoFloat) {
			this.barSlot.style.display = "inline-block";
			this.barSlot.style.position = "absolute";
			this.barSlot.style[this.options.resizeDirection.right ? "right" : "left"] = isAutoFloat ? 0 : "";
			this.page.scrollview.style[this.options.resizeDirection.right ? "marginRight" : "marginLeft"] = "10px";
			if (this.options.resizeDirection.left) {
				document.site.layoutSlot.insertBefore(this.barSlot, document.site.body);
			} else {
				document.site.layoutSlot.appendChild(this.barSlot);
			}
			document.site.setZIndex(this.barSlot);
			this["is" + (this.options.resizeDirection.right ? "Right" : "Left") + "PanelMoved"] = true;
		} else {
			if (this.isLeftPanelMoved || this.isRightPanelMoved) {
				this.barSlot.style.display = "";
				this.barSlot.style.position = "";
				this.barSlot.style[this.options.resizeDirection.right ? "right" : "left"] = "";
				this.page.scrollview.style[this.options.resizeDirection.right ? "marginRight" : "marginLeft"] = "";
				if (this.options.resizeDirection.left) {
					this.page.dataSlot.parentNode.insertBefore(this.barSlot, this.page.dataSlot);
				} else {
					this.page.dataSlot.parentNode.appendChild(this.barSlot);
				}
				this["is" + (this.options.resizeDirection.right ? "Right" : "Left") + "PanelMoved"] = false;
			}
		}
	},
	resizeBar: function(scrollview) {
		if (this._bar && this.barSlot) {
			var scrollviewRect = document.site.getBoundingClientRect(scrollview || this.page.scrollview);
			var height = scrollviewRect.height;
			if (scrollviewRect.height) {
				this.ensureState();
				this._bar.style.height = scrollviewRect.height + "px";
				if (this.barSlot.style.display == "" && this.$barWidth) {
					if (this.barSlot.clientWidth <= 50) {
						this.$barWidth = "";
						this.barSlot.style.width = "";
					}
				}
				if (this.$viewMode == "float") {
					this.barSlot.style.height = scrollviewRect.height + "px";
					this.barSlot.style.top = scrollviewRect.top + "px";
				}
				if (this.resizePicker) {
					this.resizePicker.style.height = scrollviewRect.height + "px";
					this.openerPicker.style.display = "";
					this.openerPicker.style.top = ((scrollviewRect.height - this.openerPicker.clientHeight) / 2) + "px";
				}
				this.barBody.style.height = scrollviewRect.height + "px";
				if (this.authoringOverlay) {
					var style = this.authoringOverlay.style;
					var barRect = document.site.getBoundingClientRect(this._bar);
					style.top = barRect.top + "px";
					style.left = barRect.left + "px";
					style.height = barRect.height + "px";
					style.width = barRect.width + "px";
				}
				if (this.swipeBar) {
					var scrollviewRect = document.site.getBoundingClientRect(this.page.scrollview);
					this.swipeBar.style.height = scrollviewRect.height + "px";
					this.openerPicker.style.display = "";
					this.openerPicker.style.top = ((scrollviewRect.height - this.openerPicker.clientHeight) / 2) + "px";
				}
				return true;
			}
		}
		return false;
	},
	collapse: function() {
		//        this._widgetResizer.isEnabled = !(this.$isCollapsed = !this.$isCollapsed);
		this.$isCollapsed = !this.$isCollapsed;
		this.savePreferences("$isCollapsed");
		this.ensureState();
		this.page.resizeArticle();
	},
	savePreferences: function(key) {
		if (this.preferenceKey) {
			document.site.setPreferences(this.preferenceKey, this, [key]);
		} else {
			if (this.userPreferenceKey) {
				(this.page.$userPreferences[this.userPreferenceKey] = this.page.$userPreferences[this.userPreferenceKey] || {})[key] = this[key];
				this.page.savePageDesign(true);
			}
		}
	},
	onClickPicker: function(picker) {
		if (picker.getAttribute("data-s-picker") == "s-bar-collapse") {
			this.collapse();
			return true;
		}
		return false;
	},
	toggleUIDesign: function(enable, isOnPreviewMode) {
		if (enable) {
			if (!this.authoringOverlay) {
				this.authoringOverlay = document.createElement("div");
				this.authoringOverlay.className = "s-fusion-bar-overlay";
				document.site.setZIndex(this.authoringOverlay);
				document.site.layoutSlot.appendChild(this.authoringOverlay);
			}
			this._designing = true;
			this.barSlot.style.display = this.authoringOverlay.style.display = (isOnPreviewMode && (!this.isHidden && this.isSlotVisible)) ? "" : "none";
			this.resizeBar();
		} else {
			if (this.authoringOverlay) {
				document.site.removeDomChild(this.authoringOverlay);
				delete this.authoringOverlay;
			}
			this._designing = false;
			if (!this.isHidden && this.isSlotVisible) {
				this.barSlot.style.display = "";
			}
			this.ensureState();
		}
	},
	toggleAutoFloat: function(isAutoFloat) {
		var isTableDevice = document.site.isTableDevice();
		if (!isTableDevice || (isTableDevice && this.options.resizeDirection.right)) {
			if (isAutoFloat) {
				this.isAutoFloat = isAutoFloat;
				if (this.$viewMode == "dock") {
					this.$viewMode = "float";
					this.$isCollapsed = true;
					this.ensureState();
				}
			} else {
				if (this.isAutoFloat) {
					this.isAutoFloat = isAutoFloat;
					if (this.$viewMode == "float") {
						this.$viewMode = "dock";
						this.$isCollapsed = false;
						this.ensureState();
					}
				}
			}
		}
		this.resizeBar();
	},
	dispose: function() {
		if (this.resizePicker) {
			document.site.ddManager.toggleBarResizerObserver(this, false);
		}
		if (this.swipeBar) {
			document.site.ddManager.toggleBarSwiperObserver(this, false);
		}
		if (this.authoringOverlay) {
			document.site.removeDomChild(this.authoringOverlay);
			delete this.authoringOverlay;
		}
		this.page = this.barSlot = this.barBody = this._bar = this.resizePicker = this.openerPicker = null;
	}

});