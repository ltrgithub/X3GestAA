"use strict";
var helpers = require('syracuse-core/lib/helpers');
var BarResizerDDAgent = require("./barResizerDDAgent").BarResizerDDAgent;

function BarSplitter(){
}

exports.BarSplitter = helpers.defineClass(BarSplitter, null, {
    load: function(page){
        var defaultState = {
            $viewMode: "dock",
            $isCollapsed: false
        };
        if (this.preferenceKey) {
            document.site.getPreferences(this.preferenceKey, defaultState, this);
        }
        else {
            document.site.applyValues(this, defaultState);
        }
        this.page = page;
        this.page.attachToPageResizeListener(true, this);
        this._bar = document.createElement("div");
        this._bar.className = this.options.$skins.bar;
        
        this.resizeBar = document.createElement("a");
        this.resizeBar.className = this.options.$skins.resizeBar;
        this.openerPicker = document.createElement("a");
        this.openerPicker.className = this.options.$skins.openerPicker;
        this.openerPicker.setAttribute("data-s-picker", "s-bar-collapse");
        this.openerPicker.style.display = "none";
        this.resizeBar.appendChild(this.openerPicker);
        document.site.ddManager.setDragSpot(this.resizeBar, true);
        this._bar.appendChild(this.resizeBar);
        document.site.ddManager.toggleBarResizerObserver(this, true);
        
        this._bar.appendChild(this.barBody);
        this.barSlot.appendChild(this._bar);
        if (this.$barWidth) {
            this.barSlot.style.width = this.$barWidth;
        }
        this.onBarBodyAdded();
        this.ensureState();
    },
    onBarBodyAdded: function(){
    
    },
    isDraggable: function(target, event){
        if (target == this.resizeBar) {
            document.site.ddManager.dropableItem = {
                barSplitter: this,
                resizeDirection: this.options.resizeDirection
            };
            document.site.ddManager.start(this, BarResizerDDAgent, this._bar);
            event.syraRetValue = false;
            return;
        }
        return null;
    },
    toggleBar: function(show){
        this.isHidden = !show;
        if (this.barSlot) {
            this.barSlot.style.display = this.isHidden ? "none" : "";
        }
    },
    ensureState: function(){
        if (!this.isHidden && !this._designing) {
            if (this.$isCollapsed) {
                this.barSlot.style.width = "";
                this.barBody.style.display = "none";
            }
            else {
                this.$isCollapsed = false;
                this.barSlot.style.width = this.openedWidth || "";
                this.barBody.style.display = "";
                if (this.isSlotVisible) {
                    this.barSlot.style.display = "";
                }
            }
            
            if (this.options && this.options.resizeDirection) {
                // adapt display according to $viewMode value
                this._applyFloatStyle(this.$viewMode == "float");
            }
			         
            document.site.toggleClass(this.barSlot, "s-close", this.$isCollapsed);
            document.site.toggleClass(this.resizeBar, "s-close", this.$isCollapsed);
            document.site.toggleClass(this.openerPicker, "s-close", this.$isCollapsed);
        }
    },
    _applyFloatStyle: function(isAutoFloat){
        this.page.dataSlot.style.width = isAutoFloat ? "100%" : "";
        this.barSlot.style.position = isAutoFloat ? "absolute" : "";
        this.barSlot.style[this.options.resizeDirection.right ? "right" : "left"] = isAutoFloat ? 0 : "";
        if (isAutoFloat) {
            document.site.setZIndex(this.barSlot);
        }
    },
    onWindowResize: function(){
        if (this._bar && this.barSlot) {
            var scrollviewRect = document.site.getBoundingClientRect(this.page.scrollview);
            var height = scrollviewRect.height;
            if (scrollviewRect.height) {
                if (this.$isCollapsed != this.$isCollapsed) {
                    this.ensureState();
                }
                this._bar.style.height = scrollviewRect.height + "px";
                this.resizeBar.style.height = scrollviewRect.height + "px";
                this.openerPicker.style.display = "";
                this.openerPicker.style.top = ((scrollviewRect.height - this.openerPicker.clientHeight) / 2) + "px";
                this.barBody.style.height = scrollviewRect.height + "px";
                if (this.authoringOverlay) {
                    var style = this.authoringOverlay.style;
                    var barRect = document.site.getBoundingClientRect(this._bar);
                    style.top = barRect.top + "px";
                    style.left = barRect.left + "px";
                    style.height = barRect.height + "px";
                    style.width = barRect.width + "px";
                }
                if (this._onResizeBody) {
                    this._onResizeBody();
                }
            }
        }
    },
    collapse: function(){
        //        this._widgetResizer.isEnabled = !(this.$isCollapsed = !this.$isCollapsed);
        this.$isCollapsed = !this.$isCollapsed;
        if (this.preferenceKey) {
            document.site.setPreferences(this.preferenceKey, this, ["$isCollapsed"]);
        }
        this._onSwitchBarState();
    },
    onClickPicker: function(picker){
        if (picker.getAttribute("data-s-picker") == "s-bar-collapse") {
            this.collapse();
            this._onSwitchBarState();
            return true;
        }
        return false;
    },
    _onSwitchBarState: function(){
        this.ensureState();
        this.page.onWindowResize();
    },
    toggleUIDesign: function(enable, isOnPreviewMode){
        if (enable) {
            if (!this.authoringOverlay) {
                this.authoringOverlay = document.createElement("div");
                this.authoringOverlay.className = "s-fusion-bar-overlay";
                document.site.setZIndex(this.authoringOverlay);
                document.site.layoutSlot.appendChild(this.authoringOverlay);
            }
            this._designing = true;
            this.barSlot.style.display = this.authoringOverlay.style.display = (isOnPreviewMode && (!this.isHidden && this.isSlotVisible)) ? "" : "none";
            this.onWindowResize();
        }
        else {
            if (this.authoringOverlay) {
                document.site.removeDomChild(this.authoringOverlay);
                delete this.authoringOverlay;
            }
            this._designing = false;
            this.ensureState();
        }
    },
    toggleAutoFloat: function(isAutoFloat){
        if (isAutoFloat) {
            this.isAutoFloat = isAutoFloat;
            if (this.$viewMode == "dock") {
                this.$viewMode = "float";
                this.$isCollapsed = true;
                this.ensureState();
            }
        }
        else {
            if (this.isAutoFloat) {
                this.isAutoFloat = isAutoFloat;
                if (this.$viewMode == "float") {
                    this.$viewMode = "dock";
                    this.$isCollapsed = false;
                    this.ensureState();
                }
            }
        }
    },
    dispose: function(){
        document.site.ddManager.toggleBarResizerObserver(this, false);
        if (this.page) {
            this.page.attachToPageResizeListener(false, this);
        }
        if (this.authoringOverlay) {
            document.site.removeDomChild(this.authoringOverlay);
            delete this.authoringOverlay;
        }
        this.page = this.barSlot = this.barBody = this._bar = null;
        this.resizeBar = this.openerPicker = null;
    }
    
});
