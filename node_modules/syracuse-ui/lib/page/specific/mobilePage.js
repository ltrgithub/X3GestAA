"use strict";
var helpers = require('syracuse-core').helpers;
var DesktopPage = require("syracuse-ui/lib/page/desktopPage").DesktopPage;

function MobilePage() {}

exports.MobilePage = helpers.defineClass(MobilePage, DesktopPage, {
	load: function($fieldsPrototype, initData) {
		this.$pageCategory = "page";
		this.$prototype = {
			$properties: {
				$fieldPrototype: {
					"$type": "application/x-string",
					$rows: 50
				},
				$fieldJSON: {
					"$type": "application/x-string",
					$rows: 50
				}
			},
			$actions: {
				$applyChange: {
					$title: syra_local.mobile_applychange
				}
			}
		};
		this.$item = {
			$layout: {
				$items: [{
					$skin: "s-mn-link",
					$category: "link",
					$bind: "$applyChange"

				}, {
					$layoutType: "tabs",
					$items: [{
						$category: "section",
						$title: syra_local.mobile_fieldJSON,
						$layout: {
							$items: [{
								$bind: "$fieldJSON",
								$isTitleHidden: true,
								$isEditMode: true,
								$isAutoSizeDisabled: true,
								$skin: "s-json-field"
							}]
						}

					}, {
						$category: "section",
						$title: syra_local.mobile_fieldPrototype,
						$layout: {
							$items: [{
								$bind: "$fieldPrototype",
								$isTitleHidden: true,
								$isEditMode: true,
								$isAutoSizeDisabled: true,
								$skin: "s-json-field"
							}]
						}
					}]
				}]
			}
		};
		DesktopPage.prototype.load.call(this, initData);
		this.header.style.display = "none";
		this.body.style.padding = "0.5em";
	},
	form_postAction: function(menuItem, target, value) {
		if (value.$applyChange) {
			try {
				var field = this.boundFields.$fieldJSON[0];
				var $article = JSON.parse(field.getValue());
				field.setInputValue(JSON.stringify($article, null, 2));
				syra_site.mainPage.$item = $article;
				syra_site.mobile.isApplyChangeDisabled = true;
				syra_site.mainPage.designer.history.updateSteps(true);
				delete syra_site.mobile.isApplyChangeDisabled;
				syra_site.mainPage.designer.history.onAfterStepChange(syra_site.clone($article));
				syra_alert.show({
					$message: syra_local.mobile_changeapplied,
					$severity: "success"
				}, this, {
					autoHide: 3000
				});
			} catch (error) {
				syra_alert.error(error.message);
			} finally {
				delete syra_site.mobile.isApplyChangeDisabled;
			}
			return false;
		}
		return true;
	},
	fillEditors: function($prototype, $article) {
		this.applyChange({
			$fieldJSON: JSON.stringify($article, null, 2),
			$fieldPrototype: JSON.stringify($prototype, null, 2)

		});
	}
});