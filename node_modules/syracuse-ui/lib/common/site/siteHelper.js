"use strict";
var helpers = require("syracuse-core/lib/helpers");
var itemFactory = require('./itemFactory');
var Controller = require('syracuse-ui/lib/common/controller/controller').Controller;
var EditFieldController = require('syracuse-ui/lib/common/controller/editFieldController').EditFieldController;


function ExternalAdapter(){
}

helpers.defineClass(ExternalAdapter, null, {
    onFieldNotifyChange: function(options){
        options.doEvent();
    },
    onSelectRecordEvent: function(options){
        options.doEvent();
    },
    onBoxToggle: function(options){
        options.doEvent();
    },
    onBoxClick: function(options){
        return true;
    },
    onFieldEvent: function(options){
        options.doEvent();
    },
    releaseMainPage: function(options){
        options.doEvent();
    },
    onMenuItemClick: function(options){
        options.doEvent();
    },
    setDataBind: function(field, $resources, record, metaData){
        return true;
    },
    createField: function(){
        return null;
    }
});


exports.loadSite = function(siteOptions){

    document.itemFactory = itemFactory.create(siteOptions.widgetsLibrary);
    (document.controller = new (siteOptions.controllerClass || Controller)()).initialize();
    document.editFieldController = new EditFieldController();
    
    if (siteOptions.fusionGatewayClass) {
        document.controller.fusionGateway = new siteOptions.fusionGatewayClass();
    }
    document.site = new siteOptions.siteClass();
    document.site.agents = {};
    document.site.eventListeners = {
        resize: {}
    };
    document.site.externalAdapter = new ExternalAdapter();
    
    document.site.toggleClass = function($$item, css, show){
        var $e$item = $$item[0];
        if (show) {
            if ($e$item.className.indexOf(css) < 0) {
                $e$item.className += (" " + css);
            }
        }
        else {
            $e$item.className = $e$item.className.replace(css, "");
        }
    };
    
    document.site.getPage = function(){
        //hack ensure external adpater 
        return this;
    };
    document.site.maximizeBox = function(box, callback){
        setTimeout(function(){
            if (!box.$$memBody) {
                box.$$memBody = $("<div/>");
            }
            var page = box.getArticle().getPage();
            box.$$memBody.empty().append(page.$$body.children());
            page.$$body.append(box.$$item);
            if (callback) {
                callback(box, page);
            }
        }, 20);
        box.$isMaximized = true;
        box.maximizeBtn.className = box.maximizeBtn.className.replace("-maximize", "-minimize");
    };
    document.site.minimizeBox = function(box, callback){
        setTimeout(function(){
            var page = box.getArticle().getPage();
            box.$$item.appendTo(box.$$container);
            page.$$body.append(box.$$memBody.children());
            box.$$memBody.remove();
            delete box.$$memBody;
            if (callback) {
                callback(box, page);
            }
        }, 20);
        box.$isMaximized = false;
        box.maximizeBtn.className = box.maximizeBtn.className.replace("-minimize", "-maximize");
        
    };
    document.site.showDiagnoses = function(message, item){
        var page;
        if (item) {
            var article = item.getArticle();
            page = (article ? article.getPage() : null) || document.site.mainPage;
        }
        if (this._diagnoseViewer) {
            this._diagnoseViewer.showDiagnoses(message, page);
        }
    };
    document.site.appendDiagnoseViewer = function($$container, host, isTest){
        if (siteOptions.diagnoseViewerClass) {
            var diagnoseViewer = new siteOptions.diagnoseViewerClass();
            diagnoseViewer.appenToPage(host, $$container);
            if (!isTest) {
                host._diagnoseViewer = diagnoseViewer;
            }
            return diagnoseViewer;
        }
        
    };
    document.site.openHomeLink = function(){
        var self = this;
        setTimeout(function(){
            var homeLinks = self.menusFacade.items.$home;
            if (homeLinks && homeLinks[0]) {
                homeLinks[0].click();
            }
        }, 20);
    };
    document.site.addEventListener = function(eventName, listener){
        this.eventListeners[eventName][listener[eventName + "Id"] = document.controller.generateUUID()] = listener;
    };
    document.site.removeEventListener = function(eventName, listener){
        delete this.eventListeners[eventName][listener[eventName + "Id"]];
    };
    document.site.showMessage = function(options){
        if (this._msgBox) {
            document.controller.disposeObject(this._msgBox);
        }
        options.$type = options.$type || "alert";
        (this._msgBox = new siteOptions.messageBoxClass()).open(options);
    };
    document.site._releaseMainPage = function(){
        var prev = this.mainPage;
        if (prev && prev.externalAdapter) {
            prev.externalAdapter.releaseMainPage({
                mainPage: prev,
                doEvent: function(){
                    setTimeout(function(){
                        document.controller.disposeObject(prev);
                    }, 10);
                }
            });
        }
        this.$$body.empty();
    };
    document.site.unload = function(){
        $(document).unbind();
        delete this.eventListeners;
        document.controller.disposeObject(this);
        document.controller.disposeObject(document.controller);
        document.site = document.controller = null;
    };
    
    $(window).unload = function(){
        if (document.site) {
            document.site.unload();
        }
    };
    
    document.controller.bindMenuClick(document.site.$$container = $("#s-site"));
    document.site.$prototype = siteOptions.$prototype;
    
    document.itemFactory.initializeItem(document.site, siteOptions.$item);
    document.site.$item.$layoutOptions = document.site.$item.$layoutOptions || {};
    document.site.logon = function(onAfterLogon){
        if (document.site.userProfile) {
            document.controller.disposeObject(document.site.userProfile);
            document.site.userProfile = null;
        }
        document.controller.loadWorkingCopy({
            menu: {
                $url: document.site.$item.$userProfileUrl
            },
            article: document.site.userProfile = new (siteOptions.userProfileClass)(),
            callback: function(){
                onAfterLogon();
            }
        });
    };
    document.site.getSessionId = function(){
        return helpers.http.parseCookie(document.cookie)["syracuse.sid"] || "";
    };
    
    document.site.loadBox();
    
    return document.site;
};
