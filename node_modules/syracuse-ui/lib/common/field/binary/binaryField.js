"use strict";
var helpers = require('syracuse-core/lib/helpers');
var Field = require('syracuse-ui/lib/common/field/field').Field;

var _localize = {
    selectFile: "Select file",
    removeFile: "Remove"
};

function BinaryField(){
}


exports.BinaryField = helpers.defineClass(BinaryField, Field, {
    _saltUrl: function(url){
        if (!url) 
            return null;
        var sep = (url.indexOf("?") >= 0) ? "&" : "?";
        return url + sep + "salt=" + Math.round(Math.random() * 1000);
    },
    initialize: function(){
        this.$item.$imageWidth = this.$item.$imageWidth || "50px";
        this.$item.$imageHeight = this.$item.$imageHeight || "50px";
        this.$dataUrl = this.getDataType().$url;
    },
    _drawFiles: function(files){
        var self = this;
        if (!files.length) {
            this.$$fileName.text("No files selected!");
        }
        else {
            for (var ii = 0; ii < files.length; ii++) {
                var file = files[ii];
                if ((self.acceptFilter && file.type.match(self.acceptFilter)) || !self.acceptFilter) {
                    self.toggleUploadStatus(true); //to improve for multi upload
                    document.controller.upload(file, self.getDataType().$url, self.getArticle(), function(data, response){
                        self._onUploadSuccess(file);
                    }, function(progress, isLoaded){
                        if (!isLoaded) {
                            self.$$progress.text(progress + "%");
                        }
                        else {
                            self.toggleUploadStatus(false);
                        }
                    });
                }
            }
        }
        this.$$fileName.show();
    },
    toggleUploadStatus: function(start){
        this.$$progress.empty()[0].style.display = start ? "" : "none";
        this.upload.toggleClass("s-disabled", start);
        this.$$remove.toggleClass("s-disabled", start);
    },
    bindEvents: function(){
    },
    render: function(){
        if (!this.$item.$isFilterMode) {
            var self = this;
            self.$$anchor = $("<a target='_blank'/>").appendTo(self.$$dataValue);
            var dom = document.createElement("div");
            dom.style.width = self.$item.$imageWidth;
            dom.style.height = self.$item.$imageHeight;
            dom.className = self.$skin + self.classSuffix;
            self.$$drawArea = $(dom).appendTo(self.$$anchor);
            if (self.$isEditMode) {
                self.$$drawArea.bind("drop dragenter dragover", function(event){
                    if (event.type == "drop") {
                        self._drawFiles(event.originalEvent.dataTransfer.files);
                    }
                    event.stopPropagation();
                    event.preventDefault();
                });
                dom = document.createElement("a");
                dom.className = self.$skin + "-binary-upload";
                self.upload = $(dom).appendTo(self.$$dataValue).bind("click", function(){
                    self.$$file.click();
                    return false;
                }).text(_localize.selectFile);
                
                dom = document.createElement("a");
                dom.className = self.$skin + "-binary-remove";
                self.$$remove = $(dom).appendTo(self.$$dataValue).bind("click", function(){
                    document.controller.deleteFile(self.$dataUrl, self.getArticle(), function(data, response){
                        // callback if succes
                        self.setDataValue(null);
                    });
                    return false;
                }).text(_localize.removeFile);
                self.$$file = $("<input type='file' style='width:0px; height:0px; visibility:hidden'/>");
                if (self.acceptFilter) 
                    self.$$file.attr("accept", self.acceptFilter);
                if (self.$item.$enableMultiple) {
                    self.$$file.attr("multiple", true);
                }
                self.$$file.appendTo(self.$$dataValue).bind("change", function(){
                    self._drawFiles(this.files);
                });
                self.$$fileName = $("<div style='display:none'/>").appendTo(self.$$dataValue);
                
                dom = document.createElement("a");
                dom.className = self.$skin + "-img-progress";
                dom.style.display = "none";
                self.$$progress = $(dom).appendTo(self.$$drawArea);
                document.site.setZIndex(self.$$progress);
            }
        }
    },
    releaseMode: function(onDispose){
        if (this.$isEditMode) {
            if (this.upload) {
                this.upload.unbind();
            }
            if (this.$$remove) {
                this.$$remove.unbind();
            }
            if (this.$$file) {
                this.$$file.unbind();
            }
            if (this.$$drawArea) {
                this.$$drawArea.unbind();
            }
        }
        Field.prototype.releaseMode.call(this, onDispose);
    }
});
