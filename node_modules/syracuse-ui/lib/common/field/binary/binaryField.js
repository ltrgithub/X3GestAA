"use strict";
var helpers = require('syracuse-core/lib/helpers');
var Field = require('syracuse-ui/lib/common/field/field').Field;

var _localize = {
    selectFile: "Select file",
    removeFile: "Remove",
    dropSelectFile: "Drop file from explorer or Select it"
};

function BinaryField(){
}


exports.BinaryField = helpers.defineClass(BinaryField, Field, {
    _saltUrl: function(url){
        if (!url) 
            return null;
        var sep = (url.indexOf("?") >= 0) ? "&" : "?";
        return url + sep + "salt=" + Math.round(Math.random() * 1000);
    },
    initialize: function(){
        this.$dataUrl = this.getDataType().$url;
    },
    applyMetaData: function(metaData){
        Field.prototype.applyMetaData.call(this, metaData);
        if (metaData) {
            if (metaData.$isDisabled !== undefined) {
                this._disableButtons(metaData.$isDisabled);
            }
        }
        
    },
    
    _drawFiles: function(files){
        var self = this;
        for (var ii = 0; ii < files.length; ii++) {
            var file = files[ii];
            if ((self.acceptFilter && file.type.match(self.acceptFilter)) || !self.acceptFilter) {
                self._onBeginUpload(file); //to improve for multi upload
                document.controller.upload(file, self.getDataType().$url, self.getArticle(), function(data, response){
                    self._onUploadSuccess(file, data, response);
                }, function(progress, isLoaded){
                    if (!isLoaded) {
                        self._onProgressUpload(file, progress);
                    }
                    else {
                        self._onEndUpload(file);
                    }
                });
            }
        }
        
    },
    _onBeginUpload: function(file){
        var dom = document.createElement("div");
        dom.className = "s-file-progress";
        this.$$progress = $(dom).appendTo(this._$$info);
        dom = document.createElement("div");
        dom.className = "s-file-progress-value";
        $(this.progressValue = dom).appendTo(this.$$progress);
        this._disableButtons(true);
        this._$$legend.text("Upload:" + " " + file.name + " 0%");
    },
    _onProgressUpload: function(file, progress){
        this._$$legend.text("Upload:" + " " + file.name + " " + progress + "%");
        this.progressValue.style.width = progress + "%";
    },
    _onEndUpload: function(file){
        var self = this;
        self._$$legend.text(file.name + " " + "uploaded");
        self._disableButtons(false);
        self._onProgressUpload(file, 100);
        setTimeout(function(){
            if (self.$$progress) {
                self.$$progress.remove();
                delete self.$$progress;
            }
            delete self.progressValue;
            self._$$legend.text(_localize.dropSelectFile);
        }, 1500);
    },
    _disableButtons: function(isDisabled){
        if (this.selectBtn) {
            document.site.disableItem(this.selectBtn, isDisabled);
        }
        if (this.removeBtn) {
            document.site.disableItem(this.removeBtn, isDisabled);
        }
    },
    bindEvents: function(){
    },
    render: function(){
        if (!this.$item.$isFilterMode) {
            if (this.$isEditMode) {
                this._renderEditMode();
            }
        }
    },
    _appendActions: function($skin){
        var self = this;
        var btns = document.createElement("div");
        btns.className = $skin + "-btns";
        self.$$btns = $(btns);
        
        self._$$inputFile = $("<input type='file' style='width:0px; height:0px; visibility:hidden'/>");
        if (self.acceptFilter) {
            self._$$inputFile.attr("accept", self.acceptFilter);
        }
        if (self.$item.$enableMultiple) {
            self._$$inputFile.attr("multiple", true);
        }
        self._$$inputFile.appendTo(self.$$btns).bind("change", function(){
            self._drawFiles(this.files);
        });
        
        self.selectBtn = document.createElement("a");
        self.selectBtn.className = $skin + "-upload";
        $(btns.appendChild(self.selectBtn)).text(_localize.selectFile);
        
        self.removeBtn = document.createElement("a");
        self.removeBtn.className = $skin + "-remove";
        self.removeBtn.style.display = "none";
        $(btns.appendChild(self.removeBtn)).text(_localize.removeFile)
        
        self.$$btns.delegate("a", "click", function(){
            document.site.onBeforClick();
            if (this.className.indexOf("-remove") >= 0) {
                document.controller.deleteFile(self.$dataUrl, self.getArticle(), function(data, response){
                    // callback if succes
                    self.setDataValue(null);
                });
            }
            else {
                self._$$inputFile.click();
            }
            return false;
        }).appendTo(self._$$right);
        
    },
    _renderEditMode: function($skin){
        var self = this;
        var dom = document.createElement("div");
        dom.className = $skin + "-drop-target";
        self.$$dropArea = $(dom).bind("drop dragenter dragover", function(event){
            switch (event.type) {
                case "drop":
                    self._drawFiles(event.originalEvent.dataTransfer.files);
                    break;
                case "dragenter":
                    this.className += " s-file-drop-in";
                    break;
                case "dragleave":
                    this.className = $skin + "-drop-target";
                    break;
            }
            event.stopPropagation();
            event.preventDefault();
            return false;
        }).appendTo(self.$$inputValue);
        
        dom = document.createElement("a");
        dom.className = $skin + "-link";
        dom.setAttribute("disabled", true);
        self.$$anchor = $(dom).prependTo(self.$$dropArea);
        
        dom = document.createElement("div");
        dom.className = $skin + "-right";
        self._$$right = $(dom).appendTo(self.$$dropArea);
        
        
        dom = document.createElement("div");
        dom.className = $skin + "-info";
        self._$$info = $(dom).appendTo(self._$$right);
        
        dom = document.createElement("div");
        dom.className = $skin + "-legend";
        (self._$$legend = $(dom).appendTo(self._$$info).text(_localize.dropSelectFile));
        
        self._appendActions($skin);
    },
    _renderDetailMode: function($skin){
        var dom = document.createElement("a");
        dom.className = $skin + "-link";
        this.$$anchor = $(dom).prependTo(this.$$textValue);
    },
    _onUploadSuccess: function(file, data, response){
        this._setFile(file);
        this.getArticle().applyChange(data, response);
    },
    setDataValue: function(value){
        this.currentValue = value;
        if (!this.$isEditMode && this.currentValue) {
            this._renderDetailMode();
        }
        this._setFile(this.currentValue);
    },
    releaseMode: function(onDispose){
        if (this.$isEditMode) {
            delete this.selectBtn;
            delete this.removeBtn;
            if (this.$$btns) {
                this.$$btns.undelegate();
            }
            if (this._$$inputFile) {
                this._$$inputFile.unbind();
            }
        }
        if (this._image) {
            this._image.onload = null;
        }
        Field.prototype.releaseMode.call(this, onDispose);
    }
});
