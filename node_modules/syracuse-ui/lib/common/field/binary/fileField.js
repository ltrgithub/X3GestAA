"use strict";
var helpers = require('syracuse-core/lib/helpers');
var BinaryField = require('./binaryField').BinaryField;

function FileField(){

}

exports.FileField = helpers.defineClass(FileField, BinaryField, {
    initialize: function(){
        this.classSuffix = "-file-thumb";
        BinaryField.prototype.initialize.call(this);
    },
    _toggleClasses: function(newFileType){
        var self = this;
        if (newFileType) {
            if (!self.$$img) {
                var img = document.createElement("img");
                img.style.display = "none";
                img.onload = function(){
                    img.style.backgroundSize = "contain";
                    img.style.width = self.$item.$imageWidth;
                    img.style.height = self.$item.$imageHeight;
                    img.style.display = "";
                };
                self.$$img = $(img);
            }
            self.$$drawArea.toggleClass("s-file-default", true);
            self.$$drawArea.append(self.$$img);
            var image = newFileType.replace("application/", "");
            image = (image.indexOf("image") >= 0) ? "image" : image.replace("/", "-");
            self.$$img[0].src = document.site.$item.$iconPath + "/fileType/s-file-" + image + ".png";
        }
        else {
            self.$$drawArea.toggleClass("s-file-default", false);
            if (self.$$img) {
                self.$$img.detach();
            }
        }
    },
    _onUploadSuccess: function(file){
        this._toggleClasses(file && file.type);
        this.$$anchor.attr("href", this._getAnchorUrl());
    },
    setDataValue: function(value){
        this._toggleClasses(value && value.$contentType);
        this.currentValue = value;
        this.$$anchor.attr("href", this._getAnchorUrl());
    },
    _getAnchorUrl: function(){
        return this.getArticle().parseExpression(this.$dataUrl);
    },
    dipose: function(){
        if (this.$$img) {
            this.$$img[0].onload = null;
        }
        BinaryField.prototype.dispose.call(this);
    }
});
