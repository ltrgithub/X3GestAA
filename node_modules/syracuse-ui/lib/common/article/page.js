"use strict";
//http://teamtreehouse.com/
var helpers = require('syracuse-core/lib/helpers');
var Article = require('./article').Article;

var _$menus = {
    $search: {
        $linkBox: {
            $excludeBind: ["$create", "$details", "$edit", "$prototype", "$first", "$previous", "$next", "$last"]
        }
    },
    $cube: {
        $mainAction: "$create",
        $linkBox: {
            $excludeBind: ["$details", "$edit", "$prototype", "$first", "$previous", "$next", "$last"]
        }
    },
    $query: {
        $mainAction: "$create",
        $linkBox: {
            $excludeBind: ["$details", "$edit", "$prototype", "$first", "$previous", "$next", "$last"]
        }
    },
    $details: {
        $mainAction: "$edit",
        $linkBox: {
            $excludeBind: ["$draft", "$stylesheet"]
        }
    },
    $edit: {
        $mainAction: "$save",
        $linkBox: {
            $excludeBind: ["$draft", "$stylesheet", "$prototype"]
        }
    }
};

/*****************************************************************************************************************
 **************************************    Basic Page	(CRUD, lookup)  ******************************************
 ******************************************************************************************************************/
function Page(){
}

exports.Page = helpers.defineClass(Page, Article, {
    loadBox: function(initData){
        this.$layoutOptions = document.site.$item.$layoutOptions.page[this.$pageCategory];
        this.$authoringLevel = "article";
        this.externalAdapter = this.$item.externalAdapter || document.site.externalAdapter;
        delete this.$item.externalAdapter;
        Article.prototype.loadBox.call(this, initData);
        if (this.$autoFetch = this.$autoFetch !== false) {
            this.fetch();
        }
    },
    _getFacetMenus: function(){
        return _$menus[this.$facet];
    },
    appendArticleMenus: function(action){
        var $facetMenus = this._getFacetMenus();
        if ($facetMenus) {
            var dom = document.createElement("div");
            dom.className = this.$skin + "-menus";
            this.$$menus = $(dom)[action ? action : "appendTo"](this.$$item);
            document.itemFactory.load(this.$$menus, {
                $mainAction: $facetMenus.$mainAction,
                $bind: "$linkBox",
                $skin: this.$layoutOptions.menus,
                $category: "links",
                $excludeBind: $facetMenus.$linkBox.$excludeBind
            }, this);
        }
    },
    getPage: function(){
        return this;
    },
    fetch: function(options, callback){
        document.controller.sendRequest(this, options, callback);
    }
});
