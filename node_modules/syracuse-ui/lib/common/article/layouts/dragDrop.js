"use strict";
var helpers = require('syracuse-core/lib/helpers');
function DragDrop(){
}

exports.DragDrop = helpers.defineClass(DragDrop, null, {
    start: function(parent, event, source, $$boundary){
        var self = this;
        self.source = source;
        self.boundary = $$boundary.offset();
        self.boundary.right = self.boundary.left + $$boundary.width();
        self.boundary.bottom = self.boundary.top + $$boundary.height();
        $(document).bind("mouseup.syradragdrop", function(){
            self.stop();
            delete document.authoringSite.dragDrop;
        }).bind("mousemove.syradragdrop", function(event){
            self._moveDragImage(event);
            event.preventDefault();
        });
    },
    isDropValidate: function(target){
        return this.source != target && this.source.pound <= target.pound;
    },
    moveDragCue: function($position){
        if (!this.$$dropCue) {
            this.$$dropCue = $("<div class='s-org-drop-cue'/>").appendTo(document.site.$$container)
        }
        this.$$dropCue[0].className = "s-org-drop-cue s-org-drop-cue-" + this.source.$authoringLevel;
        if ($position) {
            this.$$dropCue[0].style.display = "block";
            this.$$dropCue.css($position);
        }
        else {
            this.$$dropCue[0].style.display = "none";
        }
    },
    _moveDragImage: function(event, isValidate){
        var top = Math.max(event.pageY, this.boundary.top);
        var left = Math.max(event.pageX, this.boundary.left);
        top = Math.min(top, this.boundary.bottom);
        left = Math.min(left, this.boundary.right);
        
        var inBoundary = (event.pageX == left && event.pageY == top);
        if (!this.$$dragImage) {
            this.$$dragImage = $("<div class='s-org-drag-image'/>").appendTo(document.site.$$container);
            this.$$dragImage.text(this.source.item.getTitle());
        }
        if (isValidate !== undefined) {
            this.$$dragImage.toggleClass("s-drag-ok", isValidate);
        }
        this.$$dragImage.show().css({
            top: top + 15 + "px",
            left: left + 15 + "px"
        });
    },
    stop: function(){
        document.controller.disposeObject(this);
    },
    dispose: function(){
        $(document).unbind('.syradragdrop');
        if (this.$$dragImage) {
            this.$$dragImage.remove();
        }
        if (this.$$dropCue) {
            this.$$dropCue.remove();
        }
        delete this.source;
    }
});
