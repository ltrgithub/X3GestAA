"use strict";
var helpers = require('syracuse-core/lib/helpers');
var Layout = require('./layout').Layout;
var layoutHelper = require('./layoutHelper');

function SideLayout(){
}

exports.SideLayout = helpers.defineClass(SideLayout, Layout, {
    _wrapInSlot: function(child){
        var $$slot = $("<div/>");
        var domSlot = $$slot[0];
        domSlot.style.display = "inline-block";
        domSlot.style.verticalAlign = "top";
        domSlot.setAttribute("data-s-layout", "side");
        if (this.$layout.$layoutCss) {
            domSlot.className = this.$layout.$layoutCss;
        }
        child.$$container = $$slot.appendTo(this.$$container);
    },
    toggleChildLayoutAuthoring: function(layoutChild, enable){
        Layout.prototype.toggleChildLayoutAuthoring.call(this, layoutChild, enable, "s-author-layout-side");
    },
    onItemMovedOut: function(item){
        var $$prev = item.$$container;
        (item.$$container = $$prev.parent()).append($$prev.children());
        $$prev.remove();
        Layout.prototype.onItemMovedOut.call(this, item);
    },
    calculateDropCuePosition: function(event, target){
        var offset = target.item.$$item.offset();
        target.$drag = {
            left: offset.left,
            top: offset.top,
            width: target.item.$$item.outerWidth(),
            height: target.item.$$item.outerHeight()
        };
        layoutHelper.calculateDropBoundary(target);
        var $position = {
            top: target.$drag.top,
            left: target.$drag.left
        };
        target.$drag.isAfter = event.pageY > target.$dropBoundary.bottom;
        target.$drag.isAfter = event.pageX > target.$dropBoundary.right;
        $position.left = target.$drag.left + (target.$drag.isAfter ? target.$drag.width : 0);
        $position.width = "2px";
        $position.height = target.$drag.height + "px";
        return $position;
    }
});
