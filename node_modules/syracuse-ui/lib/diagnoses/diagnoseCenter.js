"use strict";
var MessageBox = require('syracuse-ui/lib/diagnoses/messageBox').MessageBox;
var pages = require('syracuse-ui/lib/diagnoses/diagnosesPage');
var diagnosesPanel = require('syracuse-ui/lib/diagnoses/diagnosesPanel');

var _messageBox;

exports.showPage = function(errorPage, error, $diagnoses) {
	if (!(pages[errorPage] && pages[errorPage](error, $diagnoses))) {
		exports.showBox({
			$title: syra_local.error_page_default,
			$message: $diagnoses.length == 1 && $diagnoses[0].$message,
			$diagnoses: $diagnoses,
			callback: function() {
				if (syra_site.lastOpenedMainPageUrlSegments) {
					syra_site.history.load(syra_site.lastOpenedMainPageUrlSegments.$url);
				} else {
					syra_menus.click.home();
				}
			}
		});
		return false;
	}
};

exports.showBox = function(options, displayDisabled) {
	_messageBox && _messageBox.dispose();
	options.$type = options.$type || "alert";
	_messageBox = new MessageBox();
	_messageBox.$prototype = {};
	_messageBox.displayDisabled = displayDisabled; // property necessary for htmleditor msgbox
	syra_site.initializeNewItem(_messageBox, options);
	_messageBox.loadBox();
	return _messageBox;
};

exports.getOpenedBox = function() {
	return _messageBox;
};

exports.closeBox = function(closedBy, messageBoxId) {
	if (_messageBox) {
		if (!messageBoxId || messageBoxId == _messageBox.id) {
			_messageBox.close(closedBy);
		}
	}
};

exports.disposeBox = function() {
	_messageBox && _messageBox.dispose();
	_messageBox = null;
};

exports.dispose = function() {
	exports.disposeBox();
};


exports.onBoxItemInOut = function(box, onEnter) {
	diagnosesPanel.onBoxItemInOut(box, onEnter);
};

exports.hasErrors = function(page) {
	return diagnosesPanel.hasErrors(page);
};


exports.ensurePanel = function(page) {
	if (!page.diagnosesPanel) {
		page.diagnosesPanel = new diagnosesPanel.DiagnosesPanel();
		page.diagnosesPanel.appendToPage(page);
	}
	return page.diagnosesPanel;
};