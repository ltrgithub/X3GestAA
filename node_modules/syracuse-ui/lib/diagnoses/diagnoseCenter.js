"use strict";
var MessageBox = require('syracuse-ui/lib/diagnoses/messageBox').MessageBox;
var _diagnosesPanel = require('syracuse-ui/lib/diagnoses/diagnosesPanel');

function _makeTemplate(title, $diagnoses) {
	function _addTextNode(slot, text) {
		var node = slot.appendChild(document.createElement("pre"));
		node.className = "s-err-page-start";
		node.textContent = text;
	}
	var page = document.createElement("div");
	page.className = "s-err-page";
	var container = page.appendChild(document.createElement("div"));
	container.className = "s-err-page-container";
	var banner = container.appendChild(document.createElement("div"));
	banner.className = "s-err-page-banner";
	var textSlot = banner.appendChild(document.createElement("div"));
	textSlot.className = "s-err-page-banner-text";
	var node = textSlot.appendChild(document.createElement("pre"));
	node.className = "s-err-page-banner-title";
	node.textContent = title;
	for (var ii = 0, jj = $diagnoses.length; ii < jj; ii++) {
		node = textSlot.appendChild(document.createElement("pre"));
		node.className = "s-err-page-banner-detail";
		node.textContent = $diagnoses[ii].$message;
	}
	/*var home = text.appendChild(document.createElement("div"));
     _addTextNode(home, "Please ");
     home.appendChild(syra_menus.addTextButton("go back", "s-err-page-start", syraOnClick));
     _addTextNode(home, " or return to ");
     home.appendChild(syra_menus.addTextButton("the home page", "s-err-page-start", syraOnClick));
     _addTextNode(home, " or ");
     home.appendChild(syra_menus.addTextButton("the home page", "the navigation page", syraOnClick));
     */
	return page;
}

var _pages = {
	show403: function(error, $diagnoses) {
		syra_site.body.style.display = "none";
		syra_site.resetMainPage();
		syra_site.body.appendChild(_makeTemplate(syra_local.error_page_403, $diagnoses));
		syra_site.body.style.display = "";
		return true;
	},
	show404: function(error, $diagnoses) {
		syra_site.body.style.display = "none";
		syra_site.resetMainPage();
		syra_site.body.appendChild(_makeTemplate(syra_local.error_page_404, $diagnoses));
		syra_site.body.style.display = "";
		return true;
	},
	show401: function(error, $diagnoses) {
		syra_site.body.style.display = "none";
		syra_site.resetMainPage();
		syra_site.body.appendChild(_makeTemplate(syra_local.error_page_401, $diagnoses));
		syra_site.body.style.display = "";
		return true;
	}
};

var _messageBox;

exports.showPage = function(errorPage, error, $diagnoses) {
	if (!(_pages[errorPage] && _pages[errorPage](error, $diagnoses))) {
		exports.showBox({
			$title: syra_local.error_page_default,
			$message: $diagnoses.length == 1 && $diagnoses[0].$message,
			$diagnoses: $diagnoses,
			callback: function() {
				if (syra_site.lastOpenedMainPageUrlSegments) {
					syra_site.history.load(syra_site.lastOpenedMainPageUrlSegments.$url);
				} else {
					syra_menus.click.navigation();
				}
			}
		});
		return false;
	}
};

exports.showBox = function(options, displayDisabled) {
	_messageBox && _messageBox.dispose();
	options.$type = options.$type || "alert";
	_messageBox = new MessageBox();
	_messageBox.$prototype = {};
	_messageBox.displayDisabled = displayDisabled; // property necessary for htmleditor msgbox
	syra_site.initializeNewItem(_messageBox, options);
	_messageBox.loadBox();
	return _messageBox;
};

exports.getOpenedBox = function() {
	return _messageBox;
};

exports.closeBox = function(closedBy, messageBoxId) {
	if (_messageBox) {
		if (!messageBoxId || messageBoxId == _messageBox.id) {
			_messageBox.close(closedBy);
		}
	}
};

exports.disposeBox = function() {
	_messageBox && _messageBox.dispose();
	_messageBox = null;
};

exports.dispose = function() {
	exports.disposeBox();
};


exports.onBoxItemInOut = function(box, onEnter) {
	_diagnosesPanel.onBoxItemInOut(box, onEnter);
};

exports.hasErrors = function(page) {
	return _diagnosesPanel.hasErrors(page);
};


exports.showDiagnoses = function(message, item, options) {
	if (item && item.isField) {
		item = item.variantItem ? item.variantItem : item;
		message.field = item;
		if (message.field.isDiagnoseDisabled) {
			return;
		}
		item.showDiagnosSlot && item.showDiagnosSlot();
		item = item.boxParent;
		if (message.$diagnoses) {
			if (message.$diagnoses.length == 0) {
				message.$diagnoses = null;
			} else {
				message.field.forceVisibility && message.field.forceVisibility();
			}
		}
	}
	var page = item && item.page;
	if (page && page.diagnosePage) {
		page = page.diagnosePage;
	}
	if (!page || page.disposed) {
		page = syra_site.dialogManager.getTopDialogPage();
		page = page && page._content;
		if (!page || page.disposed) {
			page = syra_site.mainPage;
		}
	}
	if (page && !page.disposed && page != syra_site && page != syra_site.userProfile) {
		if (!page.diagnosesPanel) {
			page.diagnosesPanel = new _diagnosesPanel.DiagnosesPanel();
			page.diagnosesPanel.appendToPage(page);
		}
		page.diagnosesPanel.showDiagnoses(message, page, options);
	} else {
		if (message && message.$diagnoses && message.$diagnoses.length) {
			var onlyOne = message.$diagnoses.length == 1 && message.$diagnoses[0];
			exports.showBox({
				$type: (onlyOne && onlyOne.$severity) || "alert",
				$buttons: "ok",
				$title: syra_local.siteMsgboxTitle,
				$diagnoses: onlyOne ? null : message.$diagnoses,
				$message: (onlyOne && onlyOne.$message) || syra_local.userProfile_siteMsgboxMsg,
				$origin: onlyOne ? onlyOne.$origin : "",
				$useLinkAsOk: (page && page == syra_site.userProfile) ? onlyOne && onlyOne.$links : null //temp hack
			});
		}
	}
};