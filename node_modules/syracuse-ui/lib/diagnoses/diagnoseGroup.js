"use strict";
var helpers = require('syracuse-core/lib/helpers');

function DiagnoseGroup(){

}

exports.DiagnoseGroup = helpers.defineClass(DiagnoseGroup, null, {
    create: function(severity, viewer){
        this._groupItem = document.createElement("div");
        this._groupItem.className = 's-diag-view-group-' + (this.severity = severity);
        this.$$group = $(this._groupItem);
        this.viewer = viewer;
    },
    empty: function(field){
        if (field) {
            this.$$group.children().children().children("a[data-s-menu=" + field.id + "]").parent().parent().remove();
        }
        else {
            this.$$group.empty();
        }
    },
    drawDiagnose: function($diagnose, options){
        var diagMsg = document.createElement("div");
        diagMsg.className = "s-diag-view-msg s-diag-view-msg-" + this.severity;
        
        var label = document.createElement("label");
        label.className = "s-diag-view-msg-label";
        var $$label = $(label);
        $$label.append(document.site.formatHTMLMessage($diagnose.message));
        diagMsg.appendChild(label);
        
        // add field link if any
        if (options) {
            $$label.prepend(options.$$fieldLink);
            // push field and diagMsg into viewer _fieldDiagnoses array for focus purposes
            if (this.viewer._fieldDiagnoses) {
                this.viewer._fieldDiagnoses.push({
                    label: label,
                    field: options.field
                });
            }
        }
        // add expand button if needed (line break or string max length)
        if ($$label.find("br")[0]) {//$diagnose.message.indexOf("\n") > 0
            var expandedText = label.innerHTML.substr(label.innerHTML.indexOf("<br>") + "<br>".length);
            this._wrapTextToHide(expandedText, label, diagMsg);
        }
        else {
            var diagMaxLength = 130;
            if (label.textContent.length > diagMaxLength) {
                // getting understandable text from 100 first characters
                var maxLengthText = label.textContent.substr(0, diagMaxLength);
                var maxLengthTextWords = maxLengthText.split(/\s/);
                maxLengthTextWords.splice(maxLengthTextWords.length - 1);
                maxLengthText = maxLengthTextWords.join(" ");
                
                // wrap text to hide
                var expandedText = label.innerHTML.substr(label.innerHTML.lastIndexOf(maxLengthText) + maxLengthText.length);
                this._wrapTextToHide(expandedText, label, diagMsg, true);
            }
        }
        
        // close button
        /*var html = document.createElement("a");
         html.className = "s-diag-view-msg-close";
         html.setAttribute("data-s-picker","close-msg");
         diagMsg.appendChild(html);*/
        // add links if any
        if ($diagnose.$links || $diagnose.$actions) {
            var container = document.createElement("div");
            container.className = "s-diag-view-links-bar-" + $diagnose.severity;
            this.viewer.drawLinks(diagMsg.appendChild(container), $diagnose, this.viewer.page, diagMsg);
        }
        
        diagMsg.style.display = "none";
        this._groupItem.appendChild(diagMsg);
    },
    _wrapTextToHide: function(textToHide, label, diagMsg, lineBreak){
        if (textToHide.match(/\S/g)) {
            label.innerHTML = label.innerHTML.replace(textToHide, (lineBreak ? "<br>" : "") + "<span class='s-diag-view-msg-expanded-text'>" + textToHide + "</span>");
            var expander = document.createElement("a");
            expander.className = "s-diag-view-msg-expand";
            expander.setAttribute("data-s-picker", "expand");
            diagMsg.appendChild(expander);
        }
    },
    dispose: function(){
        this.viewer = this.$$group = this._groupItem = null;
    }
});
