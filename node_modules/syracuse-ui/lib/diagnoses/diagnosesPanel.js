"use strict";
var helpers = require('syracuse-core/lib/helpers');
var DiagnoseMessagePopup = require('syracuse-ui/lib/diagnoses/diagnoseMessagePopup').DiagnoseMessagePopup;

var severities = ["fatal", "error", "warning", "info", "success"];

var _diagnoses = [];
var _diagnoseFocused;
var _fieldsMap = {};

function _appendTopLabel(panel, diagInfo) {
	diagInfo.topLabel = document.createElement("label");
	diagInfo.topLabel.className = "s-diagnose-msg-label-hidden";
	diagInfo.topLabel.innerHTML = diagInfo.$diagnose.$message;

	var msg = diagInfo.msgItem = document.createElement("div");
	msg.className = "s-diagnose-msg s-diagnose-msg-" + diagInfo.$diagnose.$severity;
	msg.setAttribute("data-s-severity", diagInfo.$diagnose.$severity);
	msg.setAttribute("data-s-picker", "diag-picker");
	msg.syraDiagPicker = "s-diagnose-msg";
	msg.appendChild(diagInfo.topLabel);
	diagInfo.msgItem = msg;

	if (diagInfo.$diagnose.$links || diagInfo.$diagnose.$actions) {
		var slot = document.createElement("div");
		slot.className = "s-diagnose-links-bar-" + diagInfo.$diagnose.$severity;
		_drawLinks(panel, diagInfo, diagInfo.msgItem.appendChild(slot), diagInfo.$diagnose, diagInfo.page);
	}
	diagInfo.$diagnose.$stackTrace = diagInfo.$diagnose.$stackTrace || diagInfo.$diagnose.stackTrace;
	if (diagInfo.$diagnose.$stackTrace) {
		diagInfo.$diagnose.$stackTrace = document.site.formatHTMLText(diagInfo.$diagnose.$stackTrace);
		diagInfo.stackTrace = document.createElement("div");
		diagInfo.stackTrace.className = "s-diagnose-stacktrace";
		diagInfo.stackTrace.innerHTML = diagInfo.$diagnose.$stackTrace = document.site.formatHTMLText(diagInfo.$diagnose.$stackTrace);
		diagInfo.stackTrace.style.display = "none";
		msg.appendChild(diagInfo.stackTrace);
	}
	panel.body.insertBefore(msg, panel.body.firstChild);
}

function _drawLinks(panel, diagInfo, slot, message, page) {
	page = page || panel.page;
	if (!diagInfo._menus || diagInfo._menus.isDisposed) {
		diagInfo._menus = page.loadNewItem(slot, {
			$isAuthoringEnabled: false,
			$category: "menus",
			$isOwner: true,
			$skin: "s-diagnose-links"
		});
		diagInfo._menus.isDiagnoseMenus = true;
	}
	diagInfo._menus.ensurePrivateMenus(message);
}

function _appendFieldMessage(field, $diagnose) {
	var label = document.createElement("label");
	label.className = "s-field-diagnose-msg-" + $diagnose.$severity;
	label.innerHTML = $diagnose.$message;
	field.diagnoseFieldSlot.appendChild(label);
}

function _appendFieldPopup(field, diags) {
	if (diags.length) {
		field.diagnoseFieldSlot = document.createElement("div");
		field.diagnoseFieldSlot.className = "s-field-diagnose-popup";
		for (var ii = 0, jj = diags.length; ii < jj; ii++) {
			_appendFieldMessage(field, diags[ii].$diagnose);
		}
		field.popupDiagnoseDiag = document.site.dialogManager.openPopup(field.page, {
			content: {},
			slot: field.diagnoseFieldSlot,
			position: {
				my: "left top",
				at: "left bottom",
				of: $(field.domItem)
			},
			onClose: function() {
				document.site.dom.removeChild(field.diagnoseFieldSlot);
				field.diagnoseFieldSlot = field.popupDiagnoseDiag = null;
			}
		});
	}
}

function _appendBoxPopup(box) {
	if (box.severitiesCount) {
		box.diagnosePopupSlot = document.createElement("div");
		box.diagnosePopupSlot.className = "s-field-diagnose-popup";
		for (var ii = 0, jj = severities.length; ii < jj; ii++) {
			var severity = severities[ii];
			if (box.severitiesCount[severity]) {
				var label = document.createElement("label");
				label.className = "s-field-diagnose-msg-" + severity;
				label.textContent = box.severitiesCount[severity] + " " + box.localize["box_" + severity];
				box.diagnosePopupSlot.appendChild(label);
			}
		}
		box.diagnosePopupDiag = document.site.dialogManager.openPopup(box.page, {
			content: {},
			slot: box.diagnosePopupSlot,
			position: {
				my: "right top",
				at: "right bottom",
				of: $(box.pickers.items.diagnoses)
			},
			onClose: function() {
				document.site.dom.removeChild(box.diagnosePopupSlot);
				box.diagnosePopupSlot = box.diagnosePopupDiag = null;
			}
		});
	}
}

exports.onBoxItemEnterLeave = function(box, onEnter) {
	if (box.severitiesCount) {
		if (onEnter) {
			if (!box.diagnosePopupSlot) {
				_appendBoxPopup(box);
			}
		} else {
			if (box.diagnosePopupDiag) {
				box.diagnosePopupDiag.close();
			}
		}
	}
};


function _updateBoxSeverity(box, update, add, severity) {
	if (add) {
		box.severitiesCount[severity] = (box.severitiesCount[severity] || 0) + update[severity];
	} else {
		box.severitiesCount[severity] -= update.fatal;
	}
}

function _refreshBoxDiagnoseIcon(box, update, add) {
	while (box) {
		box.severitiesCount = box.severitiesCount || {};
		if (update.fatal) {
			_updateBoxSeverity(box, update, add, "fatal");
		}
		if (update.error) {
			_updateBoxSeverity(box, update, add, "error");
		}
		if (update.warning) {
			_updateBoxSeverity(box, update, add, "warning");
		}
		if (update.info) {
			_updateBoxSeverity(box, update, add, "info");
		}
		var prioritySeverity;
		for (var ii = 0, jj = severities.length; ii < jj; ii++) {
			if (box.severitiesCount[severities[ii]]) {
				prioritySeverity = severities[ii];
				break;
			}
		}
		if (box.tabTitleHead || (box.header && box.$item.$isBoxCollapsable)) {
			if (add && box.prioritySeverity != prioritySeverity) {
				box.togglePicker("diagnoses", true);
				var picker = box.pickers.items.diagnoses;
				picker.className = "s-box-diagnose-" + prioritySeverity;
				picker.title = "";
				picker.setAttribute("data-s-inout", picker.syrainout = picker.syraBoxId = box.id);
			}
			box.prioritySeverity = prioritySeverity;
			if (!box.prioritySeverity) {
				box.togglePicker("diagnoses", false);
			}

		}
		box = box.boxParent;
	}
}

exports.hasErrors = function(page) {
	for (var ii = _diagnoses.length - 1; ii >= 0; ii--) {
		var diag = _diagnoses[ii];
		if (diag.page == page) {
			switch (diag.$diagnose.$severity) {
				case "fatal":
				case "error":
				case "warning":
					return true;
			}
		}
	}
	return false;
};

function _cleanField(panel, field, diags) {
	field.diagnoseFieldSlot.parentNode.removeChild(field.diagnoseFieldSlot);
	if (field.diagnoseFlag) {
		field.removeFromPickerBox(field.diagnoseFlag);
		delete field.diagnoseFlag;
	}
	delete field.diagnoseFieldSlot;

	var inputCss = field.input && field.input.className || "";
	var css = field._dataValue.className;
	var severities = {};
	for (var ii = diags.length - 1; ii >= 0; ii--) {
		var diag = diags[ii];
		if (diag.msgItem && diag.msgItem.parentNode) {
			panel.body.removeChild(diag.msgItem);
			if (diag == _diagnoseFocused) {
				_diagnoseFocused = null;
			}
			delete diag.msgItem;
		}
		severities[diag.$diagnose.$severity] = (severities[diag.$diagnose.$severity] || 0) + 1;
		_diagnoses.splice(_diagnoses.indexOf(diag), 1);
		inputCss = inputCss.replace("s-" + diag.$diagnose.$severity, "");
		css = css.replace("s-" + diag.$diagnose.$severity, "");
	}
	if (field.input) {
		field.input.className = inputCss;
	}
	field._dataValue.className = css;
	_refreshBoxDiagnoseIcon(field.boxParent, severities, false);
}

function _showFieldMessage(panel, message) {
	var field = message.field;
	if (field) {
		field.isDiagnosePopup = field.$item.$inplace && !field.$item.$isDiagnoseInline;
		if (!field.isDiagnoseDisabled && message.$diagnoses && message.$diagnoses.length > 0) {
			if (field.isDiagnosePopup) {
				if (!field.diagnoseFlag && !document.site.isTabletDevice) {
					field.diagnoseFlag = document.createElement("a");
					field.diagnoseFlag.className = "s-field-diagnose-flag-" + message.$diagnoses[0].$severity;
					field.appendToPickerBox(field.diagnoseFlag);
				}
			} else {
				field.diagnoseFieldSlot = document.createElement("div");
				field.diagnoseFieldSlot.className = "s-field-diagnose";
			}
			_fieldsMap[field.id] = [];
			var severities = {};
			for (var ii = 0, jj = message.$diagnoses.length; ii < jj; ii++) {
				var diagInfo = {
					page: field.articleParent.page,
					article: field.articleParent,
					field: field,
					$diagnose: message.$diagnoses[ii]
				};
				_fieldsMap[field.id].push(diagInfo);
				_diagnoses.push(diagInfo);

				var topLink = document.createElement("a");
				topLink.className = "s-diagnose-msg-link";
				topLink.setAttribute("data-s-picker", "diag-picker");
				topLink.syraDiagPicker = "field-msg";
				field.articleParent.setArticleId(topLink);
				topLink.setAttribute("data-s-diag-field", field.id);

				if (field.isDiagnosePopup) {
					var text = "";
					if (field.articleParent.getRecordIndex) {
						text = " (line " + field.articleParent.getRecordIndex() + " )";
					}
					topLink.textContent = (field.getTitle() || field.$field.$title || "") + text;
				} else {
					// title for single record collections if not in field data
					if (!field.getTitle() && !field.$field.$title && field.arrayLevel && field.arrayLevel == "cell") {
						var parent = field.articleParent.articleParent;
						var title = parent.titleText ? parent.titleText : (parent.$field ? parent.$field.$title : title);
						topLink.textContent = title + ":";
					} else {
						topLink.textContent = (field.getTitle() || field.$field.$title || field.$item.$bind) + ":";
					}
					_appendFieldMessage(field, diagInfo.$diagnose);
				}
				_appendTopLabel(panel, diagInfo);
				severities[diagInfo.$diagnose.$severity] = (severities[diagInfo.$diagnose.$severity] || 0) + 1;
				if (field.$item.$isExpressionChild) {
					var dom = document.createElement("span");
					dom.setAttribute("data-s-menu", field.id);
					dom.textContent = topLink.textContent.toUpperCase() + " ";
					diagInfo.topLabel.insertBefore(dom, diagInfo.topLabel.firstChild);
					if (field.diagnoseFieldSlot) {
						field.diagnoseFieldSlot.style.display = "none";
					}
				} else {
					diagInfo.topLabel.insertBefore(topLink, diagInfo.topLabel.firstChild);
				}
			}
			_refreshBoxDiagnoseIcon(field.boxParent, severities, true);
			if (field.input) {
				document.site.dom.toggleClass(field.input, "s-" + diagInfo.$diagnose.$severity, true);
			}
			document.site.dom.toggleClass(field._dataValue, "s-" + diagInfo.$diagnose.$severity, true);
			if (field.diagnoseFieldSlot) {
				field._core.appendChild(field.diagnoseFieldSlot);
			}
		}
	}
}

function _showMessage(diagInfo, show) {
	diagInfo.msgItem.style.display = show ? "" : "none";
	if (show && !diagInfo.isDetailChecked) {
		diagInfo.isDetailChecked = true;
		if (diagInfo.$diagnose.$stackTrace || diagInfo.topLabel.scrollHeight > diagInfo.topLabel.clientHeight) {
			diagInfo.detailLink = document.createElement("a");
			diagInfo.detailLink.className = "s-diagnose-msg-more";
			diagInfo.detailLink.setAttribute("data-s-picker", "diag-picker");
			diagInfo.detailLink.syraDiagPicker = "detail";
			diagInfo.detailLink.textContent = document.site.localize.diag_stacktrace;
			diagInfo.msgItem.appendChild(diagInfo.detailLink);
		}
	}
}

exports.onFieldItemEnterLeave = function(field, onEnter) {
	var diags = _fieldsMap[field.id];
	if (field.isDiagnosePopup && diags) {
		if (onEnter) {
			if (!field.diagnoseFieldSlot) {
				_appendFieldPopup(field, diags);
			}
		} else {
			if (field.popupDiagnoseDiag) {
				field.popupDiagnoseDiag.close();
			}
		}
	}
};

function DiagnosesPanel() {}

exports.DiagnosesPanel = helpers.defineClass(DiagnosesPanel, null, {
	appendToPage: function(page) {
		this.page = page;
		this.domItem = document.createElement("div");
		this.domItem.className = "s-diagnose";
		this.domItem.style.display = "none";
		this.page.diagnoseSlot.appendChild(this.domItem);
	},
	_initialize: function() {
		this.localize = document.site.localize;
		this._core = document.createElement("div");
		this._core.className = "s-diagnose-core";
		this.domItem.appendChild(this._core);

		this._close = document.createElement("a");
		this._close.className = "s-diagnose-close";
		this._close.setAttribute("data-s-picker", "diag-picker");
		this._close.syraDiagPicker = "diag-close";
		this._core.appendChild(this._close);

		this._content = document.createElement("div");
		this._content.className = "s-diagnose-content";
		this._core.appendChild(this._content);

		this.body = document.createElement("div");
		this.body.className = "s-diagnose-msg-list";

		this._content.appendChild(this.body);

		var diagNavBar = document.createElement("div");
		diagNavBar.className = "s-diagnose-navigation-bar";
		this._content.appendChild(diagNavBar);

		this._next = document.createElement("a");
		this._next.className = "s-diagnose-nav-next";
		this._next.setAttribute("data-s-picker", "diag-picker");
		this._next.syraDiagPicker = "next";
		this._next.style.display = "none";
		this._next.title = this.localize.diag_next_tooltip;
		this._next.textContent = this.localize.diag_next;
		diagNavBar.appendChild(this._next);

		// links bar (_core child)
		this._diagViewLinks = document.createElement("div");
		this._diagViewLinks.className = "s-diagnose-links-bar";
		this._core.appendChild(this._diagViewLinks);

		this._expand = document.createElement("a");
		this._expand.className = "s-diagnose-expander";
		this._expand.setAttribute("data-s-picker", "diag-picker");
		this._expand.syraDiagPicker = "diag-expand";
		this._expand.style.display = "none";
		this.isCollapsed = true;
		this._core.appendChild(this._expand);

		this._opener = document.createElement("a");
		this._opener.className = "s-diagnose-opener";
		this._opener.setAttribute("data-s-picker", "diag-picker");
		this._opener.syraDiagPicker = "diag-opener";
		this._opener.textContent = this.localize.diag_opener;
		this._opener.style.display = "none";

		var html = document.createElement("div");
		html.className = "s-diagnose-open";
		html.appendChild(this._opener);
		this.domItem.appendChild(html);
	},
	clean: function() {
		if (this.domItem) {
			this.domItem.style.display = "none";

			if (this._menus && !this._menus.isDisposed) {
				this._menus.unload();
			}
			delete this._menus;
			_diagnoseFocused = null;
			_diagnoses = [];
			document.site.dom.empty(this.body);
		}
	},
	onMessageClick: function(messageLink) {
		var self = this;
		var id = messageLink.getAttribute("data-s-diagmsg-popup");
		if (id) {
			if (self.diagPopups && self.diagPopups[id]) {
				self.diagPopups[id].close();
			}
		} else {
			var label = messageLink.children[0];
			if (messageLink.children[1] && messageLink.children[1].className == "s-diagnose-msg-hide") {
				var msgPopup = new DiagnoseMessagePopup();
				msgPopup.loadBox(label.innerHTML, messageLink.getAttribute("data-s-severity"));
				var diagPopup = document.site.dialogManager.openPopup(self.page, {
					content: msgPopup,
					slot: msgPopup.domItem,
					position: {
						my: "left top",
						at: "left bottom",
						of: $(label)
					},
					onClose: function() {
						msgPopup.dispose();
						messageLink.removeAttribute("data-s-diagmsg-popup");
						self.diagPopups[this.id] = null;
					},
					$isAutoClose: false
				});
				diagPopup.appendCloseButton(msgPopup.header);
				messageLink.setAttribute("data-s-diagmsg-popup", diagPopup.id);
				self.diagPopups = self.diagPopups || {};
				self.diagPopups[diagPopup.id] = diagPopup;
			}
		}
	},
	onClickPicker: function(picker) {
		switch (picker.syraDiagPicker) {
			case "diag-expand":
				this.isCollapsed = !this.isCollapsed;
				this._setExpandState();
				this.page.resizeArticle();
				break;
			case "field-msg":
				var article = document.site.itemHelper.findArticle(picker);
				if (article) {
					var fieldId = picker.getAttribute("data-s-diag-field");
					var field = article.idMap[fieldId];
					if (field) {
						if (field.focus) {
							field.focus();
						}
						this.onNavigationClick(0, field);
					}
				}
				break;
			case "diag-close":
				this.domItem.style.display = "none";
				if (_diagnoseFocused && !_diagnoseFocused.field) {
					_diagnoseFocused = null;
				}
				if (this.body) {
					document.site.dom.empty(this.body);
					if (_diagnoses.length > 0) {
						var ii = 0;
						while (ii < _diagnoses.length) {
							if (!_diagnoses[ii].field) {
								if (_diagnoses[ii] == _diagnoseFocused) {
									_diagnoseFocused = null;
								}
								delete _diagnoses[ii].msgItem;
								_diagnoses.splice(ii, 1);
							} else {
								ii++;
							}
						}
					} else {
						this.clean();
					}
				}
				this.page.resizeArticle();
				break;
			case "diag-opener":
				if (this._opener && this._core) {
					this._core.style.display = "inline-block";
					this._opener.style.display = "none";
					this.page.resizeArticle();
				}
				break;
			case "detail":
				for (var ii = 0, jj = _diagnoses.length; ii < jj; ii++) {
					var diagInfo = _diagnoses[ii];
					if (diagInfo.detailLink == picker) {
						diagInfo.isExpanded = !diagInfo.isExpanded;
						diagInfo.topLabel.className = diagInfo.isExpanded ? "s-diagnose-msg-label" : "s-diagnose-msg-label-hidden";
						if (diagInfo.stackTrace) {
							diagInfo.stackTrace.style.display = diagInfo.isExpanded ? "" : "none";
						}
						break;
					}
				}
				this.page.resizeArticle();
				break;
			case "next":
				this.onNavigationClick(picker);
				break;
			case "s-diagnose-msg":
				this.onMessageClick(picker);
				break;
		}
	},
	onNavigationClick: function(navLink, field) {
		if (_diagnoses && _diagnoses.length > 0) {
			var currentDiagnose = _diagnoseFocused;
			if (!navLink && field && _fieldsMap[field.id]) {
				currentDiagnose = _fieldsMap[field.id][0];
			} else {
				var first, last, next;
				for (var ii = 0, jj = _diagnoses.length; ii < jj; ii++) {
					var diagnose = _diagnoses[ii];
					if (diagnose.field) {
						last = diagnose;
						if (first == undefined) {
							first = last;
						}
						if (_diagnoseFocused && _diagnoseFocused.field == diagnose.field) {
							next = true;
						} else {
							if (next === true) {
								next = last;
							}
						}
					}
				}
				if (_diagnoseFocused) {
					currentDiagnose = _diagnoseFocused == last ? first : ((next === true) ? first : next);
				} else {
					currentDiagnose = first;
				}
				if (currentDiagnose.field.focus) {
					currentDiagnose.field.focus();
				}
			}
			if (_diagnoseFocused) {
				document.site.dom.toggleClass(_diagnoseFocused.topLabel, "s-diagnose-msg-focus", false);
			}
			document.site.dom.toggleClass((_diagnoseFocused = currentDiagnose).topLabel, "s-diagnose-msg-focus", true);
			if (_diagnoseFocused.msgItem) {
				document.site.scrollToItem(_diagnoseFocused.msgItem, this._content, true);
			}

			this._setExpandState();
		}
	},
	_setExpandState: function() {
		var count = _diagnoses.length;
		for (var ii = 0; ii < count; ii++) {
			_showMessage(_diagnoses[ii], !this.isCollapsed);
		}
		this._expand.style.display = (count == 1) ? "none" : "";
		if (this.isCollapsed) {
			var diagDisplay = _diagnoseFocused || _diagnoses[count - 1];
			if (diagDisplay) {
				_showMessage(diagDisplay, true);
			}
			this._expand.textContent = (count - 1) + this.localize.diag_expand;
		}
		this._expand.textContent = this.isCollapsed ? ((count - 1) + " " + this.localize.diag_expand) : this.localize.diag_collapse;
	},
	showDiagnoses: function(message, page, options) {
		if (!message || (!message.$bind && !message.field && !message.$diagnoses)) {
			if (this._core) {
				this.clean();
			}
		} else {
			if (message.field && message.field.$item.$isExpressionChild) {
				return;
			}
			if (!this._core) {
				this._initialize();
			}
			if (message.$links || message.$actions) {
				_drawLinks(this, this, this._diagViewLinks, message, page);
			}
			if (message.field && message.field.diagnoseFieldSlot) {
				_cleanField(this, message.field, _fieldsMap[message.field.id]);
				delete _fieldsMap[message.field.id];
			}
			if (message.$diagnoses) {
				for (var ii = 0, jj = message.$diagnoses.length; ii < jj; ii++) {
					var $diagnose = message.$diagnoses[ii];
					$diagnose.$severity = $diagnose.$severity || $diagnose.severity || "error";
					$diagnose.$message = $diagnose.$message || $diagnose.message;
					if ($diagnose.$message) {
						$diagnose.$message = document.site.formatHTMLText($diagnose.$message);
					}
				}
			}
			if (message.field || message.$bind) {
				_showFieldMessage(this, message);
			} else {
				if (message.$diagnoses && message.$diagnoses.length > 0) {
					for (var ii = 0, jj = message.$diagnoses.length; ii < jj; ii++) {
						var diagInfo = {
							page: page,
							article: page,
							$diagnose: $diagnose
						};
						_appendTopLabel(this, diagInfo);
						_diagnoses.push(diagInfo);
					}
				}
			}
			if (!options || !options.noViewer) {
				this.autoHide = message.autoHide;
				this.refresh();
			}
		}
	},
	refresh: function() {
		if ((this.page == document.site) || (this.page.isPageLoaded && !this.page._isDataChanging)) {
			if (this._next && _diagnoses.length > 0) {
				this._next.style.display = Object.keys(_fieldsMap).length ? "" : "none";
				this._core.style.display = "inline-block";
				this.domItem.style.display = "";
				this._close.style.zIndex = this.domItem.style.zIndex = document.site.dom.getTopZIndex() - 1;
				this._setExpandState();
				this._opener.style.display = "none";
			} else {
				this.domItem.style.display = "none";
			}
			if (this.autoHide) {
				this.triggerAutoHide(this.autoHide);
				delete this.autoHide;
			}
		}
	},
	triggerAutoHide: function(autoHide) {
		var self = this;
		setTimeout(function() {
			self.clean();
			if (self.page) {
				self.page.resizeArticle();
			}
		}, autoHide.autoHideTimeOut || 4000);
	},
	dispose: function() {
		if (_diagnoses.length > 0) {
			var ii = 0;
			while (ii < _diagnoses.length) {
				if (_diagnoses[ii] && _diagnoses[ii].page == this.page) {
					if (_diagnoses[ii] == _diagnoseFocused) {
						_diagnoseFocused = null;
					}
					delete _diagnoses[ii].msgItem;
					_diagnoses.splice(ii, 1);
				} else {
					ii++;
				}
			}
		}
		this._close = this._content = this._core = this._diagViewLinks = this._expand = null;
		this.domItem = this._next = this._opener = null;
		this.localize = this.page = this.body = null;
	}
});