"use strict";
var helpers = require('syracuse-core/lib/helpers');
var DiagnoseMessagePopup = require('syracuse-ui/lib/diagnoses/diagnoseMessagePopup').DiagnoseMessagePopup;

var severities = ["fatal", "error", "warning", "info", "success"];

var _diagnoses = [];
var _diagnoseFocused;

function _appendTopLabel(panel, diagInfo) {
	diagInfo.topLabel = document.createElement("label");
	diagInfo.topLabel.className = "s-diagnose-msg-label-hidden";
	diagInfo.topLabel.textContent = diagInfo.$diagnose.$message;

	var severity = diagInfo.$diagnose.$severity;
	var msg = diagInfo.msgItem = document.createElement("div");
	msg.className = "s-diagnose-msg s-diagnose-" + severity;
	msg.setAttribute("data-s-severity", severity);
	msg.syraOnClick = "onMessageClick";
	msg.appendChild(syra_menus.addFontIconFlag("s-diag-msg-flag s-diag-" + severity, severity == "info" ? severity : "diagnose"));

	msg.appendChild(diagInfo.topLabel);
	diagInfo.msgItem = msg;

	if (diagInfo.$diagnose.$links || diagInfo.$diagnose.$actions) {
		var slot = document.createElement("div");
		slot.className = "s-diagnose-links " + severity;
		_drawLinks(panel, diagInfo, diagInfo.msgItem.appendChild(slot), diagInfo.$diagnose, diagInfo.page);
	}
	diagInfo.$diagnose.$stackTrace = diagInfo.$diagnose.$stackTrace || diagInfo.$diagnose.stackTrace;
	if (diagInfo.$diagnose.$stackTrace) {
		diagInfo.$diagnose.$stackTrace = syra_site.dom.formatHTMLText(diagInfo.$diagnose.$stackTrace, true);
		diagInfo.stackTrace = document.createElement("div");
		diagInfo.stackTrace.className = "s-diagnose-stacktrace";
		diagInfo.stackTrace.innerHTML = diagInfo.$diagnose.$stackTrace = syra_site.dom.formatHTMLText(diagInfo.$diagnose.$stackTrace, true);
		diagInfo.stackTrace.style.display = "none";
		msg.appendChild(diagInfo.stackTrace);
	}
	panel.body.appendChild(msg);
}

function _drawLinks(panel, diagInfo, slot, message, page) {
	message.$diagnosePanelId = panel.id;
	message.$diagnosesSlot = slot;
	syra_menus.setMenus(page || panel.page, message, slot);
	delete message.$diagnosePanelId;
	delete message.$diagnosesSlot;
}

function _appendBoxPopup(box) {
	if (box.severitiesCount) {
		box.diagnosePopupSlot = document.createElement("div");
		box.diagnosePopupSlot.className = "s-field-diagnose-popup";
		for (var ii = 0, jj = severities.length; ii < jj; ii++) {
			var severity = severities[ii];
			if (box.severitiesCount[severity]) {
				syra_diagnose.addIconText(box.diagnosePopupSlot, box.severitiesCount[severity] + " " + syra_local["box_" + severity], severity);
			}
		}
		box.diagnosePopupDiag = syra_site.dialogManager.openPopup(box.page, {
			content: {},
			slot: box.diagnosePopupSlot,
			position: {
				my: "right top",
				at: "right bottom",
				of: $(box.btns.items.diagnoses)
			},
			onClose: function() {
				syra_site.dom.removeChild(box.diagnosePopupSlot);
				box.diagnosePopupSlot = box.diagnosePopupDiag = null;
			}
		});
	}
}

exports.onBoxItemInOut = function(box, onEnter) {
	if (box.severitiesCount) {
		if (onEnter) {
			if (!box.diagnosePopupSlot) {
				_appendBoxPopup(box);
			}
		} else {
			if (box.diagnosePopupDiag) {
				box.diagnosePopupDiag.close();
			}
		}
	}
};

exports.hasErrors = function(page) {
	for (var ii = _diagnoses.length - 1; ii >= 0; ii--) {
		var diag = _diagnoses[ii];
		if (diag.page == page) {
			switch (diag.$diagnose.$severity) {
				case "fatal":
				case "error":
				case "warning":
					return true;
			}
		}
	}
	return false;
};

var _field = {
	_addMessage: function(field, $diagnose) {
		$diagnose.$message && syra_diagnose.addIconText(field.diagsSlot, $diagnose.$message, $diagnose.$severity);
	},
	show: function(panel, message) {
		var field = message.field;
		if (field) {
			field.isDiagnosePopup = field.$item.$inplace && !field.$item.$isDiagnoseInline;
			if (!field.isDiagnoseDisabled && message.$diagnoses && message.$diagnoses.length > 0) {
				if (field.isDiagnosePopup) {
					if (!field.mnPickers.diagnose && !syra_site.isTabletDevice) {
						var severity = message.$diagnoses[0].$severity;
						var css = field.$isEditMode ? "s-diag-inline-edit" : "s-diag-inline";
						field.mnPickers.diagnose = syra_menus.addFontIconFlag(css + " s-diag-" + severity, severity == "info" ? severity : "diagnose");
						field._dataValue.appendChild(field.mnPickers.diagnose);
					}
				} else {
					field.diagsSlot = document.createElement("div");
					field.diagsSlot.className = "s-field-diagnose";
				}
				panel._fieldsMap[field.id] = [];
				var severities = {};
				for (var ii = 0, jj = message.$diagnoses.length; ii < jj; ii++) {
					var diagInfo = {
						page: field.articleParent.page,
						article: field.articleParent,
						field: field,
						$diagnose: message.$diagnoses[ii]
					};
					panel._fieldsMap[field.id].push(diagInfo);
					_diagnoses.push(diagInfo);

					var topLinkText;
					if (field.isDiagnosePopup) {
						var text = "";
						if (field.articleParent.getRecordIndex) {
							text = " (line " + (field.articleParent.getRecordIndex() + 1) + " )";
						}
						topLinkText = (field.getTitle() || field.$field.$title || "") + text;
					} else {
						// title for single record collections if not in field data
						if (!field.getTitle() && !field.$field.$title && field.arrayLevel && field.arrayLevel == "cell") {
							var parent = field.articleParent.articleParent;
							var title = parent.titleLabel ? parent.titleLabel : (parent.$field ? parent.$field.$title : title);
							topLinkText = title + ":";
						} else {
							topLinkText = (field.getTitle() || field.$field.$title || field.$item.$bind) + ":";
						}
						_field._addMessage(field, diagInfo.$diagnose);
					}

					var topBtn = syra_menus.addTextButton(topLinkText, "s-diagnose-msg-link", "goToField");
					field.articleParent.setArticleId(topBtn);
					topBtn.syraFieldId = field.id;

					_appendTopLabel(panel, diagInfo);
					severities[diagInfo.$diagnose.$severity] = (severities[diagInfo.$diagnose.$severity] || 0) + 1;
					if (field.$item.$isExpressionChild) {
						var dom = document.createElement("span");
						dom.setAttribute("data-s-menu", field.id);
						dom.textContent = topBtn.textContent.toUpperCase() + " ";
						diagInfo.topLabel.insertBefore(dom, diagInfo.topLabel.firstChild);
						if (field.diagsSlot) {
							field.diagsSlot.style.display = "none";
						}
					} else {
						diagInfo.topLabel.insertBefore(topBtn, diagInfo.topLabel.firstChild);
					}
				}
				_field._refreshParentBoxes(field.boxParent, severities, true);
				syra_site.dom.toggleClass(field._dataValue, "s-" + diagInfo.$diagnose.$severity, true);
				if (field.diagsSlot) {
					field._core.appendChild(field.diagsSlot);
				}
			}
		}
	},
	clean: function(field, diags) {
		if (field.diagsSlot) {
			field.diagsSlot.parentNode.removeChild(field.diagsSlot);
			delete field.diagsSlot;
		}
		if (field.mnPickers.diagnose) {
			field.mnPickers.diagnose.parentNode.removeChild(field.mnPickers.diagnose);
			delete field.mnPickers.diagnose;
		}

		var css = field._dataValue.className;
		var severities = {};
		for (var ii = diags.length - 1; ii >= 0; ii--) {
			var diag = diags[ii];
			if (diag.msgItem) {
				syra_site.dom.removeChild(diag.msgItem);
				if (diag == _diagnoseFocused) {
					_diagnoseFocused = null;
				}
				delete diag.msgItem;
			}
			severities[diag.$diagnose.$severity] = (severities[diag.$diagnose.$severity] || 0) + 1;
			_diagnoses.splice(_diagnoses.indexOf(diag), 1);
			css = css.replace("s-" + diag.$diagnose.$severity, "");
		}
		field._dataValue.className = css;
		_field._refreshParentBoxes(field.boxParent, severities, false);
	},
	_updateBoxSeverity: function(box, update, add, severity) {
		if (add) {
			box.severitiesCount[severity] = (box.severitiesCount[severity] || 0) + update[severity];
		} else {
			box.severitiesCount[severity] -= update.fatal;
		}
	},
	_refreshParentBoxes: function(box, update, add) {
		while (box) {
			box.severitiesCount = box.severitiesCount || {};
			update.fatal && _field._updateBoxSeverity(box, update, add, "fatal");
			update.error && _field._updateBoxSeverity(box, update, add, "error");
			update.warning && _field._updateBoxSeverity(box, update, add, "warning");
			update.info && _field._updateBoxSeverity(box, update, add, "info");
			var prioritySeverity;
			for (var ii = 0, jj = severities.length; ii < jj; ii++) {
				if (box.severitiesCount[severities[ii]]) {
					prioritySeverity = severities[ii];
					break;
				}
			}
			if (box.tabTitleHead || (box.header && box.$item.$isBoxCollapsable)) {
				if (add && box.prioritySeverity != prioritySeverity) {
					box.showButton("diagnoses", true, undefined, prioritySeverity == "info" ? prioritySeverity : "diagnose");
					var btn = box.btns.items.diagnoses;
					btn.className += " s-diag-" + prioritySeverity;
					btn.title = "";
					btn.syrainout = box.id;
				}
				box.prioritySeverity = prioritySeverity;
				if (!box.prioritySeverity) {
					box.showButton("diagnoses", false);
				}

			}
			box = box.boxParent;
		}
	},
	onFieldItemInOut: function(panel, field, onEnter) {
		var diags = panel._fieldsMap[field.id];
		if (field.isDiagnosePopup && diags) {
			if (onEnter) {
				if (!field.diagsSlot) {
					if (diags.length) {
						field.diagsSlot = document.createElement("div");
						field.diagsSlot.className = "s-field-diagnose-popup";
						for (var ii = 0, jj = diags.length; ii < jj; ii++) {
							_field._addMessage(field, diags[ii].$diagnose);
						}
						field.diagsPopup = syra_site.dialogManager.openPopup(field.page, {
							content: {},
							slot: field.diagsSlot,
							position: {
								my: "left top",
								at: "left bottom",
								of: $(field.domItem)
							},
							onClose: function() {
								syra_site.dom.removeChild(field.diagsSlot);
								field.diagsSlot = field.diagsPopup = null;
							}
						});
					}
				}
			} else {
				field.diagsPopup && field.diagsPopup.close();
			}
		}
	}
};


function _showMessage(diagInfo, show) {
	diagInfo.msgItem.style.display = show ? "" : "none";
	if (show && !diagInfo.isDetailChecked) {
		diagInfo.isDetailChecked = true;
		if (diagInfo.$diagnose.$stackTrace || diagInfo.topLabel.scrollHeight > diagInfo.topLabel.clientHeight) {
			diagInfo.detailLink = syra_menus.addTextButton(syra_local.diag_stacktrace, "s-diagnose-msg-more", "onOpenDetail");
			diagInfo.msgItem.appendChild(diagInfo.detailLink);
		}
	}
}



function DiagnosesPanel() {}

exports.DiagnosesPanel = helpers.defineClass(DiagnosesPanel, null, {
	appendToPage: function(page) {
		this.page = page;
		this.id = page.id + "diagnosepanel";
		syra_store.add(this);
		this.domItem = document.createElement("div");
		this.domItem.className = "s-diagnose";
		this.domItem.style.display = "none";
		this.page.diagnoseSlot.appendChild(this.domItem);
	},
	_initialize: function() {
		this._fieldsMap = {};
		this._core = document.createElement("div");
		this._core.className = "s-diagnose-core";
		this.domItem.appendChild(this._core);
		this.domItem.syraTool = this.id;

		this._close = syra_menus.addIconButton(syra_local.diag_close, "s-diagnose-close", "onClose");
		this._core.appendChild(this._close);

		this._content = document.createElement("div");
		this._content.className = "s-diagnose-content";
		this._core.appendChild(this._content);

		this.body = document.createElement("div");
		this.body.className = "s-diagnose-msg-list";

		this._content.appendChild(this.body);

		var diagNavBar = document.createElement("div");
		diagNavBar.className = "s-diagnose-navigation-bar";
		this._content.appendChild(diagNavBar);

		this._next = syra_menus.addTextButton(syra_local.diag_next, "s-diagnose-nav-next", "onNavigationClick");
		this._next.style.display = "none";
		this._next.title = syra_local.diag_next_tooltip;
		diagNavBar.appendChild(this._next);

		this._expand = syra_menus.addIconButton(syra_local.diag_expand, "s-diagnose-expander", "onExpand");
		this._expand.style.display = "none";
		this.isCollapsed = true;
		this._core.appendChild(this._expand);

		this._opener = syra_menus.addTextButton(syra_local.diag_opener, "s-diagnose-opener", "onOpen");
		this._opener.style.display = "none";

		var html = document.createElement("div");
		html.className = "s-diagnose-open";
		html.appendChild(this._opener);
		this.domItem.appendChild(html);
	},
	clean: function() {
		if (this.domItem) {
			this.domItem.style.display = "none";

			if (this._menus && !this._menus.disposed) {
				this.removeItem(this._menus, true, true);
			}
			delete this._menus;
			_diagnoseFocused = null;
			_diagnoses = [];
			syra_site.dom.empty(this.body);
		}
	},
	onFieldItemInOut: function(field, onEnter) {
		_field.onFieldItemInOut(this, field, onEnter);
	},
	onMessageClick: function(event, btn) {
		var self = this;
		var id = btn.getAttribute("data-s-diagmsg-popup");
		if (id) {
			if (self.diagPopups && self.diagPopups[id]) {
				self.diagPopups[id].close();
			}
		} else {
			var label = btn.children[0];
			if (btn.children[1] && btn.children[1].className == "s-diagnose-msg-hide") {
				var msgPopup = new DiagnoseMessagePopup();
				msgPopup.loadBox(label, btn.getAttribute("data-s-severity"));
				var diagPopup = syra_site.dialogManager.openPopup(self.page, {
					content: msgPopup,
					slot: msgPopup.domItem,
					position: {
						my: "left top",
						at: "left bottom",
						of: $(label)
					},
					onClose: function() {
						msgPopup.dispose();
						btn.removeAttribute("data-s-diagmsg-popup");
						self.diagPopups[this.id] = null;
					},
					$isAutoClose: false
				});
				diagPopup.appendCloseButton(msgPopup.header);
				btn.setAttribute("data-s-diagmsg-popup", diagPopup.id);
				self.diagPopups = self.diagPopups || {};
				self.diagPopups[diagPopup.id] = diagPopup;
			}
		}
	},
	onExpand: function() {
		this.isCollapsed = !this.isCollapsed;
		this._setExpandState();
		this.page.resizeArticle();
	},
	goToField: function(event, btn) {
		var field = syra_store.get(btn.syraFieldId);
		if (field) {
			field.focus && field.focus();
			this.onNavigationClick(event, 0, field);
		}
	},
	onClose: function() {
		this.domItem.style.display = "none";
		if (_diagnoseFocused && !_diagnoseFocused.field) {
			_diagnoseFocused = null;
		}
		if (this.body) {
			syra_site.dom.empty(this.body);
			if (_diagnoses.length > 0) {
				var ii = 0;
				while (ii < _diagnoses.length) {
					if (!_diagnoses[ii].field) {
						if (_diagnoses[ii] == _diagnoseFocused) {
							_diagnoseFocused = null;
						}
						delete _diagnoses[ii].msgItem;
						_diagnoses.splice(ii, 1);
					} else {
						ii++;
					}
				}
			} else {
				this.clean();
			}
		}
		this.page.resizeArticle();
	},
	onOpen: function() {
		if (this._opener && this._core) {
			this._core.style.display = "inline-block";
			this._opener.style.display = "none";
			this.page.resizeArticle();
		}
	},
	onOpenDetail: function(event, btn) {
		for (var ii = 0, jj = _diagnoses.length; ii < jj; ii++) {
			var diagInfo = _diagnoses[ii];
			if (diagInfo.detailLink == btn) {
				diagInfo.isExpanded = !diagInfo.isExpanded;
				diagInfo.topLabel.className = diagInfo.isExpanded ? "s-diagnose-msg-label" : "s-diagnose-msg-label-hidden";
				if (diagInfo.stackTrace) {
					diagInfo.stackTrace.style.display = diagInfo.isExpanded ? "" : "none";
				}
				break;
			}
		}
		this.page.resizeArticle();
	},
	onNavigationClick: function(event, btn, field) {
		if (_diagnoses && _diagnoses.length > 0) {
			var currentDiagnose = _diagnoseFocused;
			if (!btn && field && this._fieldsMap[field.id]) {
				currentDiagnose = this._fieldsMap[field.id][0];
			} else {
				var first, last, next;
				for (var ii = 0, jj = _diagnoses.length; ii < jj; ii++) {
					var diagnose = _diagnoses[ii];
					if (diagnose.field) {
						last = diagnose;
						if (first == undefined) {
							first = last;
						}
						if (_diagnoseFocused && _diagnoseFocused.field == diagnose.field) {
							next = true;
						} else {
							if (next === true) {
								next = last;
							}
						}
					}
				}
				if (_diagnoseFocused) {
					currentDiagnose = _diagnoseFocused == last ? first : ((next === true) ? first : next);
				} else {
					currentDiagnose = first;
				}
				if (currentDiagnose.field.focus) {
					currentDiagnose.field.focus();
				}
			}
			if (_diagnoseFocused) {
				syra_site.dom.removeChild(_diagnoseFocused.focuseFlag);
				delete _diagnoseFocused.focuseFlag;
			}
			_diagnoseFocused = currentDiagnose;
			if (!_diagnoseFocused.focuseFlag) {
				_diagnoseFocused.focuseFlag = syra_menus.addFontIconFlag("s-diagnose-msg-focus", "right_arrow");
				_diagnoseFocused.topLabel.parentNode.insertBefore(_diagnoseFocused.focuseFlag, _diagnoseFocused.topLabel);
			}
			if (_diagnoseFocused.msgItem) {
				syra_page.scrollToItem(syra_site, _diagnoseFocused.msgItem, this._content, true);
			}
			this._setExpandState();
		}
	},
	_setExpandState: function() {
		var count = _diagnoses.length;
		for (var ii = 0; ii < count; ii++) {
			_showMessage(_diagnoses[ii], !this.isCollapsed);
		}
		this._expand.style.display = (count == 1) ? "none" : "";
		if (this.isCollapsed) {
			var diagDisplay = _diagnoseFocused || _diagnoses[count - 1];
			if (diagDisplay) {
				_showMessage(diagDisplay, true);
			}
			this._expand.textContent = (count - 1) + syra_local.diag_expand;
		}
		this._expand.textContent = this.isCollapsed ? ((count - 1) + " " + syra_local.diag_expand) : syra_local.diag_collapse;
	},
	showDiagnoses: function(message, page, options) {
		if (!message || (!message.$bind && !message.field && !message.$diagnoses)) {
			if (this._core) {
				this.clean();
			}
		} else {
			if (message.field && message.field.$item.$isExpressionChild) {
				return;
			}
			if (!this._core) {
				this._initialize();
			}
			if (message.$links || message.$actions) {
				if (!this._diagViewLinks) {
					this._diagViewLinks = document.createElement("div");
					this._diagViewLinks.className = "s-diagnose-links-main";
					this._core.appendChild(this._diagViewLinks);
				}
				_drawLinks(this, this, this._diagViewLinks, message, page);
			}
			if (message.field && (message.field.diagsSlot || message.field.mnPickers.diagnose)) {
				_field.clean(message.field, this._fieldsMap[message.field.id]);
				delete this._fieldsMap[message.field.id];
			}
			if (message.$diagnoses) {
				for (var ii = 0, jj = message.$diagnoses.length; ii < jj; ii++) {
					var $diagnose = message.$diagnoses[ii];
					$diagnose.$severity = $diagnose.severity || $diagnose.$severity || "error";
					$diagnose.$message = $diagnose.message || $diagnose.$message;
					if ($diagnose.$message) {
						$diagnose.$message = syra_site.dom.formatHTMLText($diagnose.$message, true);
					}
				}
			}
			if (message.field) {
				_field.show(this, message);
			} else {
				if (message.$diagnoses && message.$diagnoses.length > 0) {
					for (var ii = 0, jj = message.$diagnoses.length; ii < jj; ii++) {
						var diagInfo = {
							page: page,
							article: page,
							$diagnose: message.$diagnoses[ii]
						};
						_appendTopLabel(this, diagInfo);
						_diagnoses.push(diagInfo);
					}
				}
			}
			if (!options || !options.noViewer) {
				this.autoHide = message.autoHide;
				this.refresh();
			}
		}
	},
	refresh: function() {
		if ((this.page == syra_site) || (this.page.isPageLoaded && !this.page._isDataChanging)) {
			if (this._next && _diagnoses.length > 0) {
				this._next.style.display = Object.keys(this._fieldsMap).length > 1 ? "" : "none";
				this._core.style.display = "inline-block";
				this.domItem.style.display = "";
				this._close.style.zIndex = this.domItem.style.zIndex = syra_site.dom.getTopZIndex() - 1;
				this._setExpandState();
				this._opener.style.display = "none";
			} else {
				this.domItem.style.display = "none";
			}
			if (this.autoHide) {
				this.triggerAutoHide(this.autoHide);
				delete this.autoHide;
			}
		}
	},
	triggerAutoHide: function(autoHide) {
		var self = this;
		setTimeout(function() {
			self.clean();
			if (self.page) {
				self.page.resizeArticle();
			}
		}, autoHide || 4000);
	},
	dispose: function() {
		if (_diagnoses.length > 0) {
			var ii = 0;
			while (ii < _diagnoses.length) {
				if (_diagnoses[ii] && _diagnoses[ii].page == this.page) {
					if (_diagnoses[ii] == _diagnoseFocused) {
						_diagnoseFocused = null;
					}
					delete _diagnoses[ii].msgItem;
					_diagnoses.splice(ii, 1);
				} else {
					ii++;
				}
			}
		}
		syra_store.remove(this);
		syra_site.disposeObject(this);
	}
});