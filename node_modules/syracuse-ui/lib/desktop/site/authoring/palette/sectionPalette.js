"use strict";
var helpers = require('syracuse-core/lib/helpers');
var ItemPalette = require("./itemPalette").ItemPalette;


function SectionPalette(){
}

exports.SectionPalette = helpers.defineClass(SectionPalette, ItemPalette, {
    loadBox: function(){
        this.$childCategory = "block";
        var localize = this.getLocalize();
        this.$prototype = {
            "$": {
                $isHidden: {
                    $type: "application/x-boolean",
                    $title: localize.isHidden
                },
                $title: {
                    $type: "application/x-string",
                    $title: localize.boxTitle
                },
                $isMaximizable: {
                    $type: "application/x-boolean",
                    $title: localize.isMaximizable
                },
                $isBoxCollapsable: {
                    $type: "application/x-boolean",
                    $title: localize.isBoxCollapsable
                },
                $isTitleHidden: {
                    $type: "application/x-boolean",
                    $title: localize.isTitleHidden
                },
                $isSeparatorsVisible: {
                    $type: "application/x-boolean",
                    $title: localize.isSeparatorsVisible
                }
            },
            $isSeparatorsVisible: false
        };
        this._formatFieldWidth(true);
        this._formatFieldLabelAlign(true);
        this._formatFieldTextLabelAlign(true);
        this._formatLayout(true);
        this._formatChildLayout(true, this.$childCategory);
        document.itemFactory.initializeItem(this, {
            $category: "section",
            $bind: "$box",
            $isSeparatorsVisible: true,
            $skin: "s-author-designer-item",
            $layout: {
                $layoutType: "columns",
                $layoutSubType: "60,15,25",
                $items: [this._formatBoxLayoutStack(), {
                    $layoutType: "stack",
                    $items: [this._formatChildLayout(false, this.$childCategory)]
                }, {
                    $layoutType: "stack",
                    $items: [{
                        $category: "section",
                        $bind: "$field",
                        $title: localize.allFields,
                        $layout: {
                            $items: [this._formatFieldWidth(false), this._formatFieldsLabelPositionBlock()]
                        }
                    }]
                }]
            
            }
        }, this.authoringView);
        ItemPalette.prototype.loadBox.call(this);
    }
});
