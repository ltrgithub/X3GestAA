"use strict";
var helpers = require('syracuse-core/lib/helpers');
var ItemPalette = require("./itemPalette").ItemPalette;



function PagePalette(){
}

exports.PagePalette = helpers.defineClass(PagePalette, ItemPalette, {
    loadBox: function(){
        var self = this;
        var localize = this.getLocalize();
        self.$childCategory = "section";
        self.$prototype = {
            "$": {
                $isSeparatorsVisible: {
                    $type: "application/x-boolean",
                    $title: localize.isSeparatorsVisible
                }
            },
            $isSeparatorsVisible: false
        
        };
        self._formatFieldWidth(true);
        self._formatFieldLabelAlign(true);
        self._formatFieldTextLabelAlign(true);
        self._formatLayout(true);
        self._formatChildLayout(true, self.$childCategory);
        document.itemFactory.initializeItem(self, {
            $category: "section",
            $bind: "$box",
            $isSeparatorsVisible: true,
            $skin: "s-author-designer-item",
            $layout: {
                $layoutType: "columns",
                $layoutSubType: "60,20,20",
                $items: [{
                    $layoutType: "stack",
                    $items: [{
                        $layoutType: "columns",
                        $layoutSubType: "50,50",
                        $items: [{
                            $layoutType: "stack",
                            $items: [self._formatLayout(false)]
                        }, {
                            $layoutType: "stack",
                            $items: [{
                                $category: "section",
                                $title: localize.appearance,
                                $layout: {
                                    $items: [{
                                        $bind: "$isSeparatorsVisible",
                                        $skin: "s-author-field",
                                        $isEditMode: true,
                                        $isLeftSpaceHidden: true
                                    }]
                                }
                            }]
                        }]
                    }]
                }, {
                    $layoutType: "stack",
                    $items: [self._formatChildLayout(false, self.$childCategory)]
                }, {
                    $layoutType: "stack",
                    $items: [{
                        $category: "section",
                        $bind: "$field",
                        $title: localize.allFields,
                        $layout: {
                            $items: [self._formatFieldWidth(false), self._formatFieldsLabelPositionBlock()]
                        }
                    }]
                }]
            
            }
        }, self.authoringView);
        ItemPalette.prototype.loadBox.call(self);
    }
    
});
