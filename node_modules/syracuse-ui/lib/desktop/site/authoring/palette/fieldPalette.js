"use strict";
var helpers = require('syracuse-core/lib/helpers');
var ItemPalette = require("./itemPalette").ItemPalette;



function FieldPalette(){
}

exports.FieldPalette = helpers.defineClass(FieldPalette, ItemPalette, {
    loadBox: function(){
        var localize = this.getLocalize();
        this.$prototype = {
            "$": {
                $isHidden: {
                    $type: "application/x-boolean",
                    $title: localize.isHidden
                },
                $isTitleHidden: {
                    $type: "application/x-boolean",
                    $title: localize.isLabelHidden
                }
            },
            $isTitleHidden: false
        };
        this._formatFieldWidth(true);
        this._formatFieldLabelAlign(true);
        this._formatFieldTextLabelAlign(true);
        document.itemFactory.initializeItem(this, {
            $category: "section",
            $bind: "$field",
            $isSeparatorsVisible: true,
            $skin: "s-author-designer-item",
            $layout: {
                $layoutType: "columns",
                $layoutSubType: "50,50",
                $items: [{
                    $layoutType: "stack",
                    $items: [{
                        $category: "section",
                        $title: localize.appearance,
                        $layout: {
                            $layoutType: "columns",
                            $layoutSubType: "50,50",
                            $items: [{
                                $layoutType: "stack",
                                $items: [{
                                    $category: "block",
                                    $layout: {
                                        $items: [{
                                            $bind: "$isHidden",
                                            $skin: "s-author-field",
                                            $isEditMode: true,
                                            $isLeftSpaceHidden: true
                                        }]
                                    }
                                }, this._formatFieldWidth(false)]
                            }, {
                                $layoutType: "stack",
                                $items: [{
                                    $category: "block",
                                    $title: localize.fieldLabel,
                                    $layout: {
                                        $items: [{
                                            $bind: "$isTitleHidden",
                                            $skin: "s-author-field",
                                            $isEditMode: true,
                                            $isLeftSpaceHidden: true
                                        }, this._formatFieldLabelAlign(false), this._formatFieldTextLabelAlign(false)]
                                    }
                                }]
                            }]
                        }
                    }]
                }, {
                    $layoutType: "stack",
                    $items: [{
                        $category: "slot",
                        $id: "s-author-designer-custom-field"
                    }]
                }]
            
            }
        }, this.authoringView);
        ItemPalette.prototype.loadBox.call(this);
        if (this.getNode().item.getAuthoringWidget) {
            if (this.fieldAuthoring = this.getNode().item.getAuthoringWidget()) {
                this.fieldAuthoring.$$container = $("#s-author-designer-custom-field");
                document.itemFactory.initializeItem(this.fieldAuthoring, {}, this);
                this.fieldAuthoring.designedField = this.getNode().item;
                this.fieldAuthoring.$layoutOptions = document.site.$item.$layoutOptions.authoring;
                this.fieldAuthoring.$skin = this.fieldAuthoring.$layoutOptions.section;
                this.fieldAuthoring.loadBox(this.getNode().item.$item);
            }
        }
    },
    dispose: function(){
        if (this.fieldAuthoring) {
            delete this.fieldAuthoring.designedField;
            delete this.fieldAuthoring;
        }
        ItemPalette.prototype.dispose.call(this);
    }
});
