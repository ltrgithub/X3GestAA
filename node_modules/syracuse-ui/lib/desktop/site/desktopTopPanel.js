"use strict";
var helpers = require('syracuse-core/lib/helpers');
var Article = require("syracuse-ui/lib/common/article/article").Article;

var _localize = {
    $about: "About",
    $drafts: "Drafts",
    $historic: "Historic",
    $sessions: "Sessions",
    $bookmarks: "Bookmarks",
    $dashboards: "Dashboard",
    $bookmarkLinkTitle: "Add this page?",
    $bookmarkLinkDesc: "It will appear in your bookmark",
    $authoringLinkTitle: "Design the current page?",
    $authoringLinkDesc: "Launch the authoring panel"
};

function DesktopTopPanel(){

}

helpers.defineClass(DesktopTopPanel, Article, {
    appendOpener: function($$container){
        var self = this;
        self.$$opener = $("<a id='s-site-top-pn-opener-link'/>").appendTo($$container).bind("click", function(event){
            if (self._topPanelTimeout) {
                window.clearTimeout(self._topPanelTimeout);
                delete self._topPanelTimeout;
            }
            self._topPanelTimeout = setTimeout(function(){
                if (!self.$$container) {
                    self.$$item = self.$$container = $("<div id='s-site-top-pn'/>").insertAfter(document.site._$$header);
                    self.loadBox();
                }
                self._togglePanel(self.$$container.css("height") == "0px", false);
            }, 10);
        });
    },
    _togglePanel: function(show, animate){
        this.$$opener.toggleClass("s-open", show);
        if (show) {
            var $$host = document.site.userProfile ? document.site.userProfile.$$host : null;
            if ($$host) {
                if ($$host.parent().length == 0) {
                    this.$$topUserProfile.empty().append($$host);
                }
            }
            else {
                this.$$topUserProfile.empty();
            }
        }
        if (animate !== false) {
            this.$$container.animate({
                height: show ? ((this.$$body.outerHeight() + this.$$body.offset().top) + "px") : "0px"
            }, 500);
        }
        else {
            this.$$container.css("height", show ? ((this.$$body.outerHeight() + this.$$body.offset().top) + "px") : "0px");
        }
        this.isOpened = show;
    },
    renderTopLink: function(options){
        var $$link = $("<a class='s-top-link'/>");
        var div = document.createElement("div");
        div.className = "s-top-link-icon " + options.$icon;
        $$link.append($(div));
        
        var div = document.createElement("div");
        div.className = "s-top-link-title";
        $$link.append($(div).text(options.$title).append($("<div class='s-top-link-desc'/>").text(options.$desc)));
        $$link.bind("click", options.$click).appendTo(this.$$topLinks);
    },
    renderTopBar: function(){
        var self = this;
        self.$$topBar = $("<div id='s-site-top-pn-top-bar'/>").appendTo(self.$$body);
        self.$$topUserProfile = $("<div id='s-site-top-pn-user-profile'/>").appendTo(self.$$topBar);
        
        self.$$topLinks = $("<div id='s-site-user-top-pn-links'/>").appendTo(self.$$topBar);
        self.renderTopLink({
            $icon: "s-top-link-bookmark-open",
            $title: _localize.$bookmarkLinkTitle,
            $desc: _localize.$bookmarkLinkDesc,
            $click: function(){
                //document.authoringSite.toggle(true);
                return false;
            }
        });
        self.renderTopLink({
            $icon: "s-top-link-author-open",
            $title: _localize.$authoringLinkTitle,
            $desc: _localize.$authoringLinkDesc,
            $click: function(){
                self._togglePanel(false, false);
                document.authoringSite.toggle(true);
                return false;
            }
        });
    },
    renderNavigationPanel: function(navItem){
        var div = document.createElement("div");
        div.className = "s-site-top-pn-nav-bar-cell " + navItem.$css;
        navItem.$$cell = $(div).appendTo(this.$$navigationBar);
        
        div = document.createElement("div");
        div.className = "s-site-top-pn-nav-title";
        navItem.$$title = $(div).text(navItem.$title).appendTo(navItem.$$cell);
        
        div = document.createElement("div");
        div.className = "s-site-top-pn-nav-item-body";
        navItem.links = document.itemFactory.load($(div).appendTo(navItem.$$cell), {
            $category: "links",
            $isBindDisabled: navItem.$isBindDisabled || false,
            $links: navItem.$links,
            $skin: "s-site-top-pn-nav-bar-menus"
        }, this);
        navItem.$$cell.bind("mouseleave mouseenter", function(event){
            navItem.links.$$item.find("a").toggleClass("s-site-top-pn-nav-bar-cell-over", event.type == "mouseenter");
            return false;
        });
    },
    renderNavigationBar: function(){
        var self = this;
        self.$$navigationBar = $("<div id='s-site-top-pn-nav-bar'/>").appendTo(self.$$body);
        Object.keys(self.navItems = {
            drafts: {
                $title: _localize.$drafts,
                $css: "s-site-top-pn-drafts"
            },
            historic: {
                $title: _localize.$historic,
                $isBindDisabled: true,
                $css: "s-site-top-pn-historic",
                $links: {
                    "banks": {
                        "$title": "List of banks"
                    },
                    "properties": {
                        "$title": "Bank properties (Boursorama)"
                    },
                    "newAsset": {
                        "$title": "New asset"
                    },
                    "listAsset": {
                        "$title": "List of assets"
                    },
                    "account": {
                        "$title": "Edit bank account (BNP)"
                    }
                }
            },
            bookmarks: {
                $title: _localize.$bookmarks,
                $css: "s-site-top-pn-bookmarks"
            },
            dashboards: {
                $title: _localize.$dashboards,
                $css: "s-site-top-pn-dashboards",
                $isBindDisabled: true,
                $links: self.$prototype.$navigation.$dashboard
            }
        }).forEach(function(id){
            self.renderNavigationPanel(self.navItems[id]);
        });
    },
    renderAboutBar: function(){
        this.$$aboutBar = $("<div id='s-site-top-pn-about-bar'/>").appendTo(this.$$body);
        document.itemFactory.load(this.$$aboutBar, {
            $category: "block",
            $title: _localize.$about,
            $skin: "s-site-top-pn-about-bar",
            $layout: {
                $items: [{
                
                    $category: "links",
                    $isBindDisabled: true,
                    $links: this.$prototype.$navigation.$about,
                    $skin: "s-site-top-pn-about-menus"
                }]
            }
        }, this);
    },
    drawBox: function(){
        this.$$body = $("<div id='s-site-top-pn-body'/>").appendTo(this.$$item);
        this.renderTopBar();
        this.renderNavigationBar();
        this.renderAboutBar();
    },
    dispose: function(){
        var self = this;
        if (self.navItems) {
            Object.keys(self.navItems).forEach(function(prop){
                var navItem = self.navItems[prop];
                if (navItem && navItem.$$cell) {
                    navItem.$$cell.unbind();
                }
            });
        }
        Article.prototype.dispose.call(this);
    }
});

exports.appendPanel = function($$container){
    var panel = document.site.desktopTopPanel = new DesktopTopPanel();
    panel.$prototype = document.site.$prototype;
    document.itemFactory.initializeItem(panel, {});
    panel.appendOpener($$container);
};
