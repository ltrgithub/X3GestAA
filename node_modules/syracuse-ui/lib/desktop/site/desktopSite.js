"use strict";
var helpers = require('syracuse-core/lib/helpers');
var siteHelper = require("syracuse-ui/lib/common/site/siteHelper");
var Popup = require('./popup').Popup;
var DialogDecorator = require('./dialogDecorator').DialogDecorator;
var Article = require("syracuse-ui/lib/common/article/article").Article;
var AuthoringSite = require("./authoring/authoring").AuthoringSite;
var desktopTopPanel = require("./desktopTopPanel");

function DesktopSite(){
}

exports.DesktopSite = helpers.defineClass(DesktopSite, Article, {
    dipose: function(){
        $(window).unbind();
    },
    
    notifyRequestSurvey: function(pendingRequests){
        if (!this.$$requestSurvey) {
            this.$$requestSurvey = $("<div id='s-site-request'/>").appendTo(this.$$container), this.$$requestSurveyCount = $("<label id='s-site-request-count'/>").appendTo(this.$$requestSurvey);
        }
        pendingRequests = pendingRequests || 0;
        this.$$requestSurveyCount.text(pendingRequests);
        if (pendingRequests > 0) {
            if (this.$$requestSurvey.css("right") != "0px") {
                this.$$requestSurvey.css("right", "0px");
            }
        }
        else {
            this.$$requestSurvey.css("right", "-80px");
        }
    },
    onMainPageChange: function($itemPage){
        this.$$body[0].style.display = "none";
        var $memItemPage = {};
        Object.keys($itemPage).forEach(function($prop){
            $memItemPage[$prop] = $itemPage[$prop];
        });
        $itemPage.boxParent = null;
        $itemPage.$$container = this.$$body;
        this._releaseMainPage();
        if (this._diagnoseViewer) {
            this._diagnoseViewer._emptyViewer();
        }
        if (this.desktopTopPanel.isOpened) {
            this.desktopTopPanel.$$opener.click();
        }
        this.mainPage = document.itemFactory.loadPage($itemPage);
        this.mainPage.$memItemPage = $memItemPage;
        this.mainPage.isMainPage = true;
        if (!$itemPage.$urlParts.isFusion) {
            this.updateDocumentTitle();
        }
        this.$$body[0].style.display = "";
        return this.mainPage;
    },
    drawBox: function(){
        var self = this;
        document.authoringSite = new AuthoringSite();
        self._renderHeader();
        self.$$body = $("<div id='s-site-body'/>").appendTo(self.$$container);
        $(window).bind("resize", function(evt){
            self.resize();
        });
        document.site.logon(function(){
            document.controller.startNavigation();
            self.$$container.show();
            self.resize();
        });
    },
    onNotifyRecordChange: function(value, binding){
        if (binding == "search") {
            this.dataset[binding] = value;
            document.controller.executeMenu(this.menusFacade.items["$searchLink"][0]);
        }
    },
    updateDocumentTitle: function(){
        var title = this.mainPage.getTitle();
        if (title) {
            var record = this.userProfile.dataset;
            if (record) {
                if (record.selectedRole) {
                    title += " (" + record.selectedRole.description + ")";
                }
                if (record.selectedEndpoint) {
                    title += " (" + record.selectedEndpoint.description + ")";
                }
            }
            else {
                this.userProfile.$isTitleUpdateRequested = true;
            }
            this.mainPage.drawUserProfile(record);
            document.title = title;
        }
    },
    applyDialogDecorator: function(view){
        return (new DialogDecorator()).wrap(view);
    },
    removeDialog: function(){
        document.controller.disposeObject(this.dialogAdapter);
        delete this.dialogAdapter;
    },
    createPopup: function(options){
        return (new Popup()).load(options);
    },
    resize: function(){
        var self = this;
        if (self._$$header && self.$$body) {
            var $$header = (document.authoringSite.isAuthoringOn) ? document.authoringSite.$$container : self._$$header;
            var newHeight = $$header.outerHeight(true);
            self.$$body[0].style.height = (document.site.$$container.height() - newHeight) + "px";
        }
        if (self.dialogAdapter) {
            self.dialogAdapter.onDocumentResize();
        }
        if (self.eventListeners.resize) {
            Object.keys(self.eventListeners.resize).forEach(function(id){
                self.eventListeners.resize[id].onWindowResize();
            });
        }
    },
    
    _renderHeader: function(){
        var self = this;
        self._$$header = $("<header id='s-site-header'>/");
        var $$top = $("<div id='s-site-header-top'/>");
        document.site.$$popupContainer = $("<div id='s-site-popup'/>").appendTo(document.site.$$container);
        
        var $$topLeft = $("<div id='s-site-header-top-left'/>").appendTo($$top);
        
        $$topLeft.append("<div id='s-site-sage'/>").append($("<div id='s-site-module'/>").text(self.$item.$module));
        $$topLeft.append("<div id='s-site-favorites'><a id='s-site-favorites-link' href='#'/></div>");
        
        desktopTopPanel.appendPanel($$top);
        
        $("<div id='s-fusion-sessions-opener'/>").css("visibility", "hidden").appendTo($$top);
        
        var $$topRight = $("<div id='s-site-header-top-right'/>").appendTo($$top);
        self._renderSearch($$topRight);
        
        document.itemFactory.load($("<div id='s-site-home'/>").appendTo($$topRight), {
            $bind: "$home",
            $category: "link",
            $noText: true,
            $skin: "s-site-home-link"
        }, this);
        
        document.itemFactory.load($("<div id='s-site-help'/>").appendTo($$topRight), {
            $bind: "$help",
            $category: "link",
            $noText: true,
            $skin: "s-site-help-link"
        }, this);
        
        self.$$container.append(document.authoringSite.$$container = $("<aside id='s-site-authoring'/>"));
        self._$$header.append($$top).appendTo(self.$$container);
        self.appendDiagnoseViewer(self.$$container, self);
    },
    _renderSearch: function($$container){
        var $$search = $("<div id='s-site-search'/>").appendTo($$container);
        var searchField = document.itemFactory.load($$search, {
            $bind: "search",
            $isEditMode: true,
            $isTopLabelAlignment: false,
            $category: "field",
            $validationTrigger: "keyup",
            $skin: "s-site-search",
            $inplace: true
        }, this);
        document.itemFactory.load(searchField.$$dataValue, {
            $bind: "$searchLink",
            $category: "link",
            $noText: true,
            $skin: "s-site-search-picker"
        }, this).onMenuClick = function(){
            searchField.onInputValidate();
            return false;
        };
    }
});

exports.load = function($item, $prototype){
    return siteHelper.loadSite({
        siteClass: DesktopSite,
        widgetsLibrary: require('./widgetsLibrary'),
        messageBoxClass: require('./messageBox').MessageBox,
        fusionGatewayClass: require('syracuse-ui/lib/fusion/fusionGateway').FusionGateway,
        diagnoseViewerClass: require('./diagnoseViewer').DesktopDiagnoses,
        userProfileClass: require('./userProfile').UserProfile,
        $item: $item,
        $prototype: $prototype
    });
};
