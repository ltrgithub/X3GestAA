"use strict";
var helpers = require('syracuse-core/lib/helpers');
var siteHelper = require("syracuse-ui/lib/common/site/siteHelper");
var Dialog = require('./dialog').Dialog;
var Article = require("syracuse-ui/lib/common/article/article").Article;
var DesktopTopPanel = require("./desktopTopPanel").DesktopTopPanel;
var AuthoringView = require("./authoring/authoringView").AuthoringView;
var DragDrop = require("./dragDrop").DragDrop;

function DesktopSite(){
}

exports.DesktopSite = helpers.defineClass(DesktopSite, Article, {
    dispose: function(){
        delete this.lastFocusField;
        $(window).unbind();
        if (this.$$topPanelOpener) {
            this.$$topPanelOpener.unbind();
        }
        Article.prototype.dispose.call(this);
    },
    setDraggable: function(source){
        (new DragDrop()).setDraggable(source);
    },
    onFieldFocusIn: function(field){
        this.lastFocusField = field;
    },
    notifyRequestSurvey: function(pendingRequests){
        if (!this.$$requestSurvey) {
            this.$$requestSurvey = $("<div id='s-site-request'/>").appendTo(this.$$container);
            document.site.setZIndex(this.$$requestSurvey);
            this.$$requestSurveyCount = $("<label id='s-site-request-count'/>").appendTo(this.$$requestSurvey);
        }
        pendingRequests = pendingRequests || 0;
        this.$$requestSurveyCount.text(pendingRequests);
        if (pendingRequests > 0) {
            if (this.$$requestSurvey.css("right") != "0px") {
                this.$$requestSurvey.css("right", "0px");
            }
        }
        else {
            this.$$requestSurvey.css("right", "-80px");
        }
    },
    onMainPageChange: function($itemPage){
        this.$$body[0].style.display = "none";
        var $memItemPage = {};
        Object.keys($itemPage).forEach(function($prop){
            $memItemPage[$prop] = $itemPage[$prop];
        });
        $itemPage.boxParent = null;
        $itemPage.$$container = this.$$body;
        this._releaseMainPage();
        if (this._diagnoseViewer) {
            this._diagnoseViewer._emptyViewer();
        }
        this.closeTopPanel();
        
        this.mainPage = document.itemFactory.loadPage($itemPage);
        this.mainPage.$memItemPage = $memItemPage;
        this.mainPage.isMainPage = true;
        if (!$itemPage.$urlParts.isFusion) {
            this.updateDocumentTitle();
        }
        this.$$body[0].style.display = "";
        return this.mainPage;
    },
    drawBox: function(){
        var self = this;
        
        self._renderHeader();
        self.$$item = self.$$body = $("<div id='s-site-body'/>").appendTo(self.$$container);
        $(window).bind("resize", function(evt){
            self.resize();
        });
        self.$$body.bind("keypress", function(event){
            //debugger;
        });
        document.site.logon(function(){
            document.controller.startNavigation();
            self.$$container.show();
            self.resize();
        });
    },
    onNotifyRecordChange: function(value, binding){
        if (binding == "search") {
            this.dataset[binding] = value;
            document.controller.executeMenu(this.menuItems["$searchLink"][0]);
        }
    },
    updateDocumentTitle: function(){
        var title = this.mainPage.getTitle();
        if (title) {
            var record = this.userProfile.dataset;
            if (record) {
                if (record.selectedRole) {
                    title += " (" + record.selectedRole.description + ")";
                }
                if (record.selectedEndpoint) {
                    title += " (" + record.selectedEndpoint.description + ")";
                }
            }
            else {
                this.userProfile.$isTitleUpdateRequested = true;
            }
            this.mainPage.drawUserProfile(record);
            document.title = title;
        }
    },
    toggleAuthoring: function(open){
        if (open) {
            this.closeTopPanel();
            this._$$header.toggle(false);
            this.authoringView = new AuthoringView();
            this.authoringView.$$container = $(document.getElementById("s-site-authoring")).empty().show();
            this.authoringView.open();
        }
        else {
            this._$$header.toggle(true);
            this.authoringView.$$container.hide().empty();
            document.controller.disposeObject(this.authoringView);
            delete this.authoringView;
            this.resize();
        }
    },
    openDialog: function(options){
        var dialog = new Dialog();
        dialog.open(options);
        return dialog;
    },
    resize: function(){
        var self = this;
        if (self._$$header && self.$$body) {
            var $$header = (document.site.authoringView) ? document.site.authoringView.$$container : self._$$header;
            var newHeight = $$header.outerHeight(true);
            self.$$body[0].style.height = (document.site.$$container.height() - newHeight) + "px";
        }
        if (self.resizeListeners) {
            Object.keys(self.resizeListeners).forEach(function(id){
                self.resizeListeners[id].onWindowResize();
            });
        }
    },
    closeTopPanel: function(){
        if (this.topPanel) {
            this.$$topPanelOpener.click(); //Close
        }
    },
    _appendTopPanelOpener: function($$container, topPanelClass){
        var self = this;
        self.$$topPanelOpener = $("<a id='s-site-top-pn-opener-link'/>").attr("href", "#").bind("click", function(event){
            if (!self.topPanel) {
                self.topPanel = new (topPanelClass || DesktopTopPanel)();
                self.topPanel.$prototype = self.$prototype;
                self.topPanel.$$container = $(document.getElementById("s-site-top-pn")).empty().show();
                self.topPanel.loadBox();
            }
            else {
                self.topPanel.closePanel();
                delete self.topPanel;
            }
            self.$$topPanelOpener.toggleClass("s-open", self.topPanel != null);
            return false;
        }).appendTo($$container);
    },
    _renderHeader: function(){
        var self = this;
        document.site.setZIndex(self._$$header = $("<header id='s-site-header'>/"));
        var $$top = $("<div id='s-site-header-top'/>");
        
        var $$topLeft = $("<div id='s-site-header-top-left'/>").appendTo($$top);
        
        $$topLeft.append($("<div id='s-site-sage'/>").bind("click", function(){
            document.site.$isFieldEditOnflyEnabled = !document.site.$isFieldEditOnflyEnabled;
            document.controller.reloadMainPage();
        })).append($("<div id='s-site-module'/>").text(self.$item.$module));
        $$topLeft.append("<div id='s-site-favorites'><a id='s-site-favorites-link' href='#'/></div>");
        
        self._appendTopPanelOpener($$top);
        
        $("<div id='s-fusion-sessions-opener'/>").css("visibility", "hidden").appendTo($$top);
        
        var $$topRight = $("<div id='s-site-header-top-right'/>").appendTo($$top);
        self._renderSearch($$topRight);
        
        document.itemFactory.load($("<div id='s-site-home'/>").appendTo($$topRight), {
            $bind: "$home",
            $category: "link",
            $noText: true,
            $skin: "s-site-home-link"
        }, this);
        
        document.itemFactory.load($("<div id='s-site-help'/>").appendTo($$topRight), {
            $bind: "$help",
            $category: "link",
            $noText: true,
            $skin: "s-site-help-link"
        }, this);
        
        self.$$container.append("<aside id='s-site-authoring'/>");
        self.$$container.append(self._$$header.append($$top)).append("<div id='s-site-top-pn'/>");
        self.appendDiagnoseViewer(self.$$container, self);
    },
    _renderSearch: function($$container){
        var $$search = $("<div id='s-site-search'/>").appendTo($$container);
        var searchField = document.itemFactory.load($$search, {
            $bind: "search",
            $isEditMode: true,
            $isTopLabelAlignment: false,
            $category: "field",
            $validationTrigger: "keyup",
            $skin: "s-site-search",
            $inplace: true
        }, this);
        document.itemFactory.load(searchField.$$dataValue, {
            $bind: "$searchLink",
            $category: "link",
            $noText: true,
            $skin: "s-site-search-picker"
        }, this).onMenuClick = function(){
            searchField.onInputValidate();
            return false;
        };
    }
});

exports.load = function($item, $prototype){
    return siteHelper.loadSite({
        siteClass: DesktopSite,
        widgetsLibrary: require('./widgetsLibrary'),
        messageBoxClass: require('./messageBox').MessageBox,
        fusionGatewayClass: require('syracuse-ui/lib/fusion/fusionGateway').FusionGateway,
        diagnoseViewerClass: require('./diagnoseViewer').DesktopDiagnoses,
        userProfileClass: require('./userProfile').UserProfile,
        $item: $item,
        $prototype: $prototype
    });
};
