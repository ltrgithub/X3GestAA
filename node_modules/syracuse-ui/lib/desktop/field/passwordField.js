"use strict";
var helpers = require('syracuse-core/lib/helpers');
var Field = require('syracuse-ui/lib/common/field/field').Field;
var _localize = {
    confirmPassword: "Confirm password",
    confirmPasswordError: "Password does not match"
};

function DesktopPassword(){
}

exports.DesktopPassword = helpers.defineClass(DesktopPassword, Field, {
    getHtmlInput: function(){
        return "<input type='password'/>";
    },
    setDataValue: function(value, record){
        this.currentValue = value;
        if (this.$isEditMode) {
            this.$$input.val(this.currentValue);
        }
        else {
            this.$$dataValue.text((value || "").length > 0 ? "***" : "");
        }
        this.confirmValue = this.currentValue = value;
    },
    render: function(){
        Field.prototype.render.call(this);
        if (this.$isEditMode) {
            this.$$dataValue.append(this.$$confirmInput = $("<input type='password'/>"));
            this.$$confirmInput.attr("placeholder", _localize.confirmPassword)[0].className = this.$$input[0].className + " s-field-pwd-conf";
            if (this.$item.$isCellChild) {
                this.$$confirmInput[0].style.width = "100%";
            }
            
        }
    },
    setState: function(state){
        Field.prototype.setState.call(this, state);
        if (this.$$confirmInput && state.$isDisabled !== undefined) {
            this.$$confirmInput.attr("disabled", state.$isDisabled).toggleClass("s-disabled", state.$isDisabled);
        }
    },
    
    onInputValidate: function(event){
        var $$upadted = $(event.target);
        var newValue = $$upadted.val();
        if (this.$$input.val() != this.$$confirmInput.val()) {
            document.editFieldController.validate(this, newValue);
        }
        else {
            Field.prototype.onInputValidate.call(this, event);
        }
    },
    validateType: function(errors, value){
        if (this.$$input.val() != this.$$confirmInput.val()) {
            errors.push(_localize.confirmPasswordError);
        }
    }
});
