"use strict";
var helpers = require('syracuse-core/lib/helpers');

function FormatBuilder(){
}

exports.FormatBuilder = helpers.defineClass(FormatBuilder, null, {
    initialize: function(field, defaultChoiceLayout){
        this.field = field;
        this._choices = [];
        field.$item.$choiceLayout = field.$item.$choiceLayout || defaultChoiceLayout || "1"; //1 column
        if (this.field.$item.$iconMode) {
            this.$iconPath = document.site.$item.$iconPath + (this.field.$item.$iconPath || "");
        }
    },
    onInputKeyup: function($$input, event){
        return true;
    },
    renderLayout: function(){
        this.releaseMode();
        this._curCol = 0;
        this._choices = [];
        this._$$list.empty();
    },
    renderRow: function($$item, index){
        $$item[0].style.display = "inline-block";
        this._$$list.append($$item);
        this._addChoice($$item, index);
    },
    renderColumns: function($$item, index){
        if (!this._$$cols) {
            this._$$table = $("<div class='s-field-choice-table'/>").appendTo(this._$$list);
            this._$$cols = [];
            for (var ii = 0, colCount = parseInt(this.field.$item.$choiceLayout); ii < colCount; ii++) {
                this._$$cols[ii] = $("<div class='s-field-choice-col'/>").appendTo(this._$$table);
            }
        }
        this._$$cols[this._curCol].append($$item);
        if (++this._curCol == this._$$cols.length) {
            this._curCol = 0;
        }
        this._addChoice($$item, index);
    },
    _addChoice: function($$item, index){
        this._choices.push({
            $index: index,
            $$item: $$item
        });
    },
    releaseMode: function(){
        delete this._choices;
        delete this._$$cols;
        delete this._$$table;
    },
    dispose: function(){
        if (this._$$list) {
            this._$$list.undelegate();
        }
        this.releaseMode(true);
        delete this.field;
    }
});
