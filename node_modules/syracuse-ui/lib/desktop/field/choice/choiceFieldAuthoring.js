"use strict";
var helpers = require('syracuse-core/lib/helpers');
var Article = require("syracuse-ui/lib/desktop/article/article").Article;

function ChoiceFieldAuthoring(){

}

exports.ChoiceFieldAuthoring = helpers.defineClass(ChoiceFieldAuthoring, Article, {
    onNotifyRecordChange: function(value, binding){
        var metaData = {};
        metaData[binding] = value;
        this.designedField.applyDesignMetaData(metaData, true);
        if (binding == "$format") {
            this.applyChange(metaData);
        }
        document.site.authoringView.notifyUpdate();
        return null; //cancel notify
    },
    applyChange: function(newData){
        Article.prototype.applyChange.call(this, newData);
        if (newData) {
            var self = this;
            if (self.designedField.$item.$format == "$combo") {
                self.designedCombo = self.designedField;
                /*setTimeout(function(){
                 var builder = self.designedField ? self.designedField.builder : null;
                 if (builder) {
                 builder.onAuthoring = true;
                 builder.toggleList(true);
                 }
                 }, 20);*/
            }
            else {
                delete self.designedCombo;
            }
        }
    },
    loadBox: function(initData){
        this.$prototype = {
            "$properties": {
                $format: {
                    $type: "application/x-choice",
                    $title: "Format",
                    $value: {
                        $type: "application/x-string",
                        
                            $enum: [{
                                $value: "$combo",
                                $title: "Drop down list"
                            }, {
                                $value: "$radios",
                                $title: "Radio buttons"
                            }]
                        }
                },
                $choiceLayout: {
                    $type: "application/x-choice",
                    $title: "Show on",
                    $value: {
                        $type: "application/x-string",
                        
                            $enum: [{
                                $value: "row",
                                $title: "1 row"
                            }, {
                                $value: "1",
                                $title: "1 column"
                            }, {
                                $value: "2",
                                $title: "2 columns"
                            }, {
                                $value: "3",
                                $title: "3 columns"
                            }, {
                                $value: "4",
                                $title: "4 columns"
                            }]
                        }
                }
            }
        };
        this.$item = {
            $category: "section",
            $title: "Choice Type",
            $layout: {
                $items: [{
                    $bind: "$format",
                    $isEditMode: true,
                    $labelWidth: "auto",
                    $skin: "s-author-field"
                }, {
                    $bind: "$choiceLayout",
                    $format: "$combo",
                    $isEditMode: true,
                    $labelWidth: "auto",
                    $skin: "s-author-field"
                }]
            }
        };
        Article.prototype.loadBox.call(this, initData);
    },
    dispose: function(){
        if (this.designedCombo && this.designedCombo.builder) {
            this.designedCombo.builder.onAuthoring = false;
            this.designedCombo.builder.toggleList(false);
        }
        delete this.designedCombo;
        Article.prototype.dispose.call(this);
    }
});
