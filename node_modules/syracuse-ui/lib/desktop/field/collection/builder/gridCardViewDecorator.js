"use strict";
var helpers = require('syracuse-core/lib/helpers');

function GridCardViewDecorator(){

}

exports.GridCardViewDecorator = helpers.defineClass(GridCardViewDecorator, null, {
    initialize: function(builder){
        this.builder = builder;
        this.$cardviewPosition = this.builder.list.$item.$cardviewPosition || "inline";
    },
    makeColGroup: function(cols){
        if (this.$cardviewPosition == "inline") {
            cols += "<col/>";
        }
    },
    makeTitleRow: function(){
        if (this.$cardviewPosition == "inline") {
            var th = document.createElement("th");
            th.className = this.builder.gridCss.title + " " + this.builder.list.$skin + "-cardview-cell";
            this.builder.$$titleRow.append($(th).append("<a class='" + this.builder.list.$skin + "-cardview-opener s-close'/>"));
        }
    },
    drawOrientation: function(){
        if (this.$cardviewPosition == "inline") {
            this.builder.$columnsCount++;
            this._bindOpener();
        }
    },
    onRecordDrawBox: function(recordArticle){
        if (this.$cardviewPosition == "inline") {
            var th = document.createElement("td");
            th.className = this.builder.gridCss.cell + " " + this.builder.list.$skin + "-cardview-cell";
            var btn = document.createElement("a");
            btn.className = this.builder.list.$skin + "-cardview-opener s-close";
            recordArticle.$$dataRow.append($(th).append(recordArticle.$$cardviewOpener = $(btn)));
        }
    },
    _bindOpener: function(){
        var self = this;
        self.builder.list.$$item.delegate("a." + self.builder.list.$skin + "-cardview-opener", "click", function(){
            var $$opener = $(this);
            var show = $$opener.hasClass("s-close");
            var $uuid = $$opener.closest("[data-s-record]").attr("data-s-record");
            var $uuidList = ($uuid) ? [$uuid] : Object.keys(self.builder.list.dataset);
            $uuidList.forEach(function($uuid){
                self.toggleRecordCardview(self.builder.list.dataset[$uuid], show);
            });
            document.site.toggleClass($$opener, "s-close", !show);
        });
    },
    toggleRecordCardview: function(recordArticle, show){
        recordArticle.$$cardviewOpener.toggleClass("s-close", !show);
        if (!recordArticle.$$cardviewRow) {
            var td = document.createElement("td");
            td.className = recordArticle.boxParent.$skin + "-cardview-cell";
            td.setAttribute("colspan", recordArticle.boxParent.builder.$columnsCount);
            var $$cell = $(td).appendTo(recordArticle.$$cardviewRow = $(document.createElement("tr")).insertAfter(recordArticle.$$dataRow));
            var $cardview = this.builder.list.$item.$cardview;
            $cardview.$category = $cardview.$category || "section"
            document.itemFactory.load($$cell, $cardview, recordArticle);
        }
        recordArticle.$$cardviewRow.toggle(show);
    },
    onRecordHighlightSelection: function(recordArticle, selected){
        if (recordArticle.$$cardviewRow) {
            document.site.toggleClass(recordArticle.$$cardviewRow, "s-list-record-selected", selected);
        }
    },
    onRecordRemove: function(recordArticle){
        if (recordArticle.$$cardviewRow) {
            recordArticle.$$cardviewRow.remove();
        }
    },
    onQuickFilterDrawBox: function(htmlCell, quickFilter){
        if (this.$cardviewPosition == "inline") {
            $(htmlCell).appendTo(quickFilter.$$dataRow);
        }
    },
    dispose: function(){
        delete this.builder;
    }
});
