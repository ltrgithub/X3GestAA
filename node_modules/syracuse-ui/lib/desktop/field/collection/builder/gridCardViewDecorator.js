"use strict";
var helpers = require('syracuse-core/lib/helpers');

function GridCardViewDecorator(){

}

exports.GridCardViewDecorator = helpers.defineClass(GridCardViewDecorator, null, {
    initialize: function(builder){
        var self = this;
        self.list = (self.builder = builder).list;
        var $item = self.list.$item;
        $item.$cards = (typeof($item.$cards) === "object") ? $item.$cards : {
            $layout: {
                $items: self.list.$binds.map(function($bind){
                    return {
                        $bind: $bind
                    };
                })
            }
        };
        $item.$cards.$category = $item.$cards.$category || "section"
        self.$cardsPosition = $item.$cardsPosition || "inline";
        if (self.$cardsPosition != "inline") {
            if ($item.$selectMode && $item.$selectMode != "row") {
                self.$cardsPosition = "inline";
            }
            else {
                $item.$selectMode = "row";
            }
        }
        if (self.$cardsPosition != "inline") {
            self._wrapper = document.createElement("div");
            self._wrapper.className = "s-list-gridcard-slot";
            
            self.list._tableSlot = document.createElement("div");
            self.list._tableSlot.className = "s-list-gridcard-grid-slot";
            self._wrapper.appendChild(self.list._tableSlot);
            
            self._cardSlot = document.createElement("div");
            self._cardSlot.className = "s-list-gridcard-card-slot";
            
            if (self.$cardsPosition == "left" || self.$cardsPosition == "right") {
                self._wrapper.style.display = "table";
                self._wrapper.style.tableLayout = "fixed";
                self._wrapper.style.width = "100%";
                self.list._tableSlot.style.display = "table-cell";
                self._cardSlot.style.display = "table-cell";
                /*var widths = (self.list.$item.$cardsColumnWidth || "50,50").split(",");
                 self._cardSlot.style.width = widths[(self.$cardsPosition == "left") ? 0 : 1] + "%";
                 self.list._tableSlot.style.width = widths[(self.$cardsPosition == "left") ? 1 : 0] + "%";*/
                self._cardSlot.style.width = (self.list.$item.$cardsWidth || "50") + "%";
            }
            else {
                self._wrapper.style.display = "";
                self._wrapper.style.tableLayout = "";
                self._wrapper.style.width = "";
                self.list._tableSlot.style.display = "";
                self._cardSlot.style.display = "";
                self.list._tableSlot.style.width = "";
                self._cardSlot.style.width = "";
            }
            self.list._core.appendChild(self._wrapper);
            $(self._cardSlot)[(["left", "top"].indexOf(self.$cardsPosition) >= 0) ? "prependTo" : "appendTo"](self._wrapper);
        }
    },
    release: function(){
        if (this._wrapper) {
            $(this.list._core).append($(this.list._tableSlot).children());
            this.list._tableSlot = this.list._core;
            document.site.removeDomChild(this._wrapper);
            delete this._wrapper;
        }
    },
    onRecordDrawBox: function(recordArticle){
        if (this.$cardsPosition == "inline") {
            var th = document.createElement("td");
            th.className = this.builder.gridCss.cell + " " + this.list.$skin + "-cardview-cell";
            var btn = document.createElement("a");
            btn.className = this.list.$skin + "-cardview-opener s-close";
            recordArticle.$$item.append($(th).append(recordArticle.$$cardsOpener = $(btn)));
        }
    },
    _bindOpener: function(){
        var self = this;
        self.builder.list.$$item.delegate("a." + self.builder.list.$skin + "-cardview-opener", "click", function(){
            var $$opener = $(this);
            var show = $$opener.hasClass("s-close");
            var $uuid = $$opener.closest("[data-s-record]").attr("data-s-record");
            var $uuidList = ($uuid) ? [$uuid] : Object.keys(self.builder.list.dataset);
            $uuidList.forEach(function($uuid){
                self._toggleRecordCardview(self.builder.list.dataset[$uuid], show);
            });
            document.site.toggleClass(this, "s-close", !show);
        });
    },
    _toggleRecordCardview: function(recordArticle, show){
        recordArticle.$$cardsOpener.toggleClass("s-close", !show);
        if (!recordArticle.$$cardsSlot) {
            var td = document.createElement("td");
            td.className = recordArticle.boxParent.$skin + "-cardview-cell";
            td.setAttribute("colspan", recordArticle.boxParent.builder.table.orderCols.length);
            var $$cell = $(td).appendTo(recordArticle.$$cardsSlot = $(document.createElement("tr")).insertAfter(recordArticle.$$item));
            this._createCardView($$cell, recordArticle);
        }
        recordArticle.$$cardsSlot.toggle(show);
    },
    _createCardView: function($$container, recordArticle){
        this.cardview = document.itemFactory.load($$container, this.list.$item.$cards, recordArticle);
    },
    onRecordHighlightSelection: function(recordArticle, selected){
        if (this.$cardsPosition == "inline") {
            if (recordArticle.$$cardsSlot) {
                document.site.toggleClass(recordArticle.$$cardsSlot[0], "s-list-record-selected", selected);
            }
        }
        else {
            if (this.cardview) {
                recordArticle.removeItem(this.cardview, true);
                delete this.cardview;
            }
            if (selected) {
                this._createCardView($(this._cardSlot), recordArticle);
            }
        }
    },
    onRecordRemove: function(recordArticle){
        if (recordArticle.$$cardsSlot) {
            recordArticle.$$cardsSlot.remove();
        }
    },
    onAfterDataBinding: function(){
        if (this.$cardsPosition != "inline" && Object.keys(this.list.recordSelector.records).length == 0) {
            if (this._records.length > 0) {
                this.list.recordSelector.select(this._records[0].$recordUuid, true);
            }
        }
    },
    dispose: function(){
        delete this.list;
        delete this.cardview;
        delete this.builder;
    }
});
