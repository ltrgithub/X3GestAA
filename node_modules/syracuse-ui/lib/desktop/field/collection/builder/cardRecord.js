"use strict";
var helpers = require('syracuse-core/lib/helpers');
var Article = require("syracuse-ui/lib/common/article/article").Article;


function CardRecord(){
}

exports.CardRecord = helpers.defineClass(CardRecord, Article, {
    loadRecord: function(list, record, $recordIndex, row, cellIndex){
        this.$recordUuid = record.$uuid;
        this.$recordIndex = $recordIndex;
        this.$$recordContainer = row.$$row;
        this.$facet = list.$recordFacet;
        this.$prototype = list.$prototype.$item;
        this.row = row;
        this.cellIndex = cellIndex;
        document.itemFactory.initializeItem(this, {
            $category: "section",
            $skin: "s-cards-h1",
            $layout: {
                $items: list.$item.$items
            }
        }, list);
        this.loadBox(record);
    },
    remove: function(){
        this.$$dataRow.remove();
    },
    drawBox: function(){
        var list = this.boxParent;
        this.$$dataRow = this.row.$$cells[this.cellIndex].attr("data-s-record", this.$recordUuid);
        if (list.$alternateStyle && this.$recordIndex % 2) {
            this.$$dataRow.addClass(list.$alternateSkin);
        }
        var $$selectorCell = $("<div/>").appendTo(this.$$dataRow);
        var $$data = $("<div/>").addClass(list.$skin + "-record").appendTo(this.$$dataRow);
        if (!list.$item.$isMenuRecordHidden) {
            this.$$menuContainer = $("<div/>").addClass(list.$skin + "-menu-row").appendTo(this.$$dataRow);
        }
        if (list.recordSelector.hasColumn) {
            $$selectorCell.addClass(list.$skin + list.recordSelector.css).append(this.$$selector = $(list.recordSelector.record));
        }
        else {
            $$selectorCell.hide();
        }
        document.itemFactory.load($$data, list.$cardView, this);
        this.$$dataRow[0].style.visibility = "";
    },
    highlightSelection: function(selected){
        document.site.toggleClass(this.$$dataRow, "s-list-record-selected", selected);
        if (this.$$selector && this.$$selector.is("input")) {
            this.$$selector.attr('checked', selected);
        }
    },
    dispose: function(){
        delete this.row;
        Article.prototype.dispose.call(this);
    }
});
