"use strict";
var helpers = require('syracuse-core/lib/helpers');
var HGridRecord = require('./hgridRecord').HGridRecord;

function VGridRecord(){
}

exports.VGridRecord = helpers.defineClass(VGridRecord, HGridRecord, {
    drawBox: function(){
        var self = this;
        var list = self.boxParent;
        var css = self.$skin + "-cell";
        if (list.recordSelector.hasColumn) {
            list.builder.$$VGridRows[list.builder.$rowSelector].append($("<td/>").addClass(css).addClass(list.$skin + list.recordSelector.css).append(self.$$selector = $(list.recordSelector.record)));
            self.$$selector.attr("data-s-record", self.$recordUuid);
        }
        var htmlCell = "<td class='" + list.$skin + "-cell'/>";
        self.list.parseItems(function($item, $field){
            var $$htmlCell = $(htmlCell);
            if ($field.$isHidden !== undefined) {
                $$htmlCell.toggle(!$field.$isHidden);
            }
            document.itemFactory.load($$htmlCell.appendTo(list.builder.$$VGridRows[$item.$bind]), {
                $bind: $item.$bind,
                $isCellChild: true,
                $inplace: true
            }, self);
        });
        
        if (!list.$item.$isMenuRecordHidden) {
            self.$$menuContainer = $(htmlCell).appendTo(list.builder.$$VGridRows[list.builder.$rowMenu]);
            list.toggleRecordMenu(true, self);
        }
    },
    remove: function(){
    
    },
    highlightSelection: function(selected){
        if (this.$$selector && this.$$selector.is("input")) {
            this.$$selector.attr('checked', selected);
        }
    }
});
