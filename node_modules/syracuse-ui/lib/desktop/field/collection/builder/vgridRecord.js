"use strict";
var helpers = require('syracuse-core/lib/helpers');
var HGridRecord = require('./hgridRecord').HGridRecord;

function VGridRecord(){
}

exports.VGridRecord = helpers.defineClass(VGridRecord, HGridRecord, {
    drawBox: function(){
        var self = this;
        var css = self.$skin + "-cell";
        if (self.list.recordSelector.hasColumn) {
            var cell = document.createElement("td");
            cell.className = css + " " + self.list.$skin + self.list.recordSelector.css;
            $(cell).append(self.$$selector = $(self.list.recordSelector.record));
            self.builder.vgridRows[self.builder.$rowSelector].appendChild(cell);
            self.$$selector.attr("data-s-record", self.$recordUuid);
        }
        self.list.parseItems(function($item, $field){
            var cell = document.createElement("td");
            cell.className = self.list.$skin + "-cell";
            var $$cell = $(cell);
            if ($field.$isHidden !== undefined) {
                $$cell.toggle(!$field.$isHidden);
            }
            self.builder.vgridRows[$item.$bind].appendChild(cell);
            document.itemFactory.load($$cell, {
                $bind: $item.$bind,
                $isCellChild: true,
                $inplace: true
            }, self);
        });
        if (!self.list.$item.$isMenuRecordHidden) {
            var cell = document.createElement("td");
            cell.className = self.list.$skin + "-cell";
            self._loadMenu(self.builder.vgridRows[self.builder.$rowMenu].appendChild(cell));
        }
    },
    remove: function(){
    
    },
    highlightSelection: function(selected){
        if (this.$$selector && this.$$selector.is("input")) {
            this.$$selector.attr('checked', selected);
        }
    }
});
