"use strict";
var helpers = require('syracuse-core/lib/helpers');
var localize = require('syracuse-ui/lib/common/controller/localize').list;
var ReferenceRecord = require('./referenceRecord').ReferenceRecord;
var RawListBuilder = require("syracuse-ui/lib/common/field/collection/rawListBuilder").RawListBuilder;

function ReferenceListBuilder(){
}

exports.Builder = helpers.defineClass(ReferenceListBuilder, RawListBuilder, {
    initialize: function(){
        this.list.$item.$isQuickDesignerEnabled = false;
        this.list.$item.$isPagerHidden = true;
        this.list.$item.$selectMode = "multi";
        this.RecordClass = ReferenceRecord;
    },
    appendRecord: function(options){
        options.record = {
            $uuid: options.$recordIndex,
            $singleField: options.record
        };
        options.$prototype = {
            $: {
                $singleField: this.list.$prototype.$item
            }
        };
        return RawListBuilder.prototype.appendRecord.call(this, options);
    },
    drawBuilder: function(){
        this.list.$skin = this.list.$item.$skin || "s-references";
        
        this.list._body = document.createElement("div");
        this.list._body.className = this.list.$skin + "-body";
        this.list._listSlot.appendChild(this.list._body);
        this.list.appendSelector();
        
        this.list.applyDesignMetaData(this.list.$item, false);
        this.list.boxParent.getArticle().bind(this.list, this.list.$item.$bind);
        
        if (this.list.$isEditMode) {
            this._addMenus();
        }
    },
    _addMenus: function(){
        var self = this;
        self.list._menus.addMenuItem({
            $bind: "$linkRecords",
            $title: localize.link,
            $category: "link"
        }).onMenuClick = function(){
            self.list.currentSelection = null;
            self.list.boxParent.openDialog({
                article: self.list,
                $url: (self.list.$prototype.$item.$thumb || self.list.$prototype.$item).$links.$select.$url,
                onValidate: function(page){
                    var $index = Object.keys(self.list.dataset).length;
                    if (self.list.currentSelection) {
                        var records = Object.keys(self.list.currentSelection).map(function($uuid){
                            return {
                                $uuid: $uuid,
                                $index: ++$index
                            };
                        });
                        if (records.length > 0) {
                            document.controller.notifyChange(self.list.getArticleParent(), self.list.$item.$bind, records);
                        }
                    }
                },
                onSelectRecord: function(selectedRecords){
                    self.list.currentSelection = selectedRecords;
                    return false;
                }
            });
            return false;
        };
    }
});
