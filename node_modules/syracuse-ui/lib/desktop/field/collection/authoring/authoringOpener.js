"use strict";
var helpers = require('syracuse-core/lib/helpers');
var Article = require("syracuse-ui/lib/desktop/article/article").Article;
var ListAuthoring = require("./listAuthoring").ListAuthoring;

function QuickDesigner(){

}

exports.QuickDesigner = helpers.defineClass(QuickDesigner, null, {
    appendOpener: function(designedField, $$opener){
        var self = this;
        self.designedField = designedField;
        if (!$$opener) {
            self.isQuickDesigner = true;
            var dom = document.createElement("a");
            dom.className = "s-list-quick-designer";
            dom.setAttribute("href", "#");
            self.$$opener = $(dom);
            dom = document.createElement("div");
            dom.className = "s-list-quick-designer-cell";
            $(dom).append(self.$$opener).prependTo($(designedField._topbar));
        }
        else {
            self.$$opener = $$opener;
        }
        self.$$opener.bind("click", function(){
            document.site.onBeforClick();
            self.toggleQuick();
            return false;
        });
    },
    toggleQuick: function(){
        var self = this;
        if (!self.popup) {
            (self.authoring = new ListAuthoring()).loadBox(self);
            self.popup = self.designedField.boxParent.openDialog({
                $dialogMode: "popup",
                content: self.designedField,
                $$dialog: self.authoring.$$container,
                position: {
                    my: "left top",
                    at: "left bottom",
                    of: self.$$opener
                },
                onClose: function(){
                    self.popup = null;
                    document.controller.disposeObject(self.authoring);
                    delete self.authoring;
                }
            });
        }
        else {
            if (self.popup) {
                self.popup.close();
            }
        }
    },
    dispose: function(){
        delete this.designedField;
        if (this.$$opener) {
            this.$$opener.unbind();
            delete this.$$opener;
        }
    }
});

function WidgetAuthoring(){

}

exports.WidgetAuthoring = helpers.defineClass(WidgetAuthoring, Article, {
    loadBox: function(initData){
        if (!this.$$item) {
            var dom = document.createElement("a");
            dom.className = "s-list-main-designer";
            this.$$item = $(dom);
            dom = document.createElement("div");
            dom.className = "s-list-main-designer-icon s-top-link-author-open";
            this.$$item.append(dom);
            
            dom = document.createElement("div");
            dom.className = "s-top-link-title";
            var $$title = $(dom).appendTo(this.$$item);
            $$title.text("Design the current list");
            
            dom = document.createElement("div");
            dom.className = "s-top-link-desc";
            $(dom).appendTo($$title).text("Launch the authoring panel");
            
            (this.quickDesigner = new QuickDesigner()).appendOpener(this.designedField, this.$$item.appendTo(this.$$container));
        }
    },
    dispose: function(){
        delete this.designedField;
        Article.prototype.dispose.call(this);
    }
});
