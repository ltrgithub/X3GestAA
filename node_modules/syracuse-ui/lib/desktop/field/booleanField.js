"use strict";
var helpers = require('syracuse-core/lib/helpers');
var BooleanField = require('syracuse-ui/lib/common/field/booleanField').BooleanField;

function DesktopBoolean(){
}

exports.DesktopBoolean = helpers.defineClass(DesktopBoolean, BooleanField, {
    applyDesignMetaData: function(metadata, onAuthoring){
        BooleanField.prototype.applyDesignMetaData.call(this, metadata, onAuthoring);
        if (metadata.$isLeftSpaceHidden !== undefined) {
            this.$$titleSpace[0].style.display = metadata.$isLeftSpaceHidden ? "none" : "";
        }
    },
    render: function(){
        if (this.$item.$inplace) {
            this.$$item.css("text-align", "center");
        }
        if (this.$isEditMode) {
            this.$$input = $("<input type='checkbox'/>").addClass(this.$skinInput + "-boolean").appendTo(this.$$dataValue);
            if (this.$$title) {
                var title = this.$$title[0];
                var div = document.createElement("div");
                div.className = title.className;
                this.$$titleSpace = $(div).prependTo(this.$$item);
                var css = " " + this.$skin + "-title-boolean";
                if (this.$item.$css) {
                    css += " " + this.$item.$css;
                }
                title.className = css;
                this.$$dataValue.append(this.$$title);
            }
        }
        else {
            this.$$dataValue.addClass("s-boolean");
        }
    },
    setReadOnly: function($isReadOnly){
        this.$isReadOnly = $isReadOnly;
        if (this.$$input) {
            if (this.$isReadOnly) {
                this.$$input.attr("disabled", "true");
            }
            else {
                if (!this.$isDisabled) {
                    this.$$input.removeAttr("disabled");
                }
            }
        }
    },
    hideTitle: function($isTitleHidden){
    
    },
    releaseMode: function(onDispose){
        delete this.$$titleSpace;
        BooleanField.prototype.releaseMode.call(this, onDispose);
    }
});
