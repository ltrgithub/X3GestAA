"use strict";
var helpers = require('syracuse-core/lib/helpers');
var picker = require('./datetimePicker');
var DateTimeField = require('syracuse-ui/lib/common/field/datetimeField').DateTimeField;

function DesktopDateTime(){
}

exports.DesktopDateTime = helpers.defineClass(DesktopDateTime, DateTimeField, {
    _doClickPicker: function($$btn, options){
        var self = this;
        if (!self.$isDisabled) {
            if (!self.popupPicker) {
                self.$$item.attr("id", self.id);
                self.focus();
                self.picker = new picker[$$btn[0].className.indexOf("-time-picker") > 0 ? "TimeChoice" : "Calendar"]();
                self.picker.create(self, options);
                self.popupPicker = self.boxParent.openDialog({
                    $dialogMode: "popup",
                    content: self,
                    $$dialog: self.picker.$$item,
                    position: {
                        my: "right top",
                        at: "right bottom",
                        of: self.$$input
                    },
                    onClose: function(){
                        setTimeout(function(){
                            if (self.picker) {
                                self.picker.remove();
                                self.picker = null;
                            }
                            self.popupPicker = null;
                        }, 200);
                    }
                });
            }
            else {
                self.popupPicker.close();
            }
        }
    },
    setPickerValue: function(formatedValue, internalValue){
        var self = this;
        this.popupPicker.close();
        if (!this.$isReadOnly) {
            this.getPage().externalAdapter.setPickerValue({
                target: this,
                value: formatedValue,
                internalValue: internalValue,
                doStatements: function(options){
                    self.$$input.val(options.value).focus().change();
            }});
        }
    },
    render: function(){
        if (this.$isEditMode) {
            // application/x-{date,time}
            if (this.$field.$type != "application/x-datetime") {
                var input = (this.$$input = $("<input type='text'/>"))[0];
                this._appendLinksPicker();
                this._appendPicker(this.$field.$type == "application/x-time" ? "time" : "date");
                
                
            }
            // application/x-datetime
            else {
                var input = (this.$$input = $("<input type='text'/>"))[0];
                input.className = this.$skinInput;
                var box = document.createElement("div");
                box.className = this.$skinInput + "-box";
                $(box).append(this.$$input).appendTo(this.$$fieldValue);
            }
        }
        else {
            DateTimeField.prototype.render.call(this);
        }
    }
});
