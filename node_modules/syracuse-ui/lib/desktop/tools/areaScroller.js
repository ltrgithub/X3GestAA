"use strict";
function _interpolate(source, target, pos){
    return (source + (target - source) * pos);
}

function _easing(pos){
    return (-Math.cos(pos * Math.PI) / 2) + 0.5;
}

$.easing.elasout = function(x, t, b, c, d){
    var s = 1.70158;
    var p = 0;
    var a = c;
    if (t == 0) 
        return b;
    if ((t /= d) == 1) 
        return b + c;
    if (!p) 
        p = d * .3;
    if (a < Math.abs(c)) {
        a = c;
        var s = p / 4;
    }
    else 
        var s = p / (2 * Math.PI) * Math.asin(c / a);
    return a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) + c + b;
};

function AreaScroller($$area){
    var self = this;
    var _area = $$area[0], _isWin = $$area.is('html,body');
    
    self.hasScrollBar = function(){
        return (_area.clientHeight < _area.scrollHeight) || (_area.clientWidth < _area.scrollWidth);
    };
    
    self.getMaxWidth = function(){
        if (_isWin) {
            var owner = _area.ownerDocument;
            return Math.max(owner.documentElement.scrollWidth, owner.body.scrollWidth) - Math.min(owner.documentElement.clientWidth, owner.body.clientWidth);
        }
        return _area.scrollWidth - $$area.width();
    };
    
    self.getMaxHeight = function(){
        if (_isWin) {
            var owner = _area.ownerDocument;
            return Math.max(owner.documentElement.scrollHeight, owner.body.scrollHeight) - Math.min(owner.documentElement.clientHeight, owner.body.clientHeight);
        }
        return _area.scrollHeight - $$area.height();
    };
    
    function _getOffsetFromArea($d$target){
        var $d$parent = $d$target;
        var offset = {
            left: 0,
            top: 0
        };
        while ($d$parent && $d$parent != _area) {
            offset.left += $d$parent.offsetLeft;
            offset.top += $d$parent.offsetTop;
            $d$parent = $d$parent.offsetParent;
        }
        return offset;
    }
    
    self._scrollLeft = function($$target){
        var left = $$target.offset().left + (_isWin ? 0 : _area.scrollLeft - $$area.offset().left);
        return left <= 0 ? 0 : Math.min(left, self.getMaxWidth());
    };
    
    self._scrollTop = function($$target){
        var top = $$target.offset().top + (_isWin ? 0 : _area.scrollTop - $$area.offset().top);
        return top <= 0 ? 0 : Math.min(top, self.getMaxHeight());
    };
    
    function _scrollToAnim(position, duration){
        duration || (duration = 500);
        var start = (new Date()).getTime();
        var end = start + duration;
        var interval = setInterval(function(){
            var now = (new Date()).getTime(), delta = (now > end) ? 1 : (now - start) / duration;
            $$area[0][position.action] = _interpolate(position.start, position.target, _easing(delta)) >> 0;
            if (now > end) {
                clearInterval(interval);
            }
        }, 10);
    }
    
    self.scrollToTarget = function($$target, scrollToView, action){
        if (!action) {
            var scrollLeft = true, scrollTop = true;
            if (scrollToView) {
                var offset = _getOffsetFromArea($$target[0]);
                if (offset.top > _area.scrollTop) {
                    //top <= _area.scrollTop=> not fully visible
                    scrollTop = !(offset.top - (_area.scrollTop + _area.clientHeight) <= 0);
                }
                if (offset.left > _area.scrollLeft) {
                    //top <= _area.scrollTop=> not fully visible
                    scrollLeft = !(offset.left - (_area.scrollLeft + _area.clientWidth) <= 0);
                }
            }
            if (scrollLeft) {
                self.scrollToTarget($$target, scrollToView, "scrollLeft");
            }
            if (scrollTop) {
                self.scrollToTarget($$target, scrollToView, "scrollTop");
            }
        }
        else {
            var target = self["_" + action]($$target);
            if (target >= 0) {
                _scrollToAnim({
                    action: action,
                    start: _area[action],
                    target: target
                });
            }
        }
    };
    
    self.dispose = function(){
        _area = null;
    };
}

exports.AreaScroller = AreaScroller;
