"use strict";
var helpers = require('syracuse-core/lib/helpers');
var SingleRecord = require('syracuse-ui/lib/field/array/singleBuilder/singleRecord').SingleRecord;

function BookmarkItemRecord(){
}

exports.BookmarkItemRecord = helpers.defineClass(BookmarkItemRecord, SingleRecord, {
    reorderItem: function(targetRecord, isAfter){
        targetRecord.domItem.parentNode.insertBefore(this.domItem, isAfter ? targetRecord.domItem.nextSibling : targetRecord.domItem);
        this.singleField.variantItem.onReorderItem(this);
    },
    _createMenusBox: function(){
        if (!this.menusSlot) {
            this.menusSlot = document.createElement("div");
            this.page.ensureReorderAndMenusVisibility(this);
            this.page.loadNewItem(this.menusSlot, this.list.defineNewIconMenu("$delete", "s-nav-item-link", true), this);
        }
    },
    onMenuClick: function(menuItem){
        if (menuItem.$bind == "$delete" && !this.$isSeparator) {
            menuItem.$confirm = this.localize["navigPageConfirmDelete" + (this.singleField.$variantItemKey == "menuItem" ? "Menu" : "Block")];
        }
        return true;
    },
    onItemEnterLeave: function(event){
        if (this.singleField.variantItem) {
            this.singleField.variantItem.onItemEnterLeave(event, this);
        }
    },
    drawBox: function(){
        this.$isVerticalDirection = true;
        this.domItem = document.createElement("div");
        this.$$item = $(this.domItem);
        this.domItem.className = this.list.$skin + "-item";
        this.domItem.setAttribute("data-s-inout", this.id);
        this.domItem.setAttribute("data-s-record", this.$uuid);
        
        this.recordValue = document.createElement("div");
        this.recordValue.className = this.list.$skin + "-item-value";
        this.$$value = $(this.domItem.appendChild(this.recordValue));
        
        if (this.list.$capability && this.list.$capability.reorder) {
            this.applyReorderCapability(true);
        }
        this.singleField = this.page.loadNewItem(this.recordValue, {
            $isTitleRowHidden: true,
            //$isMenusHidden: true,
            $isDetailLinkDisabled: true,
            $bind: "$singleField",
            $isEditMode: this.$isEditMode,
            $inplace: true,
            $isDiagnoseInline: true
        }, this);
        this.list.onAppendRecord(this);
        this.list.applyRecordCapabilities(this);
        this.page.ensureReorderAndMenusVisibility(this);
    },
    applyReorderCapability: function(reorder){
        if (this.hasReorderCapability = reorder) {
            if (!this.reorderPicker) {
                this.reorderPicker = document.createElement("div");
                this.reorderPicker.className = this.list.$skin + "-item-reorder";
                this.reorderPicker.syraReorderRecordId = this.list.id;
                document.site.ddManager.setDragSpot(this.reorderPicker, true);
                //this.domItem.insertBefore(this.reorderPicker, this.recordValue);
                if (this.list.$isDisabled) {
                    document.site.disableItem(this.reorderPicker, this.list.$isDisabled);
                }
            }
        }
        else {
            if (this.reorderPicker) {
                document.site.removeDomChild(this.reorderPicker);
                delete this.reorderPicker;
            }
        }
    },
    dispose: function(){
        this.singleField = this.$$value = this.domItem = null;
        SingleRecord.prototype.dispose.call(this);
    }
});
