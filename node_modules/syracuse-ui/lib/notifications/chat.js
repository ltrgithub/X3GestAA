"use strict";
//var io = require('syracuse-ui/deps/socket.io-client');

var _templates = {
	notifPicker: '\
		<a class="s-notif-picker {{#if count}}new{{/if}}">\
			<i class="fa fa-bell"></i>\
			<label class="s-notif-count">\
				{{#if count}}\
					{{count}}\
				{{/if}}\
			</label>\
		</a>',
	notifPanel: '\
		<div class="s-notif-panel">\
			<header>NOTIFICATIONS</header>\
			<section>{{{notifications}}}</section>\
			<footer></footer>\
		</div>',
	notifItem: '\
		<div class="s-notif-item">\
			<div class="s-notif-status">\
				{{#if isUser}}\
					<i class="fa fa-circle {{status}}"></i>\
				{{/if}}\
			</div>\
			<div class="s-notif-origin">\
				<img class="s-notif-origin-img" src="{{originSrc}}">\
			</div>\
			<div class="s-notif-content">\
				<div class="s-notif-content-one">\
					<div class="s-notif-content-origin-label">\
						{{originLabel}}\
					</div>\
					<div class="s-notif-content-origin-time">\
						{{time}} ago\
					</div>\
				</div>\
				<div class="s-notif-content-two">\
					<div class="s-notif-content-desc">\
						{{desc}}\
					</div>\
				</div>\
			</div>\
			<div class="s-notif-type">\
				<i class="{{typeIcon}} type"></i>\
			</div>\
		</div>'
};

var _getHtml = function(type, name, ctx) {
	type = type || "";
	var key = type + name + "compiled";
	var tmpl = _templates[key];
	if (!tmpl) {
		tmpl = type.length == 0 ? _templates[name] : _templates[type][name];
		tmpl = _templates[key] = Handlebars.compile(tmpl);
	}
	return tmpl(ctx);
};


var _hasPanel = function() {
	var $$notifPanel = $(".s-notif-panel");
	if ($$notifPanel.length > 0) {
		return $$notifPanel;
	} else {
		return false;
	}
};

var _updateCount = function(add) {
	if (add) {
		syra_site.notifCount++;
	} else {
		syra_site.notifCount = 0;
	}
};

var _getCount = function() {
	return syra_site.notifCount;
};

var _updatePicker = function(nn) {
	// if new notifications
	if (nn) {
		// update count
		_updateCount(true);
		$(".s-notif-count").text(_getCount());

		// update style
		$(".s-notif-picker").toggleClass("new", true);
	}
	// reset picker
	else {
		// update count
		_updateCount();
		$(".s-notif-count").text("");

		// update style
		$(".s-notif-picker").toggleClass("new", false);
	}
};


var _togglePanel = function() {
	var $$notifPanel = _hasPanel();
	if ($$notifPanel) {

		// TODO if notif was closed, and if new, reset count and remove style

		$$notifPanel.toggle();
	} else {
		var itemsDom = [];
		for (var ii = 0, jj = 3; ii < jj; ii++) {
			var html = _getHtml(null, "notifItem", {
				originSrc: "/syracuse-ui/themes/desktop/sage/images/notificationsusers/img004.jpg",
				originLabel: "Alexandra",
				time: "3min",
				desc: "has updated a document",
				typeIcon: "fa fa-flash"
			});
			itemsDom.push(html);
		}
		itemsDom.join("");


		var notifPanelHtml = _getHtml(null, "notifPanel", {
			notifications: itemsDom
		});

		$$notifPanel = $(notifPanelHtml);

		// append notifpanel
		$(document.body).append($$notifPanel);
	}

};

/*
 *	Handles notification when a message is received
 */
var _onMessage = function(msg) {
	// Is panel already built
	var $$panel = _hasPanel();
	if ($$panel) {

		// is panel opened
		if ($$panel.is(":visible")) {

		}
		// is panel closed
		else {
			_updatePicker(true);
		}
	}

	// panel is not already built
	else {
		//TODO
	}
};


var _appendPicker = function() {

	// dom element before which trigger button will be added
	var $$siteOpener = $(".s-site-help-link");

	//notifPicker

	// building picker button
	// TODO : GET COUNT
	syra_site.notifCount = 0;
	var pickerHtml = _getHtml(null, "notifPicker", {
		count: syra_site.notifCount
	});
	var $$picker = $(pickerHtml);

	// bind function on click
	$$picker.click(_togglePanel);

	// append trigger button
	$$picker.insertBefore($$siteOpener);


	// IO CONNECTION
	var host = "http://" + window.location.host;
	console.log("CONNECTION:" + host);
	var socket = io.connect(host);

	// on message receive
	socket.on("message", function(msg) {
		console.log("message received : " + JSON.stringify(msg, null, 2));
		_onMessage(msg);
		// TODO : DISPLAY MESSAGE SOMEWHERE
	});


	// TODO : Retrieve real login

	//	var login = "admin";
	//	socket.emit("connect", login);
	//
	//
	//	//Example to send a message
	//	//send message
	//	var msg = {
	//		title: "Hello",
	//		message: "Test Message",
	//		from: login,
	//		to: ['admin', 'Teddy', 'Christophe'],
	//		severity: "info"
	//	};
	//	socket.emit("message", msg);
	//
	//
	//
	//	// NOT DONE YET ON SERVER SIDE !!
	//	// Example to retrieve events
	//	//	 var count = 30; // default to 20 if coutnis not given here !
	//	var events = socket.emit("get events", 30, function(events) {
	//		console.log("events received : " + JSON.stringify(events, null, 2));
	//	});
};

exports.appendPicker = _appendPicker;