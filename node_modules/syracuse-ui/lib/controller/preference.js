"use strict";

function _savePage(page) {
	if (page.$preferences.$link) {
		var sending = {
			$etag: 1,
			$url: syra_url.formatMenuUrl(page, page.$preferences.$link),
			content: page.$preferences.content
		};
		syra_ajax.put({
			page: page,
			url: sending.$url,
			data: sending,
			success: function(data, response, requestUrl) {}
		});
	}
}

exports.page = {
	get: function(page, $key) {
		return page.$preferences && page.$preferences.content[$key];
	},
	save: function(page, $key, data) {
		if (page.$preferences && !page.isVignettePage) {
			page.$preferences.content[$key] = data;
			_savePage(page);
		}
	},
	getField: function(field) {
		var $fields = field.page.$preferences && field.page.$preferences.content.$fields;
		return ($fields && $fields[field.$item.$bind]) || {};
	},
	saveField: function(field, data) {
		if (!field.page.isVignettePage) {
			if (data) {
				field.$preferences = data;
			}
			(field.page.$preferences.content.$fields = field.page.$preferences.content.$fields || {})[field.$item.$bind] = field.$preferences;
			_savePage(field.page);
		}
	},
	load: function(page, $representation) {
		page.$preferences = {};
		if (!page.isVignettePage) {
			page.$preferences.$link = $representation.$links && $representation.$links.$userPreferences;
			page.$preferences.content = $representation.$preferences && $representation.$preferences.content;
		}
		page.$preferences.content = page.$preferences.content || {};
	},
	reset: function(page) {
		if (page) {
			syra_alert.ask({
				$title: syra_local.aw_deleteMessageTitle,
				$message: syra_local.aw_deletePreferences,
				$newButtons: [{
					id: "yes",
					click: function() {
						if (page.$preferences) {
							page.$preferences.content = {};
							_savePage(page);
						}
						if (page.isLandingPage) {
							var $binds = Object.keys(page.boundFields);
							for (var ii = 0, jj = $binds.length; ii < jj; ii++) {
								var vignette = page.boundFields[$binds[ii]];
								vignette = vignette && vignette[0] && vignette[0].vignette;
								if (vignette && vignette.$preferences) {
									vignette.$preferences.content = {};
									_savePage(vignette);
								}
							}
						}
						for (var ii = 0, jj = page.bars.length; ii < jj; ii++) {
							page.bars[ii].clearPreferences();
						}
						var lists = syra_item.getLists(page);
						for (var ii = 0, jj = lists.length; ii < jj; ii++) {
							var list = lists[ii];
							list.paging && list.paging.clearPreferences();
							list.builder.clearPreferences && list.builder.clearPreferences();
						}
						page.resizeItem(true);
					}

				}, {
					id: "no"
				}]
			});
		}
	}
};