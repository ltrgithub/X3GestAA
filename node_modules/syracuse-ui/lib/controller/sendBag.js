"use strict";

function SendBag() {};

SendBag.prototype._findDataRecord = function($uuid) {
	var found;
	if (this.dataRecords) {
		for (var ii = 0, jj = this.dataRecords.length; ii < jj; ii++) {
			var dataRecord = this.dataRecords[ii];
			if (dataRecord.$uuid == $uuid) {
				found = {
					dataRecord: dataRecord,
					dataRecordIndex: ii
				};
				break;
			}
		}
	}
	return found;
};
SendBag.prototype._ensureFullDataSet = function(list) {
	var firstUpdated = this.dataRecords[0];
	var listDataset = syra_dataset.ensure(list);
	this.dataRecords = [];
	for (var ii = 0, jj = listDataset.length; ii < jj; ii++) {
		var dataRecord = listDataset[ii];
		var saved;
		if (firstUpdated && firstUpdated.$uuid == dataRecord.$uuid) {
			delete firstUpdated.$index;
			saved = firstUpdated;
			firstUpdated = null;
		} else {
			saved = {
				$uuid: dataRecord.$uuid
			};
		}
		this.dataRecords.push(saved);
	}
	if (firstUpdated && !firstUpdated.$isDeleted) {
		delete firstUpdated.$index;
		this.dataRecords.unshift(firstUpdated);
	}
};
SendBag.prototype.ensureRecord = function(record) {
	var dataRecord = record.dataset;
	dataRecord = dataRecord.$singleField || dataRecord;
	var found = this._findDataRecord(dataRecord.$uuid);
	if (!found) {
		if (this.dataRecords.length > 0) {
			this._ensureFullDataSet(record.list);
			found = this._findDataRecord(dataRecord.$uuid);
			if (!found) {
				found = {
					dataRecord: {
						$uuid: dataRecord.$uuid
					},
					dataRecordIndex: 0
				};
				this.dataRecords.unshift(found.dataRecord);
			}
		} else {
			found = {
				dataRecord: {
					$uuid: dataRecord.$uuid
				},
				dataRecordIndex: 0
			};
			if (record.$index !== undefined) {
				found.dataRecord.$index = record.$index;
			}
			this.dataRecords.push(found.dataRecord);
		}
	}
	return found;
};
SendBag.prototype.saveRecord = function(record, $bind, value, $index) {
	var found = this.ensureRecord(record);
	found.dataRecord[$bind] = value;
	if (this.dataRecords.length == 1) {
		found.dataRecord.$index = $index;
	}
};
SendBag.prototype.cleanServerIndex = function(list) {
	list = syra_site.clone(list);
	if (list && list.length) {
		for (var ii = 0, jj = list.length; ii < jj; ii++) {
			if (list[ii]) {
				delete list[ii].$serverIndex;
			} else {
				if (list[ii] == null) {
					list.splice(ii, 1);
					ii--;
					jj--;
				}
			}
		}
	}
	return list;
};
SendBag.prototype.save = function(page, articleParent, $bind, value) {
	while (articleParent != page) {
		if (articleParent.isRecordArticle) {
			var list = articleParent.list;
			var listSendBag = syra_form.getSendBag(list);
			if (list.$prototype.$type == "application/x-array") {
				var dataRecords = syra_dataset.ensure(list);
				if (list.isSingList) {
					(listSendBag.dataRecords = dataRecords)[articleParent.getRecordIndex()] = value;
				} else {
					var found = list.findDataRecord(articleParent.$uuid);
					var $field = list.$fields[$bind];
					if ($field && $field.$type != "application/x-array") {
						dataRecords[found.dataRecordIndex][$bind] = value;
					}
					listSendBag.saveRecord(articleParent, $bind, value, found.dataRecordIndex);
				}
				value = this.cleanServerIndex(listSendBag.dataRecords);
			} else {
				if (list.$prototype.$type == "application/x-object") {
					if (!listSendBag.dataset) {
						listSendBag.dataset = syra_dataset.ensure(list);
					}
					listSendBag.dataset[$bind] = value;
					if (list.$item.$variantItemKey) {
						value = {};
						value[list.$item.$variantItemKey] = listSendBag.dataset;
					} else {
						value = listSendBag.dataset;
					}
				}
			}
			$bind = list.$item.$bind;
			articleParent = list.articleParent;
		} else {
			if (articleParent.arrayLevel != "array") {
				if (articleParent.dataset && articleParent.dataset.$uuid !== undefined) {
					this.$uuid = articleParent.dataset.$uuid;
				}
				this[$bind] = value;
			} else {
				value = this.cleanServerIndex(value);
			}
			articleParent = articleParent.articleParent;
		}
	}
	if (articleParent.dataset && articleParent.dataset.$uuid !== undefined) {
		this.$uuid = articleParent.dataset.$uuid;
	}
	this[$bind] = value;
};
SendBag.prototype.dispose = function() {
	delete this.dataRecords;
};



exports.get = function(article, sender) {
	var page = article.page;
	var sender = sender || article.page;
	if (article.sendBag && !article.sendBag.on412 && sender.dataset.$etag != article.sendBag.$etag) {
		delete article.sendBag;
	}
	if (!article.sendBag) {
		article.sendBag = new SendBag();
		article.sendBag.$etag = sender.dataset.$etag = sender.dataset.$etag || 1;
		if (article.isRecordDataset) {
			article.sendBag.dataRecords = [];
		}

	}
	if (article.sendBag.on412) {
		article.sendBag.$etag = sender.dataset.$etag = sender.dataset.$etag || 1;
		delete article.sendBag.on412;
	}
	return article.sendBag;
};