"use strict";
_GEOCODE_SERVICE_URL = 'maps.google.com/maps/api/geocode/json';

function _proxyUrl (url, params) {
	url = '/proxy?service_url=' + escape(url) + '&service_params=';
	var urlParams = '';
	for (var p in params) {
		if (params.hasOwnProperty(p)) {
			urlParams += p;
			urlParams += '=';
			urlParams += params[p];
			urlParams += '&';
		}
	}
	urlParams = escape(urlParams);
	return url + urlParams;
}

function disambiguationListHTML (address, results, success) {
	return function() {
		results = results.slice(0, 10); //Google should return only 10 records
		var $$container = $('<div />');
		$('<h2>Results for ' + address + '</h2>').appendTo($$container);
		var $$list = $('<ul />').appendTo($$container);
		results.forEach(function(r, i) {
			var $$li = $('<li />');
			$('<a />').css({
				cursor: 'pointer', //TODO : remove this
				color: 'blue'
			}).text(r.formatted_address).click(function() {
				success(r);
			}).appendTo($$li);
			$$li.appendTo($$list);
		});
		return $$container[0];
	}
}
		
exports.GeoCode = function(settings) {

	var self = this;

	var _settings = $.extend({
		sensor :  false,
		key : 'ABQIAAAAuGJBV_jJYX7BKBBiihiZPxRml9t-z79yQ1RjZHYxzpxZVFb-HRTfJRPyLBBhndn-4srFSZsG8l-SpQ'
	}, settings);

	self.geocode = function(address, success, disambiguation, error){
		//Guards Clauses
		if (success == null || !typeof success == 'function') 
			return;
		address = address instanceof Array ? address : [address];
		if (address.length == 0) {
			success();
		}
		if (address.length == 1 && (address[0] == null || address[0] == '')) {
			success();
		}
		error = error || function() {};
		disambiguation = disambiguation || function() {};

		$.ajax({ //TODO : Change $.ajax, GeoCode should work server-side too
			url: _proxyUrl(_GEOCODE_SERVICE_URL, {
				address: address,
				sensor: _settings.sensor,
				key: _settings.key
			}),
			success: function(geoData){
				if (geoData.status !== 'OK') 
					error();
				if (geoData.results.length > 1) {
					return disambiguation({
						results: geoData.results,
						toHTML: disambiguationListHTML(address, geoData.results, success)
					});
				}
				var result = geoData.results.length == 0 ? null : geoData.results[0];
				success(result);
			},
			error: function(){
				error();
			}
		});
	};
	
	return self;
};