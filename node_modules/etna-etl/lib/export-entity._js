"use strict";

var defaultExcludedColumns = ["UPDDAT", "UPDUSR", "UPDDATTIM", "CREDAT", "CREUSR", "CREDATTIM", "UPDTICK"];

exports.run = function(_, exporter, entity, tracker, entityNames) {
	if (entity.tableName === "AENTREE") return [];
	var t0 = Date.now();
	var buildExecute = exporter.buildExecute,
		trace = exporter.trace;

	var excludedColumns = entity.excludedColumns || defaultExcludedColumns;
	var mainColumns = exporter.getTableColumns(_, entity.tableName, excludedColumns);
	var mainKey = entity.primaryKey;
	var childrenCols = Object.keys(entity.children).reduce_(_, function(_, r, childName) {
		var child = entity.children[childName];
		// The child tables have the same excluded columns as their main table except when 
		// specific columns are described
		var excludedChildColumns = child.excludedColumns || excludedColumns;
		r[childName] = exporter.getTableColumns(_, child.tableName, excludedChildColumns).filter(function(col) {
			return col !== ((child.parentKey || mainKey) + '_0');
		}).join(',');
		return r;
	}, {});

	trace && trace(entity.title + ": loading list : " + childrenCols);

	var elts = buildExecute(_, mainKey, entity.tableName, mainKey).filter(function(s) {
		if (entityNames) {
			if (entityNames.indexOf(s[mainKey]) == -1)
				return false;
		}
		return !~entity.excludedInitials.indexOf(s[mainKey][0]);
	});

	var filenames = [];
	elts.forEach_(_, exporter.config.parallel || 4, function(_, elt, i) {
		if (tracker && tracker.abortRequested) return;
		var phaseDetail = "Exporting " + entity.title + " : " + exporter.objVals(_, elt);
		if (tracker)
			tracker.phaseDetail = phaseDetail;
		trace && trace((i + 1) + "/" + elts.length + ": " + phaseDetail);
		var data = buildExecute(_, mainColumns, entity.tableName, null, elt)[0];
		Object.keys(entity.children).forEach_(_, function(_, childName) {
			var child = entity.children[childName];
			data[childName] = buildExecute(_, childrenCols[childName], child.tableName, child.orderBy, elt, child.parentKey || mainKey);
		});
		filenames.push(exporter.writeResource(_, {
			path: (exporter.moduleNames[data.MODULE] || (data.CHAPITRE ? ("CHAPTERS/" + data.CHAPITRE) : "GLOBAL")) + "/" + entity.subdir,
			name: elt[mainKey],
			data: data
		}));

	});

	trace && trace(entity.title + ": " + elts.length + " resources exported in " + Math.round((Date.now() - t0) / 1000) + " seconds");
	return filenames;
};

exports.extractSingle = function(_, exporter, entity, entityTableName) {
	var buildExecute = exporter.buildExecute;

	// Retrieve the columns name of the table (except the excluded ones)
	var mainColumns = exporter.getTableColumns(_, entity.tableName, entity.excludedColumns || defaultExcludedColumns);
	var mainKey = entity.primaryKey;

	return {
		mainKey: mainKey,
		mainKeyValue: entityTableName,
		tableName: entity.tableName,
		data: buildExecute(_, mainColumns, entity.tableName, null, {
			'CODFIC': entityTableName
		})[0]
	};
};