"use strict";
var config = {
	sql: {
		driver: "sqlServer",
		user: "sa",
		password: "nbo32tyu",
		database: "demoSbf",
		hostname: "127.0.0.1"
	},
	mongo: {
		database: 'import',
		host: '127.0.0.1',
		port: 27017,
	},
};



var o = JSON.parse('{"date": "1753-01-01T00:00:00.000Z"}');
var d = o.date;
console.log("============== " + d + " / " + d.constructor.name);



var program = require('commander');
var config = require('../index').config;
var sync = require("etna-etl/lib/sync").newSync(config.etna, config.etna.trace);

if (!config.etna) throw new Error("config.etna missing");

program
	.version("0.1.0", '-v, --version')
	.option('-e, --exportMeta', 'export metadata and push it to git')
	.option('-i, --importMeta', 'retrieve metadata from git and import it to modigdb/sql database')
	.option('-E, --exportData', 'export data from source sql database')
	.option('-I, --importData', 'import data into destination oracle database')
	.option('-t, --test', 'export a test subset')
	.parse(process.argv);


var t0 = Date.now();

if (program.exportMeta) sync.exportMetadataAndPush(_);
else if (program.importMeta) sync.importMetadata(_);
else if (program.exportData) sync.exportData(_);
else if (program.importData) sync.importData(_);
else if (program.test) {
	//	sync.exportMetadataAndPush(_, "tables", ["AABREV", "ABANK", "ATABLE"], false);
	var AWS = require('aws-sdk');
	var tunnel = require('tunnel');
	AWS.config.update({
		region: "eu-central-1",
		accessKeyId: 'AKIAIIJQTF546WRH6E6Q',
		secretAccessKey: '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',
	});

	var tunnelingAgent = tunnel.httpsOverHttp({
		proxy: {
			host: '172.31.34.9',
			port: 8080,
		}
	});

	AWS.config.update({
		httpOptions: {
			agent: tunnelingAgent
		}
	});


	var s3 = new AWS.S3();
	var s3Cfg = {
		connector: s3,
		settings: {
			bucket: 'sdeniaud.data',
			//key:'test.json',
		}
	};

	//	sync.exportMetadataAndPush(_, null, null, {skipGit:true});
	//	sync.importMetadata(_, {skipGit:true});

	/*
	var ezS3 = require('ez-s3');
	var s3Writer = ezS3.writer(_, s3Cfg.connector, s3Cfg.settings);
	s3Writer.write(_, 'coucou');
	s3Writer.write(_);
*/
	sync.exportData(_); //, s3Cfg);
	//	sync.importData(_);
	//	sync.importFilesFromS3(_, s3Cfg);
	setTimeout(~_, 5000);

} else
	program.help();

config.etna.trace && config.etna.trace("execution completed in " + Math.round((Date.now() - t0) / 1000) + " seconds");

process.exit(0);