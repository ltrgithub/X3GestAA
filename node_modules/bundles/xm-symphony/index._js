"use strict";
/// !doc
///
/// # Integration bundle for XM Symphony
///
var config = require('config');

exports.$exported = true;

var httpClient = require('@sage/syracuse-lib/src/http-client/httpClient'),
	url = require('url')


// Send request to Symphony and return response
exports.createSymphony = function(_, values) {
	values = JSON.stringify(values).replace('\"', '"'); // clean up JSON format if needed
	return sendRequest(_, values, 'https://signup.us.xmsymphony.com/api/create');
};

// Get Web API's URL from config
function getWebApiUrl(_) {
	return config.symphony.webApiUrl;
}
exports.getWebApiUrl = getWebApiUrl;

// Get Symphony Client farm ELB's URL from config
exports.getFarmElbUrl = function(_) {
	return config.symphony.farmElbUrl;
};

// Get AWS region from config
exports.getAwsRegion = function(_) {
	return config.aws.region;
};

// Create xmconnection record in Mongo
exports.createXmconnectionRecord = function(_, values) {
	var url = config.symphony.webApiUrl + '/sdata/sky/automation/production/xmconnections';
	values = JSON.stringify(values).replace('\"', '"'); // clean up JSON format if needed
	return sendRequest(_, values, url, config.symphony.webApiAuth);
};

// Send HTTP(S) request
function sendRequest(_, jsonPayload, url, auth) {
	var request = httpClient.httpRequest(_, {
		url: url,
		method: 'POST',
		rejectUnauthorized: false,
		headers: {
			'content-type': 'application/json',
			'Authorization': auth,
		}
	});

	request.write(_, jsonPayload, 'utf8');
	var resp = request.end().response(_);
	var json = resp.readAll(_);
	if (resp.statusCode != 200) {
		console.log(resp.statusCode + ': ' + json);
		console.log(resp.headers);
	} else {
		// console.log('\n\n JSON response = ' + JSON.stringify(json,undefined,2));
	}
	return json;
}
exports.sendRequest = sendRequest;