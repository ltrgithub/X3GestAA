'use strict';
/// !doc
///
/// # Verify digital signature - crystal reports
///
/// `var crypto = require("crypto")`
///
/// * `result = verifyReport(data, digSign)`  
///   Verifies the digital signature generated for the given data
/// !nodoc
exports.$exported = true;

exports.verifyReport = function(_, data, digSign) {

  var fs = require('fs');
  var fsp = require('path');

  var resp = {
    code: '1',
    value: 'false',
    message: '',
  };

  try {
    var ptRptPubKeyFile = fsp.join(__dirname, 'pk-rpt.pem');
    var dataBuffer = new Buffer(data, 'base64')
    var digSignBuffer = new Buffer(digSign, 'base64')
    var pubKey = fs.readFileSync(ptRptPubKeyFile, 'utf8');
    var retValue = verifySignature(dataBuffer, pubKey, digSignBuffer);
    resp.code = '0';
    resp.value = retValue.toString();
  } catch (ex) {
    resp.message = ex.message;
  }

  var jsonText = JSON.stringify(resp);
  return jsonText;

}

function verifySignature(data, pubKey, digSign) {
  var crypto = require("crypto");
  var verifier = crypto.createVerify('sha1WithRSAEncryption');
  verifier.update(data);

  var verResult = verifier.verify(pubKey, digSign);
  return verResult;
}