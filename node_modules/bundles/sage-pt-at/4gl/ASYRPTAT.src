Funprog SEND_DT(aTUsername, aTPassword, endPoint, certificateName, certificatePassword, publicKeyName, publicKeyPassword, debug, entityTaxRegistrationNumber, entityCompanyName, entityAddressDetail, entityCity, entityPostalCode, entityCountry, documentNumber, movementStatus, movementDate, movementType, customerTaxID, supplierTaxID, customerName, customerAddressDetail, customerCity, customerPostalCode, customerCountry, shipToAddressDetail, shipToCity, shipToPostalCode, shipToCountry, shipFromAddressDetail, shipFromCity, shipFromPostalCode, shipFromCountry, movementEndTime, movementStartTime, vehicleID, arrayOrderReferences, productDescription, quantity, unitOfMeasure, unitPrice, numOfLines, FUTURE, RETURNS, RESHEAD, RESBODY)

Value Char aTUsername
Value Char aTPassword
Value Char endPoint

Value Char certificateName
Value Char certificatePassword # ???

Value Char publicKeyName
Value Char publicKeyPassword # ???

Value Integer debug

Value Integer entityTaxRegistrationNumber
Value Char entityCompanyName

Value Char entityAddressDetail
Value Char entityCity
Value Char entityPostalCode
Value Char entityCountry

Value Char documentNumber
Value Char movementStatus # N, ou T , ou A
Value Char movementDate # formato a usar: "2013-04-04T16:42:00"
Value Char movementType # GR, ou GT, ou, GA, ou GC, ou GD

Value Char customerTaxID
Value Char supplierTaxID # ???
Value Char customerName

Value Char customerAddressDetail
Value Char customerCity
Value Char customerPostalCode
Value Char customerCountry # PT

Value Char shipToAddressDetail
Value Char shipToCity
Value Char shipToPostalCode
Value Char shipToCountry

Value Char shipFromAddressDetail
Value Char shipFromCity
Value Char shipFromPostalCode
Value Char shipFromCountry # PT

Value Char movementEndTime # formato a usar: "2013-04-04T16:42:00"
Value Char movementStartTime # formato a usar: "2013-04-04T16:42:00"
Value Char vehicleID

Value Char arrayOrderReferences()(1..) # ???
Value Char productDescription()(1..)
Value Integer quantity(1..)
Value Char unitOfMeasure()(1..)
Value Integer unitPrice(1..)
Value Integer numOfLines

Value Integer FUTURE
Value Char RETURNS
Variable Clbfile RESHEAD()
Variable Clbfile RESBODY()


# Format CONTEXT to JSON object
Local ClbFile CTX(0) : CTX = '{'
Append CTX, '"username": "' + aTUsername + '",'
Append CTX, '"password": "' + aTPassword + '",'
Append CTX, '"publicKeyName": "' + publicKeyName + '",'
Append CTX, '"certificateName": "' + certificateName + '",'
Append CTX, '"endpoint": "' + endPoint + '"'
Append CTX, '}'

# Format OPTIONS to JSON object
Local ClbFile OPT(0) : OPT = '{'
Append OPT, '"debug": ' + num$(debug)
Append OPT, '}'


# Format DATA to JSON object
Local ClbFile DATA(8) : DATA = '{'
Append DATA, '"TaxRegistrationNumber" : "' + num$(entityTaxRegistrationNumber) + '",'
Append DATA, '"CompanyName" : "' + entityCompanyName + '",'
Append DATA, '"CompanyAddress" : {'
Append DATA, '	"Addressdetail" : "' + entityAddressDetail + '",'
Append DATA, '	"City" : "' + entityCity + '",'
Append DATA, '	"PostalCode" : "' + entityPostalCode + '",'
Append DATA, '	"Country" : "' + entityCountry + '"'
Append DATA, '},'
Append DATA, '"DocumentNumber" : "' + documentNumber + '",'
Append DATA, '"MovementStatus" : "' + movementStatus + '",'
Append DATA, '"MovementDate" : "' + movementDate + '",'
Append DATA, '"MovementType" : "' + movementType + '",'
Append DATA, '"CustomerTaxID": "' + customerTaxID + '",'
Append DATA, '"CustomerAddress" : {'
Append DATA, '	"Addressdetail" : "' + customerAddressDetail + '",'
Append DATA, '	"City" : "' + customerCity + '",'
Append DATA, '	"PostalCode" : "' + customerPostalCode + '",'
Append DATA, '	"Country" : "' + customerCountry + '"'
Append DATA, '},'
Append DATA, '"CustomerName" : "' + customerName + '",'
Append DATA, '"AddressTo" : {'
Append DATA, '	"Addressdetail" : "' + shipToAddressDetail + '",'
Append DATA, '	"City" : "' + shipToCity + '",'
Append DATA, '	"PostalCode" : "' + shipToPostalCode + '",'
Append DATA, '	"Country" : "' + shipToCountry + '"'
Append DATA, '},'
Append DATA, '"AddressFrom" : {'
Append DATA, '	"Addressdetail" : "' + shipFromAddressDetail + '",'
Append DATA, '	"City" : "' + shipFromCity + '",'
Append DATA, '	"PostalCode" : "' + shipFromPostalCode + '",'
Append DATA, '	"Country" : "' + shipFromCountry + '"'
Append DATA, '},'
Append DATA, '"MovementEndTime" : "' + movementEndTime + '",'
Append DATA, '"MovementStartTime" : "' + movementStartTime + '",'
Append DATA, '"VehicleID" : "' + vehicleID + '",'


# Format LINES to JSON array
Append DATA, '"Line": ['
SEP  = ''
For I=1 To numOfLines
 Append DATA, SEP+'{'
 Append DATA, '"ProductDescription": "' + productDescription(I) + '",'
 Append DATA, '"Quantity": ' + num$(quantity(I)) + ','
 Append DATA, '"UnitOfMeasure": "' + unitOfMeasure(I) + '",'
 Append DATA, '"UnitPrice": ' + num$(unitPrice(I))
 Append DATA, '}'
 SEP = ','
Next I

Append DATA, ']'
Append DATA, '}'


Local Integer STATUSCODE
Local Char MODULE(100) : MODULE = 'bundles/sage-pt-at/atCommunication'
Local Char FONCTION(30) : FONCTION = 'sendDT'
Local Char MODE(10)
If (FUTURE = 1) : MODE = 'future' : Else : MODE = 'wait' : Endif

Local Clbfile ARGUMENTS(0)
ARGUMENTS = CTX + ',' + DATA + ',' + OPT
Local Clbfile RESBODY(0)
# Call 'sendDT' function
STATUSCODE = func ASYRWEBSER.EXEC_JS(MODULE, FONCTION, MODE, ARGUMENTS, '', 0, RETURNS, '0', RESHEAD, RESBODY)

End STATUSCODE