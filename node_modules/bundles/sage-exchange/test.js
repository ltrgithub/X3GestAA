require('streamline').register();
var assert = require('assert');
var sgex = require('bundles/sage-exchange');

var dotValues = 'Application.ApplicationID=SAGEERPX5X00000ERPLAAA5USEN' +
	',Application.LanguageID=EN' +
	',AccountQuery.Merchant.MerchantID=941457786836' +
	',AccountQuery.Merchant.MerchantKey=F6K7Y7E7C7T7';

var RequestV1 = {
	Application: {
		ApplicationID: "SAGEERPX5X00000ERPLAAA5USEN",
		LanguageID: "EN",
	},
	AccountQuery: {
		Merchant: {
			MerchantID: "941457786836",
			MerchantKey: "F6K7Y7E7C7T7",
		}
	}
};

// convert string dot notation to objects
function objectify(arr, val) {
	var obj = {};
	obj[arr[0]] = (arr.length == 1) ? val : objectify(arr.slice(1), val);
	return obj;
}

// Recursively merge properties of two objects
function merge(d, s) {
	for (var p in s) {
		d[p] = !d.hasOwnProperty(p) ? s[p] : merge(d[p], s[p]);
	}
	return d;
}

// Parse dot notation style string into object
function parseValues(values) {
	return values.split(',').reduce(function(r, val) {
		var pair = val.split('=');
		merge(r, objectify(pair[0].split('.'), pair[1]));
		return r;
	}, {});
}

var parsed = parseValues(dotValues);
console.log(parsed);
assert.deepEqual(parsed, RequestV1, "dot notation string parsed incorrectly");

// Test call to Sage Exchange
var values = 'ApplicationID=SAGEERPX5X00000ERPLAAA5USEN' +
	',LanguageID=EN' +
	',MerchantID=941457786836' +
	',MerchantKey=F6K7Y7E7C7T7';

sgex.accountQuery(function(err, result) {
	if (err) throw err;
	console.log("result=" + JSON.stringify(result));
}, values);
