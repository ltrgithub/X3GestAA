require('streamline').register();
var sagepay = require('bundles/sage-pay');

/*
 * Important! We will only support the following configurations
 * - SERVER integration
 * - Standalone token registration.
 */

var test_ = true;

var tokenRegistrationUrl;
var tokenUsageUrl;
var tokenRemovalUrl;

if (test_) {
	tokenRegistrationUrl = "https://test.sagepay.com/gateway/service/token.vsp";
	tokenUsageUrl = "https://test.sagepay.com/gateway/service/vspserver-register.vsp";
	tokenRemovalUrl = "https://test.sagepay.com/gateway/service/removetoken.vsp";
} else {
	tokenRegistrationUrl = "https://live.sagepay.com/gateway/service/token.vsp";
	tokenUsageUrl = "https://live.sagepay.com/gateway/service/vspserver-register.vsp";
	tokenRemovalUrl = "https://live.sagepay.com/gateway/service/ removetoken.vsp";
}


var proxy = {
  "host": "ecvmdevprod2",
  "port": "80",
  "excludes": [
    "PO102055",
    "localhost",
    "127.0.0.1"
  ]};

/*
 * Other proxy examples:
 	PROXY CONF NTLM : 
	{
		"host": "proxysage",
		"port": "8080",
		"auth": "ntlm",
		"user": "a-domain-user",
		"password": "XXXXXX",
		"domain": "YOURDOMAIN",
		"proxyAuthenticator": require('syracuse-httpclient/lib/proxyAuthenticator')
	
		"Vendor": "sagetest2015",}

	NO PROXY : 
	{ 
		ignoreProxy : true
	}
	// NOTE, for no proxy, the json must be ignoreProxy: true, and not proxy: {ignoreProxy: true}
 */
 

var registrationOptions = {
		url: tokenRegistrationUrl,
		//ignoreProxy: true 
		proxy: proxy
};

exports.createPaymentRequest = function createPaymentRequest () {

	// mandatory only
	var request = {
		"VPSProtocol": "3.00", // version of protocol 
		"TxType": "PAYMENT",
		"Vendor": "sagetest2015",
		"VendorTxCode": require('syracuse-core/lib/uuid').generate(''),
		"Amount": 999,
		"Currency": "GBP", // ISO4217 currecy code, EUR, GBP...
		"Description": "A description of the goods and services",
		//NotificationURL - determined later
		"Token": "1234567890",
		"BillingSurname": "Cameron",
		"BillingFirstnames": "David",
		"BillingAddress1": "10 Downing Street",
		"BillingAddress2": "Westminster",
		"BillingCity": "London",
		"BillingPostCode": "SW1A 2AA",
		"BillingCountry": "United Kingdom",
		//BillingState":
		//BillingPhone":
		"DeliverySurname": "Osborne",
		"DeliveryFirstnames": "George",
		"DeliveryAddress1": "11 Downing Street",
		//"DeliveryAddress2": ""
		"DeliveryCity": "London",
		"DeliveryPostCode": "SW1A 2AA",
		"DeliveryCountry": "United Kingdom",
		//"DeliveryState":
		//"DeliveryPhone":
		//"CustomerEMail":
		//"Basket":
		//"AllowGiftAid":
		//"ApplyAVSCV2":
		//"Apply3DSecure":
		//"Profile":
		//"BillingAgreement":
		//"AccountType":
		//"CreateToken": 0,
		//"StoreToken": 0,
		//"BasketXML":
		//"CustomerXML":
		//"SurchargeXML":
		//"VendorData":
		//"ReferrerID":
		//"Language":
		//"Website":
		//"FIRecipientAcctNumber":
		//"FIRecipientSurname":
		//"FIRecipientPostcode":
		//"FIRecipientDoB":
	};

	// var request_all_fields = {
	// 	"VPSProtocol": "3.00", // version of protocol 
	// 	"TxType": "TOKEN",
	// 	"Vendor": "sagetest2015",
	// 	"VendorTxCode": require('syracuse-core/lib/uuid').generate(''),
	// 	"Amount": 999,
	// 	"Currency": "GBP", // ISO4217 currecy code, EUR, GBP...
	// 	"Description": "A description of the goods and services",
	// 	//NotificationURL - determined later
	// 	"Token": 
	// 	"BillingSurname":
	// 	"BillingFirstnames":
	// 	"BillingAddress1":
	// 	"BillingAddress2":
	// 	"BillingCity":
	// 	"BillingPostCode":
	// 	"BillingCountry":
	// 	"BillingState":
	// 	"BillingPhone":
	// 	"DeliverySurname":
	// 	"DeliveryFirstnames":
	// 	"DeliveryAddress1":
	// 	"DeliveryAddress2":
	// 	"DeliveryCity":
	// 	"DeliveryPostCode":
	// 	"DeliveryCountry":
	// 	"DeliveryState":
	// 	"DeliveryPhone":
	// 	"CustomerEMail":
	// 	"Basket":
	// 	"AllowGiftAid":
	// 	"ApplyAVSCV2":
	// 	"Apply3DSecure":
	// 	"Profile":
	// 	"BillingAgreement":
	// 	"AccountType":
	// 	"CreateToken":
	// 	"StoreToken":
	// 	"BasketXML":
	// 	"CustomerXML":
	// 	"SurchargeXML":
	// 	"VendorData":
	// 	"ReferrerID":
	// 	"Language":
	// 	"Website":
	// 	"FIRecipientAcctNumber":
	// 	"FIRecipientSurname":
	// 	"FIRecipientPostcode":
	// 	"FIRecipientDoB":
	// };

	// if we don't specify a vendorTxCode, generate one - they must always be unique for transaction
	request.VendorTxCode = request.VendorTxCode || require('syracuse-core/lib/uuid').generate('');

	var obj = sagepay.createTokenRequest(function(err, result) {
		if (err) 
			throw err;
	}, request, {	url: tokenRegistrationUrl,
								//ignoreProxy: true 
								proxy: proxy});
	return obj;
}

exports.createTokenRequest = function createTokenRequest () {

	var request = {
		"VPSProtocol": "3.00", // version of protocol 
		"TxType": "TOKEN",
		"Vendor": "sagetest2015",
		"VendorTxCode": require('syracuse-core/lib/uuid').generate(''),
		"Currency": "GBP", // ISO4217 currecy code, EUR, GBP...
		//"NotificationURL": "http%3A%2F%2F54.148.78.219%3A8124%2Fbundles%2Fsage-pay%2Fredirect",
		"Profile": "NORMAL", // NORMAL (default) or LOW for minimalist page
		"Language": "EN" // ISO639 - Currently supported languages in the Default templates are: French, German, Spanish, Portuguese, Dutch and English.
	};

	// if we don't specify a vendorTxCode, generate one - they must always be unique for transaction
	//request.VendorTxCode = request.VendorTxCode || require('syracuse-core/lib/uuid').generate('');

	var obj = sagepay.createTokenRequest(function(err, result) {
		if (err) 
			throw err;
	}, request, {	url: tokenRegistrationUrl,
								//ignoreProxy: true 
								proxy: proxy});
	return obj;
}


exports.replyToSPSResponse = function replyToSPSResponse (request, response) {
	var obj = sagepay.replyToSPSResponse(function(err, request, response) {
		if (err) 
			throw err;
	}, request, response);

	return obj;
}

exports.getSPSResponse = function getSPSResponse (VPSTxId) {
	var obj = sagepay.getSPSResponse(function(err, request, response) {
		if (err) 
			throw err;
	}, VPSTxId);

	return obj;
}

// standalone test only!
this.createTokenRequest();
//this.createPaymentRequest(request_);
//this.replyToSPSResponse("VPSProtocol=3.00&TxType=TOKEN&VendorTxCode=bbf1b012c4cc484f9d9109cb4c4e5c41&VPSTxId=ECE309FB-F5B4-C6DD-2B9D-E283881848E3&Token=%7BE38CD136-9744-2C06-84DF-012D95E4A556%7D&Status=OK&StatusDetail=2016+%3A+The+Card+registration+has+been+successful+in+exchange+for+a+token.&CardType=VISA&Last4Digits=5559&ExpiryDate=0118&VPSSignature=21F6B212B75118862D1A8F841D8F7BE0");
//this.getSPSResponse('e');