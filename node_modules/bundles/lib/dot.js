'use strict';

// convert string dot notation to objects
function objectify(arr, val) {
	var obj = {};
	var re = /(.*)\[(\d*)\]/.exec(arr[0]);
	if (re) {
		obj[re[1]] = [];
		obj[re[1]][re[2]] = objectify(arr.slice(1), val);
	} else {
		obj[arr[0]] = (arr.length == 1) ? val : objectify(arr.slice(1), val);
	}
	return obj;
}

// Recursively merge properties of two objects
function merge(d, s) {
	for (var p in s) {
		d[p] = !d.hasOwnProperty(p) ? s[p] : merge(d[p], s[p]);
	}
	return d;
}

// Parse dot notation style string into object
exports.parse = function(values) {
	return values.split('~,~').reduce(function(r, val) {
		var pair = val.split('~=~');
		merge(r, objectify(pair[0].split('.'), pair[1]));
		return r;
	}, {});
};
