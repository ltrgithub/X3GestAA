"use strict";
var datetime = require('syracuse-core/lib/types/datetime');
var helpers = require('syracuse-core/lib/helpers');
var ez = require('ez-streams');
var config = require('config');

function createStream(_, db) {
	var streams = db.getEntity(_, "streams");
	var stream = streams.createInstance(_, db);
	stream.name(_, "Flamegraph recording " + new Date().toISOString() + '-' + process.pid);
	stream.type(_, "application/x-flamegraph");
	stream.stamp(_, datetime.now());
	return stream;
}

exports.start = function(_) {
	var adminHelpers = require('syracuse-collaboration/lib/helpers');
	var db = adminHelpers.AdminHelper.getCollaborationOrm(_);
	var stream = createStream(_, db);
	var writer = stream.content(_).createWritableStream(_, {
		"contentType": "application/x-flamegraph",
		"contentEncoding": "gzip",
	});
	stream.save(_);
	//writer = writer.pre.map(ez.mappers.debug());
	var opts = helpers.object.clone(config.streamline.flamegraph);
	opts.output = writer;

	setImmediate(function() {
		require('streamline-flamegraph/lib/record').create(opts).start();
	});
};

exports.convertRecordingToSvg = {
	$title: "Generate Graph",
	$description: "Generate SVG graph from flamegraph recording",
	$method: "POST",
	$isMethod: true,
	$execute: function(_, context, instance) {
		var dest = instance.getEntity(_).createInstance(_, instance._db);
		dest.name(_, "Flamegraph SVG graph " + instance.stamp(_));
		dest.type(_, "image/svg+xml");
		dest.stamp(_, datetime.now());
		var output = dest.content(_).createWritableStream(_, {
			"contentType": "image/svg+xml",
		});
		dest.save(_);

		instance.content(_).createReadableStream(_) //
		.transform(require('streamline-flamegraph/lib/fold').converter(config.streamline.flamegraph)) //
		.pipe(_, output);
	},
};