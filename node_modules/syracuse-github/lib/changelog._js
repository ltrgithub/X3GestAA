"use strict";

var streams = require("streamline-streams");

function _makeUrl(owner, repo, objName) {
	return "https://api.github.com/repos/" + owner + "/" + repo + "/" + objName;
}

exports.makeChangelog = function(_, owner, repo) {
	function _getFromGithub(_, path) {
		var opt = {
			url: _makeUrl(owner, repo, path),
			method: "GET",
			user: "sagex3ci",
			password: "5@g3xExu"
		};
		var req = streams.httpRequest(opt).end();
		var res = req.response(_);
		if (res.statusCode != 200) {
			throw new Error("Git http error " + res.statusCode + ": " + res.readAll(_));
		} else return JSON.parse(res.readAll(_));
	}
	// fetch tags
	var tags = _getFromGithub(_, "tags");
	var result = tags.map(function(t) {
		return {
			name: t.name,
			commit_sha: t.commit && t.commit.sha
		};
	});
	// fetch commits
	var commits = _getFromGithub(_, "commits");
	result = commits.filter(function(c) {
		return !c.parents || (c.parents.length < 2);
	}).map(function(c) {
		var r = {
			sha: c.sha
		};
		if (c.committer) r.login = c.committer.login;
		if (c.commit && c.commit.committer) {
			r.committerName = c.commit.committer.name;
			r.date = c.commit.committer.date;
			r.message = c.commit.message;
		}
		return r;
	});
	//
	return result;
};