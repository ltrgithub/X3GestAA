"use strict";

var adminHelper = require("syracuse-collaboration/lib/helpers").AdminHelper;
var streams = require("streamline/lib/streams/server/streams");
var locale = require("syracuse-core/lib/locale");
var perfmon = require('syracuse-perfmon');

var getDefaultProxyConf = exports.getDefaultProxyConf = function(_) {
	var db = adminHelper.getCollaborationOrm(_);
	var model = db.model;
	var entity = model.getEntity(_, "setting");
	var instance = entity.fetchInstances(_, db)[0];

	// crnit: better return null than throw
	// if (!instance) throw new Error(locale.format(module, "settingsNotFound"));
	if (!instance) return null;
	//
	if (instance.proxy(_)) {
		var proxyConf = instance.proxyConf(_);
		if (proxyConf) return proxyConf.toJSON(_);
	}
	return;
};

exports.httpRequest = function(_, options) {
	if (options && !options.proxy) {
		options.proxy = getDefaultProxyConf(_);
	}
	var req = streams.httpRequest(options).proxyConnect(_);
	var originalResponse = req.response;
	req.response = function(_) {
		var timing = perfmon.start(module, "httpClient.response", options.url);
		try {
			var resp = originalResponse.call(req, _);
			if (options && options.proxyAuthenticate && resp.statusCode === 407) {
				throw new Error(locale.format(module, "proxyAuthFailed", resp.statusCode));
			}
			return resp;
		} finally {
			timing.end();
		}
	};
	return req;
};